[
 {
  "input": "In my last video, I posed the following question.",
  "translatedText": "지난 동영상에서 저는 다음과 같은 질문을 던졌습니다.",
  "model": "DeepL",
  "from_community_srt": "3Blue1Brown - \"A Curious Pattern Indeed\" 원 위에서 두 점을 선택하고 직선을 그립니다.",
  "n_reviews": 0,
  "start": 3.78,
  "end": 6.42
 },
 {
  "input": "If you take n points on a circle, then connect every pair of them with a line, how many sections do these lines cut the circle into?",
  "translatedText": "원에서 n개의 점을 취하고 모든 쌍을 선으로 연결하면, 이 선들은 원을 몇 개의 단면으로 나눌 수 있을까요?",
  "model": "DeepL",
  "from_community_srt": "둘러싸인 공간은 2 개로 나뉘어져 있습니다. 이 시점에서 세 번째 점를 추가하면 두 개의 공간이 추가됩니다.",
  "n_reviews": 0,
  "start": 6.96,
  "end": 13.74
 },
 {
  "input": "What was strange is that when n is less than 6, and when n is 10 for some reason, the answer is always a power of 2.",
  "translatedText": "이상한 점은 n이 6보다 작을 때와 어떤 이유로 n이 10일 때 항상 2의 거듭제곱으로 답이 나온다는 점입니다.",
  "model": "DeepL",
  "from_community_srt": "이 선들이 달리는 공간은 4 개로 갈라졌습니다. 계속해서 네 번째 점과 직선으로 그려진 세 개의 선을 더합니다.",
  "n_reviews": 0,
  "start": 14.68,
  "end": 20.64
 },
 {
  "input": "But for all other values of n, the answer seems completely unrelated to powers of 2.",
  "translatedText": "그러나 다른 모든 n 값의 경우, 답은 2의 거듭제곱과 전혀 관련이 없는 것처럼 보입니다.",
  "model": "DeepL",
  "from_community_srt": "이제 분리된 공간의 수는 총 8 개입니다.",
  "n_reviews": 0,
  "start": 21.2,
  "end": 25.14
 },
 {
  "input": "What I love about this problem is that it brings together many disparate concepts, counting functions, graphs, one of Euler's most famous equations, and Pascal's triangle.",
  "translatedText": "제가 이 문제를 좋아하는 이유는 여러 가지 이질적인 개념, 수 세기 함수, 그래프, 오일러의 가장 유명한 방정식 중 하나, 파스칼의 삼각형 등을 한데 모았다는 점입니다.",
  "model": "DeepL",
  "from_community_srt": "다섯 번째 점과 네 줄을 이전의 패턴을 지원하면서 추가합니다. 나뉘어진 부분들을 세보면, 이제 16개가 있습니다. 이 두 배의 패턴은 튼튼한 것처럼 보이지만, 그러나 한 단계 더 나아가면 6번째는 31이 됩니다.",
  "n_reviews": 0,
  "start": 25.14,
  "end": 34.46
 },
 {
  "input": "You might be wondering if changing the placement of points changes the number of sections.",
  "translatedText": "포인트 배치를 변경하면 섹션 수가 변경되는지 궁금할 수 있습니다.",
  "model": "DeepL",
  "from_community_srt": "잠깐만.. 뭐? 1, 2, 4,",
  "n_reviews": 0,
  "start": 36.4,
  "end": 40.24
 },
 {
  "input": "It actually can.",
  "translatedText": "실제로 가능합니다.",
  "model": "DeepL",
  "from_community_srt": "8, 16, ...",
  "n_reviews": 0,
  "start": 40.76,
  "end": 41.6
 },
 {
  "input": "For instance, watch how this small region in the middle disappears if we adjust things so that three lines go through the same point.",
  "translatedText": "예를 들어, 세 개의 선이 같은 지점을 통과하도록 조정하면 가운데의 작은 영역이 어떻게 사라지는지 살펴보세요.",
  "model": "DeepL",
  "from_community_srt": "31? 여기서 무슨일이 일어난거지? 왜 패턴이 2의 제곱으로 시작하다가, 여섯 번째 반복에서 단 하나만 빠져 나갈 수 있습니까?",
  "n_reviews": 0,
  "start": 42.0,
  "end": 48.36
 },
 {
  "input": "But if we add the restriction that no three lines can go through the same point, the number of sections depends only on the number of points, not their placement, as you're about to see.",
  "translatedText": "그러나 세 개의 선이 같은 지점을 통과할 수 없다는 제한을 추가하면 곧 보게 될 것처럼 섹션의 수는 배치가 아닌 점의 수에 따라 달라집니다.",
  "model": "DeepL",
  "from_community_srt": "그것은 임의적으로 보입니다. 왜 1, 2, 4, 8, 16, 32, 63가 아니고? 아니면 1, 2,",
  "n_reviews": 0,
  "start": 48.98,
  "end": 57.12
 },
 {
  "input": "I think it's fair to call this a hard problem, and in solving hard problems, it's a good idea to ask simpler questions about the same setup.",
  "translatedText": "저는 이것을 어려운 문제라고 부르는 것이 타당하다고 생각하며, 어려운 문제를 해결할 때는 같은 설정에 대해 더 간단한 질문을 하는 것이 좋습니다.",
  "model": "DeepL",
  "from_community_srt": "4, 8, 15? 이걸 계속하면, 숫자에 따른 공간수는 2의 제곱에서 더욱 멀어집니다. 256에 도달하는 경우를 제외하고.",
  "n_reviews": 0,
  "start": 57.88,
  "end": 64.7
 },
 {
  "input": "In this case, I have two questions for you.",
  "translatedText": "이 경우 두 가지 질문이 있습니다.",
  "model": "DeepL",
  "from_community_srt": "그러나 이것은 단지 그 패턴이 실제로 무엇인지에 대한 질문을 요구합니다.",
  "n_reviews": 0,
  "start": 65.18,
  "end": 67.02
 },
 {
  "input": "1.",
  "translatedText": "1.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 67.42,
  "end": 67.62
 },
 {
  "input": "How many lines are there?",
  "translatedText": "몇 개의 라인이 있나요?",
  "model": "DeepL",
  "from_community_srt": "그리고 왜 2의 제곱에서 벗어나는지.",
  "n_reviews": 0,
  "start": 68.02,
  "end": 69.52
 },
 {
  "input": "And 2.",
  "translatedText": "그리고 2.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 69.82,
  "end": 70.2
 },
 {
  "input": "At how many points do these lines intersect within the circle?",
  "translatedText": "이 선들은 원 안에서 몇 개의 지점에서 교차하나요?",
  "model": "DeepL",
  "from_community_srt": "다음 몇 편의 비디오에서 나는 무엇이 일어나고 있는지 설명 할 것이고,",
  "n_reviews": 0,
  "start": 70.64,
  "end": 73.88
 },
 {
  "input": "For the first question, every line corresponds uniquely with a pair of points, and likewise every pair of points gives us a unique line.",
  "translatedText": "첫 번째 질문의 경우 모든 선은 한 쌍의 점과 고유하게 대응하며, 마찬가지로 모든 점 쌍은 우리에게 고유한 선을 제공합니다.",
  "model": "DeepL",
  "from_community_srt": "여기에는 나의 가장 좋아하는 증명 중 하나가 포함될 것입니다. 그러나 흥미로운 문제는 공유되고, 숙고되고 토론 될 가치가 있습니다. 그들의 비밀이 빨리 밝혀지기 전에.",
  "n_reviews": 0,
  "start": 75.06,
  "end": 82.0
 },
 {
  "input": "Luckily, counting the number of pairs in a set is common enough in math that we have specific notation for it, n choose 2, which we evaluate as n times n minus 1 divided by 2.",
  "translatedText": "다행히도 세트의 쌍 수를 세는 것은 수학에서 충분히 일반적이기 때문에 n은 2를 선택하고, n에서 1을 뺀 값을 2로 나눈 값으로 평가하는 식으로 특정 표기가 있습니다.",
  "model": "DeepL",
  "from_community_srt": "그래서 내 설명을 애니메이션으로 작업하는 동안 생각해 보시기 바랍니다. 분명하게 하기 위해서, 질문은 이것입니다: 만약 당신이 원에 몇개의 점을 찍고, 두점을 선으로 연결한다면, 얼마나 많은 선으로 잘린 조각들이 원안에 존재할까요?",
  "n_reviews": 0,
  "start": 83.14,
  "end": 94.24
 },
 {
  "input": "To see where this formula comes from, notice that you have n options for the first element of the pair, which we multiply by the n minus 1 remaining options for the second element, but this would double count each pair, so we divide by 2.",
  "translatedText": "이 공식의 출처를 확인하려면 쌍의 첫 번째 요소에 n개의 옵션이 있고, 여기에 두 번째 요소의 나머지 옵션에서 1을 뺀 n을 곱하면 되지만 이렇게 하면 각 쌍을 두 배로 계산하게 되므로 2로 나눕니다.",
  "model": "DeepL",
  "from_community_srt": "그 점들이 어디에 존재하는지가 중요한가요? 그리고 왜 6개보다 적은 점에 대해서 2의 제곱과 답이 일치할까요?",
  "n_reviews": 0,
  "start": 94.96,
  "end": 106.94
 },
 {
  "input": "For instance, when n equals 7, 7 choose 2 is 7 times 6 over 2, or 21, so there are 21 pairs of points, and hence 21 lines.",
  "translatedText": "예를 들어 n이 7일 때 2를 선택하면 2에 6을 곱한 7, 즉 21이 되므로 21쌍의 점이 있으므로 21개의 선이 생깁니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 108.0,
  "end": 117.26
 },
 {
  "input": "With, say, 100 points, counting lines directly would be a nightmare, but we can compute it as 100 choose 2, which is 100 times 99 divided by 2, or 4950.",
  "translatedText": "예를 들어 100점이라면 직접 줄을 세는 것은 악몽이지만, 100을 2로 나눈 100에 99를 곱한 값, 즉 4950을 선택하면 계산할 수 있습니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 118.5,
  "end": 129.04
 },
 {
  "input": "The number of intersection points is a bit more subtle.",
  "translatedText": "교차점의 수는 조금 더 미묘합니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 129.88,
  "end": 132.28
 },
 {
  "input": "While every intersection point corresponds with a unique pair of lines, there are many pairs of lines that don't intersect within the circle, so we can't just count the pairs of lines.",
  "translatedText": "모든 교차점은 고유한 선 쌍에 해당하지만, 원 안에는 교차하지 않는 선 쌍이 많기 때문에 선 쌍만 셀 수는 없습니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 132.72,
  "end": 141.1
 },
 {
  "input": "What we can do, though, is associate each intersection point with a set of 4 points on the circle, since this association goes the other way around, in that every quadruplet of points gives a unique intersection point.",
  "translatedText": "하지만 우리가 할 수 있는 것은 각 교차점을 원의 4점 집합과 연관시키는 것입니다. 이 연관성은 모든 4분의 1의 점이 고유한 교차점을 제공한다는 점에서 반대 방향으로 진행되기 때문입니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 141.74,
  "end": 153.7
 },
 {
  "input": "Just look at that, isn't that elegant?",
  "translatedText": "저것 좀 보세요, 우아하지 않나요?",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 154.28,
  "end": 155.68
 },
 {
  "input": "This means the number of intersection points is the same as the number of quadruplets of our n starting points.",
  "translatedText": "즉, 교차점의 수는 n개의 시작점의 4배수와 동일합니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 156.52,
  "end": 161.76
 },
 {
  "input": "The function n choose 4 counts quadruplets in a set of size n, and you evaluate it by taking n times n minus 1 times n minus 2 times n minus 3, all divided by 1 times 2 times 3 times 4.",
  "translatedText": "함수 n은 크기 n의 집합에서 4곱셈 4개를 선택하고, 이를 모두 1×2×3×4로 나눈 값인 n×1×1×2×2×3을 취하여 평가합니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 161.76,
  "end": 172.74
 },
 {
  "input": "The derivation of this formula is similar to that of n choose 2.",
  "translatedText": "이 공식의 도출은 n 선택 2의 공식과 유사합니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 173.58,
  "end": 176.64
 },
 {
  "input": "You multiply in the number of options you have for each successive entry, then divide by the extent to which you've overcounted.",
  "translatedText": "각 연속 항목에 사용할 수 있는 옵션의 수를 곱한 다음 초과 계산한 범위로 나눕니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 177.1,
  "end": 183.9
 },
 {
  "input": "For instance, with n equals 4, 4 choose 4 is 1, and indeed, there's just one intersection point.",
  "translatedText": "예를 들어 n이 4인 경우 4를 선택하면 4는 1이 되고, 실제로 교차점은 하나뿐입니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 186.94,
  "end": 192.56
 },
 {
  "input": "6 choose 4 is 15, so when n equals 6, there are 15 intersection points.",
  "translatedText": "6 선택 4는 15이므로 n이 6이면 15개의 교차점이 있습니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 193.14,
  "end": 197.46
 },
 {
  "input": "And if n were 100, even though the prospect of counting intersection points is horrifying, we can nevertheless deduce that there will be 3,921,225 of them.",
  "translatedText": "n이 100이라면 교차점을 세는 것은 끔찍한 일이지만, 그럼에도 불구하고 3,921,225개가 있을 것이라고 추론할 수 있습니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 198.08,
  "end": 208.52
 },
 {
  "input": "Now how does this help us count sections in the circle, you might ask?",
  "translatedText": "이제 이것이 원 안의 섹션을 세는 데 어떻게 도움이 될까요?",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 209.62,
  "end": 212.82
 },
 {
  "input": "Well, it will once we consider graphs and Euler's formula.",
  "translatedText": "그래프와 오일러의 공식을 생각해 보면 알 수 있습니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 212.82,
  "end": 216.44
 },
 {
  "input": "No, no, not function graphs, and not that e to the pi i stuff.",
  "translatedText": "아니요, 함수 그래프도 아니고, 파이에 e를 붙이는 것도 아닙니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 217.02,
  "end": 219.7
 },
 {
  "input": "The word graph can also refer to a set of points, referred to as vertices, along with a set of lines connecting some of these points, which we call edges.",
  "translatedText": "그래프라는 단어는 정점이라고 하는 점의 집합과 이러한 점 중 일부를 연결하는 선의 집합을 가리키기도 하는데, 이를 에지라고 합니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 220.24,
  "end": 228.06
 },
 {
  "input": "Notice, if we count the number of vertices in this graph, then subtract the number of edges, then add the number of regions that this graph cuts space into, along with that outer region, we get 2.",
  "translatedText": "이 그래프의 정점 수를 세고 가장자리 수를 뺀 다음 이 그래프가 공간을 분할하는 영역과 그 바깥쪽 영역의 수를 더하면 2가 됩니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 229.12,
  "end": 240.24
 },
 {
  "input": "If we do the same thing with this other graph, well, we get 2 again.",
  "translatedText": "이 다른 그래프에 대해서도 같은 작업을 수행하면 다시 2가 나옵니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 241.08,
  "end": 246.12
 },
 {
  "input": "This isn't a coincidence, you could do this with any graph, and as long as your edges don't intersect each other, the answer is always 2.",
  "translatedText": "이것은 우연이 아니며, 어떤 그래프로도 이 작업을 수행할 수 있으며 가장자리가 서로 교차하지 않는 한 답은 항상 2입니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 250.18,
  "end": 257.42
 },
 {
  "input": "If edges could intersect, then you could just change the number of regions without changing the number of vertices and edges, so of course it would be nonsense.",
  "translatedText": "가장자리가 교차할 수 있다면 정점과 가장자리의 수를 변경하지 않고 영역의 수만 변경하면 되므로 당연히 말도 안 되는 일이죠.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 258.3,
  "end": 264.6
 },
 {
  "input": "This relation is known as Euler's characteristic formula, and it's easy to see where the name comes from, since Euler's is German for beautiful.",
  "translatedText": "이 관계를 오일러의 특성 공식이라고 하는데, 오일러는 독일어로 아름답다는 뜻이므로 그 이름이 어디서 유래했는지 쉽게 알 수 있습니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 265.66,
  "end": 272.58
 },
 {
  "input": "If you're curious, the reason we write f for the number of regions is because the formula traditionally refers to the number of vertices, edges, and faces of 3D polyhedra.",
  "translatedText": "궁금하신 분들을 위해 영역의 수에 f를 쓰는 이유는 이 공식이 전통적으로 3D 다면체의 꼭짓점, 가장자리, 면의 수를 의미하기 때문입니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 273.28,
  "end": 282.12
 },
 {
  "input": "In another video, I'll explain why this is true, but here, let's just use it to solve our circle problem.",
  "translatedText": "다른 동영상에서 그 이유를 설명해드리겠지만 여기서는 원 문제를 푸는 데만 사용하겠습니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 282.64,
  "end": 287.38
 },
 {
  "input": "Our setup is already a graph, with n vertices and n choose 2 edges, one between each pair of points, but we cannot apply Euler's characteristic formula directly, since our edges intersect many times, n choose 4 times to be exact.",
  "translatedText": "우리가 설정한 그래프는 이미 정점이 n개이고 각 쌍의 점 사이에 하나씩 2개의 가장자리를 선택하지만, 가장자리가 여러 번 교차하기 때문에 정확히 4번을 선택해야 하므로 오일러의 특성 공식을 직접 적용할 수 없습니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 287.98,
  "end": 300.8
 },
 {
  "input": "However, if we consider each intersection point to be a vertex, meaning our original lines must be chopped up at these points, and if we also include the segments of the circle connecting our n outer points as new edges, we have a graph perfectly suited for Euler's formula.",
  "translatedText": "그러나 각 교차점을 꼭지점으로 간주하면, 즉 원래의 선이 이 지점에서 잘려야 하고, N개의 바깥쪽 점을 연결하는 원의 세그먼트도 새로운 가장자리로 포함하면 오일러의 공식에 완벽하게 맞는 그래프를 얻을 수 있습니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 301.38,
  "end": 315.74
 },
 {
  "input": "In particular, the number of regions in this picture is the number of edges in our new graph minus the number of vertices plus 2.",
  "translatedText": "특히 이 그림에서 영역의 수는 새 그래프의 가장자리 수에서 꼭지점 수를 뺀 값에 2를 더한 값입니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 316.34,
  "end": 324.08
 },
 {
  "input": "Since our new graph retains the n original vertices and adds on another n choose 4 for intersection points, we replace the minus v term with minus n minus n choose 4.",
  "translatedText": "새 그래프는 원래 꼭지점 n개를 유지하고 교차점에 대해 또 다른 n 선택 4를 추가하므로, 마이너스 v 항을 마이너스 n 선택 4로 대체합니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 324.92,
  "end": 335.16
 },
 {
  "input": "To find the number of edges, note that the intersection points can be seen as adding two edges each, since each one takes two existing lines and then cuts them into four smaller pieces.",
  "translatedText": "가장자리의 개수를 구하려면 교차점은 각각 기존 선 두 개를 가져와서 네 개의 작은 조각으로 자르기 때문에 각각 두 개의 가장자리를 추가하는 것으로 볼 수 있습니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 336.3,
  "end": 346.54
 },
 {
  "input": "For example, three lines intersecting at two points would be cut into 3 plus 2 times 2 equals 7 smaller pieces.",
  "translatedText": "예를 들어, 두 지점에서 교차하는 세 개의 선은 3에 2를 곱한 2로 잘라 7개의 작은 조각으로 만듭니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 347.64,
  "end": 354.38
 },
 {
  "input": "Four lines intersecting at three points would be cut into 4 plus 2 times 3 equals 10 smaller pieces.",
  "translatedText": "세 지점에서 교차하는 네 개의 선은 4에 2를 곱한 3으로 잘려서 10개의 작은 조각이 됩니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 355.14,
  "end": 361.06
 },
 {
  "input": "And in our circle diagram, our n choose 2 lines intersecting at n choose 4 points are cutting to n choose 2 plus 2 times n choose 4 smaller pieces, plus another n for the circle segments we're now considering to be edges.",
  "translatedText": "그리고 원 다이어그램에서 n 선택 4 지점에서 교차하는 n 선택 2 선은 이제 가장자리로 간주하는 원 세그먼트에 대해 n 선택 2와 작은 조각 n 선택 4의 두 배를 더한 n 개로 잘립니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 361.62,
  "end": 374.38
 },
 {
  "input": "Going back to our formula, we can replace E with n choose 2 plus 2 times n choose 4 plus n.",
  "translatedText": "다시 공식으로 돌아가서, E를 n 선택 2 더하기 2 곱하기 n 선택 4 더하기 n으로 바꿀 수 있습니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 375.08,
  "end": 381.26
 },
 {
  "input": "Combining like terms, we see that our graph cuts the 2d plane into 2 plus n choose 2 plus n choose 4 pieces.",
  "translatedText": "같은 항을 결합하면 그래프가 2차원 평면을 2 더하기 n 선택 2 더하기 n 선택 4 조각으로 잘라낸다는 것을 알 수 있습니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 381.26,
  "end": 388.06
 },
 {
  "input": "Since we're concerned with counting the regions inside the circle, we can disregard that outer region and write our final answer as 1 plus n choose 2 plus n choose 4.",
  "translatedText": "우리는 원 안의 영역을 세는 데 관심이 있으므로 바깥쪽 영역은 무시하고 최종 답은 1 더하기 n 선택 2 더하기 n 선택 4로 작성할 수 있습니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 389.22,
  "end": 397.4
 },
 {
  "input": "Great, we found the answer!",
  "translatedText": "좋아요, 답을 찾았습니다!",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 398.3,
  "end": 399.46
 },
 {
  "input": "But why on earth does this formula relate to powers of 2 for n less than 6, then again when n equals 10?",
  "translatedText": "그런데 도대체 왜 이 공식이 n이 6보다 작을 때는 2의 거듭제곱과 관련이 있고, n이 10보다 클 때는 다시 2의 거듭제곱과 관련이 있을까요?",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 399.84,
  "end": 405.62
 },
 {
  "input": "It's not just a coincidence, it has to do with Pascal's triangle.",
  "translatedText": "이는 단순한 우연이 아니라 파스칼의 삼각형과 관련이 있습니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 406.32,
  "end": 409.24
 },
 {
  "input": "Pascal's triangle is constructed like this.",
  "translatedText": "파스칼의 삼각형은 다음과 같이 구성됩니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 409.92,
  "end": 412.12
 },
 {
  "input": "Each term is the sum of the two terms above it.",
  "translatedText": "각 용어는 그 위에 있는 두 용어의 합입니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 412.64,
  "end": 415.18
 },
 {
  "input": "If you add up each row, you get a successive power of 2.",
  "translatedText": "각 행을 더하면 연속 거듭제곱이 2가 됩니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 415.82,
  "end": 419.02
 },
 {
  "input": "To convince yourself of this, notice that each term is added into the following row twice, so the sum of each row should be twice the sum of the row before it.",
  "translatedText": "이를 확인하려면 각 용어가 다음 행에 두 번 추가되므로 각 행의 합은 이전 행의 합의 두 배가 되어야 합니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 421.36,
  "end": 429.3
 },
 {
  "input": "The function n choose k is closely related to this triangle, in that the kth entry of the nth row where counting starts at 0 is always n choose k.",
  "translatedText": "n 선택 k 함수는 이 삼각형과 밀접한 관련이 있는데, 계산이 0에서 시작되는 n번째 행의 k번째 항목이 항상 n 선택 k라는 점에서 그렇습니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 430.1,
  "end": 438.34
 },
 {
  "input": "For instance, to find 5 choose 3 in the triangle, count down to the 0, 1, 2, 3, 4, 5th row, then go in 0, 1, 2, 3, and indeed 5 choose 3 equals 10.",
  "translatedText": "예를 들어 삼각형에서 3을 선택하는 5를 찾으려면 0, 1, 2, 3, 4, 5번째 줄까지 카운트다운한 다음 0, 1, 2, 3으로 들어가면 실제로 5를 선택하는 3은 10이 됩니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 438.88,
  "end": 449.76
 },
 {
  "input": "This means that the answer to our circle problem for n points is the sum of the 0th, 2nd, and 4th entries of the nth row of Pascal's triangle.",
  "translatedText": "즉, n점에 대한 원 문제의 답은 파스칼 삼각형의 n번째 행의 0번째, 2번째, 4번째 항목의 합입니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 450.76,
  "end": 458.92
 },
 {
  "input": "For instance, if n equals 5, we can see that we just have to add 1, 10, and 5.",
  "translatedText": "예를 들어 n이 5이면 1, 10, 5를 더하기만 하면 된다는 것을 알 수 있습니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 459.48,
  "end": 464.56
 },
 {
  "input": "Since each term is the sum of the two above it, this is the same as adding the entire 4th row, which we know is a power of 2.",
  "translatedText": "각 항은 그 위에 있는 두 항의 합이므로 4번째 행 전체를 더하는 것과 같으며, 우리가 알고 있는 2의 거듭제곱입니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 465.0,
  "end": 471.42
 },
 {
  "input": "Likewise, for smaller values of n, the answer is going to be the sum of the n minus 1st row, then hence a power of 2.",
  "translatedText": "마찬가지로 n의 값이 더 작은 경우에는 n에서 1열을 뺀 값의 합이 답이 되므로 2의 거듭제곱이 됩니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 472.16,
  "end": 477.7
 },
 {
  "input": "However, when n equals 6 and we relate the terms to the 5th row, notice that we're not adding the entire row, since we missed that last term, so we only get 31.",
  "translatedText": "그러나 n이 6이고 항을 5번째 행과 관련시킬 때 마지막 항을 놓쳤기 때문에 전체 행을 더하지 않으므로 31만 얻게 됩니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 479.46,
  "end": 489.56
 },
 {
  "input": "When n equals 10, we're summing precisely half of the 9th row, so the answer is half of 2 to the 9th, which is 2 to the 8th.",
  "translatedText": "n이 10이면 9번째 행의 정확히 절반을 더하는 것이므로 답은 2에서 9번째 행의 절반인 2에서 8번째 행입니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 490.28,
  "end": 498.76
 },
 {
  "input": "So to recap, first, turn our diagram into a graph suitable for Euler's characteristic formula by adding all of the intersection points as vertices and cutting up all the edges.",
  "translatedText": "요약하자면, 먼저 모든 교차점을 꼭지점으로 추가하고 모든 가장자리를 잘라내어 다이어그램을 오일러의 특성 공식에 적합한 그래프로 변환합니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 498.76,
  "end": 508.24
 },
 {
  "input": "Next, count the number of lines and intersection points by relating them to pairs and quadruplets of our starting points.",
  "translatedText": "다음으로, 선과 교차점의 수를 시작점의 쌍과 사분면과 연관시켜 계산합니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 508.74,
  "end": 515.1
 },
 {
  "input": "Then finally, use Euler's formula to deduce the number of sections and then relate this to powers of 2 using Pascal's triangle.",
  "translatedText": "마지막으로 오일러의 공식을 사용하여 단면의 수를 추론한 다음 파스칼의 삼각형을 사용하여 이를 2의 거듭제곱과 연관시킵니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 515.1,
  "end": 522.18
 }
]