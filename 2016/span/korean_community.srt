1
00:00:12,420 --> 00:00:18,000
지난번 비디오에서 벡터 덧셈과 스칼라 곱셈과 함께 벡터 좌표를 설명하였습니다.
(자막역자: 원본자막 타이밍이 동영상보다 한박자 빠릅니다. 그래서 자막이 음성보다 빨리나옵니다.ㅜ;)

2
00:00:18,000 --> 00:00:23,000
예를들어 숫자쌍과 2차원 벡터라는 개념들 사이를 오가면서 말이죠.

3
00:00:23,080 --> 00:00:27,040
이제, 여러분들에게 벡터 좌표가 많이 익숙해 익숙해졌다고 생각합니다.

4
00:00:27,100 --> 00:00:30,060
그런데 이런 좌표들을 다른방식으로 볼 수 있는 흥미로운 또 다른 관점이 있습니다.

5
00:00:30,080 --> 00:00:32,060
선형대수에서 꽤나 중심에 해당하는 것인데요.

6
00:00:32,100 --> 00:00:37,120
[3, -2] 와 같은 벡터를 묘사하는 숫자쌍이 있을때

7
00:00:37,120 --> 00:00:39,880
저는 각 좌표값을 하나의 스칼라(scalar)로써 생각해봤으면 합니다.

8
00:00:39,920 --> 00:00:43,820
즉, 각각 좌표값이 벡터를 어떻게 늘리고 줄일지에 대한 정보라는 것이죠.

9
00:00:43,820 --> 00:00:49,080
xy 좌표계에서, 매우 특별한 두가지 벡터가 있습니다.

10
00:00:49,080 --> 00:00:55,140
바로, 오른쪽 방향의 길이 1 벡터로 "아이-헷(i-hat)" 이라 부르며, x 축의 단위벡터(unit vector)라고도 합니다.

11
00:00:55,180 --> 00:00:57,920
그리고 위쪽 방향으로 길이 1인 벡터를 "제이-헷(j-hat)" 이라고 부르거나

12
00:00:57,920 --> 00:01:00,980
y 축의 단위벡터(unit vector)라고 합니다.

13
00:01:00,980 --> 00:01:09,160
이제, 벡터의 x 좌표값을 스칼라로서 i-hat 벡터를 늘리고 줄인다고 생각해봅시다. 팩터값 3 을 가지고 말이죠.

14
00:01:09,160 --> 00:01:15,180
그리고 y 좌표값도 j-hat 벡터를 늘리고 줄이는 스칼라고 생각해봅시다. 방향을 반대로 뒤집고 팩터 2 만큼 늘리는 것이죠.

15
00:01:15,180 --> 00:01:21,060
이런 방식에서 보면, 이 벡터를 2 개의 또 다른 벡터들을 스케일링하고 더한 결과로 볼 수 있습니다.

16
00:01:21,060 --> 00:01:25,600
단순히 스케일링 된 두 벡터의 합이라고 보는 개념은 매우 중요한 컨셉입니다.

17
00:01:25,600 --> 00:01:31,160
그런데 i-hat, j-hat 이라는 두 벡터는 매우 특별한 이름을 가지고 있는데요.

18
00:01:31,160 --> 00:01:33,460
이 둘을 좌표계의 기저(basis) 라고 부릅니다.

19
00:01:33,500 --> 00:01:38,000
즉, 설명하자면, 좌표값을 스칼라로 생각해보면,

20
00:01:38,120 --> 00:01:41,880
기저(basis) 벡터들은 그 스칼라(좌표값)가 스케일링 하는 대상이 됩니다.

21
00:01:41,900 --> 00:01:46,360
나중에 다루겠지만, 좀 더 기술적은 정의를 보자면,

22
00:01:46,360 --> 00:01:51,560
우리의 좌표계를 이 두개의 특별한 기저벡터로 구성(framing) 하는 것입니다.

23
00:01:51,560 --> 00:01:54,200
이렇게 하면 미묘하면서도 매우 흥미로운 것이 발생하는데요.

24
00:01:54,200 --> 00:02:00,540
만약 다른 기저 벡터를 선택한다면, 또 하나의 완전한 새 좌표계를 얻게됩니다.

25
00:02:00,580 --> 00:02:03,940
예를 들어, 위-오른쪽을 가리키는 벡터가 있고,

26
00:02:04,020 --> 00:02:07,220
아래-오른쪽을 가리키는 벡터가 있다고 할 때,

27
00:02:07,220 --> 00:02:13,880
다른 모든 벡터들을 이 두 백터에 적절한 두 개의 스칼라를 선택함으로써 표현할 수 있다는 것입니다.

28
00:02:13,880 --> 00:02:17,540
각 스칼라는 각 기저벡터 하나를 스케일링하는 것이고, 두 스케일링 된 벡터를 더하는 방법으로요.

29
00:02:17,620 --> 00:02:21,560
어떤 2차원 벡터들이 이러한 스칼라와 기저벡터 조합으로 표현 가능할까요?

30
00:02:24,360 --> 00:02:27,740
정답은 모든 2차원 벡터들이 가능하다는 것입니다.

31
00:02:28,000 --> 00:02:30,900
그리고 왜 그런지에 대한 고민은 좋은 수수께끼라고 생각합니다.

32
00:02:32,440 --> 00:02:34,240
여기 소개된 새로운 기저벡터 쌍은 우리에게

33
00:02:34,260 --> 00:02:39,180
숫자쌍과 2차원 벡터들 사이를 오갈 수 있는 유효한 길을 제공해줍니다.

34
00:02:39,180 --> 00:02:41,460
하지만 그 앞뒤로 오가는 연관성은

35
00:02:41,460 --> 00:02:46,180
좀 더 표준적인 기저, i-hat 과 j-hat 를 사용했을때와는 확실히 다릅니다.

36
00:02:46,740 --> 00:02:49,040
좀 더 세부사항은 나중에 다루겠지만,

37
00:02:49,040 --> 00:02:55,380
다른 좌표 시스템들 사이의 구체적 관계는, 당장은 다음 설명정도만 언급하고  넘어가겠습니다.

38
00:02:55,380 --> 00:03:01,120
수치로 벡터들을 표현할 때,  우리는 암묵적으로 특정 기저 벡터들을 선택한 상태라는 것입니다.

39
00:03:02,320 --> 00:03:06,120
그래서 두 벡터를 스켈링하고 나서 더하는 것을

40
00:03:06,180 --> 00:03:08,700
두 벡터의 선형조합(linear combination)이라고 부릅니다.

41
00:03:11,280 --> 00:03:14,760
근데 "선형(linear)" 이라는 단어는 어디서 온걸까요?
왜 이런 동작이 선과 관련이 있는 걸까요?

42
00:03:14,820 --> 00:03:18,120
글쎄요. 어원과는 다르지만, 
저는 이런식으로 생각합니다.

43
00:03:18,300 --> 00:03:22,080
만약 그 스칼라 중 하나를 고정하고, 
다른 하나만을 자유롭게 변경해보면,

44
00:03:22,480 --> 00:03:26,060
결과 벡터의 끝은 하나의 직선을 만듭니다.

45
00:03:29,200 --> 00:03:34,080
지금, 두 스칼라 모두를 자유롭게 바꿔놓고 결과 벡터를 살펴보면,

46
00:03:34,180 --> 00:03:36,120
두 가지 상황이 발생합니다.

47
00:03:36,620 --> 00:03:40,440
하나는 대부분의 벡터쌍의 경우, 
평면 모든 점에 도달할 수 있을 것입니다.

48
00:03:40,480 --> 00:03:43,160
즉, 모든 가능한 2차원 벡터를 만들어 낼 수 있죠.

49
00:03:43,640 --> 00:03:47,440
그러나,  두번째로, 불행히도 두 벡터 조합 결과가 선(line) 하나만 가능한 경우도 있습니다.

50
00:03:47,440 --> 00:03:52,420
결과 벡터의 끝이 원점을 통과하는 직선위로 제한되는 것이죠.

51
00:03:53,840 --> 00:03:56,400
사실, 기술적으로 보자면  세 번째 가능성도 있습니다.

52
00:03:56,400 --> 00:04:00,200
두 벡터 모두 제로(zero)벡터여서, 모든 결과 벡터가 원점안으로 갇혀버립니다.

53
00:04:01,440 --> 00:04:03,300
좀 더 전문용어를 사용하면 다음과 같습니다.

54
00:04:03,320 --> 00:04:08,600
주어진 두 벡터 쌍의 조합으로 나타날 수 있는 결과 벡터들의 집합을

55
00:04:08,640 --> 00:04:11,020
두 벡터의 스팬(span = 확장공간?) 이라고 합니다.

56
00:04:14,780 --> 00:04:16,920
그래서 전문용어를 사용해서 다시 과정을 살펴보면,

57
00:04:16,920 --> 00:04:21,200
2-차원 벡터쌍의 스팬(span) 은 
대부분의 경우 2차원 공간 전체가 되지만,

58
00:04:21,280 --> 00:04:25,860
스팬(span)이 특정 선 위로 제한되는 경우도 있습니다.

59
00:04:27,100 --> 00:04:31,900
제가 예전에 선형대수는 벡터합과 스칼라곱의 주위를 돌며 이뤄진다는 말 기억하시나요?

60
00:04:32,160 --> 00:04:36,140
두 벡터의 스팬(span)은 기본적으로 이렇게 묻는 것과 같습니다.

61
00:04:36,340 --> 00:04:41,300
"오로지 두 가지 기본 연산을 가지고 도달 가능한 벡터들의 집합은 어떠한가?"

62
00:04:41,300 --> 00:04:43,200
"오직 벡터합과 스칼라곱 연산만을 가지고서."

63
00:04:43,200 --> 00:04:47,580
이제 벡터(vector)를 점(point)으로 옮겨 생각하는 방법을 알아봅시다.

64
00:04:47,580 --> 00:04:52,240
벡터 집합전체가 하나의 선위에 놓여있다고 생각해보면 매우 혼잡하게 느껴집니다.

65
00:04:52,280 --> 00:04:56,720
더욱 혼잡하게 느껴지는 것은 평면을 채우고 있는 모든 2차원 벡터들을 한번에 떠올리는 것입니다.

66
00:04:56,720 --> 00:04:59,960
그래서 벡터 집합을 다룰 때는 다음처럼 생각해봅시다.

67
00:05:00,080 --> 00:05:03,500
벡터하나를 공간상 하나의 점으로 여기는 것이죠.

68
00:05:03,500 --> 00:05:09,940
지금까지와 같이, 벡터의 끝이 각각의 점이되고, 모든 벡터의 꼬리는 원점에 있는 상황을 말이죠.

69
00:05:09,940 --> 00:05:15,040
이런 식으로 보면, 
특정 선에 놓여있는 결과벡터들을 생각할 때는,

70
00:05:15,540 --> 00:05:17,860
그저 선(line) 그 자체로 보면됩니다.
(선은 점들의 집합)

71
00:05:20,100 --> 00:05:24,140
마찬가지로, 평면에 대해서도 모든 2차원 벡터들을 떠올리때면,

72
00:05:24,220 --> 00:05:28,120
각 벡터들의 끝이 가리키는 점(point) 들로 개념화하면 좋습니다.

73
00:05:28,120 --> 00:05:33,080
그럼 결과적으로, 무한하고 평평한 2차원 평면 그 자체를 떠올리는 것과 같아집니다.

74
00:05:33,220 --> 00:05:34,340
화살표라는 개념은 잠시 남겨두고요.

75
00:05:36,220 --> 00:05:40,080
일반적으로, 하나의 벡터를 생각할 때는 하나의 화살표로 생각하는 것이 좋습니다.

76
00:05:40,660 --> 00:05:45,200
벡터의 집합을 다룰때는 모든 점들로 생각하는 것이 편리하고요.

77
00:05:45,580 --> 00:05:48,680
그래서, 예로 든 스팬을 보면, 대부분의 벡터쌍의 경우 스팬 결과는

78
00:05:48,680 --> 00:05:51,980
무한한 2 차원 공간 그 자체가 됩니다.

79
00:05:52,300 --> 00:05:55,140
하지만, 선모양을 이룬다면, 스팬은 그냥 선(line) 이 될 뿐입니다.

80
00:05:58,620 --> 00:06:02,780
스팬과 같은 개념은 3차원 공간을 다룰때 더욱 흥미로워집니다.

81
00:06:04,180 --> 00:06:08,900
예를 들어, 3차원 공간에서 서로다른 두 벡터를 선택하면

82
00:06:08,900 --> 00:06:11,020
그 두 벡터의 스팬(span) 은 어떤 모양일까?

83
00:06:13,380 --> 00:06:19,420
흠,  두 벡터의 모든 선형조합의 결과과 스팬(span)이라 하고,

84
00:06:19,460 --> 00:06:25,560
이는 두 벡터를 벡터합과 스칼라곱을 통해 이리저리 조합해서 만들 수 있는 모든 벡터들을  의미합니다.

85
00:06:25,560 --> 00:06:32,120
당신은 두 스칼라를 변화시키는 두 개의 손잡이로 생각해볼 수 있습니다.  선형조합 정의에서 나온 스칼라들로

86
00:06:32,140 --> 00:06:35,780
두 스케일링 된 벡터의 합에 영향을 주고,  따라서 결과 벡터의 끝에도 영향을 줍니다.

87
00:06:35,800 --> 00:06:41,280
그 끝은 3 차원 공간의 원점을 가로지르는 평평한 공간이 될 것입니다.

88
00:06:41,520 --> 00:06:45,120
이 평면이 두 벡터의 스팬(span, 확장공간)입니다.

89
00:06:45,120 --> 00:06:52,040
좀 더 정확하게 말하자면, 평면위에 끝(tip)을 놓는 모든 벡터들의 집합이 두 벡터의 스팬입니다.

90
00:06:52,040 --> 00:06:54,040
어때요? 매우 아름다운 마음의 상이지 않나요?

91
00:06:54,840 --> 00:07:00,260
그럼 3번째 벡터를 추가하고 나면, 
이 벡터들이 만드는 스팬(span)은 어떨까요?

92
00:07:00,460 --> 00:07:05,200
이 세 벡터의 선형조합은 두 벡터의 선형조합 방식과 거의 같습니다.

93
00:07:05,200 --> 00:07:10,220
이번엔 3개의 스칼라를 가지고 세 벡터를 스케일링하고 나서 합하는 선형조합입니다.

94
00:07:16,440 --> 00:07:21,380
그리고 또다시, 세 벡터의 스팬은 모든 가능한 선형조합의 결과집합입니다.

95
00:07:24,620 --> 00:07:26,140
단, 두가지 다른 상황이 발생할 수 있습니다.

96
00:07:26,400 --> 00:07:30,320
세 번째 추가한 벡터가 다른 두 벡터가 만드는 스팬(span, 여기선 평면일듯) 에 놓여있다면,

97
00:07:30,320 --> 00:07:35,380
세번째 벡터를 추가해도 스팬이 바뀌지 않습니다. 똑같은 평면에 그대로 입니다.

98
00:07:35,380 --> 00:07:38,380
다른말로 설명하자면, 
세번째 벡터를 추가하고 아무리 선형조합을 해봐도,

99
00:07:38,380 --> 00:07:41,580
기존 스팬 밖에 새로운 벡터를 만들어내지 못합니다.

100
00:07:42,800 --> 00:07:48,500
하지만, 무작위로 세번째 벡터를 선택하면, 다시말해 두 벡터의 스팬 평면에 놓여있지 않은 벡터를 선택한다면,

101
00:07:48,740 --> 00:07:50,740
그럼, 새로운 방향을 가리키는 것이 가능해져서

102
00:07:50,960 --> 00:07:54,680
이제 3차원의 모든 벡터들에 대한 접근이 가능해집니다.

103
00:07:55,340 --> 00:07:59,640
제가 이것에 대해 생각하는 좋은 방법은 다음과 같습니다. 세번째 벡터를 스케일링해보면서

104
00:07:59,640 --> 00:08:04,600
기존 두 벡터의 스팬 평면위에 갇혔는지 확인해봅니다.

105
00:08:06,040 --> 00:08:11,420
생각해보는 또 다른 방법으로는,  스칼라를 마음껏 변화시켜서

106
00:08:11,480 --> 00:08:14,240
3차원 공간 전체에 대해 접근가능한지 판단해 보는 것입니다.

107
00:08:17,240 --> 00:08:20,960
그럼, 세번째 벡터가 두 벡터의 스팬 위에 놓여있거나,

108
00:08:20,960 --> 00:08:23,480
아님 두 벡터의 스팬이 이미 선인 경우라면,

109
00:08:23,540 --> 00:08:25,440
이런 상황을 설명하는 용어가 있으면 좋겠는데요,

110
00:08:25,440 --> 00:08:30,060
불필요한 벡터가 있어서 그 벡터를 추가해도 스팬을 더 확장되지 않는 상황을 말이죠.

111
00:08:30,060 --> 00:08:35,520
즉 스팬의 축소없이 하나 이상의 벡터를 제외시켜도 되는 경우,

112
00:08:35,760 --> 00:08:39,940
전문용어로 "선형 종속(linear dependent)" 이라고 합니다.

113
00:08:40,280 --> 00:08:46,620
또다른 표현으로는, 벡터들 중 하나가 다른 벡터들의 선형조합으로 표현 가능한 경우입니다.

114
00:08:46,780 --> 00:08:49,940
이미 다른 벡터의 스팬에 포함되는 경우를 말하죠.

115
00:08:53,000 --> 00:08:57,460
반면에, 각각의 벡터가 기존 스팬에 또 다른 차원을 추가해주는게 가능하다면

116
00:08:57,460 --> 00:09:00,260
"선형 독립적(linear independent)"라고 합니다.

117
00:09:06,780 --> 00:09:10,660
자 그럼 여러 용어들과, 
좋은 이미지 개념들을 잘 지니길 바랍니다.

118
00:09:10,660 --> 00:09:12,720
다음으로 넘어가기전에 아래와 같은 질문을 생각해보길 바랍니다.

119
00:09:12,720 --> 00:09:20,520
기술적 정의로 보면, '공간의 기저(basis) 는 선형독립적인 벡터들의 집합으로 스팬하면 그 공간이 된다' 입니다.

120
00:09:21,740 --> 00:09:24,820
이제, 앞에서 기저(basis) 를 설명한 것과

121
00:09:24,960 --> 00:09:28,960
그리고 "스팬(span)" 과 "선형 독립(linear independent)" 라는 개념을 가지고

122
00:09:29,100 --> 00:09:32,020
이 정의가 왜 맞는말인지 생각해보세요.

123
00:09:34,020 --> 00:09:38,960
다음 동영상에서는 행렬과 공간변형에 대해 다룰 것입니다. 그때 만나요!

124
00:09:38,960 --> 00:09:40,960
싱크 맞추느라 죽는줄

