1
00:00:00,000 --> 00:00:01,923
रिमन झेटा फंक्शन.

2
00:00:01,923 --> 00:00:07,246
ही आधुनिक गणितातील अशा वस्तूंपैकी एक आहे जी तुमच्यापैकी

3
00:00:07,246 --> 00:00:12,000
अनेकांनी ऐकली असेल, परंतु ती समजणे खरोखर कठीण आहे.

4
00:00:12,000 --> 00:00:16,000
काळजी करू नका, मी ते अॅनिमेशन समजावून सांगेन जे तुम्ही आत्ताच काही मिनिटांत पाहिले.

5
00:00:16,000 --> 00:00:19,457
बर्‍याच लोकांना या कार्याबद्दल माहिती आहे कारण शून्याच्या बरोबरी

6
00:00:19,457 --> 00:00:22,808
केव्हा हे समजू शकणार्‍या प्रत्येकासाठी एक दशलक्ष डॉलरचे बक्षीस

7
00:00:22,808 --> 00:00:26,000
आहे, ही एक खुली समस्या आहे जी रीमन गृहीतक म्हणून ओळखली जाते.

8
00:00:26,000 --> 00:00:29,391
तुमच्यापैकी काहींनी 1 अधिक 2 अधिक 3 अधिक 4, वर

9
00:00:29,391 --> 00:00:33,000
आणि अनंतापर्यंत भिन्न बेरीज संदर्भात हे ऐकले असेल.

10
00:00:33,000 --> 00:00:36,728
तुम्ही पहा, एक अर्थ आहे ज्यामध्ये ही बेरीज ऋण 1

11
00:00:36,728 --> 00:00:41,000
बारावी आहे, जी स्पष्टपणे चुकीची नसली तरी निरर्थक वाटते.

12
00:00:41,000 --> 00:00:44,115
परंतु हे समीकरण प्रत्यक्षात काय म्हणत आहे ते परिभाषित

13
00:00:44,115 --> 00:00:47,000
करण्याचा एक सामान्य मार्ग रीमन झेटा फंक्शन वापरतो.

14
00:00:47,000 --> 00:00:50,809
परंतु कोणत्याही प्रासंगिक गणिताच्या उत्साही व्यक्तीला ज्याने हे वाचायला सुरुवात

15
00:00:50,809 --> 00:00:54,571
केली आहे, त्याला माहित आहे की, त्याची व्याख्या विश्लेषणात्मक निरंतरता नावाच्या

16
00:00:54,571 --> 00:00:58,000
या एका कल्पनेचा संदर्भ देते, ज्याचा संबंध जटिल मूल्यात्मक कार्यांशी आहे.

17
00:00:58,000 --> 00:01:01,000
आणि ही कल्पना निराशाजनकपणे अपारदर्शक आणि अज्ञानी असू शकते.

18
00:01:01,000 --> 00:01:04,895
तर मला येथे जे करायचे आहे ते फक्त तुम्हाला दाखवायचे आहे की हे

19
00:01:04,895 --> 00:01:08,853
zeta फंक्शन प्रत्यक्षात कसे दिसते आणि विश्लेषणात्मक निरंतरतेची

20
00:01:08,853 --> 00:01:13,000
कल्पना काय आहे हे दृश्य आणि अधिक अंतर्ज्ञानी पद्धतीने स्पष्ट करणे.

21
00:01:13,000 --> 00:01:15,383
मी असे गृहीत धरत आहे की तुम्हाला जटिल संख्यांबद्दल

22
00:01:15,383 --> 00:01:18,000
माहिती आहे आणि तुम्हाला त्यांच्यासोबत काम करणे सोपे आहे.

23
00:01:18,000 --> 00:01:21,085
आणि मला असे सांगण्याचा मोह होतो की तुम्हाला कॅल्क्युलस माहित असले पाहिजे, कारण

24
00:01:21,085 --> 00:01:24,484
विश्लेषणात्मक निरंतरता हे सर्व डेरिव्हेटिव्ह्ज बद्दल आहे, परंतु मी ज्या प्रकारे गोष्टी

25
00:01:24,484 --> 00:01:28,000
सादर करण्याची योजना आखत आहे त्याबद्दल मला वाटते की तुम्ही त्याशिवाय खरोखर चांगले असू शकता.

26
00:01:28,000 --> 00:01:33,000
तर त्यात थेट उडी मारण्यासाठी, हे zeta फंक्शन काय आहे ते परिभाषित करूया.

27
00:01:33,000 --> 00:01:38,970
दिलेल्या इनपुटसाठी, जिथे आपण सामान्यतः s व्हेरिएबल वापरतो, फंक्शन 1

28
00:01:38,970 --> 00:01:44,941
ओव्हर 1 ते s आहे, जे नेहमी 1 असते, अधिक 1 ओव्हर 2 s, अधिक 1 ओव्हर 3

29
00:01:44,941 --> 00:01:51,000
s, अधिक 1 ओव्हर 4. s, वर आणि पुढे आणि सर्व नैसर्गिक संख्यांचा सारांश.

30
00:01:51,000 --> 00:01:55,000
तर उदाहरणार्थ, समजा तुम्ही s बरोबर २ सारखे मूल्य प्लग इन केले आहे.

31
00:01:55,000 --> 00:02:01,731
तुम्हाला 1 अधिक 1 वर 4 अधिक 1 पेक्षा अधिक 9 अधिक 1 सोळावा मिळेल, आणि तुम्ही चौरसांचे

32
00:02:01,731 --> 00:02:08,780
अधिकाधिक परस्पर जोडत राहिल्यास, 6 वरील pi वर्गाकडे जाण्यासाठी असेच घडते, जे सुमारे 1 आहे.

33
00:02:08,780 --> 00:02:09,000
६४५.

34
00:02:09,000 --> 00:02:13,673
pi येथे का दिसत आहे याचे एक अतिशय सुंदर कारण आहे, आणि मी नंतरच्या तारखेला त्यावर

35
00:02:13,673 --> 00:02:18,000
एक व्हिडिओ बनवू शकतो, परंतु हे कार्य सुंदर का आहे हे फक्त हिमनगाचे टोक आहे.

36
00:02:18,000 --> 00:02:21,120
तुम्ही 3 किंवा 4 सारख्या इतर इनपुटसाठी हेच करू शकता

37
00:02:21,120 --> 00:02:24,000
आणि काहीवेळा तुम्हाला इतर मनोरंजक मूल्ये मिळतात.

38
00:02:24,000 --> 00:02:26,515
आणि आतापर्यंत, सर्वकाही अगदी वाजवी वाटते.

39
00:02:26,515 --> 00:02:31,000
आपण लहान आणि लहान रक्कम जोडत आहात आणि या बेरीज काही संख्येपर्यंत पोहोचतात.

40
00:02:31,000 --> 00:02:34,000
छान, इथे वेडेपणा नाही.

41
00:02:34,000 --> 00:02:37,468
तरीही, जर तुम्ही त्याबद्दल वाचत असाल, तर तुम्हाला काही

42
00:02:37,468 --> 00:02:41,000
लोक असे म्हणतील की ऋण 1 चा झीटा नकारात्मक 1 बारावा असतो.

43
00:02:41,000 --> 00:02:45,000
पण या अनंत रकमेकडे पाहिल्यास काही अर्थ नाही.

44
00:02:45,000 --> 00:02:50,032
जेव्हा तुम्ही प्रत्येक शब्दाला ऋण 1 वर वाढवता, प्रत्येक अपूर्णांक फ्लिप करता,

45
00:02:50,032 --> 00:02:55,000
तेव्हा तुम्हाला 1 अधिक 2 अधिक 3 अधिक 4 सर्व नैसर्गिक संख्यांवर आणि वर मिळतील.

46
00:02:55,000 --> 00:03:01,000
आणि स्पष्टपणे ते कोणत्याही गोष्टीकडे जात नाही, नक्कीच नकारात्मक 1 बारावा नाही, बरोबर?

47
00:03:01,000 --> 00:03:05,321
आणि, कोणत्याही भाडोत्री व्यक्तीला रीमनच्या गृहीतकाकडे लक्ष दिल्याप्रमाणे,

48
00:03:05,321 --> 00:03:09,000
हे फंक्शनला ऋण सम संख्येवर क्षुल्लक शून्य असल्याचे म्हटले जाते.

49
00:03:09,000 --> 00:03:13,000
तर उदाहरणार्थ, याचा अर्थ असा होईल की ऋण 2 चा झीटा 0 च्या बरोबरीचा आहे.

50
00:03:13,000 --> 00:03:19,000
पण जेव्हा तुम्ही निगेटिव्ह 2 प्लग इन करता, तेव्हा ते तुम्हाला 1 अधिक 4 अधिक 9 अधिक 16

51
00:03:19,000 --> 00:03:25,000
वर आणि चालू देते, जे पुन्हा स्पष्टपणे कोणत्याही गोष्टीकडे जात नाही, अगदी कमी 0, बरोबर?

52
00:03:25,000 --> 00:03:28,166
ठीक आहे, आम्ही काही मिनिटांत नकारात्मक मूल्यांवर पोहोचू,

53
00:03:28,166 --> 00:03:31,000
परंतु आत्ता, फक्त एकच गोष्ट सांगूया जी वाजवी वाटते.

54
00:03:31,000 --> 00:03:36,000
जेव्हा s 1 पेक्षा जास्त असेल तेव्हाच हे कार्य अर्थपूर्ण ठरते, जेव्हा ही बेरीज एकत्र होते.

55
00:03:36,000 --> 00:03:41,000
आतापर्यंत, इतर मूल्यांसाठी ते फक्त परिभाषित केलेले नाही.

56
00:03:41,000 --> 00:03:45,350
आता, असे म्हटल्यावर, बर्नार्ड रिमन हे काही प्रमाणात जटिल विश्लेषणाचे जनक

57
00:03:45,350 --> 00:03:50,000
होते, जे फंक्शन्सचा अभ्यास आहे ज्यात इनपुट आणि आउटपुट म्हणून जटिल संख्या आहेत.

58
00:03:50,000 --> 00:03:54,647
त्यामुळे ही बेरीज वास्तविक संख्या रेषेवरील संख्या s ला वास्तविक संख्या रेषेवरील

59
00:03:54,647 --> 00:03:59,410
दुसर्‍या संख्येवर कशी नेईल याचा विचार करण्याऐवजी, जेव्हा तुम्ही s साठी जटिल मूल्य

60
00:03:59,410 --> 00:04:04,000
प्लग इन करता तेव्हा काय होते हे समजून घेण्यावर त्याचे मुख्य लक्ष केंद्रित होते.

61
00:04:04,000 --> 00:04:10,000
उदाहरणार्थ, कदाचित 2 प्लग इन करण्याऐवजी, आपण 2 प्लस i प्लग इन कराल.

62
00:04:10,000 --> 00:04:14,916
आता, जर तुम्ही एखाद्या जटिल मूल्याच्या बळावर संख्या वाढवण्याची कल्पना कधीच पाहिली नसेल,

63
00:04:14,916 --> 00:04:19,720
तर प्रथम ते विचित्र वाटू शकते, कारण त्याचा यापुढे पुनरावृत्ती गुणाकाराशी काहीही संबंध

64
00:04:19,720 --> 00:04:20,000
नाही.

65
00:04:20,000 --> 00:04:24,656
परंतु गणितज्ञांना असे आढळले की घातांकांची व्याख्या वास्तविक संख्यांच्या

66
00:04:24,656 --> 00:04:29,054
त्यांच्या परिचित क्षेत्राच्या पलीकडे आणि जटिल मूल्यांच्या क्षेत्रात

67
00:04:29,054 --> 00:04:33,000
विस्तारित करण्याचा एक अतिशय छान आणि अतिशय नैसर्गिक मार्ग आहे.

68
00:04:33,000 --> 00:04:37,105
मी या व्हिडिओसह कोठे जात आहे यासाठी जटिल घातांक समजून घेणे फार महत्वाचे नाही,

69
00:04:37,105 --> 00:04:41,000
परंतु मला वाटते की आपण त्याचा सारांश येथे सारांशित केला तर ते चांगले होईल.

70
00:04:41,000 --> 00:04:44,726
मूळ कल्पना अशी आहे की जेव्हा तुम्ही एका जटिल संख्येच्या बळावर

71
00:04:44,726 --> 00:04:48,633
1 अर्धा असे काहीतरी लिहिता, तेव्हा तुम्ही त्यास 1 अर्धा वास्तविक

72
00:04:48,633 --> 00:04:52,000
भाग गुणा 1 अर्धा शुद्ध काल्पनिक भाग म्हणून विभाजित करता.

73
00:04:52,000 --> 00:04:55,000
आम्ही वास्तविक भागाच्या अर्ध्या भागावर चांगले आहोत, तेथे कोणतीही समस्या नाही.

74
00:04:55,000 --> 00:05:00,000
पण एखादी गोष्ट शुद्ध काल्पनिक संख्येवर वाढवण्याबद्दल काय?

75
00:05:00,000 --> 00:05:06,000
बरं, परिणाम कॉम्प्लेक्स प्लेनमधील एकक वर्तुळावर काही जटिल संख्या असेल.

76
00:05:06,000 --> 00:05:12,275
तुम्ही ते शुद्ध काल्पनिक इनपुट काल्पनिक रेषेच्या वर आणि

77
00:05:12,275 --> 00:05:19,000
खाली जाऊ देता, परिणामी आउटपुट त्या युनिट वर्तुळाभोवती फिरते.

78
00:05:19,000 --> 00:05:24,000
1 अर्ध्या सारख्या बेससाठी, आउटपुट युनिट वर्तुळाभोवती काहीसे हळूहळू फिरते.

79
00:05:24,000 --> 00:05:29,964
पण 1 पासून खूप दूर असलेल्या बेससाठी, जसे की 1 नववा, नंतर तुम्ही या इनपुटला काल्पनिक

80
00:05:29,964 --> 00:05:36,000
अक्षाच्या वर आणि खाली जाऊ द्याल, संबंधित आउटपुट युनिट वर्तुळाभोवती अधिक वेगाने फिरेल.

81
00:05:36,000 --> 00:05:38,821
जर तुम्ही हे कधी पाहिले नसेल आणि पृथ्वीवर असे का घडते याबद्दल तुम्हाला

82
00:05:38,821 --> 00:05:42,000
आश्चर्य वाटत असेल, तर मी वर्णनात चांगल्या संसाधनांच्या काही लिंक्स सोडल्या आहेत.

83
00:05:42,000 --> 00:05:46,000
येथे, मी फक्त कशासाठी पुढे जाईन.

84
00:05:46,000 --> 00:05:51,187
मुख्य गोष्ट अशी आहे की जेव्हा तुम्ही 2 अधिक i च्या बळावर 1 अर्धा सारखे

85
00:05:51,187 --> 00:05:56,520
काहीतरी वाढवता, जे 1 अर्धा चौरस गुणा 1 अर्धा i च्या बरोबर असेल, तेव्हा i

86
00:05:56,520 --> 00:06:02,000
भागाचा 1 अर्धा भाग युनिट वर्तुळावर असेल, याचा अर्थ 1 चे परिपूर्ण मूल्य आहे.

87
00:06:02,000 --> 00:06:07,309
म्हणून जेव्हा तुम्ही त्याचा गुणाकार करता तेव्हा तो संख्येचा

88
00:06:07,309 --> 00:06:12,000
आकार बदलत नाही, तो फक्त 1 चौथा घेतो आणि थोडासा फिरतो.

89
00:06:12,000 --> 00:06:16,166
म्हणून, जर तुम्हाला झीटा फंक्शनमध्ये 2 प्लस i जोडायचे असेल, तर ते काय करते

90
00:06:16,166 --> 00:06:20,444
याबद्दल विचार करण्याचा एक मार्ग म्हणजे 1 अर्ध्या भागाला i भागावर नेणे आणि ते

91
00:06:20,444 --> 00:06:24,722
काय करते याचा विचार करणे म्हणजे सर्व अटींसह प्रारंभ करणे. 2 च्या घातापर्यंत,

92
00:06:24,722 --> 00:06:29,111
ज्याची लांबी ही संख्यांच्या वर्गांची परस्पर आहे अशा रेषांना एकत्र जोडणे म्हणून

93
00:06:29,111 --> 00:06:34,000
तुम्ही विचार करू शकता, जे मी आधी म्हटल्याप्रमाणे, 6 पेक्षा जास्त pi वर्गात एकत्रित होते.

94
00:06:34,000 --> 00:06:37,533
मग जेव्हा तुम्ही ते इनपुट 2 ते 2 प्लस i पर्यंत बदलता

95
00:06:37,533 --> 00:06:41,000
तेव्हा यातील प्रत्येक ओळी काही प्रमाणात फिरवली जाते.

96
00:06:41,000 --> 00:06:46,000
पण महत्त्वाचे म्हणजे, त्या रेषांची लांबी बदलणार नाही, त्यामुळे बेरीज अजूनही एकत्रित होते.

97
00:06:46,000 --> 00:06:51,000
हे जटिल विमानावरील काही विशिष्ट बिंदूपर्यंत सर्पिलमध्ये असे करते.

98
00:06:51,000 --> 00:06:56,437
येथे, मी कॉम्प्लेक्स प्लेनवर या पिवळ्या बिंदूने दर्शविलेले इनपुट s बदलते तेव्हा ते कसे

99
00:06:56,437 --> 00:07:02,000
दिसते ते मी दाखवतो, जिथे ही सर्पिल बेरीज नेहमी s च्या झीटा साठी अभिसरण मूल्य दर्शवत असते.

100
00:07:02,000 --> 00:07:10,739
याचा अर्थ असा आहे की s चा zeta, ही अनंत बेरीज म्हणून परिभाषित, जोपर्यंत इनपुटचा

101
00:07:10,739 --> 00:07:19,260
वास्तविक भाग 1 पेक्षा जास्त आहे तोपर्यंत एक पूर्णपणे वाजवी कॉम्प्लेक्स फंक्शन

102
00:07:19,260 --> 00:07:28,000
आहे, म्हणजे इनपुट s कॉम्प्लेक्सच्या या उजव्या अर्ध्या भागावर कुठेतरी बसलेला आहे.

103
00:07:28,000 --> 00:07:33,720
पुन्हा, हे असे आहे कारण हा s चा खरा भाग आहे जो प्रत्येक संख्येचा

104
00:07:33,720 --> 00:07:39,000
आकार निर्धारित करतो, तर काल्पनिक भाग फक्त काही रोटेशन ठरवतो.

105
00:07:39,000 --> 00:07:42,000
तर आता मला या फंक्शनची कल्पना करायची आहे.

106
00:07:42,000 --> 00:07:45,466
हे कॉम्प्लेक्स प्लेनच्या उजव्या अर्ध्या भागात इनपुट

107
00:07:45,466 --> 00:07:49,000
घेते आणि कॉम्प्लेक्स प्लेनमध्ये इतरत्र आउटपुट थुंकते.

108
00:07:49,000 --> 00:07:53,447
क्लिष्ट फंक्शन्स समजून घेण्याचा एक उत्कृष्ट मार्ग म्हणजे त्यांना

109
00:07:53,447 --> 00:07:57,757
परिवर्तन म्हणून कल्पना करणे, म्हणजे तुम्ही फंक्शनमधील प्रत्येक

110
00:07:57,757 --> 00:08:02,000
संभाव्य इनपुटकडे पहा आणि फक्त त्यास संबंधित आउटपुटवर जाऊ द्या.

111
00:08:02,000 --> 00:08:05,159
उदाहरणार्थ, चला थोडा वेळ द्या आणि zeta फंक्शन पेक्षा थोडेसे सोपे

112
00:08:05,159 --> 00:08:09,000
व्हिज्युअलायझ करण्याचा प्रयत्न करूया, म्हणा की s चा f हा s वर्गाच्या बरोबर आहे.

113
00:08:09,000 --> 00:08:12,586
जेव्हा तुम्ही s च्या बरोबरीने 2 प्लग इन करता, तेव्हा तुम्हाला

114
00:08:12,586 --> 00:08:16,000
4 मिळेल, म्हणून आम्ही तो बिंदू 2 ओव्हरला 4 वर बिंदूकडे नेऊ.

115
00:08:16,000 --> 00:08:19,809
जेव्हा तुम्ही ऋण 1 प्लग इन करता तेव्हा तुम्हाला 1

116
00:08:19,809 --> 00:08:24,000
मिळतो, त्यामुळे इथला बिंदू ऋण 1 वर 1 वर बिंदूकडे सरकतो.

117
00:08:24,000 --> 00:08:28,371
जेव्हा तुम्ही i प्लग इन करता, तेव्हा त्याचा स्क्वेअर

118
00:08:28,371 --> 00:08:32,000
हा ऋण 1 असतो, त्यामुळे तो इथून ऋण 1 वर जाईल.

119
00:08:32,000 --> 00:08:36,046
आता मी अधिक रंगीबेरंगी ग्रिड जोडणार आहे, आणि हे फक्त कारण गोष्टी हलवायला सुरुवात करणार

120
00:08:36,046 --> 00:08:40,000
आहेत, आणि त्या हालचाली दरम्यान ग्रिड रेषा वेगळे करण्यासाठी काहीतरी मिळणे खूप छान आहे.

121
00:08:40,000 --> 00:08:44,322
येथून, मी कॉम्प्युटरला सांगेन की या ग्रिडवरील प्रत्येक पॉइंट

122
00:08:44,322 --> 00:08:49,000
त्याच्या संबंधित आउटपुटवर f च्या s equals s स्क्वेअर अंतर्गत हलवा.

123
00:08:49,000 --> 00:08:55,000
ते कसे दिसते ते येथे आहे.

124
00:08:55,000 --> 00:08:58,000
ते घेण्यासारखे बरेच काही असू शकते, म्हणून मी पुढे जाऊन ते पुन्हा खेळेन.

125
00:08:58,000 --> 00:09:02,539
आणि यावेळी, चिन्हांकित बिंदूंपैकी एकावर लक्ष केंद्रित करा

126
00:09:02,539 --> 00:09:07,000
आणि ते त्याच्या चौकोनाशी संबंधित बिंदूवर कसे हलते ते पहा.

127
00:09:07,000 --> 00:09:11,427
सर्व बिंदू एकाच वेळी हलताना पाहणे थोडे क्लिष्ट असू शकते, परंतु

128
00:09:11,427 --> 00:09:15,643
बक्षीस म्हणजे हे जटिल कार्य प्रत्यक्षात काय करत आहे याचे एक

129
00:09:15,643 --> 00:09:20,000
अतिशय समृद्ध चित्र देते आणि हे सर्व फक्त दोन आयामांमध्ये घडते.

130
00:09:20,000 --> 00:09:22,000
तर झीटा फंक्शनकडे परत या.

131
00:09:22,000 --> 00:09:26,510
आमच्याकडे ही अनंत बेरीज आहे, जी काही जटिल संख्या s चे कार्य आहे, आणि ज्याचा वास्तविक

132
00:09:26,510 --> 00:09:30,808
भाग 1 पेक्षा जास्त आहे अशा s च्या मूल्यांमध्ये प्लग इन करण्यात आणि अभिसरण सर्पिल

133
00:09:30,808 --> 00:09:35,000
बेरीजद्वारे काही अर्थपूर्ण आउटपुट मिळाल्याबद्दल आम्हाला चांगले आणि आनंदी वाटते.

134
00:09:35,000 --> 00:09:39,451
तर हे फंक्शन व्हिज्युअलायझ करण्यासाठी, मी येथे कॉम्प्लेक्स प्लेनच्या उजव्या

135
00:09:39,451 --> 00:09:44,196
बाजूला बसलेल्या ग्रिडचा भाग घेणार आहे, जिथे संख्यांचा वास्तविक भाग 1 पेक्षा मोठा

136
00:09:44,196 --> 00:09:49,000
आहे आणि मी संगणकाला हलवायला सांगणार आहे. या ग्रिडचा प्रत्येक बिंदू योग्य आउटपुटवर.

137
00:09:49,000 --> 00:09:54,046
मी क्रमांक 1 च्या आसपास आणखी काही ग्रिड रेषा जोडल्यास

138
00:09:54,046 --> 00:09:59,000
ते खरोखर मदत करते, कारण तो प्रदेश थोडासा पसरलेला आहे.

139
00:09:59,000 --> 00:10:03,000
ठीक आहे, तर सर्व प्रथम, ते किती सुंदर आहे याचे कौतुक करूया.

140
00:10:03,000 --> 00:10:07,313
मला म्हणायचे आहे, अरेरे, जर तुम्हाला जटिल कार्यांबद्दल

141
00:10:07,313 --> 00:10:11,000
अधिक जाणून घ्यायचे नसेल, तर तुम्हाला हृदय नाही.

142
00:10:11,000 --> 00:10:17,000
परंतु, हे बदललेले ग्रिड थोडेसे वाढवण्याची विनंती करत आहे.

143
00:10:17,000 --> 00:10:22,400
उदाहरणार्थ, या रेषा येथे हायलाइट करूया, ज्या काल्पनिक

144
00:10:22,400 --> 00:10:27,000
भाग i किंवा ऋण i सह सर्व जटिल संख्या दर्शवतात.

145
00:10:27,000 --> 00:10:32,000
परिवर्तनानंतर, या ओळी अचानक थांबण्याआधीच अशा सुंदर चाप बनवतात.

146
00:10:32,000 --> 00:10:36,000
तुम्हाला माहीत आहे की, तुम्हाला ते चाप सुरू ठेवायचे नाहीत का?

147
00:10:36,000 --> 00:10:39,835
खरं तर, आपण कल्पना करू शकता की फंक्शनची काही बदललेली आवृत्ती,

148
00:10:39,835 --> 00:10:43,484
विमानाच्या या डाव्या अर्ध्या भागापर्यंत विस्तारित असलेल्या

149
00:10:43,484 --> 00:10:48,000
व्याख्येसह, हे चित्र अगदी सुंदर असलेल्या एखाद्या गोष्टीसह पूर्ण करू शकते.

150
00:10:48,000 --> 00:10:52,000
बरं, जटिल फंक्शन्ससह काम करणारे गणितज्ञ हेच करतात.

151
00:10:52,000 --> 00:10:58,000
ते मूळ डोमेनच्या पलीकडे कार्य सुरू ठेवतात जेथे ते परिभाषित केले होते.

152
00:10:58,000 --> 00:11:02,442
आता, जसे की आपण इनपुट्समध्ये ब्रॅंच करतो जिथे वास्तविक भाग 1 पेक्षा कमी आहे,

153
00:11:02,442 --> 00:11:07,000
आपण मूळतः फंक्शन परिभाषित करण्यासाठी वापरलेली ही अनंत बेरीज आता काही अर्थ नाही.

154
00:11:07,000 --> 00:11:12,000
तुम्हाला अनंतापर्यंत 1 अधिक 2 अधिक 3 अधिक 4 जोडण्यासारखे मूर्खपणा मिळेल.

155
00:11:12,000 --> 00:11:17,475
पण फक्त विमानाच्या उजव्या अर्ध्या भागाची ही रूपांतरित आवृत्ती पाहिल्यास, जिथे बेरीजचा

156
00:11:17,475 --> 00:11:23,014
अर्थ आहे, तो फक्त बिंदूंचा संच वाढवण्याची विनंती करत आहे ज्याचा आपण इनपुट म्हणून विचार

157
00:11:23,014 --> 00:11:28,681
करत आहोत, जरी याचा अर्थ काहींमध्ये विस्तारित कार्य परिभाषित करणे. ती रक्कम वापरणे आवश्यक

158
00:11:28,681 --> 00:11:29,000
नाही.

159
00:11:29,000 --> 00:11:35,000
अर्थात, यामुळे आम्हाला प्रश्न पडतो की, उर्वरित विमानात तुम्ही ते कार्य कसे परिभाषित कराल?

160
00:11:35,000 --> 00:11:38,000
तुम्हाला वाटेल की तुम्ही ते कितीही मार्गांनी वाढवू शकता.

161
00:11:38,000 --> 00:11:43,000
कदाचित तुम्ही असा विस्तार परिभाषित कराल ज्यामुळे तो

162
00:11:43,000 --> 00:11:48,000
बिंदू s ने ऋण 1 च्या बरोबरीने ऋण 1 बाराव्या वर जातो.

163
00:11:48,000 --> 00:11:50,197
परंतु कदाचित तुम्ही काही विस्तारावर स्क्विगल कराल

164
00:11:50,197 --> 00:11:52,000
ज्यामुळे ते इतर कोणत्याही मूल्यावर उतरेल.

165
00:11:52,000 --> 00:11:56,852
म्हणजे, अभिसरणाच्या त्या क्षेत्राबाहेरील मूल्यांसाठी फंक्शन वेगळ्या पद्धतीने

166
00:11:56,852 --> 00:12:01,642
परिभाषित करण्याच्या कल्पनेसाठी तुम्ही स्वतःला उघडता, म्हणजेच या अनंत रकमेवर

167
00:12:01,642 --> 00:12:07,000
आधारित नाही, जग हे तुमचे ऑयस्टर आहे आणि तुमच्याकडे कितीही विस्तार असू शकतात. , बरोबर?

168
00:12:07,000 --> 00:12:09,000
बरं, नक्की नाही.

169
00:12:09,000 --> 00:12:14,398
म्हणजे, होय, तुम्ही कोणत्याही मुलाला मार्कर देऊ शकता आणि त्यांना या रेषा कोणत्याही

170
00:12:14,398 --> 00:12:19,601
प्रकारे वाढवायला सांगू शकता, परंतु जर तुम्ही या नवीन विस्तारित फंक्शनचे सर्वत्र

171
00:12:19,601 --> 00:12:25,000
व्युत्पन्न असणे आवश्यक आहे असे निर्बंध जोडले तर ते आम्हाला एक आणि फक्त एक शक्य आहे.

172
00:12:25,000 --> 00:12:27,945
विस्तार मला माहित आहे, मला माहित आहे, मी म्हणालो की तुम्हाला या व्हिडिओसाठी

173
00:12:27,945 --> 00:12:31,279
डेरिव्हेटिव्ह्जबद्दल माहिती असण्याची गरज नाही, आणि जरी तुम्हाला कॅल्क्युलस माहित असेल

174
00:12:31,279 --> 00:12:34,534
तरीही, कदाचित तुम्हाला अजून जटिल फंक्शन्ससाठी डेरिव्हेटिव्ह्जचा अर्थ कसा लावायचा हे

175
00:12:34,534 --> 00:12:35,000
शिकायचे आहे.

176
00:12:35,000 --> 00:12:38,835
पण आमच्यासाठी सुदैवाने, एक अतिशय छान भौमितिक अंतर्ज्ञान आहे जे तुम्ही

177
00:12:38,835 --> 00:12:43,000
लक्षात ठेवू शकता, जेव्हा मी एक वाक्प्रचार म्हणतो, सर्वत्र एक व्युत्पन्न आहे.

178
00:12:43,000 --> 00:12:47,000
येथे, मला काय म्हणायचे आहे ते दाखवण्यासाठी, s च्या f च्या बरोबरीचे s वर्ग उदाहरण पाहू.

179
00:12:47,000 --> 00:12:51,539
पुन्हा, आम्ही या फंक्शनचा एक परिवर्तन म्हणून विचार करतो,

180
00:12:51,539 --> 00:12:56,000
जटिल समतलातील प्रत्येक बिंदू s ला बिंदू s वर्गावर हलवतो.

181
00:12:56,000 --> 00:12:59,855
तुमच्यापैकी ज्यांना कॅल्क्युलस माहित आहे, तुम्हाला माहित आहे की तुम्ही

182
00:12:59,855 --> 00:13:03,873
कोणत्याही इनपुटवर या फंक्शनचे व्युत्पन्न घेऊ शकता, परंतु त्या परिवर्तनाचा

183
00:13:03,873 --> 00:13:08,000
एक मनोरंजक गुणधर्म आहे जो त्या वस्तुस्थितीशी संबंधित आणि जवळजवळ समतुल्य आहे.

184
00:13:08,000 --> 00:13:13,751
जर तुम्ही इनपुट स्पेसमधील कोणत्याही दोन रेषा पाहिल्या ज्या काही कोनात छेदतात आणि

185
00:13:13,751 --> 00:13:20,000
परिवर्तनानंतर त्या कशात बदलतात याचा विचार केला, तरीही त्या त्याच कोनात एकमेकांना छेदतील.

186
00:13:20,000 --> 00:13:23,857
रेषा वक्र होऊ शकतात, आणि ते ठीक आहे, परंतु महत्त्वाचा

187
00:13:23,857 --> 00:13:28,000
भाग असा आहे की त्या ज्या कोनात छेदतात तो अपरिवर्तित राहतो.

188
00:13:28,000 --> 00:13:35,000
आणि हे तुम्ही निवडलेल्या कोणत्याही जोडीसाठी खरे आहे.

189
00:13:35,000 --> 00:13:38,800
म्हणून जेव्हा मी म्हणतो की फंक्शनचे सर्वत्र व्युत्पन्न आहे, तेव्हा मी

190
00:13:38,800 --> 00:13:42,873
तुम्हाला या कोन-संरक्षण गुणधर्माबद्दल विचार करू इच्छितो, की कोणत्याही वेळी

191
00:13:42,873 --> 00:13:47,000
दोन रेषा एकमेकांना छेदतात, परिवर्तनानंतर त्यांच्यामधील कोन अपरिवर्तित राहतो.

192
00:13:47,000 --> 00:13:52,382
एका दृष्टीक्षेपात, ग्रिड रेषा ज्या वक्रांमध्ये बदलतात त्या सर्व वक्र

193
00:13:52,382 --> 00:13:58,000
एकमेकांना काटकोनात कसे छेदतात हे लक्षात घेऊन कौतुक करणे सर्वात सोपे आहे.

194
00:13:58,000 --> 00:14:02,029
सर्वत्र व्युत्पन्न असलेल्या जटिल फंक्शन्सना विश्लेषण म्हणतात, म्हणून

195
00:14:02,029 --> 00:14:06,000
तुम्ही विश्लेषणात्मक या शब्दाचा अर्थ कोन-संरक्षण असा विचार करू शकता.

196
00:14:06,000 --> 00:14:10,000
मान्य आहे, मी इथे तुमच्याशी थोडे खोटे बोलत आहे, पण थोडेसे.

197
00:14:10,000 --> 00:14:13,386
तुमच्यापैकी ज्यांना पूर्ण तपशील हवा आहे त्यांच्यासाठी एक छोटीशी

198
00:14:13,386 --> 00:14:16,666
खबरदारी म्हणजे फंक्शनचे डेरिव्हेटिव्ह शून्य असलेल्या इनपुटवर,

199
00:14:16,666 --> 00:14:20,000
कोन जतन करण्याऐवजी, त्यांना काही पूर्णांकाने गुणाकार केला जातो.

200
00:14:20,000 --> 00:14:24,702
परंतु ते बिंदू आतापर्यंत अल्पसंख्य आहेत आणि विश्लेषणात्मक

201
00:14:24,702 --> 00:14:29,000
कार्यासाठी जवळजवळ सर्व इनपुटसाठी, कोन जतन केले जातात.

202
00:14:29,000 --> 00:14:32,966
म्हणून जेव्हा मी विश्लेषणात्मक म्हणतो तेव्हा तुम्हाला वाटते

203
00:14:32,966 --> 00:14:37,000
की कोन-संरक्षण आहे, मला वाटते की ते एक चांगले अंतर्ज्ञान आहे.

204
00:14:37,000 --> 00:14:41,346
आता, जर तुम्ही क्षणभर त्याबद्दल विचार केला आणि हा एक मुद्दा आहे ज्याचे

205
00:14:41,346 --> 00:14:46,000
तुम्ही कौतुक करावे असे मला वाटते, तर ही एक अतिशय प्रतिबंधात्मक मालमत्ता आहे.

206
00:14:46,000 --> 00:14:51,000
छेदणाऱ्या रेषांच्या कोणत्याही जोडीमधील कोन अपरिवर्तित राहिले पाहिजे.

207
00:14:51,000 --> 00:14:58,000
आणि तरीही, तेथे असलेले कोणतेही कार्य ज्याचे नाव आहे ते विश्लेषणात्मक आहे.

208
00:14:58,000 --> 00:15:02,529
जटिल विश्लेषणाचे क्षेत्र, जे रीमनने त्याच्या आधुनिक स्वरूपात स्थापित करण्यास

209
00:15:02,529 --> 00:15:07,058
मदत केली, जवळजवळ संपूर्णपणे गणित आणि विज्ञानाच्या इतर क्षेत्रातील परिणाम आणि

210
00:15:07,058 --> 00:15:12,000
नमुने समजून घेण्यासाठी विश्लेषणात्मक फंक्शन्सच्या गुणधर्मांचा फायदा घेण्याबद्दल आहे.

211
00:15:12,000 --> 00:15:15,298
विमानाच्या उजव्या अर्ध्या भागावर या अनंत बेरीजने

212
00:15:15,298 --> 00:15:19,000
परिभाषित केलेले झेटा फंक्शन हे विश्लेषणात्मक कार्य आहे.

213
00:15:19,000 --> 00:15:26,000
हे सर्व वक्र ज्या ग्रिडलाइनमध्ये बदलतात ते एकमेकांना काटकोनात कसे छेदतात ते पहा.

214
00:15:26,000 --> 00:15:31,027
त्यामुळे जटिल फंक्शन्सबद्दल आश्चर्यकारक वस्तुस्थिती अशी आहे की जर तुम्हाला एखादे

215
00:15:31,027 --> 00:15:36,551
विश्लेषणात्मक फंक्शन मूळतः परिभाषित केलेल्या डोमेनच्या पलीकडे वाढवायचे असेल, उदाहरणार्थ,

216
00:15:36,551 --> 00:15:42,075
हे झेटा फंक्शन विमानाच्या डाव्या अर्ध्या भागात विस्तारित करा, तर तुम्हाला नवीन विस्तारित

217
00:15:42,075 --> 00:15:47,600
फंक्शनची आवश्यकता असल्यास. तरीही विश्लेषणात्मक व्हा, म्हणजेच ते अजूनही सर्वत्र कोन राखून

218
00:15:47,600 --> 00:15:53,000
ठेवते, ते तुम्हाला फक्त एकाच संभाव्य विस्तारासाठी सक्ती करते, जर ते अस्तित्वात असेल तर.

219
00:15:53,000 --> 00:15:58,384
हे एक अनंत अखंड जिगसॉ पझलसारखे आहे, जिथे कोन जतन करण्याची ही आवश्यकता

220
00:15:58,384 --> 00:16:04,000
तुम्हाला ती कशी वाढवायची यासाठी एकाच आणि फक्त एकाच पर्यायामध्ये लॉक करते.

221
00:16:04,000 --> 00:16:09,730
विश्‍लेषणात्मक कार्याचा विस्तार करण्याच्या या प्रक्रियेला केवळ विश्‍लेषणात्मक असण्याची

222
00:16:09,730 --> 00:16:15,000
शक्यता आहे, ज्याचा तुम्ही अंदाज लावला असेल, विश्‍लेषणात्मक निरंतरता असे म्हणतात.

223
00:16:15,000 --> 00:16:18,000
अशा प्रकारे पूर्ण रीमन झेटा फंक्शनची व्याख्या केली जाते.

224
00:16:18,000 --> 00:16:21,632
विमानाच्या उजव्या अर्ध्या भागावरील s च्या मूल्यांसाठी, जिथे वास्तविक भाग 1 पेक्षा

225
00:16:21,632 --> 00:16:25,000
मोठा आहे, फक्त त्यांना या बेरीजमध्ये प्लग करा आणि ते कुठे एकत्र होते ते पहा.

226
00:16:25,000 --> 00:16:28,865
आणि ते अभिसरण काही प्रकारचे सर्पिलसारखे दिसू शकते, कारण यापैकी प्रत्येक

227
00:16:28,865 --> 00:16:33,000
संज्ञा एका जटिल शक्तीवर वाढवण्याचा परिणाम प्रत्येकाला फिरवण्याचा प्रभाव असतो.

228
00:16:33,000 --> 00:16:36,692
मग उर्वरित विमानासाठी, आम्हाला माहित आहे की ही व्याख्या

229
00:16:36,692 --> 00:16:40,384
वाढवण्याचा एकच आणि एकच मार्ग आहे जेणेकरून फंक्शन अजूनही

230
00:16:40,384 --> 00:16:45,000
विश्लेषणात्मक असेल, म्हणजे ते अजूनही प्रत्येक बिंदूवर कोन राखून ठेवेल.

231
00:16:45,000 --> 00:16:48,383
म्हणून आम्ही फक्त असे म्हणतो की व्याख्येनुसार, विमानाच्या

232
00:16:48,383 --> 00:16:52,000
डाव्या अर्ध्या भागावर जेटा फंक्शन जे काही विस्तार असेल ते आहे.

233
00:16:52,000 --> 00:16:58,000
आणि ही एक वैध व्याख्या आहे कारण फक्त एक संभाव्य विश्लेषणात्मक निरंतरता आहे.

234
00:16:58,000 --> 00:17:01,000
लक्ष द्या, ही एक अतिशय अस्पष्ट व्याख्या आहे.

235
00:17:01,000 --> 00:17:05,090
तो फक्त म्हणतो, या जिगसॉ पझलचे सोल्यूशन वापरा, जे अधिक अमूर्त व्युत्पत्तीद्वारे

236
00:17:05,090 --> 00:17:09,539
अस्तित्वात असले पाहिजे हे आपल्याला माहित आहे, परंतु ते नेमके कसे सोडवायचे ते निर्दिष्ट

237
00:17:09,539 --> 00:17:10,000
करत नाही.

238
00:17:10,000 --> 00:17:13,333
हा विस्तार कसा दिसतो यावर गणितज्ञांची चांगलीच समज

239
00:17:13,333 --> 00:17:17,000
आहे, परंतु त्यातील काही महत्त्वाचे भाग गूढ राहिले आहेत.

240
00:17:17,000 --> 00:17:19,000
एक दशलक्ष डॉलर रहस्य, खरं.

241
00:17:19,000 --> 00:17:24,000
चला खरं तर थोडा वेळ घ्या आणि रीमन गृहीतकाबद्दल बोलूया, दशलक्ष डॉलर्सची समस्या.

242
00:17:24,000 --> 00:17:28,000
ज्या ठिकाणी हे कार्य शून्याच्या बरोबरीचे आहे ती ठिकाणे खूप महत्त्वाची आहेत.

243
00:17:28,000 --> 00:17:33,000
म्हणजेच, परिवर्तनानंतर कोणते बिंदू उत्पत्तीवर मॅप केले जातात.

244
00:17:33,000 --> 00:17:41,000
या विस्ताराबद्दल आपल्याला एक गोष्ट माहित आहे की ऋण सम संख्या शून्यावर मॅप केली जातात.

245
00:17:41,000 --> 00:17:44,000
याला सामान्यतः क्षुल्लक शून्य म्हणतात.

246
00:17:44,000 --> 00:17:47,461
येथे नामकरण हे गणितज्ञांच्या प्रदीर्घ परंपरेतून आले आहे जेव्हा

247
00:17:47,461 --> 00:17:50,758
त्यांना ते अगदी नीट समजते तेव्हा त्यांना क्षुल्लक म्हणायचे,

248
00:17:50,758 --> 00:17:54,000
जरी ही वस्तुस्थिती सुरुवातीपासूनच अजिबात स्पष्ट नसली तरीही.

249
00:17:54,000 --> 00:17:58,063
आम्हाला हे देखील माहित आहे की शून्यावर मॅप केलेले उर्वरित बिंदू

250
00:17:58,063 --> 00:18:02,000
या उभ्या पट्टीमध्ये कुठेतरी बसतात, ज्याला गंभीर पट्टी म्हणतात.

251
00:18:02,000 --> 00:18:09,000
आणि त्या क्षुल्लक शून्यांचे विशिष्ट स्थान मूळ संख्यांबद्दल आश्चर्यकारक माहिती एन्कोड करते.

252
00:18:09,000 --> 00:18:12,350
या फंक्शनमध्ये प्राइम बद्दल इतकी माहिती का आहे हे खरंच खूप मनोरंजक

253
00:18:12,350 --> 00:18:15,650
आहे आणि मला निश्चितपणे वाटते की मी नंतर त्याबद्दल एक व्हिडिओ तयार

254
00:18:15,650 --> 00:18:19,000
करेन, परंतु सध्या गोष्टी खूप लांब आहेत, म्हणून मी ते अस्पष्ट ठेवतो.

255
00:18:19,000 --> 00:18:24,081
रिमनने असे गृहीत धरले की हे सर्व नॉन-क्षुल्लक शून्य पट्टीच्या

256
00:18:24,081 --> 00:18:29,000
मध्यभागी, s च्या ओळीवर बसतात, ज्याचा वास्तविक भाग अर्धा आहे.

257
00:18:29,000 --> 00:18:31,000
याला क्रिटिकल लाइन म्हणतात.

258
00:18:31,000 --> 00:18:35,500
जर ते खरे असेल, तर ते आपल्याला मूळ संख्यांच्या पॅटर्नवर तसेच

259
00:18:35,500 --> 00:18:40,000
गणितातील इतर अनेक नमुन्यांवर विलक्षणपणे घट्ट पकड मिळवून देते.

260
00:18:40,000 --> 00:18:44,742
आता, आत्तापर्यंत, जेव्हा मी zeta फंक्शन कसे दिसते ते दाखवले आहे, तेव्हा मी फक्त ते

261
00:18:44,742 --> 00:18:49,714
स्क्रीनवर ग्रिडच्या भागासाठी काय करते हे दाखवले आहे आणि अशा प्रकारची त्याची जटिलता कमी

262
00:18:49,714 --> 00:18:50,000
होते.

263
00:18:50,000 --> 00:18:53,570
म्हणून जर मी ही गंभीर ओळ हायलाइट केली आणि परिवर्तन

264
00:18:53,570 --> 00:18:57,000
लागू केले तर कदाचित ते मूळ ओलांडत नाही असे वाटेल.

265
00:18:57,000 --> 00:19:03,000
तथापि, त्या ओळीची अधिकाधिक रूपांतरित आवृत्ती कशी दिसते ते येथे आहे.

266
00:19:03,000 --> 00:19:07,000
हे शून्य क्रमांकावरून कितीतरी वेळा कसे जात आहे ते पहा.

267
00:19:07,000 --> 00:19:12,416
जर तुम्ही हे सिद्ध करू शकता की सर्व नॉन-क्षुल्लक शून्य या ओळीवर कुठेतरी बसतात, तर क्ले

268
00:19:12,416 --> 00:19:17,770
मॅथ इन्स्टिट्यूट तुम्हाला एक दशलक्ष डॉलर्स देते आणि तुम्ही शेकडो, हजारो नाही तर, आधीच

269
00:19:17,770 --> 00:19:23,000
दाखवलेले आधुनिक गणिताचे निकाल देखील सिद्ध कराल. हे गृहितक सत्य असण्यावर अवलंबून आहे.

270
00:19:23,000 --> 00:19:26,857
या विस्तारित फंक्शनबद्दल आपल्याला आणखी एक गोष्ट माहित

271
00:19:26,857 --> 00:19:31,000
आहे की ते बिंदू नकारात्मक एक ओव्हर ऋण एक बारा वर मॅप करते.

272
00:19:31,000 --> 00:19:35,029
आणि जर तुम्ही हे मूळ बेरीजमध्ये जोडले तर असे दिसते की आम्ही एक अधिक

273
00:19:35,029 --> 00:19:39,000
दोन अधिक तीन अधिक चार म्हणत आहोत, अनंतापर्यंत आणि पुढे, ऋण एक बारा.

274
00:19:39,000 --> 00:19:43,288
आता, तरीही याला बेरीज म्हणणे अवास्तव वाटू शकते, कारण विमानाच्या डाव्या

275
00:19:43,288 --> 00:19:48,000
अर्ध्या भागावरील झेटा फंक्शनची व्याख्या या बेरीजमधून थेट परिभाषित केलेली नाही.

276
00:19:48,000 --> 00:19:50,969
त्याऐवजी, ते ज्या डोमेनच्या पलीकडे एकत्रित होते

277
00:19:50,969 --> 00:19:54,000
ते विश्लेषणात्मकपणे बेरीज चालू ठेवण्यापासून येते.

278
00:19:54,000 --> 00:19:58,034
म्हणजे, ओळीच्या पहिल्या ओळीपासून सुरू झालेले जिगसॉ सोडवणे,

279
00:19:58,034 --> 00:20:02,000
विमानाच्या उजव्या अर्ध्या भागावर सुरू झालेले जिगसॉ सोडवणे.

280
00:20:02,000 --> 00:20:04,257
असे म्हटले आहे की, तुम्हाला हे मान्य करावे लागेल की या विश्लेषणात्मक

281
00:20:04,257 --> 00:20:06,612
निरंतरतेचे वेगळेपण, जिगसॉ पझलमध्ये फक्त एकच उपाय आहे ही वस्तुस्थिती, या

282
00:20:06,612 --> 00:20:09,000
विस्तारित मूल्ये आणि मूळ बेरीज यांच्यातील काही आंतरिक कनेक्शनचे सूचक आहे.

