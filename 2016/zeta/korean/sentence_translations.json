[
 {
  "input": "The Riemann zeta function.",
  "translatedText": "리만 제타 함수.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 4.22,
  "end": 5.7
 },
 {
  "input": "This is one of those objects in modern math that a lot of you might have heard of, but which can be really difficult to understand.",
  "translatedText": "이것은 많은 분들이 들어보셨을 현대 수학의 객체 중 하나이지만 이해하기는 정말 어려울 수 있습니다.",
  "model": "google_nmt",
  "from_community_srt": "리만 제타 함수 많이 들어보긴 했지만 현대 수학의 주제들 중에서 가장 이해하기 어려운 것 중 하나입니다.",
  "n_reviews": 0,
  "start": 6.4,
  "end": 11.44
 },
 {
  "input": "Don't worry, I'll explain that animation that you just saw in a few minutes.",
  "translatedText": "걱정하지 마십시오. 방금 본 애니메이션에 대해 몇 분 후에 설명하겠습니다.",
  "model": "google_nmt",
  "from_community_srt": "지금 이 그림을 모른다고 걱정하지 마세요. 이제부터 이 그래프가 뭔지 설명해 드리겠습니다.",
  "n_reviews": 0,
  "start": 12.28,
  "end": 15.18
 },
 {
  "input": "A lot of people know about this function because there's a one million dollar prize out for anyone who can figure out when it equals zero, an open problem known as the Riemann hypothesis.",
  "translatedText": "많은 사람들이 이 함수에 대해 알고 있습니다. 왜냐하면 그것이 0과 같을 때를 알아낼 수 있는 사람에게는 백만 달러의 상금이 있기 때문입니다. 이는 리만 가설(Riemann Hypothese)로 알려진 공개 문제입니다.",
  "model": "google_nmt",
  "from_community_srt": "많은 사람들이 이 함수에 대해 알고 있는데 이 함수가 백만 달러의 상금이 달려 있다는 밀레니엄 난제와 관련있기 때문일겁니다. 이 함수가 백만 달러의 상금이 달려 있다는 밀레니엄 난제와 관련있기 때문일겁니다. 화면에 보이는 식(리만 제타 함수)이 0이 되는 값을 구하는 문제로, 리만 가설 이라고 하죠. 화면에 보이는 식(리만 제타 함수)이 0이 되는 값을 구하는 문제로,",
  "n_reviews": 0,
  "start": 15.98,
  "end": 24.96
 },
 {
  "input": "Some of you may have heard of it in the context of the divergent sum 1 plus 2 plus 3 plus 4 on and on up to infinity.",
  "translatedText": "여러분 중 일부는 1 더하기 2 더하기 3 더하기 4의 무한한 합에 대해 들어보셨을 것입니다.",
  "model": "google_nmt",
  "from_community_srt": "리만 가설 이라고 하죠. 누군가는 이 함수를 1 + 2 + 3 + 4 + ... 라는 합에 대한 신기한 결과와 연관이 있다는 것도 알고 있을 것입니다.",
  "n_reviews": 0,
  "start": 25.6,
  "end": 32.56
 },
 {
  "input": "You see, there's a sense in which this sum equals negative 1 twelfth, which seems nonsensical if not obviously wrong.",
  "translatedText": "알다시피, 이 합이 -1/12와 같다는 의미가 있는데, 이는 명백히 틀린 것은 아니지만 무의미해 보입니다.",
  "model": "google_nmt",
  "from_community_srt": "당신이 직관적으로 보더라도 이 합의 결과가 -1/12이 된다는 것은 완전히 틀렸거나 넌센스로 보일 것입니다.",
  "n_reviews": 0,
  "start": 33.3,
  "end": 40.18
 },
 {
  "input": "But a common way to define what this equation is actually saying uses the Riemann zeta function.",
  "translatedText": "그러나 이 방정식이 실제로 말하는 것을 정의하는 일반적인 방법은 리만 제타 함수를 사용합니다.",
  "model": "google_nmt",
  "from_community_srt": "하지만 이 수식의 정당성을 함의해줄 수 있는 수학적 논의가 리만 제타 함수를 정의하는 데 쓰입니다.",
  "n_reviews": 0,
  "start": 40.7,
  "end": 45.92
 },
 {
  "input": "But as any casual math enthusiast who started to read into this knows, its definition references this one idea called analytic continuation, which has to do with complex valued functions.",
  "translatedText": "그러나 이 내용을 읽기 시작한 평범한 수학 애호가라면 누구나 알고 있듯이 이 정의는 복소수 값 함수와 관련된 분석 연속이라는 하나의 아이디어를 참조합니다.",
  "model": "google_nmt",
  "from_community_srt": "하지만 수학을 취미로 공부하는 사람들은 이에 대한 내용을 읽으려 할 때 굉장히 비직관적인 아이디어를 담고 있는 용어, \"해석적 연속\" 을 보게 되죠. 이는 복소함수에서 쓰이는 용어이고, 불분명하고,",
  "n_reviews": 0,
  "start": 46.76,
  "end": 57.38
 },
 {
  "input": "And this idea can be frustratingly opaque and unintuitive.",
  "translatedText": "그리고 이 아이디어는 실망스러울 정도로 불투명하고 직관적이지 않을 수 있습니다.",
  "model": "google_nmt",
  "from_community_srt": "비직관적이죠.",
  "n_reviews": 0,
  "start": 57.86,
  "end": 60.52
 },
 {
  "input": "So what I'd like to do here is just show you all what this zeta function actually looks like, and to explain what this idea of analytic continuation is in a visual and more intuitive way.",
  "translatedText": "그래서 제가 여기서 하고 싶은 것은 이 제타 함수가 실제로 어떻게 보이는지 보여주고, 분석 연속이라는 개념이 무엇인지 시각적이고 보다 직관적인 방식으로 설명하는 것입니다.",
  "model": "google_nmt",
  "from_community_srt": "제가 여기서 할 것은 당신에게 제타 함수가 정말로 어떻게 생겼는지를 보여주고 해석적 연속이라는 아이디어에 대해 보다 시각적이고 직관적인 방법으로 설명해줄 것입니다.",
  "n_reviews": 0,
  "start": 61.4,
  "end": 71.88
 },
 {
  "input": "I'm assuming that you know about complex numbers, and that you're comfortable working with them.",
  "translatedText": "나는 당신이 복소수에 대해 알고 있고 그것들을 다루는 데 익숙하다고 가정합니다.",
  "model": "google_nmt",
  "from_community_srt": "저는 당신이 복소수에 대해 알고 있고 그것을 별 문제 없이 잘 다룰 수 있다고 가정할 것입니다.",
  "n_reviews": 0,
  "start": 73.98,
  "end": 78.0
 },
 {
  "input": "And I'm tempted to say that you should know calculus, since analytic continuation is all about derivatives, but for the way I'm planning to present things I think you might actually be fine without that.",
  "translatedText": "분석 연속은 도함수에 관한 것이기 때문에 여러분은 미적분학을 알아야 한다고 말하고 싶습니다. 그러나 제가 제시하려는 방식에 따르면 미적분학이 없어도 괜찮을 것 같습니다.",
  "model": "google_nmt",
  "from_community_srt": "그리고 미적분에 대해서도 알아야 한다고 말하고 싶으나 (해석적 연속이 미분과 큰 연관성을 가지고 있기 때문에) 제가 영상으로 표현하는 과정을 생각해볼 때 어쩌면 별로 큰 문제가 없을지도 모릅니다.",
  "n_reviews": 0,
  "start": 78.44,
  "end": 88.26
 },
 {
  "input": "So to jump right into it, let's just define what this zeta function is.",
  "translatedText": "그럼 바로 시작하기 위해 이 제타 함수가 무엇인지 정의해 보겠습니다.",
  "model": "google_nmt",
  "from_community_srt": "그래서 이제부터 시작해봅시다. 제타 함수의 정의를 보면, 어떤 정의역에 대해",
  "n_reviews": 0,
  "start": 89.14,
  "end": 92.8
 },
 {
  "input": "For a given input, where we commonly use the variable s, the function is 1 over 1 to the s, which is always 1, plus 1 over 2 to the s, plus 1 over 3 to the s, plus 1 over 4 to the s, on and on and on, summing up over all natural numbers.",
  "translatedText": "일반적으로 변수 s를 사용하는 주어진 입력에 대해 함수는 s에 대한 1분의 1입니다. 이는 항상 1이고, s에 2분의 1을 더하고, s에 3분의 1을 더하고, s에 4분의 1을 더합니다. s, 계속해서 모든 자연수를 합산합니다.",
  "model": "google_nmt",
  "from_community_srt": "변수를 보통 s라 표기하고 (역자 : 수학자들이 리만의 노테이션을 따름) 1/1^s(언제나 1) 더하기 1/2^s 더하기 1/3^s 더하기 1/4^s ...를 반복하여 모든 자연수에 대해 반복한 것이 함숫값입니다.",
  "n_reviews": 0,
  "start": 92.8,
  "end": 108.78
 },
 {
  "input": "So for example, let's say you plug in a value like s equals 2.",
  "translatedText": "예를 들어 s = 2와 같은 값을 대입한다고 가정해 보겠습니다.",
  "model": "google_nmt",
  "from_community_srt": "예를 들어서,",
  "n_reviews": 0,
  "start": 110.96,
  "end": 114.08
 },
 {
  "input": "You'd get 1 plus 1 over 4 plus 1 over 9 plus 1 sixteenth, and as you keep adding more and more reciprocals of squares, this just so happens to approach pi squared over 6, which is around 1.645.",
  "translatedText": "4분의 1 더하기 1 더하기 9분의 1 더하기 16분의 1을 얻게 되고, 계속해서 제곱의 역수를 더하면 6분의 파이 제곱에 접근하게 되는데, 이는 약 1.645입니다.",
  "model": "google_nmt",
  "from_community_srt": "변수 s에 2를 넣는다고 하면, 함숫값은 1에 + 1/4 + 1/9 + 1/16 + ... 를 더하는 것이고, 이렇게 계속 제곱수의 역수의 합을 더해보다 보면 π^2/6 로 수렴하게 됩니다. 이것은 약 1.645이고,",
  "n_reviews": 0,
  "start": 114.72,
  "end": 128.98
 },
 {
  "input": "There's a very beautiful reason for why pi shows up here, and I might do a video on it at a later date, but that's just the tip of the iceberg for why this function is beautiful.",
  "translatedText": "pi가 여기에 나타나는 매우 아름다운 이유가 있으며 나중에 이에 대한 비디오를 만들 수도 있지만 이는 이 함수가 아름다운 이유에 대한 빙산의 일각에 불과합니다.",
  "model": "google_nmt",
  "from_community_srt": "여기서 왜 π가 나오는지에 대한 굉장히 아름다운 논증을 알고 있고, 나중에 만들 영상에서 이를 다룰지도 모르나 이정도는 그저 이 함수가 얼마나 아름다운지에 대한 빙산의 일각일 뿐입니다.",
  "n_reviews": 0,
  "start": 129.98,
  "end": 137.8
 },
 {
  "input": "You could do the same thing for other inputs s, like 3 or 4, and sometimes you get other interesting values.",
  "translatedText": "3이나 4와 같은 다른 입력에 대해서도 동일한 작업을 수행할 수 있으며 때로는 다른 흥미로운 값을 얻을 수도 있습니다.",
  "model": "google_nmt",
  "from_community_srt": "이 함수는 같은 방법으로 변수 s에 3이나 4를 넣어서 때때로 다른 흥미로운 결과들을 보게 되죠.",
  "n_reviews": 0,
  "start": 138.38,
  "end": 144.48
 },
 {
  "input": "And so far, everything feels pretty reasonable.",
  "translatedText": "그리고 지금까지는 모든 것이 꽤 합리적이라고 느껴집니다.",
  "model": "google_nmt",
  "from_community_srt": "일단 지금까지의 모든 방법론은 충분히 합리적으로 보입니다.",
  "n_reviews": 0,
  "start": 145.24,
  "end": 147.18
 },
 {
  "input": "You're adding up smaller and smaller amounts, and these sums approach some number.",
  "translatedText": "점점 더 적은 금액을 합산하고 있으며 이러한 합계는 어느 정도 숫자에 가까워집니다.",
  "model": "google_nmt",
  "from_community_srt": "그저 작아지고 더 작아지는 수열에 대해 더해서 값을 구하는 것 뿐이니까요...",
  "n_reviews": 0,
  "start": 147.72,
  "end": 151.64
 },
 {
  "input": "Great, no craziness here.",
  "translatedText": "좋습니다. 여기에는 광기가 없습니다.",
  "model": "google_nmt",
  "from_community_srt": "좋네요. 지금까지 완벽합니다.",
  "n_reviews": 0,
  "start": 152.18,
  "end": 153.8
 },
 {
  "input": "Yet, if you were to read about it, you might see some people say that zeta of negative 1 equals negative 1 twelfth.",
  "translatedText": "그러나 그것에 대해 읽으면 일부 사람들이 -1의 제타는 -1의 12분의 1과 같다고 말하는 것을 볼 수 있습니다.",
  "model": "google_nmt",
  "from_community_srt": "하지만, 제타 함수에 대한 내용을 읽어보면 제타함수의 -1값이 -1/12라고 하는데요, 이것은 무한합으로 볼 때",
  "n_reviews": 0,
  "start": 154.66,
  "end": 160.5
 },
 {
  "input": "But looking at this infinite sum, that doesn't make any sense.",
  "translatedText": "그러나 이 무한한 합을 보면 그것은 말이 되지 않습니다.",
  "model": "google_nmt",
  "from_community_srt": "전혀 말이 되지 않죠.",
  "n_reviews": 0,
  "start": 161.52,
  "end": 164.4
 },
 {
  "input": "When you raise each term to the negative 1, flipping each fraction, you get 1 plus 2 plus 3 plus 4 on and on over all natural numbers.",
  "translatedText": "각 항을 -1로 올리고 각 분수를 뒤집으면 모든 자연수에 대해 1 더하기 2 더하기 3 더하기 4가 계속해서 나옵니다.",
  "model": "google_nmt",
  "from_community_srt": "만약에 함수의 정의에 -1을 대입해서 분수를 뒤집게 되면, 1 + 2 + 3 + 4 + ... 라는 모든 자연수의 합이란 결과를 얻고 이것은 자명하게도 어디에도 수렴하지 않죠.",
  "n_reviews": 0,
  "start": 164.4,
  "end": 175.16
 },
 {
  "input": "And obviously that doesn't approach anything, certainly not negative 1 twelfth, right?",
  "translatedText": "그리고 분명히 그것은 아무것도 접근하지 않습니다. 확실히 -1/12도 아니죠, 그렇죠?",
  "model": "google_nmt",
  "from_community_srt": "적어도 -1/12는 아니죠,",
  "n_reviews": 0,
  "start": 175.72,
  "end": 179.76
 },
 {
  "input": "And, as any mercenary looking into the Riemann hypothesis knows, this function is said to have trivial zeros at negative even numbers.",
  "translatedText": "그리고 리만 가설을 조사하는 모든 용병이 알고 있듯이 이 함수는 음의 짝수에서 사소한 0을 갖는다고 합니다.",
  "model": "google_nmt",
  "from_community_srt": "안그래요? 그리고, 리만 가설에 돈이 달려 있다는 말만 듣고 온 사람들은, 이 함수가 \"음수인 짝수에서 자명한 영점\" 을 갖는다는 말을 들었을 것입니다.",
  "n_reviews": 0,
  "start": 180.94,
  "end": 188.82
 },
 {
  "input": "So for example, that would mean that zeta of negative 2 equals 0.",
  "translatedText": "예를 들어, 이는 -2의 제타가 0과 같다는 것을 의미합니다.",
  "model": "google_nmt",
  "from_community_srt": "예를 들어서,",
  "n_reviews": 0,
  "start": 189.4,
  "end": 192.76
 },
 {
  "input": "But when you plug in negative 2, it gives you 1 plus 4 plus 9 plus 16 on and on, which again obviously doesn't approach anything, much less 0, right?",
  "translatedText": "하지만 마이너스 2를 연결하면 1 더하기 4 더하기 9 더하기 16이 계속해서 나오죠. 이는 분명히 아무 것도 접근하지 않고, 0은 훨씬 적습니다. 그렇죠?",
  "model": "google_nmt",
  "from_community_srt": "이 리만 제타 함수에 -2를 넣으면 0이 된다는 것인 하지만 여기에 -2를 대입해본다면 1 + 4 + 9 + 16 + ... 라는 값을 얻게 되고, 이것도 또한 자명하게도 어디에도 수렴하지 않습니다. 적어도 0은 아니죠.",
  "n_reviews": 0,
  "start": 192.76,
  "end": 203.7
 },
 {
  "input": "Well, we'll get to negative values in a few minutes, but for right now, let's just say the only thing that seems reasonable.",
  "translatedText": "글쎄, 우리는 몇 분 안에 음수 값에 도달할 것입니다. 그러나 지금은 합리적으로 보이는 유일한 것을 말하겠습니다.",
  "model": "google_nmt",
  "from_community_srt": "그렇죠? 그... 몇분 뒤에 이것에 대해서 말해주겠지만 지금은 일단 이 함수가 잘 정의되는 합리적인 경우는 함수의 정의역인 s가 1 이상인 경우, 이 무한합이 수렴할 경우라고 합시다.",
  "n_reviews": 0,
  "start": 204.86,
  "end": 210.62
 },
 {
  "input": "This function only makes sense when s is greater than 1, which is when this sum converges.",
  "translatedText": "이 함수는 s가 1보다 큰 경우, 즉 이 합이 수렴되는 경우에만 의미가 있습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 211.24,
  "end": 216.22
 },
 {
  "input": "So far, it's simply not defined for other values.",
  "translatedText": "지금까지는 단순히 다른 값에 대해 정의되지 않았습니다.",
  "model": "google_nmt",
  "from_community_srt": "지금까진, 도저히 다른 경우에 대해서는 생각해낼 수 없습니다.",
  "n_reviews": 0,
  "start": 216.74,
  "end": 219.76
 },
 {
  "input": "Now, with that said, Bernard Riemann was somewhat of a father to complex analysis, which is the study of functions that have complex numbers as inputs and outputs.",
  "translatedText": "말하자면, 버나드 리만(Bernard Riemann)은 복소수를 입력과 출력으로 사용하는 함수에 대한 연구인 복소 분석의 아버지와도 같습니다.",
  "model": "google_nmt",
  "from_community_srt": "이제부턴 베른하르트 리만 이야기를 해보겠습니다. 그는 복소해석학의 아버지라고 불리우는데 복소해석학은 함수를 연구하는 학문 중에서도 특히 복소수를 정의역과 치역으로 갖는 함수를 연구하는 학문입니다.",
  "n_reviews": 0,
  "start": 220.84,
  "end": 229.82
 },
 {
  "input": "So rather than just thinking about how this sum takes a number s on the real number line to another number on the real number line, his main focus was on understanding what happens when you plug in a complex value for s.",
  "translatedText": "따라서 이 합이 어떻게 실수선의 숫자 s를 실수선의 다른 숫자로 가져오는지에 대해 생각하는 것보다 그의 주요 초점은 s에 복소수 값을 대입하면 어떤 일이 발생하는지 이해하는 것이었습니다.",
  "model": "google_nmt",
  "from_community_srt": "그래서 리만이 리만 제타 함수를 생각했을 땐 무한합으로서 정의되는, s에 대해 실수에서 실수로 가는 함수로 정의했다 라고 생각했다기 보단, 그는 이 함수에 대한 주요 목적을 변수 s를 복소수로 확장했을 때 어떤 일이 일어나는가 에 두고 생각했을 것입니다.",
  "n_reviews": 0,
  "start": 230.72,
  "end": 243.24
 },
 {
  "input": "So for example, maybe instead of plugging in 2, you would plug in 2 plus i.",
  "translatedText": "예를 들어 2를 연결하는 대신 2와 i를 연결하면 됩니다.",
  "model": "google_nmt",
  "from_community_srt": "이제 한번 2를 대입하는 대신, 2 + i 를 대입해보죠.",
  "n_reviews": 0,
  "start": 244.04,
  "end": 248.46
 },
 {
  "input": "Now, if you've never seen the idea of raising a number to the power of a complex value, it can feel kind of strange at first, because it no longer has anything to do with repeated multiplication.",
  "translatedText": "숫자를 복소수로 거듭제곱하는 아이디어를 본 적이 없다면 처음에는 이상하게 느껴질 수 있습니다. 더 이상 반복되는 곱셈과 관련이 없기 때문입니다.",
  "model": "google_nmt",
  "from_community_srt": "만약에 당신이 복소수를 지수를 가지는 형태에 대해서 익숙하지 않다면, 당신은 이것을 굉장히 이상하다고 생각할 것입니다. 더 이상 곱을 이만큼 반복하라는 개념으로서는 생각할 수 없을 테니까요.",
  "n_reviews": 0,
  "start": 250.28,
  "end": 259.74
 },
 {
  "input": "But mathematicians found that there is a very nice and very natural way to extend the definition of exponents beyond their familiar territory of real numbers and into the realm of complex values.",
  "translatedText": "그러나 수학자들은 지수의 정의를 친숙한 실수 영역을 넘어 복소수 값의 영역으로 확장하는 매우 훌륭하고 자연스러운 방법이 있음을 발견했습니다.",
  "model": "google_nmt",
  "from_community_srt": "하지만 수학자들은 지수라는 개념에 대해 굉장히 자연적인 정의의 확장을 생각해 냈습니다. 익숙한 실수에서 복소수로도 생각할 수 있게요.",
  "n_reviews": 0,
  "start": 260.66,
  "end": 270.94
 },
 {
  "input": "It's not super crucial to understand complex exponents for where I'm going with this video, but I think it'll still be nice if we just summarize the gist of it here.",
  "translatedText": "이 비디오에서 내가 어디로 갈 것인지에 대해 복잡한 지수를 이해하는 것이 그다지 중요하지는 않지만 여기서 요점만 요약하면 여전히 좋을 것이라고 생각합니다.",
  "model": "google_nmt",
  "from_community_srt": "이것이 이 영상을 이해하는 데 굉장히 중요한 것은 아니지만 저는 여기서 이것에 대한 요지 정도만 요약하고 싶네요.",
  "n_reviews": 0,
  "start": 272.92,
  "end": 280.88
 },
 {
  "input": "The basic idea is that when you write something like 1 half to the power of a complex number, you split it up as 1 half to the real part times 1 half to the pure imaginary part.",
  "translatedText": "기본적인 아이디어는 1/2의 복소수 거듭제곱과 같은 것을 쓸 때 1/2을 실수 부분으로, 1/2을 순수 허수 부분으로 나누는 것입니다.",
  "model": "google_nmt",
  "from_community_srt": "기본적인 아이디어는 이런 겁니다. 1/2의 2+i 제곱이라고 한다면, 둘을 나눠서 1/2의 i제곱이란 순허수 부분으로 나누는 것입니다.",
  "n_reviews": 0,
  "start": 281.5,
  "end": 291.3
 },
 {
  "input": "We're good on 1 half to the real part, there's no issues there.",
  "translatedText": "우리는 실제 부분에 대해 1/2을 잘 수행하고 있으며 거기에는 문제가 없습니다.",
  "model": "google_nmt",
  "from_community_srt": "실수 부분에는 어떤 문제도 없습니다.",
  "n_reviews": 0,
  "start": 292.08,
  "end": 295.26
 },
 {
  "input": "But what about raising something to a pure imaginary number?",
  "translatedText": "하지만 무언가를 순수 허수로 올리는 것은 어떻습니까?",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 295.56,
  "end": 298.6
 },
 {
  "input": "Well, the result is going to be some complex number on the unit circle in the complex plane.",
  "translatedText": "결과는 복소 평면의 단위원에 있는 복소수가 될 것입니다.",
  "model": "google_nmt",
  "from_community_srt": "하지만 순허수 부분에 대해서는 어떻게 해야 할까요? 이것의 결과는, 어떤 복소 평면 상의 단위원 위의 값 (역자 : 변수 θ가 있다 할 때 cosθ + isinθ) 중 하나가 됩니다.",
  "n_reviews": 0,
  "start": 302.66,
  "end": 308.46
 },
 {
  "input": "As you let that pure imaginary input walk up and down the imaginary line, the resulting output walks around that unit circle.",
  "translatedText": "순수 가상 입력이 가상 선을 따라 위아래로 이동하게 하면 결과 출력이 해당 단위원 주위를 이동합니다.",
  "model": "google_nmt",
  "from_community_srt": "당신이 순허수에 있는 변수를 위아래로 움직일때, 함숫값은 단위원의 좌표를 돌게 됩니다.",
  "n_reviews": 0,
  "start": 309.48,
  "end": 317.3
 },
 {
  "input": "For a base like 1 half, the output walks around the unit circle somewhat slowly.",
  "translatedText": "1/2과 같은 밑의 경우 출력은 단위원 주위를 다소 천천히 이동합니다.",
  "model": "google_nmt",
  "from_community_srt": "1/2 등의 큰 수일 수록 함수는 단위원의 좌표를 더 느리게 움직이고, 1/9 같은 작은 수일수록",
  "n_reviews": 0,
  "start": 321.28,
  "end": 325.9
 },
 {
  "input": "But for a base that's farther away from 1, like 1 ninth, then as you let this input walk up and down the imaginary axis, the corresponding output is going to walk around the unit circle more quickly.",
  "translatedText": "그러나 9분의 1과 같이 1에서 더 멀리 떨어져 있는 밑의 경우 이 입력이 허수 축을 위아래로 이동하게 하면 해당 출력이 단위 원 주위를 더 빠르게 이동하게 됩니다.",
  "model": "google_nmt",
  "from_community_srt": "함수는 단위원의 좌표를 더 빠르게 움직입니다.",
  "n_reviews": 0,
  "start": 326.84,
  "end": 338.22
 },
 {
  "input": "If you've never seen this and you're wondering why on earth this happens, I've left a few links to good resources in the description.",
  "translatedText": "이것을 본 적이 없고 대체 왜 이런 일이 발생하는지 궁금하다면 설명에 좋은 리소스에 대한 몇 가지 링크를 남겨 두었습니다.",
  "model": "google_nmt",
  "from_community_srt": "만약 이런 내용을 단 한번도 들어본 적이 없고, 왜 이렇게 되는지 궁금하다면, 제가 예전에 만든 영상 중에 이것을 다룬 것이 있으니 보시길 바랍니다.",
  "n_reviews": 0,
  "start": 339.3,
  "end": 344.66
 },
 {
  "input": "For here, I'm just going to move forward with the what without the why.",
  "translatedText": "여기서는 이유 없이 무엇만을 가지고 앞으로 나아갈 것입니다.",
  "model": "google_nmt",
  "from_community_srt": "이 영상에서는 이것에 대해 그냥 넘기겠습니다.",
  "n_reviews": 0,
  "start": 345.32,
  "end": 348.02
 },
 {
  "input": "The main takeaway is that when you raise something like 1 half to the power of 2 plus i, which is 1 half squared times 1 half to the i, that 1 half to the i part is going to be on the unit circle, meaning it has an absolute value of 1.",
  "translatedText": "주요 시사점은 1/2의 2 더하기 i의 거듭제곱, 즉 1/2의 제곱 곱하기 1/2의 i 값을 올리면 i 부분의 1/2이 단위원에 있게 된다는 것입니다. 절대값은 1입니다.",
  "model": "google_nmt",
  "from_community_srt": "여기서 기억해야 할 중요한 사실은 (1/2)^(2+i) 같은 수를 나눈 상황에서, (1/2)^i 부분은 단위원 위에 있을 것이고, 따라서 절댓값이 1이 된다는 것입니다. (역자 : 수학자들이 절댓값을 일반화한 norm을 고안했는데, 이를 통해서 복소수 상에서도 절댓값이 가지는 특정한 성질들을 보존할 수 있게 되었음.",
  "n_reviews": 0,
  "start": 349.18,
  "end": 363.82
 },
 {
  "input": "So when you multiply it, it doesn't change the size of the number, it just takes that 1 fourth and rotates it somewhat.",
  "translatedText": "따라서 이를 곱하면 숫자의 크기는 변경되지 않고 1/4을 취하고 약간 회전합니다.",
  "model": "google_nmt",
  "from_community_srt": "복소수의 norm은 a+bi에 대해 √a^2+b^2 그래서 이 허수 부분을 곱한다 해도, 그 크기는 변하지 않고, 오직 방향만이 변하게 된다는 것입니다.",
  "n_reviews": 0,
  "start": 365.68,
  "end": 372.06
 },
 {
  "input": "So, if you were to plug in 2 plus i to the zeta function, one way to think about what it does is to start off with all of the terms raised to the power of 2, which you can think of as piecing together lines whose lengths are the reciprocals of squares of numbers, which, like I said before, converges to pi squared over 6.",
  "translatedText": "따라서 2 더하기 i를 제타 함수에 연결하면 그것이 무엇을 하는지 생각하는 한 가지 방법은 모든 항을 2의 거듭제곱으로 시작하는 것입니다. 길이는 숫자의 제곱의 역수입니다. 앞서 말했듯이 6 분의 파이 제곱으로 수렴됩니다.",
  "model": "google_nmt",
  "from_community_srt": "오직 방향만이 변하게 된다는 것입니다. 이제 제타 함수에 2+i를 대입하고, 차근차근 생각해 보죠. 일단 각 항목에 제곱을 취한 후 각 항의 길이를 시각화 하여 x축 위에 올려 놓는 것을 상상 할 수 있습니다. 그리고 그 길이는 전에 말했듯이 π^2/6으로 수렴합니다.",
  "n_reviews": 0,
  "start": 375.1,
  "end": 393.54
 },
 {
  "input": "Then when you change that input from 2 up to 2 plus i, each of these lines gets rotated by some amount.",
  "translatedText": "그런 다음 해당 입력을 2에서 2 + i로 변경하면 각 선이 어느 정도 회전됩니다.",
  "model": "google_nmt",
  "from_community_srt": "이제 2에서 2+i로 값을 바꿔서 각각의 선들의 방향을 변환하는 것입니다.",
  "n_reviews": 0,
  "start": 394.3,
  "end": 400.34
 },
 {
  "input": "But importantly, the lengths of those lines won't change, so the sum still converges, it just does so in a spiral to some specific point on the complex plane.",
  "translatedText": "그러나 중요한 점은 선의 길이가 변하지 않기 때문에 합은 여전히 수렴한다는 것입니다. 나선형으로 복소 평면의 특정 지점에 수렴한다는 것입니다.",
  "model": "google_nmt",
  "from_community_srt": "여기서 중요한 점은, 크기가 변하는 것이 아니기 때문에 이 급수도 결국 수렴한다는 것이며, 나선(와선) 형태를 그리며 복소평면의 특정한 점에 수렴하게 됩니다.",
  "n_reviews": 0,
  "start": 400.34,
  "end": 409.58
 },
 {
  "input": "Here, let me show what it looks like when I vary the input s, represented with this yellow dot on the complex plane, where this spiral sum is always going to be showing the converging value for zeta of s.",
  "translatedText": "여기에서는 입력 s를 변경할 때의 모습을 보여 드리겠습니다. 복소 평면에 노란색 점으로 표시됩니다. 이 나선형 합은 항상 s의 제타에 대한 수렴 값을 표시합니다.",
  "model": "google_nmt",
  "from_community_srt": "나선(와선) 형태를 그리며 복소평면의 특정한 점에 수렴하게 됩니다. 이제 s가 바뀌면 어떻게 되는지 보여드리겠습니다. 복소평면의 노란 점은 s를 나타냅니다. 그리고 나선형의 끝에 있는 점은, ζ(s), 즉 이 합계가 어디로 수렴하는지 보여줍니다. 그리고 나선형의 끝에 있는 점은, ζ(s), 즉 이 합계가 어디로 수렴하는지 보여줍니다.",
  "n_reviews": 0,
  "start": 410.88,
  "end": 421.34
 },
 {
  "input": "What this means is that zeta of s, defined as this infinite sum, is a perfectly reasonable complex function as long as the real part of the input is greater than 1, meaning the input s sits somewhere on this right half of the complex plane.",
  "translatedText": "이것이 의미하는 바는 이 무한 합으로 정의된 s의 제타가 입력의 실수 부분이 1보다 큰 한 완벽하게 합리적인 복소 함수라는 것입니다. 즉, 입력 s가 복소 평면의 오른쪽 절반 어딘가에 위치한다는 의미입니다.",
  "model": "google_nmt",
  "from_community_srt": "그리고 나선형의 끝에 있는 점은, ζ(s), 즉 이 합계가 어디로 수렴하는지 보여줍니다. 다시말해, ζ(s)는 무한합에 의한 정의로서 다시말해, ζ(s)는 무한합에 의한 정의로서 실수부가 1 이상이라는 가정 하에는 아주 합리적인 함수가 된다는 것입니다. 실수부가 1 이상이라는 가정 하에는 아주 합리적인 함수가 된다는 것입니다. 즉, s는 복소평면에서 오른쪽 절반에 위치하게 됩니다. 즉, s는 복소평면에서 오른쪽 절반에 위치하게 됩니다.",
  "n_reviews": 0,
  "start": 432.82,
  "end": 448.3
 },
 {
  "input": "Again, this is because it's the real part of s that determines the size of each number, while the imaginary part just dictates some rotation.",
  "translatedText": "다시 말하지만, 이는 각 숫자의 크기를 결정하는 것이 s의 실수 부분인 반면 허수 부분은 일부 회전을 지시하기 때문입니다.",
  "model": "google_nmt",
  "from_community_srt": "다시한번 말하자면, s의 실수부는 크기를 결정하고 다시한번 말하자면, s의 실수부는 크기를 결정하고 s의 허수부는 방향(회전)만을 결정합니다.",
  "n_reviews": 0,
  "start": 449.14,
  "end": 456.46
 },
 {
  "input": "So now what I want to do is visualize this function.",
  "translatedText": "이제 제가 하고 싶은 것은 이 기능을 시각화하는 것입니다.",
  "model": "google_nmt",
  "from_community_srt": "s의 허수부는 방향(회전)만을 결정합니다. 이제 이 기능을 시각화 해봅시다. 이제 이 기능을 시각화 해봅시다.",
  "n_reviews": 0,
  "start": 459.16,
  "end": 462.36
 },
 {
  "input": "It takes in inputs on the right half of the complex plane and spits out outputs somewhere else in the complex plane.",
  "translatedText": "이는 복소 평면의 오른쪽 절반에서 입력을 받아 복소 평면의 다른 곳으로 출력을 내보냅니다.",
  "model": "google_nmt",
  "from_community_srt": "복소평면의 오른쪽 절반(s의 실수부가 1보다 큰 영역)에 주어진 숫자를 넣으면 복소평면의 오른쪽 절반(s의 실수부가 1보다 큰 영역)에 주어진 숫자를 넣으면 이 함수는 복소평면의 다른 숫자를 출력할 겁니다.",
  "n_reviews": 0,
  "start": 462.54,
  "end": 469.02
 },
 {
  "input": "A super nice way to understand complex functions is to visualize them as transformations, meaning you look at every possible input to the function and just let it move over to the corresponding output.",
  "translatedText": "복잡한 함수를 이해하는 가장 좋은 방법은 함수를 변환으로 시각화하는 것입니다. 즉, 함수에 대한 가능한 모든 입력을 보고 해당 출력으로 이동하도록 하는 것입니다.",
  "model": "google_nmt",
  "from_community_srt": "복잡한 함수를 이해하는 가장 좋은 방법은 시각화하는 것입니다. 복잡한 함수를 이해하는 가장 좋은 방법은 시각화하는 것입니다. 복잡한 함수를 이해하는 가장 좋은 방법은 시각화하는 것입니다. 함수에 넣을 수 있는 모든 점들을 함수에 넣고 그 함수에 넣은 점들의 위치를 각각의 출력값으로 이동 시키는겁니다.",
  "n_reviews": 0,
  "start": 469.76,
  "end": 480.9
 },
 {
  "input": "For example, let's take a moment and try to visualize something a little bit easier than the zeta function.",
  "translatedText": "예를 들어, 잠시 시간을 내어 제타 함수보다 조금 더 쉬운 것을 시각화해 보겠습니다.",
  "model": "google_nmt",
  "from_community_srt": "ζ(s)보다 간단한 함수를 시각화 해봅시다. ζ(s)보다 간단한 함수를 시각화 해봅시다.",
  "n_reviews": 0,
  "start": 481.94,
  "end": 486.18
 },
 {
  "input": "Say f of s is equal to s squared.",
  "translatedText": "f(s)가 s의 제곱과 같다고 가정해 보세요.",
  "model": "google_nmt",
  "from_community_srt": "f(s) = s^2 함수에 2를 대입하면 f(s) = s^2 함수에 2를 대입하면 4를 얻게 됩니다.",
  "n_reviews": 0,
  "start": 486.18,
  "end": 488.82
 },
 {
  "input": "When you plug in s equals 2, you get 4, so we'll end up moving that point at 2 over to the point at 4.",
  "translatedText": "s = 2를 연결하면 4가 됩니다. 따라서 2의 지점을 4의 지점으로 이동하게 됩니다.",
  "model": "google_nmt",
  "from_community_srt": "따라서 2에 표시된 점은 4(결과값)로 이동합니다. 4를 얻게 됩니다. 따라서 2에 표시된 점은 4(결과값)로 이동합니다.",
  "n_reviews": 0,
  "start": 489.4,
  "end": 496.16
 },
 {
  "input": "When you plug in negative 1, you get 1, so the point over here at negative 1 is going to end up moving over to the point at 1.",
  "translatedText": "-1을 연결하면 1이 나오므로 여기 -1의 지점은 결국 1의 지점으로 이동하게 됩니다.",
  "model": "google_nmt",
  "from_community_srt": "-1을 대입하면 을 1얻게 되며 -1에 표시한 노란 점은 1(결과값)로 이동합니다. -1에 표시한 노란 점은 1(결과값)로 이동합니다.",
  "n_reviews": 0,
  "start": 496.88,
  "end": 504.1
 },
 {
  "input": "When you plug in i, by definition its square is negative 1, so it's going to move over here to negative 1.",
  "translatedText": "i를 연결하면 정의에 따라 그 사각형은 -1이므로 여기에서 -1로 이동하게 됩니다.",
  "model": "google_nmt",
  "from_community_srt": "i를 대입하면 -1이 되므로 i를 대입하면 -1이 되므로 i에 표시된 노란 점은 -1(결과값)로 이동합니다.",
  "n_reviews": 0,
  "start": 504.98,
  "end": 511.38
 },
 {
  "input": "Now I'm going to add on a more colorful grid, and this is just because things are about to start moving, and it's kind of nice to have something to distinguish grid lines during that movement.",
  "translatedText": "이제 좀 더 다채로운 그리드를 추가하겠습니다. 이는 사물이 곧 움직이기 시작하기 때문이며, 움직이는 동안 그리드 선을 구별할 수 있는 것이 있으면 좋습니다.",
  "model": "google_nmt",
  "from_community_srt": "이제 더 다양한 색채의 눈금을 추가하겠습니다. 이제 더 다양한 색채의 눈금을 추가하겠습니다. 복소 평면을 이동할 때 각 라인들이 어떻게 움직이는지 더 잘 이해할 수 있게 말이죠. 복소 평면을 이동할 때 각 라인들이 어떻게 움직이는지 더 잘 이해할 수 있게 말이죠. 복소 평면을 이동할 때 각 라인들이 어떻게 움직이는지 더 잘 이해할 수 있게 말이죠.",
  "n_reviews": 0,
  "start": 512.18,
  "end": 520.26
 },
 {
  "input": "From here, I'll tell the computer to move every single point on this grid over to its corresponding output under the function f of s equals s squared.",
  "translatedText": "여기에서 나는 컴퓨터에게 이 그리드의 모든 단일 점을 함수 f of s = s squared 아래의 해당 출력으로 이동하라고 지시할 것입니다.",
  "model": "google_nmt",
  "from_community_srt": "우선 평면 위에 우리가 대입했던 모든 점을 올려놓고 각 점을 컴퓨터를 통해 결과값으로 이동시키겠습니다. 각 점을 컴퓨터를 통해 결과값으로 이동시키겠습니다. 각 점을 컴퓨터를 통해 결과값으로 이동시키겠습니다.",
  "n_reviews": 0,
  "start": 520.86,
  "end": 529.52
 },
 {
  "input": "Here's what it looks like.",
  "translatedText": "그 모습은 다음과 같습니다.",
  "model": "google_nmt",
  "from_community_srt": "그리고 이것이 최종 결과입니다.",
  "n_reviews": 0,
  "start": 530.14,
  "end": 531.34
 },
 {
  "input": "That can be a lot to take in, so I'll go ahead and play it again.",
  "translatedText": "이해해야 할 내용이 많을 수 있으므로 다시 플레이해 보겠습니다.",
  "model": "google_nmt",
  "from_community_srt": "한번에 이해하시기 힘들테니 다시한번 해 보겠습니다. 한번에 이해하시기 힘들테니 다시한번 해 보겠습니다.",
  "n_reviews": 0,
  "start": 535.42,
  "end": 538.26
 },
 {
  "input": "And this time, focus on one of the marked points, and notice how it moves over to the point corresponding to its square.",
  "translatedText": "그리고 이번에는 표시된 점 중 하나에 초점을 맞추고 그것이 사각형에 해당하는 점으로 어떻게 이동하는지 확인하세요.",
  "model": "google_nmt",
  "from_community_srt": "그리고 이번에는 표시된 점들이 자신의 제곱수로 어떻게 움직이는지 잘 보세요. 그리고 이번에는 표시된 점들이 자신의 제곱수로 어떻게 움직이는지 잘 보세요.",
  "n_reviews": 0,
  "start": 538.26,
  "end": 544.88
 },
 {
  "input": "It can be a little complicated to see all of the points moving all at once, but the reward is that this gives us a very rich picture for what the complex function is actually doing, and it all happens in just two dimensions.",
  "translatedText": "모든 점이 한꺼번에 움직이는 것을 보는 것은 약간 복잡할 수 있지만, 이를 통해 복잡한 기능이 실제로 수행하는 작업에 대한 매우 풍부한 그림을 얻을 수 있으며 모든 것이 단 2차원에서 발생한다는 보상이 있습니다.",
  "model": "google_nmt",
  "from_community_srt": "그리고 이번에는 표시된 점들이 자신의 제곱수로 어떻게 움직이는지 잘 보세요. 동시에 모든 포인트를 관찰하는 것이 어려울수도 있지만 동시에 모든 포인트를 관찰하는 것이 어려울수도 있지만 이것은 복소함수가 어떤 것인지 조금 더 직관적으로 이해할 수 있게 해줍니다. 이것은 복소함수가 어떤 것인지 조금 더 직관적으로 이해할 수 있게 해줍니다. 이 모든게 2차원 평면에서 이루어지죠.",
  "n_reviews": 0,
  "start": 547.24,
  "end": 558.18
 },
 {
  "input": "So, back to the zeta function.",
  "translatedText": "그럼 다시 제타 함수로 돌아가 보겠습니다.",
  "model": "google_nmt",
  "from_community_srt": "자 이제 제타 함수로 넘어가죠.",
  "n_reviews": 0,
  "start": 560.34,
  "end": 561.8
 },
 {
  "input": "We have this infinite sum, which is a function of some complex number s, and we feel good and happy about plugging in values of s whose real part is greater than 1, and getting some meaningful output via the converging spiral sum.",
  "translatedText": "우리는 일부 복소수 s의 함수인 이 무한 합을 가지고 있으며 실수 부분이 1보다 큰 s의 값을 연결하고 수렴하는 나선형 합을 통해 의미 있는 출력을 얻는 것에 대해 기분이 좋고 행복합니다.",
  "model": "google_nmt",
  "from_community_srt": "우리는 이 무한합의 정의역을 복소수 범위로 확장했고 우리는 이 무한합의 정의역을 복소수 범위로 확장했고 실수부가 1 이상일 경우 이 무한합이 어느 점에 수렴한다는 것을 알아냈습니다. 실수부가 1 이상일 경우 이 무한합이 어느 점에 수렴한다는 것을 알아냈습니다. 실수부가 1 이상일 경우 이 무한합이 어느 점에 수렴한다는 것을 알아냈습니다. 그리고 시각화 했을때 그 값은 나선을 그려가며 수렴하는 것도 알아냈죠.",
  "n_reviews": 0,
  "start": 562.12,
  "end": 574.76
 },
 {
  "input": "So to visualize this function, I'm going to take the portion of the grid sitting on the right side of the complex plane here, where the real part of numbers is greater than 1, and I'm going to tell the computer to move each point of this grid to the appropriate output.",
  "translatedText": "따라서 이 기능을 시각화하기 위해 여기 복소 평면의 오른쪽에 있는 그리드 부분(숫자의 실수 부분이 1보다 큰 부분)을 선택하고 컴퓨터에 움직이라고 지시하겠습니다. 이 그리드의 각 지점을 적절한 출력으로 보냅니다.",
  "model": "google_nmt",
  "from_community_srt": "그리고 시각화 했을때 그 값은 나선을 그려가며 수렴하는 것도 알아냈죠. 자, 이 함수를 시각화하기 위해 실수부가 1 이상인 복소평면의 오른쪽 부분에 격자선을 표시해둔 뒤에 실수부가 1 이상인 복소평면의 오른쪽 부분에 격자선을 표시해둔 뒤에 실수부가 1 이상인 복소평면의 오른쪽 부분에 격자선을 표시해둔 뒤에 컴퓨터를 통해 각각의 점(s)이 제타함수에 대응하는 점으로 가도록 해두었습니다. 컴퓨터를 통해 각각의 점(s)이 제타함수에 대응하는 점으로 가도록 해두었습니다.",
  "n_reviews": 0,
  "start": 575.6,
  "end": 588.46
 },
 {
  "input": "It actually helps if I add a few more grid lines around the number 1, since that region gets stretched out by quite a bit.",
  "translatedText": "숫자 1 주위에 그리드 선을 몇 개 더 추가하면 해당 영역이 상당히 늘어나기 때문에 실제로 도움이 됩니다.",
  "model": "google_nmt",
  "from_community_srt": "여기에 추가적으로 더 세밀한 격자를 추하하는 것이 도움이 될겁니다. 여기에 추가적으로 더 세밀한 격자를 추하하는 것이 도움이 될겁니다. 이 부분은 바깥쪽으로 많이 뻗어나가기 때문입니다.",
  "n_reviews": 0,
  "start": 589.22,
  "end": 594.72
 },
 {
  "input": "Alright, so first of all, let's all just appreciate how beautiful that is.",
  "translatedText": "좋습니다. 우선 그것이 얼마나 아름다운지 모두 감상해 봅시다.",
  "model": "google_nmt",
  "from_community_srt": "이 부분은 바깥쪽으로 많이 뻗어나가기 때문입니다. 그리고 이제 이것이 얼마나 아름다운지 알아보도록 하죠. 그리고 이제 이것이 얼마나 아름다운지 알아보도록 하죠.",
  "n_reviews": 0,
  "start": 599.52,
  "end": 603.58
 },
 {
  "input": "I mean, damn, if that doesn't make you want to learn more about complex functions, you have no heart.",
  "translatedText": "내 말은, 젠장, 복잡한 기능에 대해 더 배우고 싶지 않다면 마음이 없다는 뜻입니다.",
  "model": "google_nmt",
  "from_community_srt": "당신이 이걸 보고도 복소함수에대해 더 배우고싶어하지 않는다면 당신이 이걸 보고도 복소함수에대해 더 배우고싶어하지 않는다면 당신은 냉혈한입니다.",
  "n_reviews": 0,
  "start": 604.0,
  "end": 608.96
 },
 {
  "input": "But also, this transformed grid is just begging to be extended a little bit.",
  "translatedText": "그러나 또한 이렇게 변형된 그리드는 조금 더 확장되기를 바라는 것일 뿐입니다.",
  "model": "google_nmt",
  "from_community_srt": "하지만, 이 격자선들은 왼쪽으로 뻗어나가다가 멈춰진 것처럼 보입니다. 하지만, 이 격자선들은 왼쪽으로 뻗어나가다가 멈춰진 것처럼 보입니다.",
  "n_reviews": 0,
  "start": 610.88,
  "end": 615.7
 },
 {
  "input": "For example, let's highlight these lines here, which represent all of the complex numbers with imaginary part i, or negative i.",
  "translatedText": "예를 들어, 허수부 i 또는 음수 i가 있는 모든 복소수를 나타내는 이 선을 여기에서 강조하겠습니다.",
  "model": "google_nmt",
  "from_community_srt": "지금 이 선들 중에서 허수부가 i와 -i인 것만을 강조해서 표시해보겠습니다. 지금 이 선들 중에서 허수부가 i와 -i인 것만을 강조해서 표시해보겠습니다. 지금 이 선들 중에서 허수부가 i와 -i인 것만을 강조해서 표시해보겠습니다. 지금 이 선들 중에서 허수부가 i와 -i인 것만을 강조해서 표시해보겠습니다.",
  "n_reviews": 0,
  "start": 616.88,
  "end": 624.6
 },
 {
  "input": "After the transformation, these lines make such lovely arcs before they just abruptly stop.",
  "translatedText": "변형 후, 이 선은 갑자기 멈추기 전에 정말 아름다운 호를 만듭니다.",
  "model": "google_nmt",
  "from_community_srt": "변환을 해놓고 보니 두개의 아름다운 호가 보이지만 그리다가 멈춘것 처럼 보입니다. 변환을 해놓고 보니 두개의 아름다운 호가 보이지만 그리다가 멈춘것 처럼 보입니다. 변환을 해놓고 보니 두개의 아름다운 호가 보이지만 그리다가 멈춘것 처럼 보입니다.",
  "n_reviews": 0,
  "start": 626.94,
  "end": 632.28
 },
 {
  "input": "Don't you want to just, you know, continue those arcs?",
  "translatedText": "그냥, 그 호를 계속하고 싶지 않나요?",
  "model": "google_nmt",
  "from_community_srt": "그냥... 이 곡선을... 계속 그려보고 싶지 않나요? 그냥... 이 곡선을...",
  "n_reviews": 0,
  "start": 633.0,
  "end": 635.76
 },
 {
  "input": "In fact, you can imagine how some altered version of the function, with a definition that extends into this left half of the plane, might be able to complete this picture with something that's quite pretty.",
  "translatedText": "사실, 평면의 왼쪽 절반으로 확장되는 정의를 사용하여 함수의 일부 변경된 버전이 어떻게 이 그림을 꽤 예쁜 것으로 완성할 수 있는지 상상할 수 있습니다.",
  "model": "google_nmt",
  "from_community_srt": "계속 그려보고 싶지 않나요? 어쩌면, 이 함수가 조금 수정된 버전을 생각해볼 수도 있을 겁니다 평면의 왼쪽 부분도 오른쪽처럼 이쁜 모양을 그릴 수 있게 함수의 정의역을 확장시켜서요. 평면의 왼쪽 부분도 오른쪽처럼 이쁜 모양을 그릴 수 있게 함수의 정의역을 확장시켜서요. 평면의 왼쪽 부분도 오른쪽처럼 이쁜 모양을 그릴 수 있게 함수의 정의역을 확장시켜서요. 평면의 왼쪽 부분도 오른쪽처럼 이쁜 모양을 그릴 수 있게 함수의 정의역을 확장시켜서요.",
  "n_reviews": 0,
  "start": 636.8,
  "end": 647.28
 },
 {
  "input": "Well, this is exactly what mathematicians working with complex functions do.",
  "translatedText": "음, 이것이 바로 복잡한 함수를 다루는 수학자들이 하는 일입니다.",
  "model": "google_nmt",
  "from_community_srt": "바로 이것이 복소함수를 연구하는 수학자들이 하는 일입니다. 바로 이것이 복소함수를 연구하는 수학자들이 하는 일입니다.",
  "n_reviews": 0,
  "start": 648.26,
  "end": 652.36
 },
 {
  "input": "They continue the function beyond the original domain where it was defined.",
  "translatedText": "정의된 원래 도메인을 넘어 기능을 계속합니다.",
  "model": "google_nmt",
  "from_community_srt": "수학자들은 기존 함수의 정의역을 벗어나는 곳에서도 계속 함수를 정의할 수 있도록 만들었습니다. 수학자들은 기존 함수의 정의역을 벗어나는 곳에서도 계속 함수를 정의할 수 있도록 만들었습니다.",
  "n_reviews": 0,
  "start": 652.36,
  "end": 657.28
 },
 {
  "input": "Now, as soon as we branch over into inputs where the real part is less than 1, this infinite sum that we originally used to define the function doesn't make sense anymore.",
  "translatedText": "이제 실수 부분이 1보다 작은 입력으로 분기하자마자 원래 함수를 정의하는 데 사용했던 이 무한 합은 더 이상 의미가 없습니다.",
  "model": "google_nmt",
  "from_community_srt": "자 이제, 예전에 이야기한 부분이었던 실수부가 1 이하일 때의 함숫값은, 자 이제, 예전에 이야기한 부분이었던 실수부가 1 이하일 때의 함숫값은, 무한한 합으로만 본다면 의미가 없습니다. 무한한 합으로만 본다면 의미가 없습니다. 1 + 2 + 3 + 4 + ...",
  "n_reviews": 0,
  "start": 658.0,
  "end": 667.14
 },
 {
  "input": "You'll get nonsense, like adding 1 plus 2 plus 3 plus 4 on and on up to infinity.",
  "translatedText": "1 더하기 2 더하기 3 더하기 4를 계속해서 무한대로 더하는 것과 같은 말도 안되는 결과를 얻게 될 것입니다.",
  "model": "google_nmt",
  "from_community_srt": "를 더하는 것과 같이 말도 안되는 결과가 나오니까요. 1 + 2 + 3 + 4 + ... 를 더하는 것과 같이 말도 안되는 결과가 나오니까요.",
  "n_reviews": 0,
  "start": 667.42,
  "end": 671.56
 },
 {
  "input": "But just looking at this transformed version of the right half of the plane, where the sum does make sense, it's just begging us to extend the set of points that we're considering as inputs.",
  "translatedText": "하지만 합계가 의미가 있는 평면의 오른쪽 절반에 대한 변환된 버전을 보는 것만으로도 우리가 입력으로 고려하고 있는 점 집합을 확장하라고 간청하는 것뿐입니다.",
  "model": "google_nmt",
  "from_community_srt": "하지만 무한합으로 정의되던 이 평면의 오른쪽 부분을 보면 하지만 무한합으로 정의되던 이 평면의 오른쪽 부분을 보면 마치 좀 더 연결해달라고 하는 것처럼 보입니다 마치 좀 더 연결해달라고 하는 것처럼 보입니다",
  "n_reviews": 0,
  "start": 672.26,
  "end": 681.84
 },
 {
  "input": "Even if that means defining the extended function in some way that doesn't necessarily use that sum.",
  "translatedText": "비록 그것이 반드시 그 합계를 사용하지 않는 어떤 방식으로 확장된 함수를 정의하는 것을 의미하더라도 말입니다.",
  "model": "google_nmt",
  "from_community_srt": "마치 좀 더 연결해달라고 하는 것처럼 보입니다 그럴 경우 그 무한합으로서의 정의을 벗어나게 되는데 말이죠. 그럴 경우 그 무한합으로서의 정의을 벗어나게 되는데 말이죠.",
  "n_reviews": 0,
  "start": 682.36,
  "end": 688.02
 },
 {
  "input": "Of course, that leaves us with the question, how would you define that function on the rest of the plane?",
  "translatedText": "물론, 이는 우리에게 평면의 나머지 부분에서 해당 기능을 어떻게 정의할 것인지에 대한 질문을 남깁니다.",
  "model": "google_nmt",
  "from_community_srt": "물론 나머지 평면에서 이 함수를 어떻게 정의해야 할지 생각해 봐야겠죠. 물론 나머지 평면에서 이 함수를 어떻게 정의해야 할지 생각해 봐야겠죠. 물론 나머지 평면에서 이 함수를 어떻게 정의해야 할지 생각해 봐야겠죠.",
  "n_reviews": 0,
  "start": 689.22,
  "end": 693.28
 },
 {
  "input": "You might think that you could extend it any number of ways.",
  "translatedText": "다양한 방법으로 확장할 수 있다고 생각할 수도 있습니다.",
  "model": "google_nmt",
  "from_community_srt": "당신은 어쩌면 이것을 수많은 방법으로 연결시킬 수 있다고 생각할지도 모릅니다.",
  "n_reviews": 0,
  "start": 694.84,
  "end": 697.68
 },
 {
  "input": "Maybe you define an extension that makes it so the point at, say, s equals negative 1 moves over to negative 1 twelfth.",
  "translatedText": "아마도 당신은 s가 -1과 같은 지점이 -1의 12번째 지점으로 이동하도록 확장을 정의할 수도 있습니다.",
  "model": "google_nmt",
  "from_community_srt": "당신은 어쩌면 이것을 수많은 방법으로 연결시킬 수 있다고 생각할지도 모릅니다. s가 -1일때  -1/12 로 이동하도록 연장선을 그릴 수도 있고 s가 -1일때  -1/12 로 이동하도록 연장선을 그릴 수도 있고 s가 -1일때  -1/12 로 이동하도록 연장선을 그릴 수도 있고",
  "n_reviews": 0,
  "start": 698.26,
  "end": 704.76
 },
 {
  "input": "But maybe you squiggle on some extension that makes it land on any other value.",
  "translatedText": "하지만 다른 값에 도달하게 만드는 일부 확장에 대해 신호를 보낼 수도 있습니다.",
  "model": "google_nmt",
  "from_community_srt": "또한 연장선을 뒤틀어서 다른 값이 나오도록 정의 할 수도 있습니다. 또한 연장선을 뒤틀어서 다른 값이 나오도록 정의 할 수도 있습니다.",
  "n_reviews": 0,
  "start": 707.62,
  "end": 711.28
 },
 {
  "input": "I mean, as soon as you open yourself up to the idea of defining the function differently for values outside that domain of convergence, that is, not based on this infinite sum, the world is your oyster, and you can have any number of extensions, right?",
  "translatedText": "내 말은, 수렴 영역 외부의 값에 대해 함수를 다르게 정의한다는 아이디어에 마음을 열자마자, 즉 이 무한한 합에 기반하지 않고 세상은 굴이고 확장은 얼마든지 가질 수 있다는 뜻입니다. , 오른쪽?",
  "model": "google_nmt",
  "from_community_srt": "제 말은, 무한합으로 정의되지 않는 영역에서 당신 마음대로 함수를 다르게 정의해 보자는 겁니다. 제 말은, 무한합으로 정의되지 않는 영역에서 당신 마음대로 함수를 다르게 정의해 보자는 겁니다. 제 말은, 무한합으로 정의되지 않는 영역에서 당신 마음대로 함수를 다르게 정의해 보자는 겁니다. 제 말은, 무한합으로 정의되지 않는 영역에서 당신 마음대로 함수를 다르게 정의해 보자는 겁니다. 정의되지 않은 영역인데 뭐 어때요 아무렇게나 정의하고 그래프로 그리면 되겠네요.",
  "n_reviews": 0,
  "start": 711.28,
  "end": 726.26
 },
 {
  "input": "Well, not exactly.",
  "translatedText": "글쎄요, 정확히는 아닙니다.",
  "model": "google_nmt",
  "from_community_srt": "안그래요? 뭐 꼭 그렇지는 않습니다.",
  "n_reviews": 0,
  "start": 727.32,
  "end": 728.94
 },
 {
  "input": "I mean, yes, you can give any child a marker and have them extend these lines any which way, but if you add on the restriction that this new extended function has to have a derivative everywhere, it locks us into one and only one possible extension.",
  "translatedText": "내 말은, 네, 어떤 아이에게든 마커를 주고 이 선을 어떤 방향으로든 확장하도록 할 수 있지만, 이 새로운 확장 기능이 어디에서나 파생어를 가져야 한다는 제한을 추가하면 우리를 단 하나만의 가능성으로 가두게 됩니다. 확대.",
  "model": "google_nmt",
  "from_community_srt": "제말은... 맞아요. 당신은 그냥 초등학생에게 마커 쥐어주고 이 선들을 아무렇게나 연결시키라고 할 수 있겠지만 제가 그 확장된 함수가 전 구역에서 미분이 가능하다는 조건을 하나 추가한다면 제가 그 확장된 함수가 전 구역에서 미분이 가능하다는 조건을 하나 추가한다면 제가 그 확장된 함수가 전 구역에서 미분이 가능하다는 조건을 하나 추가한다면 이 확장된 함수는 단 하나만으로 고정되게 됩니다.",
  "n_reviews": 0,
  "start": 729.42,
  "end": 743.82
 },
 {
  "input": "I know, I know, I said that you wouldn't need to know about derivatives for this video, and even if you do know calculus, maybe you have yet to learn how to interpret derivatives for complex functions.",
  "translatedText": "알아요, 알아요, 이 비디오에서는 여러분이 도함수에 대해 알 필요가 없다고 말했습니다. 미적분학을 알고 있더라도 복잡한 함수에 대한 도함수를 해석하는 방법을 아직 배우지 않았을 수도 있습니다.",
  "model": "google_nmt",
  "from_community_srt": "아, 제가 이 영상에서 미분은 필요없을거라고 말한거 압니다. 아, 제가 이 영상에서 미분은 필요없을거라고 말한거 압니다. 미적분학을 배웠다고 하더라도 복소함수에 관한 미분을 모를 수도 있습니다. 미적분학을 배웠더라도 복소함수에 관한 미분을 아직 안배웠을수도 있죠. 미적분학을 배웠더라도 복소함수에 관한 미분을 아직 안배웠을수도 있죠.",
  "n_reviews": 0,
  "start": 745.34,
  "end": 754.1
 },
 {
  "input": "But luckily for us, there is a very nice geometric intuition that you can keep in mind for when I say a phrase like, has a derivative everywhere.",
  "translatedText": "그러나 운 좋게도 우리에게는 매우 훌륭한 기하학적 직관이 있습니다. 제가 와 같은 구를 말할 때 어디에서나 파생어가 있다는 점을 염두에 두세요.",
  "model": "google_nmt",
  "from_community_srt": "하지만 다행히도 '어디서든지 미분 가능하다' 라는 제 말을 이해할 수 있는 훌륭한 도구가 있습니다. 하지만 다행히도 '어디서든지 미분 가능하다' 라는 제 말을 이해할 수 있는 훌륭한 도구가 있습니다. 하지만 다행히도 '어디서든지 미분 가능하다' 라는 제 말을 이해할 수 있는 훌륭한 도구가 있습니다. 바로 기하학적 직관입니다.",
  "n_reviews": 0,
  "start": 754.88,
  "end": 762.24
 },
 {
  "input": "Here, to show you what I mean, let's look back at that f of s equals s squared example.",
  "translatedText": "여기에서 제가 말하는 것이 무엇인지 보여드리기 위해 f(s)가 s 제곱과 같다는 예를 다시 살펴보겠습니다.",
  "model": "google_nmt",
  "from_community_srt": "설명을 위해 앞의 f(s) = s^2 예제를 다시 들여다 봅시다. 설명을 위해 앞의 f(s) = s^2 예제를 다시 들여다 봅시다.",
  "n_reviews": 0,
  "start": 763.26,
  "end": 767.22
 },
 {
  "input": "Again, we think of this function as a transformation, moving every point s of the complex plane over to the point s squared.",
  "translatedText": "다시 말하지만, 우리는 이 함수를 복소 평면의 모든 점 s를 제곱된 점 s로 이동하는 변환으로 생각합니다.",
  "model": "google_nmt",
  "from_community_srt": "우리는 이 함수를 일종의 변형이라고 생각 할 것입니다. 모든 점 s를 복소평면상의 s^2으로 대응/이동시키는 변형으로 말이죠. 모든 점 s를 복소평면상의 s^2으로 대응/이동시키는 변형으로 말이죠.",
  "n_reviews": 0,
  "start": 767.86,
  "end": 774.96
 },
 {
  "input": "For those of you who know calculus, you know that you can take the derivative of this function at any given input, but there's an interesting property of that transformation that turns out to be related and almost equivalent to that fact.",
  "translatedText": "미적분학을 아시는 분들은 주어진 입력에서 이 함수의 도함수를 얻을 수 있다는 것을 아실 것입니다. 그러나 해당 사실과 관련이 있고 거의 동등한 변환의 흥미로운 속성이 있습니다.",
  "model": "google_nmt",
  "from_community_srt": "미적분학을 알고있는 사람들은 이 함수가 주어진 모든 점에서 미분이 가능하다는 것을 알고 있을 겁니다. 이 함수가 주어진 모든 점에서 미분이 가능하다는 것을 알고 있을 겁니다. 이 함수가 주어진 모든 점에서 미분이 가능하다는 것을 알고 있을 겁니다. 하지만 이 변환의 흥미로운 성질이 있습니다. 그리고 대부분의 지점에서 이 속성은 같습니다. 그리고 대부분의 지점에서 이 속성은 같습니다.",
  "n_reviews": 0,
  "start": 776.08,
  "end": 787.5
 },
 {
  "input": "If you look at any two lines in the input space that intersect at some angle, and consider what they turn into after the transformation, they will still intersect each other at that same angle.",
  "translatedText": "어떤 각도로 교차하는 입력 공간의 두 선을 보고 변환 후 어떻게 변하는지 고려하면 여전히 같은 각도로 서로 교차합니다.",
  "model": "google_nmt",
  "from_community_srt": "원래의 공간에서 두개의 교차선을 그리고 원래의 공간에서 두개의 교차선을 그리고 변환 후에 두 교차선의 교차각이 어떻게 되는지 보세요. 변환 후에 두 교차선의 교차각이 어떻게 되는지 보세요. 교차각은 변하지 않습니다.",
  "n_reviews": 0,
  "start": 788.76,
  "end": 799.48
 },
 {
  "input": "The lines might get curved, and that's okay, but the important part is that the angle at which they intersect remains unchanged, and this is true for any pair of lines that you choose.",
  "translatedText": "선이 휘어질 수도 있지만 괜찮습니다. 그러나 중요한 부분은 선이 교차하는 각도가 변경되지 않고 유지된다는 점이며 이는 선택한 선 쌍에 해당됩니다.",
  "model": "google_nmt",
  "from_community_srt": "선은 구부러질 수 있지만 그건 상관 없습니다. 중요한 것은 교차각이 변하지 않는다는 것입니다. 중요한 것은 교차각이 변하지 않는다는 것입니다. 그리고 이건 어느 교차선에서나 성립합니다. 그리고 이건 어느 교차선에서나 성립합니다.",
  "n_reviews": 0,
  "start": 801.02,
  "end": 811.08
 },
 {
  "input": "So when I say a function has a derivative everywhere, I want you to think about this angle-preserving property, that any time two lines intersect, the angle between them remains unchanged after the transformation.",
  "translatedText": "따라서 함수가 어디에서나 도함수를 갖는다고 말할 때 두 선이 교차할 때마다 두 선 사이의 각도는 변환 후에도 변경되지 않고 유지된다는 각도 보존 속성에 대해 생각해 보시기 바랍니다.",
  "model": "google_nmt",
  "from_community_srt": "제가 '어디서든지 미분 가능하다' 라고 말했을때 제가 '어디서든지 미분 가능하다' 라고 말했을때 두 교차선의 교차각이 변환 후에도 불변하는 이 성질을 떠올리기 바랍니다. 두 교차선의 교차각이 변환 후에도 불변하는 이 성질을 떠올리기 바랍니다. 두 교차선의 교차각이 변환 후에도 불변하는 이 성질을 떠올리기 바랍니다. 두 교차선의 교차각이 변환 후에도 불변하는 이 성질을 떠올리기 바랍니다.",
  "n_reviews": 0,
  "start": 814.78,
  "end": 826.74
 },
 {
  "input": "At a glance, this is easiest to appreciate by noticing how all of the curves that the grid lines turn into still intersect each other at right angles.",
  "translatedText": "한눈에 그리드 선이 바뀌는 모든 곡선이 여전히 직각으로 서로 교차하는 방식을 확인하면 가장 쉽게 이해할 수 있습니다.",
  "model": "google_nmt",
  "from_community_srt": "한눈에 봐도 격자선들은 변환 후에도 여전히 직각을 이루고 있음을 알 수 있습니다. 한눈에 봐도 격자선들은 변환 후에도 여전히 직각을 이루고 있음을 알 수 있습니다. 한눈에 봐도 격자선들은 변환 후에도 여전히 직각을 이루고 있음을 알 수 있습니다. 한눈에 봐도 격자선들은 변환 후에도 여전히 직각을 이루고 있음을 알 수 있습니다.",
  "n_reviews": 0,
  "start": 827.86,
  "end": 835.98
 },
 {
  "input": "Complex functions that have a derivative everywhere are called analytic, so you can think of this term analytic as meaning angle-preserving.",
  "translatedText": "어디에서나 도함수가 있는 복잡한 함수를 해석적이라고 부르므로 이 해석적이라는 용어를 각도 보존을 의미하는 것으로 생각할 수 있습니다.",
  "model": "google_nmt",
  "from_community_srt": "모든 구간에서 미분 가능한 복소함수를 \"분석 함수\" 라고 합니다. 모든 구간에서 미분 가능한 복소함수를 \"분석 함수\" 라고 합니다. 모든 구간에서 미분 가능한 복소함수를 \"분석 함수\" 라고 합니다. 따라서 분석함수는 각을 보존하는 성질의 함수로 생각 할 수 있습니다.",
  "n_reviews": 0,
  "start": 838.58,
  "end": 845.82
 },
 {
  "input": "Admittedly, I'm lying to you a little here, but only a little bit.",
  "translatedText": "물론, 나는 여기서 당신에게 약간의 거짓말을 하고 있습니다. 그러나 아주 약간의 거짓말입니다.",
  "model": "google_nmt",
  "from_community_srt": "이 설명이 완전히 정확하진 않지만 거의 차이는 없습니다. 이 설명이 완전히 정확하진 않지만 거의 차이는 없습니다.",
  "n_reviews": 0,
  "start": 846.68,
  "end": 849.98
 },
 {
  "input": "A slight caveat for those of you who want the full details is that at inputs where the derivative of a function is zero, instead of angles being preserved, they get multiplied by some integer.",
  "translatedText": "전체 세부 사항을 원하는 분들을 위한 약간의 주의 사항은 함수의 도함수가 0인 입력에서 각도가 유지되는 대신 정수가 곱해진다는 것입니다.",
  "model": "google_nmt",
  "from_community_srt": "더 자세한 설명을 원하는 분들을 위해 조금 더 설명하겠습니다. 더 자세한 설명을 원하는 분들을 위해 조금 더 설명하겠습니다. 함수의 미분값을 0으로 만드는 s 위에서 교차하는 직선의 교차각은 변환후에 그 각을 유지하지 않고 정수배가 됩니다.",
  "n_reviews": 0,
  "start": 850.4,
  "end": 859.42
 },
 {
  "input": "But those points are by far the minority, and for almost all inputs to an analytic function, angles are preserved.",
  "translatedText": "그러나 이러한 점은 극소수이며 분석 함수에 대한 거의 모든 입력에 대해 각도가 유지됩니다.",
  "model": "google_nmt",
  "from_community_srt": "변환후에 그 각을 유지하지 않고 정수배가 됩니다. 하지만 이런 경우는 얼마 되지 않습니다. 거의 모든 경우에 분석함수는 변환 후에 그 교차각을 유지합니다.",
  "n_reviews": 0,
  "start": 860.6,
  "end": 866.78
 },
 {
  "input": "So if when I say analytic, you think angle-preserving, I think that's a fine intuition to have.",
  "translatedText": "따라서 내가 분석적이라고 말할 때 각도 보존을 생각한다면 그것은 훌륭한 직관이라고 생각합니다.",
  "model": "google_nmt",
  "from_community_srt": "거의 모든 경우에 분석함수는 변환 후에 그 교차각을 유지합니다. 이제 제가 분석함수 라고 하면 '교차각이 변환 후에도 유지된다.'라는 직관을 떠올리면 됩니다. 이제 제가 분석함수 라고 하면 '교차각이 변환 후에도 유지된다.'라는 직관을 떠올리면 됩니다.",
  "n_reviews": 0,
  "start": 869.52,
  "end": 874.44
 },
 {
  "input": "Now, if you think about it for a moment, and this is a point that I really want you to appreciate, this is a very restrictive property.",
  "translatedText": "자, 잠시 생각해 보면 이것이 제가 여러분이 정말로 높이 평가하고 싶은 점인데, 이것은 매우 제한적인 속성입니다.",
  "model": "google_nmt",
  "from_community_srt": "이제 제가 분석함수 라고 하면 '교차각이 변환 후에도 유지된다.'라는 직관을 떠올리면 됩니다. 조금 더 생각해 봅시다. 여러분들께 특히 강조하고 싶은점은 여러분들께 특히 강조하고 싶은점은 '변환 후에도 교차각이 변하지 않는다'라는것은 굉장히 특별한 성질 이라는 겁니다.",
  "n_reviews": 0,
  "start": 879.0,
  "end": 885.76
 },
 {
  "input": "The angle between any pair of intersecting lines has to remain unchanged.",
  "translatedText": "교차하는 선 쌍 사이의 각도는 변경되지 않은 상태로 유지되어야 합니다.",
  "model": "google_nmt",
  "from_community_srt": "'변환 후에도 교차각이 변하지 않는다'라는것은 굉장히 특별한 성질 이라는 겁니다.",
  "n_reviews": 0,
  "start": 886.42,
  "end": 890.68
 },
 {
  "input": "And yet, pretty much any function out there that has a name turns out to be analytic.",
  "translatedText": "그럼에도 불구하고 이름이 있는 거의 모든 기능은 분석적인 것으로 밝혀졌습니다.",
  "model": "google_nmt",
  "from_community_srt": "그리고 저기에 각각의 이름을 가지고 있는 함수들도 분석함수라는 것이 밝혀졌습니다. (e^x : Expernantial, Sin(x) : 사인파, log(x) : 로그...등등) 그리고 저기에 각각의 이름을 가지고 있는 함수들도 분석함수라는 것이 밝혀졌습니다. (e^x : Expernantial, Sin(x) : 사인파, log(x) : 로그...등등) 그리고 저기에 각각의 이름을 가지고 있는 함수들도 분석함수라는 것이 밝혀졌습니다.",
  "n_reviews": 0,
  "start": 891.56,
  "end": 895.78
 },
 {
  "input": "The field of complex analysis, which Riemann helped to establish in its modern form, is almost entirely about leveraging the properties of analytic functions to understand results and patterns in other fields of math and science.",
  "translatedText": "Riemann이 현대적인 형태로 확립하는 데 도움을 준 복합 분석 분야는 거의 전적으로 분석 기능의 속성을 활용하여 다른 수학과 과학 분야의 결과와 패턴을 이해하는 것에 관한 것입니다.",
  "model": "google_nmt",
  "from_community_srt": "(e^x : Expernantial, Sin(x) : 사인파, log(x) : 로그...등등) 리만은 이 복소해석학 이라는 학문을 현대화하는 데 상당한 기여를 했습니다. 리만은 이 복소해석학 이라는 학문을 현대화하는 데 상당한 기여를 했습니다. 복소해석학의 대부분은 해석함수의 성질을 파악하고 이해함으로써 복소해석학의 대부분은 해석함수의 성질을 파악하고 이해함으로써 이를 수학이나 과학의 다른 분야에 도움을 주는 것에 있습니다.",
  "n_reviews": 0,
  "start": 898.42,
  "end": 910.68
 },
 {
  "input": "The zeta function, defined by this infinite sum on the right half of the plane, is an analytic function.",
  "translatedText": "평면의 오른쪽 절반에 있는 무한합으로 정의되는 제타 함수는 분석 함수입니다.",
  "model": "google_nmt",
  "from_community_srt": "이를 수학이나 과학의 다른 분야에 도움을 주는 것에 있습니다. 평면의 오른쪽 부분에서 무한합으로 정의했던 제타 함수는 해석함수입니다. 평면의 오른쪽 부분에서 무한합으로 정의했던 제타 함수는 해석함수입니다.",
  "n_reviews": 0,
  "start": 912.9,
  "end": 918.54
 },
 {
  "input": "Notice how all of these curves that the grid lines turn into still intersect each other at right angles.",
  "translatedText": "그리드 선이 변환하는 모든 곡선이 여전히 서로 직각으로 교차하는 방식에 주목하세요.",
  "model": "google_nmt",
  "from_community_srt": "격자선이 곡선으로 변환되었음에도 각각이 만나 생긴 각들은 전부 90°인 것을 주목해주세요. 격자선이 곡선으로 변환되었음에도 각각이 만나 생긴 각들은 전부 90°인 것을 주목해주세요. 격자선이 곡선으로 변환되었음에도 각각이 만나 생긴 각들은 전부 90°인 것을 주목해주세요.",
  "n_reviews": 0,
  "start": 919.34,
  "end": 924.62
 },
 {
  "input": "So the surprising fact about complex functions is that if you want to extend an analytic function beyond the domain where it was originally defined, for example, extending this zeta function into the left half of the plane, then if you require that the new extended function still be analytic, that is, that it still preserves angles everywhere, it forces you into only one possible extension, if one exists at all.",
  "translatedText": "따라서 복잡한 함수에 대한 놀라운 사실은 분석 함수를 원래 정의된 영역 너머로 확장하려는 경우(예: 이 제타 함수를 평면의 왼쪽 절반으로 확장하려는 경우) 새로운 확장 함수가 필요하다는 것입니다. 여전히 분석적이어야 합니다. 즉, 각도는 여전히 모든 곳에서 유지되며, 확장이 존재하는 경우 가능한 확장은 하나만 강제됩니다.",
  "model": "google_nmt",
  "from_community_srt": "복소함수에 대한 놀라운 사실은, 바로 이 해석함수에 대해 정의역을 확장하고 싶을 때 확장 할 수 있는 방법은 하나밖에 없다는 겁니다. 확장 할 수 있는 방법은 하나밖에 없다는 겁니다. 예를 들어 제타함수를 왼쪽 부분까지 확장할 때, 예를 들어 제타함수를 왼쪽 부분까지 확장할 때, 그 확장된 함수도 연속적인 분석함수여야 합니다. 그 확장된 함수도 연속적인 분석함수여야 합니다. 그렇게 되면 나머지 왼쪽 평면을 마저 그릴 수 있는 방법은 하나밖에 없습니다. 그렇게 되면 나머지 왼쪽 평면을 마저 그릴 수 있는 방법은 하나밖에 없습니다. 그렇게 되면 나머지 왼쪽 평면을 마저 그릴 수 있는 방법은 하나밖에 없습니다.",
  "n_reviews": 0,
  "start": 928.1,
  "end": 952.96
 },
 {
  "input": "It's kind of like an infinite continuous jigsaw puzzle, where this requirement of preserving angles locks you into one and only one choice for how to extend it.",
  "translatedText": "이는 각도를 유지해야 한다는 요구 사항이 각도를 확장하는 방법에 대한 단 하나의 선택에 갇히게 되는 무한 연속 직소 퍼즐과 같습니다.",
  "model": "google_nmt",
  "from_community_srt": "(각을 보존하는 것은)마치 무한한 퍼즐 맞추기랑 같은 겁니다. (각을 보존하는 것은)마치 무한한 퍼즐 맞추기랑 같은 겁니다. 각을 보존한다는 조건 하에서 오직 단 하나의 확장만이 정답이니까요. 각을 보존한다는 조건 하에서 오직 단 하나의 확장만이 정답이니까요.",
  "n_reviews": 0,
  "start": 953.5,
  "end": 962.7
 },
 {
  "input": "This process of extending an analytic function in the only way possible that's still analytic is called, as you may have guessed, analytic continuation.",
  "translatedText": "여전히 분석적이면서 가능한 유일한 방식으로 분석 기능을 확장하는 이러한 프로세스를 짐작할 수 있듯이 분석 연속이라고 합니다.",
  "model": "google_nmt",
  "from_community_srt": "이렇게, 분석함수의 성질을 해치지 않으면서 정의역을 확장하는 유일한 방법을 이렇게, 분석함수의 성질을 해치지 않으면서 정의역을 확장하는 유일한 방법을 바로 \"해석적 연속\" 이라고 하는 것입니다.",
  "n_reviews": 0,
  "start": 964.4,
  "end": 972.56
 },
 {
  "input": "So that's how the full Riemann zeta function is defined.",
  "translatedText": "이것이 전체 리만 제타 함수가 정의되는 방식입니다.",
  "model": "google_nmt",
  "from_community_srt": "바로 \"해석적 연속\" 이라고 하는 것입니다. 그리고 이것이 리만 함수의 정의 과정입니다.",
  "n_reviews": 0,
  "start": 974.92,
  "end": 977.72
 },
 {
  "input": "For values of s on the right half of the plane, where the real part is greater than 1, we can plug them into this sum and see where it converges.",
  "translatedText": "실수 부분이 1보다 큰 평면의 오른쪽 절반에 있는 s 값의 경우 이를 이 합계에 연결하여 수렴되는 위치를 확인할 수 있습니다.",
  "model": "google_nmt",
  "from_community_srt": "실수부분이 1보다 큰 오른쪽 절반의 영역에 있는 s를 대입하면 실수부분이 1보다 큰 오른쪽 절반의 영역에 있는 s를 이 무한합에 대입해보면 실수부분이 1보다 큰 오른쪽 절반의 영역에 있는 s를 이 무한합에 대입해보면 실수부분이 1보다 큰 오른쪽 절반의 영역에 있는 s를 이 무한합에 대입해보면 나선형을 그리며 어느 한 점에 수렴하는 것을 볼 수 있습니다.",
  "n_reviews": 0,
  "start": 978.24,
  "end": 985.22
 },
 {
  "input": "And that convergence might look like some kind of spiral, since raising each of these terms to a complex power has the effect of rotating each one.",
  "translatedText": "그리고 그 수렴은 일종의 나선형처럼 보일 수 있습니다. 왜냐하면 이들 항 각각을 복소수 거듭제곱으로 올리면 각 항을 회전시키는 효과가 있기 때문입니다.",
  "model": "google_nmt",
  "from_community_srt": "나선형을 그리며 어느 한 점에 수렴하는 것을 볼 수 있습니다. 지수에 복소수가 있는 항들은 회전하는 효과가 있기 때문이죠. 지수에 복소수가 있는 항들은 회전하는 효과가 있기 때문이죠.",
  "n_reviews": 0,
  "start": 985.68,
  "end": 992.74
 },
 {
  "input": "Then for the rest of the plane, we know that there exists one and only one way to extend this definition so that the function will still be analytic, that is, so that it still preserves angles at every single point.",
  "translatedText": "그런 다음 평면의 나머지 부분에 대해 우리는 이 정의를 확장하여 함수가 여전히 분석적일 수 있도록, 즉 모든 단일 지점에서 각도를 유지하도록 하는 단 하나의 방법이 있다는 것을 알고 있습니다.",
  "model": "google_nmt",
  "from_community_srt": "나머지 왼쪽 평면에 대해서는 확장할 수 있는 방법이 오직 한가지라는 것을 알고있습니다. 나머지 왼쪽 평면에 대해서는 확장할 수 있는 방법이 오직 한가지라는 것을 알고있습니다. 나머지 왼쪽 평면에 대해서는 확장할 수 있는 방법이 오직 한가지라는 것을 알고있습니다. 변환 후에도 각이 변하지 않는 분석함수임을 유지한 채로 정의해야 했기 때문이죠. 변환 후에도 각이 변하지 않는 분석함수임을 유지한 채로 정의해야 했기 때문이죠.",
  "n_reviews": 0,
  "start": 993.52,
  "end": 1004.54
 },
 {
  "input": "So we just say that by definition, the zeta function on the left half of the plane is whatever that extension happens to be.",
  "translatedText": "그래서 우리는 정의에 따르면 평면의 왼쪽 절반에 있는 제타 함수는 그 확장이 무엇이든 상관없다고 말합니다.",
  "model": "google_nmt",
  "from_community_srt": "변환 후에도 각이 변하지 않는 분석함수임을 유지한 채로 정의해야 했기 때문이죠. 그러니까 우리는 정의에 따라서 이렇게 말할 수 있을겁니다. 왼쪽 평면에 있는 제타함수가 무엇이든간에 그것은 존재할 것이며 왼쪽 평면에 있는 제타함수가 무엇이든간에 그것은 존재할 것이며 그 것은 매우 합리적인 생각일겁니다.",
  "n_reviews": 0,
  "start": 1005.3,
  "end": 1012.14
 },
 {
  "input": "And that's a valid definition because there's only one possible analytic continuation.",
  "translatedText": "가능한 분석 연속은 단 하나뿐이므로 이는 유효한 정의입니다.",
  "model": "google_nmt",
  "from_community_srt": "왜냐하면 \"해석적 연속\"이라는 오직 한가지 방법밖에 없기 때문이죠.",
  "n_reviews": 0,
  "start": 1012.96,
  "end": 1017.26
 },
 {
  "input": "Notice, that's a very implicit definition.",
  "translatedText": "이는 매우 암묵적인 정의입니다.",
  "model": "google_nmt",
  "from_community_srt": "이 정의는 간단하지 않다는 것을 명심하십시오.",
  "n_reviews": 0,
  "start": 1018.6,
  "end": 1020.9
 },
 {
  "input": "It just says, use the solution of this jigsaw puzzle, which through more abstract derivation we know must exist, but it doesn't specify exactly how to solve it.",
  "translatedText": "단지 이 직소 퍼즐의 해결책을 사용하라고 말할 뿐입니다. 이는 보다 추상적인 파생을 통해 존재해야 한다는 것을 알고 있지만 이를 해결하는 방법을 정확히 지정하지는 않습니다.",
  "model": "google_nmt",
  "from_community_srt": "이것은 \"퍼즐\"을 사용한 결과입니다. 이것은 \"퍼즐\"을 사용한 결과입니다. 추상적으로 이런 정의가 존재해야 한다고 생각했을 뿐이죠. 하지만 이것이 우리가 어떻게 해결할지를 나타내는 것은 아닙니다. 하지만 이것이 우리가 어떻게 해결할지를 나타내는 것은 아닙니다.",
  "n_reviews": 0,
  "start": 1021.42,
  "end": 1030.62
 },
 {
  "input": "Mathematicians have a pretty good grasp on what this extension looks like, but some important parts of it remain a mystery.",
  "translatedText": "수학자들은 이 확장이 어떻게 생겼는지 꽤 잘 이해하고 있지만, 일부 중요한 부분은 미스터리로 남아 있습니다.",
  "model": "google_nmt",
  "from_community_srt": "수학자들은 이 확장된 함수가 어떤 형태를 가졌는지에 대해 많은 것을 알아냈지만 수학자들은 이 확장된 함수가 어떤 형태를 가졌는지에 대해 많은 것을 알아냈지만 몇몇 중요한 부분들은 아직까지 문제로 남아 있습니다.",
  "n_reviews": 0,
  "start": 1031.16,
  "end": 1036.82
 },
 {
  "input": "A million dollar mystery, in fact.",
  "translatedText": "사실 백만 달러짜리 미스터리입니다.",
  "model": "google_nmt",
  "from_community_srt": "몇몇 중요한 부분들은 아직까지 문제로 남아 있습니다. 백만 달러의 상금이 달린 문제로요.",
  "n_reviews": 0,
  "start": 1037.34,
  "end": 1038.94
 },
 {
  "input": "Let's actually take a moment and talk about the Riemann hypothesis, which is a million dollar problem.",
  "translatedText": "실제로 잠시 시간을 내어 백만 달러짜리 문제인 리만 가설에 대해 이야기해 보겠습니다.",
  "model": "google_nmt",
  "from_community_srt": "사실, 지금이 딱 리만 가설을 이야기하기 좋은 때인 거 같습니다. 사실, 지금이 딱 리만 가설을 이야기하기 좋은 때인 거 같습니다.",
  "n_reviews": 0,
  "start": 1039.64,
  "end": 1043.86
 },
 {
  "input": "The places where this function equals zero turn out to be quite important, that is, which points get mapped onto the origin after the transformation.",
  "translatedText": "이 함수가 0인 위치, 즉 변환 후 어떤 점이 원점에 매핑되는지가 매우 중요합니다.",
  "model": "google_nmt",
  "from_community_srt": "수학자들은 어떤 변수가 함숫값을  0으로 만드는지가 매우 중요한 문제임을 밝혀냈습니다. 수학자들은 어떤 변수가 함숫값을  0으로 만드는지가 매우 중요한 문제임을 밝혀냈습니다. 수학자들은 어떤 변수가 함숫값을  0으로 만드는지가 매우 중요한 문제임을 밝혀냈습니다. 같은 말로 어떤 점이 함수에 의해 변환될 때 원점으로 가는지가 궁금했던 거죠.",
  "n_reviews": 0,
  "start": 1044.98,
  "end": 1053.28
 },
 {
  "input": "One thing we know about this extension is that the negative even numbers get mapped to zero.",
  "translatedText": "이 확장에 대해 우리가 아는 한 가지는 음의 짝수는 0으로 매핑된다는 것입니다.",
  "model": "google_nmt",
  "from_community_srt": "같은 말로 어떤 점이 함수에 의해 변환될 때 원점으로 가는지가 궁금했던 거죠. 우리가 이것에 대해 하나 알고 있는 것은, 음의 짝수에서는 함숫값이 영점으로 간다는 것입니다.",
  "n_reviews": 0,
  "start": 1054.48,
  "end": 1059.26
 },
 {
  "input": "These are commonly called the trivial zeros.",
  "translatedText": "이를 일반적으로 사소한 0이라고 합니다.",
  "model": "google_nmt",
  "from_community_srt": "이것을 흔히 자명한 영점이라고 부릅니다.",
  "n_reviews": 0,
  "start": 1061.16,
  "end": 1063.56
 },
 {
  "input": "The naming here stems from a long-standing tradition of mathematicians to call things trivial when they understand it quite well, even when it's a fact that is not at all obvious from the outset.",
  "translatedText": "여기서 명명된 이름은 처음부터 전혀 명백하지 않은 사실일지라도 아주 잘 이해하면 사소하다고 부르는 수학자들의 오랜 전통에서 비롯되었습니다.",
  "model": "google_nmt",
  "from_community_srt": "이 이름이 이렇게 붙은 이유는 수학자들의 전통 때문입니다 이 이름이 이렇게 붙은 이유는 수학자들의 전통 때문입니다 사실 전혀 자명(당연)하지 않은데도 수학자들이 이 성질에 대해서 잘 알고 있기만 하면 자명하다는 표기를 종종 합니다.",
  "n_reviews": 0,
  "start": 1064.3,
  "end": 1073.56
 },
 {
  "input": "We also know that the rest of the points that get mapped to zero sit somewhere in this vertical strip, called the critical strip, and the specific placement of those non-trivial zeros encodes a surprising information about prime numbers.",
  "translatedText": "우리는 또한 0으로 매핑되는 나머지 점들이 임계 스트립이라고 불리는 이 수직 스트립의 어딘가에 있고 이러한 중요하지 않은 0의 특정 배치가 소수에 대한 놀라운 정보를 인코딩한다는 것을 알고 있습니다.",
  "model": "google_nmt",
  "from_community_srt": "각설하고, 우리는 영점으로 가는 다른 점들이 이 임계대(critical strip) 안에 있다는 것을 알고 있습니다. 이 임계대(critical strip) 안에 있다는 것을 알고 있습니다. 이 비자명한 근이 어디에 있는지에 대한 정보는 놀랍게도 소수의 개수에 대한 정보를 알려줍니다. 이 비자명한 근이 어디에 있는지에 대한 정보는 놀랍게도 소수의 개수에 대한 정보를 알려줍니다. 이 비자명한 근이 어디에 있는지에 대한 정보는 놀랍게도 소수의 개수에 대한 정보를 알려줍니다.",
  "n_reviews": 0,
  "start": 1074.56,
  "end": 1088.14
 },
 {
  "input": "It's actually pretty interesting why this function carries so much information about primes, and I definitely think I'll make a video about that later on, but right now things are long enough, so I'll leave it unexplained.",
  "translatedText": "실제로 이 함수가 소수에 대해 그토록 많은 정보를 전달하는 이유는 매우 흥미롭습니다. 나중에 그에 대한 비디오를 만들 것이라고 확실히 생각하지만 지금은 내용이 너무 길어서 설명하지 않고 그대로 두겠습니다.",
  "model": "google_nmt",
  "from_community_srt": "왜 이 함수가 소수에 대한 정보를 담고 있는지에 대해 굉장히 흥미로운 이야기들이 많고 왜 이 함수가 소수에 대한 정보를 담고 있는지에 대해 굉장히 흥미로운 이야기들이 많고 이에 대한 영상을 분명 만들어봐야 하겠으나 이에 대한 영상을 분명 만들어봐야 하겠으나 지금은 이미 충분히 긴 시간이 지났으니 이에 대한 설명은 여기서 하지 않겠습니다. 지금은 이미 충분히 긴 시간이 지났으니 이에 대한 설명은 여기서 하지 않겠습니다.",
  "n_reviews": 0,
  "start": 1089.12,
  "end": 1098.72
 },
 {
  "input": "Riemann hypothesized that all of these non-trivial zeros sit right in the middle of the strip, on the line of numbers s, whose real part is one half.",
  "translatedText": "리만(Riemann)은 이 모든 중요하지 않은 0이 띠의 중앙, 즉 실수 부분이 1/2인 숫자 s 선에 바로 위치한다는 가설을 세웠습니다.",
  "model": "google_nmt",
  "from_community_srt": "리만은 비자명한 모든 근이 이 공간의 정가운데를 지난다는, 리만은 비자명한 모든 근이 이 공간의 정가운데를 지난다는, 즉 s가 모두 실수부가 1/2 (임계선이라 부르는 곳 위)라는 가설을 세웠습니다.",
  "n_reviews": 0,
  "start": 1099.78,
  "end": 1108.64
 },
 {
  "input": "This is called the critical line.",
  "translatedText": "이를 임계선이라고 합니다.",
  "model": "google_nmt",
  "from_community_srt": "즉 s가 모두 실수부가 1/2 (임계선이라 부르는 곳 위)라는 가설을 세웠습니다.",
  "n_reviews": 0,
  "start": 1109.46,
  "end": 1110.88
 },
 {
  "input": "If that's true, it gives us a remarkably tight grasp on the pattern of prime numbers, as well as many other patterns in math that stem from this.",
  "translatedText": "그것이 사실이라면, 우리는 소수의 패턴뿐만 아니라 이것에서 비롯된 수학의 다른 많은 패턴을 매우 정확하게 이해할 수 있습니다.",
  "model": "google_nmt",
  "from_community_srt": "이것이 사실이라면, 우리는 소수의 규칙성 뿐만 아니라 제타 함수와 관련된 수학 분야에서 우리는 소수의 규칙성 뿐만 아니라 제타 함수와 관련된 수학 분야에서 더 놀라울만한 규칙성을 파악 할 수 있을겁니다.",
  "n_reviews": 0,
  "start": 1111.78,
  "end": 1119.46
 },
 {
  "input": "Now, so far, when I've shown what the zeta function looks like, I've only shown what it does to the portion of the grid on the screen, and that kind of undersells its complexity.",
  "translatedText": "지금까지 제타 함수가 어떻게 생겼는지 보여줬을 때 화면의 그리드 부분에 어떤 역할을 하는지만 보여주었기 때문에 그 복잡성이 너무 과소평가되었습니다.",
  "model": "google_nmt",
  "from_community_srt": "지금 우리가 보는 이 임계선은 -4i에서 4i 까지 아주 좁은 범위에서만 보고 있습니다. 지금 우리가 보는 이 임계선은 -4i에서 4i 까지 아주 좁은 범위에서만 보고 있습니다. 지금 우리가 보는 이 임계선은 -4i에서 4i 까지 아주 좁은 범위에서만 보고 있습니다.",
  "n_reviews": 0,
  "start": 1120.34,
  "end": 1129.6
 },
 {
  "input": "So if I were to highlight this critical line and apply the transformation, it might not seem to cross the origin at all.",
  "translatedText": "따라서 이 중요한 선을 강조하고 변환을 적용하면 전혀 원점을 넘지 않는 것처럼 보일 수 있습니다.",
  "model": "google_nmt",
  "from_community_srt": "그래서 이 임계선을 노란색 선으로 강조해서 함수로 변환을 하더라도 그래서 이 임계선을 노란색 선으로 강조해서 함수로 변환을 하더라도 영점을 지나지 않는 것처럼 보일 겁니다. 영점을 지나지 않는 것처럼 보일 겁니다.",
  "n_reviews": 0,
  "start": 1130.32,
  "end": 1136.64
 },
 {
  "input": "However, here's what the transformed version of more and more of that line looks like.",
  "translatedText": "그러나 점점 더 많은 라인이 변형된 버전은 다음과 같습니다.",
  "model": "google_nmt",
  "from_community_srt": "이제 이 강조한 노란 선을 무한대로 뻗어 나가보면 이제 이 강조한 노란 선을 무한대로 뻗어 나가보면 이렇게 보이게 될 겁니다.",
  "n_reviews": 0,
  "start": 1137.2,
  "end": 1141.96
 },
 {
  "input": "Notice how it's passing through the number zero many, many times.",
  "translatedText": "그것이 어떻게 숫자 0을 여러 번 통과하는지 주목하세요.",
  "model": "google_nmt",
  "from_community_srt": "영점을 계속 지나가는 것에 주목해주세요. 영점을 계속 지나가는 것에 주목해주세요.",
  "n_reviews": 0,
  "start": 1146.44,
  "end": 1149.82
 },
 {
  "input": "If you can prove that all of the non-trivial zeros sit somewhere on this line, the Clay Math Institute gives you one million dollars.",
  "translatedText": "중요한 0이 모두 이 선 어딘가에 있다는 것을 증명할 수 있다면 Clay Math Institute에서 백만 달러를 드립니다.",
  "model": "google_nmt",
  "from_community_srt": "만약 이 영점들이 모두 선 위에 있다는 것을 증명한다면 만약 이 영점들이 모두 선 위에 있다는 것을 증명한다면 클레이 수학 연구소에서 백만 달러를 줄 것이고 그리고 동시에 수백 수천가지의 현대 수학에서의 리만 가설을 참이라고 가정하고 세운",
  "n_reviews": 0,
  "start": 1150.5,
  "end": 1157.8
 },
 {
  "input": "And you'd also be proving hundreds, if not thousands, of modern math results that have already been shown contingent on this hypothesis being true.",
  "translatedText": "그리고 당신은 또한 이 가설이 사실이라는 것을 조건으로 이미 입증된 수백, 수천 개의 현대 수학 결과를 증명하게 될 것입니다.",
  "model": "google_nmt",
  "from_community_srt": "그리고 동시에 수백 수천가지의 현대 수학에서의 리만 가설을 참이라고 가정하고 세운 다른 모든 수학적 정리들을 같이 증명한 것이 됩니다. 다른 모든 수학적 정리들을 같이 증명한 것이 됩니다.",
  "n_reviews": 0,
  "start": 1158.24,
  "end": 1165.36
 },
 {
  "input": "Another thing we know about this extended function is that it maps the point negative one over to negative one twelfth.",
  "translatedText": "이 확장 함수에 대해 우리가 아는 또 다른 사실은 음수 1의 점을 음의 12분의 1로 매핑한다는 것입니다.",
  "model": "google_nmt",
  "from_community_srt": "우리가 이 왼쪽 평면에 대해서 알고 있는 것은 우리가 이 왼쪽 평면에 대해서 알고 있는 것은 s=-1일때 -1/12로 이동한다는 것입니다.",
  "n_reviews": 0,
  "start": 1166.52,
  "end": 1172.12
 },
 {
  "input": "And if you plug this into the original sum, it looks like we're saying one plus two plus three plus four, on and on up to infinity, equals negative one twelfth.",
  "translatedText": "이것을 원래 합에 대입하면 1 더하기 2 더하기 3 더하기 4가 계속해서 무한대로 마이너스 1/12가 된다고 말하는 것처럼 보입니다.",
  "model": "google_nmt",
  "from_community_srt": "그리고 s=-1을 무한합으로 정의된 각항에 직접 대입하면 그리고 s=-1을 무한합으로 정의된 각항에 직접 대입하면 마치 1+2+3+4+... = -1/12 가 되는 것 처럼 보입니다. 마치 1+2+3+4+...",
  "n_reviews": 0,
  "start": 1174.16,
  "end": 1182.24
 },
 {
  "input": "Now, it might seem disingenuous to still call this a sum, since the definition of the zeta function on the left half of the plane is not defined directly from this sum.",
  "translatedText": "이제 평면의 왼쪽 절반에 있는 제타 함수의 정의가 이 합에서 직접 정의되지 않기 때문에 이를 합이라고 부르는 것이 솔직하지 않은 것처럼 보일 수 있습니다.",
  "model": "google_nmt",
  "from_community_srt": "= -1/12 가 되는 것 처럼 보입니다. 이걸 보니 이 식을 합계라고 부르는것은 좀 이상해 보이네요. 이것은 제타함수의 왼쪽 평면은 이런 합으로 정의되지 않기 때문입니다. 이것은 제타함수의 왼쪽 평면은 이런 합으로 정의되지 않기 때문입니다. 이것은 제타함수의 왼쪽 평면은 이런 합으로 정의되지 않기 때문입니다.",
  "n_reviews": 0,
  "start": 1182.24,
  "end": 1191.12
 },
 {
  "input": "Instead, it comes from analytically continuing the sum beyond the domain where it converges.",
  "translatedText": "대신, 수렴하는 영역을 넘어 합계를 분석적으로 계속하는 데서 비롯됩니다.",
  "model": "google_nmt",
  "from_community_srt": "대신에 이것은 본래의 정의역을 너머 \"해석적 연속\"을 적용 하는 것에서 나옵니다. 대신에 이것은 본래의 정의역을 너머 \"해석적 연속\"을 적용 하는 것에서 나옵니다.",
  "n_reviews": 0,
  "start": 1191.74,
  "end": 1196.62
 },
 {
  "input": "That is, solving the jigsaw puzzle that began on the right half of the plane.",
  "translatedText": "즉, 비행기의 오른쪽 절반에서 시작된 직소 퍼즐을 푸는 것입니다.",
  "model": "google_nmt",
  "from_community_srt": "그것은 오른쪽에서 시작해서 직쏘퍼즐을 푸는것과 같습니다. 그것은 오른쪽에서 시작해서 직쏘퍼즐을 푸는것과 같습니다.",
  "n_reviews": 0,
  "start": 1197.12,
  "end": 1201.06
 },
 {
  "input": "That said, you have to admit that the uniqueness of this analytic continuation, the fact that the jigsaw puzzle has only one solution, is very suggestive of some intrinsic connection between these extended values and the original sum.",
  "translatedText": "즉, 이 분석 연속의 고유성, 직소 퍼즐에 단 하나의 해가 있다는 사실은 이러한 확장된 값과 원래 합계 사이의 본질적인 연결을 매우 암시한다는 점을 인정해야 합니다.",
  "model": "google_nmt",
  "from_community_srt": "그리고 당신은 \"해석적 연속\"이 굉장히 값진것이라고 인정하게 될겁니다. 그리고 당신은 \"해석적 연속\"이 굉장히 값진것이라고 인정하게 될겁니다. 직소퍼즐이 오직 한가지 해만 가지고 있다는 사실은 직소퍼즐이 오직 한가지 해만 가지고 있다는 사실은 무한 합의 값과 그 확장된 값 사이에 몇가지 직관을 줍니다. 무한 합의 값과 그 확장된 값 사이에 몇가지 직관을 줍니다.",
  "n_reviews": 0,
  "start": 1201.88,
  "end": 1214.36
 }
]