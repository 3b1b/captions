1
00:00:00,000 --> 00:00:12,000
黎曼 zeta 函数。这是现代数学中很多人可能听说过的对象之一，但它可能真的很难理解。

2
00:00:12,000 --> 00:00:16,000
别担心，我将在几分钟内解释您刚刚看到的动画。

3
00:00:16,000 --> 00:00:26,000
很多人都知道这个函数，因为任何能算出它何时为零的人都会获得一百万美元的奖励，这是一个被称为黎曼假设的开放问题。

4
00:00:26,000 --> 00:00:33,000
你们中有些人可能听说过发散和 1 加 2 加 3 加 4，一直到无穷大。

5
00:00:33,000 --> 00:00:41,000
你看，从某种意义上说，这个总和等于负 1 的十二分之一，这即使不是明显错误，也是荒谬的。

6
00:00:41,000 --> 00:00:47,000
但定义该方程实际含义的常用方法是使用黎曼 zeta 函数。

7
00:00:47,000 --> 00:00:58,000
但正如任何开始研究这一点的休闲数学爱好者都知道的那样，它的定义引用了一种称为解析连续的想法，它与复杂的值函数有关。

8
00:00:58,000 --> 00:01:01,000
而且这个想法可能是令人沮丧的不透明和不直观。

9
00:01:01,000 --> 00:01:12,000
所以我在这里想做的只是向大家展示这个 zeta 函数实际上是什么样子，并以一种视觉和更直观的方式解释这种分析延拓的想法是什么。

10
00:01:13,000 --> 00:01:18,000
我假设您了解复数，并且可以轻松地使用它们。

11
00:01:18,000 --> 00:01:28,000
我很想说你应该了解微积分，因为解析延拓都是关于导数的，但就我计划呈现事物的方式而言，我认为如果没有微积分，你实际上可能会很好。

12
00:01:28,000 --> 00:01:33,000
因此，为了直接进入正题，我们先来定义这个 zeta 函数是什么。

13
00:01:33,000 --> 00:01:49,000
对于给定的输入，我们通常使用变量 s，该函数为 1 除以 1 到 s，其始终为 1，加上 1 除 2 到 s，加上 1 除 3 到 s，加上 1 除 4 到 s s，不断地，对所有自然数求和。

14
00:01:51,000 --> 00:01:54,000
例如，假设您插入一个值，例如 s 等于 2。

15
00:01:55,000 --> 00:02:09,000
你会得到 1 加 1 除以 4 加 1 除以 9 加 1 的十六分之一，并且当你不断添加越来越多的平方的倒数时，这恰好接近 pi 的平方超过 6，大约为 1。645.

16
00:02:09,000 --> 00:02:18,000
pi 出现在这里有一个非常美丽的原因，我可能会在以后制作一个关于它的视频，但这只是这个函数为何如此美丽的冰山一角。

17
00:02:18,000 --> 00:02:24,000
您可以对其他输入（例如 3 或 4）执行相同的操作，有时您会得到其他有趣的值。

18
00:02:24,000 --> 00:02:31,000
到目前为止，一切都感觉很合理。你将越来越小的金额加起来，这些总和接近某个数字。

19
00:02:31,000 --> 00:02:33,000
太好了，这里没有疯狂。

20
00:02:34,000 --> 00:02:40,000
然而，如果您阅读相关内容，您可能会看到有人说负 1 的 zeta 等于负 1 的十二分之一。

21
00:02:41,000 --> 00:02:44,000
但看看这个无限的总和，这没有任何意义。

22
00:02:45,000 --> 00:02:55,000
当你把每一项都变成负数 1，翻转每个分数，你就可以得到 1 加 2 加 3 加 4 等等所有自然数。

23
00:02:55,000 --> 00:03:00,000
显然这并没有接近任何东西，当然也不是负 1 十二分之一，对吧？

24
00:03:01,000 --> 00:03:09,000
而且，正如任何研究黎曼假设的雇佣兵都知道的那样，据说这个函数在负偶数处有平凡的零点。

25
00:03:09,000 --> 00:03:13,000
例如，这意味着负 2 的 zeta 等于 0。

26
00:03:13,000 --> 00:03:24,000
但是当你插入负数 2 时，它会给出 1 加 4 加 9 加 16 等等，这显然又不接近任何东西，更不用说 0 了，对吧？

27
00:03:25,000 --> 00:03:31,000
好吧，几分钟后我们就会得到负值，但现在我们只说唯一看起来合理的事情。

28
00:03:31,000 --> 00:03:36,000
该函数仅在 s 大于 1 时才有意义，此时该和收敛。

29
00:03:36,000 --> 00:03:40,000
到目前为止，它还没有定义其他值。

30
00:03:41,000 --> 00:03:50,000
话虽如此，伯纳德·黎曼在某种程度上可以说是复分析之父，复分析是对以复数作为输入和输出的函数的研究。

31
00:03:50,000 --> 00:03:57,000
因此，他不仅仅考虑这个和如何将实数线上的一个数字 s 转换为实数线上的

32
00:03:58,000 --> 00:04:03,000
另一个数字，他的主要重点是理解当你为 s 代入一个复数值时会发生什么。

33
00:04:04,000 --> 00:04:09,000
例如，也许您可以插入 2 加 i，而不是插入 2。

34
00:04:10,000 --> 00:04:16,000
现在，如果您从未见过将数字提高到复数值次方的想法，那么一

35
00:04:16,000 --> 00:04:20,000
开始可能会感觉有点奇怪，因为它不再与重复乘法有任何关系。

36
00:04:20,000 --> 00:04:26,000
但数学家发现，有一种非常好的、非常自然的方法可以将指数

37
00:04:26,000 --> 00:04:31,000
的定义扩展到他们熟悉的实数领域之外，扩展到复数值领域。

38
00:04:33,000 --> 00:04:37,000
理解复杂的指数对于我在这个视频中的走向并不是非常重要

39
00:04:37,000 --> 00:04:41,000
，但我认为如果我们在这里总结一下它的要点仍然会很好。

40
00:04:41,000 --> 00:04:46,000
基本思想是，当您写出 1 half 的复数次方之类的内容时，您可

41
00:04:46,000 --> 00:04:51,000
以将其分解为 1 half 的实部乘以 1 half 的纯虚部。

42
00:04:52,000 --> 00:04:55,000
我们对真实部分的一半表现很好，没有任何问题。

43
00:04:55,000 --> 00:04:59,000
但是如果将某个数提高到纯虚数呢？

44
00:05:00,000 --> 00:05:06,000
好吧，结果将是复平面上单位圆上的某个复数。

45
00:05:06,000 --> 00:05:11,000
当您让纯虚数输入沿虚线上下移动时

46
00:05:11,000 --> 00:05:15,000
，所得输出将围绕该单位圆移动。

47
00:05:19,000 --> 00:05:24,000
对于像 1 half 这样的基数，输出绕单位圆走得有点慢。

48
00:05:24,000 --> 00:05:28,000
但对于距离 1 较远的基数，例如九分之

49
00:05:28,000 --> 00:05:32,000
一，那么当您让该输入在虚轴上上下移动

50
00:05:32,000 --> 00:05:36,000
时，相应的输出将更快地绕单位圆移动。

51
00:05:36,000 --> 00:05:39,000
如果您从未见过这种情况并且想知道为什么会发生这

52
00:05:39,000 --> 00:05:42,000
种情况，我在描述中留下了一些优质资源的链接。

53
00:05:42,000 --> 00:05:46,000
在这里，我将只讨论“是什么”而不是“为什么”。

54
00:05:46,000 --> 00:05:51,000
主要的结论是，当你计算 1 的一半的

55
00:05:51,000 --> 00:05:54,000
2 次方加 i 时，即 1 的一半平方

56
00:05:54,000 --> 00:05:58,000
乘以 1 的一半，i 的 1 一半将在

57
00:05:58,000 --> 00:06:01,000
单位圆上，这意味着它其绝对值为 1。

58
00:06:02,000 --> 00:06:06,000
因此，当你乘以它时，它不会改变数字的

59
00:06:06,000 --> 00:06:09,000
大小，它只是将四分之一并稍微旋转它。

60
00:06:12,000 --> 00:06:16,000
因此，如果您要将 2 加 i 代入 zeta 函数，

61
00:06:16,000 --> 00:06:20,000
思考它的作用的一种方法是将 1 的一半代入 i 部

62
00:06:20,000 --> 00:06:24,000
分，并思考它的作用是从提出的所有项开始2 的幂，你

63
00:06:24,000 --> 00:06:30,000
可以把它想象成将长度为数字平方的倒数的线拼凑在一起

64
00:06:30,000 --> 00:06:34,000
，就像我之前说过的，它收敛到 pi 的 6 平方。

65
00:06:34,000 --> 00:06:38,000
然后，当您将输入从 2 更改为 2

66
00:06:38,000 --> 00:06:41,000
加 i 时，每条线都会旋转一定量。

67
00:06:41,000 --> 00:06:44,000
但重要的是，这些线的长度不

68
00:06:44,000 --> 00:06:46,000
会改变，因此总和仍然收敛。

69
00:06:46,000 --> 00:06:50,000
它只是螺旋式地到达复杂平面上的某个特定点。

70
00:06:51,000 --> 00:06:54,000
在这里，让我展示一下当我改变输入 s 时的

71
00:06:54,000 --> 00:06:57,000
情况，用复平面上的黄点表示，其中这个螺旋

72
00:06:57,000 --> 00:07:02,000
和总是显示 s 的 zeta 的收敛值。

73
00:07:02,000 --> 00:07:17,000
这意味着，只要输入的实部大于 1，定义为无限和的

74
00:07:17,000 --> 00:07:23,000
s 的 zeta 就是一个完全合理的复函数，这

75
00:07:23,000 --> 00:07:28,000
意味着输入 s 位于复平面右半部分的某个位置。

76
00:07:28,000 --> 00:07:33,000
同样，这是因为 s 的实部决定了每个

77
00:07:33,000 --> 00:07:36,000
数字的大小，而虚部仅指示一些旋转。

78
00:07:39,000 --> 00:07:42,000
所以现在我想做的就是可视化这个函数。

79
00:07:42,000 --> 00:07:45,000
它在复平面的右半部分接收输入，

80
00:07:45,000 --> 00:07:49,000
并在复平面的其他位置输出输出。

81
00:07:49,000 --> 00:07:54,000
理解复杂函数的一个超级好方法是将它们可

82
00:07:55,000 --> 00:07:58,000
视化为转换，这意味着您查看函数的每个可

83
00:07:58,000 --> 00:08:01,000
能的输入，然后让它移动到相应的输出。

84
00:08:02,000 --> 00:08:06,000
例如，让我们花点时间尝试想象一些比 zeta 函数

85
00:08:06,000 --> 00:08:09,000
更容易的东西，比如 s 的 f 等于 s 的平方。

86
00:08:09,000 --> 00:08:12,000
当你代入 s 等于 2 时，你会得到 4，所以

87
00:08:12,000 --> 00:08:16,000
我们最终会将 2 处的点移动到 4 处的点。

88
00:08:16,000 --> 00:08:19,000
当你插入负 1 时，你会得到 1，所以负

89
00:08:19,000 --> 00:08:24,000
1 处的点最终会移动到 1 处的点。

90
00:08:24,000 --> 00:08:28,000
当你插入 i 时，根据定义它的平方是

91
00:08:28,000 --> 00:08:31,000
负 1，所以它会移到这里到负 1。

92
00:08:32,000 --> 00:08:34,000
现在我要添加一个更加丰富多彩的网格，这

93
00:08:34,000 --> 00:08:36,000
只是因为事情即将开始移动，并且在移动

94
00:08:36,000 --> 00:08:40,000
期间有一些东西来区分网格线是件好事。

95
00:08:40,000 --> 00:08:44,000
从这里开始，我将告诉计算机在 s 的函数 f 等于

96
00:08:44,000 --> 00:08:49,000
s 平方下将该网格上的每个点移动到其相应的输出。

97
00:08:49,000 --> 00:08:51,000
它看起来是这样的。

98
00:08:55,000 --> 00:08:58,000
这可能需要考虑很多东西，所以我会继续玩一遍。

99
00:08:58,000 --> 00:09:01,000
这一次，将注意力集中在标记点之一上，并

100
00:09:01,000 --> 00:09:05,000
注意它如何移动到与其正方形相对应的点。

101
00:09:07,000 --> 00:09:10,000
看到所有点同时移动可能有点复杂，但好处是，这为

102
00:09:10,000 --> 00:09:16,000
我们提供了一个非常丰富的图片，让我们了解复杂

103
00:09:16,000 --> 00:09:18,000
函数实际在做什么，而且这一切都发生在二维中。

104
00:09:20,000 --> 00:09:22,000
回到 zeta 函数。

105
00:09:22,000 --> 00:09:26,000
我们有这个无限和，它是一些复数 s 的函数

106
00:09:26,000 --> 00:09:31,000
，我们对插入实部大于 1 的 s 值感到高

107
00:09:31,000 --> 00:09:35,000
兴，并通过收敛螺旋和获得一些有意义的输出。

108
00:09:35,000 --> 00:09:37,000
因此，为了可视化这个函数，我将选取

109
00:09:37,000 --> 00:09:41,000
位于复平面右侧的网格部分，其中数字

110
00:09:41,000 --> 00:09:44,000
的实部大于 1，并且我将告诉计算机

111
00:09:44,000 --> 00:09:49,000
移动该网格的每个点都有适当的输出。

112
00:09:49,000 --> 00:09:52,000
如果我在数字 1 周围添加更多网格线，实

113
00:09:52,000 --> 00:09:55,000
际上会有所帮助，因为该区域会被拉伸很多。

114
00:09:59,000 --> 00:10:03,000
好吧，首先让我们欣赏一下它是多么美丽。

115
00:10:03,000 --> 00:10:09,000
我的意思是，该死的，如果这不能让你想要了解更多关于复杂函数的知识，那你就没有良心。

116
00:10:11,000 --> 00:10:16,000
而且，这个改造后的网格只是要求稍微扩展一下。

117
00:10:17,000 --> 00:10:19,000
例如，让我们在这里突出显示这些行，它们表

118
00:10:19,000 --> 00:10:25,000
示所有具有虚部 i 或负 i 的复数。

119
00:10:27,000 --> 00:10:32,000
变形后，这些线条在突然停止之前会形成如此可爱的弧线。

120
00:10:32,000 --> 00:10:36,000
难道你不想继续这些弧线吗？

121
00:10:36,000 --> 00:10:40,000
事实上，您可以想象该函数的某些修改版

122
00:10:40,000 --> 00:10:44,000
本（其定义延伸到平面的左半部分）如何

123
00:10:44,000 --> 00:10:47,000
能够用相当漂亮的东西来完成这张图片。

124
00:10:48,000 --> 00:10:52,000
嗯，这正是处理复杂函数的数学家所做的事情。

125
00:10:52,000 --> 00:10:57,000
它们在定义该函数的原始域之外继续执行该函数。

126
00:10:58,000 --> 00:11:02,000
现在，一旦我们分支到实部小于 1 的输入，我

127
00:11:02,000 --> 00:11:07,000
们最初用来定义函数的无限和就不再有意义了。

128
00:11:07,000 --> 00:11:11,000
你会得到像 1 加 2 加 3 加 4 一直加到无穷大这样的废话。

129
00:11:12,000 --> 00:11:15,000
但是只要看看这个平面右半部分的变换版本，

130
00:11:15,000 --> 00:11:17,000
其中总和确实有意义，它只是请求我们扩展我

131
00:11:17,000 --> 00:11:22,000
们正在考虑作为输入的点集，即使这意味着在

132
00:11:22,000 --> 00:11:28,000
某些中定义扩展函数方式不一定使用该金额。

133
00:11:29,000 --> 00:11:31,000
当然，这给我们留下了一个问题，您将

134
00:11:31,000 --> 00:11:34,000
如何在平面的其余部分定义该功能？

135
00:11:35,000 --> 00:11:38,000
您可能认为可以通过多种方式扩展它。

136
00:11:38,000 --> 00:11:45,000
也许您定义了一个扩展，使得 s 等于负 1 的点移动到负 1 的第十二位。

137
00:11:48,000 --> 00:11:51,000
但也许你在一些扩展上涂上曲线，使它落在任何其他值上。

138
00:11:52,000 --> 00:11:56,000
我的意思是，一旦你接受了为收敛域之外的

139
00:11:56,000 --> 00:11:59,000
值以不同方式定义函数的想法，也就是说

140
00:11:59,000 --> 00:12:02,000
，不是基于这个无限和，世界就是你的牡蛎

141
00:12:02,000 --> 00:12:06,000
，你可以有任意数量的扩展， 正确的？

142
00:12:07,000 --> 00:12:09,000
嗯，不完全是。

143
00:12:09,000 --> 00:12:14,000
我的意思是，是的，你可以给任何孩子一个标记，并让他们以任何

144
00:12:14,000 --> 00:12:20,000
方式扩展这些线，但是如果你添加这个新的扩展函数必须在任何地

145
00:12:20,000 --> 00:12:24,000
方都有导数的限制，它就会将我们锁定为一个且唯一的可能扩大。

146
00:12:25,000 --> 00:12:29,000
我知道，我知道，我说过你不需要了解这个视频的导数，即使

147
00:12:29,000 --> 00:12:34,000
你知道微积分，也许你还没有学会如何解释复杂函数的导数。

148
00:12:35,000 --> 00:12:39,000
但对我们来说幸运的是，当我说“到处都有导数”这

149
00:12:39,000 --> 00:12:42,000
样的短语时，你可以记住一种非常好的几何直觉。

150
00:12:43,000 --> 00:12:47,000
在这里，为了向您展示我的意思，让我们回顾一下 f 等于 s 平方的例子。

151
00:12:47,000 --> 00:12:50,000
同样，我们将此函数视为一种变换，将复平面

152
00:12:50,000 --> 00:12:55,000
上的每个点 s 移动到点 s 的平方。

153
00:12:56,000 --> 00:13:01,000
对于了解微积分的人来说，您知道可以在任何给定

154
00:13:01,000 --> 00:13:04,000
输入处求该函数的导数，但是该变换有一个有趣的

155
00:13:04,000 --> 00:13:07,000
属性，事实证明该属性与该事实相关且几乎等效。

156
00:13:08,000 --> 00:13:12,000
如果您查看输入空间中以某个角度相交的任

157
00:13:12,000 --> 00:13:16,000
何两条线，并考虑它们在变换后会变成什

158
00:13:16,000 --> 00:13:19,000
么，它们仍然会以相同的角度彼此相交。

159
00:13:20,000 --> 00:13:23,000
线条可能会弯曲，这没关系，但重

160
00:13:23,000 --> 00:13:27,000
要的是它们相交的角度保持不变。

161
00:13:28,000 --> 00:13:31,000
对于您选择的任何线对都是如此。

162
00:13:35,000 --> 00:13:37,000
因此，当我说函数到处都有导数时，我希望您

163
00:13:37,000 --> 00:13:40,000
考虑一下这种保角特性，即任何时候两条线

164
00:13:40,000 --> 00:13:46,000
相交，它们之间的角度在变换后保持不变。

165
00:13:47,000 --> 00:13:53,000
乍一看，通过观察网格线变成的所有曲线

166
00:13:53,000 --> 00:13:56,000
仍然以直角相交，最容易理解这一点。

167
00:13:58,000 --> 00:14:02,000
处处具有导数的复杂函数称为解析函数，因

168
00:14:02,000 --> 00:14:06,000
此您可以将解析这个术语视为保角的意思。

169
00:14:06,000 --> 00:14:10,000
诚然，我在这里对你撒了一点谎，但只是一点点。

170
00:14:10,000 --> 00:14:13,000
对于那些想要完整细节的人来说，需要注

171
00:14:13,000 --> 00:14:16,000
意的是，在函数导数为零的输入处，它

172
00:14:16,000 --> 00:14:20,000
们不是保留角度，而是乘以某个整数。

173
00:14:20,000 --> 00:14:23,000
但到目前为止，这些点只是少数，而且对于解

174
00:14:23,000 --> 00:14:27,000
析函数的几乎所有输入，角度都会被保留。

175
00:14:29,000 --> 00:14:35,000
因此，如果当我说解析时你会想到保角，我认为这是一个很好的直觉。

176
00:14:37,000 --> 00:14:43,000
现在，如果你想一下，我真的希望你明白

177
00:14:43,000 --> 00:14:46,000
这一点，这是一个非常受限制的属性。

178
00:14:46,000 --> 00:14:51,000
任何一对相交线之间的角度必须保持不变。

179
00:14:51,000 --> 00:14:56,000
然而，几乎所有有名称的函数都被证明是可解析的。

180
00:14:58,000 --> 00:15:03,000
黎曼帮助建立的现代形式的复分析领域

181
00:15:03,000 --> 00:15:07,000
几乎完全是利用解析函数的属性来理解

182
00:15:07,000 --> 00:15:11,000
数学和科学其他领域的结果和模式。

183
00:15:12,000 --> 00:15:19,000
Zeta 函数由平面右半部分的无限和定义，是一个解析函数。

184
00:15:19,000 --> 00:15:25,000
请注意网格线变成的所有这些曲线仍然如何以直角相交。

185
00:15:26,000 --> 00:15:34,000
因此，关于复杂函数的令人惊讶的事实是，如果

186
00:15:34,000 --> 00:15:37,000
您想将解析函数扩展到最初定义的域之外，例如

187
00:15:37,000 --> 00:15:41,000
，将此 zeta 函数扩展到平面的左半部分

188
00:15:41,000 --> 00:15:45,000
，那么如果您需要新的扩展函数仍然是分析性的

189
00:15:45,000 --> 00:15:48,000
，也就是说，它仍然在任何地方都保留角度，它

190
00:15:48,000 --> 00:15:53,000
迫使你只进行一种可能的扩展，如果存在的话。

191
00:15:53,000 --> 00:15:56,000
这有点像一个无限连续的拼图游戏，这种保留角度的

192
00:15:56,000 --> 00:16:02,000
要求将你锁定在如何扩展它的一个且唯一的选择中。

193
00:16:04,000 --> 00:16:09,000
正如您可能已经猜到的那样，以仍然是解析的唯

194
00:16:09,000 --> 00:16:13,000
一可能方式扩展解析函数的过程称为解析延拓。

195
00:16:15,000 --> 00:16:18,000
这就是完整的黎曼 zeta 函数的定义方式。

196
00:16:18,000 --> 00:16:22,000
对于平面右半部分的 s 值，其中实部大于 1

197
00:16:22,000 --> 00:16:25,000
，只需将它们代入这个总和，看看它在哪里收敛。

198
00:16:25,000 --> 00:16:28,000
这种收敛可能看起来像某种螺旋，因为将这些项中

199
00:16:28,000 --> 00:16:33,000
的每一项提高到复数幂都会产生旋转每项的效果。

200
00:16:33,000 --> 00:16:39,000
那么对于平面的其余部分，我们知道存在一种且只有一种方法来扩展这个

201
00:16:39,000 --> 00:16:45,000
定义，以便该函数仍然是解析的，也就是说，它仍然保留每个点的角度。

202
00:16:45,000 --> 00:16:49,000
所以我们只是说，根据定义，平面左半部分的

203
00:16:49,000 --> 00:16:52,000
zeta 函数就是该延伸恰好是什么。

204
00:16:52,000 --> 00:16:57,000
这是一个有效的定义，因为只有一种可能的分析延续。

205
00:16:58,000 --> 00:17:01,000
请注意，这是一个非常隐含的定义。

206
00:17:01,000 --> 00:17:07,000
它只是说，使用这个拼图游戏的解决方案，通过更抽象的推

207
00:17:07,000 --> 00:17:10,000
导我们知道它一定存在，但它没有具体说明如何解决它。

208
00:17:10,000 --> 00:17:14,000
数学家们已经很好地理解了这个扩展的样

209
00:17:14,000 --> 00:17:17,000
子，但它的一些重要部分仍然是个谜。

210
00:17:17,000 --> 00:17:19,000
事实上，这是一个价值百万美元的谜团。

211
00:17:19,000 --> 00:17:24,000
让我们花点时间讨论一下黎曼假设，即百万美元问题。

212
00:17:24,000 --> 00:17:28,000
事实证明，该函数为零的地方非常重要。

213
00:17:28,000 --> 00:17:33,000
也就是说，哪些点在变换后映射到原点。

214
00:17:33,000 --> 00:17:39,000
关于此扩展，我们知道的一件事是负偶数被映射到零。

215
00:17:41,000 --> 00:17:44,000
这些通常称为平凡零点。

216
00:17:44,000 --> 00:17:47,000
这里的命名源于数学家的一个长期传统，即当他

217
00:17:47,000 --> 00:17:50,000
们非常了解事物时，他们就称事物为微不足道

218
00:17:50,000 --> 00:17:54,000
的，即使这是一个从一开始就不明显的事实。

219
00:17:54,000 --> 00:17:58,000
我们还知道映射到零的其余点位于该

220
00:17:58,000 --> 00:18:02,000
垂直带中的某个位置，称为临界带。

221
00:18:02,000 --> 00:18:09,000
这些非平凡零的具体位置编码了有关素数的令人惊讶的信息。

222
00:18:09,000 --> 00:18:13,000
实际上非常有趣的是，为什么这个函数包含如此多关于素数的信息，我绝对想稍后

223
00:18:13,000 --> 00:18:19,000
我会制作一个有关该内容的视频，但现在事情已经足够长了，所以我不会解释它。

224
00:18:19,000 --> 00:18:25,000
黎曼假设所有这些非平凡的零都位于条带的中间

225
00:18:25,000 --> 00:18:29,000
，在数字 s 的线上，其实部是二分之一。

226
00:18:29,000 --> 00:18:31,000
这称为临界线。

227
00:18:31,000 --> 00:18:37,000
如果这是真的，那么我们就可以非常紧密地掌握素

228
00:18:37,000 --> 00:18:40,000
数的模式，以及由此产生的许多其他数学模式。

229
00:18:40,000 --> 00:18:43,000
到目前为止，当我展示 zeta 函数

230
00:18:43,000 --> 00:18:47,000
的样子时，我只展示了它对屏幕上网格部

231
00:18:47,000 --> 00:18:50,000
分的作用，这有点低估了它的复杂性。

232
00:18:50,000 --> 00:18:54,000
因此，如果我要突出显示这条关键线并应用

233
00:18:54,000 --> 00:18:57,000
变换，它可能看起来根本没有跨越原点。

234
00:18:57,000 --> 00:19:02,000
然而，这就是越来越多的该行的转换版本的样子。

235
00:19:03,000 --> 00:19:07,000
注意它是如何多次通过数字零的。

236
00:19:07,000 --> 00:19:12,000
如果你能证明所有非平凡的零都位于这条线上的

237
00:19:12,000 --> 00:19:15,000
某个地方，克莱数学研究所就会给你一百万美

238
00:19:15,000 --> 00:19:19,000
元，而且你还可以证明数百甚至数千个已被证

239
00:19:19,000 --> 00:19:23,000
明的现代数学结果取决于这个假设是否正确。

240
00:19:23,000 --> 00:19:30,000
关于这个扩展函数，我们知道的另一件事是它将负一映射到负一十二。

241
00:19:31,000 --> 00:19:36,000
如果你把这个代入原始总和，看起来我们是在说一

242
00:19:36,000 --> 00:19:39,000
加二加三加四，一直到无穷大，等于负一十二。

243
00:19:39,000 --> 00:19:42,000
现在，仍然称其为总和似乎有些不诚实，因为平面左半部

244
00:19:42,000 --> 00:19:48,000
分的 zeta 函数的定义不是直接从该总和定义的。

245
00:19:48,000 --> 00:19:54,000
相反，它来自于在其收敛的域之外分析地继续求和。

246
00:19:54,000 --> 00:19:58,000
即解决从该行第一行开始的拼图，解

247
00:19:58,000 --> 00:20:02,000
决从该平面右半部分开始的拼图。

248
00:20:02,000 --> 00:20:06,000
也就是说，您必须承认这种分析延拓的独特性，

249
00:20:06,000 --> 00:20:09,000
即拼图游戏只有一个解决方案这一事实，非常暗

250
00:20:09,000 --> 00:20:15,000
示这些扩展值与原始总和之间的某种内在联系。

