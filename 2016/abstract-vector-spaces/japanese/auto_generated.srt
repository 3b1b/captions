1
00:00:16,880 --> 00:00:19,496
このシリーズの最初のビデオで私が尋ねた、一見 

2
00:00:19,496 --> 00:00:22,000
単純な質問をもう一度考えてみたいと思います。

3
00:00:22,700 --> 00:00:23,560
ベクトルとは何ですか? 

4
00:00:24,480 --> 00:00:27,540
たとえば、2 次元ベクトルは基本的に平面上の矢 

5
00:00:27,540 --> 00:00:30,600
印であり、便宜上座標で説明できるのでしょうか? 

6
00:00:30,860 --> 00:00:34,290
それとも、根本的には、平面上の矢印としてう 

7
00:00:34,290 --> 00:00:37,720
まく視覚化された実数のペアなのでしょうか? 

8
00:00:38,480 --> 00:00:39,920
それとも、これらは両方とも、より深

9
00:00:39,920 --> 00:00:41,360
い何かの単なる現れなのでしょうか？

10
00:00:42,300 --> 00:00:45,518
一方で、ベクトルを主に数値のリストとして定義する 

11
00:00:45,518 --> 00:00:48,480
ことは、明確で曖昧さのないように感じられます。

12
00:00:49,060 --> 00:00:51,306
これにより、4 次元ベクトルや 100 

13
00:00:51,306 --> 00:00:54,001
次元ベクトルのようなものが、実際に取り組むこと 

14
00:00:54,001 --> 00:00:56,921
ができる現実的で具体的なアイデアのように聞こえます。

15
00:00:56,921 --> 00:00:58,943
そうでない場合、4 次元のようなア 

16
00:00:58,943 --> 00:01:01,863
イデアは、少し手を振らなければ説明するのが難しい漠然

17
00:01:01,863 --> 00:01:03,660
とした幾何学的概念にすぎません。

18
00:01:05,540 --> 00:01:09,139
しかしその一方で、実際に線形代数を扱う人たちに共通

19
00:01:09,139 --> 00:01:12,738
する感覚は、 特に基底の変更がより流暢になるにつれ

20
00:01:12,738 --> 00:01:16,337
、与えられた座標から独立し て存在する空間を扱って

21
00:01:16,337 --> 00:01:19,360
いるということです。その座標は実際には、 

22
00:01:19,360 --> 00:01:23,680
基底ベクトルとして何を選択したかに応じて多少任意になります。

23
00:01:24,480 --> 00:01:27,683
行列式や固有ベクトルなど、線形代数のその他のトピッ 

24
00:01:27,683 --> 00:01:30,640
クは、座標系の選択に無関係であるように見えます。

25
00:01:31,440 --> 00:01:33,981
行列式は、変換によって領域がどの程度スケ

26
00:01:33,981 --> 00:01:36,523
ーリングされるかを示し ます。固有ベクト

27
00:01:36,523 --> 00:01:39,320
ルは、変換中に独自のスパンに留まるものです。

28
00:01:40,000 --> 00:01:42,780
ただし、これらのプロパティは両方とも本質的に

29
00:01:42,780 --> 00:01:45,560
空間的なものであるため 、どちらかの基礎とな

30
00:01:45,560 --> 00:01:48,340
る値を変更せずに座標系を自由に変更できます。

31
00:01:50,760 --> 00:01:53,680
しかし、ベクトルが基本的に実数のリストではなく

32
00:01:53,680 --> 00:01:56,600
、その根底にあ る本質がより空間的なものである

33
00:01:56,600 --> 00:01:58,631
場合、数学者が空間や空間といっ 

34
00:01:58,631 --> 00:02:02,440
た言葉を使用するときに何を意味するのかという疑問が生じます。

35
00:02:03,400 --> 00:02:06,673
ここまでの話を進めるために、このビデオの大部分を、矢 

36
00:02:06,673 --> 00:02:09,947
印でも数字のリストでもない、ベクトルのような性質や関 

37
00:02:09,947 --> 00:02:13,100
数を持つものについて話すことに費やしたいと思います。

38
00:02:13,740 --> 00:02:15,810
ご存知のとおり、関数は実際にはベクトル

39
00:02:15,810 --> 00:02:17,880
の一種にすぎないという意味があります。

40
00:02:19,760 --> 00:02:22,277
2 つのベクトルを加算するのと同じように、2 

41
00:02:22,277 --> 00:02:24,903
つの関数 f と g を加 算して、新しい関数 

42
00:02:24,903 --> 00:02:27,640
f と g を加算するという賢明な概念もあります。

43
00:02:28,200 --> 00:02:30,761
それは、それがどうなるかはすでにわかっているものの、実 

44
00:02:30,761 --> 00:02:33,140
際にそれを表現するのは一口に過ぎないものの1つです。

45
00:02:33,960 --> 00:02:38,424
負の 4 などの任意の入力におけるこの新しい関数

46
00:02:38,424 --> 00:02:41,587
の出力は、同じ入力 (負の 4) 

47
00:02:41,587 --> 00:02:45,307
でそれぞれを評価したときの f と g 

48
00:02:45,307 --> 00:02:47,540
の出力の合計になります。

49
00:02:47,540 --> 00:02:54,143
より一般的には、任意の入力 x における sum 

50
00:02:54,143 --> 00:03:01,540
関 数の値は、x の値 f と x の g の合計です。

51
00:03:01,540 --> 00:03:03,900
これは、座標ごとにベクトルを追加することに非常に似ています。

52
00:03:04,240 --> 00:03:08,500
ある意味、扱うべき座標が無限にあるというだけのことです。

53
00:03:11,100 --> 00:03:13,079
同様に、関数を実数でスケーリング

54
00:03:13,079 --> 00:03:15,060
するという賢明な概念もあります。

55
00:03:15,560 --> 00:03:18,180
すべての出力をその数値でスケールするだけです。

56
00:03:20,240 --> 00:03:21,890
繰り返しになりますが、これはベクトル座標を

57
00:03:21,890 --> 00:03:23,620
座標ごとにスケーリングすることに似ています。

58
00:03:23,780 --> 00:03:26,220
座標が無限にあるような気がします。

59
00:03:28,900 --> 00:03:32,124
さて、ベクトルが実際にできることは足し合わせたりス

60
00:03:32,124 --> 00:03:35,349
ケーリングした りすることだけだとすると、もともと

61
00:03:35,349 --> 00:03:38,574
矢印と矢印のコンテキストで考 えられていたのと同じ

62
00:03:38,574 --> 00:03:41,541
便利な構成要素と線形代数の問題解決手法を利用 

63
00:03:41,541 --> 00:03:44,766
できるはずだと感じます。スペースを作成し、関数にも

64
00:03:44,766 --> 00:03:45,540
適用します。

65
00:03:46,540 --> 00:03:51,146
たとえば、関数の線形変換という完全に合理的な概念があります 

66
00:03:51,146 --> 00:03:55,600
。これは、ある関数を取り込んで別の関数に変換するものです。

67
00:03:59,820 --> 00:04:02,780
身近な例の 1 つは、微分積分学に由来します。

68
00:04:03,420 --> 00:04:07,140
ある機能を別の機能に変換するものです。

69
00:04:08,720 --> 00:04:11,401
この文脈では、変換の代わりにこれらの演算子と呼ばれ 

70
00:04:11,401 --> 00:04:13,980
る言葉が聞こえることがありますが、意味は同じです。

71
00:04:16,240 --> 00:04:18,951
当然のことながら、関数の変換が線形であると 

72
00:04:18,951 --> 00:04:21,540
はどういう意味なのかという疑問が生じます。

73
00:04:22,440 --> 00:04:26,507
線形性の正式な定義は、このシリーズの第 3 章で最初に説明 

74
00:04:26,507 --> 00:04:30,440
した方法に比べて比較的抽象的で、象徴的に説明されています。

75
00:04:30,440 --> 00:04:33,792
しかし、抽象性の恩恵は、関数や矢印に適用で 

76
00:04:33,792 --> 00:04:36,840
きるほど一般的なものが得られることです。

77
00:04:39,180 --> 00:04:41,944
一般に加法性とスケーリングと呼ばれる 

78
00:04:41,944 --> 00:04:45,000
2 つの特性を満たす場合、変換は線形です。

79
00:04:46,040 --> 00:04:49,632
加法性とは、2 つのベクトル v と w 

80
00:04:49,632 --> 00:04:53,909
を加算し、その合計に変換を適用すると、v と w 

81
00:04:53,909 --> 00:04:58,529
の変換されたバージョンを加算した場合と同じ結果が得られ

82
00:04:58,529 --> 00:05:00,240
ることを意味します。

83
00:05:04,520 --> 00:05:07,337
スケーリング特性とは、ベクトル v 

84
00:05:07,337 --> 00:05:11,720
をある数値でスケーリング してから変換を適用すると、v 

85
00:05:11,720 --> 00:05:14,224
の変換バージョンを同じ量だけス 

86
00:05:14,224 --> 00:05:18,920
ケーリングした場合と同じ最終的なベクトルが得られることです。

87
00:05:21,700 --> 00:05:25,542
これについてよく耳にするのは、線形変換ではベクトル加 

88
00:05:25,542 --> 00:05:29,100
算とスカラー乗算の演算が保持されるということです。

89
00:05:32,200 --> 00:05:35,060
過去のビデオで説明した、グリッド線が平行かつ等間

90
00:05:35,060 --> 00:05:37,921
隔に保たれるという アイデアは、実際には、2D 

91
00:05:37,921 --> 00:05:40,662
空間内の点の特定の場合において、これ ら 2 

92
00:05:40,662 --> 00:05:44,000
つのプロパティが何を意味するかを示したものにすぎません。

93
00:05:44,880 --> 00:05:48,636
行列ベクトルの乗算を可能にするこれらのプロパティ 

94
00:05:48,636 --> 00:05:52,393
の最も重要な結果の 1 つは、線形変換が基底ベク 

95
00:05:52,393 --> 00:05:56,000
トルを取る場所によって完全に記述されることです。

96
00:05:57,720 --> 00:06:00,871
任意のベクトルは、何らかの方法で基底ベクトルをスケーリン

97
00:06:00,871 --> 00:06:04,023
グおよび加算するこ とによって表現できるため、ベクトルの

98
00:06:04,023 --> 00:06:06,275
変換バージョンを見つけるには、同じ方法 

99
00:06:06,275 --> 00:06:09,426
で基底ベクトルの変換バージョンをスケーリングおよび加算す

100
00:06:09,426 --> 00:06:10,440
ることになります。

101
00:06:12,280 --> 00:06:14,530
すぐにわかるように、これは矢印だ

102
00:06:14,530 --> 00:06:16,780
けでなく関数にも当てはまります。

103
00:06:18,360 --> 00:06:21,106
たとえば、微積分の学生は、たとえそのように表現され

104
00:06:21,106 --> 00:06:23,853
ているのを聞いたことがなく ても、導関数が加法的で

105
00:06:23,853 --> 00:06:26,820
スケーリング特性があるという事実を常に利用しています。

106
00:06:28,140 --> 00:06:30,953
2 つの関数を追加してから導関数を取得する場

107
00:06:30,953 --> 00:06:33,766
合、最初にそれぞれの関 数の導関数を個別に取

108
00:06:33,766 --> 00:06:36,580
得してから、その結果を加算するのと同じです。

109
00:06:40,140 --> 00:06:43,510
同様に、関数をスケーリングしてから導関数を取得する場合、最初

110
00:06:43,510 --> 00:06:46,880
 に導関数を取得してから結果をスケーリングするのと同じです。

111
00:06:50,280 --> 00:06:53,257
並列処理を実際にドリルするために、行列を使用して導 

112
00:06:53,257 --> 00:06:56,120
関数を記述するとどのようになるかを見てみましょう。

113
00:06:56,980 --> 00:07:00,457
関数空間は無限次元になる傾向があるため、これは少し難しいで 

114
00:07:00,457 --> 00:07:03,820
すが、この演習は実際には非常に満足できるものだと思います。

115
00:07:04,840 --> 00:07:07,354
x の 2 乗プラス 3x プラス 5、または 

116
00:07:07,354 --> 00:07:09,345
4x の 7 乗か ら 5x の 2 

117
00:07:09,345 --> 00:07:11,860
乗を引いたものなどの多項式に限定してみましょう。

118
00:07:12,330 --> 00:07:16,738
空間内の各多項式には有限数の項しか含まれませんが、空間全体 

119
00:07:16,738 --> 00:07:21,000
には任意の大きな次数をもつ多項式が含まれることになります。

120
00:07:22,220 --> 00:07:25,265
最初に行う必要があるのは、この空間に座標を与えることです。

121
00:07:25,265 --> 00:07:27,260
これには基底を選択する必要があります。

122
00:07:28,180 --> 00:07:31,257
多項式は変数 x のスケーリングされた累乗の合

123
00:07:31,257 --> 00:07:33,933
計としてすでに記述されて いるため、x 

124
00:07:33,933 --> 00:07:37,680
の純粋な累乗を基底関数として選択するのは非常に自然です。

125
00:07:38,280 --> 00:07:41,045
言い換えれば、最初の基底関数は定数関数となり、x 

126
00:07:41,045 --> 00:07:43,700
の b0 は 1 に等しいということになります。

127
00:07:44,180 --> 00:07:46,725
2 番目の基底関数は、x の b1 が x 

128
00:07:46,725 --> 00:07:49,386
に等しく、次に x の b2 が x の 2 

129
00:07:49,386 --> 00:07:52,163
乗に等しく、次に x の b3 が x の 3 

130
00:07:52,163 --> 00:07:53,320
乗に等しくなります。

131
00:07:53,860 --> 00:07:56,233
これらの基底関数が果たす役割は、矢印として

132
00:07:56,233 --> 00:07:58,606
のベクトルの世界にお ける i-hat、j

133
00:07:58,606 --> 00:08:00,980
-hat、k-hat の役割と似ています。

134
00:08:02,120 --> 00:08:04,868
多項式の次数は任意に大きくできるため、 

135
00:08:04,868 --> 00:08:07,480
この基底関数のセットは無限になります。

136
00:08:08,240 --> 00:08:10,172
しかし、それは問題ありません。それは、多項式を

137
00:08:10,172 --> 00:08:12,104
ベクトルとして扱うと、多 項式が無限に多くの座

138
00:08:12,104 --> 00:08:14,120
標を持つことになるということを意味するだけです。

139
00:08:15,600 --> 00:08:19,230
たとえば、x の 2 乗 + 3x + 5 

140
00:08:19,230 --> 00:08:24,180
のような多項式は 、座標 5、3、1 と、無限に多くの 0 

141
00:08:24,180 --> 00:08:25,500
で記述されます。

142
00:08:26,100 --> 00:08:30,466
これは、最初の基底関数の 5 倍、2 番目の基底関数の 3 

143
00:08:30,466 --> 00:08:34,833
倍、3 番目の基底関数の 1 倍であり、その時点以降は他の基

144
00:08:34,833 --> 00:08:39,200
 底関数を追加しないでください、と言っているように読めます。

145
00:08:40,620 --> 00:08:44,421
多項式 4x から 7 番目の 5x を引いた 

146
00:08:44,421 --> 00:08:48,855
2 乗は、座標 0、0、負 の 5、0、0、0、0、4 

147
00:08:48,855 --> 00:08:52,340
を持ち、その後無限のゼロの文字列になります。

148
00:08:53,260 --> 00:08:58,218
一般に、個々の多項式には有限数の項しか含まれないため、 

149
00:08:58,218 --> 00:09:03,000
その座標は無限のゼロの尾を持つ有限の数値列になります。

150
00:09:06,900 --> 00:09:10,415
この座標系では、導関数は、ほとんどがゼロで満た

151
00:09:10,415 --> 00:09:13,931
されているが、このオフセ ット対角線でカウント

152
00:09:13,931 --> 00:09:17,600
ダウンする正の整数を持つ無限行列で記述されます。

153
00:09:18,400 --> 00:09:20,386
このマトリックスを見つける方法についてはす

154
00:09:20,386 --> 00:09:22,373
ぐに説明しますが、そ の感触を得る最良の方

155
00:09:22,373 --> 00:09:24,360
法は、実際に動作しているのを見ることです。

156
00:09:24,969 --> 00:09:29,954
多項式 x 3 乗 + 5x 2 乗 + 4x + 5 

157
00:09:29,954 --> 00:09:34,940
を表す座標を取得し、それらの座標を行列の右側に置きます。

158
00:09:40,410 --> 00:09:44,612
結果の最初の座標に寄与する唯一の項は 1 x 4 です 。

159
00:09:44,612 --> 00:09:48,380
これは、結果の定数項が 4 になることを意味します。

160
00:09:50,100 --> 00:09:52,373
これは、4x の導関数が定数 4 

161
00:09:52,373 --> 00:09:54,380
であるという事実に対応します。

162
00:09:55,640 --> 00:09:59,535
行列ベクトル積の 2 番目の座標に寄与する唯一の項は 

163
00:09:59,535 --> 00:10:02,565
2 x 5 です 。これは、導関数の x 

164
00:10:02,565 --> 00:10:05,740
の前の係数が 10 であることを意味します。

165
00:10:06,500 --> 00:10:09,280
これは 5x の 2 乗の微分に相当します。

166
00:10:10,780 --> 00:10:13,501
同様に、行列ベクトル積の 3 番目の 

167
00:10:13,501 --> 00:10:16,080
座標は、3 掛ける 1 になります。

168
00:10:17,660 --> 00:10:21,740
これは、x の 3 乗を 3 乗した微分に相当します。

169
00:10:23,080 --> 00:10:25,020
そしてその後はゼロばかりになります。

170
00:10:26,880 --> 00:10:29,800
これが可能になるのは、導関数が線形であるためです。

171
00:10:31,640 --> 00:10:35,024
立ち止まってじっくり考えたい人のために、各基 

172
00:10:35,024 --> 00:10:38,409
底関数の導関数を取得し、その結果の座標を各列 

173
00:10:38,409 --> 00:10:41,500
に入力することで、この行列を構築できます。

174
00:10:59,780 --> 00:11:03,087
驚くべきことに、行列ベクトルの乗算と導関数は、最

175
00:11:03,087 --> 00:11:06,394
初はまったく別の動物のよ うに見えましたが、実際

176
00:11:06,394 --> 00:11:09,840
には両方とも同じファミリーのメンバーにすぎません。

177
00:11:11,220 --> 00:11:15,159
実際、ドット積や固有ベクトルなど、このシリーズで空間 

178
00:11:15,159 --> 00:11:18,952
内の矢印としてのベクトルに関して私が話してきた概念 

179
00:11:18,952 --> 00:11:22,892
のほとんどは、関数の世界で直接類似していますが、別の 

180
00:11:22,892 --> 00:11:26,540
名前で呼ばれることもあります。内積や固有関数など。

181
00:11:28,400 --> 00:11:30,880
さて、ベクトルとは何かという問題に戻ります。

182
00:11:31,560 --> 00:11:33,645
ここで私が言いたいのは、数学にはベクト

183
00:11:33,645 --> 00:11:35,840
ル的なものがたくさんあるということです。

184
00:11:35,840 --> 00:11:39,768
スケーリングと加算という合理的な概念が存在するオブジェクト

185
00:11:39,768 --> 00:11:43,697
のセットを扱っ ている限り、それが空間内の矢印のセット、数

186
00:11:43,697 --> 00:11:45,865
値のリスト、関数、または定義す 

187
00:11:45,865 --> 00:11:49,794
ることを選択したその他のおかしなものであるかどうかにかかわ

188
00:11:49,794 --> 00:11:53,723
らず、ベクトル 、線形変換などに関する線形代数で開発された

189
00:11:53,723 --> 00:11:55,620
ツールは適用できるはずです。

190
00:11:57,480 --> 00:12:00,072
少し時間を取って、今自分が線形代数の理論を開 

191
00:12:00,072 --> 00:12:02,440
発している数学者であると想像してください。

192
00:12:02,440 --> 00:12:04,915
自分の作品のすべての定義と発見が、1 

193
00:12:04,915 --> 00:12:07,000
つの特定のケースだけでなく、ベ 

194
00:12:07,000 --> 00:12:09,866
クトル的なものすべてに完全に一般的に適用され

195
00:12:09,866 --> 00:12:11,300
ることを望んでいます。

196
00:12:13,400 --> 00:12:16,710
矢印や数値や関数のリストなど、ベクトルっぽ 

197
00:12:16,710 --> 00:12:19,720
いものの集合はベクトル空間と呼ばれます。

198
00:12:20,580 --> 00:12:22,750
そして、数学者としてあなたがしたいことは、「やあ

199
00:12:22,750 --> 00:12:24,920
、皆さん、私は皆 さんが思いつくかもしれないさま

200
00:12:24,920 --> 00:12:26,457
ざまな種類のクレイジーなベクトル 

201
00:12:26,457 --> 00:12:28,627
空間について考える必要はありません」と言うことか

202
00:12:28,627 --> 00:12:29,260
もしれません。

203
00:12:29,260 --> 00:12:32,321
したがって、ベクトルの加算とスケーリングが従う必 

204
00:12:32,321 --> 00:12:35,260
要があるルールのリストを確立することになります。

205
00:12:36,400 --> 00:12:38,356
これらの規則は公理と呼ばれます。

206
00:12:38,356 --> 00:12:41,903
現代の線形代数理論では、私 たちが発見したすべての理論と構

207
00:12:41,903 --> 00:12:45,572
成が適用される場合、ベクト ル空間が満たさなければならない 

208
00:12:45,572 --> 00:12:47,040
8 つの公理があります。

209
00:12:47,700 --> 00:12:50,284
立ち止まって熟考したい人のために、ここでは画面上に

210
00:12:50,284 --> 00:12:52,868
それらを残してお きますが、基本的に、これはベクト

211
00:12:52,868 --> 00:12:54,728
ル加算とスカラー乗算の概念が期待ど 

212
00:12:54,728 --> 00:12:57,313
おりの動作をするかどうかを確認するための単なるチェ

213
00:12:57,313 --> 00:12:58,140
ックリストです。

214
00:12:58,720 --> 00:13:02,732
これらの公理は、基本的な自然法則というよりも、結果を発見 

215
00:13:02,732 --> 00:13:06,744
する数学者と、その結果を新しい種類のベクトル空間に適用し 

216
00:13:06,744 --> 00:13:10,480
たいと考えている他の人々との間のインターフェイスです。

217
00:13:11,420 --> 00:13:14,741
たとえば、誰かが、pi クリーチャーの追加とスケーリングの

218
00:13:14,741 --> 00:13:18,062
定義を備えたす べての pi クリーチャーのセットなど、ク

219
00:13:18,062 --> 00:13:19,894
レイジーなタイプのベクトル空間 

220
00:13:19,894 --> 00:13:23,215
を定義した場合、これらの公理は、定義を行う前に確認する必要

221
00:13:23,215 --> 00:13:26,193
があるもののチ ェックリストのようなものになります。

222
00:13:26,193 --> 00:13:28,140
線形代数の結果の適用を開始します。

223
00:13:28,820 --> 00:13:30,629
そして、数学者であるあなたは、人々が定義

224
00:13:30,629 --> 00:13:32,439
する可能性のあるすべ てのクレイジーなベ

225
00:13:32,439 --> 00:13:34,340
クトル空間について考える必要はありません。

226
00:13:34,860 --> 00:13:38,320
これらの公理に従って結果を証明するだけで、定義がこれらの公理

227
00:13:38,320 --> 00:13:41,780
 を満たす人なら誰でも、たとえ彼らの状況を考えたこともなかっ

228
00:13:41,780 --> 00:13:45,240
 たとしても、あなたの結果を喜んで適用できるようになります。

229
00:13:46,520 --> 00:13:50,580
その結果、空間内の矢印や関数など、特定の種類のベクトルを 

230
00:13:50,580 --> 00:13:54,500
中心とするのではなく、すべての結果をかなり抽象的に、つ 

231
00:13:54,500 --> 00:13:58,280
まりこれらの公理の観点からのみ表現する傾向があります。

232
00:14:01,860 --> 00:14:05,705
たとえば、これが、ほぼすべての教科書で、グリッド線が平 

233
00:14:05,705 --> 00:14:09,551
行で等間隔に保たれることについてではなく、加法性とスケ 

234
00:14:09,551 --> 00:14:13,260
ーリングという観点から線形変換を定義している理由です。

235
00:14:13,260 --> 00:14:15,926
たとえそれが特定の状況に限定されていたとしても

236
00:14:15,926 --> 00:14:18,593
、後者の方が直感的であ り、少なくとも私の見解

237
00:14:18,593 --> 00:14:21,260
では、初めて学習する人にとってはより有益です。

238
00:14:22,620 --> 00:14:24,770
したがって、ベクトルとは何かに対する数学

239
00:14:24,770 --> 00:14:26,920
者の答えは、その質問を無視することです。

240
00:14:27,500 --> 00:14:31,260
現代の理論では、ベクトルの形はあまり重要ではありません。

241
00:14:31,860 --> 00:14:34,935
矢印、数値のリスト、関数、円周率の生き物など、

242
00:14:34,935 --> 00:14:38,010
これらのルールに従うベク トルの追加とスケーリ

243
00:14:38,010 --> 00:14:41,220
ングの概念がある限り、実際には何でも構いません。

244
00:14:41,860 --> 00:14:43,321
それは、数字の 3 が実際には

245
00:14:43,321 --> 00:14:44,880
何なのかを尋ねるようなものです。

246
00:14:45,380 --> 00:14:48,526
それが具体的に現れるときは常に、物事のいくつかの三つ組の

247
00:14:48,526 --> 00:14:51,673
文脈の中にあります が、数学では、物事の考えられるすべて

248
00:14:51,673 --> 00:14:53,921
の三つ組の抽象化として扱われ、単一のア 

249
00:14:53,921 --> 00:14:57,068
イデアを使用して、考えられるすべての三つ組について推論す

250
00:14:57,068 --> 00:14:58,080
ることができます。

251
00:14:59,120 --> 00:15:01,199
同じことがベクトルにも当てはまります。

252
00:15:01,199 --> 00:15:03,169
ベクトルには多くの具体例があります 

253
00:15:03,169 --> 00:15:05,796
が、数学はそれらすべてをベクトル空間の単一の無形

254
00:15:05,796 --> 00:15:07,000
の概念に抽象化します。

255
00:15:08,860 --> 00:15:12,168
しかし、このシリーズを見ている人なら誰でも知っているように

256
00:15:12,168 --> 00:15:15,477
、原点を矢印の根とした 2D 空間のような、具体的で視覚化

257
00:15:15,477 --> 00:15:18,900
可能な設定でベクトルについて推論し始める方が良いと思います。

258
00:15:19,660 --> 00:15:23,215
しかし、線形代数をさらに学ぶにつれて、これらのツールはより 

259
00:15:23,215 --> 00:15:26,771
一般的に適用できること、そしてこれが教科書や講義が抽象的な 

260
00:15:26,771 --> 00:15:30,090
表現になりがちな根本的な理由であることを知ってください。

261
00:15:31,940 --> 00:15:34,440
それでは、皆さん、これをこの線形代数のエッセンス 

262
00:15:34,440 --> 00:15:36,140
シリーズの紹介にしようと思います。

263
00:15:36,140 --> 00:15:40,045
ビデオを見て理解できたなら、線形代数の根底にある直 

264
00:15:40,045 --> 00:15:43,800
観にしっかりとした基礎があると私は確信しています。

265
00:15:44,640 --> 00:15:47,431
もちろん、これはトピック全体を学習することと同じでは

266
00:15:47,431 --> 00:15:50,222
ありません。それは 実際に問題に取り組むことによって

267
00:15:50,222 --> 00:15:52,369
のみ得られるものですが、適切な直感がす 

268
00:15:52,369 --> 00:15:55,161
べて備わっていれば、今後の学習は大幅に効率的になる可

269
00:15:55,161 --> 00:15:56,020
能性があります。

270
00:15:56,660 --> 00:16:18,530
その直感を楽しんで応用してください。

271
00:16:18,530 --> 00:16:35,540
今後の学習に幸運を祈ります。

