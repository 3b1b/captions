[
 {
  "input": "I'd like to revisit a deceptively simple question that I asked in the very first video of this series.",
  "translatedText": "저는 이 시리즈의 첫 번째 비디오에서 제가 물었던 매우 간단한 질문을 다시 살펴보고 싶습니다.",
  "model": "google_nmt",
  "from_community_srt": "이 시리즈에서 가장 처음에 했던 질문으로 되돌아가보자.",
  "n_reviews": 0,
  "start": 16.88,
  "end": 22.0
 },
 {
  "input": "What are vectors?",
  "translatedText": "벡터란 무엇입니까?",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 22.7,
  "end": 23.56
 },
 {
  "input": "Is a two-dimensional vector, for example, fundamentally an arrow on a flat plane that we can describe with coordinates for convenience?",
  "translatedText": "예를 들어 2차원 벡터는 기본적으로 편의상 좌표로 설명할 수 있는 평면 위의 화살표인가요?",
  "model": "google_nmt",
  "from_community_srt": "벡터란 무엇인가? 예를 들어 2차원 벡터란",
  "n_reviews": 0,
  "start": 24.48,
  "end": 30.6
 },
 {
  "input": "Or is it fundamentally that pair of real numbers which is just nicely visualized as an arrow on a flat plane?",
  "translatedText": "아니면 근본적으로 평면의 화살표로 멋지게 시각화된 실수 쌍인가요?",
  "model": "google_nmt",
  "from_community_srt": "근본은 평면에 있는 화살표인데 편의상 좌표계를 그린 것인가, 아니면 원래는 실수쌍인데 보기 쉽게 평면에 화살표로 표현한 것인가?",
  "n_reviews": 0,
  "start": 30.86,
  "end": 37.72
 },
 {
  "input": "Or are both of these just manifestations of something deeper?",
  "translatedText": "아니면 둘 다 더 깊은 무언가의 표현일까요?",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 38.48,
  "end": 41.36
 },
 {
  "input": "On the one hand, defining vectors as primarily being a list of numbers feels clear-cut and unambiguous.",
  "translatedText": "한편으로 벡터를 주로 숫자 목록으로 정의하는 것은 명확하고 모호하지 않게 느껴집니다.",
  "model": "google_nmt",
  "from_community_srt": "또는 둘 다 더 근본적인 무엇을 나타내는 도구일 뿐인가? 한편으로 벡터를 숫자의 배열로 정의하면 명백한거 같다.",
  "n_reviews": 0,
  "start": 42.3,
  "end": 48.48
 },
 {
  "input": "It makes things like four-dimensional vectors or 100-dimensional vectors sound like real, concrete ideas that you can actually work with.",
  "translatedText": "이는 4차원 벡터나 100차원 벡터 같은 것을 실제로 작업할 수 있는 실제적이고 구체적인 아이디어처럼 들리게 만듭니다.",
  "model": "google_nmt",
  "from_community_srt": "즉 4차원 벡터나 100차원 벡터도 실제로 존재해서 다룰 수 있는 개념처럼 보인다.",
  "n_reviews": 0,
  "start": 49.06,
  "end": 55.72
 },
 {
  "input": "When otherwise, an idea like four dimensions is just a vague geometric notion that's difficult to describe without waving your hands a bit.",
  "translatedText": "그렇지 않으면 4차원과 같은 아이디어는 손을 조금 흔들지 않고는 설명하기 어려운 모호한 기하학적 개념일 뿐입니다.",
  "model": "google_nmt",
  "from_community_srt": "다른 한편으로 4차원은 막연해서 기하학적 개념은 손을 막 휘저으며 설명해야 된다.",
  "n_reviews": 0,
  "start": 55.72,
  "end": 63.66
 },
 {
  "input": "But on the other hand, a common sensation for those who actually work with linear algebra, especially as you get more fluent with changing your basis, is that you're dealing with a space that exists independently from the coordinates that you give it, and that coordinates are actually somewhat arbitrary, depending on what you happen to choose as your basis vectors.",
  "translatedText": "그러나 반면에, 실제로 선형 대수학을 다루는 사람들, 특히 기저 변경에 더욱 능숙해지면, 여러분이 제공한 좌표와 독립적으로 존재하는 공간을 다루고 있다는 공통된 느낌이 듭니다. 해당 좌표는 기본 벡터로 무엇을 선택하느냐에 따라 실제로 다소 임의적입니다.",
  "model": "google_nmt",
  "from_community_srt": "반면 선형대수를 공부하는 사람들은 보통, 특히 기저벡터를 바꾸는데 능숙할수록, 주어진 좌표계랑 상관없이 공간을 다룬다. 게다가 좌표계는 기저벡터를 어떻게 정하냐에 따라 수시로 바뀐다.",
  "n_reviews": 0,
  "start": 65.54,
  "end": 83.68
 },
 {
  "input": "Core topics in linear algebra, like determinants and eigenvectors, seem indifferent to your choice of coordinate systems.",
  "translatedText": "행렬식 및 고유벡터와 같은 선형 대수학의 핵심 주제는 좌표계 선택과 무관해 보입니다.",
  "model": "google_nmt",
  "from_community_srt": "determinant나 고유벡터처럼 선형대수에서 중요한 주제는 좌표계를 어떻게 정하는지랑 상관이 없다.",
  "n_reviews": 0,
  "start": 84.48,
  "end": 90.64
 },
 {
  "input": "The determinant tells you how much a transformation scales areas, and eigenvectors are the ones that stay on their own span during a transformation.",
  "translatedText": "행렬식은 변환이 영역을 얼마나 확장하는지 알려주며, 고유벡터는 변환 중에 자체 범위를 유지하는 벡터입니다.",
  "model": "google_nmt",
  "from_community_srt": "determinant는 변환이 면적을 얼마나 스케일링하는지를 나타내며 고유벡터는 변환이 일어나도 span을 벗어나지 않는 벡터이다.",
  "n_reviews": 0,
  "start": 91.44,
  "end": 99.32
 },
 {
  "input": "But both of these properties are inherently spatial, and you can freely change your coordinate system without changing the underlying values of either one.",
  "translatedText": "그러나 이 두 속성은 본질적으로 공간적이므로 둘 중 하나의 기본 값을 변경하지 않고도 좌표계를 자유롭게 변경할 수 있습니다.",
  "model": "google_nmt",
  "from_community_srt": "하지만 이 둘은 공간의 성질이며 하나를 원래값으로 일정하게 유지한 채로  좌표계를 자유롭게 바꿀 수 있다.",
  "n_reviews": 0,
  "start": 100.0,
  "end": 108.34
 },
 {
  "input": "But if vectors are not fundamentally lists of real numbers, and if their underlying essence is something more spatial, that just begs the question of what mathematicians mean when they use a word like space or spatial.",
  "translatedText": "그러나 벡터가 근본적으로 실수의 목록이 아니고 그 기본 본질이 더 공간적인 것이라면 수학자들이 공간이나 공간과 같은 단어를 사용할 때 무엇을 의미하는지에 대한 의문이 생길 뿐입니다.",
  "model": "google_nmt",
  "from_community_srt": "만약 벡터가 실수의 배열이 아니고 공간적인 본질을 가지고 있는 것이라면 수학자들이 '공간'이라는 단어를 언제 쓰는지 궁금해할 것이다.",
  "n_reviews": 0,
  "start": 110.76,
  "end": 122.44
 },
 {
  "input": "To build up to where this is going, I'd actually like to spend the bulk of this video talking about something which is neither an arrow nor a list of numbers, but also has vector-ish qualities – functions.",
  "translatedText": "이것이 어디로 가는지 확인하기 위해 실제로 저는 이 비디오의 대부분을 화살표나 숫자 목록이 아닌 벡터적인 특성, 즉 기능에 대해 이야기하는 데 할애하고 싶습니다.",
  "model": "google_nmt",
  "from_community_srt": "'공간'이 무엇인지 자세히 설명하기 위해 이 영상에서는 화살표나 수의 배열이 아니라 벡터같은(vectorish) 값, 즉 '함수'에 많은 시간을 할애할 것이다.",
  "n_reviews": 0,
  "start": 123.4,
  "end": 133.1
 },
 {
  "input": "You see, there's a sense in which functions are actually just another type of vector.",
  "translatedText": "보시다시피, 함수는 실제로는 또 다른 유형의 벡터일 뿐이라는 의미가 있습니다.",
  "model": "google_nmt",
  "from_community_srt": "함수는 그냥 다른 종류의 벡터일 뿐이라는 말이다.",
  "n_reviews": 0,
  "start": 133.74,
  "end": 137.88
 },
 {
  "input": "In the same way that you can add two vectors together, there's also a sensible notion for adding two functions, f and g, to get a new function, f plus g.",
  "translatedText": "두 개의 벡터를 더할 수 있는 것과 같은 방식으로, 두 개의 함수 f와 g를 추가하여 새로운 함수 f + g를 얻는 합리적인 개념도 있습니다.",
  "model": "google_nmt",
  "from_community_srt": "두 벡터를 더하는 것과 같은 방법으로, 두 함수 f와 g를 더해서 새로운 함수 f+g를 구하는 합리적인 방법이 있다.",
  "n_reviews": 0,
  "start": 139.76,
  "end": 147.64
 },
 {
  "input": "It's one of those things where you kind of already know what it's going to be, but actually phrasing it is a mouthful.",
  "translatedText": "그것은 당신이 이미 그것이 무엇인지 알고 있지만 실제로 그것을 표현하는 것 중 하나입니다.",
  "model": "google_nmt",
  "from_community_srt": "이미 여러분이 알고 있는 방법이지만 실제로 설명하려면 좀 길다.",
  "n_reviews": 0,
  "start": 148.2,
  "end": 153.14
 },
 {
  "input": "The output of this new function at any given input, like negative four, is the sum of the same input, negative four.",
  "translatedText": "-4와 같이 주어진 입력에서 이 새로운 함수의 출력은 동일한 입력(-4)의 합입니다.",
  "model": "google_nmt",
  "from_community_srt": "-4처럼 어떤 값이 주어지면 새로운 함수의 함수값은 동일하게 주어진 값(-4)에서 계산한 f와 g의 함수값의 합이다 더 일반적으로,",
  "n_reviews": 0,
  "start": 153.96,
  "end": 164.52
 },
 {
  "input": "Or more generally, the value of the sum function at any given input x is the sum of the values f of x plus g of x.",
  "translatedText": "또는 더 일반적으로, 주어진 입력 x에서 sum 함수의 값은 x의 f 값과 x의 g 값의 합입니다.",
  "model": "google_nmt",
  "from_community_srt": "임의의 값 x에서 f+g의 함수값은 f(x)와 g(x)의 합이다.",
  "n_reviews": 0,
  "start": 165.42,
  "end": 173.74
 },
 {
  "input": "This is pretty similar to adding vectors coordinate by coordinate, it's just that there are, in a sense, infinitely many coordinates to deal with.",
  "translatedText": "이는 좌표별로 벡터 좌표를 추가하는 것과 매우 유사합니다. 어떤 의미에서는 처리해야 할 좌표가 무한히 많다는 것입니다.",
  "model": "google_nmt",
  "from_community_srt": "이건 벡터에서 같은 좌표계끼리 더하는것과 비슷한데, 함수에서는 무한히 많은 좌표계들을 더하는 셈이다.",
  "n_reviews": 0,
  "start": 180.7,
  "end": 188.5
 },
 {
  "input": "Similarly, there's a sensible notion for scaling a function by a real number, just scale all of the outputs by that number.",
  "translatedText": "마찬가지로 함수를 실수로 스케일링하는 합리적인 개념이 있습니다. 모든 출력을 해당 숫자로 스케일링하면 됩니다.",
  "model": "google_nmt",
  "from_community_srt": "비슷하게 함수를 실수배하는 합리적인 방법도 있다. 그냥 모든 함수값에 실수를 곱하는 것이다.",
  "n_reviews": 0,
  "start": 191.1,
  "end": 198.18
 },
 {
  "input": "And again, this is analogous to scaling a vector coordinate by coordinate, it just feels like there's infinitely many coordinates.",
  "translatedText": "그리고 다시 말하지만 이는 벡터 좌표를 좌표별로 크기 조정하는 것과 유사하며 좌표가 무한히 많은 것처럼 느껴집니다.",
  "model": "google_nmt",
  "from_community_srt": "마찬가지로 벡터에서 좌표계마다 실수배하는 것과 비슷한데 무한히 많은 좌표계에 실수배를 하는 셈이다.",
  "n_reviews": 0,
  "start": 200.24,
  "end": 206.22
 },
 {
  "input": "Now, given that the only thing vectors can really do is get added together or scaled, it feels like we should be able to take the same useful constructs and problem solving techniques of linear algebra that were originally thought about in the context of arrows and space and apply them to functions as well.",
  "translatedText": "이제 벡터가 실제로 할 수 있는 유일한 일은 서로 더하거나 크기를 조정하는 것뿐이므로 원래 화살표와 공간의 맥락에서 생각했던 선형 대수학의 유용한 구성과 문제 해결 기술을 동일하게 사용할 수 있어야 할 것 같습니다. 함수에도 적용해 보세요.",
  "model": "google_nmt",
  "from_community_srt": "벡터를 가지고 더하거나 실수배만 한다고 하면, 공간상의 화살표로부터 처음에 생각했던 선형대수의 구조와 문제풀이 방법을 함수에도 똑같이 적용할 수 있다.",
  "n_reviews": 0,
  "start": 208.9,
  "end": 225.54
 },
 {
  "input": "For example, there's a perfectly reasonable notion of a linear transformation for functions, something that takes in one function and turns it into another.",
  "translatedText": "예를 들어, 함수에 대한 선형 변환, 즉 한 함수를 가져와 다른 함수로 바꾸는 완벽하게 합리적인 개념이 있습니다.",
  "model": "google_nmt",
  "from_community_srt": "예를 들면, 한 함수를 매우 합리적으로 다른 함수로 바꿔주는 함수에 대한 선형 변환이 있다.",
  "n_reviews": 0,
  "start": 226.54,
  "end": 235.6
 },
 {
  "input": "One familiar example comes from calculus, the derivative.",
  "translatedText": "하나의 친숙한 예는 미적분학(미적분학)에서 나옵니다.",
  "model": "google_nmt",
  "from_community_srt": "미적분학에서 나오는 친숙한 예시가 바로 도함수이다.",
  "n_reviews": 0,
  "start": 239.82,
  "end": 242.78
 },
 {
  "input": "It's something which transforms one function into another function.",
  "translatedText": "한 기능을 다른 기능으로 변환하는 것입니다.",
  "model": "google_nmt",
  "from_community_srt": "이건 한 함수를 다른 함수로 바꾸는 변환이다.",
  "n_reviews": 0,
  "start": 243.42,
  "end": 247.14
 },
 {
  "input": "Sometimes in this context you'll hear these called operators instead of transformations, but the meaning is the same.",
  "translatedText": "때때로 이러한 맥락에서 변환 대신 연산자라고 불리는 것을 듣게 되지만 의미는 동일합니다.",
  "model": "google_nmt",
  "from_community_srt": "가끔씩 변환(transform)대신 연산(operator)라고 부르는걸 볼 수 있는데 의미는 똑같다.",
  "n_reviews": 0,
  "start": 248.72,
  "end": 253.98
 },
 {
  "input": "A natural question you might want to ask is what it means for a transformation of functions to be linear.",
  "translatedText": "당신이 묻고 싶은 자연스러운 질문은 함수 변환이 선형이라는 것이 무엇을 의미하는지입니다.",
  "model": "google_nmt",
  "from_community_srt": "여러분은 자연스럽게 함수의 변환이 '선형'인게 무슨 의미인지 궁금할 것이다.",
  "n_reviews": 0,
  "start": 256.24,
  "end": 261.54
 },
 {
  "input": "The formal definition of linearity is relatively abstract and symbolically driven compared to the way that I first talked about it in chapter 3 of this series.",
  "translatedText": "선형성의 형식적 정의는 내가 이 시리즈의 3장에서 처음 이야기한 방식에 비해 상대적으로 추상적이고 상징적으로 추진됩니다.",
  "model": "google_nmt",
  "from_community_srt": "선형성에 대한 수학적 정의는 이 시리즈의 3장에서 설명한 것에 비해 매우 추상적이고 상징적이지만 일반적이라서 벡터만이 아니라 함수에도 적용할 수 있다.",
  "n_reviews": 0,
  "start": 262.44,
  "end": 270.44
 },
 {
  "input": "But the reward of abstractness is that we'll get something general enough to apply to functions as well as arrows.",
  "translatedText": "그러나 추상화의 보상은 화살표뿐만 아니라 함수에도 적용할 수 있을 만큼 일반적인 것을 얻게 된다는 것입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 270.44,
  "end": 276.84
 },
 {
  "input": "A transformation is linear if it satisfies two properties, commonly called additivity and scaling.",
  "translatedText": "일반적으로 가산성과 스케일링이라고 하는 두 가지 속성을 충족하는 변환은 선형입니다.",
  "model": "google_nmt",
  "from_community_srt": "변환이 선형이라면 합과 실수배의 성질을 만족한다.",
  "n_reviews": 0,
  "start": 279.18,
  "end": 285.0
 },
 {
  "input": "Additivity means that if you add two vectors, v and w, then apply a transformation to their sum, you get the same result as if you added the transformed versions of v and w.",
  "translatedText": "가산성은 두 개의 벡터 v와 w를 더한 다음 그 합에 변환을 적용하면 v와 w의 변환된 버전을 추가한 것과 동일한 결과를 얻는다는 것을 의미합니다.",
  "model": "google_nmt",
  "from_community_srt": "합의 성질(Additivity)이란 두 벡터 v와 w를 더하고 그 결과를 변환한 것과 v와 w를 먼저 변환하고 더한 것이 같다는 것이다.",
  "n_reviews": 0,
  "start": 286.04,
  "end": 300.24
 },
 {
  "input": "The scaling property is that when you scale a vector v by some number, then apply the transformation, you get the same ultimate vector as if you scaled the transformed version of v by that same amount.",
  "translatedText": "스케일링 속성은 벡터 v를 특정 숫자만큼 스케일링한 다음 변환을 적용하면 v의 변환된 버전을 동일한 양만큼 스케일링한 것과 동일한 최종 벡터를 얻는다는 것입니다.",
  "model": "google_nmt",
  "from_community_srt": "실수배 성질(scaling property)이란 벡터 v를 실수배(c)하고 변환한 것과 v를 먼저 변환하고 실수배(c)한 것이 같다는 것이다.",
  "n_reviews": 0,
  "start": 304.52,
  "end": 318.92
 },
 {
  "input": "The way you'll often hear this described is that linear transformations preserve the operations of vector addition and scalar multiplication.",
  "translatedText": "이 설명을 자주 듣게 되는 방식은 선형 변환이 벡터 덧셈과 스칼라 곱셈의 연산을 보존한다는 것입니다.",
  "model": "google_nmt",
  "from_community_srt": "이런걸 \"선형변환이 합과 실수배를 보존한다\"고 한다.",
  "n_reviews": 0,
  "start": 321.7,
  "end": 329.1
 },
 {
  "input": "The idea of gridlines remaining parallel and evenly spaced that I've talked about in past videos is really just an illustration of what these two properties mean in the specific case of points in 2D space.",
  "translatedText": "이전 비디오에서 제가 이야기한 격자선이 평행하고 균일한 간격으로 유지된다는 아이디어는 실제로 2D 공간의 특정 점 사례에서 이 두 속성이 의미하는 바를 보여주는 예시일 뿐입니다.",
  "model": "google_nmt",
  "from_community_srt": "지난 영상에서 얘기했듯이 변환 후에도 격자가 평행하고 균등하게 유지되는건 2차원 평면 위의 점들이 바로 이 두 성질을 만족하기 때문이다.",
  "n_reviews": 0,
  "start": 332.2,
  "end": 344.0
 },
 {
  "input": "One of the most important consequences of these properties, which makes matrix vector multiplication possible, is that a linear transformation is completely described by where it takes the basis vectors.",
  "translatedText": "행렬 벡터 곱셈을 가능하게 하는 이러한 속성의 가장 중요한 결과 중 하나는 선형 변환이 기본 벡터를 취하는 위치에 따라 완전히 설명된다는 것입니다.",
  "model": "google_nmt",
  "from_community_srt": "또 이 성질은 행렬과 벡터의 곱을 가능하게 만들어서 기저벡터에 따라 선형변환을 완벽히 표현할 수 있게 한다.",
  "n_reviews": 0,
  "start": 344.88,
  "end": 356.0
 },
 {
  "input": "Since any vector can be expressed by scaling and adding the basis vectors in some way, finding the transformed version of a vector comes down to scaling and adding the transformed versions of the basis vectors in that same way.",
  "translatedText": "모든 벡터는 어떤 방식으로든 기저 벡터를 스케일링하고 추가하여 표현할 수 있으므로 벡터의 변환된 버전을 찾는 것은 동일한 방식으로 기저 벡터의 변환된 버전을 스케일링하고 추가하는 것으로 귀결됩니다.",
  "model": "google_nmt",
  "from_community_srt": "어떤 벡터든지 기저벡터의 실수배와 합으로 표현할 수 있기 때문에 벡터를 변환한 결과 역시 기저벡터를 변환한 것의 실수배와 합으로 표현할 수 있다.",
  "n_reviews": 0,
  "start": 357.72,
  "end": 370.44
 },
 {
  "input": "As you'll see in just a moment, this is as true for functions as it is for arrows.",
  "translatedText": "잠시 후에 보게 되겠지만 이는 화살표와 마찬가지로 함수에서도 마찬가지입니다.",
  "model": "google_nmt",
  "from_community_srt": "곧 보겠지만, 함수에서도 이 방법이 성립한다.",
  "n_reviews": 0,
  "start": 372.28,
  "end": 376.78
 },
 {
  "input": "For example, calculus students are always using the fact that the derivative is additive and has the scaling property, even if they haven't heard it phrased that way.",
  "translatedText": "예를 들어, 미적분학을 전공하는 학생들은 도함수가 덧셈적이며 스케일링 속성을 갖는다는 사실을 항상 사용하고 있습니다. 비록 그런 식으로 표현되는 것을 들어본 적이 없더라도 말이죠.",
  "model": "google_nmt",
  "from_community_srt": "예를 들어, 미적분학을 공부하는 학생들은 미분할 때 합과 실수배 성질을 자연스럽게 사용한다. 이런 설명은 들은적이 없어도 말이다.",
  "n_reviews": 0,
  "start": 378.36,
  "end": 386.82
 },
 {
  "input": "If you add two functions, then take the derivative, it's the same as first taking the derivative of each one separately, then adding the result.",
  "translatedText": "두 개의 함수를 추가한 다음 도함수를 취하는 경우, 먼저 각 함수의 도함수를 취한 다음 결과를 추가하는 것과 같습니다.",
  "model": "google_nmt",
  "from_community_srt": "두 함수를 더한 후, 미분한 것은 각각을 먼저 미분하고 그 다음에 더한것과 같다.",
  "n_reviews": 0,
  "start": 388.14,
  "end": 396.58
 },
 {
  "input": "Similarly, if you scale a function, then take the derivative, it's the same as first taking the derivative, then scaling the result.",
  "translatedText": "마찬가지로, 함수의 크기를 조정한 다음 도함수를 구하는 것은 먼저 도함수를 구한 다음 결과를 크기 조정하는 것과 같습니다.",
  "model": "google_nmt",
  "from_community_srt": "마찬가지로 함수를 실수배한 후, 미분한 것은 먼저 미분하고 실수배를 한 것과 같다.",
  "n_reviews": 0,
  "start": 400.14,
  "end": 406.88
 },
 {
  "input": "To really drill in the parallel, let's see what it might look like to describe the derivative with a matrix.",
  "translatedText": "병렬로 실제로 드릴링하기 위해 행렬을 사용하여 도함수를 설명하는 것이 어떤 모습인지 살펴보겠습니다.",
  "model": "google_nmt",
  "from_community_srt": "행렬과 함수가 진짜 비슷한지 보기 위해 미분을 행렬과 같이 기술해보자.",
  "n_reviews": 0,
  "start": 410.28,
  "end": 416.12
 },
 {
  "input": "This will be a little tricky, since function spaces have a tendency to be infinite dimensional, but I think this exercise is actually quite satisfying.",
  "translatedText": "기능 공간은 무한한 차원을 갖는 경향이 있기 때문에 이것은 약간 까다로울 수 있지만 실제로는 이 연습이 상당히 만족스럽다고 생각합니다.",
  "model": "google_nmt",
  "from_community_srt": "함수를 무한차원으로 쳐야 돼서 좀 어렵겠지만 그래도 꽤 할만할 것이다.",
  "n_reviews": 0,
  "start": 416.98,
  "end": 423.82
 },
 {
  "input": "Let's limit ourselves to polynomials, things like x squared plus 3x plus 5, or 4x to the seventh minus 5x squared.",
  "translatedText": "x 제곱 더하기 3x 더하기 5, 또는 4x 7 빼기 5x 제곱과 같은 다항식으로 제한해 봅시다.",
  "model": "google_nmt",
  "from_community_srt": "다항식들에 대해서만 보자.",
  "n_reviews": 0,
  "start": 424.84,
  "end": 431.86
 },
 {
  "input": "Each of the polynomials in our space will only have finitely many terms, but the full space is going to include polynomials with arbitrarily large degree.",
  "translatedText": "우리 공간의 각 다항식은 유한한 수의 항만 가지지만 전체 공간에는 임의의 큰 차수의 다항식이 포함됩니다.",
  "model": "google_nmt",
  "from_community_srt": "각각의 다항식들은 무한히 많은 항을 가질 순 없지만, 임의의 최고차항을 가질 수 있다.",
  "n_reviews": 0,
  "start": 432.33,
  "end": 441.0
 },
 {
  "input": "The first thing we need to do is give coordinates to this space, which requires choosing a basis.",
  "translatedText": "우리가 가장 먼저 해야 할 일은 이 공간에 좌표를 부여하는 것인데, 이를 위해서는 기초 선택이 필요합니다.",
  "model": "google_nmt",
  "from_community_srt": "먼저 이 공간에서 쓸 좌표계를 정해야 한다. 즉, 기저를 정해야 한다.",
  "n_reviews": 0,
  "start": 442.22,
  "end": 447.26
 },
 {
  "input": "Since polynomials are already written down as the sum of scaled powers of the variable x, it's pretty natural to just choose pure powers of x as the basis function.",
  "translatedText": "다항식은 이미 변수 x의 거듭제곱의 합으로 기록되어 있으므로 x의 순수 거듭제곱을 기본 함수로 선택하는 것이 매우 자연스럽습니다.",
  "model": "google_nmt",
  "from_community_srt": "다항식은 이미 변수 x의 거듭제곱의 합으로 써있어서 x의 거듭제곱들로 기저함수를 정하는건 자연스럽다.",
  "n_reviews": 0,
  "start": 448.18,
  "end": 457.68
 },
 {
  "input": "In other words, our first basis function will be the constant function, b0 of x equals 1.",
  "translatedText": "즉, 첫 번째 기본 함수는 x의 b0이 1인 상수 함수가 됩니다.",
  "model": "google_nmt",
  "from_community_srt": "다시 말해 첫 번째 기저함수는 상수함수인 1이고, 두 번째 기저함수는 x,",
  "n_reviews": 0,
  "start": 458.28,
  "end": 463.7
 },
 {
  "input": "The second basis function will be b1 of x equals x, then b2 of x equals x squared, then b3 of x equals x cubed, and so on.",
  "translatedText": "두 번째 기본 함수는 x의 b1이 x와 같고, b2의 x는 x 제곱과 같고, x의 b3은 x의 세제곱과 같습니다.",
  "model": "google_nmt",
  "from_community_srt": "그리고 x^2, x^3 등의 순서가 된다.",
  "n_reviews": 0,
  "start": 464.18,
  "end": 473.32
 },
 {
  "input": "The role that these basis functions serve will be similar to the roles of i-hat, j-hat, and k-hat in the world of vectors as arrows.",
  "translatedText": "이러한 기본 함수가 수행하는 역할은 화살표로서의 벡터 세계에서 i-hat, j-hat 및 k-hat의 역할과 유사합니다.",
  "model": "google_nmt",
  "from_community_srt": "이 기저함수의 역할은 벡터에서 i-hat, j-hat,",
  "n_reviews": 0,
  "start": 473.86,
  "end": 480.98
 },
 {
  "input": "Since our polynomials can have arbitrarily large degree, this set of basis functions is infinite.",
  "translatedText": "다항식은 임의로 큰 차수를 가질 수 있으므로 이 기본 함수 세트는 무한합니다.",
  "model": "google_nmt",
  "from_community_srt": "k-hat과 같다. 다항식이 임의의 최고차항을 가지기 때문에 기저함수는 무한히 많다.",
  "n_reviews": 0,
  "start": 482.12,
  "end": 487.48
 },
 {
  "input": "But that's okay, it just means that when we treat our polynomials as vectors, they're going to have infinitely many coordinates.",
  "translatedText": "하지만 괜찮습니다. 다항식을 벡터로 취급하면 무한히 많은 좌표를 갖게 된다는 뜻입니다.",
  "model": "google_nmt",
  "from_community_srt": "그래도 괜찮다. 그냥 다항식을 무한한 좌표를 가진 벡터로 생각하는 것일 뿐이다.",
  "n_reviews": 0,
  "start": 488.24,
  "end": 494.12
 },
 {
  "input": "A polynomial like x squared plus 3x plus 5, for example, would be described with the coordinates 5, 3, 1, then infinitely many zeros.",
  "translatedText": "예를 들어 x 제곱 더하기 3x 더하기 5와 같은 다항식은 좌표 5, 3, 1과 무한히 많은 0으로 설명됩니다.",
  "model": "google_nmt",
  "from_community_srt": "예를 들어, x^2+3x+5는 5, 3, 1과 무한히 많은 0을 좌표로 갖는다.",
  "n_reviews": 0,
  "start": 495.6,
  "end": 505.5
 },
 {
  "input": "You'd read this as saying that it's 5 times the first basis function, plus 3 times that second basis function, plus 1 times the third basis function, and then none of the other basis functions should be added from that point on.",
  "translatedText": "이것을 첫 번째 기저 함수의 5배, 두 번째 기저 함수의 3배, 세 번째 기저 함수의 1배를 더한 다음 그 시점부터 다른 기저 함수를 추가하면 안 된다는 의미로 읽힐 것입니다.",
  "model": "google_nmt",
  "from_community_srt": "여러분은 이걸 첫 기저함수에 5를 곱하고 두 번째 기저함수에 3을 곱하고 세 번째 기저함수에 1을 곱하고 다른 기저함수는 더하지 않는 것으로 보면 된다.",
  "n_reviews": 0,
  "start": 506.1,
  "end": 519.2
 },
 {
  "input": "The polynomial 4x to the seventh minus 5x squared would have the coordinates 0, 0, negative 5, 0, 0, 0, 0, 4, then an infinite string of zeros.",
  "translatedText": "4x에서 7번째 빼기 5x의 제곱의 다항식은 좌표 0, 0, 음수 5, 0, 0, 0, 0, 4를 가지며 무한한 0 문자열을 갖습니다.",
  "model": "google_nmt",
  "from_community_srt": "4x^7-5x^2의 좌표는 0, 0, -5, 0, 0, 0, 0, 4 그 뒤론 무한하게 0이다.",
  "n_reviews": 0,
  "start": 520.62,
  "end": 532.34
 },
 {
  "input": "In general, since every individual polynomial has only finitely many terms, its coordinates will be some finite string of numbers with an infinite tail of zeros.",
  "translatedText": "일반적으로 모든 개별 다항식에는 유한한 항만 있으므로 좌표는 끝이 0인 무한한 숫자의 유한한 문자열이 됩니다.",
  "model": "google_nmt",
  "from_community_srt": "일반적으로, 각 다항식은 유한히 많은 항을 갖고 있어서 그 좌표 역시 유한한 수의 수와 무한히 많은 0으로 이루어진다.",
  "n_reviews": 0,
  "start": 533.26,
  "end": 543.0
 },
 {
  "input": "In this coordinate system, the derivative is described with an infinite matrix that's mostly full of zeros, but which has the positive integers counting down on this offset diagonal.",
  "translatedText": "이 좌표계에서 도함수는 대부분 0으로 가득 차 있지만 이 오프셋 대각선에서 카운트다운되는 양의 정수를 갖는 무한 행렬로 설명됩니다.",
  "model": "google_nmt",
  "from_community_srt": "이런 좌표 시스템에서 미분은 대부분이 0이고 옆 대각선은 양수인 무한행렬로 표시할 수 있다.",
  "n_reviews": 0,
  "start": 546.9,
  "end": 557.6
 },
 {
  "input": "I'll talk about how you could find this matrix in just a moment, but the best way to get a feel for it is to just watch it in action.",
  "translatedText": "잠시 후에 이 행렬을 어떻게 찾을 수 있는지에 대해 이야기하겠습니다. 그러나 그것에 대한 느낌을 얻는 가장 좋은 방법은 그것이 실제로 작동하는 것을 지켜보는 것입니다.",
  "model": "google_nmt",
  "from_community_srt": "뒤에서 이 행렬을 구하는 방법을 알려줄 것이지만, 가장 좋은 방법은 직접 해보는 것이다.",
  "n_reviews": 0,
  "start": 558.4,
  "end": 564.36
 },
 {
  "input": "Take the coordinates representing the polynomial x cubed plus 5x squared plus 4x plus 5, then put those coordinates on the right of the matrix.",
  "translatedText": "다항식 x 세제곱 + 5x 제곱 + 4x + 5를 나타내는 좌표를 가져온 다음 그 좌표를 행렬 오른쪽에 놓습니다.",
  "model": "google_nmt",
  "from_community_srt": "x^3+5x^2+4x+5를 나타내는 좌표를 행렬 오른쪽에 쓴다.",
  "n_reviews": 0,
  "start": 564.97,
  "end": 574.94
 },
 {
  "input": "The only term that contributes to the first coordinate of the result is 1 times 4, which means the constant term in the result will be 4.",
  "translatedText": "결과의 첫 번째 좌표에 기여하는 유일한 항은 1 곱하기 4입니다. 이는 결과의 상수 항이 4임을 의미합니다.",
  "model": "google_nmt",
  "from_community_srt": "첫 번째 좌표에 영향을 주는 항은 1x4밖에 없다. 즉 상수항은 4가 된다.",
  "n_reviews": 0,
  "start": 580.41,
  "end": 588.38
 },
 {
  "input": "This corresponds to the fact that the derivative of 4x is the constant 4.",
  "translatedText": "이는 4x의 미분값이 상수 4라는 사실에 해당합니다.",
  "model": "google_nmt",
  "from_community_srt": "이는 4x를 미분해서 4가 나온것과 일치한다.",
  "n_reviews": 0,
  "start": 590.1,
  "end": 594.38
 },
 {
  "input": "The only term contributing to the second coordinate of the matrix vector product is 2 times 5, which means the coefficient in front of x in the derivative is 10.",
  "translatedText": "행렬 벡터 곱의 두 번째 좌표에 기여하는 유일한 항은 2 곱하기 5입니다. 이는 도함수에서 x 앞의 계수가 10임을 의미합니다.",
  "model": "google_nmt",
  "from_community_srt": "행렬과 벡터의 곱에서 두 번째 좌표는 2x5이다. 이는 미분결과 x의 계수가 10이라는 것을 말한다.",
  "n_reviews": 0,
  "start": 595.64,
  "end": 605.74
 },
 {
  "input": "That one corresponds to the derivative of 5x squared.",
  "translatedText": "그것은 5x 제곱의 미분에 해당합니다.",
  "model": "google_nmt",
  "from_community_srt": "역시 5x^2을 미분한 결과와 일치한다.",
  "n_reviews": 0,
  "start": 606.5,
  "end": 609.28
 },
 {
  "input": "Similarly, the third coordinate in the matrix vector product comes down to taking 3 times 1.",
  "translatedText": "마찬가지로 행렬 벡터 곱의 세 번째 좌표는 3 곱하기 1로 귀결됩니다.",
  "model": "google_nmt",
  "from_community_srt": "마찬가지로 행렬과 벡터의 곱에서 세 번째 항은 3x1이다.",
  "n_reviews": 0,
  "start": 610.78,
  "end": 616.08
 },
 {
  "input": "This one corresponds to the derivative of x cubed being 3x squared.",
  "translatedText": "이것은 x 세제곱이 3x 제곱이 되는 도함수에 해당합니다.",
  "model": "google_nmt",
  "from_community_srt": "x^3을 미분하면 3x^2이 되는 것과 일치한다.",
  "n_reviews": 0,
  "start": 617.66,
  "end": 621.74
 },
 {
  "input": "And after that, it'll be nothing but zeros.",
  "translatedText": "그 이후에는 0에 지나지 않을 것입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 623.08,
  "end": 625.02
 },
 {
  "input": "What makes this possible is that the derivative is linear.",
  "translatedText": "이를 가능하게 하는 것은 도함수가 선형이라는 것입니다.",
  "model": "google_nmt",
  "from_community_srt": "나머지는 다 0이다. 이게 가능한 것은 미분이 선형이기 때문이다.",
  "n_reviews": 0,
  "start": 626.88,
  "end": 629.8
 },
 {
  "input": "And for those of you who like to pause and ponder, you could construct this matrix by taking the derivative of each basis function and putting the coordinates of the results in each column.",
  "translatedText": "그리고 잠시 멈춰서 숙고하는 것을 좋아하는 분들을 위해 각 기본 함수의 도함수를 취하고 결과의 좌표를 각 열에 배치하여 이 행렬을 구성할 수 있습니다.",
  "model": "google_nmt",
  "from_community_srt": "만약 행렬을 구하고 싶다면 잠깐 멈추고 각 기저함수를 미분한 뒤 각 열에 집어넣으면 구할 수 있다.",
  "n_reviews": 0,
  "start": 631.64,
  "end": 641.5
 },
 {
  "input": "So, surprisingly, matrix vector multiplication and taking a derivative, which at first seem like completely different animals, are both just really members of the same family.",
  "translatedText": "따라서 놀랍게도 처음에는 완전히 다른 동물처럼 보이는 행렬 벡터 곱셈과 도함수를 취하는 것은 둘 다 실제로는 같은 계열의 구성원일 뿐입니다.",
  "model": "google_nmt",
  "from_community_srt": "그래서, 신기하게도 행렬-벡터 곱과 미분은 겉보기엔 완전 달라 보였지만 알고보면 같은 종류이다.",
  "n_reviews": 0,
  "start": 659.78,
  "end": 669.84
 },
 {
  "input": "In fact, most of the concepts I've talked about in this series with respect to vectors as arrows in space, things like the dot product or eigenvectors, have direct analogs in the world of functions, though sometimes they go by different names, things like inner product or eigenfunction.",
  "translatedText": "사실, 내적이나 고유벡터와 같은 공간의 화살표인 벡터와 관련하여 이 시리즈에서 제가 이야기한 대부분의 개념은 함수의 세계에서 직접적인 유사성을 가지지만 때로는 다른 이름으로 사용되기도 합니다. 내적이나 고유함수 같은 거죠.",
  "model": "google_nmt",
  "from_community_srt": "사실, 이 시리즈에서 벡터를 화살표로 보고 내적, 고유벡터같은 대부분의 개념은 함수에서도 사용되는 개념이다. 대신 내적 또는 고유함수처럼 좀 다른 이름을 사용한다.",
  "n_reviews": 0,
  "start": 671.22,
  "end": 686.54
 },
 {
  "input": "So back to the question of what is a vector.",
  "translatedText": "그럼 벡터가 무엇인지에 대한 질문으로 돌아가 보겠습니다.",
  "model": "google_nmt",
  "from_community_srt": "이제 다시 '벡터란 무엇인가'로 되돌아가보자.",
  "n_reviews": 0,
  "start": 688.4,
  "end": 690.88
 },
 {
  "input": "The point I want to make here is that there are lots of vectorish things in math.",
  "translatedText": "제가 여기서 말하고 싶은 점은 수학에는 벡터적인 것들이 많이 있다는 것입니다.",
  "model": "google_nmt",
  "from_community_srt": "수학에는 '벡터같은' 개념들이 매우 많다.",
  "n_reviews": 0,
  "start": 691.56,
  "end": 695.84
 },
 {
  "input": "As long as you're dealing with a set of objects where there's a reasonable notion of scaling and adding, whether that's a set of arrows in space, lists of numbers, functions, or whatever other crazy thing you choose to define, all of the tools developed in linear algebra regarding vectors, linear transformations and all that stuff, should be able to apply.",
  "translatedText": "공간의 화살표 세트, 숫자 목록, 함수 또는 정의하기로 선택한 기타 이상한 것 등 크기 조정 및 추가에 대한 합리적인 개념이 있는 개체 세트를 다루는 한, 모든 벡터, 선형 변환 및 기타 모든 것에 관해 선형 대수학에서 개발된 도구를 적용할 수 있어야 합니다.",
  "model": "google_nmt",
  "from_community_srt": "화살표의 집합이든, 숫자의 배열이든, 함수든, 아니면 정의한게 뭐든지간에 합리적인 방법으로 실수배와 덧셈을 하면 선형대수학에서 개발한 벡터, 선형변환 등의 개념을 사용할 수 있다.",
  "n_reviews": 0,
  "start": 695.84,
  "end": 715.62
 },
 {
  "input": "Take a moment to imagine yourself right now as a mathematician developing the theory of linear algebra.",
  "translatedText": "잠시 시간을 내어 선형 대수학 이론을 개발하는 수학자로서 지금 자신을 상상해 보십시오.",
  "model": "google_nmt",
  "from_community_srt": "자신을 선형대수를 개발하는 수학자라고 생각해보자.",
  "n_reviews": 0,
  "start": 717.48,
  "end": 722.44
 },
 {
  "input": "You want all of the definitions and discoveries of your work to apply to all of the vectorish things in full generality, not just to one specific case.",
  "translatedText": "당신은 당신의 작업에 대한 모든 정의와 발견이 하나의 특정 사례에만 적용되는 것이 아니라 완전히 일반화된 모든 벡터적 항목에 적용되기를 원합니다.",
  "model": "google_nmt",
  "from_community_srt": "당신의 연구는 특별한 곳에만 성립하는게 아니라 벡터와 비슷한 모든 것에 적용할 수 있는 일반적인 것이길 바랄 것이다.",
  "n_reviews": 0,
  "start": 722.44,
  "end": 731.3
 },
 {
  "input": "These sets of vectorish things, like arrows or lists of numbers or functions, are called vector spaces.",
  "translatedText": "화살표, 숫자 또는 함수 목록과 같은 벡터적인 집합을 벡터 공간이라고 합니다.",
  "model": "google_nmt",
  "from_community_srt": "화살표, 숫자배열, 함수같이 벡터와 비슷한 것들의 집합을 벡터공간(vector spaces)이라고 한다.",
  "n_reviews": 0,
  "start": 733.4,
  "end": 739.72
 },
 {
  "input": "And what you as the mathematician might want to do is say, hey everyone, I don't want to have to think about all the different types of crazy vector spaces that you all might come up with.",
  "translatedText": "그리고 수학자로서 당신이 하고 싶은 말은 '안녕하세요 여러분. 저는 여러분이 생각해 낼 수 있는 모든 종류의 말도 안되는 벡터 공간에 대해 생각하고 싶지 않습니다'라고 말하는 것입니다.",
  "model": "google_nmt",
  "from_community_srt": "당신이 수학자라면 이렇게 말하고 싶을 것이다.",
  "n_reviews": 0,
  "start": 740.58,
  "end": 749.26
 },
 {
  "input": "So what you do is establish a list of rules that vector addition and scaling have to abide by.",
  "translatedText": "따라서 당신이 해야 할 일은 벡터 추가 및 스케일링이 준수해야 하는 규칙 목록을 설정하는 것입니다.",
  "model": "google_nmt",
  "from_community_srt": "\"전 당신들이 다루는 벡터공간의 모든 종류에 대해 생각하고 싶지 않아요!\" 그래서 벡터 합과 실수배에서 파생된 규칙을 정립해야 한다.",
  "n_reviews": 0,
  "start": 749.26,
  "end": 755.26
 },
 {
  "input": "These rules are called axioms, and in the modern theory of linear algebra, there are eight axioms that any vector space must satisfy if all of the theory and constructs that we've discovered are going to apply.",
  "translatedText": "이러한 규칙을 공리라고 하며, 현대 선형 대수학 이론에는 우리가 발견한 모든 이론과 구성이 적용되려면 모든 벡터 공간이 충족해야 하는 8개의 공리가 있습니다.",
  "model": "google_nmt",
  "from_community_srt": "이 규칙을 공리라고 부른다. 그리고 현대 선형대수 이론에서는 어떤 벡터공간이든 발견한 이론을 사용할 때 항상 성립하는 8개의 공리가 있다.",
  "n_reviews": 0,
  "start": 756.4,
  "end": 767.04
 },
 {
  "input": "I'll leave them on the screen here for anyone who wants to pause and ponder, but basically it's just a checklist to make sure that the notions of vector addition and scalar multiplication do the things that you'd expect them to do.",
  "translatedText": "잠시 멈추고 숙고하고 싶은 분들을 위해 화면에 남겨 두겠습니다. 그러나 기본적으로 이것은 벡터 덧셈과 스칼라 곱셈의 개념이 여러분이 기대하는 대로 작동하는지 확인하기 위한 체크리스트일 뿐입니다.",
  "model": "google_nmt",
  "from_community_srt": "잠깐 멈추고 볼 사람을 위해 스크린에 띄워놓겠다. 하지만 이건 그냥 벡터 합과 실수배의 개념에서 나온 체크리스트에 불과하다.",
  "n_reviews": 0,
  "start": 767.7,
  "end": 778.14
 },
 {
  "input": "These axioms are not so much fundamental rules of nature as they are an interface between you, the mathematician, discovering results, and other people who might want to apply those results to new sorts of vector spaces.",
  "translatedText": "이러한 공리는 자연의 기본 규칙이라기보다는 수학자, 결과 발견, 그리고 그 결과를 새로운 종류의 벡터 공간에 적용하려는 다른 사람들 사이의 인터페이스입니다.",
  "model": "google_nmt",
  "from_community_srt": "이 공리들은 자연의 기본 법칙이라기보다 당신처럼 이론을 발견한 수학자와 새로운 벡터공간에 그 이론을 적용하고 싶은 사람을 연결해주는 다리이다.",
  "n_reviews": 0,
  "start": 778.72,
  "end": 790.48
 },
 {
  "input": "If, for example, someone defines some crazy type of vector space, like the set of all pi creatures with some definition of adding and scaling pi creatures, these axioms are like a checklist of things that they need to verify about their definitions before they can start applying the results of linear algebra.",
  "translatedText": "예를 들어, 누군가가 파이 생물을 추가하고 크기를 조정하는 정의가 있는 모든 파이 생물의 집합과 같은 미친 유형의 벡터 공간을 정의하는 경우 이러한 공리는 정의를 확인하기 전에 확인해야 하는 사항에 대한 체크리스트와 같습니다. 선형 대수학 결과를 적용하기 시작합니다.",
  "model": "google_nmt",
  "from_community_srt": "만약 어떤 사람이 파이(pi)생물로 이루어진 괴상한 벡터 공간과 파이 생물의 합과 실수배를 정의하면 이 공리들은 선형대수의 결과를 사용하기 전에 그들의 정의를 검증해볼 때 사용하는 일종의 체크리스트이다.",
  "n_reviews": 0,
  "start": 791.42,
  "end": 808.14
 },
 {
  "input": "And you, as the mathematician, never have to think about all the possible crazy vector spaces people might define.",
  "translatedText": "그리고 수학자로서 당신은 사람들이 정의할 수 있는 모든 가능한 미친 벡터 공간에 대해 생각할 필요가 없습니다.",
  "model": "google_nmt",
  "from_community_srt": "그리고 수학자로서 당신은 사람들이 정의한 모든 괴상한 벡터공간에 대해 생각할 필요가 없고 대신 그 결과가 공리들을 만족하는지 비교하면 된다.",
  "n_reviews": 0,
  "start": 808.82,
  "end": 814.34
 },
 {
  "input": "You just have to prove your results in terms of these axioms so anyone whose definitions satisfy those axioms can happily apply your results, even if you never thought about their situation.",
  "translatedText": "이러한 공리 측면에서 결과를 증명하면 해당 공리를 충족하는 정의를 가진 사람이 자신의 상황에 대해 전혀 생각해 본 적이 없더라도 행복하게 결과를 적용할 수 있습니다.",
  "model": "google_nmt",
  "from_community_srt": "그래서 정의가 이 공리를 만족한다면 다른건 고려하지 않고도 선형대수의 결론을 적용할 수 있다.",
  "n_reviews": 0,
  "start": 814.86,
  "end": 825.24
 },
 {
  "input": "As a consequence, you'd tend to phrase all of your results pretty abstractly, which is to say, only in terms of these axioms, rather than centering on a specific type of vector, like arrows in space or functions.",
  "translatedText": "결과적으로 모든 결과를 매우 추상적으로 표현하는 경향이 있습니다. 즉, 공간의 화살표나 함수와 같은 특정 유형의 벡터를 중심으로 하기보다는 이러한 공리의 관점에서만 표현하는 경향이 있습니다.",
  "model": "google_nmt",
  "from_community_srt": "결과적으로 모든 결론을 상당히 추상적으로 표현하는 것이다. 다시말해, 결론을 공리들의 관점에서만 보는 것이다. 공간에 있는 화살표나 함수처럼 구체적인 종류의 벡터로 표현하는 것이 아니란 것이다.",
  "n_reviews": 0,
  "start": 826.52,
  "end": 838.28
 },
 {
  "input": "For example, this is why just about every textbook you'll find will define linear transformations in terms of additivity and scaling, rather than talking about gridlines remaining parallel and evenly spaced.",
  "translatedText": "예를 들어, 이것이 바로 여러분이 찾을 거의 모든 교과서가 평행하고 균일한 간격을 유지하는 격자선에 대해 이야기하는 대신 가산성과 크기 조정 측면에서 선형 변환을 정의하는 이유입니다.",
  "model": "google_nmt",
  "from_community_srt": "이것이 바로 모든 책에서 선형변환을 '격자가 평행하고 균등하게 변하는 것' 대신 합과 실수배로 정의하고 있는 이유이다.",
  "n_reviews": 0,
  "start": 841.86,
  "end": 853.26
 },
 {
  "input": "Even though the latter is more intuitive, and at least in my view, more helpful for first-time learners, even if it is specific to one situation.",
  "translatedText": "비록 후자가 더 직관적이고 적어도 내 생각에는 비록 한 가지 상황에 국한된 것이라 하더라도 처음 학습자에게 더 도움이 되기는 하지만요.",
  "model": "google_nmt",
  "from_community_srt": "심지어 특정 상황에서는 격자를 이용해서 정의하는 것이 초심자에게는 더 직관적으로 보일지라도 말이다.",
  "n_reviews": 0,
  "start": 853.26,
  "end": 861.26
 },
 {
  "input": "So the mathematician's answer to what are vectors is to just ignore the question.",
  "translatedText": "따라서 벡터가 무엇인지에 대한 수학자의 대답은 그 질문을 무시하는 것입니다.",
  "model": "google_nmt",
  "from_community_srt": "그래서 \"벡터란 무엇인가?\"에 대한 수학자의 답은 그 질문을 무시하는 것이다.",
  "n_reviews": 0,
  "start": 862.62,
  "end": 866.92
 },
 {
  "input": "In the modern theory, the form that vectors take doesn't really matter.",
  "translatedText": "현대 이론에서는 벡터가 취하는 형태는 실제로 중요하지 않습니다.",
  "model": "google_nmt",
  "from_community_srt": "현대에서는 벡터의 형태를 신경쓰지 않는다.",
  "n_reviews": 0,
  "start": 867.5,
  "end": 871.26
 },
 {
  "input": "Arrows, lists of numbers, functions, pi creatures, really, it can be anything, so long as there's some notion of adding and scaling vectors that follows these rules.",
  "translatedText": "화살표, 숫자 목록, 함수, 파이 생물 등 실제로 이러한 규칙을 따르는 벡터를 추가하고 크기 조정하는 개념이 있는 한 무엇이든 될 수 있습니다.",
  "model": "google_nmt",
  "from_community_srt": "화살표, 숫자의 배열, 함수, 파이 생물체 등 합과 실수배가 공리를 만족하게 정의되어 있으면 무엇이든 벡터가 될 수 있다.",
  "n_reviews": 0,
  "start": 871.86,
  "end": 881.22
 },
 {
  "input": "It's like asking what the number 3 really is.",
  "translatedText": "그것은 숫자 3이 실제로 무엇인지 묻는 것과 같습니다.",
  "model": "google_nmt",
  "from_community_srt": "이건 마치 숫자 3이 무엇인지 물어보는 것과 같다.",
  "n_reviews": 0,
  "start": 881.86,
  "end": 884.88
 },
 {
  "input": "Whenever it comes up concretely, it's in the context of some triplet of things, but in math, it's treated as an abstraction for all possible triplets of things, and lets you reason about all possible triplets using a single idea.",
  "translatedText": "구체적으로 나올 때마다 어떤 삼중항의 맥락에 있지만 수학에서는 가능한 모든 삼중항에 대한 추상화로 취급되며 하나의 아이디어를 사용하여 가능한 모든 삼중항에 대해 추론할 수 있습니다.",
  "model": "google_nmt",
  "from_community_srt": "3이 무엇인지 물어볼 때 그 맥락에서 대상의 3배를 말한다. 하지만 수학에서는 모든 '3배'들을 추상화시킨 개념이고 한 가지 개념으로 모든 '3배'들을 생각할 수 있게 만든다.",
  "n_reviews": 0,
  "start": 885.38,
  "end": 898.08
 },
 {
  "input": "Same goes with vectors, which have many embodiments, but math abstracts them all into a single, intangible notion of a vector space.",
  "translatedText": "많은 구현이 있는 벡터의 경우에도 마찬가지이지만 수학은 이러한 모든 것을 하나의 무형의 벡터 공간 개념으로 추상화합니다.",
  "model": "google_nmt",
  "from_community_srt": "벡터도 수많은 구체물들이 있지만 수학에서는 그 모든 것을 한 가지의 개념로 벡터 공간 속에 추상화시킨다.",
  "n_reviews": 0,
  "start": 899.12,
  "end": 907.0
 },
 {
  "input": "But, as anyone watching this series knows, I think it's better to begin reasoning about vectors in a concrete, visualizable setting, like 2D space, with arrows rooted at the origin.",
  "translatedText": "하지만 이 시리즈를 보는 사람이라면 누구나 알고 있듯이 원점에 화살표가 있는 2D 공간과 같이 구체적이고 시각화 가능한 환경에서 벡터에 대한 추론을 시작하는 것이 더 낫다고 생각합니다.",
  "model": "google_nmt",
  "from_community_srt": "이 시리즈를 본 사람이면 다 알겠지만 난 벡터를 처음 다룰 때는 평면 속 화살표처럼 구체적으로 시각적인 것이 좋다고 생각한다.",
  "n_reviews": 0,
  "start": 908.86,
  "end": 918.9
 },
 {
  "input": "But as you learn more linear algebra, know that these tools apply much more generally, and that this is the underlying reason why textbooks and lectures tend to be phrased, well, abstractly.",
  "translatedText": "그러나 선형 대수학을 더 많이 배울수록 이러한 도구가 훨씬 더 일반적으로 적용되며 이것이 교과서와 강의가 추상적으로 표현되는 경향이 있는 근본적인 이유라는 것을 알아야 합니다.",
  "model": "google_nmt",
  "from_community_srt": "하지만 선형대수학을 더 배울수록 선형대수학은 더 광범위하게 적용할 수 있는 것이며 이것이 책과 강의에서 추상적인 글로 설명하는 이유임을 알게 된다.",
  "n_reviews": 0,
  "start": 919.66,
  "end": 930.09
 },
 {
  "input": "So with that, folks, I think I'll call it an in to this essence of linear algebra series.",
  "translatedText": "그래서 여러분, 저는 이것을 선형 대수 시리즈의 본질로 부를 것이라고 생각합니다.",
  "model": "google_nmt",
  "from_community_srt": "이렇게 해서, 선형대수 시리즈의 핵심을 마치고자 한다.",
  "n_reviews": 0,
  "start": 931.94,
  "end": 936.14
 },
 {
  "input": "If you've watched and understood the videos, I really do believe that you have a solid foundation in the underlying intuitions of linear algebra.",
  "translatedText": "만약 여러분이 비디오를 시청하고 이해했다면, 저는 여러분이 선형 대수학의 기본 직관에 대한 탄탄한 기초를 가지고 있다고 믿습니다.",
  "model": "google_nmt",
  "from_community_srt": "여러분이 선형대수의 기초에 견고한 직관적 이해가 생겼길 바란다.",
  "n_reviews": 0,
  "start": 936.14,
  "end": 943.8
 },
 {
  "input": "This is not the same thing as learning the full topic, of course, that's something that can only really come from working through problems, but the learning you do moving forward could be substantially more efficient if you have all the right intuitions in place.",
  "translatedText": "물론 이것은 전체 주제를 배우는 것과 같은 것은 아닙니다. 이는 실제로 문제를 해결함으로써만 얻을 수 있는 것이지만, 앞으로 진행하는 학습은 모든 올바른 직관을 갖추고 있다면 훨씬 더 효율적일 수 있습니다.",
  "model": "google_nmt",
  "from_community_srt": "당연히 모든 주제를 다룬 것은 아니며, 수많은 문제를 풀어봐야 한다. 하지만 이 직관들을 활용하면 앞으로 더 효율적으로 학습할 것이다.",
  "n_reviews": 0,
  "start": 944.64,
  "end": 956.02
 },
 {
  "input": "So, have fun applying those intuitions, and best of luck with your future learning.",
  "translatedText": "따라서 이러한 직관을 재미있게 적용하고 미래의 학습에 행운이 있기를 바랍니다.",
  "model": "google_nmt",
  "from_community_srt": "그럼 직관을 잘 활용하길 바라며 건투를 빈다.",
  "n_reviews": 0,
  "start": 956.66,
  "end": 960.0
 }
]