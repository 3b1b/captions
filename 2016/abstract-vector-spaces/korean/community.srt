1
00:00:17,120 --> 00:00:22,160
이 시리즈에서 가장 처음에 했던 질문으로 되돌아가보자.

2
00:00:22,160 --> 00:00:23,840
벡터란 무엇인가?

3
00:00:24,480 --> 00:00:26,360
예를 들어 2차원 벡터란

4
00:00:26,360 --> 00:00:30,460
근본은 평면에 있는 화살표인데
편의상 좌표계를 그린 것인가,

5
00:00:31,640 --> 00:00:37,860
아니면 원래는 실수쌍인데
보기 쉽게 평면에 화살표로 표현한 것인가?

6
00:00:38,760 --> 00:00:40,920
또는 둘 다 더 근본적인 무엇을 나타내는 도구일 뿐인가?

7
00:00:42,860 --> 00:00:48,500
한편으로 벡터를 숫자의 배열로 정의하면 명백한거 같다.

8
00:00:48,900 --> 00:00:52,040
즉 4차원 벡터나 100차원 벡터도

9
00:00:52,420 --> 00:00:55,720
실제로 존재해서 다룰 수 있는 개념처럼 보인다.

10
00:00:56,320 --> 00:00:59,760
다른 한편으로 4차원은 막연해서

11
00:00:59,760 --> 00:01:03,480
기하학적 개념은 손을 막 휘저으며 설명해야 된다.

12
00:01:05,640 --> 00:01:10,240
반면 선형대수를 공부하는 사람들은 보통,

13
00:01:10,340 --> 00:01:12,820
특히 기저벡터를 바꾸는데 능숙할수록,

14
00:01:12,820 --> 00:01:18,060
주어진 좌표계랑 상관없이 공간을 다룬다.

15
00:01:18,440 --> 00:01:23,760
게다가 좌표계는 기저벡터를 어떻게 정하냐에 따라 수시로 바뀐다.

16
00:01:24,560 --> 00:01:27,980
determinant나 고유벡터처럼
선형대수에서 중요한 주제는

17
00:01:27,980 --> 00:01:30,960
좌표계를 어떻게 정하는지랑 상관이 없다.

18
00:01:31,420 --> 00:01:35,060
determinant는
변환이 면적을 얼마나 스케일링하는지를 나타내며

19
00:01:35,680 --> 00:01:39,660
고유벡터는
변환이 일어나도 span을 벗어나지 않는 벡터이다.

20
00:01:40,080 --> 00:01:42,760
하지만 이 둘은 공간의 성질이며

21
00:01:42,760 --> 00:01:48,460
하나를 원래값으로 일정하게 유지한 채로
 좌표계를 자유롭게 바꿀 수 있다.

22
00:01:50,940 --> 00:01:54,400
만약 벡터가 실수의 배열이 아니고

23
00:01:54,400 --> 00:01:57,360
공간적인 본질을 가지고 있는 것이라면

24
00:01:57,400 --> 00:02:02,700
수학자들이 '공간'이라는 단어를 언제 쓰는지 궁금해할 것이다.

25
00:02:03,360 --> 00:02:06,580
'공간'이 무엇인지 자세히 설명하기 위해

26
00:02:06,600 --> 00:02:10,140
이 영상에서는 화살표나 수의 배열이 아니라

27
00:02:10,140 --> 00:02:12,220
벡터같은(vectorish) 값, 즉 '함수'에

28
00:02:12,220 --> 00:02:14,000
많은 시간을 할애할 것이다.

29
00:02:14,040 --> 00:02:18,220
함수는 그냥 다른 종류의 벡터일 뿐이라는 말이다.

30
00:02:19,640 --> 00:02:22,360
두 벡터를 더하는 것과 같은 방법으로,

31
00:02:22,360 --> 00:02:25,760
두 함수 f와 g를 더해서 새로운 함수 f+g를 구하는

32
00:02:25,760 --> 00:02:27,760
합리적인 방법이 있다.

33
00:02:28,340 --> 00:02:30,340
이미 여러분이 알고 있는 방법이지만

34
00:02:30,340 --> 00:02:33,300
실제로 설명하려면 좀 길다.

35
00:02:34,200 --> 00:02:38,320
-4처럼 어떤 값이 주어지면
새로운 함수의 함수값은

36
00:02:38,420 --> 00:02:41,240
동일하게 주어진 값(-4)에서 계산한

37
00:02:41,240 --> 00:02:44,660
f와 g의 함수값의 합이다

38
00:02:45,380 --> 00:02:49,840
더 일반적으로, 임의의 값 x에서 f+g의 함수값은

39
00:02:49,840 --> 00:02:53,640
f(x)와 g(x)의 합이다.

40
00:03:00,980 --> 00:03:04,140
이건 벡터에서 같은 좌표계끼리 더하는것과 비슷한데,

41
00:03:04,140 --> 00:03:08,300
함수에서는 무한히 많은 좌표계들을 더하는 셈이다.

42
00:03:11,200 --> 00:03:15,280
비슷하게 함수를 실수배하는 합리적인 방법도 있다.

43
00:03:15,280 --> 00:03:18,400
그냥 모든 함수값에 실수를 곱하는 것이다.

44
00:03:20,200 --> 00:03:23,700
마찬가지로 
벡터에서 좌표계마다 실수배하는 것과 비슷한데

45
00:03:23,780 --> 00:03:26,580
무한히 많은 좌표계에 실수배를 하는 셈이다.

46
00:03:29,120 --> 00:03:33,960
벡터를 가지고 더하거나 실수배만 한다고 하면,

47
00:03:33,960 --> 00:03:39,580
공간상의 화살표로부터 처음에 생각했던

48
00:03:39,580 --> 00:03:43,440
선형대수의 구조와 문제풀이 방법을

49
00:03:43,440 --> 00:03:45,960
함수에도 똑같이 적용할 수 있다.

50
00:03:46,480 --> 00:03:52,180
예를 들면,
한 함수를 매우 합리적으로 다른 함수로 바꿔주는

51
00:03:52,420 --> 00:03:55,980
함수에 대한 선형 변환이 있다.

52
00:03:59,740 --> 00:04:02,000
미적분학에서 나오는 친숙한 예시가 바로

53
00:04:02,160 --> 00:04:03,520
도함수이다.

54
00:04:03,580 --> 00:04:07,260
이건 한 함수를 다른 함수로 바꾸는 변환이다.

55
00:04:08,740 --> 00:04:12,660
가끔씩 변환(transform)대신
연산(operator)라고 부르는걸 볼 수 있는데

56
00:04:12,660 --> 00:04:14,660
의미는 똑같다.

57
00:04:16,260 --> 00:04:21,720
여러분은 자연스럽게 
함수의 변환이 '선형'인게 무슨 의미인지 궁금할 것이다.

58
00:04:22,300 --> 00:04:25,940
선형성에 대한 수학적 정의는

59
00:04:25,940 --> 00:04:27,940
이 시리즈의 3장에서 설명한 것에 비해

60
00:04:27,940 --> 00:04:30,620
매우 추상적이고 상징적이지만

61
00:04:30,620 --> 00:04:37,100
일반적이라서 벡터만이 아니라 함수에도 적용할 수 있다.

62
00:04:38,980 --> 00:04:42,420
변환이 선형이라면

63
00:04:42,660 --> 00:04:45,280
합과 실수배의 성질을 만족한다.

64
00:04:46,000 --> 00:04:49,520
합의 성질(Additivity)이란

65
00:04:49,680 --> 00:04:52,960
두 벡터 v와 w를 더하고 그 결과를 변환한 것과

66
00:04:55,360 --> 00:05:00,460
v와 w를 먼저 변환하고 더한 것이 같다는 것이다.

67
00:05:04,860 --> 00:05:06,020
실수배 성질(scaling property)이란

68
00:05:06,020 --> 00:05:08,900
벡터 v를 실수배(c)하고

69
00:05:09,900 --> 00:05:13,140
변환한 것과

70
00:05:13,320 --> 00:05:19,220
v를 먼저 변환하고 실수배(c)한 것이 같다는 것이다.

71
00:05:21,940 --> 00:05:31,720
이런걸 "선형변환이 합과 실수배를 보존한다"고 한다.

72
00:05:32,460 --> 00:05:36,600
지난 영상에서 얘기했듯이

73
00:05:36,600 --> 00:05:41,040
변환 후에도 격자가 평행하고 균등하게 유지되는건

74
00:05:41,060 --> 00:05:44,560
2차원 평면 위의 점들이
바로 이 두 성질을 만족하기 때문이다.

75
00:05:45,260 --> 00:05:50,280
또 이 성질은 행렬과 벡터의 곱을 가능하게 만들어서

76
00:05:50,460 --> 00:05:56,860
기저벡터에 따라
선형변환을 완벽히 표현할 수 있게 한다.

77
00:05:57,800 --> 00:05:59,940
어떤 벡터든지

78
00:06:00,160 --> 00:06:02,160
기저벡터의 실수배와 합으로 표현할 수 있기 때문에

79
00:06:02,220 --> 00:06:04,740
벡터를 변환한 결과 역시

80
00:06:04,780 --> 00:06:07,840
기저벡터를 변환한 것의

81
00:06:07,840 --> 00:06:11,820
실수배와 합으로 표현할 수 있다.

82
00:06:12,600 --> 00:06:18,480
곧 보겠지만, 함수에서도 이 방법이 성립한다.

83
00:06:18,480 --> 00:06:21,160
예를 들어, 미적분학을 공부하는 학생들은

84
00:06:21,220 --> 00:06:24,580
미분할 때 합과 실수배 성질을 자연스럽게 사용한다.

85
00:06:24,620 --> 00:06:28,180
이런 설명은 들은적이 없어도 말이다.

86
00:06:28,180 --> 00:06:31,300
두 함수를 더한 후, 미분한 것은

87
00:06:31,340 --> 00:06:35,340
각각을 먼저 미분하고

88
00:06:35,340 --> 00:06:38,660
그 다음에 더한것과 같다.

89
00:06:40,200 --> 00:06:43,380
마찬가지로 함수를 실수배한 후, 미분한 것은

90
00:06:43,380 --> 00:06:50,180
먼저 미분하고 실수배를 한 것과 같다.

91
00:06:50,760 --> 00:06:52,280
행렬과 함수가 진짜 비슷한지 보기 위해

92
00:06:52,280 --> 00:06:56,760
미분을 행렬과 같이 기술해보자.

93
00:06:56,760 --> 00:07:01,480
함수를 무한차원으로 쳐야 돼서 좀 어렵겠지만

94
00:07:01,490 --> 00:07:04,979
그래도 꽤 할만할 것이다.

95
00:07:04,979 --> 00:07:12,580
다항식들에 대해서만 보자.

96
00:07:12,580 --> 00:07:16,900
각각의 다항식들은 무한히 많은 항을 가질 순 없지만,

97
00:07:16,900 --> 00:07:22,319
임의의 최고차항을 가질 수 있다.

98
00:07:22,320 --> 00:07:25,380
먼저 이 공간에서 쓸 좌표계를 정해야 한다.

99
00:07:25,380 --> 00:07:27,380
즉, 기저를 정해야 한다.

100
00:07:28,340 --> 00:07:33,400
다항식은 이미 변수 x의 거듭제곱의 합으로 써있어서

101
00:07:33,580 --> 00:07:37,720
x의 거듭제곱들로 기저함수를 정하는건 자연스럽다.

102
00:07:38,000 --> 00:07:44,420
다시 말해 첫 번째 기저함수는 상수함수인 1이고,

103
00:07:44,420 --> 00:07:47,600
두 번째 기저함수는 x,

104
00:07:47,600 --> 00:07:53,500
그리고 x^2, x^3 등의 순서가 된다.

105
00:07:53,880 --> 00:07:57,240
이 기저함수의 역할은

106
00:07:57,280 --> 00:08:02,380
벡터에서 i-hat, j-hat, k-hat과 같다.

107
00:08:02,380 --> 00:08:05,340
다항식이 임의의 최고차항을 가지기 때문에

108
00:08:05,360 --> 00:08:08,180
기저함수는 무한히 많다.

109
00:08:08,180 --> 00:08:09,040
그래도 괜찮다.

110
00:08:09,100 --> 00:08:11,380
그냥 다항식을

111
00:08:11,380 --> 00:08:14,400
무한한 좌표를 가진 벡터로 생각하는 것일 뿐이다.

112
00:08:15,360 --> 00:08:19,240
예를 들어, x^2+3x+5는

113
00:08:19,340 --> 00:08:23,720
5, 3, 1과

114
00:08:23,720 --> 00:08:26,240
무한히 많은 0을 좌표로 갖는다.

115
00:08:26,240 --> 00:08:29,880
여러분은 이걸

116
00:08:29,880 --> 00:08:31,710
첫 기저함수에 5를 곱하고

117
00:08:31,710 --> 00:08:33,040
두 번째 기저함수에 3을 곱하고

118
00:08:33,040 --> 00:08:35,500
세 번째 기저함수에 1을 곱하고

119
00:08:35,500 --> 00:08:40,960
다른 기저함수는 더하지 않는 것으로 보면 된다.

120
00:08:40,960 --> 00:08:45,800
4x^7-5x^2의 좌표는

121
00:08:45,800 --> 00:08:50,420
0, 0, -5, 0, 0, 0, 0, 4

122
00:08:50,420 --> 00:08:53,400
그 뒤론 무한하게 0이다.

123
00:08:53,400 --> 00:08:58,540
일반적으로, 각 다항식은 유한히 많은 항을 갖고 있어서

124
00:08:58,540 --> 00:09:01,220
그 좌표 역시 유한한 수의 수와

125
00:09:01,220 --> 00:09:07,280
무한히 많은 0으로 이루어진다.

126
00:09:07,280 --> 00:09:08,520
이런 좌표 시스템에서

127
00:09:08,520 --> 00:09:11,420
미분은 대부분이 0이고

128
00:09:11,420 --> 00:09:13,260
옆 대각선은 양수인

129
00:09:13,300 --> 00:09:18,140
무한행렬로 표시할 수 있다.

130
00:09:18,140 --> 00:09:21,020
뒤에서 이 행렬을 구하는 방법을 알려줄 것이지만,

131
00:09:21,020 --> 00:09:25,040
가장 좋은 방법은 직접 해보는 것이다.

132
00:09:25,240 --> 00:09:32,100
x^3+5x^2+4x+5를 나타내는 좌표를

133
00:09:32,100 --> 00:09:40,660
행렬 오른쪽에 쓴다.

134
00:09:40,670 --> 00:09:45,830
첫 번째 좌표에 영향을 주는 항은 1x4밖에 없다.

135
00:09:45,830 --> 00:09:50,670
즉 상수항은 4가 된다.

136
00:09:50,670 --> 00:09:55,670
이는 4x를 미분해서 4가 나온것과 일치한다.

137
00:09:55,670 --> 00:10:02,270
행렬과 벡터의 곱에서 두 번째 좌표는 2x5이다.

138
00:10:02,270 --> 00:10:06,590
이는 미분결과 x의 계수가 10이라는 것을 말한다.

139
00:10:06,590 --> 00:10:10,560
역시 5x^2을 미분한 결과와 일치한다.

140
00:10:10,560 --> 00:10:18,140
마찬가지로 행렬과 벡터의 곱에서 세 번째 항은 3x1이다.

141
00:10:18,140 --> 00:10:23,150
x^3을 미분하면 3x^2이 되는 것과 일치한다.

142
00:10:23,150 --> 00:10:27,020
나머지는 다 0이다.

143
00:10:27,020 --> 00:10:31,460
이게 가능한 것은 미분이 선형이기 때문이다.

144
00:10:31,460 --> 00:10:33,860
만약 행렬을 구하고 싶다면 잠깐 멈추고

145
00:10:33,880 --> 00:10:38,300
각 기저함수를 미분한 뒤

146
00:10:38,360 --> 00:10:45,240
각 열에 집어넣으면 구할 수 있다.

147
00:11:00,260 --> 00:11:04,580
그래서, 신기하게도 행렬-벡터 곱과 미분은

148
00:11:04,600 --> 00:11:07,340
겉보기엔 완전 달라 보였지만

149
00:11:07,500 --> 00:11:11,340
알고보면 같은 종류이다.

150
00:11:11,340 --> 00:11:16,840
사실, 이 시리즈에서 벡터를 화살표로 보고

151
00:11:17,000 --> 00:11:19,480
내적, 고유벡터같은 대부분의 개념은

152
00:11:19,540 --> 00:11:22,800
함수에서도 사용되는 개념이다.

153
00:11:22,800 --> 00:11:24,400
대신 내적 또는 고유함수처럼

154
00:11:24,400 --> 00:11:28,280
좀 다른 이름을 사용한다.

155
00:11:28,280 --> 00:11:31,520
이제 다시 '벡터란 무엇인가'로 되돌아가보자.

156
00:11:31,600 --> 00:11:35,980
수학에는 '벡터같은' 개념들이 매우 많다.

157
00:11:36,560 --> 00:11:41,520
화살표의 집합이든, 숫자의 배열이든,

158
00:11:41,560 --> 00:11:44,660
함수든, 아니면 정의한게 뭐든지간에

159
00:11:44,760 --> 00:11:48,140
합리적인 방법으로 실수배와 덧셈을 하면

160
00:11:48,140 --> 00:11:50,860
선형대수학에서 개발한

161
00:11:50,860 --> 00:11:57,580
벡터, 선형변환 등의 개념을 사용할 수 있다.

162
00:11:57,580 --> 00:12:02,640
자신을 선형대수를 개발하는 수학자라고 생각해보자.

163
00:12:03,200 --> 00:12:05,120
당신의 연구는

164
00:12:05,120 --> 00:12:07,300
특별한 곳에만 성립하는게 아니라

165
00:12:07,300 --> 00:12:09,560
벡터와 비슷한 모든 것에 적용할 수 있는

166
00:12:09,660 --> 00:12:13,540
일반적인 것이길 바랄 것이다.

167
00:12:13,540 --> 00:12:15,820
화살표, 숫자배열, 함수같이

168
00:12:15,820 --> 00:12:18,000
벡터와 비슷한 것들의 집합을

169
00:12:18,000 --> 00:12:20,440
벡터공간(vector spaces)이라고 한다.

170
00:12:20,440 --> 00:12:23,360
당신이 수학자라면 이렇게 말하고 싶을 것이다.

171
00:12:23,360 --> 00:12:25,600
"전 당신들이 다루는

172
00:12:25,600 --> 00:12:29,280
벡터공간의 모든 종류에 대해 생각하고 싶지 않아요!"

173
00:12:29,520 --> 00:12:35,340
그래서
벡터 합과 실수배에서 파생된 규칙을 정립해야 한다.

174
00:12:36,380 --> 00:12:38,420
이 규칙을 공리라고 부른다.

175
00:12:38,420 --> 00:12:40,732
그리고 현대 선형대수 이론에서는

176
00:12:40,732 --> 00:12:43,860
어떤 벡터공간이든 발견한 이론을 사용할 때

177
00:12:43,880 --> 00:12:47,260
항상 성립하는 8개의 공리가 있다.

178
00:12:47,660 --> 00:12:50,920
잠깐 멈추고 볼 사람을 위해 스크린에 띄워놓겠다.

179
00:12:50,920 --> 00:12:56,080
하지만 이건 그냥 벡터 합과 실수배의 개념에서 나온

180
00:12:56,080 --> 00:12:59,170
체크리스트에 불과하다.

181
00:12:59,170 --> 00:13:02,080
이 공리들은 자연의 기본 법칙이라기보다

182
00:13:02,080 --> 00:13:05,880
당신처럼 이론을 발견한 수학자와

183
00:13:06,320 --> 00:13:09,680
새로운 벡터공간에 그 이론을 적용하고 싶은 사람을

184
00:13:09,680 --> 00:13:10,920
연결해주는 다리이다.

185
00:13:10,920 --> 00:13:14,000
만약 어떤 사람이

186
00:13:14,080 --> 00:13:16,700
파이(pi)생물로 이루어진 괴상한 벡터 공간과

187
00:13:17,000 --> 00:13:19,860
파이 생물의 합과 실수배를 정의하면

188
00:13:19,940 --> 00:13:22,560
이 공리들은 선형대수의 결과를 사용하기 전에

189
00:13:22,560 --> 00:13:26,600
그들의 정의를 검증해볼 때 사용하는

190
00:13:26,600 --> 00:13:28,880
일종의 체크리스트이다.

191
00:13:28,890 --> 00:13:31,325
그리고 수학자로서 당신은

192
00:13:31,325 --> 00:13:31,825
사람들이 정의한 모든 괴상한 벡터공간에 대해

193
00:13:31,825 --> 00:13:33,000
생각할 필요가 없고

194
00:13:35,040 --> 00:13:38,240
대신 그 결과가 공리들을 만족하는지 비교하면 된다.

195
00:13:38,340 --> 00:13:40,980
그래서 정의가 이 공리를 만족한다면

196
00:13:40,980 --> 00:13:42,920
다른건 고려하지 않고도

197
00:13:42,920 --> 00:13:45,500
선형대수의 결론을 적용할 수 있다.

198
00:13:46,940 --> 00:13:48,620
결과적으로 모든 결론을

199
00:13:48,620 --> 00:13:50,780
상당히 추상적으로 표현하는 것이다.

200
00:13:50,780 --> 00:13:53,760
다시말해, 결론을 공리들의 관점에서만 보는 것이다.

201
00:13:53,800 --> 00:13:56,680
공간에 있는 화살표나 함수처럼

202
00:13:56,680 --> 00:14:01,260
구체적인 종류의 벡터로 표현하는 것이 아니란 것이다.

203
00:14:02,000 --> 00:14:05,708
이것이 바로 모든 책에서 선형변환을

204
00:14:05,708 --> 00:14:09,540
'격자가 평행하고 균등하게 변하는 것' 대신

205
00:14:09,640 --> 00:14:13,320
합과 실수배로 정의하고 있는 이유이다.

206
00:14:14,040 --> 00:14:18,000
심지어 특정 상황에서는 격자를 이용해서 정의하는 것이

207
00:14:18,000 --> 00:14:21,640
초심자에게는 더 직관적으로 보일지라도 말이다.

208
00:14:22,740 --> 00:14:25,400
그래서 "벡터란 무엇인가?"에 대한 수학자의 답은

209
00:14:25,420 --> 00:14:27,120
그 질문을 무시하는 것이다.

210
00:14:27,120 --> 00:14:31,320
현대에서는 벡터의 형태를 신경쓰지 않는다.

211
00:14:31,340 --> 00:14:33,320
화살표, 숫자의 배열, 함수,

212
00:14:33,320 --> 00:14:34,280
파이 생물체 등

213
00:14:34,280 --> 00:14:39,480
합과 실수배가 공리를 만족하게 정의되어 있으면

214
00:14:39,620 --> 00:14:41,700
무엇이든 벡터가 될 수 있다.

215
00:14:42,340 --> 00:14:44,960
이건 마치 숫자 3이 무엇인지 물어보는 것과 같다.

216
00:14:45,440 --> 00:14:47,020
3이 무엇인지 물어볼 때

217
00:14:47,020 --> 00:14:49,500
그 맥락에서 대상의 3배를 말한다.

218
00:14:49,500 --> 00:14:50,460
하지만 수학에서는

219
00:14:50,460 --> 00:14:54,120
모든 '3배'들을 추상화시킨 개념이고

220
00:14:54,120 --> 00:14:58,740
한 가지 개념으로 모든 '3배'들을 생각할 수 있게 만든다.

221
00:14:58,880 --> 00:15:01,840
벡터도 수많은 구체물들이 있지만

222
00:15:01,840 --> 00:15:03,740
수학에서는 그 모든 것을 한 가지의 개념로

223
00:15:03,860 --> 00:15:07,220
벡터 공간 속에 추상화시킨다.

224
00:15:09,080 --> 00:15:11,340
이 시리즈를 본 사람이면 다 알겠지만

225
00:15:11,460 --> 00:15:14,120
난 벡터를 처음 다룰 때는

226
00:15:14,120 --> 00:15:17,100
평면 속 화살표처럼 구체적으로 시각적인 것이

227
00:15:17,100 --> 00:15:19,260
좋다고 생각한다.

228
00:15:19,620 --> 00:15:21,360
하지만 선형대수학을 더 배울수록

229
00:15:21,360 --> 00:15:24,440
선형대수학은 더 광범위하게 적용할 수 있는 것이며

230
00:15:24,450 --> 00:15:27,800
이것이 책과 강의에서

231
00:15:27,800 --> 00:15:31,040
추상적인 글로 설명하는 이유임을 알게 된다.

232
00:15:32,260 --> 00:15:36,890
이렇게 해서, 선형대수 시리즈의 핵심을 마치고자 한다.

233
00:15:36,890 --> 00:15:40,170
여러분이 선형대수의 기초에

234
00:15:40,170 --> 00:15:44,040
견고한 직관적 이해가 생겼길 바란다.

235
00:15:44,720 --> 00:15:47,020
당연히 모든 주제를 다룬 것은 아니며,

236
00:15:47,020 --> 00:15:50,100
수많은 문제를 풀어봐야 한다.

237
00:15:50,100 --> 00:15:53,100
하지만 이 직관들을 활용하면

238
00:15:53,100 --> 00:15:56,660
앞으로 더 효율적으로 학습할 것이다.

239
00:15:56,660 --> 00:15:58,800
그럼 직관을 잘 활용하길 바라며

240
00:15:58,800 --> 00:16:00,800
건투를 빈다.

