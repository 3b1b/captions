1
00:00:10,240 --> 00:00:13,092
지금쯤이면 알 수 있듯이 이 시리즈의 

2
00:00:13,092 --> 00:00:16,080
대부분은 선형 변환이라는 시각적 렌즈를 

3
00:00:16,080 --> 00:00:19,340
통해 행렬과 벡터 연산을 이해하는 것입니다.

4
00:00:19,980 --> 00:00:23,498
이 영상도 예외는 아니며 역행렬, 컬럼 스페이스, 

5
00:00:23,498 --> 00:00:26,766
랭크, 널 스페이스의 개념을 해당 렌즈를 통해 

6
00:00:26,766 --> 00:00:27,520
설명합니다.

7
00:00:27,520 --> 00:00:29,760
미리 경고하지만 실제로 이러한 것들을 계산하는 

8
00:00:29,760 --> 00:00:31,913
방법에 대해서는 이야기하지 않을 것이며 어떤 

9
00:00:31,913 --> 00:00:34,240
사람들은 그것이 매우 중요하다고 주장할 것입니다.

10
00:00:34,840 --> 00:00:37,084
이 시리즈 외에도 가우스 제거 및 행 

11
00:00:37,084 --> 00:00:39,328
사다리꼴 키워드와 같은 방법을 학습할 

12
00:00:39,328 --> 00:00:42,000
수 있는 매우 유용한 리소스가 많이 있습니다.

13
00:00:42,540 --> 00:00:44,440
제가 실제로 여기에 추가해야 할 가치의 

14
00:00:44,440 --> 00:00:46,340
대부분은 직관 절반에 있다고 생각합니다.

15
00:00:46,900 --> 00:00:48,552
게다가 실제로 우리는 대개 이런 

16
00:00:48,552 --> 00:00:50,480
것들을 계산하는 소프트웨어를 얻습니다.

17
00:00:51,500 --> 00:00:52,827
먼저, 선형 대수학의 유용성에 

18
00:00:52,827 --> 00:00:53,920
대해 몇 마디 하겠습니다.

19
00:00:54,300 --> 00:00:56,626
지금까지 공간 조작을 설명하는 데 이 단어가 어떻게 

20
00:00:56,626 --> 00:00:58,472
사용되는지에 대한 힌트가 이미 있습니다. 

21
00:00:58,472 --> 00:01:00,558
이는 컴퓨터 그래픽 및 로봇공학과 같은 분야에 

22
00:01:00,558 --> 00:01:01,040
유용합니다.

23
00:01:01,500 --> 00:01:04,486
그러나 선형 대수가 더 광범위하게 적용 가능하고 

24
00:01:04,486 --> 00:01:07,252
거의 모든 기술 분야에 필요한 주요 이유 중 

25
00:01:07,252 --> 00:01:10,460
하나는 특정 방정식 시스템을 풀 수 있다는 것입니다.

26
00:01:11,380 --> 00:01:13,405
내가 방정식 시스템이라고 말할 때, 

27
00:01:13,405 --> 00:01:15,633
변수 목록, 모르는 것, 그리고 이들과 

28
00:01:15,633 --> 00:01:17,760
관련된 방정식 목록이 있다는 뜻입니다.

29
00:01:18,340 --> 00:01:20,071
많은 상황에서 이러한 방정식은 

30
00:01:20,071 --> 00:01:21,600
매우 복잡해질 수 있습니다.

31
00:01:22,120 --> 00:01:25,300
하지만 운이 좋다면 특별한 형태를 취할 수도 있습니다.

32
00:01:26,440 --> 00:01:29,024
각 방정식 내에서 각 변수에 발생하는 유일한 

33
00:01:29,024 --> 00:01:32,021
일은 일부 상수에 의해 크기가 조정된다는 것입니다. 

34
00:01:32,021 --> 00:01:34,709
그리고 이러한 크기 조정된 각 변수에 발생하는 

35
00:01:34,709 --> 00:01:36,880
유일한 일은 서로 추가된다는 것입니다.

36
00:01:37,540 --> 00:01:39,717
따라서 지수나 고급 함수, 두 

37
00:01:39,717 --> 00:01:42,280
변수를 곱하는 등의 작업은 없습니다.

38
00:01:43,420 --> 00:01:46,403
이러한 종류의 특별한 방정식 시스템을 구성하는 

39
00:01:46,403 --> 00:01:49,271
일반적인 방법은 모든 변수를 왼쪽에 배치하고 

40
00:01:49,271 --> 00:01:52,140
남아 있는 상수를 오른쪽에 배치하는 것입니다.

41
00:01:53,600 --> 00:01:56,112
공통 변수를 수직으로 정렬하는 것도 좋은데, 

42
00:01:56,112 --> 00:01:58,825
그렇게 하려면 변수가 방정식 중 하나에 표시되지 

43
00:01:58,825 --> 00:02:01,437
않을 때마다 일부 0 계수를 입력해야 할 수도 

44
00:02:01,437 --> 00:02:01,940
있습니다.

45
00:02:04,540 --> 00:02:07,240
이를 선형 방정식 시스템이라고 합니다.

46
00:02:08,100 --> 00:02:09,596
이것이 행렬-벡터 곱셈과 매우 

47
00:02:09,596 --> 00:02:11,180
유사하다는 것을 알 수 있습니다.

48
00:02:11,820 --> 00:02:15,698
실제로 모든 방정식을 하나의 벡터 방정식으로 묶을 

49
00:02:15,698 --> 00:02:19,577
수 있습니다. 여기서는 모든 상수 계수를 포함하는 

50
00:02:19,577 --> 00:02:23,040
행렬과 모든 변수를 포함하는 벡터를 가지며, 

51
00:02:23,040 --> 00:02:26,780
해당 행렬-벡터 곱은 다른 상수 벡터와 같습니다.

52
00:02:28,640 --> 00:02:31,425
해당 상수 행렬의 이름을 A로 지정하고, 

53
00:02:31,425 --> 00:02:34,331
변수가 포함된 벡터를 굵은 X로 표시하고, 

54
00:02:34,331 --> 00:02:37,480
오른쪽에 있는 상수 벡터를 V라고 부르겠습니다.

55
00:02:38,860 --> 00:02:41,018
이는 방정식 시스템을 한 줄에 작성하기 

56
00:02:41,018 --> 00:02:42,980
위한 단순한 표기법 이상의 것입니다.

57
00:02:43,340 --> 00:02:45,167
그것은 문제에 대한 아주 멋진 

58
00:02:45,167 --> 00:02:46,780
기하학적 해석을 밝혀줍니다.

59
00:02:47,620 --> 00:02:50,952
행렬 A는 일부 선형 변환에 해당하므로 

60
00:02:50,952 --> 00:02:54,133
Ax = V를 풀면 변환을 적용한 후 

61
00:02:54,133 --> 00:02:57,920
V에 도달하는 벡터 X를 찾는다는 의미입니다.

62
00:02:59,940 --> 00:03:01,780
잠시 여기서 무슨 일이 일어나고 있는지 생각해 보세요.

63
00:03:02,060 --> 00:03:04,508
공간을 찌그러뜨리고 모핑하고 어떤 벡터가 

64
00:03:04,508 --> 00:03:07,063
다른 벡터에 도달하는지 알아내려고 노력하는 

65
00:03:07,063 --> 00:03:09,618
것만으로도 여러 변수가 서로 뒤섞여 있다는 

66
00:03:09,618 --> 00:03:12,600
정말 복잡한 아이디어를 머릿속에 담을 수 있습니다.

67
00:03:13,160 --> 00:03:13,760
멋지죠?

68
00:03:14,600 --> 00:03:16,601
간단하게 시작하려면 두 개의 방정식과 두 개의 

69
00:03:16,601 --> 00:03:18,680
미지수가 있는 시스템이 있다고 가정해 보겠습니다.

70
00:03:19,000 --> 00:03:21,480
이는 행렬 A가 2x2 행렬이고 V와 

71
00:03:21,480 --> 00:03:23,960
X가 각각 2차원 벡터임을 의미합니다.

72
00:03:25,600 --> 00:03:29,043
이제 이 방정식의 해법에 대해 생각하는 방법은 A와 

73
00:03:29,043 --> 00:03:32,368
관련된 변환이 모든 공간을 선이나 점과 같은 하위 

74
00:03:32,368 --> 00:03:35,931
차원으로 찌그러뜨리는지 아니면 시작했던 전체 2차원에 

75
00:03:35,931 --> 00:03:38,900
걸쳐 모든 것을 남겨두는지에 따라 달라집니다.

76
00:03:40,320 --> 00:03:43,815
지난 영상의 언어에서는 A의 행렬식이 0인 

77
00:03:43,815 --> 00:03:48,040
경우와 A의 행렬식이 0이 아닌 경우로 세분화됩니다.

78
00:03:51,300 --> 00:03:53,346
행렬식이 0이 아닌 가장 가능성이 높은 

79
00:03:53,346 --> 00:03:54,928
경우부터 시작하겠습니다. 즉, 

80
00:03:54,928 --> 00:03:57,720
공간이 0 영역 영역으로 찌그러지지 않음을 의미합니다.

81
00:03:58,600 --> 00:04:01,861
이 경우 V에 도달하는 벡터는 항상 단 

82
00:04:01,861 --> 00:04:06,160
하나뿐이며 변환을 역으로 실행하여 찾을 수 있습니다.

83
00:04:06,700 --> 00:04:09,967
이렇게 테이프를 되감으면서 V가 가는 곳을 따라가면 

84
00:04:09,967 --> 00:04:12,896
A 곱하기 x가 V와 같은 벡터 x를 찾을 수 

85
00:04:12,896 --> 00:04:13,460
있습니다.

86
00:04:15,400 --> 00:04:18,129
변환을 역방향으로 실행하면 실제로는 

87
00:04:18,129 --> 00:04:21,131
일반적으로 A의 역이라고 불리는 별도의 

88
00:04:21,131 --> 00:04:24,680
선형 변환에 해당하며 A에서 음수로 표시됩니다.

89
00:04:25,360 --> 00:04:29,122
예를 들어 A가 시계 반대 방향으로 90도 회전했다면 

90
00:04:29,122 --> 00:04:32,760
A의 역회전은 시계 방향으로 90도 회전한 것입니다.

91
00:04:34,320 --> 00:04:37,040
A가 j-hat을 한 단위 오른쪽으로 밀어내는 

92
00:04:37,040 --> 00:04:39,655
오른쪽 전단이라면 A의 역전단은 j-hat을 

93
00:04:39,655 --> 00:04:42,480
왼쪽으로 한 단위를 밀어내는 왼쪽 전단이 됩니다.

94
00:04:44,100 --> 00:04:47,316
일반적으로 A 역은 먼저 A를 적용한 다음 

95
00:04:47,316 --> 00:04:50,532
변환 A 역을 적용하면 결국 시작한 곳으로 

96
00:04:50,532 --> 00:04:53,480
돌아가는 속성을 갖는 고유한 변환입니다.

97
00:04:54,540 --> 00:04:57,426
하나의 변환을 연이어 적용하는 것은 행렬 

98
00:04:57,426 --> 00:05:00,438
곱셈을 통해 대수적으로 캡처되므로 이 변환 

99
00:05:00,438 --> 00:05:03,324
A 역의 핵심 속성은 A 역과 A의 곱이 

100
00:05:03,324 --> 00:05:06,210
아무것도 하지 않는 것에 해당하는 행렬과 

101
00:05:06,210 --> 00:05:07,340
같다는 것입니다.

102
00:05:08,200 --> 00:05:11,320
아무것도 하지 않는 변환을 항등 변환이라고 합니다.

103
00:05:11,780 --> 00:05:14,656
i-hat과 j-hat은 각각 그대로 

104
00:05:14,656 --> 00:05:18,080
그대로 두므로 열은 1,0과 0,1이 됩니다.

105
00:05:19,980 --> 00:05:23,850
실제로 컴퓨터를 사용하여 이 역행렬을 찾은 후에는 

106
00:05:23,850 --> 00:05:27,720
이 역행렬에 v를 곱하여 방정식을 풀 수 있습니다.

107
00:05:29,960 --> 00:05:33,261
그리고 다시, 이것이 기하학적으로 의미하는 것은 

108
00:05:33,261 --> 00:05:36,440
v를 따르는 변환을 역으로 수행한다는 것입니다.

109
00:05:40,200 --> 00:05:43,164
행렬의 무작위 선택에 대해 가장 가능성이 높은 

110
00:05:43,164 --> 00:05:46,128
이 0이 아닌 행렬식 사례는 두 개의 미지수와 

111
00:05:46,128 --> 00:05:49,207
두 개의 방정식이 있는 경우 단일 고유 솔루션이 

112
00:05:49,207 --> 00:05:52,400
있는 경우가 거의 확실하다는 아이디어와 일치합니다.

113
00:05:53,680 --> 00:05:56,383
이 아이디어는 방정식의 수가 미지수의 수와 

114
00:05:56,383 --> 00:05:59,200
같을 때 더 높은 차원에서도 의미가 있습니다.

115
00:05:59,380 --> 00:06:03,896
다시 말하지만, 방정식 시스템은 변환 A와 

116
00:06:03,896 --> 00:06:08,223
벡터 v가 있고 v에 도달하는 벡터 x를 

117
00:06:08,223 --> 00:06:12,740
찾는 기하학적 해석으로 변환될 수 있습니다.

118
00:06:15,740 --> 00:06:19,309
변환 A가 모든 공간을 더 낮은 차원으로 압축하지 

119
00:06:19,309 --> 00:06:22,625
않는 한, 즉 행렬식은 0이 아님을 의미하며, 

120
00:06:22,625 --> 00:06:26,450
A를 먼저 수행하면 A를 역으로 수행하는 속성을 갖는 

121
00:06:26,450 --> 00:06:28,745
역변환 A 역이 발생합니다. , 

122
00:06:28,745 --> 00:06:31,040
아무것도하지 않는 것과 같습니다.

123
00:06:33,540 --> 00:06:36,775
방정식을 풀려면 역변환 행렬에 

124
00:06:36,775 --> 00:06:39,440
벡터 v를 곱하면 됩니다.

125
00:06:43,500 --> 00:06:47,852
그러나 행렬식이 0이고 방정식 시스템과 관련된 변환이 

126
00:06:47,852 --> 00:06:52,060
공간을 더 작은 차원으로 압축하면 역행렬이 없습니다.

127
00:06:52,480 --> 00:06:55,460
선을 풀어 평면으로 바꿀 수는 없습니다.

128
00:06:55,980 --> 00:06:58,060
적어도 그것은 함수가 할 수 있는 일이 아닙니다.

129
00:06:58,360 --> 00:07:00,616
이를 위해서는 각 개별 벡터를 벡터로 

130
00:07:00,616 --> 00:07:02,980
가득 찬 전체 라인으로 변환해야 합니다.

131
00:07:03,740 --> 00:07:05,282
그러나 함수는 단일 출력에 대한 

132
00:07:05,282 --> 00:07:06,740
단일 입력만 받을 수 있습니다.

133
00:07:08,400 --> 00:07:11,937
마찬가지로, 3개의 방정식과 3개의 미지수의 경우 

134
00:07:11,937 --> 00:07:15,349
해당 변환이 3D 공간을 평면으로 찌그러뜨리거나 

135
00:07:15,349 --> 00:07:19,140
선이나 점으로 찌그러뜨리더라도 역이 발생하지 않습니다.

136
00:07:19,920 --> 00:07:22,486
모든 영역은 볼륨이 0인 영역으로 압축되기 

137
00:07:22,486 --> 00:07:25,160
때문에 이들 모두는 0의 행렬식에 해당합니다.

138
00:07:26,700 --> 00:07:30,640
역이 없더라도 해가 존재할 가능성은 여전히 있습니다.

139
00:07:30,720 --> 00:07:35,199
변환이 공간을 예를 들어 선으로 압축할 때 벡터 v가 

140
00:07:35,199 --> 00:07:39,380
해당 선의 어딘가에 있을 만큼 운이 좋아야 합니다.

141
00:07:43,300 --> 00:07:45,600
이러한 제로 결정자 사례 중 일부는 다른 

142
00:07:45,600 --> 00:07:48,300
사례보다 훨씬 더 제한적으로 느껴질 수 있습니다.

143
00:07:48,840 --> 00:07:51,576
예를 들어 3x3 행렬이 주어지면 두 가지 

144
00:07:51,576 --> 00:07:54,539
모두 행렬식이 0임에도 불구하고 공간을 평면에 

145
00:07:54,539 --> 00:07:57,390
뭉개는 경우에 비해 공간을 선에 뭉개는 경우 

146
00:07:57,390 --> 00:08:00,240
솔루션이 존재하기가 훨씬 더 어려워 보입니다.

147
00:08:02,600 --> 00:08:04,350
행렬식이 0이라고 말하는 것보다 

148
00:08:04,350 --> 00:08:06,100
좀 더 구체적인 언어가 있습니다.

149
00:08:06,520 --> 00:08:10,010
변환의 출력이 선(1차원임을 의미)인 

150
00:08:10,010 --> 00:08:13,500
경우 변환의 순위가 1이라고 말합니다.

151
00:08:15,140 --> 00:08:17,708
모든 벡터가 2차원 평면에 있는 

152
00:08:17,708 --> 00:08:20,420
경우 변환의 순위는 2라고 합니다.

153
00:08:22,920 --> 00:08:25,200
따라서 순위라는 단어는 변환 

154
00:08:25,200 --> 00:08:27,480
출력의 차원 수를 의미합니다.

155
00:08:28,400 --> 00:08:32,720
예를 들어 2x2 행렬의 경우 2순위가 가장 좋습니다.

156
00:08:33,080 --> 00:08:36,104
이는 기저 벡터가 공간의 전체 2차원에 걸쳐 계속 

157
00:08:36,104 --> 00:08:39,020
확장되고 행렬식은 0이 아니라는 것을 의미합니다.

158
00:08:39,419 --> 00:08:43,191
그러나 3x3 행렬의 경우 2순위는 우리가 무너졌음을 

159
00:08:43,191 --> 00:08:46,460
의미하지만 1순위 상황만큼 무너지지는 않습니다.

160
00:08:47,240 --> 00:08:50,103
3D 변환의 행렬식이 0이 아니고 출력이 

161
00:08:50,103 --> 00:08:53,340
3D 공간 전체를 채우는 경우 순위는 3입니다.

162
00:08:54,520 --> 00:08:58,620
선, 평면, 3D 공간 등 행렬에 대해 가능한 

163
00:08:58,620 --> 00:09:02,720
모든 출력 집합을 행렬의 열 공간이라고 합니다.

164
00:09:04,140 --> 00:09:06,280
그 이름이 어디서 왔는지 추측할 수 있을 것입니다.

165
00:09:06,560 --> 00:09:10,890
행렬의 열은 기저 벡터가 어디에 있는지 알려주고, 

166
00:09:10,890 --> 00:09:14,912
변환된 기저 벡터의 범위는 가능한 모든 출력을 

167
00:09:14,912 --> 00:09:15,840
제공합니다.

168
00:09:16,360 --> 00:09:21,140
즉, 열 공간은 행렬 열의 범위입니다.

169
00:09:23,300 --> 00:09:25,838
따라서 순위에 대한 보다 정확한 

170
00:09:25,838 --> 00:09:28,940
정의는 열 공간의 차원 수라는 것입니다.

171
00:09:29,940 --> 00:09:32,412
이 순위가 가능한 한 높을 때(즉, 

172
00:09:32,412 --> 00:09:36,120
열 수와 동일함을 의미) 행렬을 전체 순위라고 합니다.

173
00:09:38,540 --> 00:09:42,115
선형 변환은 원점을 제자리에 고정해야 하기 

174
00:09:42,115 --> 00:09:45,840
때문에 영 벡터가 항상 열 공간에 포함됩니다.

175
00:09:46,900 --> 00:09:49,615
전체 순위 변환의 경우 원점에 도달하는 

176
00:09:49,615 --> 00:09:51,960
유일한 벡터는 0 벡터 자체입니다.

177
00:09:52,460 --> 00:09:54,492
그러나 더 작은 차원으로 찌그러지는 

178
00:09:54,492 --> 00:09:56,524
전체 순위가 아닌 행렬의 경우 0에 

179
00:09:56,524 --> 00:09:58,760
도달하는 벡터 전체를 가질 수 있습니다.

180
00:10:01,640 --> 00:10:04,449
예를 들어, 2D 변환이 공간을 선으로 

181
00:10:04,449 --> 00:10:07,514
찌그러뜨리는 경우 원점에 찌그러지는 벡터로 

182
00:10:07,514 --> 00:10:10,580
가득 찬 다른 방향에 별도의 선이 있습니다.

183
00:10:11,780 --> 00:10:14,816
3D 변환으로 인해 공간이 평면으로 찌그러지면 

184
00:10:14,816 --> 00:10:17,620
원점에 도달하는 전체 벡터 라인도 있습니다.

185
00:10:20,520 --> 00:10:23,695
3D 변환으로 인해 모든 공간이 선으로 압축되면 

186
00:10:23,695 --> 00:10:26,989
원점에 도달하는 벡터로 가득 찬 전체 평면이 있게 

187
00:10:26,989 --> 00:10:27,460
됩니다.

188
00:10:32,800 --> 00:10:35,632
원점에 있는 이 벡터 집합을 널 

189
00:10:35,632 --> 00:10:38,780
공간 또는 행렬의 커널이라고 합니다.

190
00:10:39,360 --> 00:10:41,461
0 벡터에 도달한다는 의미에서 

191
00:10:41,461 --> 00:10:44,180
null이 되는 모든 벡터의 공간입니다.

192
00:10:45,680 --> 00:10:49,590
선형 방정식 시스템의 관점에서 v가 영 벡터일 때 

193
00:10:49,590 --> 00:10:53,640
영공간은 방정식에 대한 가능한 모든 해를 제공합니다.

194
00:10:56,420 --> 00:10:58,810
이것은 선형 방정식 시스템을 기하학적으로 

195
00:10:58,810 --> 00:11:01,720
생각하는 방법에 대한 매우 높은 수준의 개요입니다.

196
00:11:02,300 --> 00:11:04,915
각 시스템에는 이와 관련된 일종의 선형 

197
00:11:04,915 --> 00:11:07,768
변환이 있으며 해당 변환에 역이 있는 경우 

198
00:11:07,768 --> 00:11:10,740
해당 역을 사용하여 시스템을 풀 수 있습니다.

199
00:11:12,280 --> 00:11:15,191
그렇지 않으면 열 공간의 개념을 통해 해가 

200
00:11:15,191 --> 00:11:17,617
언제 존재하는지 이해할 수 있으며, 

201
00:11:17,617 --> 00:11:20,528
널 공간의 개념은 가능한 모든 해의 집합이 

202
00:11:20,528 --> 00:11:23,440
어떻게 생겼는지 이해하는 데 도움이 됩니다.

203
00:11:24,980 --> 00:11:26,376
다시 말하지만, 여기서 다루지 않은 

204
00:11:26,376 --> 00:11:27,773
내용이 많이 있습니다. 특히 이러한 

205
00:11:27,773 --> 00:11:29,380
항목을 계산하는 방법이 가장 두드러집니다.

206
00:11:29,800 --> 00:11:32,156
또한 방정식의 수가 미지수의 수와 

207
00:11:32,156 --> 00:11:34,760
동일한 예로 범위를 제한해야 했습니다.

208
00:11:34,880 --> 00:11:37,673
그러나 여기서의 목표는 모든 것을 가르치려고 

209
00:11:37,673 --> 00:11:39,572
노력하는 것이 아니라 역행렬, 

210
00:11:39,572 --> 00:11:42,589
열 공간 및 널 공간에 대한 강력한 직관을 갖고 

211
00:11:42,589 --> 00:11:45,494
이러한 직관을 통해 향후 학습을 더욱 유익하게 

212
00:11:45,494 --> 00:11:46,500
만드는 것입니다.

213
00:11:47,660 --> 00:11:49,516
다음 비디오는 많은 분들의 요청에 따라 

214
00:11:49,516 --> 00:11:51,880
비정사각형 행렬에 대한 간략한 각주가 될 것입니다.

215
00:11:51,880 --> 00:11:54,554
그런 다음 내적에 대한 내 생각과 이를 

216
00:11:54,554 --> 00:11:57,107
선형 변환의 관점에서 볼 때 발생하는 

217
00:11:57,107 --> 00:11:59,660
매우 멋진 현상에 대해 설명하겠습니다.

