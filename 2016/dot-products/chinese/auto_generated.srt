1
00:00:00,000 --> 00:00:20,800
[贝多芬的《欢乐颂》，钢琴演奏到最后。]

2
00:00:20,800 --> 00:00:25,120
传统上，点积是在线性代数课程中很早

3
00:00:25,120 --> 00:00:26,640
就引入的东西，通常是在开始时引入的。

4
00:00:26,640 --> 00:00:29,960
所以我在这个系列中把它们推迟到这么远可能看起来很奇怪。

5
00:00:30,120 --> 00:00:32,920
我这样做是因为有一个标准的方法来介绍这

6
00:00:32,920 --> 00:00:36,120
个主题，它只需要对向量有基本的了解，但

7
00:00:36,120 --> 00:00:39,480
对点积在数学中所扮演的角色的更全面的理

8
00:00:39,480 --> 00:00:42,760
解只能在线性变换的指导下才能真正找到。

9
00:00:43,320 --> 00:00:47,560
不过，在此之前，让我简单介绍一下点积的引入标准

10
00:00:47,560 --> 00:00:50,840
方式，我认为至少部分观众已经了解了这种方式。

11
00:00:51,240 --> 00:00:54,840
在数字上，如果有两个相同维度的向量

12
00:00:54,840 --> 00:00:57,320
，两个具有相同长度的数字列表，获

13
00:00:57,320 --> 00:01:01,000
取它们的点积意味着将所有坐标配对

14
00:01:01,640 --> 00:01:04,920
，将这些对相乘，然后将结果相加。

15
00:01:06,680 --> 00:01:13,080
因此向量 1, 2 点缀着 3, 4 将是 1 乘以 3 加 2 乘以 4。

16
00:01:14,520 --> 00:01:21,240
向量 6, 2, 8, 3 点缀着 1, 8, 5, 3 将是 6

17
00:01:21,240 --> 00:01:23,640
乘以 1 加 2 乘以 8 加 8 乘以 5 加 3 乘以 3。

18
00:01:24,520 --> 00:01:28,840
幸运的是，这个计算有一个非常好的几何解释。

19
00:01:28,840 --> 00:01:32,520
要考虑两个向量 v 和 w 之间的点积，请想象

20
00:01:32,520 --> 00:01:37,800
将 w 投影到穿过原点和 v 尖端的直线上。

21
00:01:38,280 --> 00:01:44,360
将此投影的长度乘以 v 的长度，即可得到点积 v 点 w。

22
00:01:46,040 --> 00:01:49,880
除非 w 的投影指向 v 的相反

23
00:01:49,880 --> 00:01:52,120
方向，否则该点积实际上将为负。

24
00:01:53,800 --> 00:01:57,800
因此，当两个向量通常指向同一方向时，它们的点积为正。

25
00:01:59,400 --> 00:02:04,040
当它们垂直时，意味着一个到另一个

26
00:02:04,040 --> 00:02:05,880
的投影为零向量，它们的点积为零。

27
00:02:05,880 --> 00:02:09,560
如果它们通常指向相反的方向，则它们的点积为负。

28
00:02:11,640 --> 00:02:14,680
现在，这种解释奇怪地不对称。

29
00:02:14,680 --> 00:02:16,760
它对待这两个向量的方式非常不同。

30
00:02:16,760 --> 00:02:19,880
所以当我第一次了解到这一点时，我很惊讶顺序并不重要。

31
00:02:20,280 --> 00:02:23,000
您可以将 v 投影到 w 上，将投影 v

32
00:02:23,000 --> 00:02:27,400
的长度乘以 w 的长度，并得到相同的结果。

33
00:02:29,400 --> 00:02:32,120
我的意思是，这难道不感觉是一个完全不同的过程吗？

34
00:02:34,600 --> 00:02:36,840
这是为什么顺序不重要的直觉。

35
00:02:37,640 --> 00:02:41,400
如果 v 和 w 碰巧具有相同的长度，我们可以利用一些对称性。

36
00:02:42,200 --> 00:02:47,560
由于将 w 投影到 v 上，然后将该投影的长度乘

37
00:02:48,440 --> 00:02:52,040
以 v 的长度，因此是将 v 投影到 w 上，

38
00:02:52,040 --> 00:02:55,080
然后将该投影的长度乘以 w 的长度的完整镜像。

39
00:02:57,160 --> 00:03:01,080
现在，如果您将其中一个（例如 v）缩放为某个常数（例如

40
00:03:01,080 --> 00:03:04,840
2），从而使它们的长度不相等，则对称性就会被打破。

41
00:03:04,840 --> 00:03:07,240
但是让我们考虑一下如何解释这个新向量

42
00:03:07,240 --> 00:03:09,960
（2 乘以 v）和 w 之间的点积。

43
00:03:10,840 --> 00:03:13,480
如果您将 w 视为投影到 v 上，则点积 2v d

44
00:03:13,480 --> 00:03:19,720
ot w 将恰好是点积 v dot w 的两倍。

45
00:03:20,280 --> 00:03:26,120
这是因为当您将 v 缩放 2 时，它不会改变 w

46
00:03:26,120 --> 00:03:29,560
投影的长度，但会将您投影到的向量的长度加倍。

47
00:03:30,200 --> 00:03:34,120
但另一方面，假设您正在考虑将 v 投影到 w 上。

48
00:03:34,760 --> 00:03:39,960
好吧，在这种情况下，当我们将 v 乘以 2 时，投

49
00:03:39,960 --> 00:03:43,320
影的长度就会缩放，但投影到的向量的长度保持不变。

50
00:03:43,320 --> 00:03:47,000
所以总体效果仍然是点积的两倍。

51
00:03:47,000 --> 00:03:49,400
因此，即使在这种情况下对称性

52
00:03:49,400 --> 00:03:52,920
被打破，这种缩放对点积值的影

53
00:03:52,920 --> 00:03:54,920
响在两种解释下都是相同的。

54
00:03:56,760 --> 00:04:00,120
当我第一次学习这些东西时，还有一个让我困惑的大问题。

55
00:04:00,760 --> 00:04:04,280
到底为什么这种匹配坐标、相乘并将它

56
00:04:04,280 --> 00:04:08,760
们加在一起的数值过程与投影有关？

57
00:04:08,760 --> 00:04:16,280
好吧，为了给出一个令人满意的答案，并且为

58
00:04:16,280 --> 00:04:19,160
了充分理解点积的重要性，我们需要挖掘这里

59
00:04:19,160 --> 00:04:21,320
发生的更深入的事情，这通常被称为对偶性。

60
00:04:21,880 --> 00:04:26,280
但在开始讨论之前，我需要花一些时间讨论

61
00:04:26,280 --> 00:04:29,880
从多维到一维的线性变换，这只是数轴。

62
00:04:32,520 --> 00:04:35,960
这些函数接受 2d 向量并输出一些数字

63
00:04:35,960 --> 00:04:38,840
，但线性变换当然比具有 2d 输入和

64
00:04:38,840 --> 00:04:42,200
1d 输出的普通函数受到更多限制。

65
00:04:42,760 --> 00:04:47,080
与更高维度的变换一样，就像我在第 3 章中讨

66
00:04:47,080 --> 00:04:50,040
论的那样，有一些形式属性使这些函数成为线性，

67
00:04:50,040 --> 00:04:53,960
但我将故意忽略这些，以免分散我们的最终目标，

68
00:04:53,960 --> 00:04:58,040
相反专注于某种与所有正式事物等效的视觉属性。

69
00:04:58,920 --> 00:05:03,320
如果您采用一行均匀间隔的点并应用变换，

70
00:05:04,280 --> 00:05:08,120
那么一旦这些点落在输出空间（即数轴）

71
00:05:08,120 --> 00:05:11,000
中，线性变换将使这些点保持均匀间隔。

72
00:05:12,200 --> 00:05:15,320
否则，如果有一些点线的间距不均

73
00:05:15,320 --> 00:05:17,080
匀，那么您的变换就不是线性的。

74
00:05:19,160 --> 00:05:23,000
与我们之前看到的情况一样，这些线性变换

75
00:05:23,000 --> 00:05:26,760
之一完全由 i-hat 和 j-ha

76
00:05:26,760 --> 00:05:30,440
t 的位置决定，但这次每个基向量都落

77
00:05:30,440 --> 00:05:34,120
在一个数字上，因此当我们记录它们以矩

78
00:05:34,120 --> 00:05:36,680
阵的列形式出现，每一列只有一个数字。

79
00:05:38,280 --> 00:05:39,720
这是一个 1x2 矩阵。

80
00:05:41,640 --> 00:05:45,640
让我们通过一个示例来了解将这些变换之一应用于向量的含义。

81
00:05:46,200 --> 00:05:51,560
假设您有一个线性变换，将 i-hat 变为 1，将 j-hat 变为负 2。

82
00:05:52,280 --> 00:05:56,600
要追踪坐标为 4、3 的向量的最终位置，请将此向量分解

83
00:05:56,600 --> 00:06:00,920
为 4 乘以 i-hat 加上 3 乘以 j-hat。

84
00:06:01,640 --> 00:06:05,160
线性的结果是，变换后，向量将是 i-h

85
00:06:05,160 --> 00:06:09,000
at 落地位置的 4 倍，即 1，再加

86
00:06:09,000 --> 00:06:12,680
上 j-hat 落地位置的 3 倍，即

87
00:06:12,680 --> 00:06:15,320
负 2，在本例中意味着它落在负数上2.

88
00:06:17,960 --> 00:06:22,360
当您纯粹以数字方式进行此计算时，它是矩阵向量乘法。

89
00:06:23,240 --> 00:06:30,440
现在，将 1x2 矩阵乘以向量的数

90
00:06:30,440 --> 00:06:33,160
值运算就像计算两个向量的点积一样。

91
00:06:33,160 --> 00:06:36,760
这个 1x2 矩阵看起来不像是我们倾斜的向量吗？

92
00:06:37,880 --> 00:06:43,160
事实上，我们现在可以说 1x2 矩阵和 2D 向量之间

93
00:06:43,160 --> 00:06:47,640
存在很好的关联，通过将向量的数值表示倾斜到其一侧以获得

94
00:06:47,640 --> 00:06:52,520
关联的矩阵，或者将矩阵向后倾斜以获得关联的向量来定义。

95
00:06:53,400 --> 00:06:56,040
由于我们现在只是在研究数值表达式，因此在向量和 1

96
00:06:56,040 --> 00:07:00,600
x2 矩阵之间来回切换可能感觉像是一件愚蠢的事情。

97
00:07:01,560 --> 00:07:05,480
但这表明从几何角度来看确实很棒。

98
00:07:05,480 --> 00:07:08,440
将向量转化为数字的线性变换与

99
00:07:08,440 --> 00:07:11,640
向量本身之间存在某种联系。

100
00:07:12,520 --> 00:07:17,880
让我举一个例子来阐明其重要性，并

101
00:07:17,880 --> 00:07:21,320
且恰好也回答了之前的点积难题。

102
00:07:21,960 --> 00:07:23,320
忘掉你所学的知识，想象一下

103
00:07:23,320 --> 00:07:27,160
你还不知道点积与投影有关。

104
00:07:28,920 --> 00:07:33,480
我要做的就是复制一份数轴，并以某种方式将其对角放置在空

105
00:07:33,480 --> 00:07:39,000
间中，数字 0 位于原点。现在考虑二维单位向量，其尖

106
00:07:39,000 --> 00:07:44,520
端位于数轴上数字 1 的位置。我想给那个家伙起个名字，U-hat。

107
00:07:45,560 --> 00:07:48,280
这个小家伙在即将发生的事情中扮演着重

108
00:07:48,280 --> 00:07:49,960
要的角色，所以把他放在你的脑海里吧。

109
00:07:50,920 --> 00:07:54,840
如果我们将 2D 向量直接投影到这条对角数线上，实际上

110
00:07:54,840 --> 00:07:58,920
，我们刚刚定义了一个将 2D 向量转换为数字的函数。

111
00:07:59,480 --> 00:08:03,720
更重要的是，这个函数实际上是线性的，因为它通过了我们的视觉

112
00:08:03,720 --> 00:08:08,840
测试，即任何均匀分布的点线一旦落在数轴上就保持均匀分布。

113
00:08:09,080 --> 00:08:16,280
需要明确的是，即使我像这样将数轴嵌入到二维空

114
00:08:16,280 --> 00:08:19,720
间中，函数的输出也是数字，而不是二维向量。

115
00:08:19,720 --> 00:08:23,640
您应该考虑一个接受两个坐标并输出一个坐标的函数。

116
00:08:24,920 --> 00:08:29,240
但向量 U-hat 是一个二维向量，存在于输入空间中。

117
00:08:29,240 --> 00:08:33,160
它只是以与数轴的嵌入重叠的方式定位。

118
00:08:33,160 --> 00:08:39,960
通过这个投影，我们刚刚定义了从 2D 向量到数字的线性变

119
00:08:39,960 --> 00:08:44,600
换，因此我们将能够找到某种描述该变换的 1x2 矩阵。

120
00:08:45,320 --> 00:08:49,960
为了找到 1x2 矩阵，让我们放大这个对角数

121
00:08:49,960 --> 00:08:53,240
轴设置，并考虑 I-hat 和 J-hat

122
00:08:53,240 --> 00:08:56,360
各自着陆的位置，因为这些着陆点将是矩阵的列。

123
00:08:58,360 --> 00:09:02,840
这部分超级酷。我们可以用一个非常优雅的对称性来推理它。

124
00:09:02,920 --> 00:09:05,800
由于 I-hat 和 U-hat 都是单位向量，因

125
00:09:05,800 --> 00:09:09,160
此将 I-hat 投影到穿过 U-hat 的直线上

126
00:09:09,160 --> 00:09:13,560
看起来与将 U-hat 投影到 x 轴上完全对称。

127
00:09:13,560 --> 00:09:17,240
因此，当我们询问 I-hat 在投影时落在什么数字上时，答

128
00:09:17,240 --> 00:09:22,680
案将与 U-hat 在投影到 x 轴上时落在的数字相同。

129
00:09:22,680 --> 00:09:28,920
但将 U-hat 投影到 x 轴只是意味着获取 U-hat 的 x 坐标。

130
00:09:28,920 --> 00:09:34,280
因此，根据对称性，当 I-hat 投影到对角数轴上时，I-hat

131
00:09:34,280 --> 00:09:37,560
落在的数字将是 U-hat 的 x 坐标。这不是很酷吗？

132
00:09:39,080 --> 00:09:43,000
J 帽案例的推理几乎相同。想一想。

133
00:09:49,240 --> 00:09:52,280
出于所有相同的原因，U-hat 的 y 坐标为我们

134
00:09:52,280 --> 00:09:56,520
提供了 J-hat 投影到数轴副本上时落在的数字。

135
00:09:57,400 --> 00:10:00,040
暂停并思考一下。我只是觉得这真的很酷。

136
00:10:00,920 --> 00:10:05,000
因此，描述投影变换的 1x2 矩阵

137
00:10:05,000 --> 00:10:07,160
的条目将是 U-hat 的坐标。

138
00:10:07,800 --> 00:10:11,720
计算空间中任意向量的投影变换，需要

139
00:10:11,720 --> 00:10:15,080
将该矩阵乘以这些向量，在计算上与

140
00:10:15,080 --> 00:10:18,840
使用 U-hat 进行点积相同。

141
00:10:21,800 --> 00:10:24,760
这就是为什么用单位向量求点积可以解释为将

142
00:10:24,840 --> 00:10:30,520
向量投影到该单位向量的跨度上并获取长度。

143
00:10:34,120 --> 00:10:36,200
那么非单位向量呢？

144
00:10:36,200 --> 00:10:40,600
例如，假设我们采用单位向量 U-hat，但我们将其放大 3 倍。

145
00:10:41,240 --> 00:10:44,760
从数字上看，它的每个分量都乘以 3。

146
00:10:44,760 --> 00:10:47,880
因此，查看与该向量关联的矩阵，I-hat

147
00:10:47,880 --> 00:10:52,360
和 J-hat 的值是它们之前的值的三倍。

148
00:10:55,400 --> 00:11:00,280
由于这都是线性的，因此更一般地意味着新矩阵可以解释为

149
00:11:00,280 --> 00:11:04,600
将任何向量投影到数轴副本上并将其所在位置乘以 3。

150
00:11:05,320 --> 00:11:10,360
这就是为什么具有非单位向量的点积可以解释为首先投影

151
00:11:10,360 --> 00:11:14,920
到该向量上，然后将该投影的长度按向量的长度放大。

152
00:11:17,720 --> 00:11:19,800
花点时间想想这里发生了什么。

153
00:11:19,800 --> 00:11:23,000
我们有一个从二维空间到数轴的线性变换，它不

154
00:11:23,000 --> 00:11:26,920
是用数值向量或数值点积来定义的，它只是通

155
00:11:26,920 --> 00:11:30,760
过将空间投影到数轴的对角线副本上来定义。

156
00:11:31,400 --> 00:11:37,080
但由于变换是线性的，因此必须用某个 1x2 矩阵来描述。

157
00:11:37,080 --> 00:11:42,360
由于将 1x2 矩阵乘以 2D 向量与将该矩阵翻转并取点

158
00:11:42,360 --> 00:11:47,880
积相同，因此这种变换不可避免地与某些 2D 向量相关。

159
00:11:48,680 --> 00:11:52,600
这里的教训是，任何时候你有这些线性变换之一

160
00:11:52,600 --> 00:11:56,280
，其输出空间是数轴，无论它是如何定义的，都

161
00:11:56,280 --> 00:12:00,440
会有一些与该变换相对应的唯一向量 v，从某

162
00:12:00,440 --> 00:12:05,400
种意义上说，应用变换是与该向量的点积相同。

163
00:12:08,840 --> 00:12:11,160
对我来说，这真是太美了。

164
00:12:11,800 --> 00:12:14,360
这是数学中所谓的对偶性的一个例子。

165
00:12:14,360 --> 00:12:18,040
对偶性在数学中以多种不同的方式和形

166
00:12:18,040 --> 00:12:20,360
式出现，并且实际定义起来非常棘手。

167
00:12:20,360 --> 00:12:26,040
宽泛地说，它指的是两种数学事物之间存

168
00:12:26,040 --> 00:12:28,440
在自然但令人惊讶的对应关系的情况。

169
00:12:29,000 --> 00:12:31,400
对于您刚刚了解的线性代数情况，您

170
00:12:31,400 --> 00:12:35,880
会说向量的对偶是它编码的线性变

171
00:12:36,760 --> 00:12:40,600
换，而从某个空间到一维的线性变

172
00:12:40,600 --> 00:12:43,000
换的对偶是该空间中的某个向量。

173
00:12:43,240 --> 00:12:47,800
总而言之，从表面上看，点积是一个非常有用的几何工具

174
00:12:47,800 --> 00:12:52,920
，用于理解投影和测试向量是否倾向于指向同一方向。

175
00:12:52,920 --> 00:12:57,240
这可能是您要记住的关于点积的最重要的事情。

176
00:12:57,240 --> 00:13:02,120
但在更深层次上，将两个向量点在一起是将

177
00:13:02,120 --> 00:13:04,440
其中一个向量转化为变换世界的一种方法。

178
00:13:04,440 --> 00:13:08,040
再次强调，从数字上看，这可能感觉是一个愚蠢的强调点。

179
00:13:08,040 --> 00:13:09,960
实在是太计算了。

180
00:13:10,040 --> 00:13:13,240
但我发现这一点如此重要的原因是，在整个数学过程

181
00:13:13,240 --> 00:13:17,320
中，当你处理向量时，一旦你真正了解它的个性，有

182
00:13:17,320 --> 00:13:21,720
时你会意识到，将它理解为空间中的箭头，而不是空

183
00:13:21,720 --> 00:13:25,640
间中的箭头，会更容易理解。线性变换的物理体现。

184
00:13:25,640 --> 00:13:30,440
就好像向量实际上只是某种变换的概念简写，因为我

185
00:13:30,440 --> 00:13:35,640
们更容易考虑空间中的箭头而不是移动整个空间。

186
00:13:35,880 --> 00:13:40,440
在下一个视频中，当我谈论叉积时，您

187
00:13:40,440 --> 00:13:42,440
将看到另一个非常酷的二元性示例。

