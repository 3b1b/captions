[
 {
  "input": "[Music] Traditionally, dot products are something that's introduced really early on in a linear algebra course, typically right at the start.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   0.0,
   26.64
  ]
 },
 {
  "input": "So it might seem strange that I've pushed them back this far in the series.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   26.64,
   30.12
  ]
 },
 {
  "input": "I did this because there's a standard way to introduce the topic, which requires nothing more than a basic understanding of vectors, but a fuller understanding of the role that dot products play in math can only really be found under the light of linear transformations.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   30.12,
   43.32
  ]
 },
 {
  "input": "Before that, though, let me just briefly cover the standard way that dot products are introduced, which I'm assuming is at least partially review for a number of viewers.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   43.32,
   51.24
  ]
 },
 {
  "input": "Numerically, if you have two vectors of the same dimension, two lists of numbers with the same lengths, taking their dot product means pairing up all of the coordinates, multiplying those pairs together, and adding the result.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   51.24,
   66.68
  ]
 },
 {
  "input": "So the vector 1, 2 dotted with 3, 4 would be 1 times 3 plus 2 times 4.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   66.68,
   74.52
  ]
 },
 {
  "input": "The vector 6, 2, 8, 3 dotted with 1, 8, 5, 3 would be 6 times 1 plus 2 times 8 plus 8 times 5 plus 3 times 3.",
  "model": "nmt",
  "translatedText": "[बीथोवेन द्वारा लिखित &quot;ओड टू जॉय&quot;, पियानो के अंत तक बजता है। ] परंपरागत रूप से, डॉट उत्पाद कुछ ऐसी चीजें हैं जिन्हें रैखिक बीजगणित पाठ्यक्रम में बहुत पहले ही पेश किया जाता है, आमतौर पर शुरुआत में ही। इसलिए यह अजीब लग सकता है कि मैंने उन्हें श्रृंखला में इतना पीछे धकेल दिया है। मैंने ऐसा इसलिए किया क्योंकि विषय को प्रस्तुत करने का एक मानक तरीका है, जिसके लिए वैक्टर की बुनियादी समझ से ज्यादा कुछ की आवश्यकता नहीं है, लेकिन गणित में डॉट उत्पादों की भूमिका की पूरी समझ केवल रैखिक परिवर्तनों के प्रकाश में ही पाई जा सकती है। हालाँकि, इससे पहले, मैं संक्षेप में डॉट उत्पादों को पेश करने के मानक तरीके के बारे में बताऊंगा, जो मैं मान रहा हूं कि कई दर्शकों के लिए कम से कम आंशिक रूप से समीक्षा की गई है। संख्यात्मक रूप से, यदि आपके पास एक ही आयाम के दो वेक्टर हैं, समान लंबाई वाली संख्याओं की दो सूचियाँ हैं, तो उनके डॉट उत्पाद को लेने का अर्थ है सभी निर्देशांकों को जोड़ना, उन जोड़ियों को एक साथ गुणा करना और परिणाम जोड़ना। तो 3, 4 से युक्त वेक्टर 1, 2, 1 गुना 3 जोड़ 2 गुना 4 होगा। 1, 8, 5, 3 से युक्त वेक्टर 6, 2, 8, 3 6 गुना 1 जमा 2 गुना 8 जमा 8 गुना 5 जमा 3 गुना 3 होगा। सौभाग्य से, इस गणना की वास्तव में अच्छी ज्यामितीय व्याख्या है। दो वैक्टर, v और w के बीच डॉट उत्पाद के बारे में सोचने के लिए, w को उस रेखा पर प्रक्षेपित करने की कल्पना करें जो मूल बिंदु और v की नोक से होकर गुजरती है। इस प्रक्षेपण की लंबाई को v की लंबाई से गुणा करने पर, आपको डॉट उत्पाद v डॉट w मिलता है। सिवाय इसके कि जब w का यह प्रक्षेपण v से विपरीत दिशा की ओर इशारा कर रहा हो, वह डॉट उत्पाद वास्तव में नकारात्मक होगा। इसलिए जब दो वेक्टर आम तौर पर एक ही दिशा में इंगित करते हैं, तो उनका डॉट उत्पाद सकारात्मक होता है। जब वे लंबवत होते हैं, यानी एक का दूसरे पर प्रक्षेपण शून्य वेक्टर होता है, तो उनका डॉट उत्पाद शून्य होता है। और यदि वे आम तौर पर विपरीत दिशा में इंगित करते हैं, तो उनका डॉट उत्पाद नकारात्मक होता है। अब, यह व्याख्या अजीब तरह से असममित है। यह दो वैक्टरों के साथ बहुत अलग ढंग से व्यवहार करता है। इसलिए जब मैंने पहली बार यह सीखा, तो मुझे आश्चर्य हुआ कि ऑर्डर कोई मायने नहीं रखता। इसके बजाय आप v को w पर प्रक्षेपित कर सकते हैं, प्रक्षेपित v की लंबाई को w की लंबाई से गुणा कर सकते हैं, और वही परिणाम प्राप्त कर सकते हैं। मेरा मतलब है, क्या यह वास्तव में एक अलग प्रक्रिया की तरह महसूस नहीं होता है?",
  "time_range": [
   74.52,
   84.52
  ]
 },
 {
  "input": "Luckily, this computation has a really nice geometric interpretation.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   84.52,
   88.84
  ]
 },
 {
  "input": "To think about the dot product between two vectors, v and w, imagine projecting w onto the line that passes through the origin and the tip of v.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   88.84,
   98.28
  ]
 },
 {
  "input": "Multiplying the length of this projection by the length of v, you have the dot product v dot w.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   98.28,
   106.04
  ]
 },
 {
  "input": "Except when this projection of w is pointing in the opposite direction from v, that dot product will actually be negative.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   106.04,
   113.8
  ]
 },
 {
  "input": "So when two vectors are generally pointing in the same direction, their dot product is positive.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   113.8,
   119.4
  ]
 },
 {
  "input": "When they're perpendicular, meaning the projection of one onto the other is the zero vector, their dot product is zero.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   119.4,
   125.88
  ]
 },
 {
  "input": "And if they point in generally the opposite direction, their dot product is negative.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   125.88,
   131.64
  ]
 },
 {
  "input": "Now, this interpretation is weirdly asymmetric.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   131.64,
   134.68
  ]
 },
 {
  "input": "It treats the two vectors very differently.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   134.68,
   136.76
  ]
 },
 {
  "input": "So when I first learned this, I was surprised that order doesn't matter.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   136.76,
   140.28
  ]
 },
 {
  "input": "You could instead project v onto w, multiply the length of the projected v by the length of w, and get the same result.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   140.28,
   149.4
  ]
 },
 {
  "input": "I mean, doesn't that feel like a really different process?",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   149.4,
   154.6
  ]
 },
 {
  "input": "Here's the intuition for why order doesn't matter.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   154.6,
   157.64
  ]
 },
 {
  "input": "If v and w happened to have the same length, we could leverage some symmetry.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   157.64,
   162.2
  ]
 },
 {
  "input": "Since projecting w onto v, then multiplying the length of that projection by the length of v, is a complete mirror image of projecting v onto w, then multiplying the length of that projection by the length of w.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   162.2,
   177.16
  ]
 },
 {
  "input": "Now, if you scale one of them, say v, by some constant like 2, so that they don't have equal length, the symmetry is broken.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   177.16,
   184.84
  ]
 },
 {
  "input": "But let's think through how to interpret the dot product between this new vector, 2 times v, and w.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   184.84,
   190.84
  ]
 },
 {
  "input": "If you think of w as getting projected onto v, then the dot product 2v dot w will be exactly twice the dot product v dot w.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   190.84,
   200.28
  ]
 },
 {
  "input": "This is because when you scale v by 2, it doesn't change the length of the projection of w, but it doubles the length of the vector that you're projecting onto.",
  "model": "nmt",
  "translatedText": "यहां इस बात का अंतर्ज्ञान है कि ऑर्डर मायने क्यों नहीं रखता। यदि v और w की लंबाई समान होती, तो हम कुछ समरूपता का लाभ उठा सकते थे। चूंकि w को v पर प्रक्षेपित किया जाता है, तो उस प्रक्षेपण की लंबाई को v की लंबाई से गुणा करने पर, v को w पर प्रक्षेपित करने की एक पूर्ण दर्पण छवि होती है, फिर उस प्रक्षेपण की लंबाई को w की लंबाई से गुणा किया जाता है। अब, यदि आप उनमें से एक, मान लीजिए v, को 2 जैसे किसी स्थिरांक से मापते हैं, ताकि उनकी लंबाई समान न हो, तो समरूपता टूट जाती है। लेकिन आइए सोचें कि इस नए वेक्टर, 2 गुना v और w के बीच डॉट उत्पाद की व्याख्या कैसे करें। यदि आप w को v पर प्रक्षेपित होने के बारे में सोचते हैं, तो डॉट उत्पाद 2v dot w, डॉट उत्पाद v dot w से ठीक दोगुना होगा। ऐसा इसलिए है क्योंकि जब आप v को 2 से मापते हैं, तो यह w के प्रक्षेपण की लंबाई को नहीं बदलता है, लेकिन यह उस वेक्टर की लंबाई को दोगुना कर देता है जिस पर आप प्रक्षेपण कर रहे हैं। लेकिन दूसरी ओर, मान लें कि आप v को w पर प्रक्षेपित करने के बारे में सोच रहे थे। ठीक है, उस स्थिति में, प्रक्षेपण की लंबाई वह चीज़ है जो तब मापी जाती है जब हम v को 2 से गुणा करते हैं, लेकिन जिस वेक्टर पर आप प्रक्षेपण कर रहे हैं उसकी लंबाई स्थिर रहती है। तो समग्र प्रभाव अभी भी डॉट उत्पाद को दोगुना करना है। इसलिए भले ही इस मामले में समरूपता टूट गई है, इस स्केलिंग का डॉट उत्पाद के मूल्य पर जो प्रभाव पड़ता है वह दोनों व्याख्याओं के तहत समान है। एक अन्य बड़ा प्रश्न भी है जिसने मुझे तब भ्रमित कर दिया था जब मैंने पहली बार यह चीज़ सीखी थी। पृथ्वी पर निर्देशांक मिलान, जोड़ियों को गुणा करने और उन्हें एक साथ जोड़ने की इस संख्यात्मक प्रक्रिया का प्रक्षेपण से कोई लेना-देना क्यों है?",
  "time_range": [
   200.28,
   210.2
  ]
 },
 {
  "input": "But on the other hand, let's say you were thinking about v getting projected onto w.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   210.2,
   214.76
  ]
 },
 {
  "input": "Well, in that case, the length of the projection is the thing that gets scaled when we multiply v by 2, but the length of the vector that you're projecting onto stays constant.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   214.76,
   223.32
  ]
 },
 {
  "input": "So the overall effect is still to just double the dot product.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   223.32,
   227.0
  ]
 },
 {
  "input": "So even though symmetry is broken in this case, the effect that this scaling has on the value of the dot product is the same under both interpretations.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   227.0,
   236.76
  ]
 },
 {
  "input": "There's also one other big question that confused me when I first learned this stuff.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   236.76,
   240.76
  ]
 },
 {
  "input": "Why on earth does this numerical process of matching coordinates, multiplying pairs, and adding them together have anything to do with projection?",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   240.76,
   248.76
  ]
 },
 {
  "input": "Well, to give a satisfactory answer, and also to do full justice to the significance of the dot product, we need to unearth something a little bit deeper going on here, which often goes by the name duality.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   248.76,
   261.88
  ]
 },
 {
  "input": "But before getting into that, I need to spend some time talking about linear transformations from multiple dimensions to one dimension, which is just the number line.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   261.88,
   272.52
  ]
 },
 {
  "input": "These are functions that take in a 2d vector and spit out some number, but linear transformations are of course much more restricted than your run-of-the-mill function with a 2d input and a 1d output.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   272.52,
   282.76
  ]
 },
 {
  "input": "As with transformations in higher dimensions, like the ones I talked about in chapter 3, there are some formal properties that make these functions linear, but I'm going to purposefully ignore those here so as to not distract from our end goal, and instead focus on a certain visual property that's equivalent to all the formal stuff.",
  "model": "nmt",
  "translatedText": "खैर, एक संतोषजनक उत्तर देने के लिए, और डॉट उत्पाद के महत्व के साथ पूर्ण न्याय करने के लिए, हमें यहां चल रही कुछ और गहराई का पता लगाने की जरूरत है, जिसे अक्सर द्वैत के नाम से जाना जाता है। लेकिन इसमें शामिल होने से पहले, मुझे कई आयामों से एक आयाम, जो कि सिर्फ संख्या रेखा है, में रैखिक परिवर्तनों के बारे में बात करने में कुछ समय बिताने की ज़रूरत है। ये ऐसे फ़ंक्शन हैं जो 2डी वेक्टर लेते हैं और कुछ संख्याएं निकालते हैं, लेकिन रैखिक परिवर्तन निश्चित रूप से 2डी इनपुट और 1डी आउटपुट के साथ आपके रन-ऑफ-द-मिल फ़ंक्शन की तुलना में बहुत अधिक प्रतिबंधित हैं। उच्च आयामों में परिवर्तनों के साथ, जैसे कि मैंने अध्याय 3 में बात की थी, कुछ औपचारिक गुण हैं जो इन कार्यों को रैखिक बनाते हैं, लेकिन मैं जानबूझकर उन्हें यहां अनदेखा करने जा रहा हूं ताकि हमारे अंतिम लक्ष्य से ध्यान न भटके, और इसके बजाय एक निश्चित दृश्य संपत्ति पर ध्यान केंद्रित करें जो सभी औपचारिक चीज़ों के बराबर है। यदि आप समान दूरी वाले बिंदुओं की एक पंक्ति लेते हैं और एक परिवर्तन लागू करते हैं, तो एक रैखिक परिवर्तन उन बिंदुओं को आउटपुट स्थान, जो कि संख्या रेखा है, में उतरने के बाद समान दूरी पर रखेगा। अन्यथा, यदि बिंदुओं की कुछ पंक्तियाँ असमान दूरी पर हैं, तो आपका परिवर्तन रैखिक नहीं है। जैसा कि हमने पहले देखे गए मामलों में किया है, इन रैखिक परिवर्तनों में से एक पूरी तरह से इस बात से निर्धारित होता है कि यह आई-हैट और जे-हैट कहां लेता है, लेकिन इस बार उन आधार वैक्टरों में से प्रत्येक एक संख्या पर उतरता है, इसलिए जब हम रिकॉर्ड करते हैं तो कहां वे एक मैट्रिक्स के कॉलम के रूप में आते हैं, उनमें से प्रत्येक कॉलम में केवल एक ही संख्या होती है। यह 1x2 मैट्रिक्स है.",
  "time_range": [
   282.76,
   298.92
  ]
 },
 {
  "input": "If you take a line of evenly spaced dots and apply a transformation, a linear transformation will keep those dots evenly spaced once they land in the output space, which is the number line.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   298.92,
   312.2
  ]
 },
 {
  "input": "Otherwise, if there's some line of dots that gets unevenly spaced, then your transformation is not linear.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   312.2,
   319.16
  ]
 },
 {
  "input": "As with the cases we've seen before, one of these linear transformations is completely determined by where it takes i-hat and j-hat, but this time each one of those basis vectors just lands on a number, so when we record where they land as the columns of a matrix, each of those columns just has a single number.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   319.16,
   338.28
  ]
 },
 {
  "input": "This is a 1x2 matrix.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   338.28,
   341.64
  ]
 },
 {
  "input": "Let's walk through an example of what it means to apply one of these transformations to a vector.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   341.64,
   346.2
  ]
 },
 {
  "input": "Let's say you have a linear transformation that takes i-hat to 1 and j-hat to negative 2.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   346.2,
   352.28
  ]
 },
 {
  "input": "To follow where a vector with coordinates, say, 4, 3 ends up, think of breaking up this vector as 4 times i-hat plus 3 times j-hat.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   352.28,
   361.64
  ]
 },
 {
  "input": "A consequence of linearity is that after the transformation, the vector will be 4 times the place where i-hat lands, 1, plus 3 times the place where j-hat lands, negative 2, which in this case implies that it lands on negative 2.",
  "model": "nmt",
  "translatedText": "आइए एक उदाहरण देखें कि इन परिवर्तनों में से किसी एक को वेक्टर पर लागू करने का क्या मतलब है। मान लीजिए कि आपके पास एक रैखिक परिवर्तन है जो आई-हैट को 1 और जे-हैट को नकारात्मक 2 पर ले जाता है। यह जानने के लिए कि निर्देशांक, मान लीजिए, 4, 3 वाला एक वेक्टर कहां समाप्त होता है, इस वेक्टर को 4 गुना आई-हैट प्लस 3 गुना जे-हैट के रूप में तोड़ने के बारे में सोचें। रैखिकता का एक परिणाम यह है कि परिवर्तन के बाद, वेक्टर उस स्थान का 4 गुना होगा जहां आई-हैट उतरता है, 1, साथ ही उस स्थान का 3 गुना जहां जे-हैट उतरता है, नकारात्मक 2, जिसका इस मामले में तात्पर्य है कि यह नकारात्मक पर उतरता है 2.",
  "time_range": [
   361.64,
   377.96
  ]
 },
 {
  "input": "When you do this calculation purely numerically, it's matrix vector multiplication.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   377.96,
   383.24
  ]
 },
 {
  "input": "Now, this numerical operation of multiplying a 1x2 matrix by a vector feels just like taking the dot product of two vectors.",
  "model": "nmt",
  "translatedText": "जब आप यह गणना पूर्णतः संख्यात्मक रूप से करते हैं, तो यह मैट्रिक्स वेक्टर गुणन होता है। अब, 1x2 मैट्रिक्स को एक वेक्टर से गुणा करने का यह संख्यात्मक ऑपरेशन बिल्कुल दो वैक्टर के डॉट उत्पाद को लेने जैसा लगता है। क्या वह 1x2 मैट्रिक्स एक वेक्टर की तरह नहीं दिखता है जिसे हमने उसकी तरफ झुका दिया है?",
  "time_range": [
   383.24,
   393.16
  ]
 },
 {
  "input": "Doesn't that 1x2 matrix just look like a vector that we tipped on its side?",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   393.16,
   397.88
  ]
 },
 {
  "input": "In fact, we could say right now that there's a nice association between 1x2 matrices and 2D vectors, defined by tilting the numerical representation of a vector on its side to get the associated matrix, or to tip the matrix back up to get the associated vector.",
  "model": "nmt",
  "translatedText": "वास्तव में, हम अभी कह सकते हैं कि 1x2 मैट्रिक्स और 2डी वेक्टर के बीच एक अच्छा संबंध है, जिसे संबंधित मैट्रिक्स प्राप्त करने के लिए वेक्टर के संख्यात्मक प्रतिनिधित्व को अपनी तरफ झुकाने से परिभाषित किया जाता है, या संबंधित वेक्टर प्राप्त करने के लिए मैट्रिक्स को वापस ऊपर की ओर झुकाया जाता है।.",
  "time_range": [
   397.88,
   413.4
  ]
 },
 {
  "input": "Since we're just looking at numerical expressions right now, going back and forth between vectors and 1x2 matrices might feel like a silly thing to do.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   413.4,
   421.56
  ]
 },
 {
  "input": "But this suggests something that's truly awesome from the geometric view.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   421.56,
   425.48
  ]
 },
 {
  "input": "There's some kind of connection between linear transformations that take vectors to numbers and vectors themselves.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   425.48,
   432.52
  ]
 },
 {
  "input": "Let me show an example that clarifies the significance, and which just so happens to also answer the dot product puzzle from earlier.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   432.52,
   441.96
  ]
 },
 {
  "input": "Unlearn what you have learned, and imagine that you don't already know that the dot product relates to projection.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   441.96,
   448.92
  ]
 },
 {
  "input": "What I'm going to do here is take a copy of the number line and place it diagonally in space somehow, with the number 0 sitting at the origin.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   448.92,
   456.2987234042554
  ]
 },
 {
  "input": "Now think of the two-dimensional unit vector, whose tip sits where the number 1 on the number line is.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   456.2987234042554,
   462.26451612903224
  ]
 },
 {
  "input": "I want to give that guy a name, U-hat.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   462.26451612903224,
   465.56
  ]
 },
 {
  "input": "This little guy plays an important role in what's about to happen, so just keep him in the back of your mind.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   465.56,
   470.92
  ]
 },
 {
  "input": "If we project 2D vectors straight onto this diagonal number line, in effect, we've just defined a function that takes 2D vectors to numbers.",
  "model": "nmt",
  "translatedText": "चूँकि अभी हम केवल संख्यात्मक अभिव्यक्तियों को देख रहे हैं, इसलिए वैक्टर और 1x2 मैट्रिक्स के बीच आगे-पीछे जाना एक मूर्खतापूर्ण कार्य जैसा लग सकता है। लेकिन यह कुछ ऐसा सुझाता है जो ज्यामितीय दृष्टि से वास्तव में अद्भुत है। रैखिक परिवर्तनों के बीच कुछ प्रकार का संबंध है जो सदिशों को संख्याओं और स्वयं सदिशों तक ले जाता है। मैं एक उदाहरण दिखाता हूं जो महत्व को स्पष्ट करता है, और जो कि पहले की डॉट उत्पाद पहेली का उत्तर भी देता है। आपने जो सीखा है उसे अनसीखा करें, और कल्पना करें कि आप पहले से ही नहीं जानते हैं कि डॉट उत्पाद प्रक्षेपण से संबंधित है। मैं यहां जो करने जा रहा हूं वह संख्या रेखा की एक प्रति लेना है और इसे किसी भी तरह तिरछे स्थान पर रखना है, जिसमें संख्या 0 मूल पर बैठी है। अब द्वि-आयामी इकाई वेक्टर के बारे में सोचें, जिसका सिरा वहां बैठता है जहां संख्या रेखा पर संख्या 1 है। मैं उस आदमी को एक नाम देना चाहता हूं, यू-हैट। जो होने वाला है उसमें यह छोटा लड़का एक महत्वपूर्ण भूमिका निभाता है, इसलिए बस उसे अपने दिमाग में रखें। यदि हम 2डी वैक्टर को सीधे इस विकर्ण संख्या रेखा पर प्रक्षेपित करते हैं, तो वास्तव में, हमने एक फ़ंक्शन को परिभाषित किया है जो 2डी वैक्टर को संख्याओं तक ले जाता है। इसके अलावा, यह फ़ंक्शन वास्तव में रैखिक है, क्योंकि यह हमारे दृश्य परीक्षण को पास करता है कि समान दूरी वाले बिंदुओं की कोई भी रेखा संख्या रेखा पर आने के बाद समान दूरी पर बनी रहती है। बस स्पष्ट होने के लिए, भले ही मैंने संख्या रेखा को इस तरह 2डी स्पेस में एम्बेड किया है, फ़ंक्शन के आउटपुट संख्याएं हैं, 2डी वेक्टर नहीं। आपको एक ऐसे फ़ंक्शन के बारे में सोचना चाहिए जो दो निर्देशांक लेता है और एक ही निर्देशांक आउटपुट करता है। लेकिन वह वेक्टर यू-हैट एक द्वि-आयामी वेक्टर है, जो इनपुट स्पेस में रहता है। यह बस इस तरह से स्थित है कि संख्या रेखा के एम्बेडिंग के साथ ओवरलैप हो जाता है। इस प्रक्षेपण के साथ, हमने 2डी वैक्टर से संख्याओं तक एक रैखिक परिवर्तन को परिभाषित किया है, इसलिए हम किसी प्रकार के 1x2 मैट्रिक्स को ढूंढने में सक्षम होंगे जो उस परिवर्तन का वर्णन करता है। उस 1x2 मैट्रिक्स को खोजने के लिए, आइए इस विकर्ण संख्या रेखा सेटअप पर ज़ूम करें और सोचें कि आई-हैट और जे-हैट प्रत्येक कहाँ उतरते हैं, क्योंकि वे लैंडिंग स्पॉट मैट्रिक्स के कॉलम होने जा रहे हैं। यह हिस्सा बहुत बढ़िया है.",
  "time_range": [
   470.92,
   479.48
  ]
 },
 {
  "input": "What's more, this function is actually linear, since it passes our visual test that any line of evenly spaced dots remains evenly spaced once it lands on the number line.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   479.48,
   489.08
  ]
 },
 {
  "input": "Just to be clear, even though I've embedded the number line in 2D space like this, the outputs of the function are numbers, not 2D vectors.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   489.08,
   499.72
  ]
 },
 {
  "input": "You should think of a function that takes in two coordinates and outputs a single coordinate.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   499.72,
   504.92
  ]
 },
 {
  "input": "But that vector U-hat is a two-dimensional vector, living in the input space.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   504.92,
   509.24
  ]
 },
 {
  "input": "It's just situated in such a way that overlaps with the embedding of the number line.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   509.24,
   513.16
  ]
 },
 {
  "input": "With this projection, we just defined a linear transformation from 2D vectors to numbers, so we're going to be able to find some kind of 1x2 matrix that describes that transformation.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   513.16,
   525.32
  ]
 },
 {
  "input": "To find that 1x2 matrix, let's zoom in on this diagonal number line setup and think about where I-hat and J-hat each land, since those landing spots are going to be the columns of the matrix.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   525.32,
   538.36
  ]
 },
 {
  "input": "This part's super cool.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   538.36,
   539.4928735632184
  ]
 },
 {
  "input": "We can reason through it with a really elegant piece of symmetry.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   539.4928735632184,
   542.92
  ]
 },
 {
  "input": "Since I-hat and U-hat are both unit vectors, projecting I-hat onto the line passing through U-hat looks totally symmetric to projecting U-hat onto the x-axis.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   542.92,
   553.56
  ]
 },
 {
  "input": "So when we ask what number does I-hat land on when it gets projected, the answer is going to be the same as whatever U-hat lands on when it's projected onto the x-axis.",
  "model": "nmt",
  "translatedText": "हम वास्तव में समरूपता के एक सुंदर टुकड़े के साथ इसके माध्यम से तर्क कर सकते हैं। चूंकि आई-हैट और यू-हैट दोनों यूनिट वेक्टर हैं, इसलिए आई-हैट को यू-हैट से गुजरने वाली लाइन पर प्रक्षेपित करना यू-हैट को एक्स-अक्ष पर प्रक्षेपित करने के लिए पूरी तरह से सममित दिखता है। इसलिए जब हम पूछते हैं कि जब आई-हैट प्रक्षेपित होता है तो वह किस नंबर पर उतरता है, तो उत्तर वही होगा जो यू-हैट होता है जब उसे एक्स-अक्ष पर प्रक्षेपित किया जाता है। लेकिन यू-हैट को एक्स-अक्ष पर प्रक्षेपित करने का अर्थ केवल यू-हैट का एक्स-निर्देशांक लेना है। तो समरूपता से, जब आई-हैट को उस विकर्ण संख्या रेखा पर प्रक्षेपित किया जाता है तो वह संख्या यू-हैट का x-निर्देशांक होगी। क्या यह अच्छा नहीं है?",
  "time_range": [
   553.56,
   562.68
  ]
 },
 {
  "input": "But projecting U-hat onto the x-axis just means taking the x-coordinate of U-hat.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   562.68,
   568.92
  ]
 },
 {
  "input": "So by symmetry, the number where I-hat lands when it's projected onto that diagonal number line is going to be the x-coordinate of U-hat.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   568.92,
   576.6228571428571
  ]
 },
 {
  "input": "Isn't that cool?",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   576.6228571428571,
   579.08
  ]
 },
 {
  "input": "The reasoning is almost identical for the J-hat case.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   579.08,
   581.628
  ]
 },
 {
  "input": "Think about it for a moment.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   581.628,
   589.24
  ]
 },
 {
  "input": "For all the same reasons, the y-coordinate of U-hat gives us the number where J-hat lands when it's projected onto the number line copy.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   589.24,
   597.4
  ]
 },
 {
  "input": "Pause and ponder that for a moment.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   597.4,
   598.76
  ]
 },
 {
  "input": "I just think that's really cool.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   598.76,
   600.92
  ]
 },
 {
  "input": "So the entries of the 1x2 matrix describing the projection transformation are going to be the coordinates of U-hat.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   600.92,
   607.8
  ]
 },
 {
  "input": "And computing this projection transformation for arbitrary vectors in space, which requires multiplying that matrix by those vectors, is computationally identical to taking a dot product with U-hat.",
  "model": "nmt",
  "translatedText": "जे-हैट मामले के लिए तर्क लगभग समान है। एक पल के लिए इसके बारे में सोचो। सभी समान कारणों से, यू-हैट का y-निर्देशांक हमें वह संख्या देता है जहां जे-हैट उतरता है जब इसे संख्या रेखा प्रतिलिपि पर प्रक्षेपित किया जाता है। एक पल के लिए रुकें और उस पर विचार करें। मैं बस यही सोचता हूं कि यह वास्तव में अच्छा है। तो प्रक्षेपण परिवर्तन का वर्णन करने वाले 1x2 मैट्रिक्स की प्रविष्टियाँ यू-हैट के निर्देशांक होने जा रही हैं। और अंतरिक्ष में मनमाने ढंग से वैक्टर के लिए इस प्रक्षेपण परिवर्तन की गणना करना, जिसके लिए उस मैट्रिक्स को उन वैक्टर से गुणा करना आवश्यक है, कम्प्यूटेशनल रूप से यू-हैट के साथ एक डॉट उत्पाद लेने के समान है। यही कारण है कि एक यूनिट वेक्टर के साथ डॉट उत्पाद लेने की व्याख्या उस यूनिट वेक्टर के विस्तार पर एक वेक्टर को प्रक्षेपित करने और लंबाई लेने के रूप में की जा सकती है। तो गैर-इकाई वैक्टर के बारे में क्या?",
  "time_range": [
   607.8,
   621.8
  ]
 },
 {
  "input": "This is why taking the dot product with a unit vector can be interpreted as projecting a vector onto the span of that unit vector and taking the length.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   621.8,
   634.12
  ]
 },
 {
  "input": "So what about non-unit vectors?",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   634.12,
   636.2
  ]
 },
 {
  "input": "For example, let's say we take that unit vector U-hat, but we scale it up by a factor of 3.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   636.2,
   641.24
  ]
 },
 {
  "input": "Numerically, each of its components gets multiplied by 3.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   641.24,
   644.76
  ]
 },
 {
  "input": "So looking at the matrix associated with that vector, it takes I-hat and J-hat to three times the values where they landed before.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   644.76,
   655.4
  ]
 },
 {
  "input": "Since this is all linear, it implies more generally that the new matrix can be interpreted as projecting any vector onto the number line copy and multiplying where it lands by 3.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   655.4,
   665.32
  ]
 },
 {
  "input": "This is why the dot product with a non-unit vector can be interpreted as first projecting onto that vector, then scaling up the length of that projection by the length of the vector.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   665.32,
   677.72
  ]
 },
 {
  "input": "Take a moment to think about what happened here.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   677.72,
   679.8
  ]
 },
 {
  "input": "We had a linear transformation from 2D space to the number line, which was not defined in terms of numerical vectors or numerical dot products, it was just defined by projecting space onto a diagonal copy of the number line.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   679.8,
   691.4
  ]
 },
 {
  "input": "But because the transformation is linear, it was necessarily described by some 1x2 matrix.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   691.4,
   697.08
  ]
 },
 {
  "input": "And since multiplying a 1x2 matrix by a 2D vector is the same as turning that matrix on its side and taking a dot product, this transformation was inescapably related to some 2D vector.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   697.08,
   708.68
  ]
 },
 {
  "input": "The lesson here is that any time you have one of these linear transformations whose output space is the number line, no matter how it was defined, there's going to be some unique vector v corresponding to that transformation, in the sense that applying the transformation is the same thing as taking a dot product with that vector.",
  "model": "nmt",
  "translatedText": "उदाहरण के लिए, मान लें कि हम उस यूनिट वेक्टर यू-हैट को लेते हैं, लेकिन हम इसे 3 के कारक से बढ़ाते हैं। संख्यात्मक रूप से, इसके प्रत्येक घटक को 3 से गुणा किया जाता है। तो उस वेक्टर से जुड़े मैट्रिक्स को देखते हुए, यह आई-हैट और जे-हैट को उन मूल्यों से तीन गुना तक ले जाता है जहां वे पहले पहुंचे थे। चूंकि यह सब रैखिक है, इसलिए इसका अधिक सामान्य अर्थ यह है कि नए मैट्रिक्स की व्याख्या किसी भी वेक्टर को संख्या रेखा की प्रतिलिपि पर प्रक्षेपित करने और जहां वह पहुंचता है उसे 3 से गुणा करने के रूप में किया जा सकता है। यही कारण है कि एक गैर-यूनिट वेक्टर वाले डॉट उत्पाद की व्याख्या पहले उस वेक्टर पर प्रक्षेपित करने, फिर उस प्रक्षेपण की लंबाई को वेक्टर की लंबाई से बढ़ाने के रूप में की जा सकती है। यहाँ क्या हुआ इसके बारे में सोचने के लिए एक क्षण रुकें। हमने 2डी स्पेस से संख्या रेखा तक एक रैखिक परिवर्तन किया था, जिसे संख्यात्मक वैक्टर या संख्यात्मक डॉट उत्पादों के संदर्भ में परिभाषित नहीं किया गया था, इसे केवल संख्या रेखा की एक विकर्ण प्रतिलिपि पर अंतरिक्ष को प्रक्षेपित करके परिभाषित किया गया था। लेकिन चूँकि परिवर्तन रैखिक है, इसलिए इसे आवश्यक रूप से कुछ 1x2 मैट्रिक्स द्वारा वर्णित किया गया था। और चूँकि 1x2 मैट्रिक्स को 2D वेक्टर से गुणा करना उस मैट्रिक्स को उसकी तरफ मोड़ने और एक डॉट उत्पाद लेने के समान है, यह परिवर्तन अपरिहार्य रूप से कुछ 2D वेक्टर से संबंधित था। यहां सबक यह है कि जब भी आपके पास इन रैखिक परिवर्तनों में से एक होता है जिसका आउटपुट स्थान संख्या रेखा है, इससे कोई फर्क नहीं पड़ता कि इसे कैसे परिभाषित किया गया है, उस परिवर्तन के अनुरूप कुछ अद्वितीय वेक्टर वी होने जा रहा है, इस अर्थ में कि परिवर्तन को लागू करना है उस वेक्टर के साथ एक डॉट उत्पाद लेने जैसी ही बात। मेरे लिए, यह अत्यंत सुंदर है। यह गणित में द्वैत नामक चीज़ का एक उदाहरण है। पूरे गणित में द्वंद्व कई अलग-अलग तरीकों और रूपों में दिखाई देता है, और वास्तव में इसे परिभाषित करना बहुत मुश्किल है। संक्षेप में कहें तो, यह उन स्थितियों को संदर्भित करता है जहां आपके पास दो प्रकार की गणितीय चीज़ों के बीच एक स्वाभाविक लेकिन आश्चर्यजनक पत्राचार होता है। रैखिक बीजगणित मामले के लिए जिसके बारे में आपने अभी सीखा है, आप कहेंगे कि एक वेक्टर का दोहरा रैखिक परिवर्तन है जिसे वह एन्कोड करता है, और कुछ स्थान से एक आयाम तक रैखिक परिवर्तन का दोहरा उस स्थान में एक निश्चित वेक्टर है। तो संक्षेप में, सतह पर, डॉट उत्पाद अनुमानों को समझने और यह परीक्षण करने के लिए एक बहुत ही उपयोगी ज्यामितीय उपकरण है कि वेक्टर एक ही दिशा में इंगित करते हैं या नहीं। और यह शायद आपके लिए डॉट उत्पाद के बारे में याद रखने वाली सबसे महत्वपूर्ण बात है। लेकिन गहरे स्तर पर, दो वैक्टरों को एक साथ जोड़ना उनमें से एक को परिवर्तनों की दुनिया में अनुवाद करने का एक तरीका है। फिर, संख्यात्मक रूप से, यह ज़ोर देने के लिए एक मूर्खतापूर्ण बिंदु जैसा लग सकता है। यह बहुत अधिक कम्प्यूटेशनल है.",
  "time_range": [
   708.68,
   728.84
  ]
 },
 {
  "input": "To me, this is utterly beautiful.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   728.84,
   731.8
  ]
 },
 {
  "input": "It's an example of something in math called duality.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   731.8,
   734.36
  ]
 },
 {
  "input": "Duality shows up in many different ways and forms throughout math, and it's super tricky to actually define.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   734.36,
   740.36
  ]
 },
 {
  "input": "Loosely speaking, it refers to situations where you have a natural but surprising correspondence between two types of mathematical thing.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   740.36,
   749.0
  ]
 },
 {
  "input": "For the linear algebra case that you just learned about, you'd say that the dual of a vector is the linear transformation that it encodes, and the dual of a linear transformation from some space to one dimension is a certain vector in that space.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   749.0,
   763.24
  ]
 },
 {
  "input": "So to sum up, on the surface, the dot product is a very useful geometric tool for understanding projections and for testing whether or not vectors tend to point in the same direction.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   763.24,
   772.92
  ]
 },
 {
  "input": "And that's probably the most important thing for you to remember about the dot product.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   772.92,
   777.24
  ]
 },
 {
  "input": "But at a deeper level, dotting two vectors together is a way to translate one of them into the world of transformations.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   777.24,
   784.44
  ]
 },
 {
  "input": "Again, numerically, this might feel like a silly point to emphasize.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   784.44,
   788.04
  ]
 },
 {
  "input": "It's just too computationally.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   788.04,
   790.04
  ]
 },
 {
  "input": "But the reason I find this so important is that throughout math, when you're dealing with a vector, once you really get to know its personality, sometimes you realize that it's easier to understand it not as an arrow in space, but as the physical embodiment of a linear transformation.",
  "model": "nmt",
  "translatedText": "लेकिन मुझे यह इतना महत्वपूर्ण लगता है इसका कारण यह है कि पूरे गणित में, जब आप एक वेक्टर के साथ काम कर रहे होते हैं, तो एक बार जब आप वास्तव में इसके व्यक्तित्व को जान लेते हैं, तो कभी-कभी आपको एहसास होता है कि इसे अंतरिक्ष में एक तीर के रूप में नहीं, बल्कि एक वेक्टर के रूप में समझना आसान है। एक रेखीय परिवर्तन का भौतिक अवतार.",
  "time_range": [
   790.04,
   805.64
  ]
 },
 {
  "input": "It's as if the vector is really just a conceptual shorthand for a certain transformation, since it's easier for us to think about arrows in space rather than moving all of that space.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   805.64,
   815.88
  ]
 },
 {
  "input": "In the next video, you'll see another really cool example of this duality in action as I talk about the cross product.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   815.88,
   820.44
  ]
 }
]