1
00:00:00,000 --> 00:00:08,720
Heute möchte ich Ihnen eine nette Möglichkeit vorstellen, das Rätsel „Türme von

2
00:00:08,720 --> 00:00:11,240
Hanoi“ zu lösen, indem Sie einfach in einem anderen Zahlensystem zählen.

3
00:00:11,240 --> 00:00:16,720
Und überraschenderweise geht es dabei um die Suche nach einer Kurve, die Sierpinskis Dreieck ausfüllt.

4
00:00:16,720 --> 00:00:20,920
Ich habe davon von einem meiner ehemaligen Informatikdozenten erfahren, sein Name ist Keith Schwartz, und

5
00:00:20,920 --> 00:00:24,840
ich muss sagen, dieser Mann ist einer der besten Pädagogen, die ich je getroffen habe.

6
00:00:24,840 --> 00:00:28,560
Ich habe tatsächlich einen Teil des Gesprächs aufgezeichnet, in dem er mir diese Dinge

7
00:00:28,560 --> 00:00:42,520
gezeigt hat, damit ihr einiges von dem, was er beschrieben hat, direkt hören könnt.

8
00:00:42,520 --> 00:00:46,840
Falls Sie es nicht kennen, lassen Sie uns einfach

9
00:00:46,840 --> 00:00:54,440
erklären, was das Türme von Hanoi-Rätsel eigentlich ist.

10
00:00:54,440 --> 00:00:57,880
Stellen Sie sich diese Scheiben so vor, als hätten sie in der

11
00:00:57,880 --> 00:00:59,260
Mitte ein Loch, damit Sie sie auf einen Stift stecken können.

12
00:00:59,260 --> 00:01:05,040
Das hier abgebildete Setup verfügt über fünf Festplatten, die ich mit 0, 1, 2, 3,

13
00:01:05,040 --> 00:01:24,120
4 bezeichne, aber im Prinzip könnten Sie so viele Festplatten haben, wie Sie möchten.

14
00:01:24,120 --> 00:01:29,440
Zum Beispiel muss Ihr erster Zug das Verschieben von Datenträger 0 beinhalten, da sich auf jedem

15
00:01:29,440 --> 00:01:33,320
anderen Datenträger Dinge befinden, die aus dem Weg geräumt werden müssen, bevor er verschoben werden kann.

16
00:01:33,320 --> 00:01:38,000
Danach können Sie Diskette 1 verschieben, aber sie muss auf den Stift gesetzt

17
00:01:38,000 --> 00:01:44,040
werden, auf dem sich derzeit keine Diskette 0 befindet, da Sie andernfalls

18
00:01:44,040 --> 00:01:45,040
eine größere Diskette auf eine kleinere legen würden, was nicht erlaubt ist.

19
00:01:45,040 --> 00:01:49,600
Wenn Sie das noch nie zuvor gesehen haben, empfehle ich Ihnen

20
00:01:49,600 --> 00:02:00,320
dringend, innezuhalten, einige Bücher unterschiedlicher Größe hervorzuholen und es selbst auszuprobieren.

21
00:02:00,320 --> 00:02:04,760
Jetzt zeigte mir Keith etwas wirklich Überraschendes an diesem Rätsel, nämlich

22
00:02:04,760 --> 00:02:10,200
dass man es lösen kann, indem man einfach binär hochzählt und

23
00:02:10,200 --> 00:02:12,480
den Rhythmus dieser Zählung mit einem bestimmten Rhythmus der Scheibenbewegungen verknüpft.

24
00:02:12,480 --> 00:02:16,420
Für alle, die mit Binärdateien nicht vertraut sind, werde

25
00:02:16,420 --> 00:02:17,420
ich mir hier zunächst einen kurzen Überblick nehmen.

26
00:02:17,420 --> 00:02:21,260
Selbst wenn Sie mit Binärzahlen vertraut sind, möchte ich sie mit einem Fokus auf den

27
00:02:21,260 --> 00:02:26,560
Zählrhythmus erklären, über den Sie vielleicht schon einmal nachgedacht haben, vielleicht aber auch nicht.

28
00:02:26,560 --> 00:02:30,500
Jede Beschreibung von Binärzahlen beginnt typischerweise mit einer Betrachtung unserer üblichen Art,

29
00:02:30,500 --> 00:02:36,100
Zahlen darzustellen, was wir Basis 10 nennen, da wir 10 separate Ziffern

30
00:02:36,100 --> 00:02:38,560
verwenden, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 .

31
00:02:38,560 --> 00:02:44,220
Der Zählrhythmus beginnt mit dem Durchlaufen aller 10 dieser Ziffern.

32
00:02:45,220 --> 00:02:52,320
Wenn Ihnen dann die neuen Ziffern ausgehen, drücken Sie die nächste Zahl, 10, mit zwei Ziffern aus, 1, 0.

33
00:02:52,320 --> 00:02:56,760
Sie sagen, dass die 1 an der Zehnerstelle steht, da sie dazu gedacht ist, die Zehnergruppe einzukapseln,

34
00:02:56,760 --> 00:03:02,540
bis zu der Sie bereits gezählt haben, und gleichzeitig die Einerstelle zum Zurücksetzen auf 0 freizugeben.

35
00:03:02,540 --> 00:03:08,280
Der Rhythmus des Zählens wiederholt sich wie folgt: 9 hochzählen, bis

36
00:03:08,280 --> 00:03:13,000
zur Zehnerstelle weiterzählen, weitere 9 hochzählen, bis zur Zehnerstelle weiterzählen usw.

37
00:03:13,000 --> 00:03:19,800
Nun, nachdem Sie diesen Vorgang neunmal wiederholt haben, wechseln Sie zu einer

38
00:03:19,800 --> 00:03:24,640
Hunderterstelle, einer Ziffer, die festhält, wie viele 100er-Gruppen Sie getroffen haben, wodurch

39
00:03:24,640 --> 00:03:30,040
die anderen beiden Ziffern frei werden und auf 0 zurückgesetzt werden können.

40
00:03:30,040 --> 00:03:34,060
Auf diese Weise ist der Rhythmus des Zählens gewissermaßen selbstähnlich.

41
00:03:34,060 --> 00:03:38,560
Selbst wenn Sie auf einen größeren Maßstab herauszoomen, sieht der Vorgang so

42
00:03:39,120 --> 00:03:43,960
aus, als würden Sie etwas tun, sich umdrehen, das Gleiche tun, umdrehen

43
00:03:43,960 --> 00:03:49,960
und neunmal wiederholen, bevor es zu einem noch größeren Überschlag kommt.

44
00:03:49,960 --> 00:03:56,200
Im Binärformat, auch als Basis-2 bekannt, beschränken Sie sich auf zwei Ziffern, 0 und

45
00:03:56,200 --> 00:03:59,700
1, die üblicherweise als Bits bezeichnet werden, was die Abkürzung für Binärziffern ist.

46
00:03:59,700 --> 00:04:03,960
Das Ergebnis ist, dass man beim Zählen ständig umdrehen muss.

47
00:04:03,960 --> 00:04:08,080
Nachdem Sie 0, 1 gezählt haben, sind Ihnen bereits die Bits ausgegangen, also müssen Sie sich auf die

48
00:04:08,600 --> 00:04:13,440
Zweierstelle begeben, 1-0 schreiben und dem Drang Ihres auf Basis 10 trainierten Gehirns widerstehen, dies als 10

49
00:04:13,440 --> 00:04:20,120
zu lesen, und Verstehen Sie es stattdessen so, dass es 1 Gruppe von 2 plus 0 bedeutet.

50
00:04:20,120 --> 00:04:26,400
Erhöhen Sie dann die Zahl auf 1-1, was 3 darstellt, und schon müssen Sie noch einmal umdrehen,

51
00:04:26,400 --> 00:04:30,920
und da an der Stelle dieser Zwei eine 1 steht, muss auch diese umgedreht werden, sodass

52
00:04:30,920 --> 00:04:37,800
Sie 1-0-0 erhalten, was 1 darstellt Gruppe von 4 plus 0 Gruppen von 2 plus 0.

53
00:04:37,800 --> 00:04:44,660
So wie Ziffern in der Basis 10 Zehnerpotenzen darstellen,

54
00:04:44,660 --> 00:04:46,380
repräsentieren Bits in der Basis 2 verschiedene Zweierpotenzen.

55
00:04:46,380 --> 00:04:50,360
Anstatt also über einen 10er-Platz, einen 100er-Platz, einen 1000er-Platz und ähnliches zu

56
00:04:50,360 --> 00:04:55,800
sprechen, reden Sie über einen 2er-Platz, einen 4er-Platz und einen 8er-Platz.

57
00:04:55,800 --> 00:05:01,080
Der Zählrhythmus ist jetzt viel schneller, aber das macht es fast deutlicher.

58
00:05:01,080 --> 00:05:02,940
Den letzten umdrehen, einmal umdrehen.

59
00:05:02,940 --> 00:05:04,680
Den letzten wenden und zweimal wenden.

60
00:05:04,680 --> 00:05:06,380
Den letzten umdrehen, einmal umdrehen.

61
00:05:06,380 --> 00:05:09,100
Den letzten wenden und dreimal wenden.

62
00:05:09,100 --> 00:05:13,980
Auch hier besteht eine gewisse Selbstähnlichkeit zu diesem Muster.

63
00:05:13,980 --> 00:05:22,480
Auf jeder Skala besteht der Prozess darin, etwas zu tun, sich umzudrehen und dann dasselbe noch einmal zu tun.

64
00:05:22,480 --> 00:05:27,980
Im kleinen Maßstab, beispielsweise beim Zählen bis 3, was binär 1-1 ist, bedeutet dies, dass das

65
00:05:27,980 --> 00:05:33,320
letzte Bit umgedreht wird, auf die Zwei umgedreht wird und dann das letzte Bit umgedreht wird.

66
00:05:33,320 --> 00:05:40,000
In einem größeren Maßstab, etwa beim Zählen bis 15, also 1-1-1-1, besteht der Vorgang darin, die letzten 3 bis 7 zählen

67
00:05:40,000 --> 00:05:47,260
zu lassen, an die Stelle der 8 zu wechseln und dann die letzten 3 Bits wieder hochzählen zu lassen .

68
00:05:47,260 --> 00:05:53,040
Wenn man bis 255 zählt, was 8 aufeinanderfolgenden Einsen entspricht, sieht das so aus,

69
00:05:53,040 --> 00:05:57,420
als würde man die letzten 7 Bits hochzählen, bis sie voll sind, dann zur

70
00:05:57,420 --> 00:06:00,080
Stelle der 128 übergehen und dann die letzten 7 Bits wieder hochzählen lassen.

71
00:06:01,080 --> 00:06:05,680
Also gut, die überraschende Tatsache, die Keith mir mit dieser Mini-Einführung gezeigt hat, ist,

72
00:06:05,680 --> 00:06:10,440
dass wir diesen Rhythmus verwenden können, um die Türme von Hanoi zu lösen.

73
00:06:10,440 --> 00:06:12,720
Sie beginnen mit dem Zählen bei 0.

74
00:06:12,720 --> 00:06:18,640
Wenn Sie nur das letzte Bit von 0 auf 1 umdrehen,

75
00:06:18,640 --> 00:06:22,420
verschieben Sie die Scheibe 0 um einen Stift nach rechts.

76
00:06:22,420 --> 00:06:29,140
Wenn es sich bereits auf dem Stift ganz rechts befand, schleifen Sie es einfach zurück zum ersten Stift.

77
00:06:29,200 --> 00:06:35,700
Wenn Sie einmal an die Stelle der beiden rollen, also

78
00:06:35,700 --> 00:06:37,740
die letzten beiden Bits umdrehen, verschieben Sie Scheibe 1.

79
00:06:37,740 --> 00:06:39,740
Wo soll man es hinbewegen, fragen Sie sich vielleicht?

80
00:06:39,740 --> 00:06:43,220
Sie haben keine Wahl, Sie können es nicht auf Platte 0 legen und es gibt nur

81
00:06:43,220 --> 00:06:47,100
einen anderen Stift, also verschieben Sie es dorthin, wo Sie gezwungen sind, es zu verschieben.

82
00:06:47,100 --> 00:06:51,220
Danach wird bis 1-1 gezählt, das bedeutet, dass nur das letzte

83
00:06:51,220 --> 00:06:52,900
Bit umgedreht wird, sodass Sie die Platte wieder auf 0 verschieben.

84
00:06:52,900 --> 00:06:59,620
Wenn Ihre binäre Zählung dann zweimal zur Viererstelle übergeht, verschieben

85
00:06:59,620 --> 00:07:01,440
Sie Scheibe 2, und das Muster geht so weiter.

86
00:07:01,440 --> 00:07:03,460
Letztes umdrehen, Scheibe 0 verschieben.

87
00:07:03,460 --> 00:07:05,900
Drehen Sie die letzten beiden um und verschieben Sie Scheibe 1.

88
00:07:05,900 --> 00:07:08,080
Letztes umdrehen, Scheibe 0 verschieben.

89
00:07:08,080 --> 00:07:12,420
Und hier müssen wir dreimal zur Stelle der 8

90
00:07:12,420 --> 00:07:14,100
rollen, und das entspricht der Bewegung von Scheibe 3.

91
00:07:14,100 --> 00:07:18,180
Das hat etwas Magisches. Als ich das zum ersten

92
00:07:18,180 --> 00:07:19,180
Mal sah, dachte ich: Das kann nicht funktionieren.

93
00:07:19,180 --> 00:07:22,500
Ich weiß nicht, wie das funktioniert, ich weiß nicht, warum das funktioniert, jetzt weiß ich es, aber es

94
00:07:22,500 --> 00:07:28,100
ist einfach magisch, wenn man es sieht, und ich erinnere mich, dass ich dafür Animationen zusammengestellt habe,

95
00:07:28,100 --> 00:07:32,540
als ich das unterrichtet habe, und einfach so: Weißt du, ich weiß, wie das funktioniert, ich kenne alle

96
00:07:32,540 --> 00:07:36,260
Dinge darin, es macht immer noch Spaß, einfach nur da zu sitzen und zuzusehen, wie es abläuft.

97
00:07:36,260 --> 00:07:37,260
Oh ja.

98
00:07:37,260 --> 00:07:41,800
Ich meine, es ist zunächst nicht einmal klar, dass dies immer zu rechtlichen Schritten führen wird.

99
00:07:41,800 --> 00:07:45,980
Woher wissen Sie beispielsweise, dass jedes Mal, wenn Sie zur Stelle

100
00:07:45,980 --> 00:07:49,820
der 8 wechseln, zwangsläufig die Scheibe 3 zum Bewegen freigegeben wird?

101
00:07:49,820 --> 00:07:53,900
Gleichzeitig wirft die Lösung sofort folgende Fragen auf: Woher kommt das,

102
00:07:53,900 --> 00:07:58,300
warum funktioniert das und gibt es einen besseren Weg, dies zu

103
00:07:58,300 --> 00:08:00,560
tun, als 2 bis n minus 1 Schritte ausführen zu müssen?

104
00:08:00,560 --> 00:08:05,140
Es stellt sich heraus, dass dies nicht nur das Problem der Türme von

105
00:08:05,140 --> 00:08:07,180
Hanoi löst, sondern auch auf die effizienteste Art und Weise, die möglich ist.

106
00:08:07,180 --> 00:08:10,680
Um zu verstehen, warum das funktioniert und wie es funktioniert und was zum Teufel vor sich geht,

107
00:08:10,680 --> 00:08:16,860
kommt es auf eine bestimmte Perspektive auf das Rätsel an, die CS-Leute eine rekursive Perspektive nennen könnten.

108
00:08:16,900 --> 00:08:21,420
Scheibe 3 denkt, okay, 2, 1 und 0, als ob du von mir loskommen

109
00:08:21,420 --> 00:08:25,020
müsstest, als ob ich unter so viel Gewicht und Druck nicht wirklich funktionieren könnte.

110
00:08:25,020 --> 00:08:28,660
Wenn Sie also aus der Perspektive von Datenträger 3 herausfinden möchten, wie Datenträger 3 hierher gelangen

111
00:08:28,660 --> 00:08:33,900
soll, ist es mir egal, wie Datenträger 2, 1 und 0 zur Spindel B gelangen müssen.

112
00:08:33,900 --> 00:08:36,020
Nur so kann es sich bewegen.

113
00:08:36,020 --> 00:08:38,060
Wenn eine dieser Festplatten über 3 liegt, kann sie nicht verschoben werden.

114
00:08:38,060 --> 00:08:41,000
Wenn sich einer von ihnen in Spindel C befindet, kann er sich nicht dorthin bewegen.

115
00:08:41,000 --> 00:08:43,940
Also müssen wir irgendwie 2, 1 und 0 rausbekommen.

116
00:08:43,980 --> 00:08:48,180
Nachdem wir das getan haben, können wir Diskette 3 dorthin verschieben.

117
00:08:48,180 --> 00:08:50,020
Und dann sagt Diskette 3: „Ich bin fertig.“

118
00:08:50,020 --> 00:08:51,940
Du musst mich nie wieder bewegen.

119
00:08:51,940 --> 00:08:54,340
Alle anderen finden einfach heraus, wie sie hierher kommen.

120
00:08:54,340 --> 00:08:57,540
Und in gewisser Weise haben Sie jetzt eine kleinere Version des gleichen Problems.

121
00:08:57,540 --> 00:09:02,380
Jetzt haben Sie die Festplatten 0, 1 und 2 auf Spindel B und müssen sie nach C bringen. Die Idee

122
00:09:02,380 --> 00:09:06,180
ist also, dass ich mein größeres Problem in etwas Kleineres verwandeln kann, wenn ich mich nur

123
00:09:06,180 --> 00:09:10,680
auf eine Festplatte konzentriere und darüber nachdenke, was ich tun muss, damit diese Festplatte funktioniert.

124
00:09:10,680 --> 00:09:12,020
Und wie löse ich das dann?

125
00:09:12,020 --> 00:09:13,520
Nun, es ist genau das Gleiche.

126
00:09:13,600 --> 00:09:17,160
Wenn Datenträger 2 sagen soll, Datenträger 1 und Datenträger 0, dann bist du es nicht, sondern ich.

127
00:09:17,160 --> 00:09:18,160
Ich brauche einfach etwas Platz.

128
00:09:18,160 --> 00:09:19,160
Aussteigen.

129
00:09:19,160 --> 00:09:20,520
Sie müssen irgendwohin ziehen.

130
00:09:20,520 --> 00:09:23,040
Dann kann Festplatte 2 dorthin verschoben werden, wo sie hingehört.

131
00:09:23,040 --> 00:09:25,120
Dann können die Datenträger 1 und 0 dies tun.

132
00:09:25,120 --> 00:09:31,040
Der interessante Punkt ist jedoch, dass jede einzelne Festplatte im Wesentlichen die exakt gleiche Strategie verfolgt.

133
00:09:31,040 --> 00:09:33,220
Sie alle sagen, alle über mir, steig aus.

134
00:09:33,220 --> 00:09:34,220
Dann werde ich umziehen.

135
00:09:34,220 --> 00:09:36,560
Okay, macht alle weiter.

136
00:09:36,560 --> 00:09:40,600
Wenn Sie diese Erkenntnisse kennen, können Sie etwas programmieren, das die

137
00:09:40,600 --> 00:09:46,720
Türme von Hanoi löst, etwa fünf oder sechs Codezeilen, was wahrscheinlich

138
00:09:46,720 --> 00:09:50,680
das höchste Verhältnis von intellektuellem Aufwand zu Codezeilen aller Zeiten aufweist.

139
00:09:50,680 --> 00:09:55,800
Und wenn man kurz darüber nachdenkt, wird klar,

140
00:09:55,800 --> 00:09:56,800
dass dies die effizienteste Lösung sein muss.

141
00:09:56,800 --> 00:10:00,060
Bei jedem Schritt tun Sie nur das, was Ihnen aufgezwungen wird.

142
00:10:00,060 --> 00:10:04,440
Sie müssen die Datenträger 0 bis 2 entfernen, bevor Sie Datenträger 3 verschieben können.

143
00:10:04,440 --> 00:10:06,520
Und Sie müssen Diskette 3 verschieben.

144
00:10:06,520 --> 00:10:09,680
Und dann müssen Sie die Datenträger 0 bis 2 wieder darauf verschieben.

145
00:10:09,760 --> 00:10:15,400
Aus dieser Perspektive gibt es einfach keinen Raum für Ineffizienz.

146
00:10:15,400 --> 00:10:18,920
Warum erfasst die binäre Zählung diesen Algorithmus?

147
00:10:18,920 --> 00:10:23,480
Nun, hier geht es darum, dass dieses Muster, ein Teilproblem zu

148
00:10:23,480 --> 00:10:28,480
lösen, eine große Scheibe zu bewegen und dann ein Teilproblem erneut

149
00:10:28,480 --> 00:10:30,160
zu lösen, perfekt mit dem Muster der binären Zählung übereinstimmt.

150
00:10:30,160 --> 00:10:35,280
Zählen Sie einen bestimmten Betrag hoch, drehen Sie ihn um und zählen Sie erneut bis zum gleichen Betrag.

151
00:10:35,360 --> 00:10:40,520
Und dieser „Towers of Hanoi“-Algorithmus und die binäre Zählung sind beide selbstähnliche Prozesse, in dem

152
00:10:40,520 --> 00:10:44,980
Sinne, dass, wenn man herauszoomt und bis zu einer größeren Potenz von 2 zählt oder

153
00:10:44,980 --> 00:10:48,920
„Towers of Hanoi“ mit mehr Scheiben löst, beide immer noch die gleiche Struktur haben .

154
00:10:48,920 --> 00:10:52,700
Unterproblem, mach etwas, Unterproblem.

155
00:10:52,700 --> 00:10:57,820
In einem ziemlich kleinen Maßstab wird beispielsweise das Lösen der Türme von Hanoi für zwei Scheiben,

156
00:10:57,820 --> 00:11:03,720
Scheibe 0 bewegen, Scheibe 1 bewegen, Scheibe 0 bewegen, durch binäres Zählen bis 3 widergespiegelt.

157
00:11:03,840 --> 00:11:07,560
Drehen Sie das letzte Stück um, drehen Sie es einmal um, drehen Sie das letzte Stück um.

158
00:11:07,560 --> 00:11:12,360
In einem etwas größeren Maßstab sieht das Lösen der Türme von Hanoi für drei Scheiben

159
00:11:12,360 --> 00:11:17,120
so aus, als würde man alles Nötige tun, um zwei Scheiben zu lösen, Scheibe Nr.

160
00:11:17,120 --> 00:11:19,080
2 verschieben und dann alles tun, was nötig ist, um erneut zwei Scheiben zu lösen.

161
00:11:19,080 --> 00:11:24,960
Analog dazu umfasst das Binärzählen bis 111 das Zählen bis 3, das

162
00:11:24,960 --> 00:11:28,000
Durchlaufen aller drei Bits und das anschließende Hochzählen um drei weitere.

163
00:11:28,000 --> 00:11:32,060
Auf allen Skalen weisen beide Prozesse die gleiche Aufschlüsselung auf.

164
00:11:32,100 --> 00:11:35,620
In gewisser Weise ist der Grund, warum diese binäre Lösung funktioniert, oder zumindest eine

165
00:11:35,620 --> 00:11:40,820
Erklärung, meiner Meinung nach keine eindeutige Erklärung, aber ich denke, die natürlichste ist, dass

166
00:11:40,820 --> 00:11:44,440
das Muster, das Sie zum Generieren dieser Binärzahlen verwenden würden, genau das gleiche hat

167
00:11:44,440 --> 00:11:49,560
Struktur wie das Muster, das Sie für die Türme von Hanoi verwenden würden. Wenn

168
00:11:49,560 --> 00:11:51,860
Sie sich also die umgedrehten Teile ansehen, kehren Sie diesen Prozess praktisch um.

169
00:11:51,860 --> 00:11:54,200
Sie fragen sich: Welcher Prozess hat diese erzeugt?

170
00:11:54,200 --> 00:12:00,460
Wenn ich beispielsweise versuchen würde zu verstehen, wie diese Bits umgedreht wurden, um mir dieses Ding zu

171
00:12:00,460 --> 00:12:06,180
geben, würden Sie den rekursiven Algorithmus für die Türme von Hanoi effektiv umkehren, weshalb es funktioniert.

172
00:12:07,860 --> 00:12:09,620
Das ist ziemlich cool, oder?

173
00:12:09,620 --> 00:12:10,940
Aber es wird tatsächlich cooler.

174
00:12:10,940 --> 00:12:14,460
Ich habe noch nicht einmal verstanden, wie das mit dem Sierpinski-Dreieck zusammenhängt.

175
00:12:14,460 --> 00:12:19,140
Und genau das werde ich im Folgevideo, Teil 2, tun.

176
00:12:19,140 --> 00:12:22,620
Vielen Dank an alle, die diese Videos auf Patreon unterstützen.

177
00:12:22,620 --> 00:12:26,380
Ich habe gerade das erste Kapitel von Essence of Calculus fertiggestellt

178
00:12:26,380 --> 00:12:30,840
und arbeite gerade am zweiten. Patreon-Unterstützer erhalten frühzeitig Zugriff auf diese

179
00:12:30,840 --> 00:12:34,780
Videos, bevor ich in ein paar Monaten die vollständige Serie veröffentliche.

180
00:12:34,780 --> 00:12:39,260
Dieses und das nächste Video werden teilweise auch von Desmos unterstützt, und vor

181
00:12:39,260 --> 00:12:43,020
dem nächsten Video möchte ich mir kurz einen Moment Zeit nehmen und euch

182
00:12:43,020 --> 00:12:44,780
ein wenig darüber erzählen, wer sie sind und welche Mitarbeiter sie einstellen.

183
00:12:44,780 --> 00:12:47,020
Desmos ist also wirklich cool.

184
00:12:47,020 --> 00:12:51,680
Sie stellen viele dieser interaktiven Mathematikaktivitäten für Klassenzimmer und Tools für Lehrer her.

185
00:12:51,680 --> 00:12:56,060
Der wahre Kern ihres Angebots liegt in ihren Unterrichtsaktivitäten.

186
00:12:56,060 --> 00:13:00,380
Ich für meinen Teil bin sehr beeindruckt davon, wie

187
00:13:00,380 --> 00:13:02,540
gut diese Aktivitäten aus pädagogischer Sicht durchdacht sind.

188
00:13:02,540 --> 00:13:06,000
Das Team kennt sich genau aus und weiß, wo es

189
00:13:06,000 --> 00:13:08,180
steht, um das Leben von Schülern und Lehrern zu verbessern.

190
00:13:08,180 --> 00:13:10,140
Und wie gesagt, sie stellen ein.

191
00:13:10,140 --> 00:13:14,780
Sie sind immer auf der Suche nach mehr guten Talenten, sei es Ingenieurstalent, Designer, Lehrer oder

192
00:13:14,780 --> 00:13:19,600
was auch immer für andere Fähigkeiten geeignet sind, die zu dem passen, was sie tun möchten.

193
00:13:19,600 --> 00:13:22,920
Wenn einer von Ihnen daran interessiert ist, sich ihnen anzuschließen und ihnen bei

194
00:13:22,920 --> 00:13:26,720
der Entwicklung einiger dieser großartigen Tools für Lehrer und Schüler zu helfen, können

195
00:13:26,720 --> 00:13:27,720
Sie sich die Karriereseite ansehen, die ich in der Beschreibung verlinkt habe.

196
00:13:27,720 --> 00:13:30,480
Persönlich denke ich, dass sie einige wirklich sinnvolle Dinge tun.

197
00:13:30,480 --> 00:13:35,080
Ich denke, dass ihre Aktivitäten den Schülern wirklich gute mathematische Intuitionen vermitteln, und

198
00:13:35,080 --> 00:13:39,060
die Welt könnte ein paar weitere talentierte Menschen gebrauchen, die ihre Bemühungen in

199
00:13:39,060 --> 00:13:40,520
der Bildung auf die Art und Weise ausrichten, wie sie es tun.

200
00:13:40,520 --> 00:13:44,640
Also gut, wir sehen uns im nächsten Video und ich denke,

201
00:13:44,640 --> 00:13:45,720
dass euch die Richtung, in die das führt, wirklich gefallen wird.

