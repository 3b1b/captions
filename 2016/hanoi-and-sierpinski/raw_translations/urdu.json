[
 {
  "input": "Today, I want to share with you a neat way to solve the Towers of Hanoi puzzle just by counting in a different number system.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   0.0,
   11.24
  ]
 },
 {
  "input": "And surprisingly, this stuff relates to finding a curve that fills Sierpinski's triangle.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   11.24,
   16.72
  ]
 },
 {
  "input": "I learned about this from a former CS lecturer of mine, his name's Keith Schwartz, and I've gotta say, this man is one of the best educators I've ever met.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   16.72,
   24.84
  ]
 },
 {
  "input": "I actually recorded a bit of the conversation where he showed me this stuff, so you guys can hear some of what he described directly.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   24.84,
   42.52
  ]
 },
 {
  "input": "In case you're unfamiliar, let's just lay down what the Towers of Hanoi puzzle actually is.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   42.52,
   54.44
  ]
 },
 {
  "input": "You think of these disks as having a hole in the middle so that you can fit them onto a peg.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   54.44,
   59.26
  ]
 },
 {
  "input": "The setup pictured here has five disks, which I'll label 0, 1, 2, 3, 4, but in principle, you could have as many disks as you want.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   59.26,
   84.12
  ]
 },
 {
  "input": "For example, your first move must involve moving disk 0, since any other disk has stuff on top of it that needs to get out of the way before it can move.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   84.12,
   93.32
  ]
 },
 {
  "input": "After that, you can move disk 1, but it has to go on whatever peg doesn't currently have disk 0, since otherwise you'd be putting a bigger disk on a smaller one, which isn't allowed.",
  "model": "nmt",
  "translatedText": "آج، میں آپ کے ساتھ ٹاورز آف ہنوئی کی پہیلی کو صرف ایک مختلف نمبر سسٹم میں گن کر حل کرنے کا ایک صاف طریقہ بتانا چاہتا ہوں۔ اور حیرت کی بات یہ ہے کہ اس چیز کا تعلق ایک وکر تلاش کرنے سے ہے جو سیرپینسکی کے مثلث کو بھرتا ہے۔ میں نے اس کے بارے میں اپنے ایک سابق سی ایس لیکچرر، اس کا نام کیتھ شوارٹز سے سیکھا، اور مجھے یہ کہنا پڑے گا، یہ آدمی ان بہترین اساتذہ میں سے ایک ہے جن سے میں کبھی ملا ہوں۔ میں نے اصل میں اس بات چیت کا تھوڑا سا ریکارڈ کیا جہاں اس نے مجھے یہ چیزیں دکھائیں، تاکہ آپ لوگ سن سکتے ہیں کہ اس نے براہ راست بیان کیا ہے۔ اگر آپ ناواقف ہیں تو آئیے صرف یہ بتاتے ہیں کہ ہنوئی کے ٹاورز پزل دراصل کیا ہے۔ آپ ان ڈسکوں کے بارے میں سوچتے ہیں کہ درمیان میں ایک سوراخ ہے تاکہ آپ انہیں کھونٹی پر فٹ کر سکیں۔ یہاں تصویر کردہ سیٹ اپ میں پانچ ڈسکیں ہیں، جن پر میں 0، 1، 2، 3، 4 کا لیبل لگاؤں گا، لیکن اصولی طور پر، آپ جتنی ڈسکیں چاہیں رکھ سکتے ہیں۔ مثال کے طور پر، آپ کی پہلی حرکت میں ڈسک 0 کو حرکت میں لانا ضروری ہے، کیونکہ کسی بھی دوسری ڈسک کے اوپر ایسی چیزیں ہوتی ہیں جو حرکت کرنے سے پہلے راستے سے ہٹ جاتی ہیں۔ اس کے بعد، آپ ڈسک 1 کو منتقل کر سکتے ہیں، لیکن اس کو کسی بھی پیگ پر جانا پڑے گا جس میں فی الحال ڈسک 0 نہیں ہے، کیونکہ بصورت دیگر آپ ایک چھوٹی پر بڑی ڈسک لگا رہے ہوں گے، جس کی اجازت نہیں ہے۔ اگر آپ نے اسے پہلے کبھی نہیں دیکھا ہے تو، میں آپ کو بہت حوصلہ افزائی کرتا ہوں کہ آپ کو توقف کریں اور مختلف سائز کی کچھ کتابیں نکالیں اور اسے خود ہی آزمائیں۔ اب کیتھ نے مجھے اس پہیلی کے بارے میں واقعی حیران کن چیز دکھائی، جو یہ ہے کہ آپ اسے صرف بائنری میں گن کر اور اس گنتی کی تال کو ڈسک کی حرکات کی ایک مخصوص تال کے ساتھ جوڑ کر حل کر سکتے ہیں۔ بائنری سے ناواقف کسی کے لیے، میں پہلے یہاں ایک فوری جائزہ لینے کے لیے ایک لمحہ نکالنے جا رہا ہوں۔ درحقیقت، یہاں تک کہ اگر آپ بائنری سے واقف ہیں، تو میں گنتی کی تال پر توجہ مرکوز کرتے ہوئے اس کی وضاحت کرنا چاہتا ہوں، جس کے بارے میں آپ نے پہلے سوچا بھی ہو گا یا نہیں۔ بائنری کی کوئی بھی تفصیل عام طور پر اعداد کی نمائندگی کرنے کے ہمارے معمول کے طریقے کے بارے میں ایک خود شناسی کے ساتھ شروع ہوتی ہے، جسے ہم بیس 10 کہتے ہیں، کیونکہ ہم 10 علیحدہ ہندسے استعمال کرتے ہیں، 0، 1، 2، 3، 4، 5، 6، 7، 8، 9.",
  "time_range": [
   93.32,
   105.04
  ]
 },
 {
  "input": "If you've never seen this before, I highly encourage you to pause and pull out some books of varying sizes and try it out for yourself.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   105.04,
   120.32
  ]
 },
 {
  "input": "Now Keith showed me something truly surprising about this puzzle, which is that you can solve it just by counting up in binary and associating the rhythm of that counting with a certain rhythm of disk movements.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   120.32,
   132.48
  ]
 },
 {
  "input": "For anyone unfamiliar with binary, I'm going to take a moment to do a quick overview here first.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   132.48,
   137.42
  ]
 },
 {
  "input": "Actually, even if you're familiar with binary, I want to explain it with a focus on the rhythm of counting, which you may or may not have thought about before.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   137.42,
   146.56
  ]
 },
 {
  "input": "Any description of binary typically starts off with an introspection about our usual way to represent numbers, what we call base 10, since we use 10 separate digits, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   146.56,
   158.56
  ]
 },
 {
  "input": "The rhythm of counting begins by walking through all 10 of these digits.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   158.56,
   165.22
  ]
 },
 {
  "input": "Then, having run out of new digits, you express the next number, 10, with two digits, 1, 0.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   165.22,
   172.32
  ]
 },
 {
  "input": "You say that 1 is in the tens place, since it's meant to encapsulate the group of 10 that you've already counted up to so far, while freeing the ones place to reset to 0.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   172.32,
   182.54
  ]
 },
 {
  "input": "The rhythm of counting repeats like this, counting up 9, rolling over to the tens place, counting up 9 more, rolling over to the tens place, etc.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   182.54,
   193.0
  ]
 },
 {
  "input": "Well, after repeating that process 9 times, you roll over to a hundreds place, a digit that keeps track of how many groups of 100 you've hit, freeing up the other two digits to reset to 0.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   193.0,
   210.04
  ]
 },
 {
  "input": "In this way, the rhythm of counting is kind of self-similar.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   210.04,
   214.06
  ]
 },
 {
  "input": "Even if you zoom out to a larger scale, the process looks like doing something, rolling over, doing that same thing, rolling over, and repeating 9 times before an even larger rollover.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   214.06,
   229.96
  ]
 },
 {
  "input": "In binary, also known as base-2, you limit yourself to two digits, 0 and 1, commonly called bits, which is short for binary digits.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   229.96,
   239.7
  ]
 },
 {
  "input": "The result is that when you're counting, you have to roll over all the time.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   239.7,
   243.96
  ]
 },
 {
  "input": "After counting 0, 1, you've already run out of bits, so you need to roll over to a two's place, writing 1-0, and resisting every urge in your base-10-trained brain to read this as 10, and instead understand it to mean 1 group of 2 plus 0.",
  "model": "nmt",
  "translatedText": "گنتی کی تال ان تمام 10 ہندسوں کے ذریعے چل کر شروع ہوتی ہے۔ پھر، نئے ہندسوں کے ختم ہونے کے بعد، آپ اگلے نمبر، 10 کو دو ہندسوں کے ساتھ ظاہر کرتے ہیں، 1، 0۔ آپ کہتے ہیں کہ 1 دسیوں کی جگہ پر ہے، کیونکہ اس کا مقصد 10 کے گروپ کو سمیٹنا ہے جسے آپ اب تک گن چکے ہیں، جبکہ 0 پر دوبارہ سیٹ کرنے کے لیے جگہ کو خالی کرنا ہے۔ گنتی کی تال اس طرح دہرائی جاتی ہے، 9 کو گننا، دسیوں جگہ پر گھومنا، مزید 9 کو گننا، دسیوں جگہ پر گھومنا وغیرہ۔ ٹھیک ہے، اس عمل کو 9 بار دہرانے کے بعد، آپ سینکڑوں جگہوں پر جاتے ہیں، ایک ایسا ہندسہ جو اس بات کو ٹریک کرتا ہے کہ آپ نے 100 کے کتنے گروپوں کو مارا ہے، باقی دو ہندسوں کو 0 پر دوبارہ ترتیب دینے کے لیے خالی کر دیتا ہے۔ اس طرح، گنتی کی تال خود سے ملتی جلتی ہے۔ یہاں تک کہ اگر آپ بڑے پیمانے پر زوم آؤٹ کرتے ہیں، تو عمل ایسا لگتا ہے جیسے کچھ کرنا، گھومنا، وہی کام کرنا، رول اوور کرنا، اور اس سے بھی بڑے رول اوور سے پہلے 9 بار دہرانا۔ بائنری میں، جسے بیس-2 بھی کہا جاتا ہے، آپ اپنے آپ کو دو ہندسوں، 0 اور 1 تک محدود رکھتے ہیں، جنہیں عام طور پر بٹس کہا جاتا ہے، جو بائنری ہندسوں کے لیے مختصر ہے۔ نتیجہ یہ ہے کہ جب آپ گن رہے ہیں، تو آپ کو ہر وقت گھومنا پڑتا ہے۔ 0، 1 کو گننے کے بعد، آپ کے پاس پہلے سے ہی بٹس ختم ہو چکے ہیں، اس لیے آپ کو 1-0 لکھتے ہوئے، اور اپنے بیس-10-تربیت یافتہ دماغ میں اسے 10 کے طور پر پڑھنے کی ہر خواہش کا مقابلہ کرنے کی ضرورت ہے، اور اس کے بجائے 2 جمع 0 کے 1 گروپ کا مطلب سمجھیں۔ پھر 1-1 تک اضافہ کریں، جو 3 کی نمائندگی کرتا ہے، اور پہلے ہی آپ کو دوبارہ رول اوور کرنا ہوگا، اور چونکہ ان دونوں کی جگہ 1 ہے، اس لیے اسے بھی رول اوور کرنا ہوگا، جو آپ کو 1-0-0 دے گا، جو 1 کی نمائندگی کرتا ہے۔ 4 جمع 0 کا گروپ 2 جمع 0 کا گروپ۔ جس طرح بیس-10 میں ہندسے 10 کی طاقتوں کو ظاہر کرتے ہیں، اسی طرح بیس-2 میں بٹس 2 کی مختلف طاقتوں کو ظاہر کرتے ہیں۔ لہذا 10 کی جگہ، 100 کی جگہ، 1000 کی جگہ، اس طرح کی چیزوں کے بارے میں بات کرنے کے بجائے، آپ 2 کی جگہ، 4 کی جگہ، اور 8 کی جگہ کے بارے میں بات کریں۔ گنتی کی تال اب بہت تیز ہے، لیکن یہ تقریباً اسے زیادہ نمایاں کر دیتا ہے۔ آخری پلٹائیں، ایک بار رول کریں۔ آخری پلٹائیں، دو بار رول کریں۔ آخری پلٹائیں، ایک بار رول کریں۔ آخری پلٹائیں، تین بار رول کریں۔ ایک بار پھر، اس پیٹرن کے ساتھ ایک خاص خود مماثلت ہے.",
  "time_range": [
   243.96,
   260.12
  ]
 },
 {
  "input": "Then increment up to 1-1, which represents 3, and already you have to roll over again, and since there's a 1 in that two's place, that has to roll over as well, giving you 1-0-0, which represents 1 group of 4 plus 0 groups of 2 plus 0.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   260.12,
   277.8
  ]
 },
 {
  "input": "In the same way that digits in base-10 represent powers of 10, bits in base-2 represent different powers of 2.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   277.8,
   286.38
  ]
 },
 {
  "input": "So instead of talking about a 10's place, a 100's place, a 1000's place, things like that, you talk about a 2's place, a 4's place, and an 8's place.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   286.38,
   295.8
  ]
 },
 {
  "input": "The rhythm of counting is now a lot faster, but that almost makes it more noticeable.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   295.8,
   301.08
  ]
 },
 {
  "input": "Flip the last, roll over once.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   301.08,
   302.94
  ]
 },
 {
  "input": "Flip the last, roll over twice.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   302.94,
   304.68
  ]
 },
 {
  "input": "Flip the last, roll over once.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   304.68,
   306.38
  ]
 },
 {
  "input": "Flip the last, roll over three times.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   306.38,
   309.1
  ]
 },
 {
  "input": "Again, there's a certain self-similarity to this pattern.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   309.1,
   313.98
  ]
 },
 {
  "input": "At every scale, the process is to do something, roll over, then do that same thing again.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   313.98,
   322.48
  ]
 },
 {
  "input": "At the small scale, say counting up to 3, which is 1-1 in binary, this means flip the last bit, roll over to the two's, then flip the last bit.",
  "model": "nmt",
  "translatedText": "ہر پیمانے پر، عمل یہ ہے کہ کچھ کریں، رول اوور کریں، پھر وہی کام دوبارہ کریں۔ چھوٹے پیمانے پر، کہتے ہیں کہ 3 تک گنتی کریں، جو بائنری میں 1-1 ہے، اس کا مطلب ہے آخری بٹ کو پلٹائیں، دونوں کی طرف رول اوور کریں، پھر آخری بٹ کو پلٹائیں۔ بڑے پیمانے پر، جیسے کہ 15 تک کی گنتی، جو کہ 1-1-1-1 ہے، یہ عمل یہ ہے کہ آخری 3 کو 7 تک گننے دیں، 8 کی جگہ پر جائیں، پھر آخری 3 بٹس کو دوبارہ گننے دیں۔.",
  "time_range": [
   322.48,
   333.32
  ]
 },
 {
  "input": "At a larger scale, like counting up to 15, which is 1-1-1-1, the process is to let the last 3 count up to 7, roll over to the 8's place, then let the last 3 bits count up again.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   333.32,
   347.26
  ]
 },
 {
  "input": "Counting up to 255, which is 8 successive 1's, this looks like letting the last 7 bits count up till they're full, rolling over to the 128's place, then letting the last 7 bits count up again.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   347.26,
   361.08
  ]
 },
 {
  "input": "Alright, so with that mini-introduction, the surprising fact that Keith showed me is that we can use this rhythm to solve the towers of Hanoi.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   361.08,
   370.44
  ]
 },
 {
  "input": "You start by counting from 0.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   370.44,
   372.72
  ]
 },
 {
  "input": "Whenever you're only flipping that last bit, from 0 to 1, move disk 0 one peg to the right.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   372.72,
   382.42
  ]
 },
 {
  "input": "If it was already on the rightmost peg, you just loop it back to the first peg.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   382.42,
   389.2
  ]
 },
 {
  "input": "If you roll over once to the two's place, meaning you flip the last two bits, you move disk 1.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   389.2,
   397.74
  ]
 },
 {
  "input": "Where do you move it, you might ask?",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   397.74,
   399.74
  ]
 },
 {
  "input": "You have no choice, you can't put it on top of disk 0, and there's only one other peg, so you move it where you're forced to move it.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   399.74,
   407.1
  ]
 },
 {
  "input": "After this, counting up to 1-1, that involves just flipping the last bit, so you move disk 0 again.",
  "model": "nmt",
  "translatedText": "255 تک کی گنتی، جو کہ 8 لگاتار 1 ہے، ایسا لگتا ہے کہ آخری 7 بٹس کو اس وقت تک گننے دیا جائے جب تک کہ وہ مکمل نہ ہو جائیں، 128 کی جگہ پر جائیں، پھر آخری 7 بٹس کو دوبارہ گننے دیں۔ ٹھیک ہے، تو اس چھوٹے تعارف کے ساتھ، حیرت انگیز حقیقت جو کیتھ نے مجھے دکھائی وہ یہ ہے کہ ہم اس تال کو ہنوئی کے ٹاورز کو حل کرنے کے لیے استعمال کر سکتے ہیں۔ آپ 0 سے گنتی شروع کرتے ہیں۔ جب بھی آپ صرف اس آخری بٹ کو 0 سے 1 تک پلٹ رہے ہیں، ڈسک 0 ایک پیگ کو دائیں طرف لے جائیں۔ اگر یہ پہلے ہی سب سے دائیں پیگ پر تھا، تو آپ اسے پہلے پیگ پر واپس لوپ کریں۔ اگر آپ دونوں کی جگہ پر ایک بار گھومتے ہیں، یعنی آپ آخری دو بٹس کو پلٹتے ہیں، تو آپ ڈسک 1 کو منتقل کرتے ہیں۔ آپ اسے کہاں منتقل کرتے ہیں، آپ پوچھ سکتے ہیں؟ آپ کے پاس کوئی چارہ نہیں ہے، آپ اسے ڈسک 0 کے اوپر نہیں رکھ سکتے، اور صرف ایک اور پیگ ہے، لہذا آپ اسے وہیں منتقل کریں جہاں آپ اسے منتقل کرنے پر مجبور ہوں۔ اس کے بعد، 1-1 تک کی گنتی، جس میں صرف آخری بٹ کو پلٹنا شامل ہے، لہذا آپ ڈسک 0 کو دوبارہ منتقل کریں۔ پھر جب آپ کی بائنری گنتی چار کی جگہ پر دو بار ہوتی ہے، تو ڈسک 2 کو منتقل کریں، اور پیٹرن اسی طرح جاری رہتا ہے۔ آخری پلٹائیں، ڈسک 0 منتقل کریں۔ آخری دو پلٹائیں، ڈسک 1 منتقل کریں۔ آخری پلٹائیں، ڈسک 0 منتقل کریں۔ اور یہاں ہمیں 8 کی جگہ پر تین بار گھومنا پڑے گا، اور یہ حرکت کرنے والی ڈسک 3 کے مساوی ہے۔ اس میں کچھ جادوئی بات ہے، جیسے جب میں نے اسے پہلی بار دیکھا تھا، میں ایسا ہی تھا، یہ کام نہیں کر سکتا۔ میں نہیں جانتا کہ یہ کیسے کام کرتا ہے، مجھے نہیں معلوم کہ یہ کیوں کام کرتا ہے، اب میں جانتا ہوں، لیکن جب آپ اسے دیکھتے ہیں تو یہ صرف جادوئی ہوتا ہے، اور مجھے یاد ہے کہ جب میں یہ پڑھا رہا تھا تو اس کے لیے اینیمیشن ایک ساتھ ڈالنا تھا، اور بالکل اسی طرح، آپ جانتے ہیں، میں جانتا ہوں کہ یہ کیسے کام کرتا ہے، میں اس میں موجود تمام چیزیں جانتا ہوں، بس بیٹھنا اور بالکل اسی طرح مزہ آتا ہے، آپ جانتے ہیں، اسے کھیلتے ہوئے دیکھیں۔ ارے ہان.",
  "time_range": [
   407.1,
   412.9
  ]
 },
 {
  "input": "Then when your binary counting rolls over twice to the four's place, move disk 2, and the pattern continues like this.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   412.9,
   421.44
  ]
 },
 {
  "input": "Flip the last, move disk 0.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   421.44,
   423.46
  ]
 },
 {
  "input": "Flip the last two, move disk 1.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   423.46,
   425.9
  ]
 },
 {
  "input": "Flip the last, move disk 0.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   425.9,
   428.08
  ]
 },
 {
  "input": "And here we're going to have to roll over three times to the 8's place, and that corresponds to moving disk 3.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   428.08,
   434.1
  ]
 },
 {
  "input": "There's something magical about it, like when I first saw this, I was like, this can't work.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   434.1,
   439.18
  ]
 },
 {
  "input": "I don't know how this works, I don't know why this works, now I know, but it's just magical when you see it, and I remember putting together animation for this for when I was teaching this, and just like, you know, I know how this works, I know all the things in it, it's still fun to just sit and just like, you know, watch it play out.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   439.18,
   456.26
  ]
 },
 {
  "input": "Oh yeah.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   456.26,
   457.26
  ]
 },
 {
  "input": "I mean, it's not even clear at first that this is always going to give legal moves.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   457.26,
   461.8
  ]
 },
 {
  "input": "For example, how do you know that every time you're rolling over to the 8's place, that disk 3 is necessarily going to be freed up to move?",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   461.8,
   469.82
  ]
 },
 {
  "input": "At the same time, the solution just immediately raises these questions like, where does this come from, why does this work, and is there a better way of doing this than having to do 2 to the n minus 1 steps?",
  "model": "nmt",
  "translatedText": "میرا مطلب ہے، پہلے تو یہ بھی واضح نہیں ہے کہ یہ ہمیشہ قانونی اقدام کرتا ہے۔ مثال کے طور پر، آپ کیسے جانتے ہیں کہ جب بھی آپ 8 کی جگہ پر گھوم رہے ہیں، وہ ڈسک 3 لازمی طور پر منتقل ہونے کے لیے آزاد ہو جائے گی؟ ایک ہی وقت میں، حل فوری طور پر یہ سوالات اٹھاتا ہے جیسے، یہ کہاں سے آتا ہے، یہ کیوں کام کرتا ہے، اور کیا ایسا کرنے کا کوئی بہتر طریقہ ہے جو کہ 2 سے مائنس 1 قدم تک کرنا پڑے؟ یہ پتہ چلتا ہے، یہ نہ صرف ہنوئی کے ٹاورز کو حل کرتا ہے، بلکہ یہ سب سے زیادہ مؤثر طریقے سے ممکن ہے.",
  "time_range": [
   469.82,
   480.56
  ]
 },
 {
  "input": "It turns out, not only does this solve Towers of Hanoi, but it does it in the most efficient way possible.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   480.56,
   487.18
  ]
 },
 {
  "input": "Understanding why this works and how it works and what the heck is going on comes down to a certain perspective on the puzzle, what CS folk might call a recursive perspective.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   487.18,
   496.9
  ]
 },
 {
  "input": "Disk 3 is thinking, okay, 2, 1, and 0, like you have to get off of me, like I can't really function under this much weight and pressure.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   496.9,
   505.02
  ]
 },
 {
  "input": "And so just from disk 3's perspective, if you want to figure out how is disk 3 going to get over here, somehow, I don't care how, disk 2, 1, and 0 have to get to spindle B.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   505.02,
   513.9
  ]
 },
 {
  "input": "That's the only way it can move.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   513.9,
   516.02
  ]
 },
 {
  "input": "If any of these disks are on top of 3, it can't move.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   516.02,
   518.06
  ]
 },
 {
  "input": "If any of them are in spindle C, it can't move there.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   518.06,
   521.0
  ]
 },
 {
  "input": "So somehow we have to get 2, 1, and 0 off.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   521.0,
   523.98
  ]
 },
 {
  "input": "Having done that, then we can move disk 3 over there.",
  "model": "nmt",
  "translatedText": "یہ سمجھنا کہ یہ کیوں کام کرتا ہے اور یہ کیسے کام کرتا ہے اور یہ کیا ہو رہا ہے اس پہیلی کے ایک خاص تناظر میں آتا ہے، جسے CS لوک ایک تکراری نقطہ نظر کہہ سکتے ہیں۔ ڈسک 3 سوچ رہا ہے، ٹھیک ہے، 2، 1، اور 0، جیسے آپ کو مجھ سے دور ہونا پڑے گا، جیسے میں واقعی اتنے وزن اور دباؤ میں کام نہیں کر سکتا۔ اور اس طرح صرف ڈسک 3 کے نقطہ نظر سے، اگر آپ یہ جاننا چاہتے ہیں کہ ڈسک 3 یہاں کیسے پہنچے گی، کسی نہ کسی طرح، مجھے اس سے کوئی فرق نہیں پڑتا ہے کہ ڈسک 2، 1، اور 0 کو اسپنڈل B تک کیسے جانا ہے۔ یہ واحد راستہ ہے جس سے یہ حرکت کرسکتا ہے۔ اگر ان میں سے کوئی بھی ڈسک 3 کے اوپر ہے تو یہ حرکت نہیں کر سکتی۔ اگر ان میں سے کوئی بھی سپنڈل C میں ہے تو وہ وہاں منتقل نہیں ہو سکتا۔ تو کسی نہ کسی طرح ہمیں 2، 1، اور 0 کی چھوٹ حاصل کرنی ہوگی۔ ایسا کرنے کے بعد، پھر ہم ڈسک 3 کو وہاں منتقل کر سکتے ہیں۔ اور پھر ڈسک 3 کہتی ہے، میں تیار ہوں۔ آپ کو مجھے دوبارہ منتقل کرنے کی ضرورت نہیں ہے۔ باقی سب صرف یہ جان لیں کہ یہاں کیسے جانا ہے۔ اور ایک لحاظ سے، اب آپ کے پاس اسی مسئلے کا ایک چھوٹا ورژن ہے۔ اب آپ کے پاس ڈسک 0، 1، اور 2 سپنڈل B پر بیٹھے ہیں، آپ کو انہیں C تک پہنچانا ہوگا۔ لہذا خیال یہ ہے کہ اگر میں صرف ایک ڈسک پر توجہ مرکوز کرتا ہوں اور میں سوچتا ہوں کہ اس ڈسک کو کام کرنے کے لیے مجھے کیا کرنا پڑے گا، تو میں اپنے بڑے مسئلے کو قدرے چھوٹی چیز میں بدل سکتا ہوں۔ اور پھر میں اسے کیسے حل کروں؟ ٹھیک ہے، یہ بالکل ایک ہی چیز ہے.",
  "time_range": [
   523.98,
   528.18
  ]
 },
 {
  "input": "And then disk 3 says, I'm set.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   528.18,
   530.02
  ]
 },
 {
  "input": "You never need to move me again.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   530.02,
   531.94
  ]
 },
 {
  "input": "Everyone else just figure out how to get here.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   531.94,
   534.34
  ]
 },
 {
  "input": "And in a sense, you now have a smaller version of the same problem.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   534.34,
   537.54
  ]
 },
 {
  "input": "Now you've got disk 0, 1, and 2 sitting on spindle B, you got to get them to C.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   537.54,
   541.981411764706
  ]
 },
 {
  "input": "So the idea is that if I just focus on one disk and I think about what am I going to have to do to get this disk to work, I can turn my bigger problem into something slightly smaller.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   541.981411764706,
   550.68
  ]
 },
 {
  "input": "And then how do I solve that?",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   550.68,
   552.02
  ]
 },
 {
  "input": "Well, it's exactly the same thing.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   552.02,
   553.6
  ]
 },
 {
  "input": "If disk 2 is going to say, disk 1 and disk 0, it's not you, it's me.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   553.6,
   557.16
  ]
 },
 {
  "input": "I just need some space.",
  "model": "nmt",
  "translatedText": "اگر ڈسک 2 کہنے جا رہی ہے، ڈسک 1 اور ڈسک 0، یہ آپ نہیں، میں ہوں۔ مجھے بس کچھ جگہ چاہیے دفع ہوجاؤ.",
  "time_range": [
   557.16,
   558.16
  ]
 },
 {
  "input": "Get off.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   558.16,
   559.16
  ]
 },
 {
  "input": "They need to move somewhere.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   559.16,
   560.52
  ]
 },
 {
  "input": "Then disk 2 can move to where it needs to go.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   560.52,
   563.04
  ]
 },
 {
  "input": "Then disk 1 and 0 can do this.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   563.04,
   565.12
  ]
 },
 {
  "input": "But the interesting point is that every single disk pretty much has the exact same strategy.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   565.12,
   571.04
  ]
 },
 {
  "input": "They all say, everybody above me, get off.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   571.04,
   573.22
  ]
 },
 {
  "input": "Then I'm going to move.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   573.22,
   574.22
  ]
 },
 {
  "input": "Okay, everyone pile back on.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   574.22,
   576.56
  ]
 },
 {
  "input": "When you know that insight, you can code up something that will solve towers of Hanoi, like five or six lines of code, which probably has the highest ratio of intellectual investment to lines of code ever.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   576.56,
   590.68
  ]
 },
 {
  "input": "And if you think about it for a bit, it becomes clear that this has to be the most efficient solution.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   590.68,
   596.8
  ]
 },
 {
  "input": "At every step, you're only doing what's forced upon you.",
  "model": "nmt",
  "translatedText": "انہیں کہیں منتقل ہونے کی ضرورت ہے۔ پھر ڈسک 2 وہاں جا سکتی ہے جہاں اسے جانے کی ضرورت ہے۔ پھر ڈسک 1 اور 0 یہ کر سکتے ہیں۔ لیکن دلچسپ بات یہ ہے کہ ہر ایک ڈسک میں بالکل وہی حکمت عملی ہوتی ہے۔ وہ سب کہتے ہیں، میرے اوپر سب لوگ، اتر جاؤ۔ پھر میں منتقل ہونے جا رہا ہوں۔ ٹھیک ہے، سب واپس ڈھیر ہو جاؤ۔ جب آپ اس بصیرت کو جانتے ہیں، تو آپ کچھ ایسا کوڈ اپ کر سکتے ہیں جو ہنوئی کے ٹاورز کو حل کرے گا، جیسے کہ کوڈ کی پانچ یا چھ لائنیں، جس میں شاید اب تک کی لائنز آف کوڈ میں دانشورانہ سرمایہ کاری کا سب سے زیادہ تناسب ہے۔ اور اگر آپ اس کے بارے میں تھوڑی دیر سوچتے ہیں، تو یہ واضح ہو جاتا ہے کہ یہ سب سے موثر حل ہونا چاہیے۔ ہر قدم پر، آپ صرف وہی کر رہے ہیں جو آپ پر مجبور ہے۔ اس سے پہلے کہ آپ ڈسک 3 کو منتقل کر سکیں آپ کو ڈسک 0 سے 2 تک کی چھٹی حاصل کرنی ہوگی۔ اور آپ کو ڈسک 3 کو منتقل کرنا ہوگا۔ اور پھر آپ کو ڈسک 0 سے 2 تک واپس اس پر منتقل کرنا ہوگا۔ اس نقطہ نظر سے غیر موثر ہونے کی کوئی گنجائش نہیں ہے۔ تو بائنری میں گنتی اس الگورتھم کو کیوں پکڑتی ہے؟ ٹھیک ہے، یہاں کیا ہو رہا ہے کہ ذیلی مسئلے کو حل کرنے، ایک بڑی ڈسک کو منتقل کرنے، پھر ذیلی مسئلے کو دوبارہ حل کرنے کا یہ نمونہ بائنری گنتی کے پیٹرن سے بالکل متوازی ہے۔ کچھ رقم گنیں، رول اوور کریں، اسی رقم تک دوبارہ گنیں۔ اور ہنوئی کے الگورتھم اور بائنری گنتی کے یہ ٹاورز دونوں خود سے ملتے جلتے عمل ہیں، اس لحاظ سے کہ اگر آپ زوم آؤٹ کرتے ہیں اور 2 کی بڑی طاقت تک گنتے ہیں، یا ہنوئی کے ٹاورز کو مزید ڈسکوں کے ساتھ حل کرتے ہیں، تو ان دونوں کی ساخت اب بھی ایک جیسی ہے۔.",
  "time_range": [
   596.8,
   600.06
  ]
 },
 {
  "input": "You have to get disk 0 through 2 off before you can move disk 3.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   600.06,
   604.44
  ]
 },
 {
  "input": "And you have to move disk 3.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   604.44,
   606.52
  ]
 },
 {
  "input": "And then you have to move disk 0 through 2 back onto it.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   606.52,
   609.76
  ]
 },
 {
  "input": "There's just not any room for inefficiency from this perspective.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   609.76,
   615.4
  ]
 },
 {
  "input": "So why does counting in binary capture this algorithm?",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   615.4,
   618.92
  ]
 },
 {
  "input": "Well, what's going on here is that this pattern of solving a subproblem, moving a big disk, then solving a subproblem again, is perfectly paralleled by the pattern of binary counting.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   618.92,
   630.16
  ]
 },
 {
  "input": "Count up some amount, roll over, count up to that same amount again.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   630.16,
   635.36
  ]
 },
 {
  "input": "And this towers of Hanoi algorithm and binary counting are both self-similar processes, in the sense that if you zoom out and count up to a larger power of 2, or solve towers of Hanoi with more disks, they both still have that same structure.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   635.36,
   648.92
  ]
 },
 {
  "input": "Subproblem, do a thing, subproblem.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   648.92,
   652.7
  ]
 },
 {
  "input": "For example, at a pretty small scale, solving towers of Hanoi for two disks, move disk 0, move disk 1, move disk 0, is reflected by counting up to 3 in binary.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   652.7,
   663.84
  ]
 },
 {
  "input": "Flip the last bit, roll over once, flip the last bit.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   663.84,
   667.56
  ]
 },
 {
  "input": "At a slightly larger scale, solving towers of Hanoi for three disks looks like doing whatever it takes to solve two disks, move disk number 2, then do whatever it takes to solve two disks again.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   667.56,
   679.08
  ]
 },
 {
  "input": "Analogously, counting up to 111 in binary involves counting up to 3, rolling over all three bits, then counting up three more.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   679.08,
   688.0
  ]
 },
 {
  "input": "At all scales, both processes have this same breakdown.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   688.0,
   692.1
  ]
 },
 {
  "input": "So in a sense, the reason that this binary solution works, or at least an explanation, I feel like there's no one explanation, but I think the most natural one is that the pattern you would use to generate these binary numbers has exactly the same structure as the pattern you would use for towers of Hanoi, which is why if you look at the bits flipping, you're effectively reversing this process.",
  "model": "nmt",
  "translatedText": "ذیلی مسئلہ، ایک کام کریں، ذیلی مسئلہ۔ مثال کے طور پر، بہت چھوٹے پیمانے پر، دو ڈسکوں کے لیے ہنوئی کے ٹاورز کو حل کرنا، ڈسک 0 منتقل کرنا، ڈسک 1 منتقل کرنا، ڈسک 0 منتقل کرنا، بائنری میں 3 تک گننے سے ظاہر ہوتا ہے۔ آخری بٹ پلٹائیں، ایک بار رول کریں، آخری بٹ پلٹائیں۔ قدرے بڑے پیمانے پر، تین ڈسکوں کے لیے ہنوئی کے ٹاورز کو حل کرنا ایسا لگتا ہے کہ دو ڈسکوں کو حل کرنے کے لیے جو کچھ بھی کرنا ہو، ڈسک نمبر 2 کو منتقل کریں، پھر دو ڈسکوں کو دوبارہ حل کرنے کے لیے جو کچھ بھی کرنا پڑے وہ کریں۔ یکساں طور پر، بائنری میں 111 تک گنتی میں 3 تک گنتی، تینوں بٹس پر گھومنا، پھر مزید تین گنتی شامل ہوتی ہے۔ تمام پیمانے پر، دونوں عملوں میں ایک ہی خرابی ہے۔ تو ایک لحاظ سے، جس وجہ سے یہ بائنری حل کام کرتا ہے، یا کم از کم ایک وضاحت، مجھے ایسا لگتا ہے کہ اس کی کوئی وضاحت نہیں ہے، لیکن میرے خیال میں سب سے فطری یہ ہے کہ آپ ان بائنری نمبروں کو جنریٹ کرنے کے لیے جو پیٹرن استعمال کریں گے وہ بالکل وہی ہے۔ ڈھانچہ جیسا کہ آپ ہنوئی کے ٹاورز کے لیے استعمال کریں گے، یہی وجہ ہے کہ اگر آپ بٹس کو پلٹتے ہوئے دیکھتے ہیں، تو آپ اس عمل کو مؤثر طریقے سے تبدیل کر رہے ہیں۔ آپ کہہ رہے ہیں، یہ کس عمل نے پیدا کیا؟ جیسا کہ اگر میں یہ سمجھنے کی کوشش کر رہا ہوں کہ یہ بٹس مجھے یہ چیز دینے کے لیے کیسے پلٹائے گئے، تو آپ ہنوئی کے ٹاورز کے لیے تکراری الگورتھم کو مؤثر طریقے سے تبدیل کر رہے ہیں، یہی وجہ ہے کہ یہ کام کرتا ہے۔ یہ بہت اچھا ہے، ٹھیک ہے؟ لیکن یہ اصل میں ٹھنڈا ہو جاتا ہے.",
  "time_range": [
   692.1,
   711.86
  ]
 },
 {
  "input": "You're saying, what process generated these?",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   711.86,
   714.2
  ]
 },
 {
  "input": "Like if I were trying to understand how these bits were flipped to give me this thing, you're effectively reversing the recursive algorithm for towers of Hanoi, which is why it works out.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   714.2,
   727.86
  ]
 },
 {
  "input": "That's pretty cool, right?",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   727.86,
   729.62
  ]
 },
 {
  "input": "But it actually gets cooler.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   729.62,
   730.94
  ]
 },
 {
  "input": "I haven't even gotten to how this relates to Sierpinski's triangle.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   730.94,
   734.46
  ]
 },
 {
  "input": "And that's exactly what I'm going to do in the follow-on video, part 2.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   734.46,
   739.14
  ]
 },
 {
  "input": "Many thanks to everybody who's supporting these videos on Patreon.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   739.14,
   742.62
  ]
 },
 {
  "input": "I just finished the first chapter of Essence of Calculus, and I'm working on the second one right now, and Patreon supporters are getting early access to these videos before I publish the full series in a few months.",
  "model": "nmt",
  "translatedText": "میں یہ بھی نہیں جان سکا کہ اس کا سیرپینسکی کے مثلث سے کیا تعلق ہے۔ اور بالکل وہی ہے جو میں فالو آن ویڈیو، حصہ 2 میں کرنے جا رہا ہوں۔ پیٹریون پر ان ویڈیوز کی حمایت کرنے والے ہر ایک کا بہت شکریہ۔ میں نے ابھی ایسنس آف کیلکولس کا پہلا باب مکمل کیا ہے، اور میں ابھی دوسرے پر کام کر رہا ہوں، اور پیٹریون کے حامیوں کو ان ویڈیوز تک جلد رسائی حاصل ہو رہی ہے اس سے پہلے کہ میں چند مہینوں میں مکمل سیریز شائع کروں۔ یہ ویڈیو اور اگلی ویڈیو بھی جزوی طور پر Desmos کی طرف سے سپورٹ کی گئی ہے، اور اگلی ویڈیو سے پہلے میں صرف ایک لمحہ نکالنا چاہتا ہوں اور آپ لوگوں کے ساتھ تھوڑا سا شیئر کرنا چاہتا ہوں کہ وہ کون ہیں اور اس حقیقت کے بارے میں کہ وہ ملازمت کر رہے ہیں۔ تو Desmos واقعی بہت اچھا ہے.",
  "time_range": [
   742.62,
   754.78
  ]
 },
 {
  "input": "This video and the next one are also supported in part by Desmos, and before the next video I just want to take a moment and share with you guys a little about who they are and the fact that they're hiring.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   754.78,
   764.78
  ]
 },
 {
  "input": "So Desmos is actually really cool.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   764.78,
   767.02
  ]
 },
 {
  "input": "They make a lot of these interactive math activities for classrooms and tools for teachers.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   767.02,
   771.68
  ]
 },
 {
  "input": "The real meat of their offering is in their classroom activities.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   771.68,
   776.06
  ]
 },
 {
  "input": "For my part, I'm super impressed by just how well-thought-out these activities are from a pedagogical standpoint.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   776.06,
   782.54
  ]
 },
 {
  "input": "The team clearly knows their stuff, and they know where they stand to make a difference in students' and teachers' lives.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   782.54,
   788.18
  ]
 },
 {
  "input": "And like I said, they're hiring.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   788.18,
   790.14
  ]
 },
 {
  "input": "They are always looking to bring in more good talent, whether that's engineering talent, designers, teachers, or whatever other skill sets line up with what they want to do.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   790.14,
   799.6
  ]
 },
 {
  "input": "If any of you out there are interested in joining them, helping them make some of these great tools for teachers and students, you can check out the careers page that I've linked in the description.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   799.6,
   807.72
  ]
 },
 {
  "input": "Personally, I think they're doing some really meaningful stuff.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   807.72,
   810.48
  ]
 },
 {
  "input": "I think their activities are building genuinely good math intuitions for students, and the world could use a few more talented people pointing their efforts towards education the way that they do.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   810.48,
   820.52
  ]
 },
 {
  "input": "Alright, so with that I'll see you guys next video, and I think you're really going to like where this is going.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   820.52,
   824.64
  ]
 }
]