[
 {
  "input": "Today, I want to share with you a neat way to solve the Towers of Hanoi puzzle just by counting in a different number system. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   4.200000000000001,
   10.62
  ],
  "n_reviews": 0
 },
 {
  "input": "And surprisingly, this stuff relates to finding a curve that fills Sierpinski's triangle. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   11.22,
   15.64
  ],
  "n_reviews": 0
 },
 {
  "input": "I learned about this from a former CS lecturer of mine, his name's Keith Schwartz, and I've gotta say, this man is one of the best educators I've ever met. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   16.72,
   24.46
  ],
  "n_reviews": 0
 },
 {
  "input": "I actually recorded a bit of the conversation where he showed me this stuff, so you guys can hear some of what he described directly. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   25.14,
   30.9
  ],
  "n_reviews": 0
 },
 {
  "input": "In case you're unfamiliar, let's just lay down what the Towers of Hanoi puzzle actually is. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   38.42,
   45.76
  ],
  "n_reviews": 0
 },
 {
  "input": "You think of these disks as having a hole in the middle so that you can fit them onto a peg. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   45.76,
   54.62
  ],
  "n_reviews": 0
 },
 {
  "input": "The setup pictured here has five disks, which I'll label 0, 1, 2, 3, 4, but in principle, you could have as many disks as you want. ",
  "translatedText": "วันนี้ ฉันอยากจะแบ่งปันวิธีการง่ายๆ ในการไขปริศนาหอคอยแห่งฮานอย เพียงแค่นับในระบบตัวเลขอื่น น่าประหลาดใจที่สิ่งนี้เกี่ยวข้องกับการหาเส้นโค้งที่เติมสามเหลี่ยมเซียร์ปินสกี้ ฉันเรียนรู้เกี่ยวกับเรื่องนี้จากอดีตวิทยากร CS ของฉัน ชื่อของเขาคือ Keith Schwartz และฉันต้องบอกว่าชายคนนี้เป็นหนึ่งในนักการศึกษาที่ดีที่สุดที่ฉันเคยพบ จริงๆ แล้วฉันได้บันทึกการสนทนาเล็กน้อยที่เขาแสดงสิ่งนี้ให้ฉันดู เพื่อให้พวกคุณได้ยินสิ่งที่เขาอธิบายโดยตรง ในกรณีที่คุณไม่คุ้นเคย เรามาดูกันว่าจริงๆ แล้วปริศนาหอคอยฮานอยคืออะไร คุณคิดว่าดิสก์เหล่านี้มีรูตรงกลางเพื่อให้คุณใส่เข้ากับหมุดได้  ภาพการตั้งค่านี้ประกอบด้วยดิสก์ 5 แผ่น ซึ่งฉันจะติดป้ายกำกับไว้ 0, 1, 2, 3, 4 แต่โดยหลักการแล้ว คุณสามารถมีดิสก์ได้มากเท่าที่คุณต้องการ ตัวอย่างเช่น การย้ายครั้งแรกของคุณต้องเกี่ยวข้องกับการย้ายดิสก์ 0 เนื่องจากดิสก์อื่นมีข้อมูลอยู่ด้านบนซึ่งจำเป็นต้องหลีกทางก่อนจึงจะสามารถย้ายได้ หลังจากนั้น คุณสามารถย้ายดิสก์ 1 ได้ แต่ต้องไปบนหมุดใดก็ตามที่ไม่มีดิสก์ 0 ในขณะนี้ เนื่องจากไม่เช่นนั้น คุณจะต้องวางดิสก์ที่ใหญ่กว่าไว้บนดิสก์ที่เล็กกว่า ซึ่งไม่ได้รับอนุญาต หากคุณไม่เคยเห็นสิ่งนี้มาก่อน ฉันขอแนะนำให้คุณหยุดและหยิบหนังสือขนาดต่างๆ ออกมาแล้วลองอ่านด้วยตัวเอง ตอนนี้ คีธแสดงให้ผมเห็นบางสิ่งที่น่าแปลกใจจริงๆ เกี่ยวกับปริศนานี้ ซึ่งก็คือ คุณสามารถแก้มันได้ โดยการนับเลขฐานสอง และเชื่อมโยงจังหวะการนับนั้นกับจังหวะการเคลื่อนที่ของดิสก์ สำหรับใครที่ไม่คุ้นเคยกับไบนารี่ ฉันจะใช้เวลาสักครู่เพื่อทำภาพรวมโดยย่อที่นี่ก่อน จริงๆ แล้ว แม้ว่าคุณจะคุ้นเคยกับไบนารี่แล้ว แต่ฉันอยากจะอธิบายโดยเน้นไปที่จังหวะการนับ ซึ่งคุณอาจหรืออาจไม่เคยคิดมาก่อนก็ได้ โดยทั่วไปคำอธิบายใดๆ ของเลขฐานสองจะเริ่มต้นด้วยการวิปัสสนาเกี่ยวกับวิธีการปกติของเราในการแสดงตัวเลข สิ่งที่เราเรียกว่าฐาน 10 เนื่องจากเราใช้ตัวเลข 10 หลักแยกกัน ได้แก่ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 . ",
  "model": "nmt",
  "time_range": [
   54.62,
   62.46
  ],
  "n_reviews": 0
 },
 {
  "input": "For example, your first move must involve moving disk 0, since any other disk has stuff on top of it that needs to get out of the way before it can move. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   62.58,
   72.54
  ],
  "n_reviews": 0
 },
 {
  "input": "After that, you can move disk 1, but it has to go on whatever peg doesn't currently have disk 0, since otherwise you'd be putting a bigger disk on a smaller one, which isn't allowed. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   72.54,
   84.54
  ],
  "n_reviews": 0
 },
 {
  "input": "If you've never seen this before, I highly encourage you to pause and pull out some books of varying sizes and try it out for yourself. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   84.72,
   91.08
  ],
  "n_reviews": 0
 },
 {
  "input": "Now Keith showed me something truly surprising about this puzzle, which is that you can solve it just by counting up in binary and associating the rhythm of that counting with a certain rhythm of disk movements. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   91.08,
   105.42
  ],
  "n_reviews": 0
 },
 {
  "input": "For anyone unfamiliar with binary, I'm going to take a moment to do a quick overview here first. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   105.42,
   110.88
  ],
  "n_reviews": 0
 },
 {
  "input": "Actually, even if you're familiar with binary, I want to explain it with a focus on the rhythm of counting, which you may or may not have thought about before. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   110.88,
   117.44
  ],
  "n_reviews": 0
 },
 {
  "input": "Any description of binary typically starts off with an introspection about our usual way to represent numbers, what we call base 10, since we use 10 separate digits, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   117.44,
   130.1
  ],
  "n_reviews": 0
 },
 {
  "input": "The rhythm of counting begins by walking through all 10 of these digits. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   130.1,
   134.82
  ],
  "n_reviews": 0
 },
 {
  "input": "Then, having run out of new digits, you express the next number, 10, with two digits, 1, 0. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   134.82,
   140.58
  ],
  "n_reviews": 0
 },
 {
  "input": "You say that 1 is in the tens place, since it's meant to encapsulate the group of 10 that you've already counted up to so far, while freeing the ones place to reset to 0. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   140.58,
   149.56
  ],
  "n_reviews": 0
 },
 {
  "input": "The rhythm of counting repeats like this, counting up 9, rolling over to the tens place, counting up 9 more, rolling over to the tens place, etc. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   149.56,
   159.58
  ],
  "n_reviews": 0
 },
 {
  "input": "Well, after repeating that process 9 times, you roll over to a hundreds place, a digit that keeps track of how many groups of 100 you've hit, freeing up the other two digits to reset to 0. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   159.58,
   174.96
  ],
  "n_reviews": 0
 },
 {
  "input": "In this way, the rhythm of counting is kind of self-similar. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   174.96,
   177.32
  ],
  "n_reviews": 0
 },
 {
  "input": "Even if you zoom out to a larger scale, the process looks like doing something, rolling over, doing that same thing, rolling over, and repeating 9 times before an even larger rollover. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   177.32,
   188.78
  ],
  "n_reviews": 0
 },
 {
  "input": "In binary, also known as base-2, you limit yourself to two digits, 0 and 1, commonly called bits, which is short for binary digits. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   188.78,
   199.8
  ],
  "n_reviews": 0
 },
 {
  "input": "The result is that when you're counting, you have to roll over all the time. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   199.8,
   205.16
  ],
  "n_reviews": 0
 },
 {
  "input": "After counting 0, 1, you've already run out of bits, so you need to roll over to a two's place, writing 1-0, and resisting every urge in your base-10-trained brain to read this as 10, and instead understand it to mean 1 group of 2 plus 0. ",
  "translatedText": "จังหวะการนับเริ่มต้นด้วยการเดินผ่านหลักทั้ง 10 หลักนี้ จากนั้นเมื่อหมดหลักใหม่แล้วให้แสดงหมายเลขถัดไป 10 โดยมีตัวเลขสองหลัก 1, 0 คุณบอกว่า 1 อยู่ในหลักสิบ เนื่องจากมันหมายถึงการรวมกลุ่มของ 10 ที่คุณนับได้จนถึงตอนนี้ ขณะเดียวกันก็ปล่อยตำแหน่งหลักเพื่อรีเซ็ตเป็น 0 จังหวะการนับซ้ำแบบนี้ นับ 9 กลิ้งไปหลักสิบ นับเพิ่มอีก 9 กลิ้งไปหลักสิบ เป็นต้น หลังจากทำซ้ำขั้นตอนนั้น 9 ครั้ง คุณจะทบไปที่หลักร้อย ซึ่งเป็นตัวเลขที่คอยติดตามจำนวนกลุ่มจาก 100 ที่คุณตีได้ โดยปล่อยให้อีกสองหลักว่างเพื่อรีเซ็ตเป็น 0 ด้วยวิธีนี้ จังหวะการนับจึงคล้ายกับตัวเอง แม้ว่าคุณจะซูมออกในสเกลที่ใหญ่ขึ้น กระบวนการก็ดูเหมือนว่าจะทำอะไรบางอย่าง กลิ้งไปมา ทำสิ่งเดียวกัน กลิ้งไป และทำซ้ำ 9 ครั้งก่อนที่จะโรลโอเวอร์ที่ใหญ่กว่า ในไบนารี่หรือที่รู้จักกันในชื่อฐาน 2 คุณจำกัดตัวเองไว้ที่ตัวเลขสองหลัก 0 และ 1 หรือที่เรียกกันทั่วไปว่าบิต ซึ่งย่อมาจากเลขฐานสอง ผลลัพธ์ก็คือเมื่อคุณนับคุณจะต้องทบตัวตลอดเวลา หลังจากนับ 0, 1 คุณก็หมดบิตไปแล้ว ดังนั้นคุณต้องเกลือกกลิ้งไปที่ตำแหน่ง 2 เขียน 1-0 และต่อต้านทุกแรงกระตุ้นในสมองที่ได้รับการฝึกฐาน 10 ที่จะอ่านเลข 10 และ แทนที่จะเข้าใจว่าหมายถึง 1 กลุ่มของ 2 บวก 0 จากนั้นเพิ่มขึ้นเป็น 1-1 ซึ่งหมายถึง 3 และคุณต้องทบอีกครั้ง และเนื่องจากมี 1 อยู่ในตำแหน่งที่สอง นั่นก็ต้องทบเช่นกัน โดยให้ 1-0-0 ซึ่งหมายถึง 1 กลุ่ม 4 บวก 0 กลุ่ม 2 บวก 0 เช่นเดียวกับที่ตัวเลขในฐาน 10 แทนค่ายกกำลังของ 10 บิตในฐาน 2 แทนค่ากำลังต่างกันของ 2 แทนที่จะพูดถึงหลัก 10 หลัก 100 หลัก 1,000 อะไรแบบนั้น คุณกลับพูดถึงหลัก 2 หลัก 4 และหลัก 8 ตอนนี้จังหวะการนับเร็วขึ้นมาก แต่ก็เกือบจะทำให้สังเกตเห็นได้ชัดเจนยิ่งขึ้น พลิกอันสุดท้าย เกลือกกลิ้งหนึ่งครั้ง พลิกอันสุดท้าย เกลือกกลิ้งสองครั้ง พลิกอันสุดท้าย เกลือกกลิ้งหนึ่งครั้ง พลิกอันสุดท้าย กลิ้งไปสามครั้ง มีความคล้ายคลึงกับรูปแบบนี้อีกครั้ง ในทุกระดับ กระบวนการคือการทำอะไรบางอย่าง พลิกคว่ำ แล้วทำสิ่งเดิมอีกครั้ง ในระดับเล็ก เช่น การนับถึง 3 ซึ่งก็คือ 1-1 ในรูปแบบไบนารี ซึ่งหมายถึงการพลิกบิตสุดท้าย เกลือกกลิ้งไปที่ทั้งสอง จากนั้นจึงพลิกบิตสุดท้าย ในสเกลที่ใหญ่กว่า เช่น การนับถึง 15 ซึ่งก็คือ 1-1-1-1 กระบวนการคือให้ 3 บิตสุดท้ายนับถึง 7 เกลือกกลิ้งไปที่ตำแหน่ง 8 จากนั้นให้ 3 บิตสุดท้ายนับอีกครั้ง . ",
  "model": "nmt",
  "time_range": [
   205.16,
   223.62
  ],
  "n_reviews": 0
 },
 {
  "input": "Then increment up to 1-1, which represents 3, and already you have to roll over again, and since there's a 1 in that two's place, that has to roll over as well, giving you 1-0-0, which represents 1 group of 4 plus 0 groups of 2 plus 0. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   223.62,
   245.5
  ],
  "n_reviews": 0
 },
 {
  "input": "In the same way that digits in base-10 represent powers of 10, bits in base-2 represent different powers of 2. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   245.5,
   251.02
  ],
  "n_reviews": 0
 },
 {
  "input": "So instead of talking about a 10's place, a 100's place, a 1000's place, things like that, you talk about a 2's place, a 4's place, and an 8's place. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   251.02,
   260.72
  ],
  "n_reviews": 0
 },
 {
  "input": "The rhythm of counting is now a lot faster, but that almost makes it more noticeable. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   260.72,
   267.66
  ],
  "n_reviews": 0
 },
 {
  "input": "Flip the last, roll over once. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   267.66,
   268.54
  ],
  "n_reviews": 0
 },
 {
  "input": "Flip the last, roll over twice. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   268.54,
   269.12
  ],
  "n_reviews": 0
 },
 {
  "input": "Flip the last, roll over once. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   269.12,
   272.22
  ],
  "n_reviews": 0
 },
 {
  "input": "Flip the last, roll over three times. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   272.22,
   276.86
  ],
  "n_reviews": 0
 },
 {
  "input": "Again, there's a certain self-similarity to this pattern. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   276.86,
   280.38
  ],
  "n_reviews": 0
 },
 {
  "input": "At every scale, the process is to do something, roll over, then do that same thing again. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   280.38,
   289.22
  ],
  "n_reviews": 0
 },
 {
  "input": "At the small scale, say counting up to 3, which is 1-1 in binary, this means flip the last bit, roll over to the two's, then flip the last bit. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   289.36,
   299.52
  ],
  "n_reviews": 0
 },
 {
  "input": "At a larger scale, like counting up to 15, which is 1-1-1-1, the process is to let the last 3 count up to 7, roll over to the 8's place, then let the last 3 bits count up again. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   299.52,
   323.24
  ],
  "n_reviews": 0
 },
 {
  "input": "Counting up to 255, which is 8 successive 1's, this looks like letting the last 7 bits count up till they're full, rolling over to the 128's place, then letting the last 7 bits count up again. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   323.54,
   339.0
  ],
  "n_reviews": 0
 },
 {
  "input": "Alright, so with that mini-introduction, the surprising fact that Keith showed me is that we can use this rhythm to solve the towers of Hanoi. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   339.0,
   350.24
  ],
  "n_reviews": 0
 },
 {
  "input": "You start by counting from 0. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   350.24,
   351.56
  ],
  "n_reviews": 0
 },
 {
  "input": "Whenever you're only flipping that last bit, from 0 to 1, move disk 0 one peg to the right. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   351.56,
   356.54
  ],
  "n_reviews": 0
 },
 {
  "input": "If it was already on the rightmost peg, you just loop it back to the first peg. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   357.08,
   362.54
  ],
  "n_reviews": 0
 },
 {
  "input": "If you roll over once to the two's place, meaning you flip the last two bits, you move disk 1. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   362.54,
   367.9
  ],
  "n_reviews": 0
 },
 {
  "input": "Where do you move it, you might ask? ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   367.9,
   369.08
  ],
  "n_reviews": 0
 },
 {
  "input": "You have no choice, you can't put it on top of disk 0, and there's only one other peg, so you move it where you're forced to move it. ",
  "translatedText": "เมื่อนับได้ถึง 255 ซึ่งเป็น 8 1 ติดต่อกัน ดูเหมือนว่าปล่อยให้ 7 บิตสุดท้ายนับจนเต็ม กลิ้งไปที่ตำแหน่ง 128 จากนั้นปล่อยให้ 7 บิตสุดท้ายนับอีกครั้ง เอาล่ะ ด้วยการแนะนำสั้นๆ ข้อเท็จจริงที่น่าประหลาดใจที่คีธแสดงให้ผมเห็นก็คือ เราสามารถใช้จังหวะนี้เพื่อไขปริศนาหอคอยแห่งฮานอยได้ คุณเริ่มต้นด้วยการนับจาก 0 เมื่อใดก็ตามที่คุณพลิกเฉพาะบิตสุดท้ายนั้น จาก 0 ถึง 1 ให้ย้ายดิสก์ 0 ไปหนึ่งหมุดไปทางขวา หากมันอยู่บนหมุดขวาสุดอยู่แล้ว คุณก็แค่วนมันกลับไปที่หมุดแรก หากคุณเกลือกกลิ้งหนึ่งครั้งไปยังตำแหน่งของทั้งสอง ซึ่งหมายความว่าคุณพลิกสองบิตสุดท้าย คุณจะย้ายดิสก์ 1 ย้ายไปไหน สอบถามได้ครับ คุณไม่มีทางเลือก คุณไม่สามารถวางมันไว้บนดิสก์ 0 ได้ และยังมีหมุดอีกอันเดียว ดังนั้นคุณจึงย้ายมันไปยังตำแหน่งที่คุณถูกบังคับให้ย้าย หลังจากนี้ นับได้ถึง 1-1 ซึ่งเกี่ยวข้องกับการพลิกบิตสุดท้าย ดังนั้นคุณจึงย้ายดิสก์ 0 อีกครั้ง จากนั้นเมื่อการนับเลขฐานสองของคุณทบสองครั้งไปยังตำแหน่งที่สี่ ให้ย้ายดิสก์ 2 และรูปแบบจะดำเนินต่อไปเช่นนี้ พลิกอันสุดท้ายย้ายดิสก์ 0 พลิกสองอันสุดท้าย ย้ายดิสก์ 1 พลิกอันสุดท้ายย้ายดิสก์ 0 และตรงนี้ เราจะต้องเกลือกกลิ้งสามครั้งไปที่ตำแหน่ง 8 และนั่นสอดคล้องกับการย้ายจานที่ 3 มีบางอย่างมหัศจรรย์เกี่ยวกับมัน เหมือนตอนที่ฉันเห็นสิ่งนี้ครั้งแรก ฉันก็แบบว่า นี่มันใช้ไม่ได้ ฉันไม่รู้ว่ามันทำงานยังไง ฉันไม่รู้ว่าทำไมมันถึงได้ผล ตอนนี้ฉันรู้แล้ว แต่มันก็วิเศษมากเมื่อคุณเห็นมัน และฉันจำได้ว่าเอาแอนิเมชั่นสำหรับสิ่งนี้ ตอนที่ฉันสอนเรื่องนี้ และเหมือนกับว่า คุณรู้ไหม ฉันรู้ว่ามันทำงานอย่างไร ฉันรู้ทุกอย่างในนั้น แค่นั่งดูก็สนุกแล้ว โอ้ใช่. ",
  "model": "nmt",
  "time_range": [
   370.38,
   379.0
  ],
  "n_reviews": 0
 },
 {
  "input": "After this, counting up to 1-1, that involves just flipping the last bit, so you move disk 0 again. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   382.02000000000004,
   386.02
  ],
  "n_reviews": 0
 },
 {
  "input": "Then when your binary counting rolls over twice to the four's place, move disk 2, and the pattern continues like this. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   388.8,
   394.5
  ],
  "n_reviews": 0
 },
 {
  "input": "Flip the last, move disk 0. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   394.5,
   396.3
  ],
  "n_reviews": 0
 },
 {
  "input": "Flip the last two, move disk 1. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   396.3,
   397.9
  ],
  "n_reviews": 0
 },
 {
  "input": "Flip the last, move disk 0. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   397.9,
   398.34
  ],
  "n_reviews": 0
 },
 {
  "input": "And here we're going to have to roll over three times to the 8's place, and that corresponds to moving disk 3. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   398.38,
   402.88
  ],
  "n_reviews": 0
 },
 {
  "input": "There's something magical about it, like when I first saw this, I was like, this can't work. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   402.88,
   407.68
  ],
  "n_reviews": 0
 },
 {
  "input": "I don't know how this works, I don't know why this works, now I know, but it's just magical when you see it, and I remember putting together animation for this for when I was teaching this, and just like, you know, I know how this works, I know all the things in it, it's still fun to just sit and just like, you know, watch it play out. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   407.68,
   428.86
  ],
  "n_reviews": 0
 },
 {
  "input": "Oh yeah. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   428.86,
   428.86
  ],
  "n_reviews": 0
 },
 {
  "input": "I mean, it's not even clear at first that this is always going to give legal moves. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   428.86,
   431.88
  ],
  "n_reviews": 0
 },
 {
  "input": "For example, how do you know that every time you're rolling over to the 8's place, that disk 3 is necessarily going to be freed up to move? ",
  "translatedText": "ฉันหมายความว่า ในตอนแรกยังไม่ชัดเจนด้วยซ้ำว่าการดำเนินการทางกฎหมายจะเกิดขึ้นเสมอ ตัวอย่างเช่น คุณจะรู้ได้อย่างไรว่าทุกครั้งที่คุณกลิ้งไปที่ตำแหน่ง 8 ดิสก์นั้น 3 จะต้องถูกปล่อยว่างเพื่อย้าย ในขณะเดียวกัน, ผลเฉลยก็ทำให้เกิดคำถามพวกนี้ขึ้นมาทันที เช่น, มันมาจากไหน, ทำไมมันถึงได้ผล และมีวิธีใดที่ดีกว่าการทำ 2 กำลัง n ลบ 1 ขั้นไหม? ",
  "model": "nmt",
  "time_range": [
   431.88,
   439.44
  ],
  "n_reviews": 0
 },
 {
  "input": "At the same time, the solution just immediately raises these questions like, where does this come from, why does this work, and is there a better way of doing this than having to do 2 to the n minus 1 steps? ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   439.44,
   450.96
  ],
  "n_reviews": 0
 },
 {
  "input": "It turns out, not only does this solve Towers of Hanoi, but it does it in the most efficient way possible. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   450.96,
   458.08
  ],
  "n_reviews": 0
 },
 {
  "input": "Understanding why this works and how it works and what the heck is going on comes down to a certain perspective on the puzzle, what CS folk might call a recursive perspective. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   458.08,
   465.74
  ],
  "n_reviews": 0
 },
 {
  "input": "Disk 3 is thinking, okay, 2, 1, and 0, like you have to get off of me, like I can't really function under this much weight and pressure. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   465.74,
   473.84
  ],
  "n_reviews": 0
 },
 {
  "input": "And so just from disk 3's perspective, if you want to figure out how is disk 3 going to get over here, somehow, I don't care how, disk 2, 1, and 0 have to get to spindle B. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   473.84,
   483.96
  ],
  "n_reviews": 0
 },
 {
  "input": "That's the only way it can move. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   483.96,
   485.96
  ],
  "n_reviews": 0
 },
 {
  "input": "If any of these disks are on top of 3, it can't move. ",
  "translatedText": "ปรากฎว่าไม่เพียงแต่จะแก้ปัญหาหอคอยแห่งฮานอยเท่านั้น แต่ยังทำในวิธีที่มีประสิทธิภาพมากที่สุดเท่าที่จะเป็นไปได้อีกด้วย การทำความเข้าใจว่าเหตุใดจึงทำงานและวิธีการทำงาน และสิ่งที่เกิดขึ้นนั้นมาจากมุมมองที่แน่นอนของปริศนา สิ่งที่ CS Folk อาจเรียกว่ามุมมองแบบเรียกซ้ำ ดิสก์ 3 กำลังคิด โอเค 2, 1 และ 0 เหมือนคุณต้องออกไปจากฉัน เหมือนฉันไม่สามารถทำงานได้จริงๆ ภายใต้น้ำหนักและความกดดันมากมายขนาดนี้ จากมุมมองของดิสก์ 3 ถ้าคุณอยากรู้ว่าดิสก์ 3 จะไปถึงจุดนี้ได้อย่างไร ฉันไม่สนหรอกว่าดิสก์ 2, 1 และ 0 จะต้องไปถึงแกน B อย่างไร นั่นเป็นวิธีเดียวที่มันสามารถเคลื่อนที่ได้ หากดิสก์ใด ๆ เหล่านี้อยู่ด้านบนสุดของ 3 จะไม่สามารถเคลื่อนย้ายได้ หากตัวใดตัวหนึ่งอยู่ในสปินเดิล C ก็ไม่สามารถเคลื่อนที่ไปตรงนั้นได้ ยังไงซะ เราก็ต้องลด 2, 1 และ 0 เมื่อทำเสร็จแล้ว เราก็สามารถย้ายดิสก์ 3 ไปตรงนั้นได้ แล้วดิสก์ 3 ก็บอกว่า &quot;พร้อมแล้ว&quot; คุณไม่จำเป็นต้องย้ายฉันอีกต่อไป คนอื่นๆ แค่คิดออกว่าจะมาที่นี่ได้อย่างไร และในแง่หนึ่ง ตอนนี้คุณมีปัญหาเดียวกันในเวอร์ชันที่เล็กลงแล้ว ตอนนี้คุณมีดิสก์ 0, 1 และ 2 อยู่บนสปินเดิล B คุณต้องไปที่ C แนวคิดก็คือว่า ถ้าฉันโฟกัสไปที่ดิสก์แผ่นเดียว และคิดว่าจะต้องทำอย่างไรเพื่อให้ดิสก์นี้ทำงานได้ ฉันสามารถเปลี่ยนปัญหาที่ใหญ่กว่าให้กลายเป็นปัญหาที่เล็กลงได้เล็กน้อย แล้วฉันจะแก้ปัญหานั้นได้อย่างไร? ",
  "model": "nmt",
  "time_range": [
   486.7,
   488.72
  ],
  "n_reviews": 0
 },
 {
  "input": "If any of them are in spindle C, it can't move there. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   488.72,
   490.6
  ],
  "n_reviews": 0
 },
 {
  "input": "So somehow we have to get 2, 1, and 0 off. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   490.6,
   493.76
  ],
  "n_reviews": 0
 },
 {
  "input": "Having done that, then we can move disk 3 over there. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   493.76,
   496.92
  ],
  "n_reviews": 0
 },
 {
  "input": "And then disk 3 says, I'm set. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   496.92,
   498.38
  ],
  "n_reviews": 0
 },
 {
  "input": "You never need to move me again. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   498.58,
   501.34
  ],
  "n_reviews": 0
 },
 {
  "input": "Everyone else just figure out how to get here. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   501.34,
   503.06
  ],
  "n_reviews": 0
 },
 {
  "input": "And in a sense, you now have a smaller version of the same problem. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   503.06,
   507.58
  ],
  "n_reviews": 0
 },
 {
  "input": "Now you've got disk 0, 1, and 2 sitting on spindle B, you got to get them to C. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   507.58,
   510.66
  ],
  "n_reviews": 0
 },
 {
  "input": "So the idea is that if I just focus on one disk and I think about what am I going to have to do to get this disk to work, I can turn my bigger problem into something slightly smaller. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   510.66,
   520.16
  ],
  "n_reviews": 0
 },
 {
  "input": "And then how do I solve that? ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   520.16,
   522.24
  ],
  "n_reviews": 0
 },
 {
  "input": "Well, it's exactly the same thing. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   522.26,
   525.12
  ],
  "n_reviews": 0
 },
 {
  "input": "If disk 2 is going to say, disk 1 and disk 0, it's not you, it's me. ",
  "translatedText": "มันก็เป็นสิ่งเดียวกันทุกประการ ถ้าดิสก์ 2 จะบอกว่าดิสก์ 1 และดิสก์ 0 ไม่ใช่คุณ แต่เป็นฉันเอง ฉันแค่ต้องการพื้นที่บางส่วน ลง. ",
  "model": "nmt",
  "time_range": [
   525.12,
   530.02
  ],
  "n_reviews": 0
 },
 {
  "input": "I just need some space. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   530.02,
   530.02
  ],
  "n_reviews": 0
 },
 {
  "input": "Get off. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   530.02,
   530.02
  ],
  "n_reviews": 0
 },
 {
  "input": "They need to move somewhere. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   530.02,
   532.26
  ],
  "n_reviews": 0
 },
 {
  "input": "Then disk 2 can move to where it needs to go. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   532.26,
   533.38
  ],
  "n_reviews": 0
 },
 {
  "input": "Then disk 1 and 0 can do this. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   533.98,
   536.92
  ],
  "n_reviews": 0
 },
 {
  "input": "But the interesting point is that every single disk pretty much has the exact same strategy. ",
  "translatedText": "พวกเขาจำเป็นต้องย้ายไปที่ไหนสักแห่ง จากนั้นดิสก์ 2 ก็สามารถย้ายไปยังตำแหน่งที่ต้องการได้ จากนั้นดิสก์ 1 และ 0 ก็สามารถทำได้ แต่จุดที่น่าสนใจคือทุกๆ ดิสก์มีกลยุทธ์ที่เหมือนกันทุกประการ พวกเขาทั้งหมดบอกว่าทุกคนที่อยู่เหนือฉันออกไป แล้วฉันจะย้าย. ",
  "model": "nmt",
  "time_range": [
   536.92,
   540.9
  ],
  "n_reviews": 0
 },
 {
  "input": "They all say, everybody above me, get off. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   540.9,
   543.14
  ],
  "n_reviews": 0
 },
 {
  "input": "Then I'm going to move. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   543.14,
   543.24
  ],
  "n_reviews": 0
 },
 {
  "input": "Okay, everyone pile back on. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   543.24,
   544.9
  ],
  "n_reviews": 0
 },
 {
  "input": "When you know that insight, you can code up something that will solve towers of Hanoi, like five or six lines of code, which probably has the highest ratio of intellectual investment to lines of code ever. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   544.9,
   554.44
  ],
  "n_reviews": 0
 },
 {
  "input": "And if you think about it for a bit, it becomes clear that this has to be the most efficient solution. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   554.84,
   559.54
  ],
  "n_reviews": 0
 },
 {
  "input": "At every step, you're only doing what's forced upon you. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   559.54,
   562.44
  ],
  "n_reviews": 0
 },
 {
  "input": "You have to get disk 0 through 2 off before you can move disk 3. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   562.44,
   566.9
  ],
  "n_reviews": 0
 },
 {
  "input": "And you have to move disk 3. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   566.9,
   567.76
  ],
  "n_reviews": 0
 },
 {
  "input": "And then you have to move disk 0 through 2 back onto it. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   567.76,
   570.94
  ],
  "n_reviews": 0
 },
 {
  "input": "There's just not any room for inefficiency from this perspective. ",
  "translatedText": "โอเค ทุกคนถอยกลับไป เมื่อคุณรู้ข้อมูลเชิงลึกนั้น คุณสามารถเขียนโค้ดบางอย่างที่จะแก้ปัญหาหอคอยแห่งฮานอยได้ เช่น โค้ดห้าหรือหกบรรทัด ซึ่งอาจมีอัตราส่วนการลงทุนทางปัญญาต่อบรรทัดโค้ดสูงที่สุดเท่าที่เคยมีมา และถ้าคุณลองคิดดูสักนิด มันก็ชัดเจนว่านี่จะต้องเป็นวิธีแก้ปัญหาที่มีประสิทธิภาพที่สุด ในทุกขั้นตอน คุณจะทำเฉพาะสิ่งที่ถูกบังคับเท่านั้น คุณต้องปิดดิสก์ 0 ถึง 2 ก่อนจึงจะสามารถย้ายดิสก์ 3 ได้ และคุณต้องย้ายดิสก์ 3 จากนั้นคุณต้องย้ายดิสก์ 0 ถึง 2 กลับเข้าไปที่นั้น ไม่มีที่ว่างสำหรับความไร้ประสิทธิภาพจากมุมมองนี้ เหตุใดการนับไบนารีจึงจับอัลกอริธึมนี้ สิ่งที่เกิดขึ้นที่นี่คือ รูปแบบการแก้ปัญหาย่อย ย้ายดิสก์ขนาดใหญ่ แล้วแก้ไขปัญหาย่อยอีกครั้ง ขนานกันอย่างสมบูรณ์แบบกับรูปแบบการนับเลขฐานสอง นับจำนวนหนึ่ง ทบยอด นับถึงจำนวนนั้นอีกครั้ง และอัลกอริธึมหอคอยแห่งฮานอยและการนับเลขฐานสองนี้เป็นกระบวนการที่คล้ายกันในตัวเอง ในแง่ที่ว่าหากคุณซูมออกและนับเลขยกกำลังที่ใหญ่กว่าเป็น 2 หรือแก้หอคอยแห่งฮานอยด้วยดิสก์มากขึ้น ทั้งสองยังคงมีโครงสร้างเดียวกันนั้น . ",
  "model": "nmt",
  "time_range": [
   571.02,
   573.6
  ],
  "n_reviews": 0
 },
 {
  "input": "So why does counting in binary capture this algorithm? ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   573.6,
   575.34
  ],
  "n_reviews": 0
 },
 {
  "input": "Well, what's going on here is that this pattern of solving a subproblem, moving a big disk, then solving a subproblem again, is perfectly paralleled by the pattern of binary counting. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   576.32,
   586.02
  ],
  "n_reviews": 0
 },
 {
  "input": "Count up some amount, roll over, count up to that same amount again. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   586.02,
   593.12
  ],
  "n_reviews": 0
 },
 {
  "input": "And this towers of Hanoi algorithm and binary counting are both self-similar processes, in the sense that if you zoom out and count up to a larger power of 2, or solve towers of Hanoi with more disks, they both still have that same structure. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   593.12,
   607.06
  ],
  "n_reviews": 0
 },
 {
  "input": "Subproblem, do a thing, subproblem. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   607.06,
   609.3
  ],
  "n_reviews": 0
 },
 {
  "input": "For example, at a pretty small scale, solving towers of Hanoi for two disks, move disk 0, move disk 1, move disk 0, is reflected by counting up to 3 in binary. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   609.88,
   621.0
  ],
  "n_reviews": 0
 },
 {
  "input": "Flip the last bit, roll over once, flip the last bit. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   621.0,
   623.42
  ],
  "n_reviews": 0
 },
 {
  "input": "At a slightly larger scale, solving towers of Hanoi for three disks looks like doing whatever it takes to solve two disks, move disk number 2, then do whatever it takes to solve two disks again. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   623.42,
   635.3
  ],
  "n_reviews": 0
 },
 {
  "input": "Analogously, counting up to 111 in binary involves counting up to 3, rolling over all three bits, then counting up three more. ",
  "translatedText": "ปัญหาย่อย ทำสิ่งหนึ่ง ปัญหาย่อย ตัวอย่างเช่น ในระดับที่ค่อนข้างเล็ก การแก้หอคอยแห่งฮานอยด้วยดิสก์สองแผ่น ย้ายดิสก์ 0 ย้ายดิสก์ 1 ย้ายดิสก์ 0 จะสะท้อนให้เห็นโดยการนับถึง 3 ในรูปแบบไบนารี พลิกบิตสุดท้าย เกลือกกลิ้งหนึ่งครั้ง พลิกบิตสุดท้าย ด้วยขนาดที่ใหญ่ขึ้นเล็กน้อย การแก้ทาวเวอร์ของฮานอยด้วยดิสก์สามดิสก์ ดูเหมือนว่าจะทำทุกอย่างเพื่อแก้ปัญหาดิสก์สองดิสก์ ย้ายดิสก์หมายเลข 2 จากนั้นทำทุกอย่างเพื่อแก้ไขดิสก์สองดิสก์อีกครั้ง ในทำนองเดียวกัน การนับถึง 111 ในไบนารี่เกี่ยวข้องกับการนับถึง 3 โดยทบทั้งสามบิต จากนั้นนับอีกสามบิต ในทุกระดับ ทั้งสองกระบวนการมีรายละเอียดที่เหมือนกันนี้ ในแง่หนึ่ง เหตุผลที่คำตอบของเลขฐานสองนี้ใช้ได้ หรืออย่างน้อยก็มีคำอธิบาย ผมรู้สึกว่าไม่มีคำอธิบายใดๆ แต่ผมคิดว่าวิธีที่เป็นธรรมชาติที่สุดคือรูปแบบที่คุณใช้สร้างเลขฐานสองเหล่านี้ เหมือนกันทุกประการ โครงสร้างเป็นรูปแบบที่คุณจะใช้สำหรับหอคอยแห่งฮานอย ซึ่งเป็นเหตุผลว่าทำไมถ้าคุณดูที่บิตที่พลิก คุณจะย้อนกลับกระบวนการนี้ได้อย่างมีประสิทธิภาพ คุณกำลังพูดว่า กระบวนการใดที่ทำให้เกิดสิ่งเหล่านี้? ",
  "model": "nmt",
  "time_range": [
   635.3,
   641.6
  ],
  "n_reviews": 0
 },
 {
  "input": "At all scales, both processes have this same breakdown. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   641.6,
   645.6
  ],
  "n_reviews": 0
 },
 {
  "input": "So in a sense, the reason that this binary solution works, or at least an explanation, I feel like there's no one explanation, but I think the most natural one is that the pattern you would use to generate these binary numbers has exactly the same structure as the pattern you would use for towers of Hanoi, which is why if you look at the bits flipping, you're effectively reversing this process. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   645.6,
   671.46
  ],
  "n_reviews": 0
 },
 {
  "input": "You're saying, what process generated these? ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   671.46,
   673.58
  ],
  "n_reviews": 0
 },
 {
  "input": "Like if I were trying to understand how these bits were flipped to give me this thing, you're effectively reversing the recursive algorithm for towers of Hanoi, which is why it works out. ",
  "translatedText": "เหมือนว่าฉันพยายามที่จะเข้าใจว่าบิตเหล่านี้ถูกพลิกเพื่อให้สิ่งนี้กับฉันได้อย่างไร คุณกำลังย้อนกลับอัลกอริธึมการเรียกซ้ำสำหรับหอคอยแห่งฮานอยอย่างมีประสิทธิภาพ ซึ่งเป็นเหตุผลว่าทำไมมันถึงได้ผล มันเจ๋งมากใช่มั้ย? ",
  "model": "nmt",
  "time_range": [
   673.58,
   686.22
  ],
  "n_reviews": 0
 },
 {
  "input": "That's pretty cool, right? ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   686.22,
   686.98
  ],
  "n_reviews": 0
 },
 {
  "input": "But it actually gets cooler. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   687.6,
   689.96
  ],
  "n_reviews": 0
 },
 {
  "input": "I haven't even gotten to how this relates to Sierpinski's triangle. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   689.96,
   692.96
  ],
  "n_reviews": 0
 },
 {
  "input": "And that's exactly what I'm going to do in the follow-on video, part 2. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   692.96,
   696.06
  ],
  "n_reviews": 0
 },
 {
  "input": "Many thanks to everybody who's supporting these videos on Patreon. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   696.06,
   698.32
  ],
  "n_reviews": 0
 },
 {
  "input": "I just finished the first chapter of Essence of Calculus, and I'm working on the second one right now, and Patreon supporters are getting early access to these videos before I publish the full series in a few months. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   698.32,
   709.32
  ],
  "n_reviews": 0
 },
 {
  "input": "This video and the next one are also supported in part by Desmos, and before the next video I just want to take a moment and share with you guys a little about who they are and the fact that they're hiring. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   709.5,
   722.52
  ],
  "n_reviews": 0
 },
 {
  "input": "So Desmos is actually really cool. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   722.52,
   723.78
  ],
  "n_reviews": 0
 },
 {
  "input": "They make a lot of these interactive math activities for classrooms and tools for teachers. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   723.78,
   730.4
  ],
  "n_reviews": 0
 },
 {
  "input": "The real meat of their offering is in their classroom activities. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   730.4,
   732.52
  ],
  "n_reviews": 0
 },
 {
  "input": "For my part, I'm super impressed by just how well-thought-out these activities are from a pedagogical standpoint. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   732.52,
   739.16
  ],
  "n_reviews": 0
 },
 {
  "input": "The team clearly knows their stuff, and they know where they stand to make a difference in students' and teachers' lives. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   739.16,
   744.42
  ],
  "n_reviews": 0
 },
 {
  "input": "And like I said, they're hiring. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   744.42,
   745.1
  ],
  "n_reviews": 0
 },
 {
  "input": "They are always looking to bring in more good talent, whether that's engineering talent, designers, teachers, or whatever other skill sets line up with what they want to do. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   745.52,
   755.12
  ],
  "n_reviews": 0
 },
 {
  "input": "If any of you out there are interested in joining them, helping them make some of these great tools for teachers and students, you can check out the careers page that I've linked in the description. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   755.12,
   765.94
  ],
  "n_reviews": 0
 },
 {
  "input": "Personally, I think they're doing some really meaningful stuff. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   765.94,
   767.74
  ],
  "n_reviews": 0
 },
 {
  "input": "I think their activities are building genuinely good math intuitions for students, and the world could use a few more talented people pointing their efforts towards education the way that they do. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   767.74,
   779.42
  ],
  "n_reviews": 0
 },
 {
  "input": "Alright, so with that I'll see you guys next video, and I think you're really going to like where this is going. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   779.42,
   838.1
  ],
  "n_reviews": 0
 }
]