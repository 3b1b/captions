1
00:00:00,000 --> 00:00:08,720
Hoje, quero compartilhar com vocês uma maneira bacana de resolver o quebra-cabeça

2
00:00:08,720 --> 00:00:11,240
das Torres de Hanói apenas contando em um sistema numérico diferente.

3
00:00:11,240 --> 00:00:16,720
E surpreendentemente, isto está relacionado com encontrar uma curva que preencha o triângulo de Sierpinski.

4
00:00:16,720 --> 00:00:20,920
Aprendi sobre isso com um ex-professor de ciência da computação meu, seu nome é Keith

5
00:00:20,920 --> 00:00:24,840
Schwartz, e devo dizer que esse homem é um dos melhores educadores que já conheci.

6
00:00:24,840 --> 00:00:28,560
Na verdade, gravei um pouco da conversa em que ele me mostrou essas

7
00:00:28,560 --> 00:00:42,520
coisas, para que vocês possam ouvir um pouco do que ele descreveu diretamente.

8
00:00:42,520 --> 00:00:46,840
Caso você não esteja familiarizado, vamos apenas explicar o

9
00:00:46,840 --> 00:00:54,440
que realmente é o quebra-cabeça das Torres de Hanói.

10
00:00:54,440 --> 00:00:57,880
Você pensa nesses discos como tendo um buraco no

11
00:00:57,880 --> 00:00:59,260
meio para que você possa encaixá-los em um pino.

12
00:00:59,260 --> 00:01:05,040
A configuração mostrada aqui tem cinco discos, que rotularei como 0, 1,

13
00:01:05,040 --> 00:01:24,120
2, 3, 4, mas, em princípio, você pode ter quantos discos quiser.

14
00:01:24,120 --> 00:01:29,440
Por exemplo, seu primeiro movimento deve envolver a movimentação do disco 0, já que

15
00:01:29,440 --> 00:01:33,320
qualquer outro disco contém coisas que precisam ser removidas antes de poder se mover.

16
00:01:33,320 --> 00:01:38,000
Depois disso, você pode mover o disco 1, mas ele deve ir para

17
00:01:38,000 --> 00:01:44,040
qualquer pino que não tenha o disco 0 no momento, caso contrário você

18
00:01:44,040 --> 00:01:45,040
estaria colocando um disco maior em um menor, o que não é permitido.

19
00:01:45,040 --> 00:01:49,600
Se você nunca viu isso antes, recomendo fortemente que você faça uma

20
00:01:49,600 --> 00:02:00,320
pausa e retire alguns livros de tamanhos variados e experimente você mesmo.

21
00:02:00,320 --> 00:02:04,760
Agora Keith me mostrou algo realmente surpreendente sobre esse quebra-cabeça, que é

22
00:02:04,760 --> 00:02:10,200
que você pode resolvê-lo apenas contando em binário e associando o

23
00:02:10,200 --> 00:02:12,480
ritmo dessa contagem a um certo ritmo de movimentos do disco.

24
00:02:12,480 --> 00:02:16,420
Para quem não está familiarizado com binário, reservarei um

25
00:02:16,420 --> 00:02:17,420
momento para fazer uma rápida visão geral aqui primeiro.

26
00:02:17,420 --> 00:02:21,260
Na verdade, mesmo que você esteja familiarizado com o binário, quero explicá-lo com foco

27
00:02:21,260 --> 00:02:26,560
no ritmo da contagem, no qual você pode ou não ter pensado antes.

28
00:02:26,560 --> 00:02:30,500
Qualquer descrição de binário normalmente começa com uma introspecção sobre nossa maneira usual

29
00:02:30,500 --> 00:02:36,100
de representar números, o que chamamos de base 10, já que usamos 10

30
00:02:36,100 --> 00:02:38,560
dígitos separados, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 .

31
00:02:38,560 --> 00:02:44,220
O ritmo da contagem começa percorrendo todos os 10 dígitos.

32
00:02:45,220 --> 00:02:52,320
Então, quando os novos dígitos acabarem, você expressa o próximo número, 10, com dois dígitos, 1, 0.

33
00:02:52,320 --> 00:02:56,760
Você diz que 1 está na casa das dezenas, pois serve para encapsular o grupo de 10

34
00:02:56,760 --> 00:03:02,540
que você já contou até agora, enquanto libera a casa das unidades para redefinir para 0.

35
00:03:02,540 --> 00:03:08,280
O ritmo de contagem se repete assim, contando até 9, rolando para a

36
00:03:08,280 --> 00:03:13,000
casa das dezenas, contando mais 9, rolando para a casa das dezenas, etc.

37
00:03:13,000 --> 00:03:19,800
Bem, depois de repetir esse processo 9 vezes, você passa para a

38
00:03:19,800 --> 00:03:24,640
casa das centenas, um dígito que registra quantos grupos de 100

39
00:03:24,640 --> 00:03:30,040
você acertou, liberando os outros dois dígitos para redefinir para 0.

40
00:03:30,040 --> 00:03:34,060
Desta forma, o ritmo da contagem é auto-semelhante.

41
00:03:34,060 --> 00:03:38,560
Mesmo se você diminuir o zoom para uma escala maior, o

42
00:03:39,120 --> 00:03:43,960
processo parece fazer algo, rolar, fazer a mesma coisa, rolar

43
00:03:43,960 --> 00:03:49,960
e repetir 9 vezes antes de um rollover ainda maior.

44
00:03:49,960 --> 00:03:56,200
Em binário, também conhecido como base 2, você se limita a dois dígitos, 0

45
00:03:56,200 --> 00:03:59,700
e 1, comumente chamados de bits, que é a abreviação de dígitos binários.

46
00:03:59,700 --> 00:04:03,960
O resultado é que quando você está contando, você tem que rolar o tempo todo.

47
00:04:03,960 --> 00:04:08,080
Depois de contar 0, 1, você já ficou sem bits, então precisa rolar para a casa dos

48
00:04:08,600 --> 00:04:13,440
dois, escrever 1-0 e resistir a cada impulso do seu cérebro treinado na base 10 de ler

49
00:04:13,440 --> 00:04:20,120
isso como 10, e em vez disso, entenda que significa 1 grupo de 2 mais 0.

50
00:04:20,120 --> 00:04:26,400
Em seguida, aumente para 1-1, que representa 3, e você já terá que rolar novamente, e

51
00:04:26,400 --> 00:04:30,920
como há um 1 no lugar do dois, isso também terá que rolar, dando a

52
00:04:30,920 --> 00:04:37,800
você 1-0-0, que representa 1 grupo de 4 mais 0 grupos de 2 mais 0.

53
00:04:37,800 --> 00:04:44,660
Da mesma forma que os dígitos na base 10 representam potências de

54
00:04:44,660 --> 00:04:46,380
10, os bits na base 2 representam diferentes potências de 2.

55
00:04:46,380 --> 00:04:50,360
Então, em vez de falar sobre uma casa de 10, uma casa de 100, uma casa de 1000,

56
00:04:50,360 --> 00:04:55,800
coisas assim, você fala sobre uma casa de 2, uma casa de 4 e uma casa de 8.

57
00:04:55,800 --> 00:05:01,080
O ritmo da contagem é agora muito mais rápido, mas isso quase o torna mais perceptível.

58
00:05:01,080 --> 00:05:02,940
Vire o último e role uma vez.

59
00:05:02,940 --> 00:05:04,680
Vire o último e role duas vezes.

60
00:05:04,680 --> 00:05:06,380
Vire o último e role uma vez.

61
00:05:06,380 --> 00:05:09,100
Vire o último e role três vezes.

62
00:05:09,100 --> 00:05:13,980
Novamente, há uma certa semelhança com esse padrão.

63
00:05:13,980 --> 00:05:22,480
Em todas as escalas, o processo consiste em fazer algo, rolar e depois fazer a mesma coisa novamente.

64
00:05:22,480 --> 00:05:27,980
Em pequena escala, digamos, contar até 3, que é 1-1 em binário, isso significa

65
00:05:27,980 --> 00:05:33,320
inverter o último bit, passar para os dois e depois inverter o último bit.

66
00:05:33,320 --> 00:05:40,000
Em uma escala maior, como contar até 15, que é 1-1-1-1, o processo consiste em deixar os últimos 3

67
00:05:40,000 --> 00:05:47,260
contarem até 7, passar para a casa do 8 e depois deixar os últimos 3 bits contarem novamente. .

68
00:05:47,260 --> 00:05:53,040
Contar até 255, que são 8 1s sucessivos, é como deixar os

69
00:05:53,040 --> 00:05:57,420
últimos 7 bits contarem até ficarem cheios, passar para o lugar

70
00:05:57,420 --> 00:06:00,080
dos 128 e depois deixar os últimos 7 bits contarem novamente.

71
00:06:01,080 --> 00:06:05,680
Tudo bem, então com essa mini-introdução, o fato surpreendente que Keith me mostrou

72
00:06:05,680 --> 00:06:10,440
é que podemos usar esse ritmo para resolver as torres de Hanói.

73
00:06:10,440 --> 00:06:12,720
Você começa contando a partir de 0.

74
00:06:12,720 --> 00:06:18,640
Sempre que você estiver invertendo apenas o último bit, de 0

75
00:06:18,640 --> 00:06:22,420
para 1, mova o disco 0 um pino para a direita.

76
00:06:22,420 --> 00:06:29,140
Se já estava no pino mais à direita, basta fazer um loop de volta no primeiro pino.

77
00:06:29,200 --> 00:06:35,700
Se você rolar uma vez para o lugar dos dois, o que

78
00:06:35,700 --> 00:06:37,740
significa que você inverte os dois últimos bits, moverá o disco 1.

79
00:06:37,740 --> 00:06:39,740
Para onde você o move, você pode perguntar?

80
00:06:39,740 --> 00:06:43,220
Você não tem escolha, não pode colocá-lo em cima do disco 0 e há

81
00:06:43,220 --> 00:06:47,100
apenas um outro pino, então você o move para onde for forçado a movê-lo.

82
00:06:47,100 --> 00:06:51,220
Depois disso, contando até 1-1, envolve apenas inverter o

83
00:06:51,220 --> 00:06:52,900
último bit, então você move o disco 0 novamente.

84
00:06:52,900 --> 00:06:59,620
Então, quando sua contagem binária passar duas vezes para a posição

85
00:06:59,620 --> 00:07:01,440
do quatro, mova o disco 2 e o padrão continuará assim.

86
00:07:01,440 --> 00:07:03,460
Vire o último, mova o disco 0.

87
00:07:03,460 --> 00:07:05,900
Vire os dois últimos, mova o disco 1.

88
00:07:05,900 --> 00:07:08,080
Vire o último, mova o disco 0.

89
00:07:08,080 --> 00:07:12,420
E aqui teremos que rolar três vezes para a casa

90
00:07:12,420 --> 00:07:14,100
do 8, e isso corresponde a mover o disco 3.

91
00:07:14,100 --> 00:07:18,180
Há algo mágico nisso, como quando vi isso

92
00:07:18,180 --> 00:07:19,180
pela primeira vez, pensei, isso não pode funcionar.

93
00:07:19,180 --> 00:07:22,500
Não sei como isso funciona, não sei por que funciona, agora eu sei, mas é

94
00:07:22,500 --> 00:07:28,100
simplesmente mágico quando você vê, e lembro-me de montar uma animação para isso quando

95
00:07:28,100 --> 00:07:32,540
estava ensinando isso, e tipo, você sabe, eu sei como isso funciona, eu sei todas

96
00:07:32,540 --> 00:07:36,260
as coisas nele, ainda é divertido apenas sentar e, você sabe, assistir o desenrolar.

97
00:07:36,260 --> 00:07:37,260
Oh sim.

98
00:07:37,260 --> 00:07:41,800
Quero dizer, a princípio nem está claro se isso sempre dará movimentos legais.

99
00:07:41,800 --> 00:07:45,980
Por exemplo, como você sabe que toda vez que você passa para

100
00:07:45,980 --> 00:07:49,820
a posição 8, o disco 3 será necessariamente liberado para se mover?

101
00:07:49,820 --> 00:07:53,900
Ao mesmo tempo, a solução levanta imediatamente questões como: de onde vem

102
00:07:53,900 --> 00:07:58,300
isso, por que funciona e há uma maneira melhor de fazer isso

103
00:07:58,300 --> 00:08:00,560
do que ter que fazer 2 elevado a n menos 1 passos?

104
00:08:00,560 --> 00:08:05,140
Acontece que isso não apenas resolve as Torres de

105
00:08:05,140 --> 00:08:07,180
Hanói, mas também da maneira mais eficiente possível.

106
00:08:07,180 --> 00:08:10,680
Entender por que isso funciona, como funciona e o que diabos está acontecendo se resume a

107
00:08:10,680 --> 00:08:16,860
uma certa perspectiva do quebra-cabeça, o que o pessoal do CS pode chamar de perspectiva recursiva.

108
00:08:16,900 --> 00:08:21,420
O disco 3 está pensando, ok, 2, 1 e 0, como se você tivesse que sair

109
00:08:21,420 --> 00:08:25,020
de cima de mim, como se eu realmente não pudesse funcionar sob tanto peso e pressão.

110
00:08:25,020 --> 00:08:28,660
E então, apenas da perspectiva do disco 3, se você quiser descobrir como o disco 3 vai chegar aqui,

111
00:08:28,660 --> 00:08:33,900
de alguma forma, não me importa como, os discos 2, 1 e 0 têm que chegar ao fuso B.

112
00:08:33,900 --> 00:08:36,020
Essa é a única maneira pela qual ele pode se mover.

113
00:08:36,020 --> 00:08:38,060
Se algum desses discos estiver acima de 3, ele não poderá se mover.

114
00:08:38,060 --> 00:08:41,000
Se algum deles estiver no fuso C, não poderá se deslocar até lá.

115
00:08:41,000 --> 00:08:43,940
Então, de alguma forma, temos que eliminar 2, 1 e 0.

116
00:08:43,980 --> 00:08:48,180
Feito isso, podemos mover o disco 3 para lá.

117
00:08:48,180 --> 00:08:50,020
E então o disco 3 diz, estou pronto.

118
00:08:50,020 --> 00:08:51,940
Você nunca mais precisará me mover novamente.

119
00:08:51,940 --> 00:08:54,340
Todos os outros apenas descobrem como chegar aqui.

120
00:08:54,340 --> 00:08:57,540
E, de certa forma, agora você tem uma versão menor do mesmo problema.

121
00:08:57,540 --> 00:09:02,380
Agora que você tem os discos 0, 1 e 2 no fuso B, você precisa levá-los para C. Então a

122
00:09:02,380 --> 00:09:06,180
ideia é que se eu me concentrar apenas em um disco e pensar no que terei que

123
00:09:06,180 --> 00:09:10,680
fazer para que esse disco funcione, posso transformar meu problema maior em algo um pouco menor.

124
00:09:10,680 --> 00:09:12,020
E então como faço para resolver isso?

125
00:09:12,020 --> 00:09:13,520
Bem, é exatamente a mesma coisa.

126
00:09:13,600 --> 00:09:17,160
Se o disco 2 disser disco 1 e disco 0, não é você, sou eu.

127
00:09:17,160 --> 00:09:18,160
Eu só preciso de algum espaço.

128
00:09:18,160 --> 00:09:19,160
Sair.

129
00:09:19,160 --> 00:09:20,520
Eles precisam se mudar para algum lugar.

130
00:09:20,520 --> 00:09:23,040
Então o disco 2 pode se mover para onde precisa ir.

131
00:09:23,040 --> 00:09:25,120
Então os discos 1 e 0 podem fazer isso.

132
00:09:25,120 --> 00:09:31,040
Mas o ponto interessante é que cada disco tem praticamente a mesma estratégia.

133
00:09:31,040 --> 00:09:33,220
Todos dizem, todos acima de mim, saiam.

134
00:09:33,220 --> 00:09:34,220
Então eu vou me mudar.

135
00:09:34,220 --> 00:09:36,560
Ok, todos voltem.

136
00:09:36,560 --> 00:09:40,600
Quando você conhece esse insight, pode codificar algo que resolverá as torres de

137
00:09:40,600 --> 00:09:46,720
Hanói, como cinco ou seis linhas de código, que provavelmente tem a maior

138
00:09:46,720 --> 00:09:50,680
proporção de investimento intelectual por linhas de código de todos os tempos.

139
00:09:50,680 --> 00:09:55,800
E se você pensar um pouco, fica claro

140
00:09:55,800 --> 00:09:56,800
que essa deve ser a solução mais eficiente.

141
00:09:56,800 --> 00:10:00,060
A cada passo, você está fazendo apenas o que lhe é imposto.

142
00:10:00,060 --> 00:10:04,440
Você precisa desligar o disco 0 a 2 antes de mover o disco 3.

143
00:10:04,440 --> 00:10:06,520
E você tem que mover o disco 3.

144
00:10:06,520 --> 00:10:09,680
E então você tem que mover o disco 0 a 2 de volta para ele.

145
00:10:09,760 --> 00:10:15,400
Simplesmente não há espaço para ineficiência nesta perspectiva.

146
00:10:15,400 --> 00:10:18,920
Então, por que a contagem em binário captura esse algoritmo?

147
00:10:18,920 --> 00:10:23,480
Bem, o que está acontecendo aqui é que esse padrão de

148
00:10:23,480 --> 00:10:28,480
resolver um subproblema, mover um disco grande e depois resolver um

149
00:10:28,480 --> 00:10:30,160
subproblema novamente, é perfeitamente paralelo ao padrão de contagem binária.

150
00:10:30,160 --> 00:10:35,280
Conte alguma quantia, role e conte novamente até a mesma quantia.

151
00:10:35,360 --> 00:10:40,520
E esse algoritmo das torres de Hanói e a contagem binária são ambos processos semelhantes, no

152
00:10:40,520 --> 00:10:44,980
sentido de que se você diminuir o zoom e contar até uma potência maior de 2,

153
00:10:44,980 --> 00:10:48,920
ou resolver as torres de Hanói com mais discos, ambos ainda terão a mesma estrutura .

154
00:10:48,920 --> 00:10:52,700
Subproblema, faça algo, subproblema.

155
00:10:52,700 --> 00:10:57,820
Por exemplo, em uma escala bem pequena, resolver torres de Hanói para dois discos, mover disco

156
00:10:57,820 --> 00:11:03,720
0, mover disco 1, mover disco 0, é refletido pela contagem até 3 em binário.

157
00:11:03,840 --> 00:11:07,560
Vire a última parte, role uma vez, vire a última parte.

158
00:11:07,560 --> 00:11:12,360
Em uma escala um pouco maior, resolver as torres de Hanói para três discos é

159
00:11:12,360 --> 00:11:17,120
como fazer o que for necessário para resolver dois discos, mover o disco número

160
00:11:17,120 --> 00:11:19,080
2 e, em seguida, fazer o que for necessário para resolver dois discos novamente.

161
00:11:19,080 --> 00:11:24,960
Analogamente, contar até 111 em binário envolve contar até 3,

162
00:11:24,960 --> 00:11:28,000
rolar todos os três bits e depois contar mais três.

163
00:11:28,000 --> 00:11:32,060
Em todas as escalas, ambos os processos apresentam o mesmo colapso.

164
00:11:32,100 --> 00:11:35,620
Então, de certa forma, a razão pela qual esta solução binária funciona, ou pelo menos

165
00:11:35,620 --> 00:11:40,820
uma explicação, sinto que não há uma explicação, mas acho que a mais natural é

166
00:11:40,820 --> 00:11:44,440
que o padrão que você usaria para gerar esses números binários tenha exatamente o mesmo

167
00:11:44,440 --> 00:11:49,560
estrutura como o padrão que você usaria para as torres de Hanói, e é por

168
00:11:49,560 --> 00:11:51,860
isso que se você observar a inversão dos bits, estará efetivamente revertendo esse processo.

169
00:11:51,860 --> 00:11:54,200
Você está dizendo: que processo gerou isso?

170
00:11:54,200 --> 00:12:00,460
Como se eu estivesse tentando entender como esses bits foram invertidos para me dar essa coisa, você

171
00:12:00,460 --> 00:12:06,180
está efetivamente revertendo o algoritmo recursivo para as torres de Hanói, e é por isso que funciona.

172
00:12:07,860 --> 00:12:09,620
Isso é muito legal, certo?

173
00:12:09,620 --> 00:12:10,940
Mas na verdade fica mais legal.

174
00:12:10,940 --> 00:12:14,460
Ainda nem entendi como isso se relaciona com o triângulo de Sierpinski.

175
00:12:14,460 --> 00:12:19,140
E é exatamente isso que farei no vídeo seguinte, parte 2.

176
00:12:19,140 --> 00:12:22,620
Muito obrigado a todos que apoiam esses vídeos no Patreon.

177
00:12:22,620 --> 00:12:26,380
Acabei de terminar o primeiro capítulo de Essence of Calculus e estou trabalhando

178
00:12:26,380 --> 00:12:30,840
no segundo agora, e os apoiadores do Patreon estão tendo acesso antecipado a

179
00:12:30,840 --> 00:12:34,780
esses vídeos antes de eu publicar a série completa em alguns meses.

180
00:12:34,780 --> 00:12:39,260
Este vídeo e o próximo também são apoiados em parte pela Desmos, e antes

181
00:12:39,260 --> 00:12:43,020
do próximo vídeo eu só quero parar um momento e compartilhar com vocês

182
00:12:43,020 --> 00:12:44,780
um pouco sobre quem eles são e o fato de que estão contratando.

183
00:12:44,780 --> 00:12:47,020
Então Desmos é realmente muito legal.

184
00:12:47,020 --> 00:12:51,680
Eles fazem muitas dessas atividades matemáticas interativas para salas de aula e ferramentas para professores.

185
00:12:51,680 --> 00:12:56,060
A verdadeira essência de sua oferta está nas atividades em sala de aula.

186
00:12:56,060 --> 00:13:00,380
De minha parte, estou super impressionado com o quão bem

187
00:13:00,380 --> 00:13:02,540
pensadas essas atividades são do ponto de vista pedagógico.

188
00:13:02,540 --> 00:13:06,000
A equipe conhece claramente o que faz e sabe onde se

189
00:13:06,000 --> 00:13:08,180
posicionar para fazer a diferença na vida de alunos e professores.

190
00:13:08,180 --> 00:13:10,140
E como eu disse, eles estão contratando.

191
00:13:10,140 --> 00:13:14,780
Eles estão sempre procurando trazer mais bons talentos, sejam engenheiros, designers, professores ou

192
00:13:14,780 --> 00:13:19,600
quaisquer outros conjuntos de habilidades que estejam alinhados com o que desejam fazer.

193
00:13:19,600 --> 00:13:22,920
Se algum de vocês estiver interessado em se juntar a eles, ajudando-os

194
00:13:22,920 --> 00:13:26,720
a criar algumas dessas ótimas ferramentas para professores e alunos, você pode

195
00:13:26,720 --> 00:13:27,720
conferir a página de carreiras que coloquei no link na descrição.

196
00:13:27,720 --> 00:13:30,480
Pessoalmente, acho que eles estão fazendo coisas realmente significativas.

197
00:13:30,480 --> 00:13:35,080
Acho que suas atividades estão construindo intuições matemáticas genuinamente boas para

198
00:13:35,080 --> 00:13:39,060
os alunos, e o mundo poderia usar mais algumas pessoas talentosas

199
00:13:39,060 --> 00:13:40,520
apontando seus esforços para a educação da maneira que fazem.

200
00:13:40,520 --> 00:13:44,640
Tudo bem, então com isso vejo vocês no próximo vídeo, e acho

201
00:13:44,640 --> 00:13:45,720
que vocês realmente vão gostar do rumo que isso vai dar.

