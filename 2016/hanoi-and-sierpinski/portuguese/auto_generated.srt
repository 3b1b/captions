1
00:00:04,200 --> 00:00:07,091
Hoje, quero compartilhar com vocês uma maneira bacana de resolver o 

2
00:00:07,091 --> 00:00:10,620
quebra-cabeça das Torres de Hanói apenas contando em um sistema numérico diferente.

3
00:00:11,220 --> 00:00:13,202
E surpreendentemente, isto está relacionado com 

4
00:00:13,202 --> 00:00:15,640
encontrar uma curva que preencha o triângulo de Sierpinski.

5
00:00:16,720 --> 00:00:19,898
Aprendi sobre isso com um ex-professor de ciência da computação meu, 

6
00:00:19,898 --> 00:00:23,768
seu nome é Keith Schwartz, e devo dizer que esse homem é um dos melhores educadores 

7
00:00:23,768 --> 00:00:24,460
que já conheci.

8
00:00:25,140 --> 00:00:28,138
Na verdade, gravei um pouco da conversa em que ele me mostrou essas coisas, 

9
00:00:28,138 --> 00:00:30,900
para que vocês possam ouvir um pouco do que ele descreveu diretamente.

10
00:00:38,420 --> 00:00:42,221
Caso você não esteja familiarizado, vamos apenas explicar 

11
00:00:42,221 --> 00:00:45,760
o que realmente é o quebra-cabeça das Torres de Hanói.

12
00:00:45,760 --> 00:00:50,154
Você pensa nesses discos como tendo um buraco no 

13
00:00:50,154 --> 00:00:54,460
meio para que você possa encaixá-los em um pino.

14
00:00:54,460 --> 00:00:58,518
A configuração mostrada aqui tem cinco discos, que rotularei como 0, 

15
00:00:58,518 --> 00:01:02,460
1, 2, 3, 4, mas, em princípio, você pode ter quantos discos quiser.

16
00:01:02,580 --> 00:01:07,091
Por exemplo, seu primeiro movimento deve envolver a movimentação do disco 0, 

17
00:01:07,091 --> 00:01:12,012
já que qualquer outro disco contém coisas que precisam ser removidas antes de poder 

18
00:01:12,012 --> 00:01:12,540
se mover.

19
00:01:12,540 --> 00:01:15,491
Depois disso, você pode mover o disco 1, mas ele deve ir para 

20
00:01:15,491 --> 00:01:17,871
qualquer pino que não tenha o disco 0 no momento, 

21
00:01:17,871 --> 00:01:22,060
caso contrário você estaria colocando um disco maior em um menor, o que não é permitido.

22
00:01:23,720 --> 00:01:27,102
Se você nunca viu isso antes, recomendo fortemente que você faça uma 

23
00:01:27,102 --> 00:01:30,780
pausa e retire alguns livros de tamanhos variados e experimente você mesmo.

24
00:01:30,780 --> 00:01:36,092
Agora Keith me mostrou algo realmente surpreendente sobre esse quebra-cabeça, 

25
00:01:36,092 --> 00:01:40,928
que é que você pode resolvê-lo apenas contando em binário e associando 

26
00:01:40,928 --> 00:01:45,220
o ritmo dessa contagem a um certo ritmo de movimentos do disco.

27
00:01:45,220 --> 00:01:48,001
Para quem não está familiarizado com binário, reservarei 

28
00:01:48,001 --> 00:01:50,880
um momento para fazer uma rápida visão geral aqui primeiro.

29
00:01:50,880 --> 00:01:53,563
Na verdade, mesmo que você esteja familiarizado com o binário, 

30
00:01:53,563 --> 00:01:55,608
quero explicá-lo com foco no ritmo da contagem, 

31
00:01:55,608 --> 00:01:57,440
no qual você pode ou não ter pensado antes.

32
00:01:57,440 --> 00:02:01,620
Qualquer descrição de binário normalmente começa com uma introspecção 

33
00:02:01,620 --> 00:02:06,218
sobre nossa maneira usual de representar números, o que chamamos de base 10, 

34
00:02:06,218 --> 00:02:10,100
já que usamos 10 dígitos separados, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9.

35
00:02:10,100 --> 00:02:14,820
O ritmo da contagem começa percorrendo todos os 10 dígitos.

36
00:02:14,820 --> 00:02:19,024
Então, quando os novos dígitos acabarem, você expressa o próximo número, 

37
00:02:19,024 --> 00:02:20,580
10, com dois dígitos, 1, 0.

38
00:02:20,580 --> 00:02:25,122
Você diz que 1 está na casa das dezenas, pois serve para encapsular o grupo de 10 que 

39
00:02:25,122 --> 00:02:29,560
você já contou até agora, enquanto libera a casa das unidades para redefinir para 0.

40
00:02:29,560 --> 00:02:35,506
O ritmo de contagem se repete assim, contando até 9, rolando para a casa das dezenas, 

41
00:02:35,506 --> 00:02:39,240
contando mais 9, rolando para a casa das dezenas, etc.

42
00:02:39,240 --> 00:02:45,812
Bem, depois de repetir esse processo 9 vezes, você passa para a casa das centenas, 

43
00:02:45,812 --> 00:02:50,484
um dígito que registra quantos grupos de 100 você acertou, 

44
00:02:50,484 --> 00:02:54,840
liberando os outros dois dígitos para redefinir para 0.

45
00:02:54,840 --> 00:02:57,320
Desta forma, o ritmo da contagem é auto-semelhante.

46
00:02:57,320 --> 00:03:02,981
Mesmo se você diminuir o zoom para uma escala maior, o processo parece fazer algo, 

47
00:03:02,981 --> 00:03:08,780
rolar, fazer a mesma coisa, rolar e repetir 9 vezes antes de um rollover ainda maior.

48
00:03:08,780 --> 00:03:14,341
Em binário, também conhecido como base 2, você se limita a dois dígitos, 

49
00:03:14,341 --> 00:03:19,980
0 e 1, comumente chamados de bits, que é a abreviação de dígitos binários.

50
00:03:19,980 --> 00:03:25,160
O resultado é que quando você está contando, você tem que rolar o tempo todo.

51
00:03:25,160 --> 00:03:31,949
Depois de contar 0, 1, você já ficou sem bits, então precisa rolar para a casa dos dois, 

52
00:03:31,949 --> 00:03:38,127
escrever 1-0 e resistir a cada impulso do seu cérebro treinado na base 10 de ler 

53
00:03:38,127 --> 00:03:43,620
isso como 10, e em vez disso, entenda que significa 1 grupo de 2 mais 0.

54
00:03:43,620 --> 00:03:52,012
Em seguida, aumente para 1-1, que representa 3, e você já terá que rolar novamente, 

55
00:03:52,012 --> 00:04:00,104
e como há um 1 no lugar do dois, isso também terá que rolar, dando a você 1-0-0, 

56
00:04:00,104 --> 00:04:05,500
que representa 1 grupo de 4 mais 0 grupos de 2 mais 0.

57
00:04:05,500 --> 00:04:08,333
Da mesma forma que os dígitos na base 10 representam potências de 10, 

58
00:04:08,333 --> 00:04:10,600
os bits na base 2 representam diferentes potências de 2.

59
00:04:10,600 --> 00:04:15,823
Então, em vez de falar sobre uma casa de 10, uma casa de 100, uma casa de 1000, 

60
00:04:15,823 --> 00:04:20,720
coisas assim, você fala sobre uma casa de 2, uma casa de 4 e uma casa de 8.

61
00:04:20,720 --> 00:04:27,660
O ritmo da contagem é agora muito mais rápido, mas isso quase o torna mais perceptível.

62
00:04:27,660 --> 00:04:28,020
Vire o último e role uma vez.

63
00:04:28,420 --> 00:04:28,940
Vire o último e role duas vezes.

64
00:04:28,940 --> 00:04:32,220
Vire o último e role uma vez.

65
00:04:32,220 --> 00:04:33,340
Vire o último e role três vezes.

66
00:04:33,340 --> 00:04:39,100
Novamente, há uma certa semelhança com esse padrão.

67
00:04:39,100 --> 00:04:42,404
Em todas as escalas, o processo consiste em fazer algo, 

68
00:04:42,404 --> 00:04:45,060
rolar e depois fazer a mesma coisa novamente.

69
00:04:45,060 --> 00:04:49,778
Em pequena escala, digamos, contar até 3, que é 1-1 em binário, 

70
00:04:49,778 --> 00:04:56,340
isso significa inverter o último bit, passar para os dois e depois inverter o último bit.

71
00:04:56,340 --> 00:05:02,453
Em uma escala maior, como contar até 15, que é 1-1-1-1, 

72
00:05:02,453 --> 00:05:08,894
o processo consiste em deixar os últimos 3 contarem até 7, 

73
00:05:08,894 --> 00:05:17,300
passar para a casa do 8 e depois deixar os últimos 3 bits contarem novamente.

74
00:05:17,300 --> 00:05:22,827
Contar até 255, que são 8 1s sucessivos, é como deixar os 

75
00:05:22,827 --> 00:05:28,354
últimos 7 bits contarem até ficarem cheios, passar para o 

76
00:05:28,354 --> 00:05:34,740
lugar dos 128 e depois deixar os últimos 7 bits contarem novamente.

77
00:05:34,740 --> 00:05:39,735
Tudo bem, então com essa mini-introdução, o fato surpreendente que Keith 

78
00:05:39,735 --> 00:05:44,800
me mostrou é que podemos usar esse ritmo para resolver as torres de Hanói.

79
00:05:44,800 --> 00:05:48,540
Você começa contando a partir de 0.

80
00:05:49,140 --> 00:05:51,610
Sempre que você estiver invertendo apenas o último bit, 

81
00:05:51,610 --> 00:05:53,860
de 0 para 1, mova o disco 0 um pino para a direita.

82
00:05:53,860 --> 00:05:58,760
Se já estava no pino mais à direita, basta fazer um loop de volta no primeiro pino.

83
00:05:58,760 --> 00:06:02,993
Se você rolar uma vez para o lugar dos dois, o que significa 

84
00:06:02,993 --> 00:06:06,880
que você inverte os dois últimos bits, moverá o disco 1.

85
00:06:06,880 --> 00:06:08,420
Para onde você o move, você pode perguntar?

86
00:06:08,420 --> 00:06:14,744
Você não tem escolha, não pode colocá-lo em cima do disco 0 e há apenas um outro pino, 

87
00:06:14,744 --> 00:06:18,380
então você o move para onde for forçado a movê-lo.

88
00:06:18,380 --> 00:06:23,425
Depois disso, contando até 1-1, envolve apenas inverter o último bit, 

89
00:06:23,425 --> 00:06:26,020
então você move o disco 0 novamente.

90
00:06:28,800 --> 00:06:32,490
Então, quando sua contagem binária passar duas vezes para a posição do quatro, 

91
00:06:32,490 --> 00:06:34,500
mova o disco 2 e o padrão continuará assim.

92
00:06:34,500 --> 00:06:36,300
Vire o último, mova o disco 0.

93
00:06:36,300 --> 00:06:37,900
Vire os dois últimos, mova o disco 1.

94
00:06:37,900 --> 00:06:38,340
Vire o último, mova o disco 0.

95
00:06:38,380 --> 00:06:41,050
E aqui teremos que rolar três vezes para a casa do 8, 

96
00:06:41,050 --> 00:06:42,880
e isso corresponde a mover o disco 3.

97
00:06:42,880 --> 00:06:46,028
Há algo mágico nisso, como quando vi isso pela primeira vez, 

98
00:06:46,028 --> 00:06:47,680
pensei, isso não pode funcionar.

99
00:06:47,680 --> 00:06:52,070
Não sei como isso funciona, não sei por que funciona, agora eu sei, 

100
00:06:52,070 --> 00:06:57,365
mas é simplesmente mágico quando você vê, e lembro-me de montar uma animação para 

101
00:06:57,365 --> 00:07:02,596
isso quando estava ensinando isso, e tipo, você sabe, eu sei como isso funciona, 

102
00:07:02,596 --> 00:07:07,439
eu sei todas as coisas nele, ainda é divertido apenas sentar e, você sabe, 

103
00:07:07,439 --> 00:07:08,860
assistir o desenrolar.

104
00:07:08,860 --> 00:07:08,860
Oh sim.

105
00:07:08,860 --> 00:07:11,880
Quero dizer, a princípio nem está claro se isso sempre dará movimentos legais.

106
00:07:11,880 --> 00:07:16,400
Por exemplo, como você sabe que toda vez que você passa para a posição 8, 

107
00:07:16,400 --> 00:07:19,700
o disco 3 será necessariamente liberado para se mover?

108
00:07:19,700 --> 00:07:23,513
Ao mesmo tempo, a solução levanta imediatamente questões como: 

109
00:07:23,513 --> 00:07:27,267
de onde vem isso, por que funciona e há uma maneira melhor de 

110
00:07:27,267 --> 00:07:30,960
fazer isso do que ter que fazer 2 elevado a n menos 1 passos?

111
00:07:30,960 --> 00:07:34,900
Acontece que isso não apenas resolve as Torres de Hanói, 

112
00:07:34,900 --> 00:07:38,080
mas também da maneira mais eficiente possível.

113
00:07:38,080 --> 00:07:40,552
Entender por que isso funciona, como funciona e o que diabos 

114
00:07:40,552 --> 00:07:43,348
está acontecendo se resume a uma certa perspectiva do quebra-cabeça, 

115
00:07:43,348 --> 00:07:45,740
o que o pessoal do CS pode chamar de perspectiva recursiva.

116
00:07:45,740 --> 00:07:50,240
O disco 3 está pensando, ok, 2, 1 e 0, como se você tivesse que sair de cima de mim, 

117
00:07:50,240 --> 00:07:53,840
como se eu realmente não pudesse funcionar sob tanto peso e pressão.

118
00:07:53,840 --> 00:07:57,065
E então, apenas da perspectiva do disco 3, se você quiser 

119
00:07:57,065 --> 00:08:00,345
descobrir como o disco 3 vai chegar aqui, de alguma forma, 

120
00:08:00,345 --> 00:08:03,960
não me importa como, os discos 2, 1 e 0 têm que chegar ao fuso B.

121
00:08:03,960 --> 00:08:05,960
Essa é a única maneira pela qual ele pode se mover.

122
00:08:06,700 --> 00:08:08,720
Se algum desses discos estiver acima de 3, ele não poderá se mover.

123
00:08:08,720 --> 00:08:12,080
Se algum deles estiver no fuso C, não poderá se deslocar até lá.

124
00:08:12,080 --> 00:08:13,760
Então, de alguma forma, temos que eliminar 2, 1 e 0.

125
00:08:13,760 --> 00:08:17,100
Feito isso, podemos mover o disco 3 para lá.

126
00:08:17,100 --> 00:08:18,380
E então o disco 3 diz, estou pronto.

127
00:08:18,580 --> 00:08:21,340
Você nunca mais precisará me mover novamente.

128
00:08:21,340 --> 00:08:23,060
Todos os outros apenas descobrem como chegar aqui.

129
00:08:23,060 --> 00:08:27,580
E, de certa forma, agora você tem uma versão menor do mesmo problema.

130
00:08:27,580 --> 00:08:30,660
Agora que você tem os discos 0, 1 e 2 no fuso B, você precisa levá-los para C.

131
00:08:30,660 --> 00:08:33,756
Então a ideia é que se eu me concentrar apenas em um disco 

132
00:08:33,756 --> 00:08:37,010
e pensar no que terei que fazer para que esse disco funcione, 

133
00:08:37,010 --> 00:08:40,159
posso transformar meu problema maior em algo um pouco menor.

134
00:08:40,159 --> 00:08:42,240
E então como faço para resolver isso?

135
00:08:42,260 --> 00:08:45,120
Bem, é exatamente a mesma coisa.

136
00:08:45,120 --> 00:08:50,020
Se o disco 2 disser disco 1 e disco 0, não é você, sou eu.

137
00:08:50,020 --> 00:08:50,020
Eu só preciso de algum espaço.

138
00:08:50,020 --> 00:08:50,020
Sair.

139
00:08:50,020 --> 00:08:52,260
Eles precisam se mudar para algum lugar.

140
00:08:52,260 --> 00:08:53,380
Então o disco 2 pode se mover para onde precisa ir.

141
00:08:53,980 --> 00:08:55,100
Então os discos 1 e 0 podem fazer isso.

142
00:08:55,100 --> 00:08:59,460
Mas o ponto interessante é que cada disco tem praticamente a mesma estratégia.

143
00:08:59,460 --> 00:09:00,980
Todos dizem, todos acima de mim, saiam.

144
00:09:00,980 --> 00:09:03,240
Então eu vou me mudar.

145
00:09:03,240 --> 00:09:04,900
Ok, todos voltem.

146
00:09:04,900 --> 00:09:08,661
Quando você conhece esse insight, pode codificar algo que resolverá as torres de Hanói, 

147
00:09:08,661 --> 00:09:11,953
como cinco ou seis linhas de código, que provavelmente tem a maior proporção 

148
00:09:11,953 --> 00:09:14,860
de investimento intelectual por linhas de código de todos os tempos.

149
00:09:14,860 --> 00:09:21,640
E se você pensar um pouco, fica claro que essa deve ser a solução mais eficiente.

150
00:09:21,640 --> 00:09:23,640
A cada passo, você está fazendo apenas o que lhe é imposto.

151
00:09:23,640 --> 00:09:27,460
Você precisa desligar o disco 0 a 2 antes de mover o disco 3.

152
00:09:27,460 --> 00:09:27,760
E você tem que mover o disco 3.

153
00:09:27,760 --> 00:09:30,940
E então você tem que mover o disco 0 a 2 de volta para ele.

154
00:09:31,020 --> 00:09:33,600
Simplesmente não há espaço para ineficiência nesta perspectiva.

155
00:09:33,600 --> 00:09:35,340
Então, por que a contagem em binário captura esse algoritmo?

156
00:09:36,320 --> 00:09:40,151
Bem, o que está acontecendo aqui é que esse padrão de resolver um subproblema, 

157
00:09:40,151 --> 00:09:43,352
mover um disco grande e depois resolver um subproblema novamente, 

158
00:09:43,352 --> 00:09:46,020
é perfeitamente paralelo ao padrão de contagem binária.

159
00:09:46,020 --> 00:09:53,120
Conte alguma quantia, role e conte novamente até a mesma quantia.

160
00:09:53,120 --> 00:09:57,384
E esse algoritmo das torres de Hanói e a contagem binária são ambos processos 

161
00:09:57,384 --> 00:10:02,140
semelhantes, no sentido de que se você diminuir o zoom e contar até uma potência maior 

162
00:10:02,140 --> 00:10:07,060
de 2, ou resolver as torres de Hanói com mais discos, ambos ainda terão a mesma estrutura.

163
00:10:07,060 --> 00:10:09,300
Subproblema, faça algo, subproblema.

164
00:10:09,880 --> 00:10:15,190
Por exemplo, em uma escala bem pequena, resolver torres de Hanói para dois discos, 

165
00:10:15,190 --> 00:10:20,820
mover disco 0, mover disco 1, mover disco 0, é refletido pela contagem até 3 em binário.

166
00:10:20,820 --> 00:10:23,420
Vire a última parte, role uma vez, vire a última parte.

167
00:10:23,420 --> 00:10:27,279
Em uma escala um pouco maior, resolver as torres de Hanói para três discos é 

168
00:10:27,279 --> 00:10:31,540
como fazer o que for necessário para resolver dois discos, mover o disco número 2 e, 

169
00:10:31,540 --> 00:10:35,300
em seguida, fazer o que for necessário para resolver dois discos novamente.

170
00:10:35,300 --> 00:10:38,756
Analogamente, contar até 111 em binário envolve contar até 3, 

171
00:10:38,756 --> 00:10:41,600
rolar todos os três bits e depois contar mais três.

172
00:10:41,600 --> 00:10:45,600
Em todas as escalas, ambos os processos apresentam o mesmo colapso.

173
00:10:45,600 --> 00:10:50,054
Então, de certa forma, a razão pela qual esta solução binária funciona, 

174
00:10:50,054 --> 00:10:53,951
ou pelo menos uma explicação, sinto que não há uma explicação, 

175
00:10:53,951 --> 00:10:59,148
mas acho que a mais natural é que o padrão que você usaria para gerar esses números 

176
00:10:59,148 --> 00:11:04,221
binários tenha exatamente o mesmo estrutura como o padrão que você usaria para as 

177
00:11:04,221 --> 00:11:08,676
torres de Hanói, e é por isso que se você observar a inversão dos bits, 

178
00:11:08,676 --> 00:11:11,460
estará efetivamente revertendo esse processo.

179
00:11:11,460 --> 00:11:12,820
Você está dizendo: que processo gerou isso?

180
00:11:12,820 --> 00:11:16,565
Como se eu estivesse tentando entender como esses bits foram invertidos 

181
00:11:16,565 --> 00:11:20,206
para me dar essa coisa, você está efetivamente revertendo o algoritmo 

182
00:11:20,206 --> 00:11:23,380
recursivo para as torres de Hanói, e é por isso que funciona.

183
00:11:24,120 --> 00:11:25,220
Isso é muito legal, certo?

184
00:11:25,220 --> 00:11:28,360
Mas na verdade fica mais legal.

185
00:11:28,360 --> 00:11:32,960
Ainda nem entendi como isso se relaciona com o triângulo de Sierpinski.

186
00:11:32,960 --> 00:11:36,060
E é exatamente isso que farei no vídeo seguinte, parte 2.

187
00:11:36,060 --> 00:11:38,320
Muito obrigado a todos que apoiam esses vídeos no Patreon.

188
00:11:38,320 --> 00:11:41,727
Acabei de terminar o primeiro capítulo de Essence of Calculus e estou 

189
00:11:41,727 --> 00:11:45,426
trabalhando no segundo agora, e os apoiadores do Patreon estão tendo acesso 

190
00:11:45,426 --> 00:11:49,320
antecipado a esses vídeos antes de eu publicar a série completa em alguns meses.

191
00:11:49,500 --> 00:11:53,431
Este vídeo e o próximo também são apoiados em parte pela Desmos, 

192
00:11:53,431 --> 00:11:57,604
e antes do próximo vídeo eu só quero parar um momento e compartilhar 

193
00:11:57,604 --> 00:12:02,020
com vocês um pouco sobre quem eles são e o fato de que estão contratando.

194
00:12:02,020 --> 00:12:03,200
Então Desmos é realmente muito legal.

195
00:12:03,200 --> 00:12:06,996
Eles fazem muitas dessas atividades matemáticas interativas 

196
00:12:06,996 --> 00:12:10,160
para salas de aula e ferramentas para professores.

197
00:12:10,160 --> 00:12:12,520
A verdadeira essência de sua oferta está nas atividades em sala de aula.

198
00:12:12,520 --> 00:12:15,104
De minha parte, estou super impressionado com o quão bem 

199
00:12:15,104 --> 00:12:17,780
pensadas essas atividades são do ponto de vista pedagógico.

200
00:12:18,820 --> 00:12:21,831
A equipe conhece claramente o que faz e sabe onde se posicionar 

201
00:12:21,831 --> 00:12:24,420
para fazer a diferença na vida de alunos e professores.

202
00:12:24,420 --> 00:12:25,680
E como eu disse, eles estão contratando.

203
00:12:25,680 --> 00:12:28,477
Eles estão sempre procurando trazer mais bons talentos, 

204
00:12:28,477 --> 00:12:31,573
sejam engenheiros, designers, professores ou quaisquer outros 

205
00:12:31,573 --> 00:12:35,120
conjuntos de habilidades que estejam alinhados com o que desejam fazer.

206
00:12:35,120 --> 00:12:38,089
Se algum de vocês estiver interessado em se juntar a eles, 

207
00:12:38,089 --> 00:12:42,165
ajudando-os a criar algumas dessas ótimas ferramentas para professores e alunos, 

208
00:12:42,165 --> 00:12:45,940
você pode conferir a página de carreiras que coloquei no link na descrição.

209
00:12:45,940 --> 00:12:47,740
Pessoalmente, acho que eles estão fazendo coisas realmente significativas.

210
00:12:47,740 --> 00:12:51,621
Acho que suas atividades estão construindo intuições matemáticas 

211
00:12:51,621 --> 00:12:55,802
genuinamente boas para os alunos, e o mundo poderia usar mais algumas 

212
00:12:55,802 --> 00:13:00,580
pessoas talentosas apontando seus esforços para a educação da maneira que fazem.

213
00:13:00,580 --> 00:13:27,127
Tudo bem, então com isso vejo vocês no próximo vídeo, 

214
00:13:27,127 --> 00:13:58,100
e acho que vocês realmente vão gostar do rumo que isso vai dar.

