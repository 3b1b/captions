1
00:00:00,000 --> 00:00:05,061
Hoje, quero compartilhar com vocês uma maneira bacana de resolver o

2
00:00:05,061 --> 00:00:11,240
quebra-cabeça das Torres de Hanói apenas contando em um sistema numérico diferente.

3
00:00:11,240 --> 00:00:13,698
E surpreendentemente, isto está relacionado com

4
00:00:13,698 --> 00:00:16,720
encontrar uma curva que preencha o triângulo de Sierpinski.

5
00:00:16,720 --> 00:00:20,055
Aprendi sobre isso com um ex-professor de ciência da computação meu,

6
00:00:20,055 --> 00:00:24,115
seu nome é Keith Schwartz, e devo dizer que esse homem é um dos melhores educadores

7
00:00:24,115 --> 00:00:24,840
que já conheci.

8
00:00:24,840 --> 00:00:34,043
Na verdade, gravei um pouco da conversa em que ele me mostrou essas coisas,

9
00:00:34,043 --> 00:00:42,520
para que vocês possam ouvir um pouco do que ele descreveu diretamente.

10
00:00:42,520 --> 00:00:48,692
Caso você não esteja familiarizado, vamos apenas explicar

11
00:00:48,692 --> 00:00:54,440
o que realmente é o quebra-cabeça das Torres de Hanói.

12
00:00:54,440 --> 00:00:56,874
Você pensa nesses discos como tendo um buraco no

13
00:00:56,874 --> 00:00:59,260
meio para que você possa encaixá-los em um pino.

14
00:00:59,260 --> 00:01:11,872
A configuração mostrada aqui tem cinco discos, que rotularei como 0,

15
00:01:11,872 --> 00:01:24,120
1, 2, 3, 4, mas, em princípio, você pode ter quantos discos quiser.

16
00:01:24,120 --> 00:01:28,287
Por exemplo, seu primeiro movimento deve envolver a movimentação do disco 0,

17
00:01:28,287 --> 00:01:32,832
já que qualquer outro disco contém coisas que precisam ser removidas antes de poder

18
00:01:32,832 --> 00:01:33,320
se mover.

19
00:01:33,320 --> 00:01:36,953
Depois disso, você pode mover o disco 1, mas ele deve ir para

20
00:01:36,953 --> 00:01:39,883
qualquer pino que não tenha o disco 0 no momento,

21
00:01:39,883 --> 00:01:45,040
caso contrário você estaria colocando um disco maior em um menor, o que não é permitido.

22
00:01:45,040 --> 00:01:52,361
Se você nunca viu isso antes, recomendo fortemente que você faça uma

23
00:01:52,361 --> 00:02:00,320
pausa e retire alguns livros de tamanhos variados e experimente você mesmo.

24
00:02:00,320 --> 00:02:04,793
Agora Keith me mostrou algo realmente surpreendente sobre esse quebra-cabeça,

25
00:02:04,793 --> 00:02:08,866
que é que você pode resolvê-lo apenas contando em binário e associando

26
00:02:08,866 --> 00:02:12,480
o ritmo dessa contagem a um certo ritmo de movimentos do disco.

27
00:02:12,480 --> 00:02:14,907
Para quem não está familiarizado com binário, reservarei

28
00:02:14,907 --> 00:02:17,420
um momento para fazer uma rápida visão geral aqui primeiro.

29
00:02:17,420 --> 00:02:21,159
Na verdade, mesmo que você esteja familiarizado com o binário,

30
00:02:21,159 --> 00:02:24,007
quero explicá-lo com foco no ritmo da contagem,

31
00:02:24,007 --> 00:02:26,560
no qual você pode ou não ter pensado antes.

32
00:02:26,560 --> 00:02:30,522
Qualquer descrição de binário normalmente começa com uma introspecção

33
00:02:30,522 --> 00:02:34,880
sobre nossa maneira usual de representar números, o que chamamos de base 10,

34
00:02:34,880 --> 00:02:38,560
já que usamos 10 dígitos separados, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9.

35
00:02:38,560 --> 00:02:45,220
O ritmo da contagem começa percorrendo todos os 10 dígitos.

36
00:02:45,220 --> 00:02:50,403
Então, quando os novos dígitos acabarem, você expressa o próximo número,

37
00:02:50,403 --> 00:02:52,320
10, com dois dígitos, 1, 0.

38
00:02:52,320 --> 00:02:57,490
Você diz que 1 está na casa das dezenas, pois serve para encapsular o grupo de 10 que

39
00:02:57,490 --> 00:03:02,540
você já contou até agora, enquanto libera a casa das unidades para redefinir para 0.

40
00:03:02,540 --> 00:03:08,965
O ritmo de contagem se repete assim, contando até 9, rolando para a casa das dezenas,

41
00:03:08,965 --> 00:03:13,000
contando mais 9, rolando para a casa das dezenas, etc.

42
00:03:13,000 --> 00:03:20,179
Bem, depois de repetir esse processo 9 vezes, você passa para a casa das centenas,

43
00:03:20,179 --> 00:03:25,282
um dígito que registra quantos grupos de 100 você acertou,

44
00:03:25,282 --> 00:03:30,040
liberando os outros dois dígitos para redefinir para 0.

45
00:03:30,040 --> 00:03:34,060
Desta forma, o ritmo da contagem é auto-semelhante.

46
00:03:34,060 --> 00:03:41,915
Mesmo se você diminuir o zoom para uma escala maior, o processo parece fazer algo,

47
00:03:41,915 --> 00:03:49,960
rolar, fazer a mesma coisa, rolar e repetir 9 vezes antes de um rollover ainda maior.

48
00:03:49,960 --> 00:03:54,796
Em binário, também conhecido como base 2, você se limita a dois dígitos,

49
00:03:54,796 --> 00:03:59,700
0 e 1, comumente chamados de bits, que é a abreviação de dígitos binários.

50
00:03:59,700 --> 00:04:03,960
O resultado é que quando você está contando, você tem que rolar o tempo todo.

51
00:04:03,960 --> 00:04:09,903
Depois de contar 0, 1, você já ficou sem bits, então precisa rolar para a casa dos dois,

52
00:04:09,903 --> 00:04:15,312
escrever 1-0 e resistir a cada impulso do seu cérebro treinado na base 10 de ler

53
00:04:15,312 --> 00:04:20,120
isso como 10, e em vez disso, entenda que significa 1 grupo de 2 mais 0.

54
00:04:20,120 --> 00:04:26,901
Em seguida, aumente para 1-1, que representa 3, e você já terá que rolar novamente,

55
00:04:26,901 --> 00:04:33,440
e como há um 1 no lugar do dois, isso também terá que rolar, dando a você 1-0-0,

56
00:04:33,440 --> 00:04:37,800
que representa 1 grupo de 4 mais 0 grupos de 2 mais 0.

57
00:04:37,800 --> 00:04:42,566
Da mesma forma que os dígitos na base 10 representam potências de 10,

58
00:04:42,566 --> 00:04:46,380
os bits na base 2 representam diferentes potências de 2.

59
00:04:46,380 --> 00:04:51,241
Então, em vez de falar sobre uma casa de 10, uma casa de 100, uma casa de 1000,

60
00:04:51,241 --> 00:04:55,800
coisas assim, você fala sobre uma casa de 2, uma casa de 4 e uma casa de 8.

61
00:04:55,800 --> 00:05:01,080
O ritmo da contagem é agora muito mais rápido, mas isso quase o torna mais perceptível.

62
00:05:01,080 --> 00:05:02,940
Vire o último e role uma vez.

63
00:05:02,940 --> 00:05:04,680
Vire o último e role duas vezes.

64
00:05:04,680 --> 00:05:06,380
Vire o último e role uma vez.

65
00:05:06,380 --> 00:05:09,100
Vire o último e role três vezes.

66
00:05:09,100 --> 00:05:13,980
Novamente, há uma certa semelhança com esse padrão.

67
00:05:13,980 --> 00:05:18,692
Em todas as escalas, o processo consiste em fazer algo,

68
00:05:18,692 --> 00:05:22,480
rolar e depois fazer a mesma coisa novamente.

69
00:05:22,480 --> 00:05:27,014
Em pequena escala, digamos, contar até 3, que é 1-1 em binário,

70
00:05:27,014 --> 00:05:33,320
isso significa inverter o último bit, passar para os dois e depois inverter o último bit.

71
00:05:33,320 --> 00:05:37,385
Em uma escala maior, como contar até 15, que é 1-1-1-1,

72
00:05:37,385 --> 00:05:41,669
o processo consiste em deixar os últimos 3 contarem até 7,

73
00:05:41,669 --> 00:05:47,260
passar para a casa do 8 e depois deixar os últimos 3 bits contarem novamente.

74
00:05:47,260 --> 00:05:51,640
Contar até 255, que são 8 1s sucessivos, é como deixar os

75
00:05:51,640 --> 00:05:56,020
últimos 7 bits contarem até ficarem cheios, passar para o

76
00:05:56,020 --> 00:06:01,080
lugar dos 128 e depois deixar os últimos 7 bits contarem novamente.

77
00:06:01,080 --> 00:06:05,728
Tudo bem, então com essa mini-introdução, o fato surpreendente que Keith

78
00:06:05,728 --> 00:06:10,440
me mostrou é que podemos usar esse ritmo para resolver as torres de Hanói.

79
00:06:10,440 --> 00:06:12,720
Você começa contando a partir de 0.

80
00:06:12,720 --> 00:06:17,796
Sempre que você estiver invertendo apenas o último bit,

81
00:06:17,796 --> 00:06:22,420
de 0 para 1, mova o disco 0 um pino para a direita.

82
00:06:22,420 --> 00:06:29,200
Se já estava no pino mais à direita, basta fazer um loop de volta no primeiro pino.

83
00:06:29,200 --> 00:06:33,652
Se você rolar uma vez para o lugar dos dois, o que significa

84
00:06:33,652 --> 00:06:37,740
que você inverte os dois últimos bits, moverá o disco 1.

85
00:06:37,740 --> 00:06:39,740
Para onde você o move, você pode perguntar?

86
00:06:39,740 --> 00:06:44,413
Você não tem escolha, não pode colocá-lo em cima do disco 0 e há apenas um outro pino,

87
00:06:44,413 --> 00:06:47,100
então você o move para onde for forçado a movê-lo.

88
00:06:47,100 --> 00:06:50,930
Depois disso, contando até 1-1, envolve apenas inverter o último bit,

89
00:06:50,930 --> 00:06:52,900
então você move o disco 0 novamente.

90
00:06:52,900 --> 00:06:58,430
Então, quando sua contagem binária passar duas vezes para a posição do quatro,

91
00:06:58,430 --> 00:07:01,440
mova o disco 2 e o padrão continuará assim.

92
00:07:01,440 --> 00:07:03,460
Vire o último, mova o disco 0.

93
00:07:03,460 --> 00:07:05,900
Vire os dois últimos, mova o disco 1.

94
00:07:05,900 --> 00:07:08,080
Vire o último, mova o disco 0.

95
00:07:08,080 --> 00:07:11,652
E aqui teremos que rolar três vezes para a casa do 8,

96
00:07:11,652 --> 00:07:14,100
e isso corresponde a mover o disco 3.

97
00:07:14,100 --> 00:07:17,432
Há algo mágico nisso, como quando vi isso pela primeira vez,

98
00:07:17,432 --> 00:07:19,180
pensei, isso não pode funcionar.

99
00:07:19,180 --> 00:07:22,720
Não sei como isso funciona, não sei por que funciona, agora eu sei,

100
00:07:22,720 --> 00:07:26,990
mas é simplesmente mágico quando você vê, e lembro-me de montar uma animação para

101
00:07:26,990 --> 00:07:31,208
isso quando estava ensinando isso, e tipo, você sabe, eu sei como isso funciona,

102
00:07:31,208 --> 00:07:35,114
eu sei todas as coisas nele, ainda é divertido apenas sentar e, você sabe,

103
00:07:35,114 --> 00:07:36,260
assistir o desenrolar.

104
00:07:36,260 --> 00:07:37,260
Oh sim.

105
00:07:37,260 --> 00:07:41,800
Quero dizer, a princípio nem está claro se isso sempre dará movimentos legais.

106
00:07:41,800 --> 00:07:46,436
Por exemplo, como você sabe que toda vez que você passa para a posição 8,

107
00:07:46,436 --> 00:07:49,820
o disco 3 será necessariamente liberado para se mover?

108
00:07:49,820 --> 00:07:53,457
Ao mesmo tempo, a solução levanta imediatamente questões como:

109
00:07:53,457 --> 00:07:57,037
de onde vem isso, por que funciona e há uma maneira melhor de

110
00:07:57,037 --> 00:08:00,560
fazer isso do que ter que fazer 2 elevado a n menos 1 passos?

111
00:08:00,560 --> 00:08:04,223
Acontece que isso não apenas resolve as Torres de Hanói,

112
00:08:04,223 --> 00:08:07,180
mas também da maneira mais eficiente possível.

113
00:08:07,180 --> 00:08:10,317
Entender por que isso funciona, como funciona e o que diabos

114
00:08:10,317 --> 00:08:13,865
está acontecendo se resume a uma certa perspectiva do quebra-cabeça,

115
00:08:13,865 --> 00:08:16,900
o que o pessoal do CS pode chamar de perspectiva recursiva.

116
00:08:16,900 --> 00:08:21,411
O disco 3 está pensando, ok, 2, 1 e 0, como se você tivesse que sair de cima de mim,

117
00:08:21,411 --> 00:08:25,020
como se eu realmente não pudesse funcionar sob tanto peso e pressão.

118
00:08:25,020 --> 00:08:27,849
E então, apenas da perspectiva do disco 3, se você quiser

119
00:08:27,849 --> 00:08:30,728
descobrir como o disco 3 vai chegar aqui, de alguma forma,

120
00:08:30,728 --> 00:08:33,900
não me importa como, os discos 2, 1 e 0 têm que chegar ao fuso B.

121
00:08:33,900 --> 00:08:36,020
Essa é a única maneira pela qual ele pode se mover.

122
00:08:36,020 --> 00:08:38,060
Se algum desses discos estiver acima de 3, ele não poderá se mover.

123
00:08:38,060 --> 00:08:41,000
Se algum deles estiver no fuso C, não poderá se deslocar até lá.

124
00:08:41,000 --> 00:08:43,980
Então, de alguma forma, temos que eliminar 2, 1 e 0.

125
00:08:43,980 --> 00:08:48,180
Feito isso, podemos mover o disco 3 para lá.

126
00:08:48,180 --> 00:08:50,020
E então o disco 3 diz, estou pronto.

127
00:08:50,020 --> 00:08:51,940
Você nunca mais precisará me mover novamente.

128
00:08:51,940 --> 00:08:54,340
Todos os outros apenas descobrem como chegar aqui.

129
00:08:54,340 --> 00:08:57,540
E, de certa forma, agora você tem uma versão menor do mesmo problema.

130
00:08:57,540 --> 00:09:01,981
Agora que você tem os discos 0, 1 e 2 no fuso B, você precisa levá-los para C.

131
00:09:01,981 --> 00:09:04,816
Então a ideia é que se eu me concentrar apenas em um disco

132
00:09:04,816 --> 00:09:07,796
e pensar no que terei que fazer para que esse disco funcione,

133
00:09:07,796 --> 00:09:10,680
posso transformar meu problema maior em algo um pouco menor.

134
00:09:10,680 --> 00:09:12,020
E então como faço para resolver isso?

135
00:09:12,020 --> 00:09:13,600
Bem, é exatamente a mesma coisa.

136
00:09:13,600 --> 00:09:17,160
Se o disco 2 disser disco 1 e disco 0, não é você, sou eu.

137
00:09:17,160 --> 00:09:18,160
Eu só preciso de algum espaço.

138
00:09:18,160 --> 00:09:19,160
Sair.

139
00:09:19,160 --> 00:09:20,520
Eles precisam se mudar para algum lugar.

140
00:09:20,520 --> 00:09:23,040
Então o disco 2 pode se mover para onde precisa ir.

141
00:09:23,040 --> 00:09:25,120
Então os discos 1 e 0 podem fazer isso.

142
00:09:25,120 --> 00:09:31,040
Mas o ponto interessante é que cada disco tem praticamente a mesma estratégia.

143
00:09:31,040 --> 00:09:33,220
Todos dizem, todos acima de mim, saiam.

144
00:09:33,220 --> 00:09:34,220
Então eu vou me mudar.

145
00:09:34,220 --> 00:09:36,560
Ok, todos voltem.

146
00:09:36,560 --> 00:09:41,892
Quando você conhece esse insight, pode codificar algo que resolverá as torres de Hanói,

147
00:09:41,892 --> 00:09:46,559
como cinco ou seis linhas de código, que provavelmente tem a maior proporção

148
00:09:46,559 --> 00:09:50,680
de investimento intelectual por linhas de código de todos os tempos.

149
00:09:50,680 --> 00:09:56,800
E se você pensar um pouco, fica claro que essa deve ser a solução mais eficiente.

150
00:09:56,800 --> 00:10:00,060
A cada passo, você está fazendo apenas o que lhe é imposto.

151
00:10:00,060 --> 00:10:04,440
Você precisa desligar o disco 0 a 2 antes de mover o disco 3.

152
00:10:04,440 --> 00:10:06,520
E você tem que mover o disco 3.

153
00:10:06,520 --> 00:10:09,760
E então você tem que mover o disco 0 a 2 de volta para ele.

154
00:10:09,760 --> 00:10:15,400
Simplesmente não há espaço para ineficiência nesta perspectiva.

155
00:10:15,400 --> 00:10:18,920
Então, por que a contagem em binário captura esse algoritmo?

156
00:10:18,920 --> 00:10:23,359
Bem, o que está acontecendo aqui é que esse padrão de resolver um subproblema,

157
00:10:23,359 --> 00:10:27,069
mover um disco grande e depois resolver um subproblema novamente,

158
00:10:27,069 --> 00:10:30,160
é perfeitamente paralelo ao padrão de contagem binária.

159
00:10:30,160 --> 00:10:35,360
Conte alguma quantia, role e conte novamente até a mesma quantia.

160
00:10:35,360 --> 00:10:39,507
E esse algoritmo das torres de Hanói e a contagem binária são ambos processos

161
00:10:39,507 --> 00:10:44,134
semelhantes, no sentido de que se você diminuir o zoom e contar até uma potência maior

162
00:10:44,134 --> 00:10:48,920
de 2, ou resolver as torres de Hanói com mais discos, ambos ainda terão a mesma estrutura.

163
00:10:48,920 --> 00:10:52,700
Subproblema, faça algo, subproblema.

164
00:10:52,700 --> 00:10:58,107
Por exemplo, em uma escala bem pequena, resolver torres de Hanói para dois discos,

165
00:10:58,107 --> 00:11:03,840
mover disco 0, mover disco 1, mover disco 0, é refletido pela contagem até 3 em binário.

166
00:11:03,840 --> 00:11:07,560
Vire a última parte, role uma vez, vire a última parte.

167
00:11:07,560 --> 00:11:11,302
Em uma escala um pouco maior, resolver as torres de Hanói para três discos é

168
00:11:11,302 --> 00:11:15,434
como fazer o que for necessário para resolver dois discos, mover o disco número 2 e,

169
00:11:15,434 --> 00:11:19,080
em seguida, fazer o que for necessário para resolver dois discos novamente.

170
00:11:19,080 --> 00:11:23,974
Analogamente, contar até 111 em binário envolve contar até 3,

171
00:11:23,974 --> 00:11:28,000
rolar todos os três bits e depois contar mais três.

172
00:11:28,000 --> 00:11:32,100
Em todas as escalas, ambos os processos apresentam o mesmo colapso.

173
00:11:32,100 --> 00:11:35,503
Então, de certa forma, a razão pela qual esta solução binária funciona,

174
00:11:35,503 --> 00:11:38,481
ou pelo menos uma explicação, sinto que não há uma explicação,

175
00:11:38,481 --> 00:11:42,452
mas acho que a mais natural é que o padrão que você usaria para gerar esses números

176
00:11:42,452 --> 00:11:46,329
binários tenha exatamente o mesmo estrutura como o padrão que você usaria para as

177
00:11:46,329 --> 00:11:49,732
torres de Hanói, e é por isso que se você observar a inversão dos bits,

178
00:11:49,732 --> 00:11:51,860
estará efetivamente revertendo esse processo.

179
00:11:51,860 --> 00:11:54,200
Você está dizendo: que processo gerou isso?

180
00:11:54,200 --> 00:11:59,044
Como se eu estivesse tentando entender como esses bits foram invertidos

181
00:11:59,044 --> 00:12:03,755
para me dar essa coisa, você está efetivamente revertendo o algoritmo

182
00:12:03,755 --> 00:12:07,860
recursivo para as torres de Hanói, e é por isso que funciona.

183
00:12:07,860 --> 00:12:09,620
Isso é muito legal, certo?

184
00:12:09,620 --> 00:12:10,940
Mas na verdade fica mais legal.

185
00:12:10,940 --> 00:12:14,460
Ainda nem entendi como isso se relaciona com o triângulo de Sierpinski.

186
00:12:14,460 --> 00:12:19,140
E é exatamente isso que farei no vídeo seguinte, parte 2.

187
00:12:19,140 --> 00:12:22,620
Muito obrigado a todos que apoiam esses vídeos no Patreon.

188
00:12:22,620 --> 00:12:26,386
Acabei de terminar o primeiro capítulo de Essence of Calculus e estou

189
00:12:26,386 --> 00:12:30,475
trabalhando no segundo agora, e os apoiadores do Patreon estão tendo acesso

190
00:12:30,475 --> 00:12:34,780
antecipado a esses vídeos antes de eu publicar a série completa em alguns meses.

191
00:12:34,780 --> 00:12:37,920
Este vídeo e o próximo também são apoiados em parte pela Desmos,

192
00:12:37,920 --> 00:12:41,253
e antes do próximo vídeo eu só quero parar um momento e compartilhar

193
00:12:41,253 --> 00:12:44,780
com vocês um pouco sobre quem eles são e o fato de que estão contratando.

194
00:12:44,780 --> 00:12:47,020
Então Desmos é realmente muito legal.

195
00:12:47,020 --> 00:12:49,561
Eles fazem muitas dessas atividades matemáticas interativas

196
00:12:49,561 --> 00:12:51,680
para salas de aula e ferramentas para professores.

197
00:12:51,680 --> 00:12:56,060
A verdadeira essência de sua oferta está nas atividades em sala de aula.

198
00:12:56,060 --> 00:12:59,244
De minha parte, estou super impressionado com o quão bem

199
00:12:59,244 --> 00:13:02,540
pensadas essas atividades são do ponto de vista pedagógico.

200
00:13:02,540 --> 00:13:05,573
A equipe conhece claramente o que faz e sabe onde se posicionar

201
00:13:05,573 --> 00:13:08,180
para fazer a diferença na vida de alunos e professores.

202
00:13:08,180 --> 00:13:10,140
E como eu disse, eles estão contratando.

203
00:13:10,140 --> 00:13:12,942
Eles estão sempre procurando trazer mais bons talentos,

204
00:13:12,942 --> 00:13:16,046
sejam engenheiros, designers, professores ou quaisquer outros

205
00:13:16,046 --> 00:13:19,600
conjuntos de habilidades que estejam alinhados com o que desejam fazer.

206
00:13:19,600 --> 00:13:21,828
Se algum de vocês estiver interessado em se juntar a eles,

207
00:13:21,828 --> 00:13:24,887
ajudando-os a criar algumas dessas ótimas ferramentas para professores e alunos,

208
00:13:24,887 --> 00:13:27,720
você pode conferir a página de carreiras que coloquei no link na descrição.

209
00:13:27,720 --> 00:13:30,480
Pessoalmente, acho que eles estão fazendo coisas realmente significativas.

210
00:13:30,480 --> 00:13:33,515
Acho que suas atividades estão construindo intuições matemáticas

211
00:13:33,515 --> 00:13:36,784
genuinamente boas para os alunos, e o mundo poderia usar mais algumas

212
00:13:36,784 --> 00:13:40,520
pessoas talentosas apontando seus esforços para a educação da maneira que fazem.

213
00:13:40,520 --> 00:13:42,421
Tudo bem, então com isso vejo vocês no próximo vídeo,

214
00:13:42,421 --> 00:13:44,640
e acho que vocês realmente vão gostar do rumo que isso vai dar.

