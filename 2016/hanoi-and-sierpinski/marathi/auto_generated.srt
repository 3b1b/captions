1
00:00:04,200 --> 00:00:07,434
आज, मी तुमच्याबरोबर टॉवर्स ऑफ हॅनोई कोडे सोडवण्याचा एक व्यवस्थित 

2
00:00:07,434 --> 00:00:10,620
मार्ग सामायिक करू इच्छितो, फक्त भिन्न संख्या प्रणालीमध्ये मोजून.

3
00:00:11,220 --> 00:00:13,320
आणि आश्चर्याची गोष्ट म्हणजे, ही सामग्री एक वक्र 

4
00:00:13,320 --> 00:00:15,640
शोधण्याशी संबंधित आहे जी सिएरपिन्स्कीचा त्रिकोण भरते.

5
00:00:16,720 --> 00:00:20,441
मी माझ्या माजी CS व्याख्याता, त्याचे नाव कीथ श्वार्ट्झ यांच्याकडून याबद्दल 

6
00:00:20,441 --> 00:00:24,460
शिकलो आणि मला म्हणायचे आहे, हा माणूस मला भेटलेल्या सर्वोत्तम शिक्षकांपैकी एक आहे.

7
00:00:25,140 --> 00:00:28,397
त्याने मला ही सामग्री दाखवली त्या संभाषणाचा थोडासा भाग मी खरोखर रेकॉर्ड केला आहे, 

8
00:00:28,397 --> 00:00:30,900
जेणेकरुन त्याने थेट वर्णन केलेल्या काही गोष्टी तुम्ही ऐकू शकता.

9
00:00:38,420 --> 00:00:47,640
जर तुम्ही अपरिचित असाल, तर हनोईचे टॉवर्स हे कोडे नेमके काय आहे ते पाहू या.

10
00:00:47,640 --> 00:00:53,119
तुम्ही या डिस्क्सना मध्यभागी एक छिद्र असल्यासारखे 

11
00:00:53,119 --> 00:00:58,380
समजता जेणेकरून तुम्ही त्यांना खुंटीवर बसवू शकाल.

12
00:00:59,200 --> 00:01:03,005
येथे चित्रित केलेल्या सेटअपमध्ये पाच डिस्क्स आहेत, ज्यांना मी 0, 1, 2, 3, 

13
00:01:03,005 --> 00:01:06,760
4 असे लेबल करेन, परंतु तत्त्वतः, तुम्हाला पाहिजे तितक्या डिस्क असू शकतात.

14
00:01:07,460 --> 00:01:10,720
उदाहरणार्थ, तुमच्या पहिल्या हालचालीमध्ये डिस्क 0 हलवणे आवश्यक आहे, 

15
00:01:10,720 --> 00:01:14,809
कारण इतर कोणत्याही डिस्कच्या शीर्षस्थानी अशी सामग्री आहे जी हलवण्यापूर्वी मार्गातून 

16
00:01:14,809 --> 00:01:15,880
बाहेर पडणे आवश्यक आहे.

17
00:01:15,880 --> 00:01:22,727
त्यानंतर, तुम्ही डिस्क 1 हलवू शकता, परंतु सध्या डिस्क 0 नसलेल्या कोणत्याही पेगवर 

18
00:01:22,727 --> 00:01:29,660
जावे लागेल, कारण अन्यथा तुम्ही लहान डिस्कवर मोठी डिस्क लावाल, ज्याला परवानगी नाही.

19
00:01:29,660 --> 00:01:30,493
तुम्ही हे यापूर्वी कधीही पाहिले नसेल तर, मी तुम्हाला विराम द्या 

20
00:01:30,493 --> 00:01:31,380
आणि वेगवेगळ्या आकारांची काही पुस्तके काढा आणि स्वतःसाठी प्रयत्न करा.

21
00:01:31,380 --> 00:01:34,268
आता कीथने मला या कोडेबद्दल खरोखर आश्चर्यकारक काहीतरी दाखवले, 

22
00:01:34,268 --> 00:01:38,339
ते म्हणजे तुम्ही ते फक्त बायनरीमध्ये मोजून आणि त्या मोजणीची लय डिस्कच्या हालचालींच्या 

23
00:01:38,339 --> 00:01:39,760
विशिष्ट लयशी जोडून सोडवू शकता.

24
00:01:39,760 --> 00:01:41,410
बायनरीशी अपरिचित असलेल्या प्रत्येकासाठी, मी प्रथम येथे 

25
00:01:41,410 --> 00:01:42,940
एक द्रुत विहंगावलोकन करण्यासाठी थोडा वेळ घेणार आहे.

26
00:01:42,940 --> 00:01:47,442
वास्तविक, जरी तुम्ही बायनरीशी परिचित असाल, तरीही मी मोजणीच्या लयवर लक्ष केंद्रित 

27
00:01:47,442 --> 00:01:51,500
करून ते स्पष्ट करू इच्छितो, ज्याचा तुम्ही आधी विचार केला नसेल किंवा नसेल.

28
00:01:51,500 --> 00:01:56,693
बायनरीचे कोणतेही वर्णन सामान्यत: अंकांचे प्रतिनिधित्व करण्याच्या 

29
00:01:56,693 --> 00:02:01,088
आपल्या नेहमीच्या पद्धतीच्या आत्मनिरीक्षणाने सुरू होते, 

30
00:02:01,088 --> 00:02:07,800
ज्याला आपण बेस 10 म्हणतो, कारण आपण 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 हे वेगळे अंक वापरतो.

31
00:02:07,800 --> 00:02:09,139
या सर्व 10 अंकांमधून मोजणीची लय सुरू होते.

32
00:02:09,139 --> 00:02:09,860
नंतर, नवीन अंक संपल्यानंतर, तुम्ही पुढील संख्या, 10, दोन अंकांसह, 1, 0 व्यक्त करता.

33
00:02:09,860 --> 00:02:16,324
तुम्ही म्हणता की 1 दहाच्या ठिकाणी आहे, कारण ते 0 वर रीसेट करण्यासाठी जागा मोकळी करताना, 

34
00:02:16,324 --> 00:02:21,540
तुम्ही आतापर्यंत मोजलेल्या 10 च्या गटाला एन्कॅप्स्युलेट करण्यासाठी आहे.

35
00:02:21,540 --> 00:02:26,919
मोजणीची लय अशी पुनरावृत्ती होते, 9 वर मोजणे, दहाच्या ठिकाणी वळणे, 

36
00:02:26,919 --> 00:02:30,180
आणखी 9 वर मोजणे, दहाच्या ठिकाणी फिरणे इ.

37
00:02:30,180 --> 00:02:35,811
बरं, त्या प्रक्रियेची ९ वेळा पुनरावृत्ती केल्यावर, 

38
00:02:35,811 --> 00:02:42,988
तुम्ही शेकडो ठिकाणी फिरता, हा अंक जो तुम्ही १०० च्या किती गटांना 

39
00:02:42,988 --> 00:02:51,160
मारलात याचा मागोवा ठेवतो, बाकीचे दोन अंक ० वर रीसेट करण्यासाठी मोकळे करतो.

40
00:02:51,260 --> 00:02:55,740
अशाप्रकारे, मोजणीची लय एक प्रकारची स्वयं-समान आहे.

41
00:02:55,740 --> 00:03:00,549
जरी तुम्ही मोठ्या प्रमाणात झूम आउट केले तरीही, प्रक्रिया काहीतरी करणे, 

42
00:03:00,549 --> 00:03:04,817
रोल ओव्हर करणे, तीच गोष्ट करणे, रोल ओव्हर करणे आणि आणखी मोठ्या 

43
00:03:04,817 --> 00:03:08,340
रोलओव्हरपूर्वी 9 वेळा पुनरावृत्ती केल्यासारखे दिसते.

44
00:03:08,340 --> 00:03:17,415
बायनरीमध्ये, ज्याला बेस-2 देखील म्हणतात, तुम्ही स्वतःला दोन अंकांपर्यंत मर्यादित ठेवता, 

45
00:03:17,415 --> 00:03:24,840
0 आणि 1, ज्यांना सामान्यतः बिट्स म्हणतात, जे बायनरी अंकांसाठी लहान असते.

46
00:03:24,840 --> 00:03:31,360
परिणाम असा आहे की जेव्हा आपण मोजत आहात, तेव्हा आपल्याला सर्व वेळ फिरवावे लागेल.

47
00:03:31,360 --> 00:03:34,580
0, 1 ची मोजणी केल्यानंतर, तुमच्याकडे आधीच बिट्स संपले आहेत, 

48
00:03:34,580 --> 00:03:39,304
म्हणून तुम्हाला 1-0 लिहिणे आवश्यक आहे, आणि 10 असे वाचण्यासाठी तुमच्या बेस-10-प्रशिक्षित 

49
00:03:39,304 --> 00:03:42,202
मेंदूच्या प्रत्येक आग्रहाचा प्रतिकार करणे आवश्यक आहे, 

50
00:03:42,202 --> 00:03:44,940
आणि त्याऐवजी 2 अधिक 0 च्या 1 गटाचा अर्थ समजून घ्या.

51
00:03:49,520 --> 00:03:52,234
नंतर 1-1 पर्यंत वाढ करा, जे 3 चे प्रतिनिधित्व करते, 

52
00:03:52,234 --> 00:03:56,618
आणि तुम्हाला आधीच पुन्हा रोल ओव्हर करावे लागेल, आणि त्या दोघांच्या जागी 1 असल्याने, 

53
00:03:56,618 --> 00:04:00,794
ते देखील रोल ओव्हर करावे लागेल, तुम्हाला 1-0-0 देईल, जे 1 चे प्रतिनिधित्व करते. 

54
00:04:00,794 --> 00:04:02,360
4 अधिक 0 चा गट 2 अधिक 0 चा गट.

55
00:04:02,360 --> 00:04:07,814
ज्या प्रकारे बेस -10 मधील अंक 10 च्या शक्ती दर्शवतात, 

56
00:04:07,814 --> 00:04:14,380
त्याच प्रकारे बेस -2 मधील बिट्स 2 च्या वेगवेगळ्या शक्ती दर्शवतात.

57
00:04:15,060 --> 00:04:21,857
तर 10 च्या जागेबद्दल, 100 च्या जागेबद्दल, 1000 च्या जागेबद्दल बोलण्याऐवजी, 

58
00:04:21,857 --> 00:04:28,020
तुम्ही 2 च्या जागेबद्दल, 4 च्या जागेबद्दल आणि 8 च्या जागेबद्दल बोला.

59
00:04:28,420 --> 00:04:28,020
मोजणीची लय आता खूप वेगवान आहे, परंतु ती जवळजवळ अधिक लक्षणीय बनवते.

60
00:04:28,420 --> 00:04:29,540
शेवटचा फ्लिप करा, एकदा रोल करा.

61
00:04:29,540 --> 00:04:29,540
शेवटचा फ्लिप करा, दोनदा रोल करा.

62
00:04:29,540 --> 00:04:29,540
शेवटचा फ्लिप करा, एकदा रोल करा.

63
00:04:29,540 --> 00:04:30,480
शेवटचा फ्लिप करा, तीन वेळा रोल करा.

64
00:04:30,480 --> 00:04:36,860
पुन्हा, या पॅटर्नमध्ये एक विशिष्ट स्व-समानता आहे.

65
00:04:36,860 --> 00:04:36,860
प्रत्येक स्केलवर, प्रक्रिया म्हणजे काहीतरी करणे, रोल ओव्हर करणे, नंतर तेच तेच करणे.

66
00:04:36,860 --> 00:04:43,328
स्मॉल स्केलवर, 3 पर्यंत मोजणे म्हणा, जे बायनरीमध्ये 1-1 आहे, 

67
00:04:43,328 --> 00:04:51,600
याचा अर्थ शेवटचा बिट फ्लिप करा, दोनच्या वर रोल करा, नंतर शेवटचा बिट फ्लिप करा.

68
00:04:51,600 --> 00:04:59,026
मोठ्या प्रमाणावर, जसे की 15 पर्यंत मोजणे, जे 1-1-1-1 आहे, 

69
00:04:59,026 --> 00:05:08,502
प्रक्रिया म्हणजे शेवटच्या 3 ला 7 पर्यंत मोजू द्या, 8 च्या जागी फिरू द्या, 

70
00:05:08,502 --> 00:05:13,240
नंतर शेवटचे 3 बिट्स पुन्हा मोजू द्या.

71
00:05:13,920 --> 00:05:23,758
255 पर्यंत मोजणे, जे 8 लागोपाठ 1 आहे, असे दिसते की शेवटचे 7 बिट्स पूर्ण 

72
00:05:23,758 --> 00:05:35,100
होईपर्यंत मोजू द्या, 128 च्या जागी फिरू द्या, नंतर शेवटचे 7 बिट्स पुन्हा मोजू द्या.

73
00:05:35,100 --> 00:05:37,683
ठीक आहे, म्हणून त्या लघु-परिचयातून, किथने मला दाखवलेली आश्चर्यकारक वस्तुस्थिती 

74
00:05:37,683 --> 00:05:39,940
अशी आहे की आपण हनोईच्या टॉवर्सचे निराकरण करण्यासाठी ही लय वापरू शकतो.

75
00:05:39,940 --> 00:05:41,460
तुम्ही ० पासून मोजून सुरुवात करा.

76
00:05:41,980 --> 00:05:42,920
जेव्हा तुम्ही फक्त शेवटचा बिट फ्लिप करत असाल, 0 ते 1 पर्यंत, डिस्क 0 एक पेग उजवीकडे हलवा.

77
00:05:42,920 --> 00:05:43,240
जर ते आधीपासून सर्वात उजव्या पेगवर असेल, तर तुम्ही ते परत पहिल्या पेगवर वळवा.

78
00:05:43,800 --> 00:05:44,870
जर तुम्ही दोघींच्या जागी एकदा फिरलात, म्हणजे तुम्ही 

79
00:05:44,870 --> 00:05:45,940
शेवटचे दोन बिट्स फ्लिप केले तर तुम्ही डिस्क 1 हलवाल.

80
00:05:46,960 --> 00:05:45,940
तुम्ही ते कुठे हलवता, तुम्ही विचाराल?

81
00:05:46,960 --> 00:05:51,238
तुमच्याकडे कोणताही पर्याय नाही, तुम्ही ते डिस्क 0 च्या वर ठेवू शकत नाही, 

82
00:05:51,238 --> 00:05:56,280
आणि फक्त एक दुसरा पेग आहे, म्हणून तुम्ही ते हलवा जेथे तुम्हाला ते हलवण्याची सक्ती आहे.

83
00:05:56,280 --> 00:05:58,513
यानंतर, 1-1 पर्यंत मोजणे, ज्यामध्ये फक्त शेवटचा भाग फ्लिप करणे समाविष्ट आहे, 

84
00:05:58,513 --> 00:05:59,500
म्हणून तुम्ही डिस्क 0 पुन्हा हलवा.

85
00:06:01,340 --> 00:06:04,295
नंतर जेव्हा तुमची बायनरी मोजणी चारच्या ठिकाणी दोनदा फिरते, 

86
00:06:04,295 --> 00:06:06,600
तेव्हा डिस्क 2 हलवा आणि नमुना असाच चालू राहील.

87
00:06:06,600 --> 00:06:13,840
शेवटचा फ्लिप करा, डिस्क 0 हलवा.

88
00:06:13,840 --> 00:06:17,580
शेवटचे दोन फ्लिप करा, डिस्क 1 हलवा.

89
00:06:17,580 --> 00:06:17,580
शेवटचा फ्लिप करा, डिस्क 0 हलवा.

90
00:06:17,580 --> 00:06:26,020
आणि येथे आपल्याला 8 च्या जागी तीन वेळा फिरवावे लागेल आणि ते डिस्क 3 हलवण्याशी संबंधित आहे.

91
00:06:26,576 --> 00:06:26,020
यात काहीतरी जादुई आहे, जसे की मी हे पहिल्यांदा पाहिले तेव्हा मला असे वाटत होते, 

92
00:06:28,800 --> 00:06:26,576
हे काम करू शकत नाही.

93
00:06:28,800 --> 00:06:31,903
हे कसे कार्य करते हे मला माहित नाही, हे का कार्य करते हे मला माहित नाही, 

94
00:06:31,903 --> 00:06:35,135
आता मला माहित आहे, परंतु जेव्हा तुम्ही ते पाहता तेव्हा हे फक्त जादूचे होते, 

95
00:06:35,135 --> 00:06:38,451
आणि जेव्हा मी हे शिकवत होतो तेव्हा मला यासाठी अॅनिमेशन एकत्र ठेवल्याचे आठवते, 

96
00:06:38,451 --> 00:06:41,385
आणि जसे की, तुम्हाला माहिती आहे, मला माहित आहे की हे कसे कार्य करते, 

97
00:06:41,385 --> 00:06:44,489
मला त्यातील सर्व गोष्टी माहित आहेत, तरीही बसून राहणे मजेदार आहे आणि जसे, 

98
00:06:44,489 --> 00:06:46,020
तुम्हाला माहिती आहे, ते खेळताना पहा.

99
00:06:46,660 --> 00:06:49,900
अरे हो.

100
00:06:49,900 --> 00:06:55,800
मला असे म्हणायचे आहे की हे नेहमीच कायदेशीर हालचाली देत असते हे प्रथम स्पष्ट नाही.

101
00:06:55,800 --> 00:07:02,278
उदाहरणार्थ, प्रत्येक वेळी तुम्ही 8 च्या जागी फिरत असताना, 

102
00:07:02,278 --> 00:07:08,980
ती डिस्क 3 हलवण्याकरता मोकळी केली जाईल हे तुम्हाला कसे कळेल?

103
00:07:08,980 --> 00:07:12,556
त्याच वेळी, समाधान लगेचच हे प्रश्न उपस्थित करते जसे की, हे कुठून येते, 

104
00:07:12,556 --> 00:07:16,940
हे का कार्य करते आणि 2 ते n वजा 1 पायऱ्या करण्यापेक्षा हे करण्याचा चांगला मार्ग आहे का?

105
00:07:16,940 --> 00:07:22,472
असे दिसून आले की, हे केवळ हॅनोईच्या टॉवर्सचे निराकरण 

106
00:07:22,472 --> 00:07:27,900
करत नाही तर ते शक्य तितक्या कार्यक्षम मार्गाने करते.

107
00:07:27,900 --> 00:07:34,639
हे का कार्य करते आणि ते कसे कार्य करते आणि हे काय चालले आहे हे समजून घेणे कोडेवर एका 

108
00:07:34,639 --> 00:07:41,220
विशिष्ट दृष्टीकोनातून खाली येते, ज्याला CS लोक रिकर्सिव्ह परिप्रेक्ष्य म्हणू शकतात.

109
00:07:41,640 --> 00:07:47,338
डिस्क 3 विचार करत आहे, ठीक आहे, 2, 1, आणि 0, जसे की तुम्हाला माझ्यापासून दूर जावे लागेल, 

110
00:07:47,338 --> 00:07:50,540
जसे की मी इतके वजन आणि दबावाखाली काम करू शकत नाही.

111
00:07:50,540 --> 00:07:57,628
आणि म्हणून फक्त डिस्क 3 च्या दृष्टीकोनातून, जर तुम्हाला डिस्क 3 येथे कसे पोहोचेल हे समजून 

112
00:07:57,628 --> 00:08:04,480
घ्यायचे असेल तर, डिस्क 2, 1 आणि 0 ला स्पिंडल B मध्ये कसे जायचे आहे याची मला पर्वा नाही.

113
00:08:04,480 --> 00:08:09,420
तो हलवू शकतो एकमेव मार्ग आहे.

114
00:08:09,420 --> 00:08:10,360
यापैकी कोणतीही डिस्क 3 च्या वर असल्यास, ती हलवू शकत नाही.

115
00:08:10,360 --> 00:08:19,340
त्यांच्यापैकी कोणतेही स्पिंडल C मध्ये असल्यास, ते तेथे हलू शकत नाही.

116
00:08:19,340 --> 00:08:21,100
त्यामुळे कसे तरी आम्हाला 2, 1, आणि 0 सूट मिळणे आवश्यक आहे.

117
00:08:21,100 --> 00:08:28,920
ते केल्यावर, आपण डिस्क 3 तिथे हलवू शकतो.

118
00:08:28,920 --> 00:08:28,920
आणि मग डिस्क 3 म्हणते, मी सेट आहे.

119
00:08:28,920 --> 00:08:34,179
तुला मला पुन्हा हलवण्याची गरज नाही.

120
00:08:34,179 --> 00:08:35,940
इतर प्रत्येकजण फक्त येथे कसे जायचे ते शोधून काढतो.

121
00:08:36,080 --> 00:08:37,039
आणि एका अर्थाने, आपल्याकडे आता त्याच समस्येची एक छोटी आवृत्ती आहे.

122
00:08:37,039 --> 00:08:40,600
आता तुम्हाला डिस्क 0, 1, आणि 2 स्पिंडल B वर बसली आहे, तुम्हाला ती C वर आणायची आहेत.

123
00:08:41,000 --> 00:08:44,006
तर कल्पना अशी आहे की जर मी फक्त एका डिस्कवर लक्ष केंद्रित केले आणि ही डिस्क कार्य 

124
00:08:44,006 --> 00:08:47,233
करण्यासाठी मला काय करावे लागेल याचा विचार केला तर मी माझ्या मोठ्या समस्येला थोडेसे लहान 

125
00:08:47,233 --> 00:08:47,600
बनवू शकेन.

126
00:08:48,120 --> 00:08:53,380
आणि मग मी ते कसे सोडवू?

127
00:08:53,980 --> 00:08:57,660
बरं, अगदी तसंच आहे.

128
00:08:57,740 --> 00:08:58,840
जर डिस्क 2 असे म्हणत असेल, डिस्क 1 आणि डिस्क 0, तो तू नाहीस, तो मी आहे.

129
00:08:58,840 --> 00:09:01,180
मला फक्त थोडी जागा हवी आहे.

130
00:09:01,180 --> 00:09:05,540
उतरा.

131
00:09:05,540 --> 00:09:06,240
त्यांना कुठेतरी हलवावे लागेल.

132
00:09:06,240 --> 00:09:06,660
नंतर डिस्क 2 जिथे जाणे आवश्यक आहे तिथे जाऊ शकते.

133
00:09:06,660 --> 00:09:11,320
मग डिस्क 1 आणि 0 हे करू शकते.

134
00:09:11,320 --> 00:09:18,380
परंतु मनोरंजक मुद्दा असा आहे की प्रत्येक डिस्कमध्ये अगदी समान धोरण असते.

135
00:09:18,820 --> 00:09:18,380
ते सर्व म्हणतात, माझ्या वरचे सगळे, उतरा.

136
00:09:18,820 --> 00:09:19,540
मग मी हलणार आहे.

137
00:09:19,540 --> 00:09:22,940
ठीक आहे, प्रत्येकजण परत जा.

138
00:09:23,020 --> 00:09:27,779
जेव्हा तुम्हाला ती अंतर्दृष्टी माहित असते, तेव्हा तुम्ही असे काहीतरी कोड 

139
00:09:27,779 --> 00:09:32,930
करू शकता जे हॅनोईच्या टॉवर्सचे निराकरण करेल, जसे की कोडच्या पाच किंवा सहा ओळी, 

140
00:09:32,930 --> 00:09:37,820
ज्यामध्ये कदाचित कोडच्या ओळींमध्ये बौद्धिक गुंतवणूकीचे सर्वाधिक प्रमाण आहे.

141
00:09:37,820 --> 00:09:38,980
आणि जर आपण थोडासा विचार केला तर हे स्पष्ट होते की हा सर्वात कार्यक्षम उपाय आहे.

142
00:09:38,980 --> 00:09:40,360
प्रत्येक टप्प्यावर, तुम्ही फक्त तेच करत आहात जे तुमच्यावर लादले गेले आहे.

143
00:09:40,560 --> 00:09:50,740
तुम्ही डिस्क 3 हलवण्यापूर्वी तुम्हाला डिस्क 0 ते 2 ची सूट मिळावी लागेल.

144
00:09:50,740 --> 00:09:50,740
आणि तुम्हाला डिस्क 3 हलवावी लागेल.

145
00:09:50,740 --> 00:09:52,840
आणि नंतर तुम्हाला डिस्क 0 ते 2 परत त्यावर हलवावी लागेल.

146
00:09:52,840 --> 00:09:54,600
या दृष्टीकोनातून अकार्यक्षमतेसाठी कोणतीही जागा नाही.

147
00:09:54,600 --> 00:09:58,020
मग बायनरीमध्ये मोजणी हे अल्गोरिदम का कॅप्चर करते?

148
00:09:58,020 --> 00:10:06,030
बरं, इथे काय चाललं आहे की सबप्रॉब्लेम सोडवण्याचा हा पॅटर्न, मोठी डिस्क हलवायची, 

149
00:10:06,030 --> 00:10:13,640
नंतर पुन्हा सबप्रॉब्लेम सोडवायची, बायनरी मोजणीच्या पॅटर्नशी अगदी समांतर आहे.

150
00:10:15,200 --> 00:10:20,820
काही रक्कम मोजा, रोल ओव्हर करा, पुन्हा त्याच रकमेपर्यंत मोजा.

151
00:10:20,820 --> 00:10:25,560
आणि हनोई अल्गोरिदम आणि बायनरी मोजणीचे हे टॉवर्स या दोन्ही स्वयं-समान प्रक्रिया आहेत, 

152
00:10:25,560 --> 00:10:29,743
या अर्थाने जर तुम्ही झूम आउट केले आणि 2 च्या मोठ्या पॉवरपर्यंत मोजले किंवा 

153
00:10:29,743 --> 00:10:33,480
हॅनोईचे टॉवर अधिक डिस्कसह सोडवले, तरीही त्या दोघांची रचना समान आहे.

154
00:10:35,140 --> 00:10:41,900
सबप्रॉब्लेम, एखादे काम करा, सबप्रॉब्लेम.

155
00:10:41,900 --> 00:10:44,362
उदाहरणार्थ, अगदी लहान प्रमाणात, दोन डिस्कसाठी हॅनोईचे टॉवर्स सोडवणे, 

156
00:10:44,362 --> 00:10:47,360
डिस्क 0 हलवा, डिस्क 1 हलवा, डिस्क 0 हलवा, बायनरीमध्ये 3 पर्यंत मोजून परावर्तित होते.

157
00:10:47,360 --> 00:10:47,360
शेवटचा बिट फ्लिप करा, एकदा रोल करा, शेवटचा बिट फ्लिप करा.

158
00:10:47,360 --> 00:10:53,290
थोड्या मोठ्या प्रमाणावर, तीन डिस्क्ससाठी हॅनोईचे टॉवर्स सोडवणे दोन डिस्क्स सोडवण्यासाठी, 

159
00:10:53,290 --> 00:10:57,887
डिस्क क्रमांक 2 हलविण्यासाठी, त्यानंतर पुन्हा दोन डिस्क सोडवण्यासाठी 

160
00:10:57,887 --> 00:11:00,220
जे काही लागेल ते करण्यासारखे दिसते.

161
00:11:00,220 --> 00:11:01,430
समान रीतीने, बायनरीमध्ये 111 पर्यंत मोजणे 3 पर्यंत मोजणे, 

162
00:11:01,430 --> 00:11:02,620
सर्व तीन बिट्सवर फिरणे, नंतर आणखी तीन मोजणे समाविष्ट आहे.

163
00:11:02,620 --> 00:11:04,780
सर्व स्केलवर, दोन्ही प्रक्रियांमध्ये समान ब्रेकडाउन आहे.

164
00:11:04,780 --> 00:11:09,552
त्यामुळे एका अर्थाने, हे बायनरी सोल्यूशन कार्य करते याचे कारण किंवा किमान एक स्पष्टीकरण, 

165
00:11:09,552 --> 00:11:12,072
मला असे वाटते की याचे कोणतेही स्पष्टीकरण नाही, 

166
00:11:12,072 --> 00:11:16,469
परंतु मला वाटते की सर्वात नैसर्गिक आहे की तुम्ही या बायनरी संख्या तयार करण्यासाठी 

167
00:11:16,469 --> 00:11:20,974
वापरत असलेल्या पॅटर्नमध्ये अगदी समान आहे. हनोईच्या टॉवर्ससाठी तुम्ही वापरत असलेल्या 

168
00:11:20,974 --> 00:11:24,620
पॅटर्नप्रमाणे रचना करा, म्हणूनच जर तुम्ही बिट्स फ्लिपिंग पाहिल्यास, 

169
00:11:24,620 --> 00:11:26,980
तुम्ही ही प्रक्रिया प्रभावीपणे उलट करत आहात.

170
00:11:27,600 --> 00:11:30,520
तुम्ही म्हणता, हे कोणत्या प्रक्रियेतून निर्माण झाले?

171
00:11:30,520 --> 00:11:34,783
मला ही गोष्ट देण्यासाठी हे बिट्स कसे फ्लिप केले गेले हे मी 

172
00:11:34,783 --> 00:11:39,190
समजून घेण्याचा प्रयत्न करत असल्यास, आपण हॅनोईच्या टॉवर्ससाठी 

173
00:11:39,190 --> 00:11:43,960
रिकर्सिव अल्गोरिदम प्रभावीपणे उलट करत आहात, म्हणूनच ते कार्य करते.

174
00:11:43,960 --> 00:11:47,520
ते खूपच छान आहे, बरोबर?

175
00:11:47,520 --> 00:11:51,700
पण प्रत्यक्षात ते थंड होते.

176
00:11:51,820 --> 00:11:55,980
हे सिएरपिन्स्कीच्या त्रिकोणाशी कसे संबंधित आहे हे मला समजले नाही.

177
00:11:55,980 --> 00:11:59,160
आणि हेच मी फॉलो-ऑन व्हिडिओ, भाग २ मध्ये करणार आहे.

178
00:11:59,160 --> 00:11:59,160
Patreon वर या व्हिडिओंना पाठिंबा देणाऱ्या प्रत्येकाचे खूप खूप आभार.

179
00:11:59,160 --> 00:12:04,019
मी नुकतेच Essence of Calculus चा पहिला अध्याय पूर्ण केला आहे, 

180
00:12:04,019 --> 00:12:09,114
आणि मी आत्ता दुसर्‍यावर काम करत आहे, आणि Patreon समर्थकांना काही 

181
00:12:09,114 --> 00:12:15,620
महिन्यांत पूर्ण मालिका प्रकाशित करण्यापूर्वी या व्हिडिओंमध्ये लवकर प्रवेश मिळत आहे.

182
00:12:15,620 --> 00:12:18,743
हा व्हिडिओ आणि पुढचा व्हिडिओ देखील Desmos द्वारे काही प्रमाणात समर्थित आहे, 

183
00:12:18,743 --> 00:12:21,496
आणि पुढील व्हिडिओच्या आधी मला फक्त थोडा वेळ घ्यायचा आहे आणि ते कोण 

184
00:12:21,496 --> 00:12:23,880
आहेत आणि ते नेमले आहेत याबद्दल थोडेसे सामायिक करू इच्छितो.

185
00:12:23,880 --> 00:12:29,580
त्यामुळे Desmos खरोखर छान आहे.

186
00:12:29,580 --> 00:12:30,450
ते वर्गखोल्यांसाठी आणि शिक्षकांसाठी साधनांसाठी या 

187
00:12:30,450 --> 00:12:31,320
परस्परसंवादी गणित क्रियाकलापांचा भरपूर वापर करतात.

188
00:12:31,320 --> 00:12:36,340
त्यांच्या ऑफरचे खरे मांस त्यांच्या वर्गातील क्रियाकलापांमध्ये आहे.

189
00:12:36,340 --> 00:12:38,809
माझ्या भागासाठी, अध्यापनशास्त्रीय दृष्टिकोनातून या क्रियाकलाप 

190
00:12:38,809 --> 00:12:40,960
किती सुविचारित आहेत हे पाहून मी खूप प्रभावित झालो आहे.

191
00:12:40,960 --> 00:12:46,348
संघाला त्यांची सामग्री स्पष्टपणे माहित आहे आणि विद्यार्थ्यांना आणि 

192
00:12:46,348 --> 00:12:52,140
शिक्षकांच्या जीवनात फरक करण्यासाठी ते कोठे उभे आहेत हे त्यांना ठाऊक आहे.

193
00:12:52,140 --> 00:12:53,440
आणि मी म्हटल्याप्रमाणे, ते कामावर घेत आहेत.

194
00:12:53,440 --> 00:12:59,140
अभियांत्रिकी प्रतिभा असोत, डिझाइनर असोत, शिक्षक असोत किंवा 

195
00:12:59,140 --> 00:13:05,420
त्यांना काय करायचे आहे याच्या अनुषंगाने इतर कोणतीही कौशल्ये असोत.

196
00:13:05,420 --> 00:13:09,717
तुमच्यापैकी कोणाला त्यांच्यात सामील होण्यास, शिक्षक आणि विद्यार्थ्यांसाठी 

197
00:13:09,717 --> 00:13:13,899
यापैकी काही उत्तम साधने बनविण्यात त्यांना मदत करण्यात स्वारस्य असल्यास, 

198
00:13:13,899 --> 00:13:16,920
मी वर्णनात लिंक केलेले करिअर पृष्ठ तुम्ही पाहू शकता.

199
00:13:16,920 --> 00:13:21,060
वैयक्तिकरित्या, मला वाटते की ते काही खरोखर अर्थपूर्ण गोष्टी करत आहेत.

200
00:13:21,060 --> 00:13:23,794
मला असे वाटते की त्यांचे क्रियाकलाप विद्यार्थ्यांसाठी खरोखर चांगले 

201
00:13:23,794 --> 00:13:26,283
गणित अंतर्ज्ञान निर्माण करत आहेत आणि जग काही अधिक प्रतिभावान 

202
00:13:26,283 --> 00:13:29,100
लोकांचा उपयोग करून शिक्षणाकडे त्यांचे प्रयत्न जसे करतात तसे करू शकेल.

203
00:13:29,100 --> 00:13:42,545
ठीक आहे, त्यामुळे मी तुम्हाला पुढचा व्हिडिओ पाहीन, 

204
00:13:42,545 --> 00:13:58,100
आणि मला वाटते की हे कुठे चालले आहे ते तुम्हाला खरोखर आवडेल.

