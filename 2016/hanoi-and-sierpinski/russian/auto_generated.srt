1
00:00:04,200 --> 00:00:08,496
Сегодня я хочу поделиться с вами изящным способом решения головоломки Ханойские башни, 

2
00:00:08,496 --> 00:00:10,620
просто посчитав в другой системе счисления.

3
00:00:11,220 --> 00:00:15,640
И что удивительно, все это связано с поиском кривой, заполняющей треугольник Серпинского.

4
00:00:16,720 --> 00:00:19,285
Я узнал об этом от моего бывшего преподавателя информатики, 

5
00:00:19,285 --> 00:00:21,851
его зовут Кит Шварц, и я должен сказать, что этот человек — 

6
00:00:21,851 --> 00:00:24,460
один из лучших преподавателей, которых я когда-либо встречал.

7
00:00:25,140 --> 00:00:28,115
На самом деле я записал часть разговора, в котором он показывал мне эти вещи, 

8
00:00:28,115 --> 00:00:30,900
чтобы вы, ребята, могли напрямую услышать кое-что из того, что он описал.

9
00:00:38,420 --> 00:00:43,194
Если вы не знакомы, давайте просто объясним, что на самом 

10
00:00:43,194 --> 00:00:47,640
деле представляет собой головоломка «Ханойские башни».

11
00:00:47,640 --> 00:00:54,013
Вы думаете, что эти диски имеют отверстие посередине, 

12
00:00:54,013 --> 00:00:58,380
чтобы их можно было надеть на крючок.

13
00:00:59,200 --> 00:01:03,031
Изображенная здесь установка имеет пять дисков, которые я обозначим 0, 1, 

14
00:01:03,031 --> 00:01:06,760
2, 3, 4, но в принципе вы можете иметь столько дисков, сколько захотите.

15
00:01:07,460 --> 00:01:10,837
Например, ваш первый ход должен включать в себя перемещение диска 0, 

16
00:01:10,837 --> 00:01:14,362
поскольку на любом другом диске есть что-то, что нужно убрать с дороги, 

17
00:01:14,362 --> 00:01:15,880
прежде чем он сможет двигаться.

18
00:01:15,880 --> 00:01:21,014
После этого вы можете переместить диск 1, но он должен идти на любую привязку, 

19
00:01:21,014 --> 00:01:25,500
на которой в данный момент нет диска 0, поскольку в противном случае 

20
00:01:25,500 --> 00:01:29,660
вы бы поместили диск большего размера на меньший, что запрещено.

21
00:01:29,660 --> 00:01:30,585
Если вы никогда не видели этого раньше, я настоятельно рекомендую вам сделать паузу, 

22
00:01:30,585 --> 00:01:31,380
вытащить несколько книг разного размера и попробовать это самостоятельно.

23
00:01:31,380 --> 00:01:34,766
Теперь Кит показал мне кое-что действительно удивительное в этой головоломке: 

24
00:01:34,766 --> 00:01:37,632
ее можно решить, просто посчитав в двоичном формате и связав ритм 

25
00:01:37,632 --> 00:01:39,760
этого счета с определенным ритмом движений диска.

26
00:01:39,760 --> 00:01:42,940
Для тех, кто не знаком с двоичным кодом, я сначала сделаю здесь краткий обзор.

27
00:01:42,940 --> 00:01:45,535
На самом деле, даже если вы знакомы с двоичными числами, 

28
00:01:45,535 --> 00:01:48,267
я хочу объяснить это, сосредоточив внимание на ритме счета, 

29
00:01:48,267 --> 00:01:51,500
о котором вы, возможно, задумывались, а могли и не задумываться раньше.

30
00:01:51,500 --> 00:01:56,612
Любое описание двоичного кода обычно начинается с самоанализа нашего 

31
00:01:56,612 --> 00:02:02,465
обычного способа представления чисел, который мы называем десятичной системой, 

32
00:02:02,465 --> 00:02:07,800
поскольку мы используем 10 отдельных цифр: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9.

33
00:02:07,800 --> 00:02:09,139
Ритм счета начинается с прохождения всех 10 этих цифр.

34
00:02:09,139 --> 00:02:09,860
Затем, когда новые цифры закончатся, вы выражаете следующее число 10 двумя цифрами 1 и 0.

35
00:02:09,860 --> 00:02:12,953
Вы говорите, что 1 находится в разряде десятков, 

36
00:02:12,953 --> 00:02:16,678
поскольку оно предназначено для инкапсуляции группы из 10, 

37
00:02:16,678 --> 00:02:21,540
до которой вы уже посчитали, при этом освобождая место единиц для сброса в 0.

38
00:02:21,540 --> 00:02:26,592
Ритм счета повторяется такой: счет до 9, переход на разряд десятков, 

39
00:02:26,592 --> 00:02:30,180
счет еще на 9, переход на разряд десятков и т. д.

40
00:02:30,180 --> 00:02:39,259
Что ж, повторив этот процесс 9 раз, вы переходите к разряду сотен, цифре, 

41
00:02:39,259 --> 00:02:45,761
которая отслеживает, сколько групп по 100 вы попали, 

42
00:02:45,761 --> 00:02:51,160
освобождая две другие цифры для сброса до 0.

43
00:02:51,260 --> 00:02:55,740
Таким образом, ритм счета является своего рода самоподобным.

44
00:02:55,740 --> 00:03:01,030
Даже если вы увеличите масштаб, процесс будет выглядеть как что-то сделать, 

45
00:03:01,030 --> 00:03:05,833
перевернуться, сделать то же самое, перевернуться и повторить 9 раз, 

46
00:03:05,833 --> 00:03:08,340
прежде чем перевернуться еще больше.

47
00:03:08,340 --> 00:03:17,146
В двоичном формате, также известном как основание 2, вы ограничиваетесь двумя цифрами, 

48
00:03:17,146 --> 00:03:24,840
0 и 1, обычно называемыми битами, что является сокращением от двоичных цифр.

49
00:03:24,840 --> 00:03:31,360
В результате, когда вы считаете, вам приходится все время переворачиваться.

50
00:03:31,360 --> 00:03:33,747
После подсчета 0, 1 у вас уже закончились биты, 

51
00:03:33,747 --> 00:03:37,378
поэтому вам нужно перевернуться на двойку, записать 1-0 и сопротивляться 

52
00:03:37,378 --> 00:03:41,855
всякому побуждению в вашем натренированном десятичной системе мозгу прочитать это как 10, 

53
00:03:41,855 --> 00:03:44,940
и вместо этого поймите, что это означает 1 группу из 2 плюс 0.

54
00:03:49,520 --> 00:03:52,225
Затем увеличьте число до 1-1, что соответствует 3, 

55
00:03:52,225 --> 00:03:56,576
и вам уже придется перевернуть его снова, а поскольку на месте этих двух стоит 1, 

56
00:03:56,576 --> 00:04:00,662
это тоже должно перевернуться, что дает вам 1-0-0, что представляет собой 1. 

57
00:04:00,662 --> 00:04:02,360
группа 4 плюс 0 группа 2 плюс 0.

58
00:04:02,360 --> 00:04:09,740
Точно так же, как цифры в десятичной системе представляют степени 10, 

59
00:04:09,740 --> 00:04:14,380
биты в базе 2 представляют разные степени 2.

60
00:04:15,060 --> 00:04:20,892
Поэтому вместо того, чтобы говорить о 10-м месте, 100-м месте, 

61
00:04:20,892 --> 00:04:28,020
1000-м месте и тому подобном, вы говорите о 2-м месте, 4-м месте и 8-м месте.

62
00:04:28,420 --> 00:04:28,020
Ритм счета теперь намного быстрее, но это делает его чуть ли не более заметным.

63
00:04:28,420 --> 00:04:29,540
Переверните последний, переверните один раз.

64
00:04:29,540 --> 00:04:29,540
Переверните последний, переверните дважды.

65
00:04:29,540 --> 00:04:29,540
Переверните последний, переверните один раз.

66
00:04:29,540 --> 00:04:30,480
Переверните последний, переверните три раза.

67
00:04:30,480 --> 00:04:36,860
Опять же, в этом шаблоне есть определенное самоподобие.

68
00:04:36,860 --> 00:04:36,860
На каждом масштабе процесс заключается в том, чтобы что-то сделать, 

69
00:04:36,860 --> 00:04:36,860
перевернуться, а затем повторить то же самое еще раз.

70
00:04:36,860 --> 00:04:43,575
В мелком масштабе, скажем, при счете до 3, что в двоичном формате равно 1:1, 

71
00:04:43,575 --> 00:04:48,634
это означает переворот последнего бита, переход к двойке, 

72
00:04:48,634 --> 00:04:51,600
а затем переворот последнего бита.

73
00:04:51,600 --> 00:04:58,423
В более крупном масштабе, например, при счете до 15, то есть 1-1-1-1, 

74
00:04:58,423 --> 00:05:05,344
процесс состоит в том, чтобы позволить последним 3 битам считать до 7, 

75
00:05:05,344 --> 00:05:13,240
перевернуться на 8-е место, а затем позволить последним 3 битам подсчитать снова.

76
00:05:13,920 --> 00:05:20,713
Считая до 255, то есть 8 последовательных единиц, это похоже на то, 

77
00:05:20,713 --> 00:05:27,806
что последние 7 бит подсчитываются до тех пор, пока они не заполнятся, 

78
00:05:27,806 --> 00:05:35,100
с переходом на место 128, а затем снова подсчитываются последним 7 битам.

79
00:05:35,100 --> 00:05:37,838
Итак, после этого мини-представления, Кит показал мне удивительный факт: 

80
00:05:37,838 --> 00:05:39,940
мы можем использовать этот ритм для решения башен Ханоя.

81
00:05:39,940 --> 00:05:41,460
Вы начинаете счет с 0.

82
00:05:41,980 --> 00:05:42,551
Всякий раз, когда вы меняете только этот последний бит с 0 на 1, 

83
00:05:42,551 --> 00:05:42,920
переместите диск 0 на один колышек вправо.

84
00:05:42,920 --> 00:05:43,240
Если он уже был на самой правой привязке, вы просто возвращаете его к первой привязке.

85
00:05:43,800 --> 00:05:44,733
Если вы перевернетесь один раз на место двойки, 

86
00:05:44,733 --> 00:05:45,940
то есть перевернете последние два бита, вы переместите диск 1.

87
00:05:46,960 --> 00:05:45,940
Куда его переместить, спросите вы?

88
00:05:46,960 --> 00:05:52,336
У вас нет выбора, вы не можете поместить его поверх диска 0, и есть только одна привязка, 

89
00:05:52,336 --> 00:05:56,280
поэтому вы перемещаете его туда, где вы вынуждены его переместить.

90
00:05:56,280 --> 00:05:58,426
После этого, считая до 1-1, нужно просто перевернуть последний бит, 

91
00:05:58,426 --> 00:05:59,500
чтобы вы снова переместили диск 0.

92
00:06:01,340 --> 00:06:03,794
Затем, когда ваш двоичный счет дважды перевернется на место четверки, 

93
00:06:03,794 --> 00:06:06,600
переместите диск 2, и последовательность действий продолжится следующим образом.

94
00:06:06,600 --> 00:06:13,840
Переверните последний, переместите диск 0.

95
00:06:13,840 --> 00:06:17,580
Переверните последние два, переместите диск 1.

96
00:06:17,580 --> 00:06:17,580
Переверните последний, переместите диск 0.

97
00:06:17,580 --> 00:06:22,679
И здесь нам придется три раза перевернуться на восьмерку, 

98
00:06:22,679 --> 00:06:26,020
что соответствует перемещению диска 3.

99
00:06:26,982 --> 00:06:26,020
В этом есть что-то волшебное, например, когда я впервые увидел это, 

100
00:06:28,800 --> 00:06:26,982
я подумал: «Это не может сработать».

101
00:06:28,800 --> 00:06:32,695
Я не знаю, как это работает, я не знаю, почему это работает, теперь я знаю, 

102
00:06:32,695 --> 00:06:37,204
но это просто волшебно, когда вы это видите, и я помню, как собирал для этого анимацию, 

103
00:06:37,204 --> 00:06:41,612
когда преподавал это, и просто типа: вы знаете, я знаю, как это работает, я знаю все, 

104
00:06:41,612 --> 00:06:46,020
что в этом есть, все равно весело просто сидеть и просто смотреть, как это происходит.

105
00:06:46,660 --> 00:06:49,900
Ах, да.

106
00:06:49,900 --> 00:06:55,800
Я имею в виду, что поначалу даже неясно, всегда ли это приведет к законным действиям.

107
00:06:55,800 --> 00:07:04,012
Например, откуда вы знаете, что каждый раз, когда вы перекатываетесь на цифру 8, 

108
00:07:04,012 --> 00:07:08,980
диск 3 обязательно освобождается для перемещения?

109
00:07:08,980 --> 00:07:12,682
В то же время решение сразу же вызывает такие вопросы, как: откуда это взялось, 

110
00:07:12,682 --> 00:07:15,320
почему это работает и есть ли лучший способ сделать это, 

111
00:07:15,320 --> 00:07:16,940
чем выполнять 2 из n минус 1 шагов?

112
00:07:16,940 --> 00:07:23,061
Оказывается, это не только решает проблему «Ханойские башни», 

113
00:07:23,061 --> 00:07:27,900
но и делает это максимально эффективным способом.

114
00:07:27,900 --> 00:07:32,360
Понимание того, почему это работает, как это работает и что, черт возьми, 

115
00:07:32,360 --> 00:07:36,036
происходит, сводится к определенному взгляду на головоломку, 

116
00:07:36,036 --> 00:07:41,220
который специалисты по компьютерной технике могли бы назвать рекурсивной перспективой.

117
00:07:41,640 --> 00:07:46,180
Диск 3 думает: «ОК, 2, 1 и 0», как будто тебе придется от меня оторваться, 

118
00:07:46,180 --> 00:07:50,540
как будто я не могу функционировать под таким большим весом и давлением.

119
00:07:50,540 --> 00:07:57,340
Итак, с точки зрения диска 3, если вы хотите выяснить, как диск 3 сюда попадет, 

120
00:07:57,340 --> 00:08:04,480
каким-то образом, мне все равно, как, диски 2, 1 и 0 должны добраться до шпинделя B.

121
00:08:04,480 --> 00:08:09,420
Только так он может двигаться.

122
00:08:09,420 --> 00:08:10,360
Если какой-либо из этих дисков находится поверх третьего, он не может двигаться.

123
00:08:10,360 --> 00:08:19,340
Если какой-либо из них находится в шпинделе C, он не может туда переместиться.

124
00:08:19,340 --> 00:08:21,100
Итак, каким-то образом нам нужно получить скидку 2, 1 и 0.

125
00:08:21,100 --> 00:08:28,920
Сделав это, мы сможем переместить туда диск 3.

126
00:08:28,920 --> 00:08:28,920
И тут диск 3 говорит: я готов.

127
00:08:28,920 --> 00:08:34,179
Тебе больше никогда не придется меня перемещать.

128
00:08:34,179 --> 00:08:35,940
Остальные просто думают, как сюда добраться.

129
00:08:36,080 --> 00:08:37,039
И в каком-то смысле теперь у вас есть уменьшенная версия той же проблемы.

130
00:08:37,039 --> 00:08:40,600
Теперь у вас есть диски 0, 1 и 2, находящиеся на шпинделе B, вам нужно перенести их в C.

131
00:08:41,000 --> 00:08:43,785
Идея состоит в том, что если я просто сосредоточусь на одном диске и подумаю о том, 

132
00:08:43,785 --> 00:08:45,444
что мне нужно сделать, чтобы этот диск заработал, 

133
00:08:45,444 --> 00:08:47,600
я смогу превратить свою большую проблему в нечто немного меньшее.

134
00:08:48,120 --> 00:08:53,380
И как мне тогда это решить?

135
00:08:53,980 --> 00:08:57,660
Ну, это точно то же самое.

136
00:08:57,740 --> 00:08:58,840
Если диск 2 скажет: диск 1 и диск 0, то это не ты, это я.

137
00:08:58,840 --> 00:09:01,180
Мне просто нужно немного места.

138
00:09:01,180 --> 00:09:05,540
Отправиться.

139
00:09:05,540 --> 00:09:06,240
Им нужно куда-то переехать.

140
00:09:06,240 --> 00:09:06,660
Тогда диск 2 сможет переместиться туда, куда ему нужно.

141
00:09:06,660 --> 00:09:11,320
Тогда диски 1 и 0 смогут это сделать.

142
00:09:11,320 --> 00:09:18,380
Но интересно то, что каждый диск имеет практически одинаковую стратегию.

143
00:09:18,820 --> 00:09:18,380
Они все говорят: все, кто выше меня, уходите.

144
00:09:18,820 --> 00:09:19,540
Тогда я собираюсь переехать.

145
00:09:19,540 --> 00:09:22,940
Хорошо, все возвращаются.

146
00:09:23,020 --> 00:09:28,642
Когда вы поймете это понимание, вы сможете написать что-то, что решит ханойские башни, 

147
00:09:28,642 --> 00:09:32,003
например, пять или шесть строк кода, что, вероятно, 

148
00:09:32,003 --> 00:09:37,820
имеет самое высокое соотношение интеллектуальных инвестиций к строкам кода за всю историю.

149
00:09:37,820 --> 00:09:38,406
И если немного подумать, становится ясно, что 

150
00:09:38,406 --> 00:09:38,980
это должно быть наиболее эффективное решение.

151
00:09:38,980 --> 00:09:40,360
На каждом шагу вы делаете только то, что вам навязывают.

152
00:09:40,560 --> 00:09:50,740
Вам необходимо отключить диски с 0 по 2, прежде чем вы сможете переместить диск 3.

153
00:09:50,740 --> 00:09:50,740
И вам нужно переместить диск 3.

154
00:09:50,740 --> 00:09:52,840
И тогда вам придется переместить на него диски с 0 по 2.

155
00:09:52,840 --> 00:09:54,600
С этой точки зрения просто нет места неэффективности.

156
00:09:54,600 --> 00:09:58,020
Так почему же двоичный подсчет фиксирует этот алгоритм?

157
00:09:58,020 --> 00:10:04,007
Что здесь происходит, так это то, что этот шаблон решения подзадачи, 

158
00:10:04,007 --> 00:10:11,557
перемещения большого диска и последующего решения подзадачи снова прекрасно параллелен 

159
00:10:11,557 --> 00:10:13,640
шаблону двоичного счета.

160
00:10:15,200 --> 00:10:20,820
Подсчитайте какую-то сумму, переверните, снова досчитайте до этой же суммы.

161
00:10:20,820 --> 00:10:24,183
И этот алгоритм ханойских башен, и двоичный счет являются самоподобными 

162
00:10:24,183 --> 00:10:27,360
процессами в том смысле, что если вы уменьшите масштаб и посчитаете 

163
00:10:27,360 --> 00:10:31,004
до большей степени 2 или решите ханойские башни с большим количеством дисков, 

164
00:10:31,004 --> 00:10:33,480
они оба все равно будут иметь одну и ту же структуру.

165
00:10:35,140 --> 00:10:41,900
Подзадача, сделай что-нибудь, подзадача.

166
00:10:41,900 --> 00:10:44,316
Например, в довольно маленьком масштабе решение ханойских башен для двух дисков, 

167
00:10:44,316 --> 00:10:46,106
переместить диск 0, переместить диск 1, переместить диск 0, 

168
00:10:46,106 --> 00:10:47,360
отражается счетом до 3 в двоичном формате.

169
00:10:47,360 --> 00:10:47,360
Переверните последний бит, переверните один раз, переверните последний бит.

170
00:10:47,360 --> 00:10:52,086
В несколько большем масштабе решение ханойских башен для трех дисков выглядит так же, 

171
00:10:52,086 --> 00:10:56,922
как если бы вы сделали все возможное, чтобы решить два диска, передвинули диск номер 2, 

172
00:10:56,922 --> 00:11:00,220
а затем сделали все возможное, чтобы снова решить два диска.

173
00:11:00,220 --> 00:11:01,529
Аналогично, двоичный счет до 111 включает в себя счет до 3, 

174
00:11:01,529 --> 00:11:02,620
прокрутку всех трех битов и затем досчет еще трех.

175
00:11:02,620 --> 00:11:04,780
На всех уровнях оба процесса имеют одинаковую структуру.

176
00:11:04,780 --> 00:11:08,487
Итак, в каком-то смысле причина, по которой это двоичное решение работает, или, 

177
00:11:08,487 --> 00:11:12,149
по крайней мере, объяснение, я чувствую, что не существует единого объяснения, 

178
00:11:12,149 --> 00:11:15,068
но я думаю, что наиболее естественным является то, что шаблон, 

179
00:11:15,068 --> 00:11:17,942
который вы бы использовали для генерации этих двоичных чисел, 

180
00:11:17,942 --> 00:11:20,213
имеет точно такой же структура похожа на шаблон, 

181
00:11:20,213 --> 00:11:22,855
который вы бы использовали для ханойских башен, поэтому, 

182
00:11:22,855 --> 00:11:26,980
если вы посмотрите на переворачивание битов, вы фактически обращаете этот процесс вспять.

183
00:11:27,600 --> 00:11:30,520
Вы говорите, какой процесс их породил?

184
00:11:30,520 --> 00:11:35,045
Например, если бы я пытался понять, как эти биты были перевернуты, 

185
00:11:35,045 --> 00:11:39,840
чтобы дать мне эту штуку, вы фактически обращали бы вспять рекурсивный 

186
00:11:39,840 --> 00:11:43,960
алгоритм для ханойских башен, и именно поэтому это сработало.

187
00:11:43,960 --> 00:11:47,520
Это довольно круто, правда?

188
00:11:47,520 --> 00:11:51,700
Но на самом деле становится прохладнее.

189
00:11:51,820 --> 00:11:55,980
Я даже не понял, как это связано с треугольником Серпинского.

190
00:11:55,980 --> 00:11:59,160
Именно это я и собираюсь сделать в следующем видео, часть 2.

191
00:11:59,160 --> 00:11:59,160
Большое спасибо всем, кто поддерживает эти видео на Patreon.

192
00:11:59,160 --> 00:12:06,099
Я только что закончил первую главу «Сущности исчисления» и сейчас работаю над второй, 

193
00:12:06,099 --> 00:12:10,778
и сторонники Patreon получают ранний доступ к этим видео, 

194
00:12:10,778 --> 00:12:15,620
прежде чем я опубликую полную серию через несколько месяцев.

195
00:12:15,620 --> 00:12:18,123
Это и следующее видео также частично поддерживаются Desmos, 

196
00:12:18,123 --> 00:12:21,502
и перед следующим видео я просто хочу воспользоваться моментом и рассказать вам, 

197
00:12:21,502 --> 00:12:23,880
ребята, немного о том, кто они и о том, что они нанимают.

198
00:12:23,880 --> 00:12:29,580
Так что Десмос на самом деле очень крутой.

199
00:12:29,580 --> 00:12:30,409
Они создают множество интерактивных математических 

200
00:12:30,409 --> 00:12:31,320
занятий для классных комнат и инструментов для учителей.

201
00:12:31,320 --> 00:12:36,340
Настоящая суть их предложений – это занятия в классе.

202
00:12:36,340 --> 00:12:38,504
Я, со своей стороны, очень впечатлен тем, насколько 

203
00:12:38,504 --> 00:12:40,960
хорошо продуманы эти занятия с педагогической точки зрения.

204
00:12:40,960 --> 00:12:52,140
Команда четко знает свое дело и знает, как изменить жизнь учеников и учителей.

205
00:12:52,140 --> 00:12:53,440
И, как я уже сказал, они нанимают сотрудников.

206
00:12:53,440 --> 00:12:59,576
Они всегда стремятся привлечь больше хороших талантов, будь то инженеры, дизайнеры, 

207
00:12:59,576 --> 00:13:05,420
учителя или любые другие навыки, соответствующие тому, чем они хотят заниматься.

208
00:13:05,420 --> 00:13:09,341
Если кто-то из вас заинтересован присоединиться к ним и помочь им создать 

209
00:13:09,341 --> 00:13:13,051
некоторые из этих замечательных инструментов для учителей и учеников, 

210
00:13:13,051 --> 00:13:16,920
вы можете посетить страницу вакансий, ссылку на которую я дал в описании.

211
00:13:16,920 --> 00:13:21,060
Лично я думаю, что они делают действительно значимые вещи.

212
00:13:21,060 --> 00:13:23,667
Я думаю, что их деятельность формирует у учащихся по-настоящему хорошую 

213
00:13:23,667 --> 00:13:26,782
математическую интуицию, и миру могло бы пригодиться еще несколько талантливых людей, 

214
00:13:26,782 --> 00:13:29,100
направляющих свои усилия на образование так, как они это делают.

215
00:13:29,100 --> 00:13:44,585
Хорошо, на этом увидимся в следующем видео, и я думаю, 

216
00:13:44,585 --> 00:13:58,100
вам действительно понравится то, что происходит.

