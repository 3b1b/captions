1
00:00:00,000 --> 00:00:07,522
Сегодня я хочу поделиться с вами изящным способом решения головоломки Ханойские башни,

2
00:00:07,522 --> 00:00:11,240
просто посчитав в другой системе счисления.

3
00:00:11,240 --> 00:00:16,720
И что удивительно, все это связано с поиском кривой, заполняющей треугольник Серпинского.

4
00:00:16,720 --> 00:00:19,411
Я узнал об этом от моего бывшего преподавателя информатики,

5
00:00:19,411 --> 00:00:22,103
его зовут Кит Шварц, и я должен сказать, что этот человек —

6
00:00:22,103 --> 00:00:24,840
один из лучших преподавателей, которых я когда-либо встречал.

7
00:00:24,840 --> 00:00:33,972
На самом деле я записал часть разговора, в котором он показывал мне эти вещи,

8
00:00:33,972 --> 00:00:42,520
чтобы вы, ребята, могли напрямую услышать кое-что из того, что он описал.

9
00:00:42,520 --> 00:00:48,692
Если вы не знакомы, давайте просто объясним, что на самом

10
00:00:48,692 --> 00:00:54,440
деле представляет собой головоломка «Ханойские башни».

11
00:00:54,440 --> 00:00:57,300
Вы думаете, что эти диски имеют отверстие посередине,

12
00:00:57,300 --> 00:00:59,260
чтобы их можно было надеть на крючок.

13
00:00:59,260 --> 00:01:11,860
Изображенная здесь установка имеет пять дисков, которые я обозначим 0, 1,

14
00:01:11,860 --> 00:01:24,120
2, 3, 4, но в принципе вы можете иметь столько дисков, сколько захотите.

15
00:01:24,120 --> 00:01:27,810
Например, ваш первый ход должен включать в себя перемещение диска 0,

16
00:01:27,810 --> 00:01:31,661
поскольку на любом другом диске есть что-то, что нужно убрать с дороги,

17
00:01:31,661 --> 00:01:33,320
прежде чем он сможет двигаться.

18
00:01:33,320 --> 00:01:37,687
После этого вы можете переместить диск 1, но он должен идти на любую привязку,

19
00:01:37,687 --> 00:01:41,501
на которой в данный момент нет диска 0, поскольку в противном случае

20
00:01:41,501 --> 00:01:45,040
вы бы поместили диск большего размера на меньший, что запрещено.

21
00:01:45,040 --> 00:01:53,260
Если вы никогда не видели этого раньше, я настоятельно рекомендую вам сделать паузу,

22
00:01:53,260 --> 00:02:00,320
вытащить несколько книг разного размера и попробовать это самостоятельно.

23
00:02:00,320 --> 00:02:05,234
Теперь Кит показал мне кое-что действительно удивительное в этой головоломке:

24
00:02:05,234 --> 00:02:09,392
ее можно решить, просто посчитав в двоичном формате и связав ритм

25
00:02:09,392 --> 00:02:12,480
этого счета с определенным ритмом движений диска.

26
00:02:12,480 --> 00:02:17,420
Для тех, кто не знаком с двоичным кодом, я сначала сделаю здесь краткий обзор.

27
00:02:17,420 --> 00:02:20,191
На самом деле, даже если вы знакомы с двоичными числами,

28
00:02:20,191 --> 00:02:23,108
я хочу объяснить это, сосредоточив внимание на ритме счета,

29
00:02:23,108 --> 00:02:26,560
о котором вы, возможно, задумывались, а могли и не задумываться раньше.

30
00:02:26,560 --> 00:02:30,323
Любое описание двоичного кода обычно начинается с самоанализа нашего

31
00:02:30,323 --> 00:02:34,632
обычного способа представления чисел, который мы называем десятичной системой,

32
00:02:34,632 --> 00:02:38,560
поскольку мы используем 10 отдельных цифр: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9.

33
00:02:38,560 --> 00:02:45,220
Ритм счета начинается с прохождения всех 10 этих цифр.

34
00:02:45,220 --> 00:02:52,320
Затем, когда новые цифры закончатся, вы выражаете следующее число 10 двумя цифрами 1 и 0.

35
00:02:52,320 --> 00:02:55,026
Вы говорите, что 1 находится в разряде десятков,

36
00:02:55,026 --> 00:02:58,286
поскольку оно предназначено для инкапсуляции группы из 10,

37
00:02:58,286 --> 00:03:02,540
до которой вы уже посчитали, при этом освобождая место единиц для сброса в 0.

38
00:03:02,540 --> 00:03:08,656
Ритм счета повторяется такой: счет до 9, переход на разряд десятков,

39
00:03:08,656 --> 00:03:13,000
счет еще на 9, переход на разряд десятков и т. д.

40
00:03:13,000 --> 00:03:20,374
Что ж, повторив этот процесс 9 раз, вы переходите к разряду сотен, цифре,

41
00:03:20,374 --> 00:03:25,655
которая отслеживает, сколько групп по 100 вы попали,

42
00:03:25,655 --> 00:03:30,040
освобождая две другие цифры для сброса до 0.

43
00:03:30,040 --> 00:03:34,060
Таким образом, ритм счета является своего рода самоподобным.

44
00:03:34,060 --> 00:03:40,736
Даже если вы увеличите масштаб, процесс будет выглядеть как что-то сделать,

45
00:03:40,736 --> 00:03:46,797
перевернуться, сделать то же самое, перевернуться и повторить 9 раз,

46
00:03:46,797 --> 00:03:49,960
прежде чем перевернуться еще больше.

47
00:03:49,960 --> 00:03:55,158
В двоичном формате, также известном как основание 2, вы ограничиваетесь двумя цифрами,

48
00:03:55,158 --> 00:03:59,700
0 и 1, обычно называемыми битами, что является сокращением от двоичных цифр.

49
00:03:59,700 --> 00:04:03,960
В результате, когда вы считаете, вам приходится все время переворачиваться.

50
00:04:03,960 --> 00:04:06,801
После подсчета 0, 1 у вас уже закончились биты,

51
00:04:06,801 --> 00:04:11,122
поэтому вам нужно перевернуться на двойку, записать 1-0 и сопротивляться

52
00:04:11,122 --> 00:04:16,449
всякому побуждению в вашем натренированном десятичной системе мозгу прочитать это как 10,

53
00:04:16,449 --> 00:04:20,120
и вместо этого поймите, что это означает 1 группу из 2 плюс 0.

54
00:04:20,120 --> 00:04:23,845
Затем увеличьте число до 1-1, что соответствует 3,

55
00:04:23,845 --> 00:04:29,836
и вам уже придется перевернуть его снова, а поскольку на месте этих двух стоит 1,

56
00:04:29,836 --> 00:04:35,462
это тоже должно перевернуться, что дает вам 1-0-0, что представляет собой 1.

57
00:04:35,462 --> 00:04:37,800
группа 4 плюс 0 группа 2 плюс 0.

58
00:04:37,800 --> 00:04:43,068
Точно так же, как цифры в десятичной системе представляют степени 10,

59
00:04:43,068 --> 00:04:46,380
биты в базе 2 представляют разные степени 2.

60
00:04:46,380 --> 00:04:50,619
Поэтому вместо того, чтобы говорить о 10-м месте, 100-м месте,

61
00:04:50,619 --> 00:04:55,800
1000-м месте и тому подобном, вы говорите о 2-м месте, 4-м месте и 8-м месте.

62
00:04:55,800 --> 00:05:01,080
Ритм счета теперь намного быстрее, но это делает его чуть ли не более заметным.

63
00:05:01,080 --> 00:05:02,940
Переверните последний, переверните один раз.

64
00:05:02,940 --> 00:05:04,680
Переверните последний, переверните дважды.

65
00:05:04,680 --> 00:05:06,380
Переверните последний, переверните один раз.

66
00:05:06,380 --> 00:05:09,100
Переверните последний, переверните три раза.

67
00:05:09,100 --> 00:05:13,980
Опять же, в этом шаблоне есть определенное самоподобие.

68
00:05:13,980 --> 00:05:18,756
На каждом масштабе процесс заключается в том, чтобы что-то сделать,

69
00:05:18,756 --> 00:05:22,480
перевернуться, а затем повторить то же самое еще раз.

70
00:05:22,480 --> 00:05:27,418
В мелком масштабе, скажем, при счете до 3, что в двоичном формате равно 1:1,

71
00:05:27,418 --> 00:05:31,139
это означает переворот последнего бита, переход к двойке,

72
00:05:31,139 --> 00:05:33,320
а затем переворот последнего бита.

73
00:05:33,320 --> 00:05:37,715
В более крупном масштабе, например, при счете до 15, то есть 1-1-1-1,

74
00:05:37,715 --> 00:05:42,173
процесс состоит в том, чтобы позволить последним 3 битам считать до 7,

75
00:05:42,173 --> 00:05:47,260
перевернуться на 8-е место, а затем позволить последним 3 битам подсчитать снова.

76
00:05:47,260 --> 00:05:51,692
Считая до 255, то есть 8 последовательных единиц, это похоже на то,

77
00:05:51,692 --> 00:05:56,321
что последние 7 бит подсчитываются до тех пор, пока они не заполнятся,

78
00:05:56,321 --> 00:06:01,080
с переходом на место 128, а затем снова подсчитываются последним 7 битам.

79
00:06:01,080 --> 00:06:06,376
Итак, после этого мини-представления, Кит показал мне удивительный факт:

80
00:06:06,376 --> 00:06:10,440
мы можем использовать этот ритм для решения башен Ханоя.

81
00:06:10,440 --> 00:06:12,720
Вы начинаете счет с 0.

82
00:06:12,720 --> 00:06:18,612
Всякий раз, когда вы меняете только этот последний бит с 0 на 1,

83
00:06:18,612 --> 00:06:22,420
переместите диск 0 на один колышек вправо.

84
00:06:22,420 --> 00:06:29,200
Если он уже был на самой правой привязке, вы просто возвращаете его к первой привязке.

85
00:06:29,200 --> 00:06:32,926
Если вы перевернетесь один раз на место двойки,

86
00:06:32,926 --> 00:06:37,740
то есть перевернете последние два бита, вы переместите диск 1.

87
00:06:37,740 --> 00:06:39,740
Куда его переместить, спросите вы?

88
00:06:39,740 --> 00:06:43,986
У вас нет выбора, вы не можете поместить его поверх диска 0, и есть только одна привязка,

89
00:06:43,986 --> 00:06:47,100
поэтому вы перемещаете его туда, где вы вынуждены его переместить.

90
00:06:47,100 --> 00:06:50,966
После этого, считая до 1-1, нужно просто перевернуть последний бит,

91
00:06:50,966 --> 00:06:52,900
чтобы вы снова переместили диск 0.

92
00:06:52,900 --> 00:06:56,885
Затем, когда ваш двоичный счет дважды перевернется на место четверки,

93
00:06:56,885 --> 00:07:01,440
переместите диск 2, и последовательность действий продолжится следующим образом.

94
00:07:01,440 --> 00:07:03,460
Переверните последний, переместите диск 0.

95
00:07:03,460 --> 00:07:05,900
Переверните последние два, переместите диск 1.

96
00:07:05,900 --> 00:07:08,080
Переверните последний, переместите диск 0.

97
00:07:08,080 --> 00:07:11,717
И здесь нам придется три раза перевернуться на восьмерку,

98
00:07:11,717 --> 00:07:14,100
что соответствует перемещению диска 3.

99
00:07:14,100 --> 00:07:17,421
В этом есть что-то волшебное, например, когда я впервые увидел это,

100
00:07:17,421 --> 00:07:19,180
я подумал: «Это не может сработать».

101
00:07:19,180 --> 00:07:23,043
Я не знаю, как это работает, я не знаю, почему это работает, теперь я знаю,

102
00:07:23,043 --> 00:07:27,516
но это просто волшебно, когда вы это видите, и я помню, как собирал для этого анимацию,

103
00:07:27,516 --> 00:07:31,888
когда преподавал это, и просто типа: вы знаете, я знаю, как это работает, я знаю все,

104
00:07:31,888 --> 00:07:36,260
что в этом есть, все равно весело просто сидеть и просто смотреть, как это происходит.

105
00:07:36,260 --> 00:07:37,260
Ах, да.

106
00:07:37,260 --> 00:07:41,800
Я имею в виду, что поначалу даже неясно, всегда ли это приведет к законным действиям.

107
00:07:41,800 --> 00:07:46,797
Например, откуда вы знаете, что каждый раз, когда вы перекатываетесь на цифру 8,

108
00:07:46,797 --> 00:07:49,820
диск 3 обязательно освобождается для перемещения?

109
00:07:49,820 --> 00:07:54,815
В то же время решение сразу же вызывает такие вопросы, как: откуда это взялось,

110
00:07:54,815 --> 00:07:58,374
почему это работает и есть ли лучший способ сделать это,

111
00:07:58,374 --> 00:08:00,560
чем выполнять 2 из n минус 1 шагов?

112
00:08:00,560 --> 00:08:04,257
Оказывается, это не только решает проблему «Ханойские башни»,

113
00:08:04,257 --> 00:08:07,180
но и делает это максимально эффективным способом.

114
00:08:07,180 --> 00:08:10,434
Понимание того, почему это работает, как это работает и что, черт возьми,

115
00:08:10,434 --> 00:08:13,117
происходит, сводится к определенному взгляду на головоломку,

116
00:08:13,117 --> 00:08:16,900
который специалисты по компьютерной технике могли бы назвать рекурсивной перспективой.

117
00:08:16,900 --> 00:08:21,042
Диск 3 думает: «ОК, 2, 1 и 0», как будто тебе придется от меня оторваться,

118
00:08:21,042 --> 00:08:25,020
как будто я не могу функционировать под таким большим весом и давлением.

119
00:08:25,020 --> 00:08:29,351
Итак, с точки зрения диска 3, если вы хотите выяснить, как диск 3 сюда попадет,

120
00:08:29,351 --> 00:08:33,900
каким-то образом, мне все равно, как, диски 2, 1 и 0 должны добраться до шпинделя B.

121
00:08:33,900 --> 00:08:36,020
Только так он может двигаться.

122
00:08:36,020 --> 00:08:38,060
Если какой-либо из этих дисков находится поверх третьего, он не может двигаться.

123
00:08:38,060 --> 00:08:41,000
Если какой-либо из них находится в шпинделе C, он не может туда переместиться.

124
00:08:41,000 --> 00:08:43,980
Итак, каким-то образом нам нужно получить скидку 2, 1 и 0.

125
00:08:43,980 --> 00:08:48,180
Сделав это, мы сможем переместить туда диск 3.

126
00:08:48,180 --> 00:08:50,020
И тут диск 3 говорит: я готов.

127
00:08:50,020 --> 00:08:51,940
Тебе больше никогда не придется меня перемещать.

128
00:08:51,940 --> 00:08:54,340
Остальные просто думают, как сюда добраться.

129
00:08:54,340 --> 00:08:57,540
И в каком-то смысле теперь у вас есть уменьшенная версия той же проблемы.

130
00:08:57,540 --> 00:09:01,981
Теперь у вас есть диски 0, 1 и 2, находящиеся на шпинделе B, вам нужно перенести их в C.

131
00:09:01,981 --> 00:09:05,653
Идея состоит в том, что если я просто сосредоточусь на одном диске и подумаю о том,

132
00:09:05,653 --> 00:09:07,838
что мне нужно сделать, чтобы этот диск заработал,

133
00:09:07,838 --> 00:09:10,680
я смогу превратить свою большую проблему в нечто немного меньшее.

134
00:09:10,680 --> 00:09:12,020
И как мне тогда это решить?

135
00:09:12,020 --> 00:09:13,600
Ну, это точно то же самое.

136
00:09:13,600 --> 00:09:17,160
Если диск 2 скажет: диск 1 и диск 0, то это не ты, это я.

137
00:09:17,160 --> 00:09:18,160
Мне просто нужно немного места.

138
00:09:18,160 --> 00:09:19,160
Отправиться.

139
00:09:19,160 --> 00:09:20,520
Им нужно куда-то переехать.

140
00:09:20,520 --> 00:09:23,040
Тогда диск 2 сможет переместиться туда, куда ему нужно.

141
00:09:23,040 --> 00:09:25,120
Тогда диски 1 и 0 смогут это сделать.

142
00:09:25,120 --> 00:09:31,040
Но интересно то, что каждый диск имеет практически одинаковую стратегию.

143
00:09:31,040 --> 00:09:33,220
Они все говорят: все, кто выше меня, уходите.

144
00:09:33,220 --> 00:09:34,220
Тогда я собираюсь переехать.

145
00:09:34,220 --> 00:09:36,560
Хорошо, все возвращаются.

146
00:09:36,560 --> 00:09:41,924
Когда вы поймете это понимание, вы сможете написать что-то, что решит ханойские башни,

147
00:09:41,924 --> 00:09:45,130
например, пять или шесть строк кода, что, вероятно,

148
00:09:45,130 --> 00:09:50,680
имеет самое высокое соотношение интеллектуальных инвестиций к строкам кода за всю историю.

149
00:09:50,680 --> 00:09:53,773
И если немного подумать, становится ясно, что

150
00:09:53,773 --> 00:09:56,800
это должно быть наиболее эффективное решение.

151
00:09:56,800 --> 00:10:00,060
На каждом шагу вы делаете только то, что вам навязывают.

152
00:10:00,060 --> 00:10:04,440
Вам необходимо отключить диски с 0 по 2, прежде чем вы сможете переместить диск 3.

153
00:10:04,440 --> 00:10:06,520
И вам нужно переместить диск 3.

154
00:10:06,520 --> 00:10:09,760
И тогда вам придется переместить на него диски с 0 по 2.

155
00:10:09,760 --> 00:10:15,400
С этой точки зрения просто нет места неэффективности.

156
00:10:15,400 --> 00:10:18,920
Так почему же двоичный подсчет фиксирует этот алгоритм?

157
00:10:18,920 --> 00:10:23,228
Что здесь происходит, так это то, что этот шаблон решения подзадачи,

158
00:10:23,228 --> 00:10:28,661
перемещения большого диска и последующего решения подзадачи снова прекрасно параллелен

159
00:10:28,661 --> 00:10:30,160
шаблону двоичного счета.

160
00:10:30,160 --> 00:10:35,360
Подсчитайте какую-то сумму, переверните, снова досчитайте до этой же суммы.

161
00:10:35,360 --> 00:10:38,962
И этот алгоритм ханойских башен, и двоичный счет являются самоподобными

162
00:10:38,962 --> 00:10:42,365
процессами в том смысле, что если вы уменьшите масштаб и посчитаете

163
00:10:42,365 --> 00:10:46,268
до большей степени 2 или решите ханойские башни с большим количеством дисков,

164
00:10:46,268 --> 00:10:48,920
они оба все равно будут иметь одну и ту же структуру.

165
00:10:48,920 --> 00:10:52,700
Подзадача, сделай что-нибудь, подзадача.

166
00:10:52,700 --> 00:10:57,630
Например, в довольно маленьком масштабе решение ханойских башен для двух дисков,

167
00:10:57,630 --> 00:11:01,283
переместить диск 0, переместить диск 1, переместить диск 0,

168
00:11:01,283 --> 00:11:03,840
отражается счетом до 3 в двоичном формате.

169
00:11:03,840 --> 00:11:07,560
Переверните последний бит, переверните один раз, переверните последний бит.

170
00:11:07,560 --> 00:11:11,793
В несколько большем масштабе решение ханойских башен для трех дисков выглядит так же,

171
00:11:11,793 --> 00:11:16,126
как если бы вы сделали все возможное, чтобы решить два диска, передвинули диск номер 2,

172
00:11:16,126 --> 00:11:19,080
а затем сделали все возможное, чтобы снова решить два диска.

173
00:11:19,080 --> 00:11:23,945
Аналогично, двоичный счет до 111 включает в себя счет до 3,

174
00:11:23,945 --> 00:11:28,000
прокрутку всех трех битов и затем досчет еще трех.

175
00:11:28,000 --> 00:11:32,100
На всех уровнях оба процесса имеют одинаковую структуру.

176
00:11:32,100 --> 00:11:35,400
Итак, в каком-то смысле причина, по которой это двоичное решение работает, или,

177
00:11:35,400 --> 00:11:38,659
по крайней мере, объяснение, я чувствую, что не существует единого объяснения,

178
00:11:38,659 --> 00:11:41,258
но я думаю, что наиболее естественным является то, что шаблон,

179
00:11:41,258 --> 00:11:43,815
который вы бы использовали для генерации этих двоичных чисел,

180
00:11:43,815 --> 00:11:45,837
имеет точно такой же структура похожа на шаблон,

181
00:11:45,837 --> 00:11:48,188
который вы бы использовали для ханойских башен, поэтому,

182
00:11:48,188 --> 00:11:51,860
если вы посмотрите на переворачивание битов, вы фактически обращаете этот процесс вспять.

183
00:11:51,860 --> 00:11:54,200
Вы говорите, какой процесс их породил?

184
00:11:54,200 --> 00:11:58,799
Например, если бы я пытался понять, как эти биты были перевернуты,

185
00:11:58,799 --> 00:12:03,672
чтобы дать мне эту штуку, вы фактически обращали бы вспять рекурсивный

186
00:12:03,672 --> 00:12:07,860
алгоритм для ханойских башен, и именно поэтому это сработало.

187
00:12:07,860 --> 00:12:09,620
Это довольно круто, правда?

188
00:12:09,620 --> 00:12:10,940
Но на самом деле становится прохладнее.

189
00:12:10,940 --> 00:12:14,460
Я даже не понял, как это связано с треугольником Серпинского.

190
00:12:14,460 --> 00:12:19,140
Именно это я и собираюсь сделать в следующем видео, часть 2.

191
00:12:19,140 --> 00:12:22,620
Большое спасибо всем, кто поддерживает эти видео на Patreon.

192
00:12:22,620 --> 00:12:27,746
Я только что закончил первую главу «Сущности исчисления» и сейчас работаю над второй,

193
00:12:27,746 --> 00:12:31,203
и сторонники Patreon получают ранний доступ к этим видео,

194
00:12:31,203 --> 00:12:34,780
прежде чем я опубликую полную серию через несколько месяцев.

195
00:12:34,780 --> 00:12:37,810
Это и следующее видео также частично поддерживаются Desmos,

196
00:12:37,810 --> 00:12:41,901
и перед следующим видео я просто хочу воспользоваться моментом и рассказать вам,

197
00:12:41,901 --> 00:12:44,780
ребята, немного о том, кто они и о том, что они нанимают.

198
00:12:44,780 --> 00:12:47,020
Так что Десмос на самом деле очень крутой.

199
00:12:47,020 --> 00:12:49,241
Они создают множество интерактивных математических

200
00:12:49,241 --> 00:12:51,680
занятий для классных комнат и инструментов для учителей.

201
00:12:51,680 --> 00:12:56,060
Настоящая суть их предложений – это занятия в классе.

202
00:12:56,060 --> 00:12:59,095
Я, со своей стороны, очень впечатлен тем, насколько

203
00:12:59,095 --> 00:13:02,540
хорошо продуманы эти занятия с педагогической точки зрения.

204
00:13:02,540 --> 00:13:08,180
Команда четко знает свое дело и знает, как изменить жизнь учеников и учителей.

205
00:13:08,180 --> 00:13:10,140
И, как я уже сказал, они нанимают сотрудников.

206
00:13:10,140 --> 00:13:14,985
Они всегда стремятся привлечь больше хороших талантов, будь то инженеры, дизайнеры,

207
00:13:14,985 --> 00:13:19,600
учителя или любые другие навыки, соответствующие тому, чем они хотят заниматься.

208
00:13:19,600 --> 00:13:22,369
Если кто-то из вас заинтересован присоединиться к ним и помочь им создать

209
00:13:22,369 --> 00:13:24,988
некоторые из этих замечательных инструментов для учителей и учеников,

210
00:13:24,988 --> 00:13:27,720
вы можете посетить страницу вакансий, ссылку на которую я дал в описании.

211
00:13:27,720 --> 00:13:30,480
Лично я думаю, что они делают действительно значимые вещи.

212
00:13:30,480 --> 00:13:33,736
Я думаю, что их деятельность формирует у учащихся по-настоящему хорошую

213
00:13:33,736 --> 00:13:37,625
математическую интуицию, и миру могло бы пригодиться еще несколько талантливых людей,

214
00:13:37,625 --> 00:13:40,520
направляющих свои усилия на образование так, как они это делают.

215
00:13:40,520 --> 00:13:42,720
Хорошо, на этом увидимся в следующем видео, и я думаю,

216
00:13:42,720 --> 00:13:44,640
вам действительно понравится то, что происходит.

