1
00:00:04,200 --> 00:00:08,496
Сегодня я хочу поделиться с вами изящным способом решения головоломки Ханойские башни, 

2
00:00:08,496 --> 00:00:10,620
просто посчитав в другой системе счисления.

3
00:00:11,220 --> 00:00:15,640
И что удивительно, все это связано с поиском кривой, заполняющей треугольник Серпинского.

4
00:00:16,720 --> 00:00:19,285
Я узнал об этом от моего бывшего преподавателя информатики, 

5
00:00:19,285 --> 00:00:21,851
его зовут Кит Шварц, и я должен сказать, что этот человек — 

6
00:00:21,851 --> 00:00:24,460
один из лучших преподавателей, которых я когда-либо встречал.

7
00:00:25,140 --> 00:00:28,115
На самом деле я записал часть разговора, в котором он показывал мне эти вещи, 

8
00:00:28,115 --> 00:00:30,900
чтобы вы, ребята, могли напрямую услышать кое-что из того, что он описал.

9
00:00:38,420 --> 00:00:42,221
Если вы не знакомы, давайте просто объясним, что на самом 

10
00:00:42,221 --> 00:00:45,760
деле представляет собой головоломка «Ханойские башни».

11
00:00:45,760 --> 00:00:50,922
Вы думаете, что эти диски имеют отверстие посередине, 

12
00:00:50,922 --> 00:00:54,460
чтобы их можно было надеть на крючок.

13
00:00:54,460 --> 00:00:58,514
Изображенная здесь установка имеет пять дисков, которые я обозначим 0, 1, 

14
00:00:58,514 --> 00:01:02,460
2, 3, 4, но в принципе вы можете иметь столько дисков, сколько захотите.

15
00:01:02,580 --> 00:01:06,575
Например, ваш первый ход должен включать в себя перемещение диска 0, 

16
00:01:06,575 --> 00:01:10,744
поскольку на любом другом диске есть что-то, что нужно убрать с дороги, 

17
00:01:10,744 --> 00:01:12,540
прежде чем он сможет двигаться.

18
00:01:12,540 --> 00:01:16,087
После этого вы можете переместить диск 1, но он должен идти на любую привязку, 

19
00:01:16,087 --> 00:01:19,186
на которой в данный момент нет диска 0, поскольку в противном случае 

20
00:01:19,186 --> 00:01:22,060
вы бы поместили диск большего размера на меньший, что запрещено.

21
00:01:23,720 --> 00:01:27,518
Если вы никогда не видели этого раньше, я настоятельно рекомендую вам сделать паузу, 

22
00:01:27,518 --> 00:01:30,780
вытащить несколько книг разного размера и попробовать это самостоятельно.

23
00:01:30,780 --> 00:01:36,615
Теперь Кит показал мне кое-что действительно удивительное в этой головоломке: 

24
00:01:36,615 --> 00:01:41,553
ее можно решить, просто посчитав в двоичном формате и связав ритм 

25
00:01:41,553 --> 00:01:45,220
этого счета с определенным ритмом движений диска.

26
00:01:45,220 --> 00:01:50,880
Для тех, кто не знаком с двоичным кодом, я сначала сделаю здесь краткий обзор.

27
00:01:50,880 --> 00:01:52,868
На самом деле, даже если вы знакомы с двоичными числами, 

28
00:01:52,868 --> 00:01:54,962
я хочу объяснить это, сосредоточив внимание на ритме счета, 

29
00:01:54,962 --> 00:01:57,440
о котором вы, возможно, задумывались, а могли и не задумываться раньше.

30
00:01:57,440 --> 00:02:01,410
Любое описание двоичного кода обычно начинается с самоанализа нашего 

31
00:02:01,410 --> 00:02:05,956
обычного способа представления чисел, который мы называем десятичной системой, 

32
00:02:05,956 --> 00:02:10,100
поскольку мы используем 10 отдельных цифр: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9.

33
00:02:10,100 --> 00:02:14,820
Ритм счета начинается с прохождения всех 10 этих цифр.

34
00:02:14,820 --> 00:02:20,580
Затем, когда новые цифры закончатся, вы выражаете следующее число 10 двумя цифрами 1 и 0.

35
00:02:20,580 --> 00:02:22,958
Вы говорите, что 1 находится в разряде десятков, 

36
00:02:22,958 --> 00:02:25,822
поскольку оно предназначено для инкапсуляции группы из 10, 

37
00:02:25,822 --> 00:02:29,560
до которой вы уже посчитали, при этом освобождая место единиц для сброса в 0.

38
00:02:29,560 --> 00:02:35,220
Ритм счета повторяется такой: счет до 9, переход на разряд десятков, 

39
00:02:35,220 --> 00:02:39,240
счет еще на 9, переход на разряд десятков и т. д.

40
00:02:39,240 --> 00:02:45,990
Что ж, повторив этот процесс 9 раз, вы переходите к разряду сотен, цифре, 

41
00:02:45,990 --> 00:02:50,825
которая отслеживает, сколько групп по 100 вы попали, 

42
00:02:50,825 --> 00:02:54,840
освобождая две другие цифры для сброса до 0.

43
00:02:54,840 --> 00:02:57,320
Таким образом, ритм счета является своего рода самоподобным.

44
00:02:57,320 --> 00:03:02,131
Даже если вы увеличите масштаб, процесс будет выглядеть как что-то сделать, 

45
00:03:02,131 --> 00:03:06,500
перевернуться, сделать то же самое, перевернуться и повторить 9 раз, 

46
00:03:06,500 --> 00:03:08,780
прежде чем перевернуться еще больше.

47
00:03:08,780 --> 00:03:14,757
В двоичном формате, также известном как основание 2, вы ограничиваетесь двумя цифрами, 

48
00:03:14,757 --> 00:03:19,980
0 и 1, обычно называемыми битами, что является сокращением от двоичных цифр.

49
00:03:19,980 --> 00:03:25,160
В результате, когда вы считаете, вам приходится все время переворачиваться.

50
00:03:25,160 --> 00:03:28,405
После подсчета 0, 1 у вас уже закончились биты, 

51
00:03:28,405 --> 00:03:33,341
поэтому вам нужно перевернуться на двойку, записать 1-0 и сопротивляться 

52
00:03:33,341 --> 00:03:39,427
всякому побуждению в вашем натренированном десятичной системе мозгу прочитать это как 10, 

53
00:03:39,427 --> 00:03:43,620
и вместо этого поймите, что это означает 1 группу из 2 плюс 0.

54
00:03:43,620 --> 00:03:48,231
Затем увеличьте число до 1-1, что соответствует 3, 

55
00:03:48,231 --> 00:03:55,644
и вам уже придется перевернуть его снова, а поскольку на месте этих двух стоит 1, 

56
00:03:55,644 --> 00:04:02,606
это тоже должно перевернуться, что дает вам 1-0-0, что представляет собой 1. 

57
00:04:02,606 --> 00:04:05,500
группа 4 плюс 0 группа 2 плюс 0.

58
00:04:05,500 --> 00:04:08,631
Точно так же, как цифры в десятичной системе представляют степени 10, 

59
00:04:08,631 --> 00:04:10,600
биты в базе 2 представляют разные степени 2.

60
00:04:10,600 --> 00:04:15,154
Поэтому вместо того, чтобы говорить о 10-м месте, 100-м месте, 

61
00:04:15,154 --> 00:04:20,720
1000-м месте и тому подобном, вы говорите о 2-м месте, 4-м месте и 8-м месте.

62
00:04:20,720 --> 00:04:27,660
Ритм счета теперь намного быстрее, но это делает его чуть ли не более заметным.

63
00:04:27,660 --> 00:04:28,020
Переверните последний, переверните один раз.

64
00:04:28,420 --> 00:04:28,940
Переверните последний, переверните дважды.

65
00:04:28,940 --> 00:04:32,220
Переверните последний, переверните один раз.

66
00:04:32,220 --> 00:04:33,340
Переверните последний, переверните три раза.

67
00:04:33,340 --> 00:04:39,100
Опять же, в этом шаблоне есть определенное самоподобие.

68
00:04:39,100 --> 00:04:42,449
На каждом масштабе процесс заключается в том, чтобы что-то сделать, 

69
00:04:42,449 --> 00:04:45,060
перевернуться, а затем повторить то же самое еще раз.

70
00:04:45,060 --> 00:04:50,199
В мелком масштабе, скажем, при счете до 3, что в двоичном формате равно 1:1, 

71
00:04:50,199 --> 00:04:54,070
это означает переворот последнего бита, переход к двойке, 

72
00:04:54,070 --> 00:04:56,340
а затем переворот последнего бита.

73
00:04:56,340 --> 00:05:02,949
В более крупном масштабе, например, при счете до 15, то есть 1-1-1-1, 

74
00:05:02,949 --> 00:05:09,652
процесс состоит в том, чтобы позволить последним 3 битам считать до 7, 

75
00:05:09,652 --> 00:05:17,300
перевернуться на 8-е место, а затем позволить последним 3 битам подсчитать снова.

76
00:05:17,300 --> 00:05:22,893
Считая до 255, то есть 8 последовательных единиц, это похоже на то, 

77
00:05:22,893 --> 00:05:28,734
что последние 7 бит подсчитываются до тех пор, пока они не заполнятся, 

78
00:05:28,734 --> 00:05:34,740
с переходом на место 128, а затем снова подсчитываются последним 7 битам.

79
00:05:34,740 --> 00:05:40,432
Итак, после этого мини-представления, Кит показал мне удивительный факт: 

80
00:05:40,432 --> 00:05:44,800
мы можем использовать этот ритм для решения башен Ханоя.

81
00:05:44,800 --> 00:05:48,540
Вы начинаете счет с 0.

82
00:05:49,140 --> 00:05:52,007
Всякий раз, когда вы меняете только этот последний бит с 0 на 1, 

83
00:05:52,007 --> 00:05:53,860
переместите диск 0 на один колышек вправо.

84
00:05:53,860 --> 00:05:58,760
Если он уже был на самой правой привязке, вы просто возвращаете его к первой привязке.

85
00:05:58,760 --> 00:06:02,303
Если вы перевернетесь один раз на место двойки, 

86
00:06:02,303 --> 00:06:06,880
то есть перевернете последние два бита, вы переместите диск 1.

87
00:06:06,880 --> 00:06:08,420
Куда его переместить, спросите вы?

88
00:06:08,420 --> 00:06:14,166
У вас нет выбора, вы не можете поместить его поверх диска 0, и есть только одна привязка, 

89
00:06:14,166 --> 00:06:18,380
поэтому вы перемещаете его туда, где вы вынуждены его переместить.

90
00:06:18,380 --> 00:06:23,473
После этого, считая до 1-1, нужно просто перевернуть последний бит, 

91
00:06:23,473 --> 00:06:26,020
чтобы вы снова переместили диск 0.

92
00:06:28,800 --> 00:06:31,460
Затем, когда ваш двоичный счет дважды перевернется на место четверки, 

93
00:06:31,460 --> 00:06:34,500
переместите диск 2, и последовательность действий продолжится следующим образом.

94
00:06:34,500 --> 00:06:36,300
Переверните последний, переместите диск 0.

95
00:06:36,300 --> 00:06:37,900
Переверните последние два, переместите диск 1.

96
00:06:37,900 --> 00:06:38,340
Переверните последний, переместите диск 0.

97
00:06:38,380 --> 00:06:41,098
И здесь нам придется три раза перевернуться на восьмерку, 

98
00:06:41,098 --> 00:06:42,880
что соответствует перемещению диска 3.

99
00:06:42,880 --> 00:06:46,018
В этом есть что-то волшебное, например, когда я впервые увидел это, 

100
00:06:46,018 --> 00:06:47,680
я подумал: «Это не может сработать».

101
00:06:47,680 --> 00:06:52,470
Я не знаю, как это работает, я не знаю, почему это работает, теперь я знаю, 

102
00:06:52,470 --> 00:06:58,017
но это просто волшебно, когда вы это видите, и я помню, как собирал для этого анимацию, 

103
00:06:58,017 --> 00:07:03,438
когда преподавал это, и просто типа: вы знаете, я знаю, как это работает, я знаю все, 

104
00:07:03,438 --> 00:07:08,860
что в этом есть, все равно весело просто сидеть и просто смотреть, как это происходит.

105
00:07:08,860 --> 00:07:08,860
Ах, да.

106
00:07:08,860 --> 00:07:11,880
Я имею в виду, что поначалу даже неясно, всегда ли это приведет к законным действиям.

107
00:07:11,880 --> 00:07:16,752
Например, откуда вы знаете, что каждый раз, когда вы перекатываетесь на цифру 8, 

108
00:07:16,752 --> 00:07:19,700
диск 3 обязательно освобождается для перемещения?

109
00:07:19,700 --> 00:07:24,937
В то же время решение сразу же вызывает такие вопросы, как: откуда это взялось, 

110
00:07:24,937 --> 00:07:28,668
почему это работает и есть ли лучший способ сделать это, 

111
00:07:28,668 --> 00:07:30,960
чем выполнять 2 из n минус 1 шагов?

112
00:07:30,960 --> 00:07:34,936
Оказывается, это не только решает проблему «Ханойские башни», 

113
00:07:34,936 --> 00:07:38,080
но и делает это максимально эффективным способом.

114
00:07:38,080 --> 00:07:40,644
Понимание того, почему это работает, как это работает и что, черт возьми, 

115
00:07:40,644 --> 00:07:42,759
происходит, сводится к определенному взгляду на головоломку, 

116
00:07:42,759 --> 00:07:45,740
который специалисты по компьютерной технике могли бы назвать рекурсивной перспективой.

117
00:07:45,740 --> 00:07:49,872
Диск 3 думает: «ОК, 2, 1 и 0», как будто тебе придется от меня оторваться, 

118
00:07:49,872 --> 00:07:53,840
как будто я не могу функционировать под таким большим весом и давлением.

119
00:07:53,840 --> 00:07:58,776
Итак, с точки зрения диска 3, если вы хотите выяснить, как диск 3 сюда попадет, 

120
00:07:58,776 --> 00:08:03,960
каким-то образом, мне все равно, как, диски 2, 1 и 0 должны добраться до шпинделя B.

121
00:08:03,960 --> 00:08:05,960
Только так он может двигаться.

122
00:08:06,700 --> 00:08:08,720
Если какой-либо из этих дисков находится поверх третьего, он не может двигаться.

123
00:08:08,720 --> 00:08:12,080
Если какой-либо из них находится в шпинделе C, он не может туда переместиться.

124
00:08:12,080 --> 00:08:13,760
Итак, каким-то образом нам нужно получить скидку 2, 1 и 0.

125
00:08:13,760 --> 00:08:17,100
Сделав это, мы сможем переместить туда диск 3.

126
00:08:17,100 --> 00:08:18,380
И тут диск 3 говорит: я готов.

127
00:08:18,580 --> 00:08:21,340
Тебе больше никогда не придется меня перемещать.

128
00:08:21,340 --> 00:08:23,060
Остальные просто думают, как сюда добраться.

129
00:08:23,060 --> 00:08:27,580
И в каком-то смысле теперь у вас есть уменьшенная версия той же проблемы.

130
00:08:27,580 --> 00:08:30,660
Теперь у вас есть диски 0, 1 и 2, находящиеся на шпинделе B, вам нужно перенести их в C.

131
00:08:30,660 --> 00:08:34,670
Идея состоит в том, что если я просто сосредоточусь на одном диске и подумаю о том, 

132
00:08:34,670 --> 00:08:37,056
что мне нужно сделать, чтобы этот диск заработал, 

133
00:08:37,056 --> 00:08:40,159
я смогу превратить свою большую проблему в нечто немного меньшее.

134
00:08:40,159 --> 00:08:42,240
И как мне тогда это решить?

135
00:08:42,260 --> 00:08:45,120
Ну, это точно то же самое.

136
00:08:45,120 --> 00:08:50,020
Если диск 2 скажет: диск 1 и диск 0, то это не ты, это я.

137
00:08:50,020 --> 00:08:50,020
Мне просто нужно немного места.

138
00:08:50,020 --> 00:08:50,020
Отправиться.

139
00:08:50,020 --> 00:08:52,260
Им нужно куда-то переехать.

140
00:08:52,260 --> 00:08:53,380
Тогда диск 2 сможет переместиться туда, куда ему нужно.

141
00:08:53,980 --> 00:08:55,100
Тогда диски 1 и 0 смогут это сделать.

142
00:08:55,100 --> 00:08:59,460
Но интересно то, что каждый диск имеет практически одинаковую стратегию.

143
00:08:59,460 --> 00:09:00,980
Они все говорят: все, кто выше меня, уходите.

144
00:09:00,980 --> 00:09:03,240
Тогда я собираюсь переехать.

145
00:09:03,240 --> 00:09:04,900
Хорошо, все возвращаются.

146
00:09:04,900 --> 00:09:08,683
Когда вы поймете это понимание, вы сможете написать что-то, что решит ханойские башни, 

147
00:09:08,683 --> 00:09:10,945
например, пять или шесть строк кода, что, вероятно, 

148
00:09:10,945 --> 00:09:14,860
имеет самое высокое соотношение интеллектуальных инвестиций к строкам кода за всю историю.

149
00:09:14,860 --> 00:09:18,287
И если немного подумать, становится ясно, что 

150
00:09:18,287 --> 00:09:21,640
это должно быть наиболее эффективное решение.

151
00:09:21,640 --> 00:09:23,640
На каждом шагу вы делаете только то, что вам навязывают.

152
00:09:23,640 --> 00:09:27,460
Вам необходимо отключить диски с 0 по 2, прежде чем вы сможете переместить диск 3.

153
00:09:27,460 --> 00:09:27,760
И вам нужно переместить диск 3.

154
00:09:27,760 --> 00:09:30,940
И тогда вам придется переместить на него диски с 0 по 2.

155
00:09:31,020 --> 00:09:33,600
С этой точки зрения просто нет места неэффективности.

156
00:09:33,600 --> 00:09:35,340
Так почему же двоичный подсчет фиксирует этот алгоритм?

157
00:09:36,320 --> 00:09:40,038
Что здесь происходит, так это то, что этот шаблон решения подзадачи, 

158
00:09:40,038 --> 00:09:44,726
перемещения большого диска и последующего решения подзадачи снова прекрасно параллелен 

159
00:09:44,726 --> 00:09:46,020
шаблону двоичного счета.

160
00:09:46,020 --> 00:09:53,120
Подсчитайте какую-то сумму, переверните, снова досчитайте до этой же суммы.

161
00:09:53,120 --> 00:09:56,823
И этот алгоритм ханойских башен, и двоичный счет являются самоподобными 

162
00:09:56,823 --> 00:10:00,321
процессами в том смысле, что если вы уменьшите масштаб и посчитаете 

163
00:10:00,321 --> 00:10:04,333
до большей степени 2 или решите ханойские башни с большим количеством дисков, 

164
00:10:04,333 --> 00:10:07,060
они оба все равно будут иметь одну и ту же структуру.

165
00:10:07,060 --> 00:10:09,300
Подзадача, сделай что-нибудь, подзадача.

166
00:10:09,880 --> 00:10:14,722
Например, в довольно маленьком масштабе решение ханойских башен для двух дисков, 

167
00:10:14,722 --> 00:10:18,309
переместить диск 0, переместить диск 1, переместить диск 0, 

168
00:10:18,309 --> 00:10:20,820
отражается счетом до 3 в двоичном формате.

169
00:10:20,820 --> 00:10:23,420
Переверните последний бит, переверните один раз, переверните последний бит.

170
00:10:23,420 --> 00:10:27,786
В несколько большем масштабе решение ханойских башен для трех дисков выглядит так же, 

171
00:10:27,786 --> 00:10:32,253
как если бы вы сделали все возможное, чтобы решить два диска, передвинули диск номер 2, 

172
00:10:32,253 --> 00:10:35,300
а затем сделали все возможное, чтобы снова решить два диска.

173
00:10:35,300 --> 00:10:38,736
Аналогично, двоичный счет до 111 включает в себя счет до 3, 

174
00:10:38,736 --> 00:10:41,600
прокрутку всех трех битов и затем досчет еще трех.

175
00:10:41,600 --> 00:10:45,600
На всех уровнях оба процесса имеют одинаковую структуру.

176
00:10:45,600 --> 00:10:49,918
Итак, в каком-то смысле причина, по которой это двоичное решение работает, или, 

177
00:10:49,918 --> 00:10:54,184
по крайней мере, объяснение, я чувствую, что не существует единого объяснения, 

178
00:10:54,184 --> 00:10:57,585
но я думаю, что наиболее естественным является то, что шаблон, 

179
00:10:57,585 --> 00:11:00,932
который вы бы использовали для генерации этих двоичных чисел, 

180
00:11:00,932 --> 00:11:03,577
имеет точно такой же структура похожа на шаблон, 

181
00:11:03,577 --> 00:11:06,655
который вы бы использовали для ханойских башен, поэтому, 

182
00:11:06,655 --> 00:11:11,460
если вы посмотрите на переворачивание битов, вы фактически обращаете этот процесс вспять.

183
00:11:11,460 --> 00:11:12,820
Вы говорите, какой процесс их породил?

184
00:11:12,820 --> 00:11:16,375
Например, если бы я пытался понять, как эти биты были перевернуты, 

185
00:11:16,375 --> 00:11:20,143
чтобы дать мне эту штуку, вы фактически обращали бы вспять рекурсивный 

186
00:11:20,143 --> 00:11:23,380
алгоритм для ханойских башен, и именно поэтому это сработало.

187
00:11:24,120 --> 00:11:25,220
Это довольно круто, правда?

188
00:11:25,220 --> 00:11:28,360
Но на самом деле становится прохладнее.

189
00:11:28,360 --> 00:11:32,960
Я даже не понял, как это связано с треугольником Серпинского.

190
00:11:32,960 --> 00:11:36,060
Именно это я и собираюсь сделать в следующем видео, часть 2.

191
00:11:36,060 --> 00:11:38,320
Большое спасибо всем, кто поддерживает эти видео на Patreon.

192
00:11:38,320 --> 00:11:42,957
Я только что закончил первую главу «Сущности исчисления» и сейчас работаю над второй, 

193
00:11:42,957 --> 00:11:46,084
и сторонники Patreon получают ранний доступ к этим видео, 

194
00:11:46,084 --> 00:11:49,320
прежде чем я опубликую полную серию через несколько месяцев.

195
00:11:49,500 --> 00:11:53,293
Это и следующее видео также частично поддерживаются Desmos, 

196
00:11:53,293 --> 00:11:58,415
и перед следующим видео я просто хочу воспользоваться моментом и рассказать вам, 

197
00:11:58,415 --> 00:12:02,020
ребята, немного о том, кто они и о том, что они нанимают.

198
00:12:02,020 --> 00:12:03,200
Так что Десмос на самом деле очень крутой.

199
00:12:03,200 --> 00:12:06,517
Они создают множество интерактивных математических 

200
00:12:06,517 --> 00:12:10,160
занятий для классных комнат и инструментов для учителей.

201
00:12:10,160 --> 00:12:12,520
Настоящая суть их предложений – это занятия в классе.

202
00:12:12,520 --> 00:12:14,984
Я, со своей стороны, очень впечатлен тем, насколько 

203
00:12:14,984 --> 00:12:17,780
хорошо продуманы эти занятия с педагогической точки зрения.

204
00:12:18,820 --> 00:12:24,420
Команда четко знает свое дело и знает, как изменить жизнь учеников и учителей.

205
00:12:24,420 --> 00:12:25,680
И, как я уже сказал, они нанимают сотрудников.

206
00:12:25,680 --> 00:12:30,515
Они всегда стремятся привлечь больше хороших талантов, будь то инженеры, дизайнеры, 

207
00:12:30,515 --> 00:12:35,120
учителя или любые другие навыки, соответствующие тому, чем они хотят заниматься.

208
00:12:35,120 --> 00:12:38,809
Если кто-то из вас заинтересован присоединиться к ним и помочь им создать 

209
00:12:38,809 --> 00:12:42,300
некоторые из этих замечательных инструментов для учителей и учеников, 

210
00:12:42,300 --> 00:12:45,940
вы можете посетить страницу вакансий, ссылку на которую я дал в описании.

211
00:12:45,940 --> 00:12:47,740
Лично я думаю, что они делают действительно значимые вещи.

212
00:12:47,740 --> 00:12:51,904
Я думаю, что их деятельность формирует у учащихся по-настоящему хорошую 

213
00:12:51,904 --> 00:12:56,878
математическую интуицию, и миру могло бы пригодиться еще несколько талантливых людей, 

214
00:12:56,878 --> 00:13:00,580
направляющих свои усилия на образование так, как они это делают.

215
00:13:00,580 --> 00:13:31,294
Хорошо, на этом увидимся в следующем видео, и я думаю, 

216
00:13:31,294 --> 00:13:58,100
вам действительно понравится то, что происходит.

