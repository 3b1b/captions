1
00:00:00,000 --> 00:00:08,720
Hoy quiero compartir con ustedes una manera ingeniosa de resolver el rompecabezas

2
00:00:08,720 --> 00:00:11,240
de las Torres de Hanoi simplemente contando en un sistema numérico diferente.

3
00:00:11,240 --> 00:00:16,720
Y sorprendentemente, esto se relaciona con encontrar una curva que llene el triángulo de Sierpinski.

4
00:00:16,720 --> 00:00:20,920
Me enteré de esto por un ex profesor de informática, su nombre es Keith Schwartz,

5
00:00:20,920 --> 00:00:24,840
y debo decir que este hombre es uno de los mejores educadores que he conocido.

6
00:00:24,840 --> 00:00:28,560
De hecho, grabé un poco de la conversación en la que me mostró

7
00:00:28,560 --> 00:00:42,520
estas cosas, para que puedan escuchar algo de lo que describió directamente.

8
00:00:42,520 --> 00:00:46,840
En caso de que no esté familiarizado, expongamos qué

9
00:00:46,840 --> 00:00:54,440
es realmente el rompecabezas de las Torres de Hanoi.

10
00:00:54,440 --> 00:00:57,880
Piensas que estos discos tienen un agujero en

11
00:00:57,880 --> 00:00:59,260
el medio para poder colocarlos en una clavija.

12
00:00:59,260 --> 00:01:05,040
La configuración que se muestra aquí tiene cinco discos, que etiquetaré 0, 1,

13
00:01:05,040 --> 00:01:24,120
2, 3, 4, pero en principio, podría tener tantos discos como desee.

14
00:01:24,120 --> 00:01:29,440
Por ejemplo, su primer movimiento debe implicar mover el disco 0, ya que

15
00:01:29,440 --> 00:01:33,320
cualquier otro disco tiene cosas encima que deben apartarse antes de poder moverse.

16
00:01:33,320 --> 00:01:38,000
Después de eso, puede mover el disco 1, pero tiene que ir a cualquier

17
00:01:38,000 --> 00:01:44,040
clavija que actualmente no tenga el disco 0, ya que de lo contrario estaría

18
00:01:44,040 --> 00:01:45,040
colocando un disco más grande en uno más pequeño, lo cual no está permitido.

19
00:01:45,040 --> 00:01:49,600
Si nunca has visto esto antes, te recomiendo que hagas una pausa,

20
00:01:49,600 --> 00:02:00,320
saques algunos libros de diferentes tamaños y lo pruebes por ti mismo.

21
00:02:00,320 --> 00:02:04,760
Ahora Keith me mostró algo realmente sorprendente sobre este rompecabezas, y es

22
00:02:04,760 --> 00:02:10,200
que puedes resolverlo simplemente contando en binario y asociando el ritmo

23
00:02:10,200 --> 00:02:12,480
de ese conteo con un cierto ritmo de movimientos del disco.

24
00:02:12,480 --> 00:02:16,420
Para cualquiera que no esté familiarizado con el binario, primero

25
00:02:16,420 --> 00:02:17,420
me tomaré un momento para hacer una descripción general rápida.

26
00:02:17,420 --> 00:02:21,260
En realidad, incluso si estás familiarizado con el binario, quiero explicarlo centrándome en

27
00:02:21,260 --> 00:02:26,560
el ritmo de conteo, en el que quizás hayas pensado o no antes.

28
00:02:26,560 --> 00:02:30,500
Cualquier descripción del binario generalmente comienza con una introspección sobre nuestra forma habitual

29
00:02:30,500 --> 00:02:36,100
de representar números, lo que llamamos base 10, ya que usamos 10 dígitos

30
00:02:36,100 --> 00:02:38,560
separados, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9. .

31
00:02:38,560 --> 00:02:44,220
El ritmo de conteo comienza recorriendo los 10 dígitos.

32
00:02:45,220 --> 00:02:52,320
Luego, al quedarse sin nuevos dígitos, expresas el siguiente número, 10, con dos dígitos, 1, 0.

33
00:02:52,320 --> 00:02:56,760
Dices que 1 está en el lugar de las decenas, ya que está destinado a encapsular el grupo de

34
00:02:56,760 --> 00:03:02,540
10 que ya has contado hasta ahora, mientras liberas el lugar de las unidades para restablecerlo a 0.

35
00:03:02,540 --> 00:03:08,280
El ritmo de contar se repite así, contando 9 hacia arriba, pasando al lugar

36
00:03:08,280 --> 00:03:13,000
de las decenas, contando 9 más, pasando al lugar de las decenas, etc.

37
00:03:13,000 --> 00:03:19,800
Bueno, después de repetir ese proceso 9 veces, pasas al lugar

38
00:03:19,800 --> 00:03:24,640
de las centenas, un dígito que registra cuántos grupos de 100

39
00:03:24,640 --> 00:03:30,040
has acertado, liberando los otros dos dígitos para restablecerlos a 0.

40
00:03:30,040 --> 00:03:34,060
De esta manera, el ritmo de conteo es algo similar.

41
00:03:34,060 --> 00:03:38,560
Incluso si se aleja a una escala mayor, el proceso

42
00:03:39,120 --> 00:03:43,960
parece hacer algo, girar, hacer lo mismo, girar y

43
00:03:43,960 --> 00:03:49,960
repetir 9 veces antes de un desplazamiento aún mayor.

44
00:03:49,960 --> 00:03:56,200
En binario, también conocido como base 2, te limitas a dos dígitos, 0

45
00:03:56,200 --> 00:03:59,700
y 1, comúnmente llamados bits, que es la abreviatura de dígitos binarios.

46
00:03:59,700 --> 00:04:03,960
El resultado es que cuando estás contando, tienes que darte la vuelta todo el tiempo.

47
00:04:03,960 --> 00:04:08,080
Después de contar 0, 1, ya te has quedado sin bits, por lo que necesitas pasar al

48
00:04:08,600 --> 00:04:13,440
lugar de dos, escribir 1-0 y resistir cada impulso en tu cerebro entrenado en base 10 de

49
00:04:13,440 --> 00:04:20,120
leer esto como 10, y en lugar de eso, entiéndalo como 1 grupo de 2 más 0.

50
00:04:20,120 --> 00:04:26,400
Luego incrementa hasta 1-1, que representa 3, y ya tienes que pasar de nuevo, y

51
00:04:26,400 --> 00:04:30,920
como hay un 1 en el lugar de esos dos, eso también tiene que pasar,

52
00:04:30,920 --> 00:04:37,800
dándote 1-0-0, que representa 1. grupo de 4 más 0 grupos de 2 más 0.

53
00:04:37,800 --> 00:04:44,660
De la misma manera que los dígitos en base 10 representan potencias

54
00:04:44,660 --> 00:04:46,380
de 10, los bits en base 2 representan diferentes potencias de 2.

55
00:04:46,380 --> 00:04:50,360
Entonces, en lugar de hablar de un lugar de 10, un lugar de 100, un lugar de 1000,

56
00:04:50,360 --> 00:04:55,800
cosas así, se habla de un lugar de 2, un lugar de 4 y un lugar de 8.

57
00:04:55,800 --> 00:05:01,080
El ritmo de conteo es ahora mucho más rápido, pero eso casi lo hace más notorio.

58
00:05:01,080 --> 00:05:02,940
Voltee el último, déle la vuelta una vez.

59
00:05:02,940 --> 00:05:04,680
Voltee el último, déle la vuelta dos veces.

60
00:05:04,680 --> 00:05:06,380
Voltee el último, déle la vuelta una vez.

61
00:05:06,380 --> 00:05:09,100
Voltee el último, déle la vuelta tres veces.

62
00:05:09,100 --> 00:05:13,980
Una vez más, hay cierta similitud con este patrón.

63
00:05:13,980 --> 00:05:22,480
En cada escala, el proceso consiste en hacer algo, darse la vuelta y luego volver a hacer lo mismo.

64
00:05:22,480 --> 00:05:27,980
A pequeña escala, digamos contar hasta 3, que es 1-1 en binario, esto significa

65
00:05:27,980 --> 00:05:33,320
invertir el último bit, pasar a los dos y luego invertir el último bit.

66
00:05:33,320 --> 00:05:40,000
A una escala mayor, como contar hasta 15, que es 1-1-1-1, el proceso consiste en dejar que los últimos 3

67
00:05:40,000 --> 00:05:47,260
cuenten hasta 7, pasar al lugar de los 8 y luego dejar que los últimos 3 bits cuenten nuevamente. .

68
00:05:47,260 --> 00:05:53,040
Contar hasta 255, que son 8 unos sucesivos, parece dejar que los

69
00:05:53,040 --> 00:05:57,420
últimos 7 bits cuenten hasta que estén llenos, pasar al lugar de

70
00:05:57,420 --> 00:06:00,080
128 y luego dejar que los últimos 7 bits cuenten nuevamente.

71
00:06:01,080 --> 00:06:05,680
Muy bien, con esa mini introducción, el hecho sorprendente que Keith me mostró

72
00:06:05,680 --> 00:06:10,440
es que podemos usar este ritmo para resolver las torres de Hanoi.

73
00:06:10,440 --> 00:06:12,720
Empiezas contando desde 0.

74
00:06:12,720 --> 00:06:18,640
Siempre que solo estés volteando el último bit, de 0 a

75
00:06:18,640 --> 00:06:22,420
1, mueve el disco 0 una clavija hacia la derecha.

76
00:06:22,420 --> 00:06:29,140
Si ya estaba en la clavija más a la derecha, simplemente vuelva a colocarla en la primera clavija.

77
00:06:29,200 --> 00:06:35,700
Si pasa una vez al lugar de los dos, es

78
00:06:35,700 --> 00:06:37,740
decir, voltea los dos últimos bits, mueve el disco 1.

79
00:06:37,740 --> 00:06:39,740
¿A dónde lo mueves, te preguntarás?

80
00:06:39,740 --> 00:06:43,220
No tienes otra opción, no puedes ponerlo encima del disco 0 y solo

81
00:06:43,220 --> 00:06:47,100
hay otra clavija, así que la mueves donde te ves obligado a moverla.

82
00:06:47,100 --> 00:06:51,220
Después de esto, contar hasta 1-1, eso implica simplemente invertir el

83
00:06:51,220 --> 00:06:52,900
último bit, de modo que mueva el disco 0 nuevamente.

84
00:06:52,900 --> 00:06:59,620
Luego, cuando su conteo binario avance dos veces hasta el lugar

85
00:06:59,620 --> 00:07:01,440
del cuatro, mueva el disco 2 y el patrón continúa así.

86
00:07:01,440 --> 00:07:03,460
Voltee el último, mueva el disco 0.

87
00:07:03,460 --> 00:07:05,900
Voltee los dos últimos, mueva el disco 1.

88
00:07:05,900 --> 00:07:08,080
Voltee el último, mueva el disco 0.

89
00:07:08,080 --> 00:07:12,420
Y aquí vamos a tener que dar la vuelta tres veces hasta

90
00:07:12,420 --> 00:07:14,100
el lugar del 8, y eso corresponde a mover el disco 3.

91
00:07:14,100 --> 00:07:18,180
Hay algo mágico en esto, como cuando vi esto

92
00:07:18,180 --> 00:07:19,180
por primera vez, pensé, esto no puede funcionar.

93
00:07:19,180 --> 00:07:22,500
No sé cómo funciona esto, no sé por qué funciona, ahora lo sé, pero es

94
00:07:22,500 --> 00:07:28,100
simplemente mágico cuando lo ves, y recuerdo haber armado una animación para esto cuando estaba

95
00:07:28,100 --> 00:07:32,540
enseñando esto, y simplemente, Ya sabes, sé cómo funciona esto, sé todas las cosas que

96
00:07:32,540 --> 00:07:36,260
contiene, aún así es divertido simplemente sentarse y, ya sabes, ver cómo se desarrolla.

97
00:07:36,260 --> 00:07:37,260
Oh sí.

98
00:07:37,260 --> 00:07:41,800
Quiero decir, al principio ni siquiera está claro que esto siempre vaya a dar lugar a movimientos legales.

99
00:07:41,800 --> 00:07:45,980
Por ejemplo, ¿cómo sabes que cada vez que te desplazas hacia el

100
00:07:45,980 --> 00:07:49,820
lugar del 8, el disco 3 necesariamente quedará libre para moverse?

101
00:07:49,820 --> 00:07:53,900
Al mismo tiempo, la solución plantea inmediatamente estas preguntas como, ¿de dónde

102
00:07:53,900 --> 00:07:58,300
viene esto, por qué funciona y hay una mejor manera de hacerlo

103
00:07:58,300 --> 00:08:00,560
que tener que hacer 2 elevado a n menos 1 pasos?

104
00:08:00,560 --> 00:08:05,140
Resulta que esto no sólo resuelve las Torres de Hanoi,

105
00:08:05,140 --> 00:08:07,180
sino que lo hace de la manera más eficiente posible.

106
00:08:07,180 --> 00:08:10,680
Comprender por qué funciona esto, cómo funciona y qué diablos está pasando se reduce a una

107
00:08:10,680 --> 00:08:16,860
cierta perspectiva del rompecabezas, lo que la gente de CS podría llamar una perspectiva recursiva.

108
00:08:16,900 --> 00:08:21,420
El disco 3 está pensando, está bien, 2, 1 y 0, como si tuvieras que

109
00:08:21,420 --> 00:08:25,020
dejarme de encima, como si realmente no pudiera funcionar bajo tanto peso y presión.

110
00:08:25,020 --> 00:08:28,660
Y entonces, solo desde la perspectiva del disco 3, si quieres descubrir cómo va a llegar el disco 3 hasta

111
00:08:28,660 --> 00:08:33,900
aquí, de alguna manera, no me importa cómo, los discos 2, 1 y 0 tienen que llegar al eje B.

112
00:08:33,900 --> 00:08:36,020
Esa es la única forma en que puede moverse.

113
00:08:36,020 --> 00:08:38,060
Si alguno de estos discos está encima de 3, no se puede mover.

114
00:08:38,060 --> 00:08:41,000
Si alguno de ellos está en el eje C, no puede moverse allí.

115
00:08:41,000 --> 00:08:43,940
Entonces, de alguna manera tenemos que eliminar 2, 1 y 0.

116
00:08:43,980 --> 00:08:48,180
Una vez hecho esto, podemos mover el disco 3 allí.

117
00:08:48,180 --> 00:08:50,020
Y luego el disco 3 dice: Estoy listo.

118
00:08:50,020 --> 00:08:51,940
Nunca más necesitarás moverme.

119
00:08:51,940 --> 00:08:54,340
Todos los demás simplemente descubren cómo llegar aquí.

120
00:08:54,340 --> 00:08:57,540
Y en cierto sentido, ahora tienes una versión más pequeña del mismo problema.

121
00:08:57,540 --> 00:09:02,380
Ahora que tiene los discos 0, 1 y 2 en el eje B, debe llevarlos a C. Entonces, la

122
00:09:02,380 --> 00:09:06,180
idea es que si solo me concentro en un disco y pienso en lo que tendré que hacer

123
00:09:06,180 --> 00:09:10,680
para que este disco funcione, puedo convertir mi problema más grande en algo un poco más pequeño.

124
00:09:10,680 --> 00:09:12,020
¿Y luego cómo soluciono eso?

125
00:09:12,020 --> 00:09:13,520
Bueno, es exactamente lo mismo.

126
00:09:13,600 --> 00:09:17,160
Si el disco 2 va a decir disco 1 y disco 0, no eres tú, soy yo.

127
00:09:17,160 --> 00:09:18,160
Sólo necesito algo de espacio.

128
00:09:18,160 --> 00:09:19,160
Bajar.

129
00:09:19,160 --> 00:09:20,520
Necesitan mudarse a alguna parte.

130
00:09:20,520 --> 00:09:23,040
Entonces el disco 2 puede moverse a donde necesita ir.

131
00:09:23,040 --> 00:09:25,120
Entonces los discos 1 y 0 pueden hacer esto.

132
00:09:25,120 --> 00:09:31,040
Pero lo interesante es que cada disco tiene exactamente la misma estrategia.

133
00:09:31,040 --> 00:09:33,220
Todos dicen, todos los que están por encima de mí, bájense.

134
00:09:33,220 --> 00:09:34,220
Entonces me voy a mudar.

135
00:09:34,220 --> 00:09:36,560
Bien, todos vuelvan a ponerse manos a la obra.

136
00:09:36,560 --> 00:09:40,600
Cuando conoces esa idea, puedes codificar algo que resuelva las torres de

137
00:09:40,600 --> 00:09:46,720
Hanoi, como cinco o seis líneas de código, que probablemente tengan la

138
00:09:46,720 --> 00:09:50,680
proporción más alta de inversión intelectual por líneas de código jamás vista.

139
00:09:50,680 --> 00:09:55,800
Y si lo piensas un poco, queda claro que

140
00:09:55,800 --> 00:09:56,800
esta tiene que ser la solución más eficiente.

141
00:09:56,800 --> 00:10:00,060
En cada paso, sólo estás haciendo lo que se te impone.

142
00:10:00,060 --> 00:10:04,440
Debe quitar los discos 0 a 2 antes de poder mover el disco 3.

143
00:10:04,440 --> 00:10:06,520
Y hay que mover el disco 3.

144
00:10:06,520 --> 00:10:09,680
Y luego tienes que volver a colocar los discos 0 a 2.

145
00:10:09,760 --> 00:10:15,400
Desde esta perspectiva, simplemente no hay lugar para la ineficiencia.

146
00:10:15,400 --> 00:10:18,920
Entonces, ¿por qué el conteo binario captura este algoritmo?

147
00:10:18,920 --> 00:10:23,480
Bueno, lo que está sucediendo aquí es que este patrón de

148
00:10:23,480 --> 00:10:28,480
resolver un subproblema, mover un disco grande y luego resolver un

149
00:10:28,480 --> 00:10:30,160
subproblema nuevamente, es perfectamente paralelo al patrón de conteo binario.

150
00:10:30,160 --> 00:10:35,280
Cuente una cantidad, dé la vuelta y cuente hasta esa misma cantidad nuevamente.

151
00:10:35,360 --> 00:10:40,520
Y este algoritmo de las torres de Hanoi y el conteo binario son procesos autosimilares, en

152
00:10:40,520 --> 00:10:44,980
el sentido de que si te alejas y cuentas hasta una potencia mayor de 2, o

153
00:10:44,980 --> 00:10:48,920
resuelves las torres de Hanoi con más discos, ambos todavía tienen la misma estructura. .

154
00:10:48,920 --> 00:10:52,700
Subproblema, hacer una cosa, subproblema.

155
00:10:52,700 --> 00:10:57,820
Por ejemplo, a una escala bastante pequeña, resolver las torres de Hanoi para dos discos, mover el

156
00:10:57,820 --> 00:11:03,720
disco 0, mover el disco 1, mover el disco 0, se refleja contando hasta 3 en binario.

157
00:11:03,840 --> 00:11:07,560
Voltee el último trozo, déle la vuelta una vez, voltee el último trozo.

158
00:11:07,560 --> 00:11:12,360
A una escala ligeramente mayor, resolver las torres de Hanoi para tres discos parece

159
00:11:12,360 --> 00:11:17,120
hacer lo que sea necesario para resolver dos discos, mover el disco número

160
00:11:17,120 --> 00:11:19,080
2 y luego hacer lo que sea necesario para resolver dos discos nuevamente.

161
00:11:19,080 --> 00:11:24,960
De manera análoga, contar hasta 111 en binario implica contar hasta

162
00:11:24,960 --> 00:11:28,000
3, pasar los tres bits y luego contar tres más.

163
00:11:28,000 --> 00:11:32,060
En todas las escalas, ambos procesos tienen el mismo desglose.

164
00:11:32,100 --> 00:11:35,620
Entonces, en cierto sentido, la razón por la que esta solución binaria funciona, o al

165
00:11:35,620 --> 00:11:40,820
menos una explicación, siento que no hay una explicación única, pero creo que la

166
00:11:40,820 --> 00:11:44,440
más natural es que el patrón que usarías para generar estos números binarios tiene

167
00:11:44,440 --> 00:11:49,560
exactamente el mismo. estructura como el patrón que usarías para las torres de Hanoi,

168
00:11:49,560 --> 00:11:51,860
razón por la cual si observas los bits volteándose, efectivamente estás invirtiendo este proceso.

169
00:11:51,860 --> 00:11:54,200
Estás diciendo, ¿qué proceso generó estos?

170
00:11:54,200 --> 00:12:00,460
Como si estuviera tratando de entender cómo se invirtieron estos bits para darme esto, efectivamente estarías

171
00:12:00,460 --> 00:12:06,180
invirtiendo el algoritmo recursivo para las torres de Hanoi, y es por eso que funciona.

172
00:12:07,860 --> 00:12:09,620
Eso es genial, ¿verdad?

173
00:12:09,620 --> 00:12:10,940
Pero en realidad hace más frío.

174
00:12:10,940 --> 00:12:14,460
Ni siquiera he llegado a explicar cómo se relaciona esto con el triángulo de Sierpinski.

175
00:12:14,460 --> 00:12:19,140
Y eso es exactamente lo que haré en el siguiente vídeo, parte 2.

176
00:12:19,140 --> 00:12:22,620
Muchas gracias a todos los que apoyan estos videos en Patreon.

177
00:12:22,620 --> 00:12:26,380
Acabo de terminar el primer capítulo de Essence of Calculus y estoy trabajando en

178
00:12:26,380 --> 00:12:30,840
el segundo ahora mismo, y los seguidores de Patreon tendrán acceso temprano a

179
00:12:30,840 --> 00:12:34,780
estos videos antes de que publique la serie completa dentro de unos meses.

180
00:12:34,780 --> 00:12:39,260
Este video y el siguiente también cuentan con el apoyo parcial de Desmos,

181
00:12:39,260 --> 00:12:43,020
y antes del siguiente video solo quiero tomarme un momento y compartir con

182
00:12:43,020 --> 00:12:44,780
ustedes un poco sobre quiénes son y el hecho de que están contratando.

183
00:12:44,780 --> 00:12:47,020
Entonces Desmos es realmente genial.

184
00:12:47,020 --> 00:12:51,680
Hacen muchas de estas actividades matemáticas interactivas para las aulas y herramientas para los profesores.

185
00:12:51,680 --> 00:12:56,060
La verdadera esencia de su oferta está en sus actividades en el aula.

186
00:12:56,060 --> 00:13:00,380
Por mi parte, estoy muy impresionado por lo bien pensadas

187
00:13:00,380 --> 00:13:02,540
que están estas actividades desde el punto de vista pedagógico.

188
00:13:02,540 --> 00:13:06,000
El equipo claramente sabe lo que hace y sabe cuál es su posición

189
00:13:06,000 --> 00:13:08,180
para marcar una diferencia en la vida de los estudiantes y maestros.

190
00:13:08,180 --> 00:13:10,140
Y como dije, están contratando.

191
00:13:10,140 --> 00:13:14,780
Siempre buscan atraer más talento, ya sea ingeniería, diseñadores, profesores o cualquier

192
00:13:14,780 --> 00:13:19,600
otro conjunto de habilidades que se alinee con lo que quieren hacer.

193
00:13:19,600 --> 00:13:22,920
Si alguno de ustedes está interesado en unirse a ellos y ayudarlos

194
00:13:22,920 --> 00:13:26,720
a crear algunas de estas excelentes herramientas para profesores y estudiantes, puede

195
00:13:26,720 --> 00:13:27,720
consultar la página de carreras que he vinculado en la descripción.

196
00:13:27,720 --> 00:13:30,480
Personalmente, creo que están haciendo cosas realmente significativas.

197
00:13:30,480 --> 00:13:35,080
Creo que sus actividades están generando intuiciones matemáticas genuinamente buenas para los estudiantes,

198
00:13:35,080 --> 00:13:39,060
y al mundo le vendría bien que unas cuantas personas más talentosas dirigieran

199
00:13:39,060 --> 00:13:40,520
sus esfuerzos hacia la educación de la manera en que lo hacen.

200
00:13:40,520 --> 00:13:44,640
Muy bien, con eso los veré en el próximo video,

201
00:13:44,640 --> 00:13:45,720
y creo que realmente les gustará hacia dónde va esto.

