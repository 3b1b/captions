1
00:00:00,000 --> 00:00:08,720
今天，我想与大家分享一种解决河内塔难题的巧妙方法，只需使用不同的数字系统进行计数即可。

2
00:00:08,720 --> 00:00:11,240


3
00:00:11,240 --> 00:00:16,720
令人惊讶的是，这个东西与找到一条填充谢尔宾斯基三角形的曲线有关。

4
00:00:16,720 --> 00:00:20,920
我从我的一位前计算机科学讲师那里了解到这一点，他的名字叫 Keith

5
00:00:20,920 --> 00:00:24,840
Schwartz，我不得不说，这个人是我见过的最好的教育家之一。

6
00:00:24,840 --> 00:00:28,560
实际上，我录下了他向我展示这些东西时的一些对话，这样你们就可以直接听到他所描述的一些内容。

7
00:00:28,560 --> 00:00:42,520


8
00:00:42,520 --> 00:00:46,840
如果您不熟悉，让我们简单介绍一下河内塔谜题到底是什么。

9
00:00:46,840 --> 00:00:54,440


10
00:00:54,440 --> 00:00:57,880
您可以将这些圆盘视为中间有一个孔，以便可以将它们安装到钉子上。

11
00:00:57,880 --> 00:00:59,260


12
00:00:59,260 --> 00:01:05,040
此处所示的设置有五个磁盘，我将其标记为

13
00:01:05,040 --> 00:01:24,120
0、1、2、3、4，但原则上，您可以拥有任意数量的磁盘。

14
00:01:24,120 --> 00:01:29,440
例如，您的第一次移动必须涉及移动磁盘

15
00:01:29,440 --> 00:01:33,320
0，因为任何其他磁盘上面都有东西，需要在移动之前先将其移开。

16
00:01:33,320 --> 00:01:38,000
之后，您可以移动磁盘 1，但它必须继续移动到当前没有磁盘

17
00:01:38,000 --> 00:01:44,040
0

18
00:01:44,040 --> 00:01:45,040
的任何挂钩上，否则您会将较大的磁盘放在较小的磁盘上，这是不允许的。

19
00:01:45,040 --> 00:01:49,600
如果您以前从未见过这一点，我强烈建议您停下来，拿出一些不同尺寸的书籍，亲自尝试一下。

20
00:01:49,600 --> 00:02:00,320


21
00:02:00,320 --> 00:02:04,760
现在基思向我展示了这个难题的一些真正令人惊讶的东西，那就是你只需通过二进制计数并将计数的节奏与磁盘运动的特定节奏联系起来就可以解决它。

22
00:02:04,760 --> 00:02:10,200


23
00:02:10,200 --> 00:02:12,480


24
00:02:12,480 --> 00:02:16,420
对于任何不熟悉二进制的人，我将首先花点时间快速概述一下。

25
00:02:16,420 --> 00:02:17,420


26
00:02:17,420 --> 00:02:21,260
实际上，即使您熟悉二进制，我也想以计数的节奏为重点来解释它，您以前可能考虑过也可能没有考虑过。

27
00:02:21,260 --> 00:02:26,560


28
00:02:26,560 --> 00:02:30,500
对二进制的任何描述通常都是从反思我们通常表示数字的方式开始，我们称之为基数 10，因为我们使用

29
00:02:30,500 --> 00:02:36,100
10 个独立的数字：0、1、2、3、4、5、6、7、8、9

30
00:02:36,100 --> 00:02:38,560
。

31
00:02:38,560 --> 00:02:44,220
计数的节奏从遍历所有 10 个数字开始。

32
00:02:45,220 --> 00:02:52,320
然后，用完新数字后，用两位数字 1、0 表示下一个数字 10。

33
00:02:52,320 --> 00:02:56,760
你说 1 位于十位，因为它意味着封装到目前为止你已经数到的

34
00:02:56,760 --> 00:03:02,540
10 组，同时释放个位以重置为 0。

35
00:03:02,540 --> 00:03:08,280
计数的节奏就这样重复着，数到9，滚到十位，再数到9，滚到十位，等等。

36
00:03:08,280 --> 00:03:13,000


37
00:03:13,000 --> 00:03:19,800
好吧，重复这个过程 9

38
00:03:19,800 --> 00:03:24,640
次后，你会滚动到百位，这个数字记录你击中了多少组 100，从而释放其他两位数字以重置为

39
00:03:24,640 --> 00:03:30,040
0。

40
00:03:30,040 --> 00:03:34,060
这样，计数的节奏就有点自相似了。

41
00:03:34,060 --> 00:03:38,560
即使你缩小到更大的比例，这个过程看起来就像做某事，滚动，做同样的事情，滚动，并在更大的滚动之前重复

42
00:03:39,120 --> 00:03:43,960
9

43
00:03:43,960 --> 00:03:49,960
次。

44
00:03:49,960 --> 00:03:56,200
在二进制（也称为基数 2）中，您将自己限制为两个数字：0

45
00:03:56,200 --> 00:03:59,700
和 1，通常称为位，是二进制数字的缩写。

46
00:03:59,700 --> 00:04:03,960
结果就是当你数的时候，你必须一直翻身。

47
00:04:03,960 --> 00:04:08,080
数完 0、1 后，你已经用完了位数，因此你需要翻到 2 的位置，写下

48
00:04:08,600 --> 00:04:13,440
1-0，并抵制你受过 10 进制训练的大脑中将其读为 10 的冲动，并且相反，请将其理解为

49
00:04:13,440 --> 00:04:20,120
1 组 2 加 0。

50
00:04:20,120 --> 00:04:26,400
然后增加到 1-1，代表 3，并且你已经必须再次滚动，并且由于 2 的位置有一个

51
00:04:26,400 --> 00:04:30,920
1，所以它也必须滚动，给你 1-0-0，代表 1 4 组加

52
00:04:30,920 --> 00:04:37,800
0 2 组加 0。

53
00:04:37,800 --> 00:04:44,660
就像以 10 为基数的数字表示 10 的幂一样，以

54
00:04:44,660 --> 00:04:46,380
2 为基数的位也表示 2 的不同幂。

55
00:04:46,380 --> 00:04:50,360
因此，不要谈论 10 位、100 位、1000 位等类似的东西，而是谈论

56
00:04:50,360 --> 00:04:55,800
2 位、4 位和 8 位。

57
00:04:55,800 --> 00:05:01,080
计数的节奏现在快了很多，但这几乎使它更加引人注目。

58
00:05:01,080 --> 00:05:02,940
最后翻面，翻滚一次。

59
00:05:02,940 --> 00:05:04,680
最后翻面，翻滚两遍。

60
00:05:04,680 --> 00:05:06,380
最后翻面，翻滚一次。

61
00:05:06,380 --> 00:05:09,100
最后翻面，翻滚三遍。

62
00:05:09,100 --> 00:05:13,980
同样，这种模式有一定的自相似性。

63
00:05:13,980 --> 00:05:22,480
在任何规模上，过程都是做某事，翻转，然后再次做同样的事情。

64
00:05:22,480 --> 00:05:27,980
在小范围内，假设计数到 3，即二进制中的

65
00:05:27,980 --> 00:05:33,320
1-1，这意味着翻转最后一位，翻转到 2，然后翻转最后一位。

66
00:05:33,320 --> 00:05:40,000
规模更大的话，比如数到15，也就是1-1-1-1，过程就是让最后3位数到7，滚到8位，然后让最后3位再数起来。

67
00:05:40,000 --> 00:05:47,260


68
00:05:47,260 --> 00:05:53,040
计数到 255，即 8 个连续的

69
00:05:53,040 --> 00:05:57,420
1，这看起来就像让最后 7 位计数到满，滚动到 128

70
00:05:57,420 --> 00:06:00,080
的位置，然后让最后 7 位再次计数。

71
00:06:01,080 --> 00:06:05,680
好吧，通过这个简短的介绍，基思向我展示的令人惊讶的事实是我们可以使用这种节奏来解决河内塔楼的问题。

72
00:06:05,680 --> 00:06:10,440


73
00:06:10,440 --> 00:06:12,720
你从0开始数。

74
00:06:12,720 --> 00:06:18,640
每当您只翻转最后一位（从 0 到

75
00:06:18,640 --> 00:06:22,420
1）时，请将磁盘 0 向右移动一个钉子。

76
00:06:22,420 --> 00:06:29,140
如果它已经在最右边的钉子上，您只需将其循环回第一个钉子即可。

77
00:06:29,200 --> 00:06:35,700
如果翻转一次到 2

78
00:06:35,700 --> 00:06:37,740
的位置，即翻转最后两位，则移动磁盘 1。

79
00:06:37,740 --> 00:06:39,740
你可能会问，你把它移到哪里？

80
00:06:39,740 --> 00:06:43,220
你别无选择，你不能把它放在磁盘 0

81
00:06:43,220 --> 00:06:47,100
的顶部，而且只有一个钉子，所以你把它移到你被迫移动的地方。

82
00:06:47,100 --> 00:06:51,220
此后，计数到 1-1，只需翻转最后一位，因此您再次移动磁盘

83
00:06:51,220 --> 00:06:52,900
0。

84
00:06:52,900 --> 00:06:59,620
然后，当二进制计数滚动两次到四位时，移动磁盘

85
00:06:59,620 --> 00:07:01,440
2，该模式将像这样继续。

86
00:07:01,440 --> 00:07:03,460
翻转最后一个，移动磁盘 0。

87
00:07:03,460 --> 00:07:05,900
翻转最后两个，移动磁盘 1。

88
00:07:05,900 --> 00:07:08,080
翻转最后一个，移动磁盘 0。

89
00:07:08,080 --> 00:07:12,420
在这里，我们必须滚动三次到 8

90
00:07:12,420 --> 00:07:14,100
的位置，这对应于移动磁盘 3。

91
00:07:14,100 --> 00:07:18,180
它有一些神奇的东西，就像当我第一次看到这个时，我就想，这行不通。

92
00:07:18,180 --> 00:07:19,180


93
00:07:19,180 --> 00:07:22,500
我不知道这是如何工作的，我不知道为什么会这样，现在我知道了，但是当你看到它时，它真的很神奇，我记得在教这个的时候为此制作了动画，就像，你知道，我知道这是如何运作的，我知道其中的所有内容，只是坐着看它上演仍然很有趣。

94
00:07:22,500 --> 00:07:28,100


95
00:07:28,100 --> 00:07:32,540


96
00:07:32,540 --> 00:07:36,260


97
00:07:36,260 --> 00:07:37,260
哦耶。

98
00:07:37,260 --> 00:07:41,800
我的意思是，一开始甚至不清楚这是否总是会带来合法的行动。

99
00:07:41,800 --> 00:07:45,980
例如，您如何知道每次滚动到 8 的位置时，磁盘

100
00:07:45,980 --> 00:07:49,820
3 一定会被释放以进行移动？

101
00:07:49,820 --> 00:07:53,900
同时，解决方案立即提出了这些问题，例如，它从哪里来，为什么会起作用，以及是否有比执行 2 到

102
00:07:53,900 --> 00:07:58,300
n 减

103
00:07:58,300 --> 00:08:00,560
1 的步骤更好的方法？

104
00:08:00,560 --> 00:08:05,140
事实证明，这不仅解决了河内塔问题，而且以最有效的方式解决了这个问题。

105
00:08:05,140 --> 00:08:07,180


106
00:08:07,180 --> 00:08:10,680
理解它为什么有效、它是如何工作的以及到底发生了什么，可以归结为对这个谜题的某种视角，计算机科学人士可能称之为递归视角。

107
00:08:10,680 --> 00:08:16,860


108
00:08:16,900 --> 00:08:21,420
磁盘 3 正在想，好吧，2、1

109
00:08:21,420 --> 00:08:25,020
和 0，就像你必须离开我一样，就像我在这么大的重量和压力下无法真正发挥作用。

110
00:08:25,020 --> 00:08:28,660
因此，仅从磁盘 3 的角度来看，如果您想弄清楚磁盘 3 如何到达这里，不知何故，我不关心磁盘

111
00:08:28,660 --> 00:08:33,900
2、1 和 0 必须如何到达主轴 B。

112
00:08:33,900 --> 00:08:36,020
这是它能够移动的唯一方式。

113
00:08:36,020 --> 00:08:38,060
如果其中任何一个圆盘位于 3 个圆盘之上，则它无法移动。

114
00:08:38,060 --> 00:08:41,000
如果它们中的任何一个位于主轴 C 中，则它无法移动到那里。

115
00:08:41,000 --> 00:08:43,940
所以我们必须以某种方式去掉 2、1 和 0。

116
00:08:43,980 --> 00:08:48,180
完成后，我们可以将磁盘 3 移到那里。

117
00:08:48,180 --> 00:08:50,020
然后磁盘 3 说，我已经准备好了。

118
00:08:50,020 --> 00:08:51,940
你再也不需要动我了。

119
00:08:51,940 --> 00:08:54,340
其他人只是弄清楚如何到达这里。

120
00:08:54,340 --> 00:08:57,540
从某种意义上说，您现在遇到了同一问题的较小版本。

121
00:08:57,540 --> 00:09:02,380
现在磁盘 0、1 和 2 位于主轴 B 上，您必须将它们转移到 C 上。 所以我的想法是，如果我只关注一个磁盘，然后思考我需要做什么才能让这个磁盘正常工作，我就可以将更大的问题变成稍微更小的问题。

122
00:09:02,380 --> 00:09:06,180


123
00:09:06,180 --> 00:09:10,680


124
00:09:10,680 --> 00:09:12,020
那我该如何解决这个问题呢？

125
00:09:12,020 --> 00:09:13,520
嗯，这是完全一样的事情。

126
00:09:13,600 --> 00:09:17,160
如果磁盘2要说，磁盘1和磁盘0，那不是你，是我。

127
00:09:17,160 --> 00:09:18,160
我只是需要一些空间。

128
00:09:18,160 --> 00:09:19,160
下车。

129
00:09:19,160 --> 00:09:20,520
他们需要搬到某个地方。

130
00:09:20,520 --> 00:09:23,040
然后磁盘 2 就可以移动到它需要去的地方。

131
00:09:23,040 --> 00:09:25,120
那么磁盘1和0就可以做到这一点。

132
00:09:25,120 --> 00:09:31,040
但有趣的是，每个磁盘几乎都有完全相同的策略。

133
00:09:31,040 --> 00:09:33,220
他们都说，我上面的人都下车。

134
00:09:33,220 --> 00:09:34,220
那我要搬家了。

135
00:09:34,220 --> 00:09:36,560
好吧，大家都回去吧。

136
00:09:36,560 --> 00:09:40,600
当您了解这种洞察力时，您可以编写一些可以解决河内塔问题的代码，例如五到六行代码，这可能是有史以来智力投资与代码行的最高比率。

137
00:09:40,600 --> 00:09:46,720


138
00:09:46,720 --> 00:09:50,680


139
00:09:50,680 --> 00:09:55,800
如果您稍微思考一下，就会发现这肯定是最有效的解决方案。

140
00:09:55,800 --> 00:09:56,800


141
00:09:56,800 --> 00:10:00,060
每一步，你都只是在做别人强加给你的事情。

142
00:10:00,060 --> 00:10:04,440
您必须先卸下磁盘 0 到 2，然后才能移动磁盘 3。

143
00:10:04,440 --> 00:10:06,520
并且您必须移动磁盘 3。

144
00:10:06,520 --> 00:10:09,680
然后您必须将磁盘 0 到 2 移回原来的位置。

145
00:10:09,760 --> 00:10:15,400
从这个角度来看，没有任何低效率的空间。

146
00:10:15,400 --> 00:10:18,920
那么为什么二进制计数会捕获这个算法呢？

147
00:10:18,920 --> 00:10:23,480
嗯，这里发生的事情是，解决子问题、移动大磁盘，然后再次解决子问题的这种模式与二进制计数的模式完全并行。

148
00:10:23,480 --> 00:10:28,480


149
00:10:28,480 --> 00:10:30,160


150
00:10:30,160 --> 00:10:35,280
数出一定数量，翻转，再次数到相同的数量。

151
00:10:35,360 --> 00:10:40,520
河内塔算法和二进制计数都是自相似的过程，从某种意义上说，如果你缩小并计数到更大的

152
00:10:40,520 --> 00:10:44,980
2

153
00:10:44,980 --> 00:10:48,920
次方，或者用更多的磁盘来解决河内塔，它们仍然具有相同的结构。

154
00:10:48,920 --> 00:10:52,700
子问题，做一件事，子问题。

155
00:10:52,700 --> 00:10:57,820
例如，在相当小的规模上，求解两个圆盘的河内塔，移动圆盘 0，移动圆盘 1，移动圆盘

156
00:10:57,820 --> 00:11:03,720
0，通过二进制数到 3 来反映。

157
00:11:03,840 --> 00:11:07,560
翻转最后一点，翻转一次，翻转最后一点。

158
00:11:07,560 --> 00:11:12,360
在稍微大一点的规模上，解决河内塔的三个圆盘看起来就像不惜一切代价解决两个圆盘，移动

159
00:11:12,360 --> 00:11:17,120
2

160
00:11:17,120 --> 00:11:19,080
号圆盘，然后不惜一切代价再次解决两个圆盘。

161
00:11:19,080 --> 00:11:24,960
类似地，在二进制中计数到 111 需要计数到

162
00:11:24,960 --> 00:11:28,000
3，翻转所有三位，然后再计数 3。

163
00:11:28,000 --> 00:11:32,060
在所有规模上，这两个过程都有相同的故障。

164
00:11:32,100 --> 00:11:35,620
所以从某种意义上说，这个二进制解决方案起作用的原因，或者至少是一个解释，我觉得没有一个解释，但我认为最自然的一个是你用来生成这些二进制数的模式具有完全相同的结构就像河内塔所使用的模式一样，这就是为什么如果你看一下翻转的位，你实际上正在逆转这个过程。

165
00:11:35,620 --> 00:11:40,820


166
00:11:40,820 --> 00:11:44,440


167
00:11:44,440 --> 00:11:49,560


168
00:11:49,560 --> 00:11:51,860


169
00:11:51,860 --> 00:11:54,200
你是说，什么过程产生了这些？

170
00:11:54,200 --> 00:12:00,460
就像如果我试图理解这些位是如何翻转来给我这个东西一样，你实际上是逆转了河内塔的递归算法，这就是它成功的原因。

171
00:12:00,460 --> 00:12:06,180


172
00:12:07,860 --> 00:12:09,620
这很酷，对吧？

173
00:12:09,620 --> 00:12:10,940
但它实际上变得更酷。

174
00:12:10,940 --> 00:12:14,460
我什至还没有弄清楚这与谢尔宾斯基三角形有何关系。

175
00:12:14,460 --> 00:12:19,140
这正是我在后续视频第 2 部分中要做的事情。

176
00:12:19,140 --> 00:12:22,620
非常感谢所有在 Patreon 上支持这些视频的人。

177
00:12:22,620 --> 00:12:26,380
我刚刚完成了《微积分本质》的第一章，现在正在制作第二章，Patreon

178
00:12:26,380 --> 00:12:30,840
支持者可以在我几个月后发布完整系列之前抢先观看这些视频。

179
00:12:30,840 --> 00:12:34,780


180
00:12:34,780 --> 00:12:39,260
这个视频和下一个视频也得到了

181
00:12:39,260 --> 00:12:43,020
Desmos

182
00:12:43,020 --> 00:12:44,780
的部分支持，在下一个视频之前，我只想花点时间与大家分享一下他们是谁以及他们正在招聘的事实。

183
00:12:44,780 --> 00:12:47,020
所以 Desmos 真的很酷。

184
00:12:47,020 --> 00:12:51,680
他们为课堂制作了很多互动数学活动，为教师制作了许多工具。

185
00:12:51,680 --> 00:12:56,060
他们提供的真正内容是课堂活动。

186
00:12:56,060 --> 00:13:00,380
就我而言，这些活动从教学角度来看是经过深思熟虑的，给我留下了深刻的印象。

187
00:13:00,380 --> 00:13:02,540


188
00:13:02,540 --> 00:13:06,000
该团队清楚地了解他们的工作，他们知道自己的立场如何改变学生和教师的生活。

189
00:13:06,000 --> 00:13:08,180


190
00:13:08,180 --> 00:13:10,140
就像我说的，他们正在招聘。

191
00:13:10,140 --> 00:13:14,780
他们总是希望引进更多优秀人才，无论是工程人才、设计师、教师，还是任何其他符合他们想做的事情的技能。

192
00:13:14,780 --> 00:13:19,600


193
00:13:19,600 --> 00:13:22,920
如果你们中的任何人有兴趣加入他们，帮助他们为教师和学生制作一些很棒的工具，您可以查看我在描述中链接的职业页面。

194
00:13:22,920 --> 00:13:26,720


195
00:13:26,720 --> 00:13:27,720


196
00:13:27,720 --> 00:13:30,480
就我个人而言，我认为他们正在做一些真正有意义的事情。

197
00:13:30,480 --> 00:13:35,080
我认为他们的活动正在为学生建立真正良好的数学直觉，世界可以利用更多有才华的人以他们的方式为教育做出努力。

198
00:13:35,080 --> 00:13:39,060


199
00:13:39,060 --> 00:13:40,520


200
00:13:40,520 --> 00:13:44,640
好的，那么我们下一个视频见，我想你们一定会喜欢这个的。

201
00:13:44,640 --> 00:13:45,720


