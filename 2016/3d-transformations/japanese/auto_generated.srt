1
00:00:13,411 --> 00:00:16,458
皆さん、今日は比較的簡単なビデオをご用意

2
00:00:16,458 --> 00:00:19,360
しました。 章間の脚注のようなものです。

3
00:00:19,360 --> 00:00:22,777
最後の 2 つのビデオでは、線形変換と行列について

4
00:00:22,777 --> 00:00:26,194
説明しましたが、2 次元ベクトルから他の 2 次元

5
00:00:26,194 --> 00:00:29,480
ベクトルへの変換の具体的なケースのみを示しました。

6
00:00:29,480 --> 00:00:33,151
このシリーズ全体を通して、主に 2 次元で動作します。

7
00:00:33,151 --> 00:00:36,560
これは主に、実際に画面上で見て理解しやすいためです。

8
00:00:36,560 --> 00:00:39,370
しかし、それよりも重要なことは、すべての核となるアイデアを

9
00:00:39,370 --> 00:00:41,619
2 次元で取 得すると、それらは非常にシームレス

10
00:00:41,619 --> 00:00:43,400
に高次元に引き継がれるということです。

11
00:00:43,400 --> 00:00:46,856
それでも、時々平地の外を覗いて、これらのアイデアを

12
00:00:46,856 --> 00:00:49,781
2 つの次元以上 の側面に適用することが何を

13
00:00:49,781 --> 00:00:52,440
意味するのかを確認するのは良いことです。

14
00:00:52,440 --> 00:00:56,374
たとえば、入力として 3 次元ベクトル、出力として

15
00:00:56,374 --> 00:01:00,460
3 次元ベクトルを使用する線形変換を考えてみましょう。

16
00:01:00,460 --> 00:01:04,989
これは、グリッド線を平行かつ等間隔に保ち、原点を所定の位

17
00:01:04,989 --> 00:01:09,362
置に固定する方法で、グリッドで表される 3 次元空間内

18
00:01:09,362 --> 00:01:13,580
のすべての点の周囲を滑らかにすることで視覚化できます。

19
00:01:13,580 --> 00:01:16,367
そして、2 次元の場合と同じように、私たちが動き

20
00:01:16,367 --> 00:01:18,457
回っているのが見える空間のすべての

21
00:01:18,457 --> 00:01:21,244
点は、実際にはその点に先端を持つベクトルの単なる

22
00:01:21,244 --> 00:01:23,334
代理であり、私たちが実際に行ってい

23
00:01:23,334 --> 00:01:26,121
るのは、入力ベクトルが対応する出力に移動すること

24
00:01:26,121 --> 00:01:27,980
について考えていることです。 。

25
00:01:27,980 --> 00:01:31,164
そして、2 次元の場合と同様に、これらの変換の 1 つは

26
00:01:31,164 --> 00:01:34,240
、基底ベクトルがどこに行くかによって完全に記述されます。

27
00:01:34,240 --> 00:01:36,488
しかし現在、私たちが通常使用する 3

28
00:01:36,488 --> 00:01:39,921
つの標準基底ベクトルがあります。 x 方向の単位ベクトル

29
00:01:39,921 --> 00:01:42,998
i-hat、y 方向の単位ベクトル j-hat、そ

30
00:01:42,998 --> 00:01:45,721
して新しいやつ、z 方向の単位ベクトルです。

31
00:01:45,721 --> 00:01:47,260
、k-hatと呼ばれます。

32
00:01:47,260 --> 00:01:49,612
実際、すべての点を表す完全な 3D

33
00:01:49,612 --> 00:01:52,225
グリッドはやや乱雑になる可能性があるた

34
00:01:52,225 --> 00:01:55,492
め、基底ベクトルのみに従うことでこれらの変換を考え

35
00:01:55,492 --> 00:01:57,060
る方が簡単だと思います。

36
00:01:57,060 --> 00:02:01,031
元の軸のコピーをバックグラウンドに残すことで、これら

37
00:02:01,031 --> 00:02:03,973
3 つの 基底ベクトルのそれぞれが着地す

38
00:02:03,973 --> 00:02:06,180
る座標を考えることができます。

39
00:02:06,180 --> 00:02:08,870
これら 3 つのベクトルの座標を

40
00:02:08,870 --> 00:02:11,560
3x3 行列の列として記録します。

41
00:02:11,560 --> 00:02:14,680
これにより、9 つの数値のみを使用して

42
00:02:14,680 --> 00:02:17,800
変換を完全に記述する行列が得られます。

43
00:02:17,800 --> 00:02:21,182
簡単な例として、y 軸を中心に空間を

44
00:02:21,182 --> 00:02:24,920
9 0 度回転する変換を考えてみましょう。

45
00:02:24,920 --> 00:02:28,144
つまり、i-hat が z 軸上の座標 0、0

46
00:02:28,144 --> 00:02:31,100
、マイナス 1 に移動することを意味します。

47
00:02:31,100 --> 00:02:33,364
j-hat は移動しないので、座標

48
00:02:33,364 --> 00:02:35,000
0、1、0 に留まります。

49
00:02:35,000 --> 00:02:41,280
そして、k-hat は 1、0、0 の x 軸に移動します。

50
00:02:41,280 --> 00:02:46,599
これら 3 つの座標セットは、その回転を説明する行列の列に

51
00:02:46,599 --> 00:02:51,740
なります。 座標 x、y、z を持つベクトルがどこに着地す

52
00:02:51,740 --> 00:02:57,060
る かを確認するための推論は、2 次元の場合とほぼ同じです。

53
00:02:57,060 --> 00:03:01,760
これらの各座標は、各基底ベクトルをスケーリングして加算してベ

54
00:03:01,760 --> 00:03:06,460
クトルを取得する方法についての指示と考えることができます。

55
00:03:06,460 --> 00:03:11,440
そして重要な部分は、2D の場合と同様に、このスケーリングと

56
00:03:11,440 --> 00:03:16,420
追加のプロセスが変換の前後の両方で機能するということです。

57
00:03:16,420 --> 00:03:20,865
したがって、ベクトルがどこに到達するかを

58
00:03:20,865 --> 00:03:27,534
確認するには、これら の座標に行列の対応する列を乗算し、3

59
00:03:27,534 --> 00:03:29,980
つの結果を加算します。

60
00:03:29,980 --> 00:03:32,080
2 つの行列の乗算も同様です。

61
00:03:32,080 --> 00:03:35,030
2 つの 3x3 行列が乗算されるのを見るとき

62
00:03:35,030 --> 00:03:37,981
は常に、最初に右 側の行列によってエンコードさ

63
00:03:37,981 --> 00:03:40,291
れた変換を適用し、次に左側の行列に

64
00:03:40,291 --> 00:03:44,140
よってエンコードされた変換を適用することを想像してください。

65
00:03:44,140 --> 00:03:46,790
3D 行列の乗算は、コンピューター

66
00:03:46,790 --> 00:03:49,293
グラフィックスやロボット工学など

67
00:03:49,293 --> 00:03:53,268
の分野では実際に非常に重要であることがわかりました。

68
00:03:53,268 --> 00:03:57,685
回転や 3 次元 などは説明するのが非常に難しいためです。

69
00:03:57,685 --> 00:04:01,955
しかし、次のように分解できれ ば、理解しやすくなります。

70
00:04:01,955 --> 00:04:04,900
別々の、考えやすいローテーションの構成。

71
00:04:04,900 --> 00:04:07,896
この行列の乗算を数値的に実行することは、や

72
00:04:07,896 --> 00:04:10,620
はり 2 次元の場合と非常に似ています。

73
00:04:10,620 --> 00:04:16,081
実際、最後のビデオの理解度をテストする良い方法は、この行

74
00:04:16,081 --> 00:04:21,542
列の乗算が具体的に どのようなものであるかを推論して、そ

75
00:04:21,542 --> 00:04:25,443
れが空間内で 2 つの連続する変換を適

76
00:04:25,443 --> 00:04:30,904
用するというアイデアとどのように関連しているかを詳しく考

77
00:04:30,904 --> 00:04:32,660
えてみることです。

78
00:04:32,660 --> 00:04:32,660
次のビデオでは、決定要因について説明していきます。

