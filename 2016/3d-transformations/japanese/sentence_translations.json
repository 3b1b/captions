[
 {
  "input": "Hey folks, I've got a relatively quick video for you today, just sort of a footnote between chapters.",
  "translatedText": "皆さん、今日は比較的簡単なビデオをご用意 しました。 章間の脚注のようなものです。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 13.46,
  "end": 18.52
 },
 {
  "input": "In the last two videos I talked about linear transformations and matrices, but I only showed the specific case of transformations that take two-dimensional vectors to other two-dimensional vectors.",
  "translatedText": "最後の 2 つのビデオでは、線形変換と行列について 説明しましたが、2 次元ベクトルから他の 2 次元 ベクトルへの変換の具体的なケースのみを示しました。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 19.06,
  "end": 28.38
 },
 {
  "input": "The general throughout this series will work mainly in two dimensions, mostly because it's easier to actually see on the screen and wrap your mind around.",
  "translatedText": "このシリーズ全体を通して、主に 2 次元で動作します。 これは主に、実際に画面上で見て理解しやすいためです。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 28.92,
  "end": 36.06
 },
 {
  "input": "But more importantly than that, once you get all the core ideas in two dimensions, they carry over pretty seamlessly to higher dimensions.",
  "translatedText": "しかし、それよりも重要なことは、すべての核となるアイデアを 2 次元で取 得すると、それらは非常にシームレスに高次元に引き継がれるということです。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 36.5,
  "end": 42.8
 },
 {
  "input": "Nevertheless, it's good to peek our heads outside of flatland now and then to, you know, see what it means to apply these ideas in more than just those two dimensions.",
  "translatedText": "それでも、時々平地の外を覗いて、これらのアイデアを 2 つの次元以上 の側面に適用することが何を意味するのかを確認するのは良いことです。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 43.8,
  "end": 51.0
 },
 {
  "input": "For example, consider a linear transformation with three-dimensional vectors as inputs and three-dimensional vectors as outputs.",
  "translatedText": "たとえば、入力として 3 次元ベクトル、出力として 3 次元ベクトルを使用する線形変換を考えてみましょう。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 52.34,
  "end": 58.88
 },
 {
  "input": "We can visualize this by smooshing around all the points in three-dimensional space, as represented by a grid, in such a way that keeps the grid lines parallel and evenly spaced, and which fixes the origin in place.",
  "translatedText": "これは、グリッド線を平行かつ等間隔に保ち、原点を所定の位 置に固定する方法で、グリッドで表される 3 次元空間内 のすべての点の周囲を滑らかにすることで視覚化できます。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 60.16,
  "end": 72.52
 },
 {
  "input": "And just as with two dimensions, every point of space that we see moving around is really just a proxy for a vector who has its tip at that point, and what we're really doing is thinking about input vectors moving over to their corresponding outputs.",
  "translatedText": "そして、2 次元の場合と同じように、私たちが動き回っているのが見える空間のすべての 点は、実際にはその点に先端を持つベクトルの単なる代理であり、私たちが実際に行ってい るのは、入力ベクトルが対応する出力に移動することについて考えていることです。 。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 73.46,
  "end": 87.16
 },
 {
  "input": "And just as with two dimensions, one of these transformations is completely described by where the basis vectors go.",
  "translatedText": "そして、2 次元の場合と同様に、これらの変換の 1 つは 、基底ベクトルがどこに行くかによって完全に記述されます。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 87.9,
  "end": 93.56
 },
 {
  "input": "But now, there are three standard basis vectors that we typically use, the unit vector in the x direction, i-hat, the unit vector in the y direction, j-hat, and a new guy, the unit vector in the z direction, called k-hat.",
  "translatedText": "しかし現在、私たちが通常使用する 3 つの標準基底ベクトルがあります。 x 方向の単位ベクトル i-hat、y 方向の単位ベクトル j-hat、そ して新しいやつ、z 方向の単位ベクトルです。 、k-hatと呼ばれます。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 94.16,
  "end": 106.56
 },
 {
  "input": "In fact, I think it's easier to think about these transformations by only following those basis vectors, since the full 3D grid representing all points can get kind of messy.",
  "translatedText": "実際、すべての点を表す完全な 3D グリッドはやや乱雑になる可能性があるた め、基底ベクトルのみに従うことでこれらの変換を考える方が簡単だと思います。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 107.14,
  "end": 116.02
 },
 {
  "input": "By leaving a copy of the original axes in the background, we can think about the coordinates of where each of these three basis vectors lands.",
  "translatedText": "元の軸のコピーをバックグラウンドに残すことで、これら 3 つの 基底ベクトルのそれぞれが着地する座標を考えることができます。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 116.92,
  "end": 124.0
 },
 {
  "input": "Record the coordinates of these three vectors as the columns of a 3x3 matrix.",
  "translatedText": "これら 3 つのベクトルの座標を 3x3 行列の列として記録します。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 125.82,
  "end": 130.46
 },
 {
  "input": "This gives a matrix that completely describes the transformation using only nine numbers.",
  "translatedText": "これにより、9 つの数値のみを使用して変換を完全に記述する行列が得られます。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 131.26,
  "end": 136.16
 },
 {
  "input": "As a simple example, consider the transformation that rotates space 90 degrees around the y axis.",
  "translatedText": "簡単な例として、y 軸を中心に空間を 9 0 度回転する変換を考えてみましょう。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 137.2,
  "end": 143.96
 },
 {
  "input": "So that would mean that it takes i-hat to the coordinates 0, 0, negative 1 on the z axis.",
  "translatedText": "つまり、i-hat が z 軸上の座標 0、0 、マイナス 1 に移動することを意味します。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 144.86,
  "end": 150.1
 },
 {
  "input": "It doesn't move j-hat, so it stays at the coordinates 0, 1, 0.",
  "translatedText": "j-hat は移動しないので、座標 0、1、0 に留まります。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 150.82,
  "end": 154.28
 },
 {
  "input": "And then k-hat moves over to the x axis at 1, 0, 0.",
  "translatedText": "そして、k-hat は 1、0、0 の x 軸に移動します。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 154.88,
  "end": 158.84
 },
 {
  "input": "Those three sets of coordinates become the columns of a matrix that describes that rotation To see where a vector with coordinates x, y, z lands, the reasoning is almost identical to what it was for two dimensions.",
  "translatedText": "これら 3 つの座標セットは、その回転を説明する行列の列に なります。 座標 x、y、z を持つベクトルがどこに着地する かを確認するための推論は、2 次元の場合とほぼ同じです。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 160.99,
  "end": 176.22
 },
 {
  "input": "Each of those coordinates can be thought of as instructions for how to scale each basis vector so that they add together to get your vector.",
  "translatedText": "これらの各座標は、各基底ベクトルをスケーリングして加算してベ クトルを取得する方法についての指示と考えることができます。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 176.94,
  "end": 184.04
 },
 {
  "input": "And the important part, just like the 2D case, is that this scaling and adding process works both before and after the transformation.",
  "translatedText": "そして重要な部分は、2D の場合と同様に、このスケーリングと 追加のプロセスが変換の前後の両方で機能するということです。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 186.26,
  "end": 194.0
 },
 {
  "input": "So to see where your vector lands, you multiply those coordinates by the corresponding columns of the matrix, and then you add together the three results.",
  "translatedText": "したがって、ベクトルがどこに到達するかを確認するには、これら の座標に行列の対応する列を乗算し、3 つの結果を加算します。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 196.38,
  "end": 204.82
 },
 {
  "input": "Multiplying two matrices is also similar.",
  "translatedText": "2 つの行列の乗算も同様です。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 209.6,
  "end": 211.5
 },
 {
  "input": "Whenever you see two 3x3 matrices getting multiplied together, you should imagine first applying the transformation encoded by the right one, then applying the transformation encoded by the left one.",
  "translatedText": "2 つの 3x3 行列が乗算されるのを見るときは常に、最初に右 側の行列によってエンコードされた変換を適用し、次に左側の行列に よってエンコードされた変換を適用することを想像してください。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 212.02,
  "end": 223.26
 },
 {
  "input": "It turns out that 3D matrix multiplication is actually pretty important for fields like computer graphics and robotics, since things like rotations and three dimensions can be pretty hard to describe, but they're easier to wrap your mind around if you can break them down as the composition of separate, easier-to-think-about rotations.",
  "translatedText": "3D 行列の乗算は、コンピューター グラフィックスやロボット工学など の分野では実際に非常に重要であることがわかりました。 回転や 3 次元 などは説明するのが非常に難しいためです。 しかし、次のように分解できれ ば、理解しやすくなります。 別々の、考えやすいローテーションの構成。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 224.06,
  "end": 241.16
 },
 {
  "input": "Performing this matrix multiplication numerically is, once again, pretty similar to the two-dimensional case.",
  "translatedText": "この行列の乗算を数値的に実行することは、や はり 2 次元の場合と非常に似ています。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 244.36,
  "end": 249.86
 },
 {
  "input": "In fact, a good way to test your understanding of the last video would be to try to reason through what specifically this matrix multiplication should look like, thinking closely about how it relates to the idea of applying two successive transformations in space.",
  "translatedText": "実際、最後のビデオの理解度をテストする良い方法は、この行列の乗算が具体的に どのようなものであるかを推論して、それが空間内で 2 つの連続する変換を適 用するというアイデアとどのように関連しているかを詳しく考えてみることです。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 250.48,
  "end": 263.82
 },
 {
  "input": "In the next video, I'll start getting into the determinant.",
  "translatedText": "次のビデオでは、決定要因について説明していきます。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 272.14,
  "end": 274.5
 }
]