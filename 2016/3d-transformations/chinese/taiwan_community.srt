1
00:00:00,000 --> 00:00:03,760
3-維綫性變換 l 綫性代數精要

2
00:00:03,760 --> 00:00:05,860
莉莎：那麽，我爸爸在哪裏？

3
00:00:05,860 --> 00:00:10,800
Frink：嗯，這甚至應該對最笨的有著連Homer Simpson也沾上些邊的抛物綫拓撲學高級學位都是很明顯的

4
00:00:10,800 --> 00:00:11,800
...(一下子就停住了)...

5
00:00:11,800 --> 00:00:12,860
第三維空間。“

6
00:00:13,640 --> 00:00:16,460
嗨老鄉們今天我有一個很簡短的錄像給你們，

7
00:00:16,460 --> 00:00:18,960
只不過是在兩章之間的一個注解吧。

8
00:00:18,960 --> 00:00:20,400
在過去的兩個錄像裏我講過

9
00:00:20,410 --> 00:00:24,160
綫性變換和矩陣，但是我只演示了

10
00:00:24,160 --> 00:00:27,250
把一個2維矩陣施加到一個

11
00:00:27,250 --> 00:00:28,950
2-維矢量的特殊情況。

12
00:00:28,950 --> 00:00:30,950
在這整個系列中一般我們主要就

13
00:00:30,950 --> 00:00:32,250
用2-維的。

14
00:00:32,250 --> 00:00:36,160
大多數是因爲這更容易來真實地在屏幕

15
00:00:36,160 --> 00:00:37,620
上來看並給你有個概念，但更重要的是

16
00:00:37,620 --> 00:00:41,230
一旦你得到在2-維中所有的核心思想

17
00:00:41,230 --> 00:00:43,610
你可以毫無接縫地運用到更高維的空間。

18
00:00:43,610 --> 00:00:46,990
不管怎樣這總是好的現在從扁平的2-維把我們的頭伸出來然後來...

19
00:00:46,990 --> 00:00:52,181
你知道的看看把這些想法用到那些高于2-維的空間是什麽意思。

20
00:00:52,181 --> 00:00:56,761
例如，考慮一個綫性變換與一個3維的

21
00:00:56,761 --> 00:00:59,999
矢量作爲輸入而3-維的矢量作爲輸出。

22
00:01:00,160 --> 00:01:05,121
我們可以把這看作移動在以一個網格來代表的3-維空間中所有的點，

23
00:01:05,121 --> 00:01:09,300
以那樣一個方法使網格保持平行

24
00:01:09,300 --> 00:01:13,240
並間隔均等以及原點固定。

25
00:01:13,240 --> 00:01:17,380
就像在2維空間中一樣，我們看見在空間在移動著的點

26
00:01:17,380 --> 00:01:21,540
實際上只是一個矢量它的箭頭所在的點

27
00:01:21,540 --> 00:01:24,660
而我們真正在做的是在考慮一些輸入矢量

28
00:01:24,670 --> 00:01:27,690
*搬到*它們相對應的輸出

29
00:01:27,690 --> 00:01:29,339
并且只是和在2-維的一樣，

30
00:01:29,340 --> 00:01:33,860
這些變換中的一個完全是由基本矢量所去的來描述的。

31
00:01:33,860 --> 00:01:37,680
但是現在，這裏我們通常使用的有三個標準的基本矢量：

32
00:01:37,680 --> 00:01:40,260
在x-方向上的單位矢量，i-hat；

33
00:01:40,260 --> 00:01:42,940
在y-方向上的單位矢量，j-hat；

34
00:01:42,940 --> 00:01:46,889
而一個新的在z-方向上的單位矢量，叫做 k-hat。

35
00:01:46,889 --> 00:01:49,711
事實上，我認爲通過只跟隨下面那些基本的矢量

36
00:01:49,720 --> 00:01:52,340
來考慮這些變換是要更容易些

37
00:01:52,340 --> 00:01:56,760
因爲，用3-維網格代表的所有的點可以變得有點混亂。

38
00:01:56,760 --> 00:01:59,770
通過在背景中留一份原來的三個軸的副本，我們可以

39
00:01:59,770 --> 00:02:05,640
來思考這三個基本矢量停下來的坐標。

40
00:02:05,640 --> 00:02:11,330
記錄這三個矢量的坐標作爲一個3x3 矩陣的三個列。

41
00:02:11,330 --> 00:02:16,530
這就給出一個矩陣只用了9個數字就完全地描述了這個變換。

42
00:02:17,540 --> 00:02:21,420
作爲一個簡單的例子，想一下，

43
00:02:21,420 --> 00:02:24,760
一個變換圍著y-軸轉90度

44
00:02:24,760 --> 00:02:26,600
因此那會意味著它把i-hat

45
00:02:26,600 --> 00:02:30,760
搬到z-軸上，坐標[0,0,-1]，

46
00:02:30,760 --> 00:02:34,650
它沒有移動所以j-hat仍停在坐標[0,1,0]上

47
00:02:34,650 --> 00:02:40,930
然後k-hat移到x-軸上在[1,0,0]上。

48
00:02:40,930 --> 00:02:44,420
這三組坐標成爲一個矩陣的三個列

49
00:02:44,420 --> 00:02:48,300
而矩陣描述了那個轉動的變換。

50
00:02:49,860 --> 00:02:54,920
來看有XYZ坐標的矢量停在什麽地方的

51
00:02:54,920 --> 00:02:58,420
理由對2-維的那個幾乎是相同的--每個那些坐標可以想作

52
00:02:58,430 --> 00:03:00,760
怎樣來對每個基本矢量乘以係數的指令

53
00:03:00,760 --> 00:03:06,160
以便來得到你的輸出矢量。

54
00:03:06,160 --> 00:03:10,880
而像在2-維情況下一樣重要的部分是乘以係數和加法的過程

55
00:03:10,880 --> 00:03:15,200
在變換的之前和之後都行的。

56
00:03:16,020 --> 00:03:19,799
因此，要知道你的矢量停在什麽地方你

57
00:03:19,799 --> 00:03:22,890
乘上與矩陣相對應的列

58
00:03:22,890 --> 00:03:26,910
然後你把三個結果加在一起。

59
00:03:29,280 --> 00:03:31,780
兩個矩陣相乘意思相似的

60
00:03:31,780 --> 00:03:36,019
每當你看到兩個3x3矩陣相乘

61
00:03:36,019 --> 00:03:40,230
你應該想象先施加由右面的那個所編碼了的變換

62
00:03:40,230 --> 00:03:43,960
然後再施加由左面的那個所編碼了的變換。

63
00:03:43,960 --> 00:03:46,679
結果是3-維矩陣的乘法實際在像

64
00:03:46,680 --> 00:03:50,521
計算機圖像和機器人領域裏相當重要--

65
00:03:50,521 --> 00:03:54,480
因爲像在3-維中的轉動可以是很難來描述的，但是

66
00:03:54,480 --> 00:03:58,580
他們比較方便些在心裏能完全地來控制如果你可以把他們的合成分別地

67
00:03:58,580 --> 00:04:03,180
分解開來來考慮各種轉動。

68
00:04:04,400 --> 00:04:08,720
用數字來做這個矩陣的乘法，

69
00:04:08,720 --> 00:04:10,300
又是和2-維的情況一樣。

70
00:04:10,300 --> 00:04:12,800
事實上一個好辦法了測試你對前兩個

71
00:04:12,800 --> 00:04:16,840
錄像的理解就是特別地來試試

72
00:04:16,840 --> 00:04:20,980
這個矩陣乘法應該看上去像怎麽樣的

73
00:04:20,980 --> 00:04:25,760
仔細考慮一下和怎樣用兩個在空間裏連續變換的想法的關係。

74
00:04:32,240 --> 00:04:43,960
在下一個錄像中我將來講行列式。

