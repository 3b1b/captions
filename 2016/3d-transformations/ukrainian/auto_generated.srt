1
00:00:13,460 --> 00:00:16,709
Привіт, друзі, я маю для вас сьогодні відносно швидке відео, 

2
00:00:16,709 --> 00:00:18,520
просто ніби виноску між розділами.

3
00:00:19,060 --> 00:00:22,632
У двох останніх відео я говорив про лінійні перетворення та матриці, 

4
00:00:22,632 --> 00:00:25,169
але показав лише конкретний випадок перетворень, 

5
00:00:25,169 --> 00:00:28,380
які перетворюють двовимірні вектори в інші двовимірні вектори.

6
00:00:28,920 --> 00:00:32,146
Загальне в цій серії працюватиме в основному у двох вимірах, 

7
00:00:32,146 --> 00:00:36,060
головним чином тому, що це легше побачити на екрані та охопити свою думку.

8
00:00:36,500 --> 00:00:40,443
Але важливіше те, що як тільки ви отримаєте всі основні ідеї у двох вимірах, 

9
00:00:40,443 --> 00:00:42,800
вони досить плавно переносяться у вищі виміри.

10
00:00:43,800 --> 00:00:47,400
Тим не менш, добре час від часу заглядати за межі рівнини, щоб, знаєте, 

11
00:00:47,400 --> 00:00:51,000
побачити, що означає застосовувати ці ідеї не тільки в цих двох вимірах.

12
00:00:52,340 --> 00:00:55,582
Наприклад, розглянемо лінійне перетворення з тривимірними 

13
00:00:55,582 --> 00:00:58,880
векторами як входами та тривимірними векторами як виходами.

14
00:01:00,160 --> 00:01:04,536
Ми можемо візуалізувати це, згладжуючи всі точки в тривимірному просторі, 

15
00:01:04,536 --> 00:01:08,262
представленому сіткою, таким чином, щоб лінії сітки залишалися 

16
00:01:08,262 --> 00:01:12,520
паралельними та рівномірними, і це фіксувало початок координат на місці.

17
00:01:13,460 --> 00:01:17,611
І так само, як у випадку з двома вимірами, кожна точка простору, яку ми бачимо, 

18
00:01:17,611 --> 00:01:22,178
що рухається, насправді є просто проксі для вектора, який має свою вершину в цій точці, 

19
00:01:22,178 --> 00:01:26,744
і що ми насправді робимо, це думаємо про те, як вхідні вектори рухаються до відповідних 

20
00:01:26,744 --> 00:01:27,160
виходів.

21
00:01:27,900 --> 00:01:32,170
І як і у випадку з двома вимірами, одне з цих перетворень повністю описується тим, 

22
00:01:32,170 --> 00:01:33,560
куди йдуть базисні вектори.

23
00:01:34,160 --> 00:01:38,463
Але тепер є три стандартні базисні вектори, які ми зазвичай використовуємо: 

24
00:01:38,463 --> 00:01:42,766
одиничний вектор у напрямку x, i-hat, одиничний вектор у напрямку y, j-hat, 

25
00:01:42,766 --> 00:01:46,560
і новий хлопець, одиничний вектор у напрямку z , називається k-hat.

26
00:01:47,140 --> 00:01:49,890
Насправді, я думаю, що легше думати про ці перетворення, 

27
00:01:49,890 --> 00:01:53,462
дотримуючись лише цих базисних векторів, оскільки повна тривимірна сітка, 

28
00:01:53,462 --> 00:01:56,020
що представляє всі точки, може стати дещо заплутаною.

29
00:01:56,920 --> 00:02:01,307
Залишивши копію оригінальних осей на задньому плані, ми можемо подумати про координати, 

30
00:02:01,307 --> 00:02:04,000
де приземляється кожен із цих трьох базисних векторів.

31
00:02:05,820 --> 00:02:10,460
Запишіть координати цих трьох векторів у вигляді стовпців матриці 3x3.

32
00:02:11,260 --> 00:02:16,160
Це дає матрицю, яка повністю описує перетворення, використовуючи лише дев’ять чисел.

33
00:02:17,200 --> 00:02:20,651
Як простий приклад розглянемо перетворення, яке 

34
00:02:20,651 --> 00:02:23,960
повертає простір на 90 градусів навколо осі y.

35
00:02:24,860 --> 00:02:30,100
Тож це означало б, що i-hat до координат 0, 0, мінус 1 на осі z.

36
00:02:30,820 --> 00:02:34,280
Він не рухається на j-hat, тому залишається в координатах 0, 1, 0.

37
00:02:34,880 --> 00:02:38,840
А потім k-hat переміщується до осі x на 1, 0, 0.

38
00:02:40,990 --> 00:02:46,817
Ці три набори координат стають стовпцями матриці, яка описує це обертання. 

39
00:02:46,817 --> 00:02:51,713
Щоб побачити, де приземляється вектор із координатами x, y, z, 

40
00:02:51,713 --> 00:02:56,220
міркування майже ідентичне тому, що було для двох вимірів.

41
00:02:56,940 --> 00:02:59,815
Кожну з цих координат можна розглядати як інструкцію щодо того, 

42
00:02:59,815 --> 00:03:02,961
як масштабувати кожен базисний вектор так, щоб вони складалися разом, 

43
00:03:02,961 --> 00:03:04,040
щоб отримати ваш вектор.

44
00:03:06,260 --> 00:03:09,783
І важливою частиною, як і у випадку 2D, є те, що процес 

45
00:03:09,783 --> 00:03:14,000
масштабування та додавання працює як до, так і після трансформації.

46
00:03:16,380 --> 00:03:19,340
Отже, щоб побачити, куди потрапляє ваш вектор, 

47
00:03:19,340 --> 00:03:24,820
ви множите ці координати на відповідні стовпці матриці, а потім додаєте три результати.

48
00:03:29,600 --> 00:03:31,500
Перемноження двох матриць також аналогічно.

49
00:03:32,020 --> 00:03:35,665
Щоразу, коли ви бачите дві матриці 3x3, які перемножуються, 

50
00:03:35,665 --> 00:03:39,007
вам слід уявити, що спочатку застосовано перетворення, 

51
00:03:39,007 --> 00:03:43,260
закодоване правою, а потім застосоване перетворення, закодоване лівою.

52
00:03:44,060 --> 00:03:49,086
Виявилося, що тривимірне множення матриць насправді є дуже важливим для таких галузей, 

53
00:03:49,086 --> 00:03:52,610
як комп’ютерна графіка та робототехніка, оскільки такі речі, 

54
00:03:52,610 --> 00:03:57,000
як обертання та тривимірність, досить важко описати, але їх легше осягнути, 

55
00:03:57,000 --> 00:04:01,160
якщо ви можете розбити їх як склад окремих, легших для уявлення ротацій.

56
00:04:04,359 --> 00:04:09,860
Чисельне виконання цього множення матриці знову ж таки дуже схоже на двовимірний випадок.

57
00:04:10,480 --> 00:04:14,638
Насправді, гарним способом перевірити ваше розуміння останнього відео було б 

58
00:04:14,638 --> 00:04:18,203
спробувати міркувати, як саме має виглядати це матричне множення, 

59
00:04:18,203 --> 00:04:22,577
уважно подумавши про те, як воно пов’язане з ідеєю застосування двох послідовних 

60
00:04:22,577 --> 00:04:23,820
перетворень у просторі.

61
00:04:32,140 --> 00:04:34,500
У наступному відео я почну вивчати визначник.

