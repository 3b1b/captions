1
00:00:00,000 --> 00:00:13,480
嘿大家！

2
00:00:13,480 --> 00:00:17,160
如果我必须选择一个主题，让线性代数中的所有其

3
00:00:17,160 --> 00:00:21,160
他主题都开始吸引人，并且学生第一次学习线性

4
00:00:21,160 --> 00:00:22,780
代数时往往会忘记这个主题，那么它就是这个。

5
00:00:22,780 --> 00:00:27,160
线性变换的思想及其与矩阵的关系。

6
00:00:27,160 --> 00:00:30,860
在本视频中，我将重点介绍这些变换在二维情况下的

7
00:00:30,860 --> 00:00:35,920
样子，以及它们与矩阵向量乘法的概念有何关系。

8
00:00:35,920 --> 00:00:40,320
特别是，我想向您展示一种不依赖

9
00:00:40,320 --> 00:00:43,200
于记忆的矩阵向量乘法思考方法。

10
00:00:43,200 --> 00:00:48,000
首先，我们来解析一下线性变换这个术语。

11
00:00:48,000 --> 00:00:50,500
转变本质上是功能的一个花哨的词。

12
00:00:50,500 --> 00:00:54,480
它接收输入并为每个输入输出一个输出。

13
00:00:54,480 --> 00:00:58,440
具体来说，在线性代数的背景下，我们喜欢考

14
00:00:58,440 --> 00:01:02,600
虑接受某个向量并输出另一个向量的变换。

15
00:01:02,600 --> 00:01:06,720
那么，如果它们的含义相同，为什么要使用“转换”一词而不是“函数”呢？

16
00:01:06,720 --> 00:01:11,920
嗯，它暗示了一种可视化这种输入-输出关系的某种方式。

17
00:01:11,920 --> 00:01:17,000
你看，理解向量函数的一个好方法是使用运动。

18
00:01:17,000 --> 00:01:22,200
如果转换将某个输入向量转换为某个输出向量

19
00:01:22,200 --> 00:01:25,840
，我们可以想象该输入向量移动到输出向量。

20
00:01:25,840 --> 00:01:30,360
然后，为了理解整个变换，我们可以想象观察每

21
00:01:30,360 --> 00:01:35,160
个可能的输入向量移动到其相应的输出向量。

22
00:01:35,160 --> 00:01:38,720
一次性考虑所有向量（每个向量

23
00:01:38,720 --> 00:01:39,720
都是一支箭头）真的很拥挤。

24
00:01:39,720 --> 00:01:44,040
因此，正如我在上一个视频中提到的，一个很好的技巧是将每

25
00:01:44,040 --> 00:01:48,200
个向量概念化为一个点，而不是箭头，即其尖端所在的点。

26
00:01:48,200 --> 00:01:52,160
这样，为了考虑将每个可能的输入向量转换为某个输出

27
00:01:52,160 --> 00:01:57,340
向量的变换，我们观察空间中的每个点移动到其他点。

28
00:01:57,340 --> 00:02:01,820
在二维变换的情况下，为了更好地了解变换的整体

29
00:02:01,820 --> 00:02:06,520
形状，我喜欢对无限网格上的所有点执行此操作。

30
00:02:06,520 --> 00:02:10,260
有时我还喜欢在后台保留网格的副本，以帮助

31
00:02:10,260 --> 00:02:15,020
跟踪所有内容相对于其开始位置的结束位置。

32
00:02:15,020 --> 00:02:19,620
你必须承认，围绕空间中所有点移

33
00:02:19,620 --> 00:02:21,940
动的各种变换的效果是美丽的。

34
00:02:21,940 --> 00:02:25,700
它给人一种空间本身被挤压和变形的感觉。

35
00:02:25,700 --> 00:02:30,560
正如您可以想象的那样，任意转换可能看起来非常复杂。

36
00:02:30,560 --> 00:02:34,820
但幸运的是，线性代数将自己限制为一种特殊类型

37
00:02:34,820 --> 00:02:39,580
的变换，这种变换更容易理解，称为线性变换。

38
00:02:39,580 --> 00:02:43,820
从视觉上来说，如果一个变换具有两个属性，那么它就是线性的。

39
00:02:43,860 --> 00:02:50,720
所有线条都必须保持直线而不会弯曲，并且原点必须保持固定。

40
00:02:50,720 --> 00:02:54,960
例如，这里不会是线性变换

41
00:02:54,960 --> 00:02:56,260
，因为线条都是弯曲的。

42
00:02:56,260 --> 00:03:00,900
这里的这个虽然保持了直线，但不

43
00:03:00,900 --> 00:03:02,800
是线性变换，因为它移动了原点。

44
00:03:02,800 --> 00:03:06,420
这里修复了原点，看起来可能使线条保持直线

45
00:03:06,420 --> 00:03:09,700
，但这只是因为我只显示水平和垂直网格线。

46
00:03:09,700 --> 00:03:13,740
当你看到它对对角线的作用时，你会发现它根

47
00:03:13,740 --> 00:03:16,920
本不是线性的，因为它使那条线变成了曲线。

48
00:03:16,920 --> 00:03:21,780
一般来说，您应该将线性变换视

49
00:03:21,780 --> 00:03:23,700
为保持网格线平行且均匀分布。

50
00:03:23,700 --> 00:03:28,300
一些线性变换很容易理解，例如绕原点的旋转。

51
00:03:28,300 --> 00:03:32,300
其他的则难以用语言来描述。

52
00:03:32,300 --> 00:03:36,100
那么您认为如何用数字来描述这些转变呢？

53
00:03:36,100 --> 00:03:40,700
比如说，如果你正在编写一些动画来制作一个教授该

54
00:03:40,700 --> 00:03:44,900
主题的视频，你会给计算机什么公式，以便如果你给

55
00:03:44,900 --> 00:03:48,600
它一个向量的坐标，它可以给你该向量落地的坐标？

56
00:03:48,600 --> 00:03:53,900
事实证明，您只需要记录两个基向量（i-hat 和 j

57
00:03:53,900 --> 00:03:57,580
-hat）各自的着陆点，其他所有内容都将随之而来。

58
00:03:57,580 --> 00:04:03,460
例如，考虑坐标为负 1, 2 的向量 v，这意味着它等

59
00:04:03,460 --> 00:04:09,200
于负 1 乘以 i-hat 加 2 乘以 j-hat。

60
00:04:09,200 --> 00:04:13,840
如果我们进行一些变换并跟踪所有这三个向量的走向，则网

61
00:04:13,840 --> 00:04:19,260
格线保持平行且均匀分布的属性会产生非常重要的结果。

62
00:04:19,260 --> 00:04:23,920
v 落地的位置将为负 1 乘以 i-hat 落

63
00:04:23,920 --> 00:04:26,180
地向量加上 2 乘以 j-hat 落地向量。

64
00:04:26,180 --> 00:04:30,680
换句话说，它开始时是 i-hat 和 j-hat 的

65
00:04:30,680 --> 00:04:35,720
某种线性组合，最终是这两个向量落地的相同线性组合。

66
00:04:35,720 --> 00:04:41,740
这意味着您可以仅根据 i-hat 和 j-hat 各自着陆的位置来推断 v 必须去的位置。

67
00:04:41,740 --> 00:04:45,220
这就是为什么我喜欢在后台保留原始网格的副本。

68
00:04:45,220 --> 00:04:49,960
对于此处显示的变换，我们可以读出 i-hat 落在坐标 1、负

69
00:04:49,960 --> 00:04:56,000
2 上，而 j-hat 落在 x 轴上的坐标 3、0 处。

70
00:04:56,000 --> 00:05:00,660
这意味着由负 1 i-hat 加上 2 乘以 j-hat 表示的向

71
00:05:00,660 --> 00:05:07,260
量最终为负 1 乘以向量 1、负 2 加上 2 乘以向量 3、0。

72
00:05:07,260 --> 00:05:14,720
将所有这些加在一起，您可以推断出它必须落在向量 5, 2 上。

73
00:05:14,720 --> 00:05:17,980
这是一个值得停下来思考的好点，因为它非常重要。

74
00:05:17,980 --> 00:05:23,100
现在，鉴于我实际上向您展示了完整的变换，

75
00:05:23,100 --> 00:05:25,980
您可以只查看 v 的坐标为 5, 2。

76
00:05:25,980 --> 00:05:30,260
但这里最酷的部分是，这为我们提供了一种技术，只要我们

77
00:05:30,260 --> 00:05:35,580
有 i-hat 和 j-hat 每个落地位置的记录，

78
00:05:35,580 --> 00:05:38,800
就可以推断出任何向量落地的位置，而无需观察转换本身。

79
00:05:38,800 --> 00:05:43,940
用更通用的坐标 x 和 y 写入向量，它将落在 x 乘以 i-hat 落在

80
00:05:43,940 --> 00:05:52,020
的向量上，1，负 2，加上 y 乘以 j-hat 落在的向量，3, 0。

81
00:05:52,020 --> 00:05:58,980
执行该求和，您会发现结果为 1x 加 3y，负 2x 加 0y。

82
00:05:58,980 --> 00:06:05,180
我给你任何向量，你可以使用这个公式告诉我该向量落在哪里。

83
00:06:05,180 --> 00:06:10,300
所有这些的意思是，二维线性变换完全由四个数

84
00:06:10,300 --> 00:06:15,320
字描述，即 i-hat 所在位置的两个坐标

85
00:06:15,320 --> 00:06:17,140
，以及 j-hat 所在位置的两个坐标。

86
00:06:17,140 --> 00:06:18,580
这不是很酷吗？

87
00:06:18,620 --> 00:06:24,260
通常将这些坐标打包到称为 2x2 矩阵的 2x

88
00:06:24,260 --> 00:06:29,060
2 数字网格中，您可以将其中的列解释为 i-h

89
00:06:29,060 --> 00:06:30,620
at 和 j-hat 各自所在的两个特殊向量。

90
00:06:30,620 --> 00:06:35,780
如果给定一个描述线性变换和某个特定向量的

91
00:06:35,780 --> 00:06:41,420
2x2 矩阵，并且您想知道该线性变换将该

92
00:06:41,420 --> 00:06:46,900
向量带到哪里，则可以获取向量的坐标，将它们

93
00:06:46,900 --> 00:06:48,280
乘以矩阵的相应列，然后把你得到的加起来。

94
00:06:48,280 --> 00:06:53,320
这与添加新基向量的缩放版本的想法相对应。

95
00:06:53,320 --> 00:06:59,080
让我们看看在最一般的情况下，

96
00:06:59,080 --> 00:07:01,080
矩阵有条目 A、B、C、D。

97
00:07:01,080 --> 00:07:05,180
请记住，该矩阵只是打包描述线

98
00:07:05,180 --> 00:07:06,800
性变换所需信息的一种方式。

99
00:07:06,800 --> 00:07:11,840
始终记住将第一列 AC 解释为第一个基向量落地的位

100
00:07:11,840 --> 00:07:17,660
置，将第二列 BD 解释为第二个基向量落地的位置。

101
00:07:17,660 --> 00:07:21,740
当我们将此变换应用于某个向量 x、y 时，您会得到什么？

102
00:07:21,740 --> 00:07:28,260
嗯，就是 x 乘以 AC 加 y 乘以 BD。

103
00:07:28,260 --> 00:07:34,440
把它们放在一起，你得到一个向量 Ax 加 By，Cx 加 Dy。

104
00:07:34,440 --> 00:07:38,980
当您将矩阵像函数一样放在向量的左侧时

105
00:07:38,980 --> 00:07:41,780
，您甚至可以将其定义为矩阵向量乘法。

106
00:07:41,780 --> 00:07:45,300
然后你可以让高中生记住这一点，而不

107
00:07:45,300 --> 00:07:48,460
向他们展示使其感觉直观的关键部分。

108
00:07:48,460 --> 00:07:52,580
但是，将这些列视为基向量的转换

109
00:07:52,580 --> 00:07:57,860
版本，并将结果视为这些向量的

110
00:07:57,860 --> 00:08:01,180
适当线性组合，不是更有趣吗？

111
00:08:01,180 --> 00:08:04,660
让我们练习描述一些矩阵线性变换。

112
00:08:04,660 --> 00:08:10,580
例如，如果我们将整个空间逆时针旋转 90 度，则 I-hat

113
00:08:10,580 --> 00:08:18,180
落在坐标 0, 1 上，J-hat 落在坐标负 1, 0 上。

114
00:08:18,180 --> 00:08:23,340
所以我们最终得到的矩阵有列 0、1，负列 1、0。

115
00:08:23,340 --> 00:08:27,720
要弄清楚任何向量旋转 90 度后会发

116
00:08:27,720 --> 00:08:31,660
生什么，只需将其坐标乘以该矩阵即可。

117
00:08:31,660 --> 00:08:35,140
这是一个有趣的变换，有一个特殊的名称，称为剪切。

118
00:08:35,140 --> 00:08:41,540
其中，I-hat 保持固定，因此矩阵的第一列是 1, 0，

119
00:08:41,540 --> 00:08:46,320
但 J-hat 移动到坐标 1, 1，成为矩阵的第二列。

120
00:08:46,320 --> 00:08:50,940
这里冒着多余的风险，弄清楚剪切如何变换

121
00:08:50,940 --> 00:08:56,000
给定向量可以归结为将该矩阵乘以该向量。

122
00:08:56,000 --> 00:09:00,300
假设我们想要反其道而行之，从一个矩阵开始，比如第 1,

123
00:09:00,300 --> 00:09:04,900
2 和 3, 1 列，我们想要推断出它的变换是什么样的。

124
00:09:04,900 --> 00:09:08,740
暂停一下，看看你是否能想象得到。

125
00:09:08,740 --> 00:09:16,140
一种方法是首先将 I-hat 移动到 1、2，然后将 J-hat

126
00:09:16,140 --> 00:09:22,100
移动到 3、1，始终以保持网格线平行且均匀分布的方式移动其余空间。

127
00:09:22,100 --> 00:09:26,840
如果 I-hat 和 J-hat 所落在的向量是线性相

128
00:09:26,840 --> 00:09:31,700
关的（如果您还记得上一个视频），这意味着一个是另一个的

129
00:09:31,700 --> 00:09:37,800
缩放版本，这意味着线性变换将所有 2D 空间压缩到这两

130
00:09:37,800 --> 00:09:45,060
个向量所在的线，也称为这两个线性相关向量的一维跨度。

131
00:09:45,060 --> 00:09:50,200
总而言之，线性变换是一种在空间中移动的方法，使

132
00:09:50,200 --> 00:09:54,600
得网格线保持平行且均匀分布，并且原点保持固定。

133
00:09:54,600 --> 00:09:59,120
轻率地说，这些变换只需使用少数数字

134
00:09:59,120 --> 00:10:03,120
即可描述，即每个基向量落地的坐标。

135
00:10:03,120 --> 00:10:07,840
矩阵为我们提供了一种描述这些变换的语言，

136
00:10:07,840 --> 00:10:13,280
其中列代表这些坐标，而矩阵向量乘法只是

137
00:10:13,280 --> 00:10:15,400
计算该变换对给定向量的作用的一种方法。

138
00:10:15,400 --> 00:10:20,000
这里重要的一点是，每次看到矩阵时，

139
00:10:20,000 --> 00:10:22,740
您都可以将其解释为某种空间变换。

140
00:10:22,780 --> 00:10:26,980
一旦你真正理解了这个想法，

141
00:10:26,980 --> 00:10:27,980
你就能够深入理解线性代数。

142
00:10:27,980 --> 00:10:32,820
几乎所有即将出现的主题，从矩阵乘法到行列

143
00:10:32,820 --> 00:10:37,860
式、基础变化、特征值，一旦您开始将矩阵视

144
00:10:37,860 --> 00:10:41,600
为空间变换，所有这些都会变得更容易理解。

145
00:10:41,600 --> 00:10:45,340
最直接的是，在下一个视频中

146
00:10:45,340 --> 00:10:46,340
，我将讨论两个矩阵相乘。

147
00:10:46,340 --> 00:10:47,340
回头见！

148
00:10:52,740 --> 00:10:54,740
感谢您的观看！

