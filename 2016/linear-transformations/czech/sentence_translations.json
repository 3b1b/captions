[
 {
  "input": "Hey everyone!",
  "translatedText": "Ahoj všichni!",
  "model": "DeepL",
  "time_range": [
   12.04,
   12.92
  ]
 },
 {
  "input": "If I had to choose just one topic that makes all of the others in linear algebra start to click, and which too often goes unlearned the first time a student takes linear algebra, it would be this one.",
  "translatedText": "Kdybych měl vybrat jen jedno téma, díky němuž všechny ostatní v lineární algebře začnou zapadat a které se studenti příliš často nenaučí hned při první lekci lineární algebry, bylo by to právě toto téma.",
  "model": "DeepL",
  "time_range": [
   13.32,
   22.28
  ]
 },
 {
  "input": "The idea of a linear transformation and its relation to matrices.",
  "translatedText": "Pojem lineární transformace a její vztah k maticím.",
  "model": "DeepL",
  "time_range": [
   22.7,
   26.2
  ]
 },
 {
  "input": "For this video, I'm just going to focus on what these transformations look like in the case of two dimensions, and how they relate to the idea of matrix vector multiplication.",
  "translatedText": "V tomto videu se zaměřím pouze na to, jak tyto transformace vypadají v případě dvou rozměrů a jak souvisejí s myšlenkou maticového násobení vektorů.",
  "model": "DeepL",
  "time_range": [
   26.95,
   35.06
  ]
 },
 {
  "input": "In particular, I want to show you a way to think about matrix vector multiplication that doesn't rely on memorization.",
  "translatedText": "Zejména vám chci ukázat způsob, jak přemýšlet o maticovém násobení vektorů, který nespočívá v memorování.",
  "model": "DeepL",
  "time_range": [
   35.88,
   42.08
  ]
 },
 {
  "input": "To start, let's just parse this term, linear transformation.",
  "translatedText": "Pro začátek si rozebereme tento pojem, lineární transformaci.",
  "model": "DeepL",
  "time_range": [
   43.16,
   46.58
  ]
 },
 {
  "input": "Transformation is essentially a fancy word for function.",
  "translatedText": "Transformace je v podstatě módní výraz pro funkci.",
  "model": "DeepL",
  "time_range": [
   47.42,
   49.88
  ]
 },
 {
  "input": "It's something that takes in inputs and spits out an output for each one.",
  "translatedText": "Je to něco, co přijímá vstupy a pro každý z nich vyplivne výstup.",
  "model": "DeepL",
  "time_range": [
   50.26,
   53.98
  ]
 },
 {
  "input": "Specifically, in the context of linear algebra, we like to think about transformations that take in some vector and spit out another vector.",
  "translatedText": "Konkrétně v kontextu lineární algebry bychom rádi uvažovali o transformacích, které přijmou nějaký vektor a vyplivnou jiný vektor.",
  "model": "DeepL",
  "time_range": [
   53.98,
   61.08
  ]
 },
 {
  "input": "So why use the word transformation instead of function if they mean the same thing?",
  "translatedText": "Proč tedy používat slovo transformace místo funkce, když znamenají totéž?",
  "model": "DeepL",
  "time_range": [
   62.5,
   66.38
  ]
 },
 {
  "input": "Well, it's to be suggestive of a certain way to visualize this input-output relation.",
  "translatedText": "No, je to proto, abychom naznačili určitý způsob vizualizace tohoto vztahu mezi vstupy a výstupy.",
  "model": "DeepL",
  "time_range": [
   67.12,
   71.34
  ]
 },
 {
  "input": "You see, a great way to understand functions of vectors is to use movement.",
  "translatedText": "Skvělým způsobem, jak pochopit funkce vektorů, je použití pohybu.",
  "model": "DeepL",
  "time_range": [
   71.86,
   75.8
  ]
 },
 {
  "input": "If a transformation takes some input vector to some output vector, we imagine that input vector moving over to the output vector.",
  "translatedText": "Pokud transformace přenáší nějaký vstupní vektor na nějaký výstupní vektor, představíme si, že se vstupní vektor přesune na výstupní vektor.",
  "model": "DeepL",
  "time_range": [
   76.78,
   84.86
  ]
 },
 {
  "input": "Then to understand the transformation as a whole, we might imagine watching every possible input vector move over to its corresponding output vector.",
  "translatedText": "Abychom pak pochopili transformaci jako celek, můžeme si představit, že sledujeme, jak se každý možný vstupní vektor přesouvá na odpovídající výstupní vektor.",
  "model": "DeepL",
  "time_range": [
   85.68,
   94.08
  ]
 },
 {
  "input": "It gets really crowded to think about all of the vectors all at once, each one as an arrow.",
  "translatedText": "Přemýšlet o všech vektorech najednou a o každém z nich jako o šipce je opravdu přeplněné.",
  "model": "DeepL",
  "time_range": [
   94.98,
   99.12
  ]
 },
 {
  "input": "So as I mentioned last video, a nice trick is to conceptualize each vector not as an arrow, but as a single point, the point where its tip sits.",
  "translatedText": "Jak jsem zmínil v minulém videu, pěkným trikem je představit si každý vektor nikoli jako šipku, ale jako jeden bod, bod, ve kterém se nachází jeho hrot.",
  "model": "DeepL",
  "time_range": [
   99.5,
   107.42
  ]
 },
 {
  "input": "That way, to think about a transformation taking every possible input vector to some output vector, we watch every point in space moving to some other point.",
  "translatedText": "Chceme-li tedy uvažovat o transformaci, která přenáší každý možný vstupní vektor na nějaký výstupní vektor, sledujeme, jak se každý bod v prostoru přesouvá do nějakého jiného bodu.",
  "model": "DeepL",
  "time_range": [
   108.03,
   116.34
  ]
 },
 {
  "input": "In the case of transformations in two dimensions, to get a better feel for the whole shape of the transformation, I like to do this with all of the points on an infinite grid.",
  "translatedText": "V případě dvourozměrných transformací, abych získal lepší představu o celém tvaru transformace, rád provádím tento postup se všemi body na nekonečné mřížce.",
  "model": "DeepL",
  "time_range": [
   117.22,
   125.78
  ]
 },
 {
  "input": "I also sometimes like to keep a copy of the grid in the background, just to help keep track of where everything ends up relative to where it starts.",
  "translatedText": "Někdy si také rád nechávám kopii mřížky na pozadí, abych měl přehled o tom, kde co skončí vzhledem k tomu, kde to začalo.",
  "model": "DeepL",
  "time_range": [
   126.56,
   132.84
  ]
 },
 {
  "input": "The effect for various transformations moving around all of the points in space is, you've got to admit, beautiful.",
  "translatedText": "Efekt pro různé transformace pohybující se kolem všech bodů v prostoru je, to musíte uznat, nádherný.",
  "model": "DeepL",
  "time_range": [
   134.46,
   141.08
  ]
 },
 {
  "input": "It gives the feeling of squishing and morphing space itself.",
  "translatedText": "Vytváří pocit mačkání a morfování samotného prostoru.",
  "model": "DeepL",
  "time_range": [
   141.88,
   144.64
  ]
 },
 {
  "input": "As you can imagine though, arbitrary transformations can look pretty complicated.",
  "translatedText": "Jak si ale dokážete představit, libovolné transformace mohou vypadat dost komplikovaně.",
  "model": "DeepL",
  "time_range": [
   145.6,
   149.92
  ]
 },
 {
  "input": "But luckily, linear algebra limits itself to a special type of transformation, ones that are easier to understand, called linear transformations.",
  "translatedText": "Lineární algebra se však naštěstí omezuje na speciální typ transformací, které jsou snáze pochopitelné a nazývají se lineární transformace.",
  "model": "DeepL",
  "time_range": [
   150.38,
   158.28
  ]
 },
 {
  "input": "Visually speaking, a transformation is linear if it has two properties.",
  "translatedText": "Z vizuálního hlediska je transformace lineární, pokud má dvě vlastnosti.",
  "model": "DeepL",
  "time_range": [
   159.12,
   163.06
  ]
 },
 {
  "input": "All lines must remain lines without getting curved, and the origin must remain fixed in place.",
  "translatedText": "Všechny čáry musí zůstat čarami, aniž by se zakřivily, a počátek musí zůstat na místě.",
  "model": "DeepL",
  "time_range": [
   163.7,
   169.6
  ]
 },
 {
  "input": "For example, this right here would not be a linear transformation, since the lines get all curvy.",
  "translatedText": "Například tento obrázek by nebyl lineární transformací, protože čáry jsou zakřivené.",
  "model": "DeepL",
  "time_range": [
   170.62,
   175.54
  ]
 },
 {
  "input": "And this one right here, although it keeps the lines straight, is not a linear transformation, because it moves the origin.",
  "translatedText": "A tato transformace, ačkoli zachovává přímky rovné, není lineární transformací, protože posouvá počátek.",
  "model": "DeepL",
  "time_range": [
   176.1,
   181.86
  ]
 },
 {
  "input": "This one here fixes the origin, and it might look like it keeps lines straight, but that's just because I'm only showing the horizontal and vertical grid lines.",
  "translatedText": "Tato opravuje počátek a může se zdát, že udržuje linie rovné, ale je to jen proto, že zobrazuji pouze vodorovné a svislé linie mřížky.",
  "model": "DeepL",
  "time_range": [
   182.68,
   189.24
  ]
 },
 {
  "input": "When you see what it does to a diagonal line, it becomes clear that it's not at all linear, since it turns that line all curvy.",
  "translatedText": "Když se podíváte, co to udělá s úhlopříčkou, je jasné, že to vůbec není lineární, protože se z ní stane křivka.",
  "model": "DeepL",
  "time_range": [
   189.54,
   195.32
  ]
 },
 {
  "input": "In general, you should think of linear transformations as keeping grid lines parallel and evenly spaced.",
  "translatedText": "Obecně byste měli lineární transformace chápat jako udržování rovnoběžných a rovnoměrně rozmístěných čar mřížky.",
  "model": "DeepL",
  "time_range": [
   196.76,
   202.24
  ]
 },
 {
  "input": "Some linear transformations are simple to think about, like rotations about the origin.",
  "translatedText": "Některé lineární transformace jsou jednoduché, například otáčení kolem počátku.",
  "model": "DeepL",
  "time_range": [
   203.4,
   207.54
  ]
 },
 {
  "input": "Others are a little trickier to describe with words.",
  "translatedText": "Jiné se slovy popisují trochu složitěji.",
  "model": "DeepL",
  "time_range": [
   208.12,
   210.6
  ]
 },
 {
  "input": "So, how do you think you could describe these transformations numerically?",
  "translatedText": "Jak si myslíte, že byste mohli tyto transformace numericky popsat?",
  "model": "DeepL",
  "time_range": [
   212.04,
   215.48
  ]
 },
 {
  "input": "If you were, say, programming some animations to make a video teaching the topic, what formula do you give the computer so that if you give it the coordinates of a vector, it can give you the coordinates of where that vector lands?",
  "translatedText": "Kdybyste například programovali nějaké animace, abyste vytvořili video s výukou tohoto tématu, jaký vzorec zadáte počítači, aby když mu zadáte souřadnice vektoru, mohl vám dát souřadnice místa, kde se tento vektor nachází?",
  "model": "DeepL",
  "time_range": [
   215.48,
   227.24
  ]
 },
 {
  "input": "It turns out that you only need to record where the two basis vectors, i-hat and j-hat, each land, and everything else will follow from that.",
  "translatedText": "Ukázalo se, že stačí zaznamenat, kde se nacházejí dva základní vektory, i-hat a j-hat, a vše ostatní z toho vyplývá.",
  "model": "DeepL",
  "time_range": [
   228.48,
   236.6
  ]
 },
 {
  "input": "For example, consider the vector v with coordinates negative 1, 2, meaning that it equals negative 1 times i-hat plus 2 times j-hat.",
  "translatedText": "Uvažujme například vektor v se souřadnicemi záporné 1, 2, což znamená, že se rovná zápornému 1 krát i-hat plus 2 krát j-hat.",
  "model": "DeepL",
  "time_range": [
   237.5,
   245.7
  ]
 },
 {
  "input": "If we play some transformation and follow where all three of these vectors go, the property that grid lines remain parallel and evenly spaced has a really important consequence.",
  "translatedText": "Pokud si zahrajeme na nějakou transformaci a budeme sledovat, kam všechny tři tyto vektory směřují, má vlastnost, že čáry mřížky zůstávají rovnoběžné a rovnoměrně rozmístěné, opravdu důležitý důsledek.",
  "model": "DeepL",
  "time_range": [
   248.68,
   258.3
  ]
 },
 {
  "input": "The place where v lands will be negative 1 times the vector where i-hat landed plus 2 times the vector where j-hat landed.",
  "translatedText": "Místo, kde přistane v, bude záporný jednonásobek vektoru, kde přistála i-čepice, plus dvojnásobek vektoru, kde přistála j-čepice.",
  "model": "DeepL",
  "time_range": [
   259.1,
   265.4
  ]
 },
 {
  "input": "In other words, it started off as a certain linear combination of i-hat and j-hat, and it ends up as that same linear combination of where those two vectors landed.",
  "translatedText": "Jinými slovy, začalo to jako určitá lineární kombinace i-hat a j-hat a skončí to jako stejná lineární kombinace toho, kam tyto dva vektory dopadly.",
  "model": "DeepL",
  "time_range": [
   265.98,
   274.58
  ]
 },
 {
  "input": "This means you can deduce where v must go based only on where i-hat and j-hat each land.",
  "translatedText": "To znamená, že můžete odvodit, kam musí jít v, pouze na základě toho, kam dopadne i-hat a j-hat.",
  "model": "DeepL",
  "time_range": [
   275.62,
   280.92
  ]
 },
 {
  "input": "This is why I like keeping a copy of the original grid in the background.",
  "translatedText": "Proto si rád nechávám kopii původní mřížky na pozadí.",
  "model": "DeepL",
  "time_range": [
   281.58,
   284.54
  ]
 },
 {
  "input": "For the transformation shown here, we can read off that i-hat lands on the coordinates 1, negative 2, and j-hat lands on the x-axis over at the coordinates 3, 0.",
  "translatedText": "Pro zde uvedenou transformaci můžeme odečíst, že i-čepice leží na souřadnicích 1, záporná 2 a j-čepice leží na ose x na souřadnicích 3, 0.",
  "model": "DeepL",
  "time_range": [
   285.08,
   294.94
  ]
 },
 {
  "input": "This means that the vector represented by negative 1 i-hat plus 2 times j-hat ends up at negative 1 times the vector 1, negative 2 plus 2 times the vector 3, 0.",
  "translatedText": "To znamená, že vektor reprezentovaný záporným 1 i-hat plus 2 krát j-hat končí na záporném 1 krát vektor 1, záporném 2 plus 2 krát vektor 3, 0.",
  "model": "DeepL",
  "time_range": [
   295.54,
   306.14
  ]
 },
 {
  "input": "Adding that all together, you can deduce that it has to land on the vector 5, 2.",
  "translatedText": "Když to všechno sečtete, můžete odvodit, že musí dopadnout na vektor 5, 2.",
  "model": "DeepL",
  "time_range": [
   307.1,
   311.68
  ]
 },
 {
  "input": "This is a good point to pause and ponder, because it's pretty important.",
  "translatedText": "Nad tímto bodem je dobré se pozastavit a zamyslet se, protože je dost důležitý.",
  "model": "DeepL",
  "time_range": [
   314.26,
   317.24
  ]
 },
 {
  "input": "Now, given that I'm actually showing you the full transformation, you could have just looked to see that v has the coordinates 5, 2.",
  "translatedText": "Vzhledem k tomu, že vám vlastně ukazuji celou transformaci, mohli jste se prostě podívat, že v má souřadnice 5, 2.",
  "model": "DeepL",
  "time_range": [
   318.52,
   325.28
  ]
 },
 {
  "input": "But the cool part here is that this gives us a technique to deduce where any vectors land so long as we have a record of where i-hat and j-hat each land without needing to watch the transformation itself.",
  "translatedText": "Skvělé je, že nám to umožňuje odvodit, kde se nacházejí libovolné vektory, pokud máme záznam o tom, kde se nacházejí i-hat a j-hat, aniž bychom museli sledovat samotnou transformaci.",
  "model": "DeepL",
  "time_range": [
   325.76,
   337.38
  ]
 },
 {
  "input": "Write the vector with more general coordinates, x and y, and it will land on x times the vector where i-hat lands, 1, negative 2, plus y times the vector where j-hat lands, 3, 0.",
  "translatedText": "Zapište vektor s obecnějšími souřadnicemi, x a y, a dopadne na x krát vektor, kde přistane i-čepice, 1, záporná 2, plus y krát vektor, kde přistane j-čepice, 3, 0.",
  "model": "DeepL",
  "time_range": [
   338.6,
   350.6
  ]
 },
 {
  "input": "Carrying out that sum, you see that it lands at 1x plus 3y, negative 2x plus 0y.",
  "translatedText": "Když tento součet provedete, zjistíte, že je to 1x plus 3y, záporné 2x plus 0y.",
  "model": "DeepL",
  "time_range": [
   351.86,
   358.1
  ]
 },
 {
  "input": "I give you any vector, and you can tell me where that vector lands using this formula.",
  "translatedText": "Zadám vám libovolný vektor a vy mi podle tohoto vzorce řeknete, kde se tento vektor nachází.",
  "model": "DeepL",
  "time_range": [
   358.74,
   363.58
  ]
 },
 {
  "input": "What all of this is saying is that a two-dimensional linear transformation is completely described by just four numbers, the two coordinates for where i-hat lands and the two coordinates for where j-hat lands.",
  "translatedText": "Z toho všeho vyplývá, že dvourozměrná lineární transformace je kompletně popsána pouhými čtyřmi čísly, dvěma souřadnicemi pro místo, kam dopadá i-čepice, a dvěma souřadnicemi pro místo, kam dopadá j-čepice.",
  "model": "DeepL",
  "time_range": [
   364.86,
   376.5
  ]
 },
 {
  "input": "Isn't that cool?",
  "translatedText": "Není to skvělé?",
  "model": "DeepL",
  "time_range": [
   377.08,
   377.64
  ]
 },
 {
  "input": "It's common to package these coordinates into a 2x2 grid of numbers called a 2x2 matrix, where you can interpret the columns as the two special vectors where i-hat and j-hat each land.",
  "translatedText": "Běžně se tyto souřadnice zabalí do mřížky 2x2 čísel zvané matice 2x2, jejíž sloupce lze interpretovat jako dva speciální vektory, v nichž se nachází i-hat a j-hat.",
  "model": "DeepL",
  "time_range": [
   378.38,
   389.64
  ]
 },
 {
  "input": "If you're given a 2x2 matrix describing a linear transformation and some specific vector, and you want to know where that linear transformation takes that vector, you can take the coordinates of the vector, multiply them by the corresponding columns of the matrix, then add together what you get.",
  "translatedText": "Pokud máte k dispozici matici 2x2 popisující lineární transformaci a nějaký konkrétní vektor a chcete vědět, kam tento vektor lineární transformací dojde, můžete vzít souřadnice vektoru, vynásobit je příslušnými sloupci matice a získané hodnoty sečíst.",
  "model": "DeepL",
  "time_range": [
   390.38,
   407.34
  ]
 },
 {
  "input": "This corresponds with the idea of adding the scaled versions of our new basis vectors.",
  "translatedText": "To odpovídá myšlence přidání škálovaných verzí našich nových bázových vektorů.",
  "model": "DeepL",
  "time_range": [
   408.18,
   412.72
  ]
 },
 {
  "input": "Let's see what this looks like in the most general case, where your matrix has entries A, B, C, D.",
  "translatedText": "Podívejme se, jak to vypadá v nejobecnějším případě, kdy má vaše matice položky A, B, C, D.",
  "model": "DeepL",
  "time_range": [
   414.72,
   420.54
  ]
 },
 {
  "input": "And remember, this matrix is just a way of packaging the information needed to describe a linear transformation.",
  "translatedText": "A nezapomeňte, že tato matice je pouze způsob, jak zabalit informace potřebné k popisu lineární transformace.",
  "model": "DeepL",
  "time_range": [
   421.1,
   426.24
  ]
 },
 {
  "input": "Always remember to interpret that first column, AC, as the place where the first basis vector lands, and that second column, BD, as the place where the second basis vector lands.",
  "translatedText": "Vždy si pamatujte, že první sloupec AC je místo, kam dopadá první základní vektor, a druhý sloupec BD je místo, kam dopadá druhý základní vektor.",
  "model": "DeepL",
  "time_range": [
   426.24,
   436.44
  ]
 },
 {
  "input": "When we apply this transformation to some vector xy, what do you get?",
  "translatedText": "Když tuto transformaci aplikujeme na nějaký vektor xy, co dostaneme?",
  "model": "DeepL",
  "time_range": [
   437.5,
   441.0
  ]
 },
 {
  "input": "Well, it'll be x times AC plus y times BD.",
  "translatedText": "No, bude to x krát AC plus y krát BD.",
  "model": "DeepL",
  "time_range": [
   442.06,
   446.98
  ]
 },
 {
  "input": "Putting this together, you get a vector Ax plus By, Cx plus Dy.",
  "translatedText": "Když to dáme dohromady, dostaneme vektor Ax plus By, Cx plus Dy.",
  "model": "DeepL",
  "time_range": [
   448.06,
   453.3
  ]
 },
 {
  "input": "You could even define this as matrix vector multiplication, when you put the matrix on the left of the vector like it's a function.",
  "translatedText": "Mohli byste to dokonce definovat jako maticové násobení vektorů, kdy matici umístíte vlevo od vektoru, jako by to byla funkce.",
  "model": "DeepL",
  "time_range": [
   453.98,
   460.94
  ]
 },
 {
  "input": "Then, you could make high schoolers memorize this without showing them the crucial part that makes it feel intuitive.",
  "translatedText": "Pak byste mohli nutit středoškoláky, aby se to naučili nazpaměť, aniž byste jim ukázali tu klíčovou část, díky níž je to intuitivní.",
  "model": "DeepL",
  "time_range": [
   461.66,
   466.62
  ]
 },
 {
  "input": "But, isn't it more fun to think about these columns as the transformed versions of your basis vectors, and to think about the result as the appropriate linear combination of those vectors?",
  "translatedText": "Není však zábavnější uvažovat o těchto sloupcích jako o transformovaných verzích vašich základních vektorů a o výsledku uvažovat jako o příslušné lineární kombinaci těchto vektorů?",
  "model": "DeepL",
  "time_range": [
   468.3,
   477.96
  ]
 },
 {
  "input": "Let's practice describing a few linear transformations with matrices.",
  "translatedText": "Procvičíme si popis několika lineárních transformací pomocí matic.",
  "model": "DeepL",
  "time_range": [
   480.72,
   483.78
  ]
 },
 {
  "input": "For example, if we rotate all of space 90 degrees counterclockwise, then i-hat lands on the coordinates 0, 1.",
  "translatedText": "Pokud například otočíme celý prostor o 90 stupňů proti směru hodinových ručiček, pak se i-hat ocitne na souřadnicích 0, 1.",
  "model": "DeepL",
  "time_range": [
   484.58,
   492.24
  ]
 },
 {
  "input": "And j-hat lands on the coordinates negative 1, 0.",
  "translatedText": "A j-hat přistane na souřadnicích záporných 1, 0.",
  "model": "DeepL",
  "time_range": [
   493.98,
   497.18
  ]
 },
 {
  "input": "So the matrix we end up with has columns 0, 1, negative 1, 0.",
  "translatedText": "Výsledná matice má tedy sloupce 0, 1, záporné 1, 0.",
  "model": "DeepL",
  "time_range": [
   497.98,
   501.96
  ]
 },
 {
  "input": "To figure out what happens to any vector after a 90-degree rotation, you could just multiply its coordinates by this matrix.",
  "translatedText": "Chcete-li zjistit, co se stane s libovolným vektorem po otočení o 90 stupňů, stačí vynásobit jeho souřadnice touto maticí.",
  "model": "DeepL",
  "time_range": [
   502.88,
   509.62
  ]
 },
 {
  "input": "Here's a fun transformation with a special name, called a shear.",
  "translatedText": "Zde je zábavná transformace se zvláštním názvem, která se nazývá střih.",
  "model": "DeepL",
  "time_range": [
   511.56,
   514.3
  ]
 },
 {
  "input": "In it, i-hat remains fixed, so the first column of the matrix is 1, 0.",
  "translatedText": "V něm zůstává i-hat pevný, takže první sloupec matice je 1, 0.",
  "model": "DeepL",
  "time_range": [
   515.0,
   519.16
  ]
 },
 {
  "input": "But j-hat moves over to the coordinates 1, 1, which become the second column of the matrix.",
  "translatedText": "J-hat se však přesune na souřadnice 1, 1, které se stanou druhým sloupcem matice.",
  "model": "DeepL",
  "time_range": [
   519.6,
   525.3
  ]
 },
 {
  "input": "And at the risk of being redundant here, figuring out how a shear transforms a given vector comes down to multiplying this matrix by that vector.",
  "translatedText": "Riskujeme, že budeme zbyteční, ale zjistit, jak smyková transformace transformuje daný vektor, znamená vynásobit tuto matici tímto vektorem.",
  "model": "DeepL",
  "time_range": [
   525.3,
   534.08
  ]
 },
 {
  "input": "Let's say we want to go the other way around, starting with a matrix, say with columns 1, 2 and 3, 1, and we want to deduce what its transformation looks like.",
  "translatedText": "Řekněme, že chceme postupovat opačně, tedy začít s maticí, řekněme se sloupci 1, 2 a 3, 1, a chceme odvodit, jak vypadá její transformace.",
  "model": "DeepL",
  "time_range": [
   535.76,
   544.52
  ]
 },
 {
  "input": "Pause and take a moment to see if you can imagine it.",
  "translatedText": "Zastavte se a zkuste si to představit.",
  "model": "DeepL",
  "time_range": [
   544.96,
   547.44
  ]
 },
 {
  "input": "One way to do this is to first move i-hat to 1, 2, then move j-hat to 3, 1.",
  "translatedText": "Jedním ze způsobů, jak toho dosáhnout, je nejprve přesunout i-hat na 1, 2 a poté j-hat na 3, 1.",
  "model": "DeepL",
  "time_range": [
   548.42,
   555.1
  ]
 },
 {
  "input": "Always moving the rest of space in such a way that keeps gridlines parallel and evenly spaced.",
  "translatedText": "Zbytek prostoru vždy přesouvejte tak, aby linie mřížky byly rovnoběžné a rovnoměrně rozmístěné.",
  "model": "DeepL",
  "time_range": [
   555.1,
   560.22
  ]
 },
 {
  "input": "If the vectors that i-hat and j-hat land on are linearly dependent, which, if you recall from last video, means that one is a scaled version of the other, it means that the linear transformation squishes all of 2D space onto the line where those two vectors sit, also known as the one-dimensional span of those two linearly dependent vectors.",
  "translatedText": "Pokud jsou vektory, na kterých leží i-hat a j-hat, lineárně závislé, což, pokud si vzpomínáte na minulé video, znamená, že jeden je zmenšenou verzí druhého, znamená to, že lineární transformace vmáčkne celý 2D prostor na přímku, na které leží tyto dva vektory, známou také jako jednorozměrné rozpětí těchto dvou lineárně závislých vektorů.",
  "model": "DeepL",
  "time_range": [
   561.68,
   582.42
  ]
 },
 {
  "input": "To sum up, linear transformations are a way to move around space such that gridlines remain parallel and evenly spaced, and such that the origin remains fixed.",
  "translatedText": "Lineární transformace představují způsob, jak se pohybovat v prostoru tak, aby linie mřížky zůstaly rovnoběžné a rovnoměrně rozmístěné a aby počátek zůstal pevný.",
  "model": "DeepL",
  "time_range": [
   584.42,
   593.94
  ]
 },
 {
  "input": "Delightfully, these transformations can be described using only a handful of numbers, the coordinates of where each basis vector lands.",
  "translatedText": "Je úžasné, že tyto transformace lze popsat pomocí pouhých několika čísel, souřadnic míst, kam dopadají jednotlivé bázové vektory.",
  "model": "DeepL",
  "time_range": [
   594.54,
   601.53
  ]
 },
 {
  "input": "Matrices give us a language to describe these transformations, where the columns represent those coordinates, and matrix-vector multiplication is just a way to compute what that transformation does to a given vector.",
  "translatedText": "Matice nám poskytují jazyk pro popis těchto transformací, kde sloupce představují tyto souřadnice, a násobení matice vektorem je pouze způsob, jak vypočítat, co tato transformace udělá s daným vektorem.",
  "model": "DeepL",
  "time_range": [
   602.76,
   614.66
  ]
 },
 {
  "input": "The important takeaway here is that every time you see a matrix, you can interpret it as a certain transformation of space.",
  "translatedText": "Důležitým poznatkem je, že pokaždé, když vidíte matici, můžete ji interpretovat jako určitou transformaci prostoru.",
  "model": "DeepL",
  "time_range": [
   615.36,
   621.88
  ]
 },
 {
  "input": "Once you really digest this idea, you're in a great position to understand linear algebra deeply.",
  "translatedText": "Jakmile tuto myšlenku skutečně vstřebáte, budete moci lineární algebře porozumět do hloubky.",
  "model": "DeepL",
  "time_range": [
   622.58,
   627.32
  ]
 },
 {
  "input": "Almost all of the topics coming up, from matrix multiplication to determinants, change of basis, eigenvalues, all of these will become easier to understand once you start thinking about matrices as transformations of space.",
  "translatedText": "Téměř všechna nadcházející témata, od násobení matic přes determinanty, změnu báze, vlastní čísla, budou snáze pochopitelná, jakmile začnete o maticích uvažovat jako o transformacích prostoru.",
  "model": "DeepL",
  "time_range": [
   627.66,
   640.56
  ]
 },
 {
  "input": "Most immediately, in the next video, I'll be talking about multiplying two matrices together.",
  "translatedText": "V příštím videu budu mluvit o násobení dvou matic dohromady.",
  "model": "DeepL",
  "time_range": [
   641.3,
   646.32
  ]
 }
]