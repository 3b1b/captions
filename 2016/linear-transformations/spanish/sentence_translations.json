[
 {
  "input": "Hey everyone!",
  "translatedText": "¡Hola a todos!",
  "n_reviews": 1
 },
 {
  "input": "If I had to choose just one topic that makes all of the others in linear algebra start to click, and which too often goes unlearned the first time a student takes linear algebra, it would be this one.",
  "translatedText": "Si tuviera que elegir solo un tema que hace que todos los demás en álgebra lineal comiencen a encajar, y que con demasiada frecuencia no se aprende la primera vez que un estudiante estudia álgebra lineal, sería este.",
  "n_reviews": 1
 },
 {
  "input": "The idea of a linear transformation and its relation to matrices.",
  "translatedText": "La idea de una transformación lineal y su relación con las matrices.",
  "n_reviews": 1
 },
 {
  "input": "For this video, I'm just going to focus on what these transformations look like in the case of two dimensions, and how they relate to the idea of matrix vector multiplication.",
  "translatedText": "Para este video, solo me concentraré en cómo se ven estas transformaciones en el caso de dos dimensiones y cómo se relacionan con la idea de la multiplicación de vectores matriciales.",
  "n_reviews": 1
 },
 {
  "input": "In particular, I want to show you a way to think about matrix vector multiplication that doesn't rely on memorization.",
  "translatedText": "En particular, quiero mostrarte una manera de pensar en la multiplicación de vectores de matrices que no dependa de la memorización.",
  "n_reviews": 1
 },
 {
  "input": "To start, let's just parse this term, linear transformation.",
  "translatedText": "Para empezar, analicemos este término, transformación lineal.",
  "n_reviews": 1
 },
 {
  "input": "Transformation is essentially a fancy word for function.",
  "translatedText": "Transformación es esencialmente una palabra elegante para función.",
  "n_reviews": 1
 },
 {
  "input": "It's something that takes in inputs and spits out an output for each one.",
  "translatedText": "Es algo que recibe entradas y genera una salida para cada una.",
  "n_reviews": 1
 },
 {
  "input": "Specifically, in the context of linear algebra, we like to think about transformations that take in some vector and spit out another vector.",
  "translatedText": "Específicamente, en el contexto del álgebra lineal, nos gusta pensar en transformaciones que toman algún vector y generan otro vector.",
  "n_reviews": 1
 },
 {
  "input": "So why use the word transformation instead of function if they mean the same thing?",
  "translatedText": "Entonces, ¿por qué utilizar la palabra transformación en lugar de función si significan lo mismo?",
  "n_reviews": 1
 },
 {
  "input": "Well, it's to be suggestive of a certain way to visualize this input-output relation.",
  "translatedText": "Bueno, debe sugerir una cierta manera de visualizar esta relación entrada-salida.",
  "n_reviews": 1
 },
 {
  "input": "You see, a great way to understand functions of vectors is to use movement.",
  "translatedText": "Verás, una excelente manera de comprender las funciones de los vectores es utilizar el movimiento.",
  "n_reviews": 1
 },
 {
  "input": "If a transformation takes some input vector to some output vector, we imagine that input vector moving over to the output vector.",
  "translatedText": "Si una transformación lleva algún vector de entrada a algún vector de salida, imaginamos que ese vector de entrada se mueve hacia el vector de salida.",
  "n_reviews": 1
 },
 {
  "input": "Then to understand the transformation as a whole, we might imagine watching every possible input vector move over to its corresponding output vector.",
  "translatedText": "Luego, para comprender la transformación en su conjunto, podríamos imaginarnos observar cómo cada posible vector de entrada se mueve hacia su correspondiente vector de salida.",
  "n_reviews": 1
 },
 {
  "input": "It gets really crowded to think about all of the vectors all at once, each one as an arrow.",
  "translatedText": "Se vuelve muy abrumador pensar en todos los vectores a la vez, cada uno como una flecha.",
  "n_reviews": 1
 },
 {
  "input": "So as I mentioned last video, a nice trick is to conceptualize each vector not as an arrow, but as a single point, the point where its tip sits.",
  "translatedText": "Entonces, como mencioné en el último video, un buen truco es conceptualizar cada vector no como una flecha, sino como un punto único, el punto donde se encuentra su punta.",
  "n_reviews": 1
 },
 {
  "input": "That way, to think about a transformation taking every possible input vector to some output vector, we watch every point in space moving to some other point.",
  "translatedText": "De esa manera, para pensar en una transformación que lleva cada vector de entrada posible a algún vector de salida, observamos cómo cada punto en el espacio se mueve hacia algún otro punto.",
  "n_reviews": 1
 },
 {
  "input": "In the case of transformations in two dimensions, to get a better feel for the whole shape of the transformation, I like to do this with all of the points on an infinite grid.",
  "translatedText": "En el caso de transformaciones en dos dimensiones, para tener una mejor idea de la forma completa de la transformación, me gusta hacer esto con todos los puntos en una cuadrícula infinita.",
  "n_reviews": 1
 },
 {
  "input": "I also sometimes like to keep a copy of the grid in the background, just to help keep track of where everything ends up relative to where it starts.",
  "translatedText": "A veces también me gusta mantener una copia de la cuadrícula en segundo plano, solo para ayudar a realizar un seguimiento de dónde termina todo en relación con dónde comienza.",
  "n_reviews": 1
 },
 {
  "input": "The effect for various transformations moving around all of the points in space is, you've got to admit, beautiful.",
  "translatedText": "El efecto de varias transformaciones que se mueven por todos los puntos del espacio es, hay que admitirlo, hermoso.",
  "n_reviews": 1
 },
 {
  "input": "It gives the feeling of squishing and morphing space itself.",
  "translatedText": "Da la sensación de aplastar y transformar el espacio mismo.",
  "n_reviews": 1
 },
 {
  "input": "As you can imagine though, arbitrary transformations can look pretty complicated.",
  "translatedText": "Sin embargo, como puedes imaginar, las transformaciones arbitrarias pueden parecer bastante complicadas.",
  "n_reviews": 1
 },
 {
  "input": "But luckily, linear algebra limits itself to a special type of transformation, ones that are easier to understand, called linear transformations.",
  "translatedText": "Pero, afortunadamente, el álgebra lineal se limita a un tipo especial de transformación, más fácil de entender, llamada transformaciones lineales.",
  "n_reviews": 1
 },
 {
  "input": "Visually speaking, a transformation is linear if it has two properties.",
  "translatedText": "Visualmente hablando, una transformación es lineal si tiene dos propiedades.",
  "n_reviews": 1
 },
 {
  "input": "All lines must remain lines without getting curved, and the origin must remain fixed in place.",
  "translatedText": "Todas las líneas deben seguir siendo líneas rectas sin curvarse y el origen debe permanecer fijo en su lugar.",
  "n_reviews": 1
 },
 {
  "input": "For example, this right here would not be a linear transformation, since the lines get all curvy.",
  "translatedText": "Por ejemplo, esto de aquí no sería una transformación lineal, ya que las líneas se vuelven curvas.",
  "n_reviews": 1
 },
 {
  "input": "And this one right here, although it keeps the lines straight, is not a linear transformation, because it moves the origin.",
  "translatedText": "Y ésta de aquí, aunque mantiene las líneas rectas, no es una transformación lineal, porque mueve el origen.",
  "n_reviews": 1
 },
 {
  "input": "This one here fixes the origin, and it might look like it keeps lines straight, but that's just because I'm only showing the horizontal and vertical grid lines.",
  "translatedText": "Esta de aquí fija el origen, y podría parecer que mantiene las líneas rectas, pero eso es sólo porque solo estoy mostrando las líneas de la cuadrícula horizontal y vertical.",
  "n_reviews": 1
 },
 {
  "input": "When you see what it does to a diagonal line, it becomes clear that it's not at all linear, since it turns that line all curvy.",
  "translatedText": "Cuando ves lo que le hace a una línea diagonal, queda claro que no es en absoluto lineal, ya que convierte esa línea en una curva.",
  "n_reviews": 1
 },
 {
  "input": "In general, you should think of linear transformations as keeping grid lines parallel and evenly spaced.",
  "translatedText": "En general, debes pensar que las transformaciones lineales mantienen las líneas de la cuadrícula paralelas y espaciadas uniformemente.",
  "n_reviews": 1
 },
 {
  "input": "Some linear transformations are simple to think about, like rotations about the origin.",
  "translatedText": "Es sencillo pensar en algunas transformaciones lineales, como las rotaciones alrededor del origen.",
  "n_reviews": 1
 },
 {
  "input": "Others are a little trickier to describe with words.",
  "translatedText": "Otras son un poco más complicados de describir con palabras.",
  "n_reviews": 1
 },
 {
  "input": "So, how do you think you could describe these transformations numerically?",
  "translatedText": "Entonces, ¿cómo crees que se podrían describir numéricamente estas transformaciones?",
  "n_reviews": 1
 },
 {
  "input": "If you were, say, programming some animations to make a video teaching the topic, what formula do you give the computer so that if you give it the coordinates of a vector, it can give you the coordinates of where that vector lands?",
  "translatedText": "Si estuviera, digamos, programando algunas animaciones para hacer un video que enseñe el tema, ¿qué fórmula le daría a la computadora para que, si le da las coordenadas de un vector, pueda darle las coordenadas de dónde aterriza ese vector?",
  "n_reviews": 1
 },
 {
  "input": "It turns out that you only need to record where the two basis vectors, i-hat and j-hat, each land, and everything else will follow from that.",
  "translatedText": "Resulta que solo necesitas registrar dónde aterrizan cada uno de los dos vectores base, i-hat y j-hat, y todo lo demás se derivará de eso.",
  "n_reviews": 1
 },
 {
  "input": "For example, consider the vector v with coordinates negative 1, 2, meaning that it equals negative 1 times i-hat plus 2 times j-hat.",
  "translatedText": "Por ejemplo, considere el vector v con coordenadas menos 1, 2, lo que significa que es igual a menos 1 por i-hat más 2 por j-hat.",
  "n_reviews": 1
 },
 {
  "input": "If we play some transformation and follow where all three of these vectors go, the property that grid lines remain parallel and evenly spaced has a really important consequence.",
  "translatedText": "Si realizamos alguna transformación y seguimos hacia dónde van estos tres vectores, la propiedad de que las líneas de la cuadrícula permanezcan paralelas y espaciadas uniformemente tiene una consecuencia realmente importante.",
  "n_reviews": 1
 },
 {
  "input": "The place where v lands will be negative 1 times the vector where i-hat landed plus 2 times the vector where j-hat landed.",
  "translatedText": "El lugar donde aterriza v será menos 1 vez el vector donde aterrizó i-hat más 2 veces el vector donde aterrizó j-hat.",
  "n_reviews": 1
 },
 {
  "input": "In other words, it started off as a certain linear combination of i-hat and j-hat, and it ends up as that same linear combination of where those two vectors landed.",
  "translatedText": "En otras palabras, comenzó como una cierta combinación lineal de i-hat y j-hat, y termina como la misma combinación lineal donde aterrizaron esos dos vectores.",
  "n_reviews": 1
 },
 {
  "input": "This means you can deduce where v must go based only on where i-hat and j-hat each land.",
  "translatedText": "Esto significa que puedes deducir dónde debe ir v basándose únicamente en dónde aterrizan i-hat y j-hat.",
  "n_reviews": 1
 },
 {
  "input": "This is why I like keeping a copy of the original grid in the background.",
  "translatedText": "Por eso me gusta mantener una copia de la cuadrícula original en segundo plano.",
  "n_reviews": 1
 },
 {
  "input": "For the transformation shown here, we can read off that i-hat lands on the coordinates 1, negative 2, and j-hat lands on the x-axis over at the coordinates 3, 0.",
  "translatedText": "Para la transformación que se muestra aquí, podemos leer que i-hat aterriza en las coordenadas 1, menos 2 y j-hat aterriza en el eje x en las coordenadas 3, 0.",
  "n_reviews": 1
 },
 {
  "input": "This means that the vector represented by negative 1 i-hat plus 2 times j-hat ends up at negative 1 times the vector 1, negative 2 plus 2 times the vector 3, 0.",
  "translatedText": "Esto significa que el vector representado por menos 1 i-hat más 2 por j-hat termina en menos 1 por el vector 1, menos 2 más 2 por el vector 3, 0.",
  "n_reviews": 1
 },
 {
  "input": "Adding that all together, you can deduce that it has to land on the vector 5, 2.",
  "translatedText": "Sumando todo eso, puedes deducir que tiene que aterrizar en el vector 5, 2.",
  "n_reviews": 1
 },
 {
  "input": "This is a good point to pause and ponder, because it's pretty important.",
  "translatedText": "Este es un buen punto para hacer una pausa y reflexionar, porque es bastante importante.",
  "n_reviews": 1
 },
 {
  "input": "Now, given that I'm actually showing you the full transformation, you could have just looked to see that v has the coordinates 5, 2.",
  "translatedText": "Ahora, dado que en realidad te estoy mostrando la transformación completa, podrías haber mirado para ver que v tiene las coordenadas 5, 2.",
  "n_reviews": 1
 },
 {
  "input": "But the cool part here is that this gives us a technique to deduce where any vectors land so long as we have a record of where i-hat and j-hat each land without needing to watch the transformation itself.",
  "translatedText": "Pero lo interesante aquí es que esto nos brinda una técnica para deducir dónde aterrizan los vectores siempre que tengamos un registro de dónde aterrizan i-hat y j-hat sin necesidad de observar la transformación en sí.",
  "n_reviews": 1
 },
 {
  "input": "Write the vector with more general coordinates, x and y, and it will land on x times the vector where i-hat lands, 1, negative 2, plus y times the vector where j-hat lands, 3, 0.",
  "translatedText": "Escribe el vector con coordenadas más generales, x e y, y aterrizará en x multiplicado por el vector donde aterriza i-hat, 1, menos 2, más y multiplicado por el vector donde aterriza j-hat, 3, 0.",
  "n_reviews": 1
 },
 {
  "input": "Carrying out that sum, you see that it lands at 1x plus 3y, negative 2x plus 0y.",
  "translatedText": "Al realizar esa suma, ves que llega a 1x más 3y, menos 2x más 0y.",
  "n_reviews": 1
 },
 {
  "input": "I give you any vector, and you can tell me where that vector lands using this formula.",
  "translatedText": "Te doy cualquier vector y puedes decirme dónde aterriza ese vector usando esta fórmula.",
  "n_reviews": 1
 },
 {
  "input": "What all of this is saying is that a two-dimensional linear transformation is completely described by just four numbers, the two coordinates for where i-hat lands and the two coordinates for where j-hat lands.",
  "translatedText": "Lo que todo esto quiere decir es que una transformación lineal bidimensional se describe completamente con solo cuatro números, las dos coordenadas de dónde aterriza i-hat y las dos coordenadas de dónde aterriza j-hat.",
  "n_reviews": 1
 },
 {
  "input": "Isn't that cool?",
  "translatedText": "¿No es genial?",
  "n_reviews": 1
 },
 {
  "input": "It's common to package these coordinates into a 2x2 grid of numbers called a 2x2 matrix, where you can interpret the columns as the two special vectors where i-hat and j-hat each land.",
  "translatedText": "Es común empaquetar estas coordenadas en una cuadrícula de números de 2x2 llamada matriz de 2x2, donde puedes interpretar las columnas como los dos vectores especiales donde i-hat y j-hat aterrizan.",
  "n_reviews": 1
 },
 {
  "input": "If you're given a 2x2 matrix describing a linear transformation and some specific vector, and you want to know where that linear transformation takes that vector, you can take the coordinates of the vector, multiply them by the corresponding columns of the matrix, then add together what you get.",
  "translatedText": "Si te dan una matriz de 2x2 que describe una transformación lineal y algún vector específico, y quieres saber a dónde lleva esa transformación lineal a ese vector, puedes tomar las coordenadas del vector, multiplicarlas por las columnas correspondientes de la matriz, luego suma lo que obtienes.",
  "n_reviews": 1
 },
 {
  "input": "This corresponds with the idea of adding the scaled versions of our new basis vectors.",
  "translatedText": "Esto corresponde con la idea de agregar las versiones escaladas de nuestros nuevos vectores base.",
  "n_reviews": 1
 },
 {
  "input": "Let's see what this looks like in the most general case, where your matrix has entries A, B, C, D.",
  "translatedText": "Veamos cómo se ve esto en el caso más general, donde tu matriz tiene entradas A, B, C, D.",
  "n_reviews": 1
 },
 {
  "input": "And remember, this matrix is just a way of packaging the information needed to describe a linear transformation.",
  "translatedText": "Y recuerda, esta matriz es sólo una forma de empaquetar la información necesaria para describir una transformación lineal.",
  "n_reviews": 1
 },
 {
  "input": "Always remember to interpret that first column, AC, as the place where the first basis vector lands, and that second column, BD, as the place where the second basis vector lands.",
  "translatedText": "Recuerda siempre interpretar esa primera columna, AC, como el lugar donde aterriza el primer vector base, y esa segunda columna, BD, como el lugar donde aterriza el segundo vector base.",
  "n_reviews": 1
 },
 {
  "input": "When we apply this transformation to some vector xy, what do you get?",
  "translatedText": "Cuando aplicamos esta transformación a algún vector xy, ¿qué obtienes?",
  "n_reviews": 1
 },
 {
  "input": "Well, it'll be x times AC plus y times BD.",
  "translatedText": "Bueno, será x veces AC más y veces BD.",
  "n_reviews": 1
 },
 {
  "input": "Putting this together, you get a vector Ax plus By, Cx plus Dy.",
  "translatedText": "Al juntar esto, se obtiene un vector Ax más By, Cx más Dy.",
  "n_reviews": 1
 },
 {
  "input": "You could even define this as matrix vector multiplication, when you put the matrix on the left of the vector like it's a function.",
  "translatedText": "Incluso podrías definir esto como multiplicación de vectores de matrices, cuando colocas la matriz a la izquierda del vector como si fuera una función.",
  "n_reviews": 1
 },
 {
  "input": "Then, you could make high schoolers memorize this without showing them the crucial part that makes it feel intuitive.",
  "translatedText": "Luego, podrías hacer que los estudiantes de secundaria memoricen esto sin mostrarles la parte crucial que lo hace sentir intuitivo.",
  "n_reviews": 1
 },
 {
  "input": "But, isn't it more fun to think about these columns as the transformed versions of your basis vectors, and to think about the result as the appropriate linear combination of those vectors?",
  "translatedText": "Pero, ¿no es más divertido pensar en estas columnas como las versiones transformadas de sus vectores base y pensar en el resultado como la combinación lineal apropiada de esos vectores?",
  "n_reviews": 1
 },
 {
  "input": "Let's practice describing a few linear transformations with matrices.",
  "translatedText": "Practiquemos describiendo algunas transformaciones lineales con matrices.",
  "n_reviews": 1
 },
 {
  "input": "For example, if we rotate all of space 90 degrees counterclockwise, then i-hat lands on the coordinates 0, 1.",
  "translatedText": "Por ejemplo, si rotamos todo el espacio 90 grados en el sentido contrario a las agujas del reloj, entonces i-hat aterriza en las coordenadas 0, 1.",
  "n_reviews": 1
 },
 {
  "input": "And j-hat lands on the coordinates negative 1, 0.",
  "translatedText": "Y j-hat aterriza en las coordenadas negativas 1, 0.",
  "n_reviews": 1
 },
 {
  "input": "So the matrix we end up with has columns 0, 1, negative 1, 0.",
  "translatedText": "Entonces la matriz con la que terminamos tiene columnas 0, 1, 1 negativo, 0.",
  "n_reviews": 1
 },
 {
  "input": "To figure out what happens to any vector after a 90-degree rotation, you could just multiply its coordinates by this matrix.",
  "translatedText": "Para descubrir qué le sucede a cualquier vector después de una rotación de 90 grados, simplemente puedes multiplicar sus coordenadas por esta matriz.",
  "n_reviews": 1
 },
 {
  "input": "Here's a fun transformation with a special name, called a shear.",
  "translatedText": "Aquí hay una transformación divertida con un nombre especial, llamado cizalla.",
  "n_reviews": 1
 },
 {
  "input": "In it, i-hat remains fixed, so the first column of the matrix is 1, 0.",
  "translatedText": "En él, i-hat permanece fijo, por lo que la primera columna de la matriz es 1, 0.",
  "n_reviews": 1
 },
 {
  "input": "But j-hat moves over to the coordinates 1, 1, which become the second column of the matrix.",
  "translatedText": "Pero j-hat pasa a las coordenadas 1, 1, que se convierten en la segunda columna de la matriz.",
  "n_reviews": 1
 },
 {
  "input": "And at the risk of being redundant here, figuring out how a shear transforms a given vector comes down to multiplying this matrix by that vector.",
  "translatedText": "Y con riesgo de ser redundante aquí, descubrir cómo una cizalla transforma un vector dado se reduce a multiplicar esta matriz por ese vector.",
  "n_reviews": 1
 },
 {
  "input": "Let's say we want to go the other way around, starting with a matrix, say with columns 1, 2 and 3, 1, and we want to deduce what its transformation looks like.",
  "translatedText": "Digamos que queremos hacer lo contrario, comenzando con una matriz, digamos con las columnas 1, 2 y 3, 1, y queremos deducir cómo se ve su transformación.",
  "n_reviews": 1
 },
 {
  "input": "Pause and take a moment to see if you can imagine it.",
  "translatedText": "Haz una pausa y tómate un momento para ver si puedes imaginarlo.",
  "n_reviews": 1
 },
 {
  "input": "One way to do this is to first move i-hat to 1, 2, then move j-hat to 3, 1.",
  "translatedText": "Una forma de hacer esto es mover primero i-hat a 1, 2, luego mover j-hat a 3, 1.",
  "n_reviews": 1
 },
 {
  "input": "Always moving the rest of space in such a way that keeps gridlines parallel and evenly spaced.",
  "translatedText": "Siempre moviendo el resto del espacio de tal manera que mantenga las líneas de la cuadrícula paralelas y espaciadas uniformemente.",
  "n_reviews": 1
 },
 {
  "input": "If the vectors that i-hat and j-hat land on are linearly dependent, which, if you recall from last video, means that one is a scaled version of the other, it means that the linear transformation squishes all of 2D space onto the line where those two vectors sit, also known as the one-dimensional span of those two linearly dependent vectors.",
  "translatedText": "Si los vectores en los que aterrizan i-hat y j-hat son linealmente dependientes, lo que, si recuerdas el último video, significa que uno es una versión escalada del otro, significa que la transformación lineal aplasta todo el espacio 2D en el línea donde se encuentran esos dos vectores, también conocida como el espacio generado unidimensional de esos dos vectores linealmente dependientes.",
  "n_reviews": 1
 },
 {
  "input": "To sum up, linear transformations are a way to move around space such that gridlines remain parallel and evenly spaced, and such that the origin remains fixed.",
  "translatedText": "En resumen, las transformaciones lineales son una forma de manipular el espacio de manera que las líneas de la cuadrícula permanezcan paralelas y espaciadas uniformemente, y de modo que el origen permanezca fijo.",
  "n_reviews": 1
 },
 {
  "input": "Delightfully, these transformations can be described using only a handful of numbers, the coordinates of where each basis vector lands.",
  "translatedText": "Afortunadamente, estas transformaciones se pueden describir usando solo un puñado de números, las coordenadas donde aterriza cada vector base.",
  "n_reviews": 1
 },
 {
  "input": "Matrices give us a language to describe these transformations, where the columns represent those coordinates, and matrix-vector multiplication is just a way to compute what that transformation does to a given vector.",
  "translatedText": "Las matrices nos brindan un lenguaje para describir estas transformaciones, donde las columnas representan esas coordenadas, y la multiplicación matriz-vector es solo una forma de calcular lo que esa transformación le hace a un vector dado.",
  "n_reviews": 1
 },
 {
  "input": "The important takeaway here is that every time you see a matrix, you can interpret it as a certain transformation of space.",
  "translatedText": "Lo importante aquí es que cada vez que ves una matriz, puedes interpretarla como una cierta transformación del espacio.",
  "n_reviews": 1
 },
 {
  "input": "Once you really digest this idea, you're in a great position to understand linear algebra deeply.",
  "translatedText": "Una vez que realmente digieras esta idea, estarás en una excelente posición para comprender profundamente el álgebra lineal.",
  "n_reviews": 1
 },
 {
  "input": "Almost all of the topics coming up, from matrix multiplication to determinants, change of basis, eigenvalues, all of these will become easier to understand once you start thinking about matrices as transformations of space.",
  "translatedText": "Casi todos los temas que se avecinan, desde la multiplicación de matrices hasta los determinantes, el cambio de base y los valores propios, serán más fáciles de entender una vez que empieces a pensar en las matrices como transformaciones del espacio.",
  "n_reviews": 1
 },
 {
  "input": "Most immediately, in the next video, I'll be talking about multiplying two matrices together.",
  "translatedText": "De manera más inmediata, en el siguiente video, hablaré sobre cómo multiplicar dos matrices.",
  "n_reviews": 1
 }
]