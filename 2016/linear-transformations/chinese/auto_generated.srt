1
00:00:12,040 --> 00:00:12,920
嘿大家！

2
00:00:13,320 --> 00:00:16,442
如果我必须选择一个主题，让线性代数中的所有其 

3
00:00:16,442 --> 00:00:19,429
他主题都开始吸引人，并且学生第一次学习线性 

4
00:00:19,429 --> 00:00:22,280
代数时往往会忘记这个主题，那么它就是这个。

5
00:00:22,700 --> 00:00:26,200
线性变换的思想及其与矩阵的关系。

6
00:00:26,950 --> 00:00:31,710
在本视频中，我将重点介绍这些变换在二维情况下的 样子，

7
00:00:31,710 --> 00:00:35,060
以及它们与矩阵向量乘法的概念有何关系。

8
00:00:35,880 --> 00:00:39,080
特别是，我想向您展示一种不依赖 

9
00:00:39,080 --> 00:00:42,080
于记忆的矩阵向量乘法思考方法。

10
00:00:43,160 --> 00:00:46,580
首先，我们来解析一下线性变换这个术语。

11
00:00:47,420 --> 00:00:49,880
转变本质上是功能的一个花哨的词。

12
00:00:50,260 --> 00:00:53,980
它接收输入并为每个输入输出一个输出。

13
00:00:53,980 --> 00:00:57,707
具体来说，在线性代数的背景下，我们喜欢考 

14
00:00:57,707 --> 00:01:01,080
虑接受某个向量并输出另一个向量的变换。

15
00:01:02,500 --> 00:01:04,440
那么，如果它们的含义相同，为什么要

16
00:01:04,440 --> 00:01:06,380
使用“转换”一词而不是“函数”呢？

17
00:01:07,120 --> 00:01:11,340
嗯，它暗示了一种可视化这种输入-输出关系的某种方式。

18
00:01:11,860 --> 00:01:15,800
你看，理解向量函数的一个好方法是使用运动。

19
00:01:16,780 --> 00:01:21,115
如果转换将某个输入向量转换为某个输出向量 ，

20
00:01:21,115 --> 00:01:24,860
我们可以想象该输入向量移动到输出向量。

21
00:01:25,680 --> 00:01:30,080
然后，为了理解整个变换，我们可以想象观察每 

22
00:01:30,080 --> 00:01:34,080
个可能的输入向量移动到其相应的输出向量。

23
00:01:34,980 --> 00:01:39,120
一次性考虑所有向量（每个向量 都是一支箭头）真的很拥挤。

24
00:01:39,500 --> 00:01:41,993
因此，正如我在上一个视频中提到的，

25
00:01:41,993 --> 00:01:46,100
一个很好的技巧是将每 个向量概念化为一个点，而不是箭头，

26
00:01:46,100 --> 00:01:47,420
即其尖端所在的点。

27
00:01:48,030 --> 00:01:52,269
这样，为了考虑将每个可能的输入向量转换为某个输出 

28
00:01:52,269 --> 00:01:56,340
向量的变换，我们观察空间中的每个点移动到其他点。

29
00:01:57,220 --> 00:02:02,165
在二维变换的情况下，为了更好地了解变换的整体 形状，

30
00:02:02,165 --> 00:02:05,780
我喜欢对无限网格上的所有点执行此操作。

31
00:02:06,560 --> 00:02:09,163
有时我还喜欢在后台保留网格的副本，

32
00:02:09,163 --> 00:02:12,840
以帮助 跟踪所有内容相对于其开始位置的结束位置。

33
00:02:14,460 --> 00:02:21,080
你必须承认，围绕空间中所有点移 动的各种变换的效果是美丽的。

34
00:02:21,880 --> 00:02:24,640
它给人一种空间本身被挤压和变形的感觉。

35
00:02:25,600 --> 00:02:29,920
正如您可以想象的那样，任意转换可能看起来非常复杂。

36
00:02:30,380 --> 00:02:35,227
但幸运的是，线性代数将自己限制为一种特殊类型 的变换，

37
00:02:35,227 --> 00:02:38,280
这种变换更容易理解，称为线性变换。

38
00:02:39,120 --> 00:02:43,060
从视觉上来说，如果一个变换具有两个属性，那么它就是线性的。

39
00:02:43,700 --> 00:02:49,600
所有线条都必须保持直线而不会弯曲，并且原点必须保持固定。

40
00:02:50,620 --> 00:02:55,540
例如，这里不会是线性变换 ，因为线条都是弯曲的。

41
00:02:56,100 --> 00:03:00,187
这里的这个虽然保持了直线，但不 是线性变换，

42
00:03:00,187 --> 00:03:01,860
因为它移动了原点。

43
00:03:02,680 --> 00:03:06,200
这里修复了原点，看起来可能使线条保持直线 ，

44
00:03:06,200 --> 00:03:09,240
但这只是因为我只显示水平和垂直网格线。

45
00:03:09,540 --> 00:03:13,487
当你看到它对对角线的作用时，你会发现它根 本不是线性的，

46
00:03:13,487 --> 00:03:15,320
因为它使那条线变成了曲线。

47
00:03:16,760 --> 00:03:22,240
一般来说，您应该将线性变换视 为保持网格线平行且均匀分布。

48
00:03:23,400 --> 00:03:27,540
一些线性变换很容易理解，例如绕原点的旋转。

49
00:03:28,120 --> 00:03:30,600
其他的则难以用语言来描述。

50
00:03:32,040 --> 00:03:35,480
那么您认为如何用数字来描述这些转变呢？

51
00:03:35,480 --> 00:03:40,449
比如说，如果你正在编写一些动画来制作一个教授该 主题的视频，

52
00:03:40,449 --> 00:03:44,921
你会给计算机什么公式，以便如果你给 它一个向量的坐标，

53
00:03:44,921 --> 00:03:47,240
它可以给你该向量落地的坐标？

54
00:03:48,480 --> 00:03:52,383
事实证明，您只需要记录两个基向量（i-hat 和 

55
00:03:52,383 --> 00:03:56,600
j -hat）各自的着陆点，其他所有内容都将随之而来。

56
00:03:57,500 --> 00:04:00,630
例如，考虑坐标为负 1, 2 的向量 v，

57
00:04:00,630 --> 00:04:04,805
这意味着它等 于负 1 乘以 i-hat 加 2 乘以 

58
00:04:04,805 --> 00:04:05,700
j-hat。

59
00:04:08,680 --> 00:04:13,120
如果我们进行一些变换并跟踪所有这三个向量的走向，

60
00:04:13,120 --> 00:04:18,300
则网 格线保持平行且均匀分布的属性会产生非常重要的结果。

61
00:04:19,100 --> 00:04:22,113
v 落地的位置将为负 1 乘以 i-hat 

62
00:04:22,113 --> 00:04:25,400
落 地向量加上 2 乘以 j-hat 落地向量。

63
00:04:25,980 --> 00:04:30,114
换句话说，它开始时是 i-hat 和 j-hat 

64
00:04:30,114 --> 00:04:34,580
的 某种线性组合，最终是这两个向量落地的相同线性组合。

65
00:04:35,620 --> 00:04:37,857
这意味着您可以仅根据 i-hat 和 

66
00:04:37,857 --> 00:04:40,920
j-hat 各自着陆的位置来推断 v 必须去的位置。

67
00:04:41,580 --> 00:04:44,540
这就是为什么我喜欢在后台保留原始网格的副本。

68
00:04:45,080 --> 00:04:47,827
对于此处显示的变换，我们可以读出 

69
00:04:47,827 --> 00:04:50,899
i-hat 落在坐标 1、负 2 上，

70
00:04:50,899 --> 00:04:54,940
而 j-hat 落在 x 轴上的坐标 3、0 处。

71
00:04:55,539 --> 00:04:59,178
这意味着由负 1 i-hat 加上 2 乘以 

72
00:04:59,178 --> 00:05:02,975
j-hat 表示的向 量最终为负 1 乘以向量 

73
00:05:02,975 --> 00:05:06,140
1、负 2 加上 2 乘以向量 3、0。

74
00:05:07,100 --> 00:05:11,089
将所有这些加在一起，您可以推断出它必须落在向量 5, 

75
00:05:11,089 --> 00:05:11,680
2 上。

76
00:05:14,260 --> 00:05:17,240
这是一个值得停下来思考的好点，因为它非常重要。

77
00:05:18,520 --> 00:05:21,900
现在，鉴于我实际上向您展示了完整的变换，

78
00:05:21,900 --> 00:05:25,280
 您可以只查看 v 的坐标为 5, 2。

79
00:05:25,760 --> 00:05:28,955
但这里最酷的部分是，这为我们提供了一种技术，

80
00:05:28,955 --> 00:05:32,005
只要我们 有 i-hat 和 j-hat 

81
00:05:32,005 --> 00:05:35,927
每个落地位置的记录， 就可以推断出任何向量落地的位置，

82
00:05:35,927 --> 00:05:37,380
而无需观察转换本身。

83
00:05:38,600 --> 00:05:41,681
用更通用的坐标 x 和 y 写入向量，

84
00:05:41,681 --> 00:05:45,572
它将落在 x 乘以 i-hat 落在 的向量上，

85
00:05:45,572 --> 00:05:49,789
1，负 2，加上 y 乘以 j-hat 落在的向量，

86
00:05:49,789 --> 00:05:50,600
3, 0。

87
00:05:51,860 --> 00:05:56,150
执行该求和，您会发现结果为 1x 加 3y，

88
00:05:56,150 --> 00:05:58,100
负 2x 加 0y。

89
00:05:58,740 --> 00:06:03,580
我给你任何向量，你可以使用这个公式告诉我该向量落在哪里。

90
00:06:04,860 --> 00:06:09,588
所有这些的意思是，二维线性变换完全由四个数 字描述，

91
00:06:09,588 --> 00:06:13,044
即 i-hat 所在位置的两个坐标 ，

92
00:06:13,044 --> 00:06:16,500
以及 j-hat 所在位置的两个坐标。

93
00:06:17,080 --> 00:06:17,640
这不是很酷吗？

94
00:06:18,380 --> 00:06:22,186
通常将这些坐标打包到称为 2x2 矩阵的 2x 

95
00:06:22,186 --> 00:06:25,992
2 数字网格中，您可以将其中的列解释为 i-h 

96
00:06:25,992 --> 00:06:29,640
at 和 j-hat 各自所在的两个特殊向量。

97
00:06:30,380 --> 00:06:36,033
如果给定一个描述线性变换和某个特定向量的 2x2 矩阵，

98
00:06:36,033 --> 00:06:40,273
并且您想知道该线性变换将该 向量带到哪里，

99
00:06:40,273 --> 00:06:45,119
则可以获取向量的坐标，将它们 乘以矩阵的相应列，

100
00:06:45,119 --> 00:06:47,340
然后把你得到的加起来。

101
00:06:48,180 --> 00:06:52,720
这与添加新基向量的缩放版本的想法相对应。

102
00:06:54,720 --> 00:07:00,540
让我们看看在最一般的情况下， 矩阵有条目 A、B、C、D。

103
00:07:01,100 --> 00:07:06,240
请记住，该矩阵只是打包描述线 性变换所需信息的一种方式。

104
00:07:06,240 --> 00:07:11,840
始终记住将第一列 AC 解释为第一个基向量落地的位 置，

105
00:07:11,840 --> 00:07:16,440
将第二列 BD 解释为第二个基向量落地的位置。

106
00:07:17,500 --> 00:07:21,000
当我们将此变换应用于某个向量 x、y 时，您会得到什么？

107
00:07:22,060 --> 00:07:26,980
嗯，就是 x 乘以 AC 加 y 乘以 BD。

108
00:07:28,060 --> 00:07:31,990
把它们放在一起，你得到一个向量 Ax 加 By，

109
00:07:31,990 --> 00:07:33,300
Cx 加 Dy。

110
00:07:33,980 --> 00:07:37,742
当您将矩阵像函数一样放在向量的左侧时 ，

111
00:07:37,742 --> 00:07:40,940
您甚至可以将其定义为矩阵向量乘法。

112
00:07:41,660 --> 00:07:44,210
然后你可以让高中生记住这一点，而不 

113
00:07:44,210 --> 00:07:46,620
向他们展示使其感觉直观的关键部分。

114
00:07:48,300 --> 00:07:52,378
但是，将这些列视为基向量的转换 版本，

115
00:07:52,378 --> 00:07:57,960
并将结果视为这些向量的 适当线性组合，不是更有趣吗？

116
00:08:00,720 --> 00:08:03,780
让我们练习描述一些矩阵线性变换。

117
00:08:04,580 --> 00:08:09,254
例如，如果我们将整个空间逆时针旋转 90 度，

118
00:08:09,254 --> 00:08:13,318
则 I-hat 落在坐标 0, 1 上，

119
00:08:13,318 --> 00:08:17,180
J-hat 落在坐标负 1, 0 上。

120
00:08:17,980 --> 00:08:21,960
所以我们最终得到的矩阵有列 0、1，负列 1、0。

121
00:08:22,880 --> 00:08:27,069
要弄清楚任何向量旋转 90 度后会发 生什么，

122
00:08:27,069 --> 00:08:29,620
只需将其坐标乘以该矩阵即可。

123
00:08:31,560 --> 00:08:34,299
这是一个有趣的变换，有一个特殊的名称，称为剪切。

124
00:08:35,000 --> 00:08:40,150
其中，I-hat 保持固定，因此矩阵的第一列是 1, 0，

125
00:08:40,150 --> 00:08:45,300
 但 J-hat 移动到坐标 1, 1，成为矩阵的第二列。

126
00:08:45,300 --> 00:08:49,802
这里冒着多余的风险，弄清楚剪切如何变换 

127
00:08:49,802 --> 00:08:54,080
给定向量可以归结为将该矩阵乘以该向量。

128
00:08:55,760 --> 00:09:00,140
假设我们想要反其道而行之，从一个矩阵开始，比如第 1, 

129
00:09:00,140 --> 00:09:04,520
2 和 3, 1 列，我们想要推断出它的变换是什么样的。

130
00:09:04,960 --> 00:09:07,440
暂停一下，看看你是否能想象得到。

131
00:09:08,420 --> 00:09:12,532
一种方法是首先将 I-hat 移动到 1、2，

132
00:09:12,532 --> 00:09:15,750
然后将 J-hat 移动到 3、1，

133
00:09:15,750 --> 00:09:20,220
始终以保持网格线平行且均匀分布的方式移动其余空间。

134
00:09:21,680 --> 00:09:26,959
如果 I-hat 和 J-hat 所落在的向量是线性相 

135
00:09:26,959 --> 00:09:29,976
关的（如果您还记得上一个视频），

136
00:09:29,976 --> 00:09:33,181
这意味着一个是另一个的 缩放版本，

137
00:09:33,181 --> 00:09:37,517
这意味着线性变换将所有 2D 空间压缩到这两 

138
00:09:37,517 --> 00:09:42,420
个向量所在的线，也称为这两个线性相关向量的一维跨度。

139
00:09:44,420 --> 00:09:48,876
总而言之，线性变换是一种在空间中移动的方法，

140
00:09:48,876 --> 00:09:53,940
使 得网格线保持平行且均匀分布，并且原点保持固定。

141
00:09:54,540 --> 00:09:59,133
轻率地说，这些变换只需使用少数数字 即可描述，

142
00:09:59,133 --> 00:10:01,530
即每个基向量落地的坐标。

143
00:10:02,760 --> 00:10:06,726
矩阵为我们提供了一种描述这些变换的语言，

144
00:10:06,726 --> 00:10:10,891
 其中列代表这些坐标，而矩阵向量乘法只是 

145
00:10:10,891 --> 00:10:14,660
计算该变换对给定向量的作用的一种方法。

146
00:10:15,360 --> 00:10:18,620
这里重要的一点是，每次看到矩阵时，

147
00:10:18,620 --> 00:10:21,880
 您都可以将其解释为某种空间变换。

148
00:10:22,580 --> 00:10:27,320
一旦你真正理解了这个想法， 你就能够深入理解线性代数。

149
00:10:27,660 --> 00:10:32,029
几乎所有即将出现的主题，从矩阵乘法到行列 

150
00:10:32,029 --> 00:10:37,647
式、基础变化、特征值，一旦您开始将矩阵视 为空间变换，

151
00:10:37,647 --> 00:10:40,560
所有这些都会变得更容易理解。

152
00:10:41,300 --> 00:10:45,220
最直接的是，在下一个视频中 ，我将讨论两个矩阵相乘。

153
00:10:45,220 --> 00:10:45,660
回头见！

154
00:10:46,120 --> 00:10:46,320
感谢您的观看！

