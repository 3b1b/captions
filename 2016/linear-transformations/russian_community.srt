1
00:00:03,820 --> 00:00:09,380
"Увы, невозможно объяснить, что такое Матрица. Ты должен увидеть это сам." – Морфеус

2
00:00:09,580 --> 00:00:12,200
(На удивление уместные слова о важности визуального понимания операций с матрицами)

3
00:00:12,460 --> 00:00:15,200
Всем привет! Если бы мне нужно было выбрать лишь одну тему, благодаря которой все остальные

4
00:00:15,220 --> 00:00:18,300
темы линейной алгебры начнут играть новыми красками, и которая слишком часто

5
00:00:18,300 --> 00:00:22,340
проходит мимо студента во время первого курса линейной алгебры, это было бы вот что.

6
00:00:22,500 --> 00:00:26,880
Понятие линейного преобразования и связь линейных преобразований с матрицами.

7
00:00:26,880 --> 00:00:31,980
В этом видео я покажу то, как эти преобразования выглядят в двумерном пространстве,

8
00:00:32,100 --> 00:00:35,160
и то, как они соотносятся с умножением матриц на векторы.

9
00:00:35,460 --> 00:00:42,120
В частности, я хочу показать вам способ понять умножение матрицы на вектор без заучивания.

10
00:00:42,960 --> 00:00:47,080
Для начала, давайте разберем этот термин – "линейное преобразование".

11
00:00:47,300 --> 00:00:50,480
"Преобразование" – это, по сути, мудреный синоним слова "функция",

12
00:00:50,580 --> 00:00:53,980
это нечто, что принимает входные значения и для каждого из них выдает выходное.

13
00:00:54,220 --> 00:01:01,260
В контексте линейной алгебры это преобразования, которые принимают один вектор и выдают другой.

14
00:01:02,200 --> 00:01:06,580
Зачем же использовать слово "преобразование" вместо слова "функция", если это одно и то же?

15
00:01:06,920 --> 00:01:11,820
Ну, это подразумевает определенный способ визуализации связи между "входом" и "выходом".

16
00:01:11,860 --> 00:01:15,920
Видите ли, отличный способ понять функции над векторами – это использовать движение

17
00:01:16,760 --> 00:01:20,480
Если преобразование делает из какого-то входного вектора выходной вектор,

18
00:01:20,880 --> 00:01:24,840
мы представляем, что входной вектор перемещается на место выходного.

19
00:01:25,500 --> 00:01:27,980
Тогда, чтобы понять суть преобразования в целом, мы могли бы представить,

20
00:01:28,320 --> 00:01:34,200
как все входные векторы перемещаются к своим соответствующим выходным векторам.

21
00:01:34,920 --> 00:01:39,300
Рисунок захламляется, если пытаться представить все векторы в виде стрелок одновременно,

22
00:01:39,500 --> 00:01:45,740
поэтому, как я и говорил, неплохой трюк – это представить вектор не стрелкой, а точкой,

23
00:01:46,000 --> 00:01:47,740
точкой, в которой расположен конец вектора.

24
00:01:48,040 --> 00:01:53,060
Таким образом, думая о преобразовании, которое перемещает все возможные входные векторы,

25
00:01:53,080 --> 00:01:56,600
мы наблюдаем, как каждая точка в пространстве перемещается в другую точку.

26
00:01:57,000 --> 00:02:05,960
В двумерном случае, чтобы лучше схватить "форму" преобразования, я использую точки на cетке.

27
00:02:06,520 --> 00:02:13,500
Иногда, я также оставляю копию сетки на фоне, просто чтобы понять, где всё оказалось относительно начального положения.

28
00:02:14,840 --> 00:02:21,300
Согласитесь, эффект разных преобразований, двигающих точки пространства, достаточно красив.

29
00:02:21,740 --> 00:02:24,960
Он даёт ощущение сжатия и трансформации самого пространства.

30
00:02:25,420 --> 00:02:30,060
Хотя, как вы можете представить, произвольные преобразования могут выглядеть сложно.

31
00:02:30,160 --> 00:02:34,300
К счастью, линейная алгебра ограничивается особым видом преобразований,

32
00:02:34,480 --> 00:02:38,220
такие, которые проще понимать, и они называются линейными преобразованиями.

33
00:02:39,020 --> 00:02:43,220
Визуально, преобразование линейно, если для него выполняются два свойства:

34
00:02:43,500 --> 00:02:49,620
все прямые остаются прямыми, не изгибаясь, а начало координат остается на месте.

35
00:02:50,360 --> 00:02:55,700
Например, вот это не было бы линейным преобразованием, так как прямые изгибаются.

36
00:02:56,140 --> 00:03:00,420
И вот это, несмотря на то, что прямота линий сохраняется, не является линейным преобразованием,

37
00:03:00,460 --> 00:03:02,080
потому что оно сдвигает начало координат.

38
00:03:02,440 --> 00:03:06,160
Это преобразование фиксирует начало координат, и, на первый взгляд, не сгибает прямые линии.

39
00:03:06,200 --> 00:03:09,440
Но только потому, что я показываю только горизонтальные и вертикальные прямые.

40
00:03:09,500 --> 00:03:16,020
Если мы посмотрим, что происходит с диагональю, становится ясно, что оно точно не линейное.

41
00:03:16,200 --> 00:03:20,660
В общем, линейные преобразования это — такие, которые оставляют соответствующие линии сетки

42
00:03:20,660 --> 00:03:22,820
параллельными друг другу и на равном расстоянии друг от друга.

43
00:03:23,320 --> 00:03:27,900
Некоторые преобразования несложно представить, такие как повороты вокруг начала координат.

44
00:03:27,940 --> 00:03:31,160
Другие бывает сложнее легко объяснить словами.

45
00:03:31,680 --> 00:03:35,520
Как вы думаете, как можно описать эти преобразования численно?

46
00:03:35,620 --> 00:03:39,820
Например, если вы хотите запрограммировать несколько анимаций для видео на эту тему,

47
00:03:39,920 --> 00:03:44,040
Какую формулу вы дадите компьютеру, чтобы по заданным координатам вектора

48
00:03:44,060 --> 00:03:47,740
он мог выдавать вам координаты места, в котором этот вектор окажется?

49
00:03:48,300 --> 00:03:53,731
Оказывается, что нужно лишь знать, куда попадут базисные векторы, i и j,

50
00:03:53,731 --> 00:03:56,700
а все остальное следует из этого.

51
00:03:56,720 --> 00:04:06,260
Например, пусть дан вектор v с координатами [-1; 2], то есть он записывается как v = (-1)*i + (2)*j.

52
00:04:08,900 --> 00:04:13,200
Если мы применим некоторое преобразование и посмотрим, куда попадут три наших вектора, то

53
00:04:13,220 --> 00:04:18,820
сохранение параллельности и равноотдаленности линий сетки имеет одно важное следствие:

54
00:04:19,180 --> 00:04:22,980
место, куда попадет вектор v, равно -1 умножить на вектор, которым стал вектор i,

55
00:04:22,980 --> 00:04:25,900
плюс 2 умножить на вектор, которым стал вектор j.

56
00:04:26,100 --> 00:04:30,260
Иными словами, мы начали с некоторой линейной комбинации векторов i и j,

57
00:04:30,380 --> 00:04:35,280
и пришли к той же линейной комбинации но уже тех векторов, в которые перешли эти векторы.

58
00:04:35,460 --> 00:04:40,980
Это значит, что мы можем узнать, куда попадет v, основываясь на том, что мы знаем для i и j.

59
00:04:41,440 --> 00:04:44,700
Вот почему я люблю оставлять копию начальной сетки на фоне.

60
00:04:44,980 --> 00:04:50,860
Для преобразования, показанного здесь, мы можем видеть, что i приобретает координаты [1;-2],

61
00:04:51,200 --> 00:04:55,280
а j ложится на координаты [3;0].

62
00:04:55,940 --> 00:05:06,560
Это значит, что вектор, представленный как -1i+2j, попадет в (-1)*[-1;2] + (2)*[3;0].

63
00:05:07,100 --> 00:05:13,620
Складывая все вместе, делаем вывод, что v должен попасть в [5;2].

64
00:05:14,480 --> 00:05:17,500
Это хороший момент, чтобы остановиться и задуматься, потому что это важно.

65
00:05:18,360 --> 00:05:23,360
Теперь, учитывая, что я показываю вам все преобразование, вы могли просто подсмотреть,

66
00:05:23,360 --> 00:05:26,900
что v имеет координаты [5;2] после преобразования. Но что здесь круто, так это то,

67
00:05:26,900 --> 00:05:30,800
что мы получили способ узнать координаты любого вектора после преобразования,

68
00:05:30,800 --> 00:05:37,440
пока мы знаем, как преобразуются векторы i и j, и нам даже не нужно видеть само преобразование.

69
00:05:38,460 --> 00:05:41,700
Запишем вектор в общем случае с координатами [x,y],

70
00:05:41,960 --> 00:05:46,320
и он попадет в "x" умножить на вектор, в который попадает i, [-1;2],

71
00:05:47,280 --> 00:05:51,540
плюс "y" умножить на вектор, в который попадает j, [3,0].

72
00:05:51,860 --> 00:05:58,640
Суммируя, видим, что наш вектор попадет в [1x+3y, -2x + 0y].

73
00:05:58,780 --> 00:06:04,520
Я даю вам любой вектор, а вы можете сказать, куда он попадет, используя эту формулу.

74
00:06:04,860 --> 00:06:11,740
Это говорит о том, что линейное преобразование в 2D полностью задается четверкой чисел:

75
00:06:12,040 --> 00:06:16,440
две координаты преобразованного i, и две координаты преобразованного j.

76
00:06:16,760 --> 00:06:18,100
Разве это не здорово?

77
00:06:18,280 --> 00:06:23,800
Обычно эти координаты записываются в таблицу чисел два на два, называемые "матрицей 2х2",

78
00:06:23,900 --> 00:06:30,060
где колонками являются специальные векторы, в которые попадают i и j после преобразования

79
00:06:30,260 --> 00:06:35,520
Если вам дана матрица 2х2, описывающая линейное преобразование, и некоторый выбранный вектор,

80
00:06:35,560 --> 00:06:41,760
и вы хотите узнать, что это преобразование сделает с вектором, вы можете взять координаты вектора,

81
00:06:41,760 --> 00:06:47,540
умножить на соответствующие столбцы матрицы, и сложить то, что вы получили.

82
00:06:47,880 --> 00:06:53,280
Это совпадает с идеей сложения "масштабированных" преобразованных базисных векторов.

83
00:06:54,720 --> 00:07:00,620
Посмотрим, как это работает в самом общем случае, когда матрица имеет в своих ячейках числа a, b, c, d.

84
00:07:01,020 --> 00:07:06,420
И помните, эта матрица – всего упаковка для информации о линейном преобразовании.

85
00:07:06,420 --> 00:07:12,200
Думайте о первом столбце [a;c] как о результате преобразования первого базисного вектора,

86
00:07:12,420 --> 00:07:16,860
и о втором столбце [b;d] как о результате преобразования второго базисного вектора.

87
00:07:17,060 --> 00:07:21,200
Если мы применим это преобразование к какому-либо вектору [x;y], что мы получим?

88
00:07:21,640 --> 00:07:27,460
Ну, это будет x*[a;c] + y*[b;d].

89
00:07:27,900 --> 00:07:33,620
Собирая это вместе, получаем вектор [ax+by; cx+dy].

90
00:07:34,120 --> 00:07:40,940
Можно даже определить это как умножение матрицы на вектор, когда матрица стоит слева от вектора, словно это функция.

91
00:07:41,380 --> 00:07:47,280
Тогда, можно заставить студентов заучить это, не показывая важнейшую среднюю часть, благодаря которой определение становится интуитивным.

92
00:07:48,080 --> 00:07:53,280
Но разве не веселее думать о столбцах, как о преобразованных базисных векторах,

93
00:07:53,400 --> 00:07:59,660
и о результате преобразования, как о данной линейной комбинации этих векторов?

94
00:08:00,640 --> 00:08:03,820
Давайте попрактикуемся в описании некоторых линейных преобразований с помощью матриц.

95
00:08:04,440 --> 00:08:08,860
Например, если мы повернем всё пространство на 90° против часовой стрелки,

96
00:08:08,960 --> 00:08:12,920
вектор i станет вектором с координатами [0;1],

97
00:08:13,960 --> 00:08:17,540
а вектор j станет вектором с координатами [-1;0].

98
00:08:17,880 --> 00:08:22,140
То есть, мы получаем матрицу с колонками [0;1] и [-1;0].

99
00:08:22,820 --> 00:08:29,740
Чтобы повернуть любой вектор на 90°, можно просто умножить эту матрицу на его координаты.

100
00:08:31,260 --> 00:08:34,720
Вот забавное преобразование с особым названием - "сдвиг".

101
00:08:34,920 --> 00:08:39,500
Оно фиксирует вектор i, так что первая колонка матрицы - [1;0],

102
00:08:39,520 --> 00:08:45,440
но j сдвигается в [1;1], что становится второй колонкой матрицы.

103
00:08:45,880 --> 00:08:54,280
Повторяясь, скажу: чтобы преобразование любого вектора, сводится к умножению матрицы преобразования на этот вектор.

104
00:08:55,420 --> 00:08:58,420
Допустим, мы хотим пойти по обратному пути.

105
00:08:58,580 --> 00:09:04,560
Начнем с матрицы, например, с колонками [1;2] и [3;1], и попробуем узнать, как выглядит соответствующее ей преобразование.

106
00:09:04,620 --> 00:09:07,900
Остановитесь на время и подумайте, можете ли вы себе это представить.

107
00:09:08,140 --> 00:09:12,300
Один способ это сделать - сначала переместить вектор i в [1,2],

108
00:09:12,640 --> 00:09:16,980
а потом вектор j в [3,1], всегда перемещая остальное пространство так,

109
00:09:17,000 --> 00:09:20,460
чтобы линии сетки были параллельны между собой и равноудалены друг от друга.

110
00:09:21,740 --> 00:09:27,200
Если векторы i и j становятся линейно зависимыми, что, если вы вспомните предыдущее видео, значит,

111
00:09:27,200 --> 00:09:33,320
что один из них является растянутой версией другого, то линейное преобразование сожмёт

112
00:09:33,360 --> 00:09:37,180
всё двумерное пространство в прямую, на которой лежат эти два вектора,

113
00:09:37,480 --> 00:09:42,440
иначе известную, как одномерная линейная оболочка этих двух линейно зависимых векторов.

114
00:09:44,680 --> 00:09:48,660
Подводя итоги, линейное преобразование – это способ перемещать пространство так,

115
00:09:48,920 --> 00:09:52,000
что линии сетки остаются параллельными и равноудаленными друг от друга

116
00:09:52,020 --> 00:09:54,080
и так, что начало отсчета остается на месте.

117
00:09:54,140 --> 00:09:58,940
Восхитительно, что эти преобразования описываются только несколькими числами –

118
00:09:58,980 --> 00:10:02,200
координатами, в которые ложатся базисные векторы после преобразования.

119
00:10:02,400 --> 00:10:08,640
Матрицы – это язык для описания преобразований, и их столбцы представляют эти координаты,

120
00:10:08,940 --> 00:10:14,660
а умножение матрицы на вектор – всего лишь способ вычисления того, где он окажется.

121
00:10:15,260 --> 00:10:18,820
Важная идея здесь заключается в том, что каждый раз, когда вы видите матрицу,

122
00:10:18,880 --> 00:10:22,420
вы можете понимать её, как некоторое линейное преобразование пространства.

123
00:10:22,420 --> 00:10:27,560
Когда вы "переварите" эту идею, то будете готовы для глубокого понимания линейной алгебры.

124
00:10:27,560 --> 00:10:34,000
Далее все темы – от перемножения матриц, опреде-лителей, смены базиса до собственных значений –

125
00:10:34,020 --> 00:10:41,220
все они будут проще для понимания, когда вы свяжете матрицы и преобразования пространства.

126
00:10:41,340 --> 00:10:46,220
Уже в следующем видео, я буду говорить о перемножении двух матриц. Увидимся!

127
00:10:46,220 --> 00:10:50,280
Технически, преобразование является линейным, если оно удовлетворяет следующим свойствам: 1) L(v+w) = L(v) + L(w) (аддитивность); 2) L(cv) = cLv, где с - число, v - вектор (однородность);

128
00:10:50,280 --> 00:10:58,060
Я поговорю об этих свойствах позже, но прежде всего важно визуальное понимание. Как только вы его получите, станет интуитивно понятно, почему эти свойства имеют смысл. Так что пока что можете спокойно принимать линейное преобразование за такое, которое оставляет линии сетки параллельными и равноудаленными друг от друга, т.к. это определение и определение выше эквивалентны.

