1
00:00:00,000 --> 00:00:17,760
2D

2
00:00:17,760 --> 00:00:18,760
空間にベクトルがある場合、それを座標で記述する標準的な方法があります。

3
00:00:18,760 --> 00:00:22,920
この場合、ベクトルの座標は 3、2 です。つまり、尾部から先端まで移動するには、右に 3

4
00:00:22,920 --> 00:00:27,160
単位、上に 2 単位移動する必要があります。

5
00:00:27,720 --> 00:00:32,100
ここで、座標を記述するためのより線形代数指向の方法は、これらの数値のそれぞれをスカラー、つまりベクトルを引き伸ばしたり押しつぶしたりするものとして考えることです。

6
00:00:32,100 --> 00:00:37,060


7
00:00:37,060 --> 00:00:41,840
最初の座標は右を指す長さ 1 のベクトルである i-hat

8
00:00:41,840 --> 00:00:48,600
をスケーリングするものであり、2 番目の座標は真上を指す長さ 1

9
00:00:48,600 --> 00:00:49,780
のベクトルである j-hat をスケーリングするものであると考えます。

10
00:00:49,780 --> 00:00:56,180
これら 2 つのスケーリングされたベクトルの先端から末尾までの合計が、座標で表現されることになります。

11
00:00:56,200 --> 00:01:00,740
これら 2

12
00:01:00,740 --> 00:01:02,860
つの特別なベクトルは、座標系の暗黙の仮定をすべてカプセル化したものと考えることができます。

13
00:01:02,860 --> 00:01:06,900
最初の数値が右方向の動きを示し、2 番目の数値が上方向の動きを示しているという事実、距離の単位が正確にどのくらいの距離であるか、これらすべてがスカラー ベクトルとしての

14
00:01:06,900 --> 00:01:11,940
i-hat と

15
00:01:11,940 --> 00:01:18,060
j-hat の選択に結びついています。座標は実際にスケールすることを目的としています。

16
00:01:18,060 --> 00:01:23,020
ベクトルと数値のセットの間で変換する方法はすべて座標系と呼ばれ、2 つの特別なベクトル

17
00:01:23,180 --> 00:01:28,360
i-hat と

18
00:01:28,360 --> 00:01:30,340
j-hat は標準座標系の基底ベクトルと呼ばれます。

19
00:01:30,340 --> 00:01:36,060
ここで話したいのは、別の基底ベクトルのセットを使用するというアイデアです。

20
00:01:36,060 --> 00:01:40,820
たとえば、友人のジェニファーが別の基底ベクトルのセット (b1 と

21
00:01:40,820 --> 00:01:44,240
b2 と呼ぶことにします) を使用しているとします。

22
00:01:44,240 --> 00:01:48,580
最初の基底ベクトル b1 は少し上と右を指し、2

23
00:01:48,580 --> 00:01:52,300
番目のベクトル b2 は左と上を指します。

24
00:01:52,300 --> 00:01:56,180
ここで、先ほど示したベクトルをもう一度見てください。これは、あなたと私が基底ベクトル i-hat と j-hat

25
00:01:56,180 --> 00:02:01,480
を使用して、座標 3,2 を使用して記述するものです。

26
00:02:01,480 --> 00:02:07,000
ジェニファーは実際に、このベクトルを 5/3 と 1/3 の座標で記述します。

27
00:02:07,000 --> 00:02:12,340
これが意味するのは、2 つの基底ベクトルを使用してそのベクトルに到達する具体的な方法は、b1 を 3 分の 5

28
00:02:12,340 --> 00:02:21,020
でスケーリングし、b2 を 3 分の 1 でスケーリングしてから、両方を加算することであるということです。

29
00:02:21,020 --> 00:02:24,340
この 2 つの数字、3 分の 5

30
00:02:24,340 --> 00:02:26,080
と 3 分の 1 をどのようにして計算できるかを少し後で説明します。

31
00:02:26,080 --> 00:02:30,720
一般に、ジェニファーがベクトルを記述するために座標を使用するときは常に、最初の座標をスケーリング b1 として考え、2

32
00:02:30,720 --> 00:02:38,040
番目の座標をスケーリング b2 として考え、結果を加算します。

33
00:02:38,040 --> 00:02:41,420
彼女が取得するものは、通常、あなたや私がそれらの座標を持っていると考えるベクトルとはまったく異なります。

34
00:02:41,420 --> 00:02:45,260


35
00:02:45,260 --> 00:02:49,820
ここでの設定をもう少し正確に言うと、彼女の最初の基底ベクトル b1 は座標 2,1

36
00:02:49,820 --> 00:02:55,620
で表されるもので、2 番目の基底ベクトル b2 は負の

37
00:02:55,620 --> 00:02:59,260
1,1 で表されるものです。 。

38
00:02:59,260 --> 00:03:04,540
ただし、彼女のシステムの視点から、これらのベクトルの座標は 1,0 と

39
00:03:04,540 --> 00:03:06,460
0,1 であることを認識することが重要です。

40
00:03:06,460 --> 00:03:12,940
それらは、彼女の世界の座標 1,0 と 0,1 の意味を定義するものです。

41
00:03:12,940 --> 00:03:16,220
つまり、事実上、私たちは異なる言語を話していることになります。

42
00:03:16,220 --> 00:03:20,360
私たちは皆、空間内の同じベクトルを見ていますが、ジェニファーはそれを説明するために異なる言葉や数字を使用します。

43
00:03:20,360 --> 00:03:23,700


44
00:03:23,700 --> 00:03:26,660
ここで私が物事をどのように表現しているかについて簡単に述べさせてください。

45
00:03:26,660 --> 00:03:30,440
2D 空間をアニメーション化するときは、通常、この正方形のグリッドを使用します。

46
00:03:30,440 --> 00:03:34,880
しかし、そのグリッドは単なる構成要素であり、座標系を視覚化する方法であるため、基準の選択によって決まります。

47
00:03:34,880 --> 00:03:38,360


48
00:03:38,360 --> 00:03:41,860
空間自体には固有のグリッドがありません。

49
00:03:41,900 --> 00:03:46,260
ジェニファーは自分自身のグリッドを描くかもしれませんが、それは彼女の座標の意味を追跡するのに役立つ視覚的なツールにすぎない、同様に構成された構造になります。

50
00:03:46,260 --> 00:03:53,460


51
00:03:53,460 --> 00:03:58,020
しかし、座標 0,0

52
00:03:58,020 --> 00:03:59,980
が何を意味するかについては誰もが同意しているため、彼女の起源は実際には私たちの起源と一致するでしょう。

53
00:03:59,980 --> 00:04:03,820
これは、任意のベクトルをゼロでスケールすると得られるものです。

54
00:04:03,820 --> 00:04:08,340
ただし、軸の方向とグリッド線の間隔は、基底ベクトルの選択に応じて異なります。

55
00:04:08,340 --> 00:04:11,620


56
00:04:11,620 --> 00:04:16,260
したがって、これをすべて設定した後、非常に自然な疑問は、座標系間でどのように変換するかということです。

57
00:04:16,260 --> 00:04:18,640


58
00:04:18,640 --> 00:04:24,100
たとえば、ジェニファーがマイナス 1、2

59
00:04:24,100 --> 00:04:26,420
の座標を持つベクトルを記述した場合、それは私たちの座標系ではどうなるでしょうか?

60
00:04:26,420 --> 00:04:29,300
彼女の言語を私たちの言語にどのように翻訳しますか?

61
00:04:29,300 --> 00:04:35,660
さて、彼女の座標が示していることは、このベクトルは b1 の 1 倍と

62
00:04:35,660 --> 00:04:39,900
b2 の 2 倍の負の値であるということです。

63
00:04:39,900 --> 00:04:49,660
そして、私たちの視点から見ると、b1 の座標は 2, 1 であり、b2 の座標はマイナス 1, 1 です。

64
00:04:49,660 --> 00:04:55,940
したがって、実際には、座標系で表現されているように、負の 1 倍 b1 と

65
00:04:55,940 --> 00:04:57,860
2 倍 b2 を計算できます。

66
00:04:57,860 --> 00:05:04,100
これを計算すると、座標がマイナス 4, 1 のベクトルが得られます。

67
00:05:04,100 --> 00:05:08,900
つまり、彼女が考えるベクトルをマイナス 1、2 と表現するのです。

68
00:05:08,900 --> 00:05:13,360
あるベクトルの対応する座標によって各基底ベクトルをスケーリングし、それらを加算するこのプロセスは、いくぶん見覚えがあるかもしれません。

69
00:05:13,360 --> 00:05:18,580


70
00:05:18,580 --> 00:05:23,280
これは行列ベクトルの乗算であり、その列が言語のジェニファーの基底ベクトルを表す行列を使用します。

71
00:05:23,280 --> 00:05:25,800


72
00:05:25,800 --> 00:05:30,300
実際、行列ベクトルの乗算を特定の線形変換の適用として理解すると、たとえば、このシリーズで最も重要だと私が考えるビデオである第

73
00:05:30,300 --> 00:05:34,660
3

74
00:05:34,660 --> 00:05:39,700
章を視聴すると、ここで何が起こっているのかを非常に直感的に考えることができます。

75
00:05:39,700 --> 00:05:45,180
列がジェニファーの基底ベクトルを表す行列は、基底ベクトル i-hat と j-hat (1,

76
00:05:45,180 --> 00:05:50,580
0 や 0, 1

77
00:05:50,580 --> 00:05:59,080
と言うときに思い浮かべるもの) をジェニファーの基底ベクトルに移動する変換と考えることができます。 1、0、0、1 と言うときに彼女が考えること。

78
00:05:59,080 --> 00:06:02,420
これがどのように機能するかを示すために、座標がマイナス 1、2

79
00:06:02,420 --> 00:06:08,180
であると考えられるベクトルを取得し、その変換を適用することが何を意味するかを見てみましょう。

80
00:06:08,180 --> 00:06:12,540
線形変換の前に、このベクトルを基底ベクトルの特定の線形結合 (負の 1 倍の i-hat と

81
00:06:12,540 --> 00:06:17,500
2 倍の j-hat を加算したもの) として考えます。

82
00:06:17,500 --> 00:06:22,560
そして、線形変換の重要な特徴は、結果のベクトルが同じ線形結合になりますが、新しい基底ベクトルからなり、i-hat が着地する場所のマイナス 1

83
00:06:22,560 --> 00:06:27,900
倍と j-hat が着地する場所の

84
00:06:27,900 --> 00:06:33,740
2 倍となることです。

85
00:06:33,740 --> 00:06:39,260
したがって、この行列が行うことは、ジェニファーが何を意味するのかについての私たちの誤解を、彼女が言及している実際のベクトルに変換することです。

86
00:06:39,260 --> 00:06:44,340


87
00:06:44,340 --> 00:06:47,460
初めてこれを学んだとき、いつも後ろ向きに感じたのを覚えています。

88
00:06:47,460 --> 00:06:48,460


89
00:06:48,460 --> 00:06:53,660
幾何学的には、この行列は私たちのグリッドをジェニファーのグリッドに変換しますが、数値的には、彼女の言語で記述されたベクトルを私たちの言語に変換します。

90
00:06:53,660 --> 00:07:01,100


91
00:07:01,100 --> 00:07:05,140
私にとって最終的にピンと来たのは、ジェニファーが意味するものについての私たちの誤解、つまり同じ座標を使用して私たちのシステムで取得したベクトルをどのように受け止めて、それを彼女が本当に意味したベクトルに変換するかを考えたことでした。

92
00:07:05,140 --> 00:07:10,060


93
00:07:10,060 --> 00:07:15,400


94
00:07:15,400 --> 00:07:18,200
逆に行ってみてはどうでしょうか？

95
00:07:18,200 --> 00:07:22,020
このビデオの前半で使用した例では、システムに座標 3、2 のベクトルがあったとき、ジェニファーのシステムでは座標が 3

96
00:07:22,020 --> 00:07:27,180
分の 5 と 3

97
00:07:27,180 --> 00:07:32,380
分の 1 になることをどのように計算すればよいでしょうか?

98
00:07:32,380 --> 00:07:37,340
ジェニファーの言語を私たちの言語に翻訳する基底行列の変更から始めて、次にその逆行列を取得します。

99
00:07:37,340 --> 00:07:40,700


100
00:07:40,700 --> 00:07:48,180
変換の逆とは、最初の変換を逆方向に再生することに対応する新しい変換であることを覚えておいてください。

101
00:07:48,180 --> 00:07:50,640


102
00:07:50,640 --> 00:07:54,540
実際には、特に 2

103
00:07:54,540 --> 00:07:58,320
次元以上で作業している場合は、コンピュータを使用して、この逆行列を実際に表す行列を計算します。

104
00:07:58,320 --> 00:08:02,640
この場合、ジェニファーの基底を列として持つ基底変化行列の逆行列は、最終的に列が 1/3、負の

105
00:08:02,640 --> 00:08:10,480
1/3、および 1/3、2/3

106
00:08:10,480 --> 00:08:11,480
になります。

107
00:08:11,480 --> 00:08:17,040
たとえば、ジェニファーのシステムでベクトル 3, 2 がどのように見えるかを確認するには、この基底行列の逆変化にベクトル

108
00:08:17,040 --> 00:08:23,400
3, 2 を乗算します。これは、3 分の

109
00:08:23,400 --> 00:08:27,960
5、3 分の 1 となります。

110
00:08:27,960 --> 00:08:32,880
つまり、簡単に言うと、個々のベクトルの記述を座標系間で相互に変換する方法です。

111
00:08:32,880 --> 00:08:35,360


112
00:08:35,360 --> 00:08:40,920
列がジェニファーの基底ベクトルを表す行列ですが、私たちの座標で書かれており、ベクトルを彼女の言語から私たちの言語に変換します。

113
00:08:40,920 --> 00:08:46,760


114
00:08:46,760 --> 00:08:51,360
逆行列はその逆です。

115
00:08:51,360 --> 00:08:55,680
しかし、座標を使用して記述できるのはベクトルだけではありません。

116
00:08:55,680 --> 00:08:59,420
この次のパートでは、行列を使用した変換の表現に慣れていること、および行列の乗算が連続する変換の合成にどのように対応するかを理解していることが重要です。

117
00:08:59,420 --> 00:09:05,600


118
00:09:05,600 --> 00:09:06,600


119
00:09:06,600 --> 00:09:13,400
不安を感じたら、ぜひ一時停止して第 3 章と第 4 章を見てください。

120
00:09:13,400 --> 00:09:18,160
反時計回りに 90 度回転するなど、線形変換を考えてみましょう。

121
00:09:18,160 --> 00:09:23,240
あなたと私がこれを行列で表すとき、基底ベクトル i-hat と

122
00:09:23,240 --> 00:09:25,440
j-hat がそれぞれどこに行くのかを追跡します。

123
00:09:25,440 --> 00:09:30,720
i-hat は座標 0、1 のスポットに到達し、j-hat

124
00:09:30,720 --> 00:09:32,600
は座標がマイナス 1、0 のスポットに到達します。

125
00:09:32,600 --> 00:09:36,440
したがって、それらの座標が行列の列になります。

126
00:09:36,440 --> 00:09:41,300
しかし、この表現は、そもそも i-hat

127
00:09:41,300 --> 00:09:45,420
と j-hat

128
00:09:45,420 --> 00:09:50,340
に従っているという事実から、それらの着地点を独自の座標系で記録しているという事実まで、基底ベクトルの選択に大きく関係しています。 。

129
00:09:50,340 --> 00:10:00,280
ジェニファーは、この同じ空間の 90 度の回転をどのように説明しますか?

130
00:10:00,280 --> 00:10:05,140
回転行列の列を単にジェニファーの言語に翻訳したくなるかもしれません。

131
00:10:05,140 --> 00:10:06,260


132
00:10:06,260 --> 00:10:07,700
しかし、それは完全に正しくありません。

133
00:10:07,700 --> 00:10:12,960
これらの列は、基底ベクトル i-hat

134
00:10:12,960 --> 00:10:17,880
と j-hat

135
00:10:17,880 --> 00:10:20,860
がどこに行くかを表しますが、ジェニファーが望む行列は、基底ベクトルが着地する場所を表す必要があり、それらの着地点を彼女の言語で説明する必要があります。

136
00:10:20,860 --> 00:10:23,760
これがどのように行われるかを考える一般的な方法を次に示します。

137
00:10:23,760 --> 00:10:27,260
ジェニファーの言語で書かれた任意のベクトルから始めます。

138
00:10:27,260 --> 00:10:31,220
彼女の言語に関して何が起こるかを追跡しようとするのではなく、まず基底行列の変更を使用してそれを私たちの言語に翻訳します。基底行列の列は私たちの言語で彼女の基底ベクトルを表します。

139
00:10:31,220 --> 00:10:36,120


140
00:10:36,120 --> 00:10:39,880


141
00:10:39,880 --> 00:10:44,000
これにより、同じベクトルが得られますが、今度は私たちの言語で記述されます。

142
00:10:44,000 --> 00:10:49,360
次に、左側で乗算して得られたものに変換行列を適用します。

143
00:10:49,360 --> 00:10:53,660
これにより、そのベクトルがどこに着地するかがわかりますが、言語は変わりません。

144
00:10:53,660 --> 00:10:58,360
したがって、最後のステップとして、基底行列の逆変更を適用し、通常のように左側で乗算して、変換されたベクトルを取得します。ただし、ここではジェニファーの言語を使用します。

145
00:10:58,360 --> 00:11:04,380


146
00:11:04,460 --> 00:11:08,340
これは彼女の言語で書かれた任意のベクトルで行うことができるため、最初に基底の変更を適用し、次に変換を適用し、次に基底の逆変更を適用すると、3

147
00:11:08,340 --> 00:11:14,180
つの行列の合成により、ジェニファーの言語での変換行列が得られます。

148
00:11:14,180 --> 00:11:19,980


149
00:11:19,980 --> 00:11:24,600
彼女の言語のベクトルを取り込み、そのベクトルを変換したものを彼女の言語で吐き出します。

150
00:11:24,600 --> 00:11:26,420


151
00:11:26,420 --> 00:11:30,980
この特定の例では、ジェニファーの基底ベクトルが私たちの言語では 2、1、および負のように見え、変換が 90 度回転である場合、これら

152
00:11:31,540 --> 00:11:36,580
3 つの行列の積を処理すると、列が 3

153
00:11:36,580 --> 00:11:42,140
分の 1、3 の

154
00:11:42,140 --> 00:11:44,760
5 になります。 、そしてマイナスの3分の2、マイナスの3分の1。

155
00:11:44,760 --> 00:11:50,140
したがって、ジェニファーがその行列に彼女のシステム内のベクトルの座標を乗算すると、彼女の座標系で表現されたそのベクトルを

156
00:11:50,140 --> 00:11:55,420
90

157
00:11:55,420 --> 00:11:59,180
度回転したバージョンが返されます。

158
00:11:59,180 --> 00:12:04,740
一般に、A の逆数乗 M

159
00:12:04,740 --> 00:12:07,340
乗算 A のような式を見ると、それは数学的な種類の共感を示唆します。

160
00:12:07,340 --> 00:12:12,020
真ん中のマトリックスは、あなたが見るようなある種の変化を表し、外側の 2

161
00:12:12,020 --> 00:12:16,820
つのマトリックスは共感、視点の変化を表します。

162
00:12:16,820 --> 00:12:21,580
そして、完全な行列積は、他の人から見た場合と同じ変換を表します。

163
00:12:21,580 --> 00:12:22,800


164
00:12:22,800 --> 00:12:26,760
なぜ代替座標系を気にするのか疑問に思っている方のために、固有ベクトルと固有値に関する次のビデオで、これに関する非常に重要な例を示します。

165
00:12:26,760 --> 00:12:31,600


166
00:12:31,600 --> 00:12:48,600
それではまた！

