[
 {
  "input": "The fundamental, root-of-it-all building block for linear algebra is the vector.",
  "translatedText": "선형 대수학의 기본이자 모든 구성 요소는 벡터입니다.",
  "model": "google_nmt",
  "from_community_srt": "\"The introduction of numbers as coordinates is an act of violence.\" -헤르만 바일 기본적, 근본적인 선형 대수의 구성조각은 벡터입니다.",
  "n_reviews": 0,
  "start": 10.92,
  "end": 15.22
 },
 {
  "input": "So it's worth making sure that we're all on the same page about what exactly a vector is.",
  "translatedText": "따라서 정확히 벡터가 무엇인지에 대해 우리 모두가 같은 입장에 있는지 확인하는 것이 좋습니다.",
  "model": "google_nmt",
  "from_community_srt": "그래서 우리가 정확히 벡터가 무엇인지에 대해 알고가는 것이 중요합니다.",
  "n_reviews": 0,
  "start": 15.72,
  "end": 19.84
 },
 {
  "input": "You see, broadly speaking, there are three distinct but related ideas about vectors, which I'll call the physics student perspective, the computer science student perspective, and the mathematician's perspective.",
  "translatedText": "아시다시피, 광범위하게 말하면, 벡터에 대해서는 서로 다르지만 관련된 세 가지 아이디어가 있습니다. 저는 이를 물리학 학생의 관점, 컴퓨터 과학 학생의 관점, 그리고 수학자의 관점이라고 부르겠습니다.",
  "model": "google_nmt",
  "from_community_srt": "당신도 알다시피 벡터에 대해 서로 구별되지만 관련깊은 3 가지 관점이 있습니다. 하나는 물리학 학생 관점이고, 두번째는 컴퓨터 과학 학생 관점, 마지막으로 수학자들의 관점입니다.",
  "n_reviews": 0,
  "start": 20.38,
  "end": 30.1
 },
 {
  "input": "The physics student perspective is that vectors are arrows pointing in space.",
  "translatedText": "물리학 학생의 관점에서는 벡터가 공간을 가리키는 화살표라는 것입니다.",
  "model": "google_nmt",
  "from_community_srt": "물리학 학생의 관점에서 벡터는 공간에서 화살표입니다.",
  "n_reviews": 0,
  "start": 30.88,
  "end": 34.4
 },
 {
  "input": "What defines a given vector is its length and the direction it's pointing, but as long as those two facts are the same, you can move it all around, and it's still the same vector.",
  "translatedText": "주어진 벡터를 정의하는 것은 길이와 가리키는 방향이지만, 이 두 가지 사실이 동일한 한 벡터를 여기저기 이동할 수 있으며 여전히 동일한 벡터입니다.",
  "model": "google_nmt",
  "from_community_srt": "벡터는 길이와 방향을 가집니다. 이 두가지가 같다면 당신이 공간 어디로 이동시키든 같은 벡터입니다.",
  "n_reviews": 0,
  "start": 34.94,
  "end": 43.16
 },
 {
  "input": "Vectors that live in the flat plane are two-dimensional, and those sitting in broader space that you and I live in are three-dimensional.",
  "translatedText": "평면에 사는 벡터는 2차원이고, 당신과 내가 사는 더 넓은 공간에 있는 벡터는 3차원이다.",
  "model": "google_nmt",
  "from_community_srt": "평평한 평면에 존재하는 벡터는 2차원 벡터이고, 우리가 살고 있는 공간같이 확장된 공간에 있다면 3차원 벡터입니다.",
  "n_reviews": 0,
  "start": 44.04,
  "end": 50.04
 },
 {
  "input": "The computer science perspective is that vectors are ordered lists of numbers.",
  "translatedText": "컴퓨터 과학의 관점에서는 벡터가 숫자 목록으로 정렬되어 있다는 것입니다.",
  "model": "google_nmt",
  "from_community_srt": "컴퓨터 과학 관점에서 벡터는 순차 숫자 리스트입니다.",
  "n_reviews": 0,
  "start": 51.72,
  "end": 55.64
 },
 {
  "input": "For example, let's say you were doing some analytics about house prices, and the only features you cared about were square footage and price.",
  "translatedText": "예를 들어, 주택 가격에 대한 일부 분석을 수행 중이고 관심 있는 유일한 기능은 면적과 가격뿐이라고 가정해 보겠습니다.",
  "model": "google_nmt",
  "from_community_srt": "예를들어, 당신이 주택 가격 분석작업을 하고 있다고 가정해봅시다. 당신이 고려하는 것은 오직 면적과 가격입니다.",
  "n_reviews": 0,
  "start": 55.64,
  "end": 62.76
 },
 {
  "input": "You might model each house with a pair of numbers, the first indicating square footage and the second indicating price.",
  "translatedText": "첫 번째 숫자는 면적을 나타내고 두 번째 숫자는 가격을 나타내는 한 쌍의 숫자로 각 주택을 모델링할 수 있습니다.",
  "model": "google_nmt",
  "from_community_srt": "그럼 각각의 집을 숫자쌍으로 모델링 할 수 있습니다. 첫번재는 면적이고,",
  "n_reviews": 0,
  "start": 63.02,
  "end": 68.68
 },
 {
  "input": "Notice the order matters here.",
  "translatedText": "여기서 순서가 중요하다는 점에 유의하세요.",
  "model": "google_nmt",
  "from_community_srt": "두번째는 가격을 나타냅니다. 순서가 중요하다는 것을 주의하세요.",
  "n_reviews": 0,
  "start": 69.32,
  "end": 71.04
 },
 {
  "input": "In the lingo, you'd be modeling houses as two-dimensional vectors, where in this context, vector is pretty much just a fancy word for list, and what makes it two-dimensional is the fact that the length of that list is two.",
  "translatedText": "전문용어에서는 집을 2차원 벡터로 모델링하게 됩니다. 여기서 벡터는 목록을 뜻하는 고급 단어일 뿐이며, 이를 2차원으로 만드는 이유는 해당 목록의 길이가 2이기 때문입니다. .",
  "model": "google_nmt",
  "from_community_srt": "전문 용어로, 당신은 집을 2차원 벡터로 모델링한 것입니다. 이 문맥으로 보면, \"벡터\" 란 단순히 \"리스트\"에 대한 장식같은 단어입니다. 2차원 벡터가 된 이유는 리스트의 길이가 2이기 때문입니다.",
  "n_reviews": 0,
  "start": 72.4,
  "end": 84.04
 },
 {
  "input": "The mathematician, on the other hand, seeks to generalize both these views, basically saying that a vector can be anything where there's a sensible notion of adding two vectors and multiplying a vector by a number, operations that I'll talk about later on in this video.",
  "translatedText": "반면에 수학자들은 이 두 관점을 일반화하려고 합니다. 기본적으로 벡터는 두 개의 벡터를 더하고 벡터에 숫자를 곱하는 합리적인 개념이 있는 모든 것이 될 수 있다고 말합니다. 이에 대해서는 나중에 설명하겠습니다. 이 비디오.",
  "model": "google_nmt",
  "from_community_srt": "다른 한편으로, 수학자는 위 같은 관점들을  좀 더 일반화하는 방법을 찾습니다. 그래서 이 관점에서 보자면, 무엇이든 벡터가 될 수 있습니다. 두 벡터를 합한다는 개념에 맞고, 벡터에 숫자를 곱한다는 개념에 맞기만하면 됩니다. 또 여러 연산들을 만족해야하는데,",
  "n_reviews": 0,
  "start": 85.64,
  "end": 98.82
 },
 {
  "input": "The details of this view are rather abstract, and I actually think it's healthy to ignore it until the last video of this series, favoring a more concrete setting in the interim.",
  "translatedText": "이 관점의 세부 사항은 다소 추상적이며, 저는 실제로 이 시리즈의 마지막 비디오까지 이를 무시하고 그 사이에 보다 구체적인 설정을 선호하는 것이 건전하다고 생각합니다.",
  "model": "google_nmt",
  "from_community_srt": "더 세부사항은 다소 추상적이여서, 저는 비디오 시리즈 마지막까지 무시하고 가는게 낫다고 생각합니다. 그리고 중간에 좀 더 구체적인 설정을 놓겠습니다.",
  "n_reviews": 0,
  "start": 99.58,
  "end": 107.94
 },
 {
  "input": "But the reason I bring it up here is that it hints at the fact that the ideas of vector addition and multiplication by numbers will play an important role throughout linear algebra.",
  "translatedText": "하지만 내가 여기서 이 문제를 언급하는 이유는 숫자에 의한 벡터 덧셈과 곱셈의 개념이 선형 대수 전반에 걸쳐 중요한 역할을 할 것이라는 사실을 암시하기 때문입니다.",
  "model": "google_nmt",
  "from_community_srt": "하지만 여기 가지고 온 이유는, 벡터 합이라는 개념과 숫자 곱셈이라는 개념은 선형 대수 전반에 걸쳐 중요한 역할을 담당하기 때문입니다.",
  "n_reviews": 0,
  "start": 108.4,
  "end": 117.22
 },
 {
  "input": "But before I talk about those operations, let's just settle in on a specific thought to have in mind when I say the word vector.",
  "translatedText": "하지만 이러한 연산에 대해 이야기하기 전에 벡터라는 단어를 말할 때 염두에 두어야 할 구체적인 생각을 정립해 보겠습니다.",
  "model": "google_nmt",
  "from_community_srt": "하지만 이런 연산들에 대해 알아보기 전에, 다음과 같은 생각을 마음에 먼저 떠올려봅시다.",
  "n_reviews": 0,
  "start": 118.0,
  "end": 124.04
 },
 {
  "input": "Given the geometric focus that I'm shooting for here, whenever I introduce a new topic involving vectors, I want you to first think about an arrow, and specifically, think about that arrow inside a coordinate system, like the xy-plane, with its tail sitting at the origin.",
  "translatedText": "제가 여기서 목표로 하는 기하학적인 초점을 고려할 때, 벡터와 관련된 새로운 주제를 소개할 때마다 먼저 화살표에 대해 생각하시기 바랍니다. 특히 xy 평면과 같은 좌표계 내부의 화살표에 대해 생각해 보시기 바랍니다. 꼬리가 원점에 앉아 있습니다.",
  "model": "google_nmt",
  "from_community_srt": "바로 제가 단어 \"벡터\"를 말할 때는, 기하학 관점에서 제가 벡터를 포함하는 새로운 주제를 소개할대마다 당신이 하나의 화살표를 떠올렸으면 합니다. xy 평면과 같은 좌표계 안에 있으며 꼬리는 원점인 화살표를 떠올려주세요.",
  "n_reviews": 0,
  "start": 124.74,
  "end": 138.9
 },
 {
  "input": "This is a little bit different from the physics student perspective, where vectors can freely sit anywhere they want in space.",
  "translatedText": "이는 벡터가 공간 내 원하는 어느 곳에나 자유롭게 배치될 수 있는 물리학 학생의 관점과는 약간 다릅니다.",
  "model": "google_nmt",
  "from_community_srt": "이것은 물리학 학생의 관점과는 조금 다른데, 물리학 관점에서는 벡터는 자유롭게 공간 어디든지 이동시킬 수 있습니다.",
  "n_reviews": 0,
  "start": 139.68,
  "end": 144.92
 },
 {
  "input": "In linear algebra, it's almost always the case that your vector will be rooted at the origin.",
  "translatedText": "선형 대수학에서는 벡터가 원점에 뿌리를 두는 경우가 거의 항상 있습니다.",
  "model": "google_nmt",
  "from_community_srt": "하지만, 선형 대수에서는 거의 항상 원점에 뿌리를 둡니다.",
  "n_reviews": 0,
  "start": 145.42,
  "end": 150.32
 },
 {
  "input": "Then, once you understand a new concept in the context of arrows in space, we'll translate it over to the list of numbers point of view, which we can do by considering the coordinates of the vector.",
  "translatedText": "그런 다음 공간의 화살표라는 맥락에서 새로운 개념을 이해하면 이를 벡터의 좌표를 고려하여 수행할 수 있는 숫자 목록으로 변환합니다.",
  "model": "google_nmt",
  "from_community_srt": "이렇게 공간의 화살표라는 문맥에서 새 컨셉을 이해하면, 우리는 숫자-리스트 라는 관점으로 번역해볼 겁니다. 이 숫자리스트는 벡터의 좌표를 의미합니다.",
  "n_reviews": 0,
  "start": 150.94,
  "end": 160.62
 },
 {
  "input": "Now, while I'm sure that many of you are already familiar with this coordinate system, it's worth walking through explicitly, since this is where all of the important back and forth happens between the two perspectives of linear algebra.",
  "translatedText": "이제 많은 분들이 이미 이 좌표계에 익숙하시겠지만 명시적으로 살펴보는 것이 좋습니다. 선형 대수학의 두 관점 사이에서 모든 중요한 앞뒤가 일어나는 곳이기 때문입니다.",
  "model": "google_nmt",
  "from_community_srt": "저는 지금 여러분들이 이런 좌표 시스템이 익숙하다고 여기기 때문에 선형대수의 이같은 2가지 관점을 오가는 것은 도움이 됩니다. 선형대수의 두 관점사이를 오가는 과정속에서 중요한 것들이 나타나기 때문입니다.",
  "n_reviews": 0,
  "start": 161.44,
  "end": 171.68
 },
 {
  "input": "Focusing our attention on two dimensions for the moment, you have a horizontal line, called the x-axis, and a vertical line, called the y-axis.",
  "translatedText": "지금은 2차원에 주의를 집중하면 x축이라고 하는 수평선과 y축이라고 하는 수직선이 있습니다.",
  "model": "google_nmt",
  "from_community_srt": "잠시동안은 2차원에 대해서 초점을 맞추겠습니다. 수평선을 X 축이라하고, 수직선을 Y 축이라고 합니다.",
  "n_reviews": 0,
  "start": 172.74,
  "end": 179.58
 },
 {
  "input": "The place where they intersect is called the origin, which you should think of as the center of space and the root of all vectors.",
  "translatedText": "그들이 교차하는 곳을 원점이라고 하는데, 공간의 중심이자 모든 벡터의 근원이라고 생각해야 합니다.",
  "model": "google_nmt",
  "from_community_srt": "평면에서 두 선이 교차하는 곳을 원점이라고 부릅니다. 이 원점을 공간의 중심이자 모든 벡터 뿌리가 위치하는 곳이라고 생각하면 됩니다.",
  "n_reviews": 0,
  "start": 180.26,
  "end": 185.52
 },
 {
  "input": "After choosing an arbitrary length to represent one, you make tick marks on each axis to represent this distance.",
  "translatedText": "하나를 나타내기 위해 임의의 길이를 선택한 후 각 축에 눈금을 표시하여 이 거리를 나타냅니다.",
  "model": "google_nmt",
  "from_community_srt": "임의 길이를 1로 결정한 후, 각 축에 그 간격으로 눈금을 표시합니다.",
  "n_reviews": 0,
  "start": 186.38,
  "end": 191.36
 },
 {
  "input": "When I want to convey the idea of 2D space as a whole, which you'll see comes up a bit in the way, but right now they'll get a little bit in the way.",
  "translatedText": "2D 공간에 대한 아이디어를 전체적으로 전달하고 싶을 때 여러분이 보게 될 것이 약간 방해가 되지만 지금은 약간 방해가 될 것입니다.",
  "model": "google_nmt",
  "from_community_srt": "제가 2 차원 공간의 개념을 전달하고자 할 때, 앞으로 비디오들에서 보게시겠지만, 저는 눈금을 확장해 격자선을 만들 것입니다. 하지만 당장은 좀 방해가 되서 빼겠습니다.",
  "n_reviews": 0,
  "start": 192.32,
  "end": 201.36
 },
 {
  "input": "The coordinates of a vector is a pair of numbers that basically gives instructions for how to get from the tail of that vector at the origin to its tip.",
  "translatedText": "벡터의 좌표는 기본적으로 원점에서 해당 벡터의 꼬리에서 끝까지 이동하는 방법에 대한 지침을 제공하는 숫자 쌍입니다.",
  "model": "google_nmt",
  "from_community_srt": "벡터의 좌표는 숫자쌍입니다. 이 숫자쌍은 꼬리(원점)에서 시작한 벡터가 끝에 어떻게 다다를지 알려줍니다.",
  "n_reviews": 0,
  "start": 202.0,
  "end": 210.16
 },
 {
  "input": "The first number tells you how far to walk along the x-axis, positive numbers indicating rightward motion, negative numbers indicating leftward motion, and the second number tells you how far to walk parallel to the y-axis after that, positive numbers indicating upward motion, and negative numbers indicating downward motion.",
  "translatedText": "첫 번째 숫자는 x축을 따라 걷는 거리, 양수는 오른쪽 방향 움직임, 음수는 왼쪽 움직임을 나타내고, 두 번째 숫자는 y축과 평행하게 걷는 거리를 나타내며, 양수는 위쪽 방향을 나타냅니다. 움직임, 아래쪽 움직임을 나타내는 음수.",
  "model": "google_nmt",
  "from_community_srt": "첫 번째 숫자는 x 축을 다라 얼마나 가는지 알려줍니다. 양수이면 오른쪽방향입니다. 음수이면 왼쪽방향입니다. 두 번째 숫자는 Y 축과 평행한 방향으로 얼마나 이동할지 알려줍니다. 양수면 위쪽방향, 음수면 아래쪽방향입니다.",
  "n_reviews": 0,
  "start": 210.88,
  "end": 227.58
 },
 {
  "input": "To distinguish vectors from points, the convention is to write this pair of numbers vertically with square brackets around them.",
  "translatedText": "벡터와 점을 구별하기 위해 관례는 이 숫자 쌍을 대괄호로 묶어 수직으로 쓰는 것입니다.",
  "model": "google_nmt",
  "from_community_srt": "좌표점과 벡터를 구분하기 위해, 관례적으로 대괄호 안에 세로방향으로 숫자를 적습니다.",
  "n_reviews": 0,
  "start": 228.14,
  "end": 234.34
 },
 {
  "input": "Every pair of numbers gives you one and only one vector, and every vector is associated with one and only one pair of numbers.",
  "translatedText": "모든 숫자 쌍은 단 하나의 벡터를 제공하며 모든 벡터는 단 하나의 숫자 쌍과 연관됩니다.",
  "model": "google_nmt",
  "from_community_srt": "모든 숫자쌍은 각각 하나의 벡터와 대응되고, 반대로 모든 벡터는 각각 대응되는 숫자쌍이 하나있습니다. 3차원에서는 어떨까요?",
  "n_reviews": 0,
  "start": 236.34,
  "end": 243.68
 },
 {
  "input": "What about in three dimensions?",
  "translatedText": "3차원에서는 어떨까요?",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 244.64,
  "end": 245.5
 },
 {
  "input": "Well, you add a third axis, called the z-axis, which is perpendicular to both the x and y-axes, and in this case, each vector is associated with ordered triplet of numbers.",
  "translatedText": "x축과 y축 모두에 수직인 z축이라는 세 번째 축을 추가합니다. 이 경우 각 벡터는 순서가 지정된 삼중 숫자와 연결됩니다.",
  "model": "google_nmt",
  "from_community_srt": "우선 z 축 이라는 세 번째 축을 추가합니다. 이 축은 x 축, y 축에 모두 수직입니다. 이렇게 되면 각 벡터는 순차 삼중 숫자쌍에 대응됩니다.",
  "n_reviews": 0,
  "start": 246.2,
  "end": 256.34
 },
 {
  "input": "The first tells you how far to move along the x-axis, the second tells you how far to move parallel to the y-axis, and the third one tells you how far to then move parallel to this new z-axis.",
  "translatedText": "첫 번째는 x축을 따라 얼마나 멀리 이동해야 하는지 알려주고, 두 번째는 y축에 평행하게 얼마나 멀리 이동해야 하는지, 세 번째는 이 새로운 z축에 평행하게 얼마나 멀리 이동해야 하는지 알려줍니다.",
  "model": "google_nmt",
  "from_community_srt": "첫 번째는 x 축을 따라 얼마나 이동할지, 두번째는 y 축에 평행하게 얼마나 이동할지, 세 번째는 z 축에 평행하게 얼마나 이동할지를 말해줍니다.",
  "n_reviews": 0,
  "start": 256.86,
  "end": 267.68
 },
 {
  "input": "Every triplet of numbers gives you one unique vector in space, and every vector in space gives you exactly one triplet of numbers.",
  "translatedText": "모든 세 개의 숫자는 공간에서 하나의 고유한 벡터를 제공하고, 공간의 모든 벡터는 정확히 하나의 세 개의 숫자를 제공합니다.",
  "model": "google_nmt",
  "from_community_srt": "모든 삼중 숫자쌍은 특정한 하나의 벡터를 나타내고, 모든 벡터는 하나의 삼중 숫자쌍 표현을 가집니다.",
  "n_reviews": 0,
  "start": 268.4,
  "end": 275.56
 },
 {
  "input": "All right, so back to vector addition and multiplication by numbers.",
  "translatedText": "좋아요, 그럼 다시 벡터 덧셈과 숫자 곱셈으로 돌아가 보겠습니다.",
  "model": "google_nmt",
  "from_community_srt": "그럼 다시 벡터합과 숫자곱으로 돌아와봅시다.",
  "n_reviews": 0,
  "start": 276.9,
  "end": 280.1
 },
 {
  "input": "After all, every topic in linear algebra is going to center around these two operations.",
  "translatedText": "결국 선형 대수학의 모든 주제는 이 두 가지 연산을 중심으로 다루어질 것입니다.",
  "model": "google_nmt",
  "from_community_srt": "결국 선형대수의 모든 주제는 이 두가지 연산을 중심으로 일어납니다.",
  "n_reviews": 0,
  "start": 280.46,
  "end": 284.78
 },
 {
  "input": "Luckily, each one's pretty straightforward to define.",
  "translatedText": "운 좋게도 각각의 정의는 매우 간단합니다.",
  "model": "google_nmt",
  "from_community_srt": "다행히, 각각 정의하는 방법은 매우 간단합니다.",
  "n_reviews": 0,
  "start": 285.44,
  "end": 287.64
 },
 {
  "input": "Let's say we have two vectors, one pointing up and a little to the right, and the other one pointing right and down a bit.",
  "translatedText": "두 개의 벡터가 있다고 가정해 보겠습니다. 하나는 위쪽과 약간 오른쪽을 가리키고, 다른 하나는 오른쪽과 약간 아래쪽을 가리킵니다.",
  "model": "google_nmt",
  "from_community_srt": "두 벡터가 있다고 가정해봅시다. 하나는 위쪽과 약간 오른쪽을 가리키고, 다른 하나는 오른쪽과 약간 아래쪽을 가리킵니다.",
  "n_reviews": 0,
  "start": 288.48,
  "end": 293.56
 },
 {
  "input": "To add these two vectors, move the second one so that its tail sits at the tip of the first one.",
  "translatedText": "이 두 벡터를 추가하려면 꼬리가 첫 번째 벡터의 끝에 위치하도록 두 번째 벡터를 이동합니다.",
  "model": "google_nmt",
  "from_community_srt": "이 두 벡터를 더한다는 것은 두번째 벡터의 꼬리를 첫번째 벡터의 끝에 옮기는 것을 말합니다.",
  "n_reviews": 0,
  "start": 293.96,
  "end": 299.68
 },
 {
  "input": "Then, if you draw a new vector from the tail of the first one to where the tip of the second one sits, that new vector is their sum.",
  "translatedText": "그런 다음 첫 번째 벡터의 꼬리부터 두 번째 벡터의 끝 부분까지 새 벡터를 그리면 해당 새 벡터가 해당 벡터의 합이 됩니다.",
  "model": "google_nmt",
  "from_community_srt": "그리고나서 첫번째 꼬리에서 두번째 끝을 가리키는 새 벡터를 그립니다.",
  "n_reviews": 0,
  "start": 300.3,
  "end": 308.74
 },
 {
  "input": "This definition of addition, by the way, is pretty much the only time in linear algebra where we let vectors stray away from the origin.",
  "translatedText": "그런데 이 덧셈의 정의는 선형 대수학에서 벡터가 원점에서 벗어나게 하는 유일한 경우입니다.",
  "model": "google_nmt",
  "from_community_srt": "바로 이 새 벡터가 두 벡터의 합입니다. 그런데, 합에 대한 이러한 정의는 선형대수에서 거의 유일하게 벡터를 원점으로부터 멀리 이탈시키는 순간입니다.",
  "n_reviews": 0,
  "start": 312.08,
  "end": 318.86
 },
 {
  "input": "Now, why is this a reasonable thing to do?",
  "translatedText": "자, 이것이 왜 합리적인 일입니까?",
  "model": "google_nmt",
  "from_community_srt": "그럼 이렇게 정의하는 것이 타당할까요?",
  "n_reviews": 0,
  "start": 319.72,
  "end": 321.48
 },
 {
  "input": "Why this definition of addition and not some other one?",
  "translatedText": "왜 덧셈의 정의는 이렇고 다른 정의는 아닌 걸까요?",
  "model": "google_nmt",
  "from_community_srt": "이런 벡터합 정의는 타당하고,",
  "n_reviews": 0,
  "start": 321.74,
  "end": 324.02
 },
 {
  "input": "Well, the way I like to think about it is that each vector represents a certain movement, a step with a certain distance and direction in space.",
  "translatedText": "글쎄요, 제가 생각하고 싶은 방식은 각 벡터가 특정 움직임, 즉 공간에서 특정 거리와 방향을 갖는 단계를 나타낸다는 것입니다.",
  "model": "google_nmt",
  "from_community_srt": "다른 것은 안될까요? 제가 벡터에 대해 표현하기 좋아하는 방법은 벡터를 하나의 움직임- 하나의 단계로 보는 것입니다. 공간에서 특정한 방향과 거리를 가진 움직임을 말합니다.",
  "n_reviews": 0,
  "start": 325.52,
  "end": 332.68
 },
 {
  "input": "If you take a step along the first vector, then take a step in the direction and distance described by the second vector, the overall effect is just the same as if you moved along the sum of those two vectors to start with.",
  "translatedText": "첫 번째 벡터를 따라 한 걸음 내딛은 다음 두 번째 벡터가 설명하는 방향과 거리로 한 걸음 내딛으면 전체적인 효과는 처음에 두 벡터의 합을 따라 이동한 것과 같습니다.",
  "model": "google_nmt",
  "from_community_srt": "만약 첫 번째 벡터 따라 이동하고, 다음으로 두 번째 벡터를 따라 이동한다면, 전체적인 효과는 그냥 두 벡터의 합을 따라 이동한 것과 같을 것입니다.",
  "n_reviews": 0,
  "start": 333.98,
  "end": 344.78
 },
 {
  "input": "You could think about this as an extension of how we think about adding numbers on a number line.",
  "translatedText": "수직선에 숫자를 더하는 것에 대해 우리가 생각하는 방식의 확장으로 이것을 생각할 수 있습니다.",
  "model": "google_nmt",
  "from_community_srt": "당신은 수선에서 숫자 더하기를 확장한 것으로 생각할 수도 있습니다.",
  "n_reviews": 0,
  "start": 345.26,
  "end": 349.46
 },
 {
  "input": "One way that we teach kids to think about this, say with 2 plus 5, is to think of moving two steps to the right followed by another five steps to the right.",
  "translatedText": "우리가 아이들에게 이것에 대해 생각하도록 가르치는 한 가지 방법, 예를 들어 2 더하기 5를 사용하여 오른쪽으로 두 단계 이동한 다음 오른쪽으로 다섯 단계 더 이동하는 것을 생각하는 것입니다.",
  "model": "google_nmt",
  "from_community_srt": "우리가 이것을 아이들에게 가르치는 한 방법은, 2+5를 오른쪽으로 2칸 이동하고, 이어서 오른쪽으로 5칸 이동하게 생각하게 하는 것입니다.",
  "n_reviews": 0,
  "start": 350.18,
  "end": 357.96
 },
 {
  "input": "The overall effect is the same as if you just took seven steps to the right.",
  "translatedText": "전반적인 효과는 오른쪽으로 일곱 걸음만 이동한 것과 같습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 357.96,
  "end": 361.72
 },
 {
  "input": "In fact, let's see how vector addition looks numerically.",
  "translatedText": "실제로 벡터 덧셈이 수치적으로 어떻게 보이는지 살펴보겠습니다.",
  "model": "google_nmt",
  "from_community_srt": "결과는 오른쪽으로 7 단계 이동한 것과 같습니다.",
  "n_reviews": 0,
  "start": 362.66,
  "end": 365.48
 },
 {
  "input": "The first vector here has coordinates 1, 2, and the second one has coordinates 3, negative 1.",
  "translatedText": "여기서 첫 번째 벡터의 좌표는 1, 2이고 두 번째 벡터의 좌표는 3, 음수 1입니다.",
  "model": "google_nmt",
  "from_community_srt": "실제, ​​벡터합이 수치적으로 어떻게 보이는지 살펴봅시다. 첫번째 벡터의 좌표는 (1,2) 입니다.",
  "n_reviews": 0,
  "start": 366.02,
  "end": 372.46
 },
 {
  "input": "When you take the vector sum using this tip-to-tail method, you can think of a four-step path from the origin to the tip of the second vector.",
  "translatedText": "이 끝에서 꼬리까지의 방법을 사용하여 벡터 합을 취하면 원점에서 두 번째 벡터의 끝까지 4단계 경로를 생각할 수 있습니다.",
  "model": "google_nmt",
  "from_community_srt": "두번째 벡터는 (3,-1) 입니다. 두 벡터의 합을 얻으려면 이 끝-꼬리 방법을 사용하면, 원점에서 끝으로 가는 4 단계를 생각할 수 있습니다.",
  "n_reviews": 0,
  "start": 374.36,
  "end": 381.42
 },
 {
  "input": "Walk 1 to the right, then 2 up, then 3 to the right, then 1 down.",
  "translatedText": "오른쪽으로 1걸음, 위쪽으로 2걸음, 오른쪽으로 3걸음, 아래쪽으로 1걸음.",
  "model": "google_nmt",
  "from_community_srt": "\"1칸 오른쪽, 2칸 위로, 3칸 오른쪽,",
  "n_reviews": 0,
  "start": 381.84,
  "end": 385.62
 },
 {
  "input": "Reorganizing these steps so that you first do all of the rightward motion, then do all the vertical motion, you can read it as saying first move 1 plus 3 to the right, then move 2 minus 1 up.",
  "translatedText": "먼저 오른쪽으로 모든 동작을 수행한 다음 모든 수직 동작을 수행하도록 이 단계를 재구성하면 먼저 오른쪽으로 1 더하기 3을 이동한 다음 위로 2에서 1을 이동한다는 의미로 읽을 수 있습니다.",
  "model": "google_nmt",
  "from_community_srt": "마지막으로 1칸 아래로.\" 이 단계들을 재정비해서 오른쪽 방향들 먼저하고, 나중에 수직방향을 몰아서 하도록 변경해봅시다. 그럼 다음처럼 말하는 것과 같습니다.",
  "n_reviews": 0,
  "start": 386.92,
  "end": 398.18
 },
 {
  "input": "So the new vector has coordinates 1 plus 3 and 2 plus negative 1.",
  "translatedText": "따라서 새 벡터의 좌표는 1 더하기 3, 2 더하기 - 1입니다.",
  "model": "google_nmt",
  "from_community_srt": "\"우선 1+3 칸 오른쪽 이동, 2+(-1)칸 위로 이동\". 새 벡터는 1 + 3,",
  "n_reviews": 0,
  "start": 400.08,
  "end": 404.92
 },
 {
  "input": "In general, vector addition in this list of numbers conception looks like matching up their terms and adding each one together.",
  "translatedText": "일반적으로 이 숫자 개념 목록의 벡터 추가는 용어를 일치시키고 각각을 더하는 것처럼 보입니다.",
  "model": "google_nmt",
  "from_community_srt": "2 + (- 1) 인 좌표가 됩니다. 일반적으로, 숫자-리스트 컨셉에서 벡터합은 항끼리 매칭해서 서로 더하는 것처럼 보입니다.",
  "n_reviews": 0,
  "start": 405.6,
  "end": 412.7
 },
 {
  "input": "The other fundamental vector operation is multiplication by a number.",
  "translatedText": "다른 기본 벡터 연산은 숫자를 곱하는 것입니다.",
  "model": "google_nmt",
  "from_community_srt": "또 다른 기초 벡터 연산은 숫자 곱하기 입니다.",
  "n_reviews": 0,
  "start": 414.64,
  "end": 418.36
 },
 {
  "input": "Now this is best understood just by looking at a few examples.",
  "translatedText": "이제 이것은 몇 가지 예를 보는 것만으로도 가장 잘 이해됩니다.",
  "model": "google_nmt",
  "from_community_srt": "이것을 이해하는 최고의 방법은 몇 가지 예를 보는 것입니다.",
  "n_reviews": 0,
  "start": 418.86,
  "end": 421.38
 },
 {
  "input": "If you take the number 2 and multiply it by a given vector, it means you stretch out that vector so that it's two times as long as when you started.",
  "translatedText": "숫자 2에 주어진 벡터를 곱하면, 시작했을 때보다 두 배 길이가 되도록 벡터를 늘린다는 뜻입니다.",
  "model": "google_nmt",
  "from_community_srt": "숫자 2를 주어진 벡터에 곱한다는 것은 벡터를 기존의 2배만큼 늘리는 것을 의미합니다.",
  "n_reviews": 0,
  "start": 421.84,
  "end": 429.62
 },
 {
  "input": "If you multiply that vector by, say, one-third, it means you squish it down so that it's one-third the original length.",
  "translatedText": "벡터에 1/3을 곱하면 원래 길이의 1/3이 되도록 축소한다는 뜻입니다.",
  "model": "google_nmt",
  "from_community_srt": "만약 벡터에 1/3 을 곱한다는 것은 원래 길이의 1/3 으로 줄인다는 말입니다.",
  "n_reviews": 0,
  "start": 430.5,
  "end": 436.86
 },
 {
  "input": "When you multiply it by a negative number, like negative 1.8, then the vector first gets flipped around, then stretched out by that factor of 1.8.",
  "translatedText": "여기에 음수(예: 음수 1.8)를 곱하면 벡터가 먼저 뒤집힌 다음 해당 인수인 1.8만큼 늘어납니다.",
  "model": "google_nmt",
  "from_community_srt": "음수로 곱하는 경우는, -1.8 를 예로 들면, 벡터를 반대방향으로 뒤집고 나서 1.8 배만큼 늘리면 됩니다.",
  "n_reviews": 0,
  "start": 437.64,
  "end": 446.3
 },
 {
  "input": "This process of stretching or squishing or sometimes reversing the direction of a vector is called scaling, and whenever you catch a number like two or one-third or negative 1.8 acting like this, scaling some vector, you call it a scalar.",
  "translatedText": "벡터의 방향을 늘리거나 찌그러뜨리거나 때로는 방향을 바꾸는 이러한 과정을 스케일링이라고 하며, 2, 1/3 또는 -1.8과 같은 숫자가 이와 같이 작용하여 일부 벡터의 스케일링을 잡을 때마다 이를 스칼라라고 부릅니다.",
  "model": "google_nmt",
  "from_community_srt": "이처럼 벡터 길이를 늘이거나 줄이거나, 방향을 뒤집는 것을 \"스케일링(scaling)\" 이라고 부릅니다. 2, 1/3, -1.8 같이 벡터 스케일링에 사용되는 숫자들을 \"스칼라(scalar)\" 라고 합니다. 사실,",
  "n_reviews": 0,
  "start": 447.36,
  "end": 461.14
 },
 {
  "input": "In fact, throughout linear algebra, one of the main things that numbers do is scale vectors, so it's common to use the word scalar pretty much interchangeably with the word number.",
  "translatedText": "실제로 선형 대수학 전체에서 숫자가 수행하는 주요 작업 중 하나는 벡터의 크기 조정이므로 스칼라라는 단어를 숫자라는 단어와 거의 같은 의미로 사용하는 것이 일반적입니다.",
  "model": "google_nmt",
  "from_community_srt": "선형 대수를 통틀어 숫자의 주요 역할은 벡터를 스케일링 하는 것으로, 그래서 단어 \"스칼라(scalar)\"를 \"숫자(number)\" 와 쉽게 서로바꿔 사용할 수 있습니다.",
  "n_reviews": 0,
  "start": 461.94,
  "end": 471.18
 },
 {
  "input": "Numerically, stretching out a vector by a factor of, say, 2, corresponds with multiplying each of its components by that factor, 2.",
  "translatedText": "수치적으로 벡터를 2배로 늘리는 것은 각 구성 요소에 2배를 곱하는 것과 같습니다.",
  "model": "google_nmt",
  "from_community_srt": "수치적으로, 하나의 벡터를 2 라는 요소로 늘인다는 것은 벡터의 각 원소에 2라는 요소를 곱한다는 것과 같습니다.",
  "n_reviews": 0,
  "start": 472.02,
  "end": 479.58
 },
 {
  "input": "So in the conception of vectors as lists of numbers, multiplying a given vector by a scalar means multiplying each one of those components by that scalar.",
  "translatedText": "따라서 벡터를 숫자 목록으로 개념화할 때 주어진 벡터에 스칼라를 곱한다는 것은 각 구성 요소에 해당 스칼라를 곱한다는 의미입니다.",
  "model": "google_nmt",
  "from_community_srt": "그래서 숫자 리스트라는 컨셉에서, 벡터에 스칼라를 곱한다는 것은 리스트 각 원소에 해당 스칼라(숫자)를 곱하는 것과 같습니다.",
  "n_reviews": 0,
  "start": 480.3,
  "end": 488.48
 },
 {
  "input": "You'll see in the following videos what I mean when I say linear algebra topics tend to revolve around these two fundamental operations, vector addition and scalar multiplication.",
  "translatedText": "다음 비디오에서 선형 대수학 주제가 벡터 덧셈과 스칼라 곱셈이라는 두 가지 기본 연산을 중심으로 전개되는 경향이 있다는 말이 무슨 뜻인지 알게 될 것입니다.",
  "model": "google_nmt",
  "from_community_srt": "당신은 앞으로 비디오를 통해 제가 다음과 같이 말하는 의미를 알게될 것입니다. 선형대수 주제들은 두 가지 기본적인 연산 주변에서 도는 경향이 있습니다. 바로 벡터합과 스칼라곱입니다.",
  "n_reviews": 0,
  "start": 490.22,
  "end": 499.22
 },
 {
  "input": "And I'll talk more in the last video about how and why the mathematician thinks only about these operations, independent and abstracted away from however you choose to represent vectors.",
  "translatedText": "그리고 지난 비디오에서 수학자들이 벡터를 표현하기 위해 선택한 것과 독립적이고 추상화된 이러한 연산에 대해서만 생각하는 방법과 이유에 대해 자세히 설명하겠습니다.",
  "model": "google_nmt",
  "from_community_srt": "그리고 비디오 마지막에서 수학자들이 어떻게, 왜 이런 연산들에 대해서만 생각하는지, 우리가 벡터를 표현하기로 선택한 방법과는 다르게 독립적이고 추상적으로만 생각하는지 알려드리겠습니다.",
  "n_reviews": 0,
  "start": 499.98,
  "end": 509.12
 },
 {
  "input": "In truth, it doesn't matter whether you think about vectors as fundamentally being arrows in space, like I'm suggesting you do, that happen to have a nice numerical representation, or fundamentally as lists of numbers that happen to have a nice geometric interpretation.",
  "translatedText": "사실, 제가 제안하는 것처럼 벡터를 기본적으로 공간의 화살표로 생각하고 멋진 수치 표현을 갖는지, 아니면 근본적으로 멋진 기하학적 표현을 갖는 숫자 목록으로 생각하는지 여부는 중요하지 않습니다. 해석.",
  "model": "google_nmt",
  "from_community_srt": "근데 실제로는 어떤 것이냐는 중요하지 않습니다. 앞서 제가 말한 것 같이 공간 상 화살표로 보면 좋은 수치 표현법을 가지게 됩니다. 반면, 숫자 리스트로 벡터를 생각하는 것은 좋은 기하학적 해석을 제공해줍니다.",
  "n_reviews": 0,
  "start": 509.8,
  "end": 522.0
 },
 {
  "input": "The usefulness of linear algebra has less to do with either one of these views than it does with the ability to translate back and forth between them.",
  "translatedText": "선형 대수학의 유용성은 이러한 관점 중 하나와 관련이 있는 것보다 두 관점 사이를 앞뒤로 변환하는 능력과 관련이 있습니다.",
  "model": "google_nmt",
  "from_community_srt": "선형 대수의 유용성은 어떤 관점이냐로 결정되지 않습니다. 그 관점들 사이로 쉽게 번역될 수 있는 능력이 있기 때문입니다.",
  "n_reviews": 0,
  "start": 522.52,
  "end": 529.72
 },
 {
  "input": "It gives the data analyst a nice way to conceptualize many lists of numbers in a visual way, which can seriously clarify patterns in data and give a global view of what certain operations do.",
  "translatedText": "이는 데이터 분석가에게 시각적인 방식으로 많은 숫자 목록을 개념화할 수 있는 좋은 방법을 제공합니다. 이를 통해 데이터의 패턴을 심각하게 명확하게 하고 특정 작업이 수행하는 작업에 대한 전체적인 보기를 제공할 수 있습니다.",
  "model": "google_nmt",
  "from_community_srt": "이 데이터 분석가에게는 많은 숫자 리스트들을 가상적 공간에서 개념화하는 좋은 방법을 제공해줍니다. 이는 정말로 데이터의 패턴을 명확하게 해주고, 어떤 연산이 무엇인가에 대한  전지적 관점을 제공 할 수 있습니다 이와 반대로,",
  "n_reviews": 0,
  "start": 530.14,
  "end": 540.28
 },
 {
  "input": "And on the flip side, it gives people like physicists and computer graphics programmers a language to describe space and the computer.",
  "translatedText": "그리고 다른 한편으로는 물리학자나 컴퓨터 그래픽 프로그래머 같은 사람들에게 공간과 컴퓨터를 설명하는 언어를 제공합니다.",
  "model": "google_nmt",
  "from_community_srt": "물리학 및 컴퓨터 그래픽 분야의 사람들에게는 공간과 조작을 숫자로 표현하여, 컴퓨터를 통해 동작시킬 수 있게 해줍니다. 예를들어, 수학-Y 애니메이션같은 작업을 할 때, 저는 공간에서 실제로 무엇이 일어나는지 생각합니다.",
  "n_reviews": 0,
  "start": 540.82,
  "end": 551.38
 },
 {
  "input": "When I do math-y animations, for example, I start by thinking about what's actually going on in space, and then get the computer to represent things numerically, thereby figuring out where to place the pixels on the screen.",
  "translatedText": "예를 들어 수학적인 애니메이션을 만들 때 먼저 우주에서 실제로 무슨 일이 일어나고 있는지 생각한 다음 컴퓨터가 사물을 숫자로 표현하도록 하여 화면의 픽셀을 배치할 위치를 파악합니다.",
  "model": "google_nmt",
  "from_community_srt": "그리고 나서 컴퓨터에 이를 수치적으로 표현합니다. 그렇게 함으로써, 화면의 픽셀을 어디에 두어야 할지 알게됩니다.",
  "n_reviews": 0,
  "start": 552.3,
  "end": 563.06
 },
 {
  "input": "And doing that usually relies on a lot of linear algebra understanding.",
  "translatedText": "그리고 그렇게 하려면 대개 선형 대수학에 대한 많은 이해가 필요합니다.",
  "model": "google_nmt",
  "from_community_srt": "그리고 이렇게 하는 것은 보통 선형대수 지식에 많이 의존합니다.",
  "n_reviews": 0,
  "start": 563.48,
  "end": 566.58
 },
 {
  "input": "So there are your vector basics, and in the next video I'll start getting into some pretty neat concepts surrounding vectors, like span, bases, and linear dependence.",
  "translatedText": "벡터 기본 사항은 여기까지입니다. 다음 비디오에서는 범위, 기저, 선형 종속성 등 벡터와 관련된 매우 깔끔한 개념을 살펴보겠습니다.",
  "model": "google_nmt",
  "from_community_srt": "그럼 여기까지 벡터 기초였습니다. 다음 동영상부터 꽤 깔끔한 컨셉인 스팬(span), 기저(bases), 선형독립(linear dependence) 같은 개념들을 소개하겠습니다. 그때 만나요!",
  "n_reviews": 0,
  "start": 567.84,
  "end": 575.22
 },
 {
  "input": "See you then!",
  "translatedText": "그때 만나!",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 575.72,
  "end": 591.82
 }
]