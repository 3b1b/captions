1
00:00:11,176 --> 00:00:15,760
線形代数の基本的な基本的な構成要素はベクトルです。

2
00:00:15,760 --> 00:00:18,046
したがって、ベクトルとは正確には何なのかについて、全

3
00:00:18,046 --> 00:00:20,420
員が同じ認識を持っていることを確認することが重要です。

4
00:00:20,420 --> 00:00:23,167
ご存知のとおり、大まかに言って、ベクトルについては

5
00:00:23,167 --> 00:00:25,914
3 つの異な る、しかし関連した考え方があります。

6
00:00:25,914 --> 00:00:28,344
これらを物理学の学生の視点、 コンピューター

7
00:00:28,344 --> 00:00:30,880
サイエンスの学生の視点、数学者の視点と呼びます。

8
00:00:30,880 --> 00:00:32,903
物理学を学ぶ学生の視点では、ベクトル

9
00:00:32,903 --> 00:00:35,040
は空間を指す矢印であると考えられます。

10
00:00:35,040 --> 00:00:38,056
特定のベクトルを定義するのは、その長さとそのベクトルが

11
00:00:38,056 --> 00:00:41,072
指す方向ですが、これら 2 つの事実が同じである限り、

12
00:00:41,072 --> 00:00:44,200
ベクトルをあちこちに移動しても、同じベクトルのままです。

13
00:00:44,200 --> 00:00:48,092
平面に存在するベクトルは二次元であり、あなたや私が住

14
00:00:48,092 --> 00:00:51,840
んでいるより広い空間に存在するベクトルは三次元です。

15
00:00:51,840 --> 00:00:54,080
コンピューター サイエンスの観点では、ベクトルは

16
00:00:54,080 --> 00:00:56,320
順序付けられた数値のリストであると考えられます。

17
00:00:56,320 --> 00:00:59,972
たとえば、住宅価格に関する分析を行っていて、関

18
00:00:59,972 --> 00:01:03,320
心のある特徴が面積と価格だけだったとします。

19
00:01:03,320 --> 00:01:06,485
各住宅を 1 組の数字でモデル化し、最初の数字

20
00:01:06,485 --> 00:01:09,520
は面積を示し、2 番目の数字は価格を示します。

21
00:01:09,520 --> 00:01:12,880
ここで順序が重要であることに注意してください。

22
00:01:12,880 --> 00:01:16,100
専門用語では、家を 2 次元のベクトルとしてモデル化す

23
00:01:16,100 --> 00:01:19,320
ることになります。 こ の文脈では、ベクトルはほとんど

24
00:01:19,320 --> 00:01:22,182
リストを表す単なる派手な言葉であり、それを 2

25
00:01:22,182 --> 00:01:24,568
次元にするのは、そのリストの長さが 2

26
00:01:24,568 --> 00:01:25,880
であるという事実です。

27
00:01:25,880 --> 00:01:28,624
一方、数学者は、これら両方の見解を一般化しようとし

28
00:01:28,624 --> 00:01:30,819
ています。 基本的に、ベクトルは 、2

29
00:01:30,819 --> 00:01:33,563
つのベクトルを加算し、ベクトルに数値を乗算するとい

30
00:01:33,563 --> 00:01:36,307
う賢明な概念が存在するも のであれば何でもよいと述

31
00:01:36,307 --> 00:01:39,600
べています。 演算については後ほど説明します。 このビデオ。

32
00:01:39,600 --> 00:01:42,620
このビューの詳細はかなり抽象的であり、実際には、

33
00:01:42,620 --> 00:01:45,640
このシリーズの最後のビデオまで無視して、その間は

34
00:01:45,640 --> 00:01:48,540
より具体的な設定を優先するのが健全だと思います。

35
00:01:48,540 --> 00:01:51,680
しかし、私がここでそれを取り上げる理由は、ベクトル

36
00:01:51,680 --> 00:01:54,820
の加算と数値による乗算の 考え方が線形代数全体で重

37
00:01:54,820 --> 00:01:57,960
要な役割を果たすという事実を示唆しているからです。

38
00:01:57,960 --> 00:02:00,140
しかし、これらの演算について話す前に、ベ

39
00:02:00,140 --> 00:02:02,321
クトルという言葉を言う ときに念頭に置く

40
00:02:02,321 --> 00:02:04,720
べき特定の考えについて整理しておきましょう。

41
00:02:04,720 --> 00:02:07,743
ここで私が幾何学的な焦点を当てていることを考えると

42
00:02:07,743 --> 00:02:10,766
、ベクトルに関する新しいトピックを紹介するときは常

43
00:02:10,766 --> 00:02:13,789
に、最初に矢印について考えてもらいたいのですが、具

44
00:02:13,789 --> 00:02:16,813
体的には、xy 平面のような座標系内のその矢印につ

45
00:02:16,813 --> 00:02:19,720
いて考えてください。 その尾は原点に座っています。

46
00:02:19,720 --> 00:02:22,620
これは、ベクトルが空間内のどこにでも自由に配置

47
00:02:22,620 --> 00:02:25,400
できるという物理学生の観点とは少し異なります。

48
00:02:25,400 --> 00:02:31,080
線形代数では、ほとんどの場合、ベクトルは原点に根を置きます。

49
00:02:31,080 --> 00:02:34,578
次に、空間内の矢印のコンテキストで新しい概念を理解

50
00:02:34,578 --> 00:02:37,807
したら、それを数値のリストの観点に変換します。

51
00:02:37,807 --> 00:02:41,440
これ は、ベクトルの座標を考慮することで実行できます。

52
00:02:41,440 --> 00:02:44,282
さて、この座標系についてはすでによくご存じ

53
00:02:44,282 --> 00:02:47,124
の方も多いと思いますが、線形代数の 2 つ

54
00:02:47,124 --> 00:02:49,966
の観点間で重要なやり取りがすべてここで行わ

55
00:02:49,966 --> 00:02:52,680
れるため、明示的に説明する価値はあります。

56
00:02:52,680 --> 00:02:55,768
ここでは 2 次元に注目します。 x

57
00:02:55,768 --> 00:03:00,320
軸と呼ばれる水平線と、y 軸と呼ばれる垂直線があります。

58
00:03:00,320 --> 00:03:03,422
それらが交差する場所は原点と呼ばれ、空間の中心お

59
00:03:03,422 --> 00:03:06,400
よびすべてのベクトルの根と考える必要があります。

60
00:03:06,400 --> 00:03:09,536
表すために任意の長さを選択した後、各軸

61
00:03:09,536 --> 00:03:12,360
に目盛りを付けてこの距離を表します。

62
00:03:12,360 --> 00:03:14,790
これらのビデオでよく出てくる 2D 空間全

63
00:03:14,790 --> 00:03:17,220
体のアイデアを伝えたいときは、目盛りを拡張

64
00:03:17,220 --> 00:03:19,650
してグリッド線を作成しますが、現時点では実

65
00:03:19,650 --> 00:03:22,080
際には少し長くなります。 ちょっと邪魔です。

66
00:03:22,080 --> 00:03:26,753
ベクトルの座標は、基本的に、そのベクト ルの末尾 (原点)

67
00:03:26,753 --> 00:03:30,960
から先端までの移 動方法を指示する 1 対の数値です。

68
00:03:30,960 --> 00:03:34,546
最初の数値は、X 軸に沿ってどれだけ歩くかを 示します。

69
00:03:34,546 --> 00:03:36,773
正の数値は右方向への動きを示し、負

70
00:03:36,773 --> 00:03:39,741
の数値は左方向への動きを示します。 2 番目の

71
00:03:39,741 --> 00:03:42,586
数値は、その後 Y 軸に沿ってどのくらいの距

72
00:03:42,586 --> 00:03:46,049
離を歩くかを示します。 正の数値は上向きを示し ます。

73
00:03:46,049 --> 00:03:48,400
動き、および下向きの動きを示す負の数。

74
00:03:48,400 --> 00:03:51,216
ベクトルと点を区別するには、こ

75
00:03:51,216 --> 00:03:56,320
の数値のペアを縦方向に書き、 角かっこで囲むのが慣例です。

76
00:03:56,320 --> 00:04:00,552
すべての数値のペアは 1 つだけのベクトルを与え、すべて

77
00:04:00,552 --> 00:04:04,640
のベクトルは 1 つだけの数値のペアに関連付けられます。

78
00:04:04,640 --> 00:04:06,160
三次元ではどうでしょうか？

79
00:04:06,160 --> 00:04:09,546
さて、x 軸と y 軸の両方に垂直な 3 番目の軸

80
00:04:09,546 --> 00:04:13,453
( z 軸と呼ばれる) を追加します。 この場合、各ベクト

81
00:04:13,453 --> 00:04:16,840
ルは順序付けられた 3 つの数値に関連付けられます。

82
00:04:16,840 --> 00:04:20,498
1 つ目は、X 軸に沿って移動する距離を示し、2

83
00:04:20,498 --> 00:04:24,010
つ 目は、Y 軸に平行に移動する距離を示し、3

84
00:04:24,010 --> 00:04:28,400
つ目は、 この新しい Z 軸に平行に移動する距離を示します。

85
00:04:28,400 --> 00:04:30,908
数値のすべての 3 つの組は空間内で 1

86
00:04:30,908 --> 00:04:34,252
つの固有のベクトルを与え、空 間内のすべてのベクトルは

87
00:04:34,252 --> 00:04:36,880
1 つの数値の 3 つの組を正確に与えます。

88
00:04:36,880 --> 00:04:40,520
さて、ベクトルの加算と数値の乗算に戻ります。

89
00:04:40,520 --> 00:04:43,278
結局のところ、線形代数のすべてのトピックは、これら

90
00:04:43,278 --> 00:04:45,400
2 つの演算を中心とすることになります。

91
00:04:45,400 --> 00:04:48,480
幸いなことに、それぞれの定義は非常に簡単です。

92
00:04:48,480 --> 00:04:51,418
2 つのベクトルがあり、1 つは上で少し右を指し

93
00:04:51,418 --> 00:04:54,240
、もう 1 つは右と少し下を指しているとします。

94
00:04:54,240 --> 00:04:57,280
これら 2 つのベクトルを追加するには、尾部が最初のベクト

95
00:04:57,280 --> 00:05:00,320
ルの先端に位置するように 2 番目のベクトルを移動します。

96
00:05:00,320 --> 00:05:03,190
次に、最初のベクトルの尾部から 2

97
00:05:03,190 --> 00:05:06,379
番目のベクトルの先端が位置する位置まで

98
00:05:06,379 --> 00:05:10,206
新しいベクトルを描画すると、その新しいベクトルは

99
00:05:10,206 --> 00:05:12,120
それらの合計になります。

100
00:05:12,120 --> 00:05:15,980
ちなみに、この加算の定義は、線形代数においてベ

101
00:05:15,980 --> 00:05:19,680
クトルを原点から逸脱させるほぼ唯一の場合です。

102
00:05:19,680 --> 00:05:21,720
さて、なぜこれが合理的な行為なのでしょうか?

103
00:05:21,720 --> 00:05:25,600
なぜ他の定義ではなく、この加算の定義なのでしょうか?

104
00:05:25,600 --> 00:05:28,480
そうですね、私がよく考えているのは、各ベクトル

105
00:05:28,480 --> 00:05:31,360
は空間内での特定の動き 、つまり特定の距離と方

106
00:05:31,360 --> 00:05:34,240
向を持ったステップを表しているということです。

107
00:05:34,240 --> 00:05:36,947
最初のベクトルに沿って一歩を踏み出し、次に 2

108
00:05:36,947 --> 00:05:39,767
番目のベクトルで示 される方向と距離に一歩進んだ場

109
00:05:39,767 --> 00:05:41,910
合、全体的な効果は、最初にこれら 2

110
00:05:41,910 --> 00:05:44,730
つのベクトルの合計に沿って移動した場合とまったく同

111
00:05:44,730 --> 00:05:45,520
じになります。

112
00:05:45,520 --> 00:05:47,860
これは、数直線上の数字の足し算についての

113
00:05:47,860 --> 00:05:50,200
考え方の延長として考えることができます。

114
00:05:50,200 --> 00:05:53,172
これについて子供たちに教える 1 つの方法は、たとえば

115
00:05:53,172 --> 00:05:55,189
2 プラス 5 につい て、右に 2

116
00:05:55,189 --> 00:05:57,949
歩移動してからさらに右に 5 歩移動することを考える

117
00:05:57,949 --> 00:05:58,480
ことです。

118
00:05:58,480 --> 00:06:02,640
全体的な効果は、右に 7 歩進んだ場合と同じです。

119
00:06:02,640 --> 00:06:04,366
実際に、ベクトル加算が数値的にど

120
00:06:04,366 --> 00:06:06,200
のように見えるかを見てみましょう。

121
00:06:06,200 --> 00:06:10,568
ここでの最初のベクトルの座標は 1、2 であり、2

122
00:06:10,568 --> 00:06:14,600
番目のベクトルの座標は 3、マイナス 1 です。

123
00:06:14,600 --> 00:06:17,013
この先端から末尾までの方法を使用してベクトルの合

124
00:06:17,013 --> 00:06:19,929
計を取得すると、2 番目 のベクトルの原点から先端までの

125
00:06:19,929 --> 00:06:21,840
4 段階のパスを考えることができます。

126
00:06:21,840 --> 00:06:24,263
右に 1 歩、次に上に 2 歩、右に

127
00:06:24,263 --> 00:06:26,560
3 歩、そして下に 1 歩歩きます。

128
00:06:26,560 --> 00:06:29,886
最初に右方向の動きをすべて実行し、次に垂直方向の

129
00:06:29,886 --> 00:06:33,212
動きをすべて実行す るようにこれらの手順を再構成

130
00:06:33,212 --> 00:06:36,953
すると、最初に 1 プラス 3 を右 に移動し、次に

131
00:06:36,953 --> 00:06:40,280
2 マイナス 1 を上に移動すると解釈できます。

132
00:06:40,280 --> 00:06:43,034
したがって、新しいベクトルの座標は 1 プラス

133
00:06:43,034 --> 00:06:45,560
3 と 2 プラスマイナス 1 になります。

134
00:06:45,560 --> 00:06:50,284
一般に、この数値リストの概念におけるベクトル加算は、そ

135
00:06:50,284 --> 00:06:54,840
れらの項を一致させてそれぞれを加算するように見えます。

136
00:06:54,840 --> 00:06:58,600
もう 1 つの基本的なベクトル演算は数値による乗算です。

137
00:06:58,600 --> 00:07:01,800
これは、いくつかの例を見るだけで最も良く理解できます。

138
00:07:01,800 --> 00:07:06,163
数値 2 に特定のベクトルを掛けると、そのベクトル

139
00:07:06,163 --> 00:07:10,360
を開始時の 2 倍の長さに伸ばすことを意味します。

140
00:07:10,360 --> 00:07:12,668
そのベクトルに、たとえば 3 分の 1

141
00:07:12,668 --> 00:07:14,860
を乗算すると、元の長 さの 3 分の

142
00:07:14,860 --> 00:07:17,400
1 になるまで押しつぶされることになります。

143
00:07:17,400 --> 00:07:21,344
マイナス 1 などの負の数を掛けるとき。

144
00:07:21,344 --> 00:07:24,542
8 の場合、ベクトルは最初に反転され、次にその係数

145
00:07:24,542 --> 00:07:26,142
1 だけ引き伸ばされます。

146
00:07:26,142 --> 00:07:27,240
8.

147
00:07:27,240 --> 00:07:30,582
ベクトルを伸ばしたり押しつぶしたり、場合によっては方向を反転

148
00:07:30,582 --> 00:07:33,925
したりするこのプロセスは、2、3 分の 1、またはマイナス

149
00:07:33,925 --> 00:07:37,267
1 などの数値をキャッチするたびにスケーリングと呼ばれます。

150
00:07:37,267 --> 00:07:39,533
8 、このように動作し、ベクトルをスケ

151
00:07:39,533 --> 00:07:41,800
ーリングすることをスカラーと呼びます。

152
00:07:41,800 --> 00:07:44,833
実際、線形代数全体を通じて、数値が行う主な機能の 1

153
00:07:44,833 --> 00:07:46,856
つはベクトルをスケールすることであ

154
00:07:46,856 --> 00:07:50,114
るため、スカラーという単語は数値という単語とほとんど同じ意

155
00:07:50,114 --> 00:07:51,800
味で使用されるのが一般的です。

156
00:07:51,800 --> 00:07:56,032
数値的には、ベクトルを係数 2 で伸ばすことは、その各コ

157
00:07:56,032 --> 00:08:00,120
ンポーネントをその係数 2 で乗算することに対応します。

158
00:08:00,120 --> 00:08:03,493
したがって、数値のリストとしてのベクトルの概念では、特定

159
00:08:03,493 --> 00:08:06,866
のベクトルにスカラーを乗算す ることは、それらのコンポー

160
00:08:06,866 --> 00:08:10,360
ネントのそれぞれにそのスカラーを乗算することを意味します。

161
00:08:10,360 --> 00:08:13,544
次のビデオをご覧いただくと、線形代数のトピックはベクト

162
00:08:13,544 --> 00:08:16,729
ル加算とスカラー乗算という 2 つの基本的な演算を中心

163
00:08:16,729 --> 00:08:19,800
に展開する傾向があると私が言っている意味がわかります。

164
00:08:19,800 --> 00:08:23,173
そして、数学者がベクトルの表現方法から独立して

165
00:08:23,173 --> 00:08:26,547
抽象化されたこれらの演算のみを考える方法と理由

166
00:08:26,547 --> 00:08:29,640
については、最後のビデオで詳しく説明します。

167
00:08:29,640 --> 00:08:32,820
実のところ、私があなたに勧めているように、ベクトルを基本的

168
00:08:32,820 --> 00:08:36,000
に空間内の矢印であ り、たまたま優れた数値表現を持っている

169
00:08:36,000 --> 00:08:38,193
と考えるか、それとも基本的に優れた幾何

170
00:08:38,193 --> 00:08:41,373
学的表現を持っている数値のリストとして考えるかは問題ではあ

171
00:08:41,373 --> 00:08:42,360
りません。 解釈。

172
00:08:42,360 --> 00:08:46,378
線形代数の有用性は、これらのビューのいずれかに関係するの

173
00:08:46,378 --> 00:08:50,120
ではなく、それらの間を行き来する変換機能に関係します。

174
00:08:50,120 --> 00:08:52,525
これは、データ アナリストに、多くの数値リス

175
00:08:52,525 --> 00:08:55,149
トを視覚的な方法で概念化する優れた方法を提供し

176
00:08:55,149 --> 00:08:57,555
、データ内のパターンを明確にし、特定の操作が

177
00:08:57,555 --> 00:09:00,070
何を行うのかを全体的に把握できるようにします。

178
00:09:00,070 --> 00:09:02,558
そして逆に、物理学者やコンピューター

179
00:09:02,558 --> 00:09:05,571
グラフィックス プログ ラマーのような人々に、

180
00:09:05,571 --> 00:09:08,190
コンピューターで処理して実行できる数値

181
00:09:08,190 --> 00:09:12,120
を使用して空間と空間の操作を記述するための言語を提供します。

182
00:09:12,120 --> 00:09:15,014
たとえば、数学的なアニメーションを作成するときは、空間で

183
00:09:15,014 --> 00:09:16,771
実際に何が起こっているかを考える

184
00:09:16,771 --> 00:09:19,665
ことから始め、それからコンピューターに物事を数値的に表現

185
00:09:19,665 --> 00:09:21,319
させ、それによって画面上のどこ

186
00:09:21,319 --> 00:09:23,283
にピクセルを配置するかを決定します。

187
00:09:23,283 --> 00:09:26,074
これを行うには、通常、多くのことに依存します。 線形

188
00:09:26,074 --> 00:09:26,694
代数の理解。

189
00:09:26,694 --> 00:09:29,280
これでベクトルの基本は終わりました。

190
00:09:29,280 --> 00:09:31,594
次のビデオでは、スパン、ベース、

191
00:09:31,594 --> 00:09:34,725
線形依存などのベクトルに関する非常に優れた概念

192
00:09:34,725 --> 00:09:36,086
について説明します。

193
00:09:36,086 --> 00:09:51,560
それではまた！

