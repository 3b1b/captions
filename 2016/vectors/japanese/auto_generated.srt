1
00:00:10,920 --> 00:00:15,220
線形代数の基本的な基本的な構成要素はベクトルです。

2
00:00:15,720 --> 00:00:17,741
したがって、ベクトルとは正確には何なのかについて、全

3
00:00:17,741 --> 00:00:19,840
員が同じ認識を持っていることを確認することが重要です。

4
00:00:20,380 --> 00:00:22,932
ご存知のとおり、大まかに言って、ベクトルについては 

5
00:00:22,932 --> 00:00:25,387
3 つの異な る、しかし関連した考え方があります。

6
00:00:25,387 --> 00:00:27,743
 これらを物理学の学生の視点、 コンピューター 

7
00:00:27,743 --> 00:00:30,100
サイエンスの学生の視点、数学者の視点と呼びます。

8
00:00:30,880 --> 00:00:32,592
物理学を学ぶ学生の視点では、ベクトル

9
00:00:32,592 --> 00:00:34,400
は空間を指す矢印であると考えられます。

10
00:00:34,940 --> 00:00:37,646
特定のベクトルを定義するのは、その長さとそのベクトルが

11
00:00:37,646 --> 00:00:40,353
指す方向ですが、これら 2 つの事実が同じである限り、

12
00:00:40,353 --> 00:00:43,160
ベクトルをあちこちに移動しても、同じベクトルのままです。

13
00:00:44,040 --> 00:00:47,096
平面に存在するベクトルは二次元であり、あなたや私が住 

14
00:00:47,096 --> 00:00:50,040
んでいるより広い空間に存在するベクトルは三次元です。

15
00:00:51,720 --> 00:00:53,680
コンピューター サイエンスの観点では、ベクトルは

16
00:00:53,680 --> 00:00:55,640
順序付けられた数値のリストであると考えられます。

17
00:00:55,640 --> 00:00:59,354
たとえば、住宅価格に関する分析を行っていて、関 

18
00:00:59,354 --> 00:01:02,760
心のある特徴が面積と価格だけだったとします。

19
00:01:03,020 --> 00:01:05,910
各住宅を 1 組の数字でモデル化し、最初の数字 

20
00:01:05,910 --> 00:01:08,680
は面積を示し、2 番目の数字は価格を示します。

21
00:01:09,320 --> 00:01:11,040
ここで順序が重要であることに注意してください。

22
00:01:12,400 --> 00:01:15,283
専門用語では、家を 2 次元のベクトルとしてモデル化す

23
00:01:15,283 --> 00:01:18,166
ることになります。 こ の文脈では、ベクトルはほとんど

24
00:01:18,166 --> 00:01:20,729
リストを表す単なる派手な言葉であり、それを 2 

25
00:01:20,729 --> 00:01:22,865
次元にするのは、そのリストの長さが 2 

26
00:01:22,865 --> 00:01:24,040
であるという事実です。

27
00:01:25,640 --> 00:01:28,803
一方、数学者は、これら両方の見解を一般化しようとしています。

28
00:01:28,803 --> 00:01:31,439
 基本的に、ベクトルは 、2 つのベクトルを加算し

29
00:01:31,439 --> 00:01:34,391
、ベクトルに数値を乗算するという賢明な概念が存在するも 

30
00:01:34,391 --> 00:01:36,289
のであれば何でもよいと述べています。

31
00:01:36,289 --> 00:01:38,820
 演算については後ほど説明します。 このビデオ。

32
00:01:39,580 --> 00:01:42,404
このビューの詳細はかなり抽象的であり、実際には、 

33
00:01:42,404 --> 00:01:45,228
このシリーズの最後のビデオまで無視して、その間は 

34
00:01:45,228 --> 00:01:47,940
より具体的な設定を優先するのが健全だと思います。

35
00:01:48,400 --> 00:01:51,340
しかし、私がここでそれを取り上げる理由は、ベクトル

36
00:01:51,340 --> 00:01:54,280
の加算と数値による乗算の 考え方が線形代数全体で重

37
00:01:54,280 --> 00:01:57,220
要な役割を果たすという事実を示唆しているからです。

38
00:01:58,000 --> 00:01:59,948
しかし、これらの演算について話す前に、ベ

39
00:01:59,948 --> 00:02:01,896
クトルという言葉を言う ときに念頭に置く

40
00:02:01,896 --> 00:02:04,040
べき特定の考えについて整理しておきましょう。

41
00:02:04,740 --> 00:02:07,593
ここで私が幾何学的な焦点を当てていることを考えると 

42
00:02:07,593 --> 00:02:10,447
、ベクトルに関する新しいトピックを紹介するときは常 

43
00:02:10,447 --> 00:02:13,301
に、最初に矢印について考えてもらいたいのですが、具 

44
00:02:13,301 --> 00:02:16,155
体的には、xy 平面のような座標系内のその矢印につ 

45
00:02:16,155 --> 00:02:18,900
いて考えてください。 その尾は原点に座っています。

46
00:02:19,680 --> 00:02:22,355
これは、ベクトルが空間内のどこにでも自由に配置 

47
00:02:22,355 --> 00:02:24,920
できるという物理学生の観点とは少し異なります。

48
00:02:25,420 --> 00:02:30,320
線形代数では、ほとんどの場合、ベクトルは原点に根を置きます。

49
00:02:30,940 --> 00:02:34,208
次に、空間内の矢印のコンテキストで新しい概念を理解 

50
00:02:34,208 --> 00:02:37,100
したら、それを数値のリストの観点に変換します。

51
00:02:37,100 --> 00:02:40,620
 これ は、ベクトルの座標を考慮することで実行できます。

52
00:02:41,440 --> 00:02:44,029
さて、この座標系についてはすでによくご存じ 

53
00:02:44,029 --> 00:02:46,618
の方も多いと思いますが、線形代数の 2 つ 

54
00:02:46,618 --> 00:02:49,208
の観点間で重要なやり取りがすべてここで行わ 

55
00:02:49,208 --> 00:02:51,680
れるため、明示的に説明する価値はあります。

56
00:02:52,740 --> 00:02:55,068
ここでは 2 次元に注目します。

57
00:02:55,068 --> 00:02:57,397
 x 軸と呼ばれる水平線と、y 

58
00:02:57,397 --> 00:02:59,580
軸と呼ばれる垂直線があります。

59
00:03:00,260 --> 00:03:02,943
それらが交差する場所は原点と呼ばれ、空間の中心お 

60
00:03:02,943 --> 00:03:05,520
よびすべてのベクトルの根と考える必要があります。

61
00:03:06,380 --> 00:03:09,001
表すために任意の長さを選択した後、各軸 

62
00:03:09,001 --> 00:03:11,360
に目盛りを付けてこの距離を表します。

63
00:03:12,320 --> 00:03:15,270
これらのビデオでよく出てくる 2D 空間全 

64
00:03:15,270 --> 00:03:18,220
体のアイデアを伝えたいときは、目盛りを拡張 

65
00:03:18,220 --> 00:03:21,170
してグリッド線を作成しますが、現時点では実 

66
00:03:21,170 --> 00:03:24,120
際には少し長くなります。 ちょっと邪魔です。

67
00:03:24,120 --> 00:03:28,014
ベクトルの座標は、基本的に、そのベクト ルの末尾 (原点) 

68
00:03:28,014 --> 00:03:31,520
から先端までの移 動方法を指示する 1 対の数値です。

69
00:03:31,520 --> 00:03:34,709
最初の数値は、X 軸に沿ってどれだけ歩くかを 示します。

70
00:03:34,709 --> 00:03:36,873
 正の数値は右方向への動きを示し、負 

71
00:03:36,873 --> 00:03:38,809
の数値は左方向への動きを示します。

72
00:03:38,809 --> 00:03:42,226
 2 番目の 数値は、その後 Y 軸に沿ってどのくらいの距 

73
00:03:42,226 --> 00:03:45,301
離を歩くかを示します。 正の数値は上向きを示し ます。

74
00:03:45,301 --> 00:03:47,580
 動き、および下向きの動きを示す負の数。

75
00:03:48,140 --> 00:03:50,344
ベクトルと点を区別するには、こ 

76
00:03:50,344 --> 00:03:54,340
の数値のペアを縦方向に書き、 角かっこで囲むのが慣例です。

77
00:03:56,340 --> 00:04:00,074
すべての数値のペアは 1 つだけのベクトルを与え、すべて 

78
00:04:00,074 --> 00:04:03,680
のベクトルは 1 つだけの数値のペアに関連付けられます。

79
00:04:04,640 --> 00:04:05,500
三次元ではどうでしょうか？

80
00:04:06,200 --> 00:04:09,415
さて、x 軸と y 軸の両方に垂直な 3 番目の軸 

81
00:04:09,415 --> 00:04:11,764
( z 軸と呼ばれる) を追加します。

82
00:04:11,764 --> 00:04:14,608
 この場合、各ベクト ルは順序付けられた 3 

83
00:04:14,608 --> 00:04:16,339
つの数値に関連付けられます。

84
00:04:16,860 --> 00:04:20,284
1 つ目は、X 軸に沿って移動する距離を示し、2 

85
00:04:20,284 --> 00:04:23,571
つ 目は、Y 軸に平行に移動する距離を示し、3 

86
00:04:23,571 --> 00:04:27,680
つ目は、 この新しい Z 軸に平行に移動する距離を示します。

87
00:04:28,400 --> 00:04:30,517
数値のすべての 3 つの組は空間内で 1 

88
00:04:30,517 --> 00:04:33,341
つの固有のベクトルを与え、空 間内のすべてのベクトルは 

89
00:04:33,341 --> 00:04:35,560
1 つの数値の 3 つの組を正確に与えます。

90
00:04:36,900 --> 00:04:40,100
さて、ベクトルの加算と数値の乗算に戻ります。

91
00:04:40,460 --> 00:04:42,901
結局のところ、線形代数のすべてのトピックは、これら 

92
00:04:42,901 --> 00:04:44,780
2 つの演算を中心とすることになります。

93
00:04:45,440 --> 00:04:47,640
幸いなことに、それぞれの定義は非常に簡単です。

94
00:04:48,480 --> 00:04:51,071
2 つのベクトルがあり、1 つは上で少し右を指し 

95
00:04:51,071 --> 00:04:53,560
、もう 1 つは右と少し下を指しているとします。

96
00:04:53,960 --> 00:04:56,659
これら 2 つのベクトルを追加するには、尾部が最初のベクト

97
00:04:56,659 --> 00:04:59,360
ルの先端に位置するように 2 番目のベクトルを移動します。

98
00:04:59,360 --> 00:05:01,641
次に、最初のベクトルの尾部から 2 

99
00:05:01,641 --> 00:05:04,176
番目のベクトルの先端が位置する位置まで 

100
00:05:04,176 --> 00:05:07,218
新しいベクトルを描画すると、その新しいベクトルは

101
00:05:07,218 --> 00:05:08,740
それらの合計になります。

102
00:05:12,080 --> 00:05:15,542
ちなみに、この加算の定義は、線形代数においてベ 

103
00:05:15,542 --> 00:05:18,860
クトルを原点から逸脱させるほぼ唯一の場合です。

104
00:05:19,720 --> 00:05:21,480
さて、なぜこれが合理的な行為なのでしょうか?

105
00:05:21,740 --> 00:05:24,020
なぜ他の定義ではなく、この加算の定義なのでしょうか?

106
00:05:25,520 --> 00:05:27,906
そうですね、私がよく考えているのは、各ベクトル

107
00:05:27,906 --> 00:05:30,293
は空間内での特定の動き 、つまり特定の距離と方

108
00:05:30,293 --> 00:05:32,680
向を持ったステップを表しているということです。

109
00:05:33,980 --> 00:05:36,572
最初のベクトルに沿って一歩を踏み出し、次に 2 

110
00:05:36,572 --> 00:05:39,272
番目のベクトルで示 される方向と距離に一歩進んだ場

111
00:05:39,272 --> 00:05:41,324
合、全体的な効果は、最初にこれら 2 

112
00:05:41,324 --> 00:05:44,024
つのベクトルの合計に沿って移動した場合とまったく同

113
00:05:44,024 --> 00:05:44,780
じになります。

114
00:05:45,260 --> 00:05:47,360
これは、数直線上の数字の足し算についての

115
00:05:47,360 --> 00:05:49,460
考え方の延長として考えることができます。

116
00:05:50,180 --> 00:05:52,972
これについて子供たちに教える 1 つの方法は、たとえば 

117
00:05:52,972 --> 00:05:54,867
2 プラス 5 につい て、右に 2 

118
00:05:54,867 --> 00:05:57,461
歩移動してからさらに右に 5 歩移動することを考える

119
00:05:57,461 --> 00:05:57,960
ことです。

120
00:05:57,960 --> 00:06:01,720
全体的な効果は、右に 7 歩進んだ場合と同じです。

121
00:06:02,660 --> 00:06:04,027
実際に、ベクトル加算が数値的にど

122
00:06:04,027 --> 00:06:05,480
のように見えるかを見てみましょう。

123
00:06:06,020 --> 00:06:09,368
ここでの最初のベクトルの座標は 1、2 であり、2 

124
00:06:09,368 --> 00:06:12,460
番目のベクトルの座標は 3、マイナス 1 です。

125
00:06:14,360 --> 00:06:16,713
この先端から末尾までの方法を使用してベクトルの合

126
00:06:16,713 --> 00:06:19,556
計を取得すると、2 番目 のベクトルの原点から先端までの 

127
00:06:19,556 --> 00:06:21,420
4 段階のパスを考えることができます。

128
00:06:21,840 --> 00:06:23,781
右に 1 歩、次に上に 2 歩、右に 

129
00:06:23,781 --> 00:06:25,620
3 歩、そして下に 1 歩歩きます。

130
00:06:26,920 --> 00:06:29,649
最初に右方向の動きをすべて実行し、次に垂直方向の

131
00:06:29,649 --> 00:06:32,379
動きをすべて実行す るようにこれらの手順を再構成

132
00:06:32,379 --> 00:06:35,450
すると、最初に 1 プラス 3 を右 に移動し、次に 

133
00:06:35,450 --> 00:06:38,180
2 マイナス 1 を上に移動すると解釈できます。

134
00:06:40,080 --> 00:06:42,605
したがって、新しいベクトルの座標は 1 プラス 

135
00:06:42,605 --> 00:06:44,920
3 と 2 プラスマイナス 1 になります。

136
00:06:45,600 --> 00:06:49,214
一般に、この数値リストの概念におけるベクトル加算は、そ 

137
00:06:49,214 --> 00:06:52,700
れらの項を一致させてそれぞれを加算するように見えます。

138
00:06:54,640 --> 00:06:58,360
もう 1 つの基本的なベクトル演算は数値による乗算です。

139
00:06:58,860 --> 00:07:01,380
これは、いくつかの例を見るだけで最も良く理解できます。

140
00:07:01,840 --> 00:07:05,806
数値 2 に特定のベクトルを掛けると、そのベクトル 

141
00:07:05,806 --> 00:07:09,620
を開始時の 2 倍の長さに伸ばすことを意味します。

142
00:07:10,500 --> 00:07:12,585
そのベクトルに、たとえば 3 分の 1 

143
00:07:12,585 --> 00:07:14,566
を乗算すると、元の長 さの 3 分の 

144
00:07:14,566 --> 00:07:16,860
1 になるまで押しつぶされることになります。

145
00:07:17,640 --> 00:07:20,479
マイナス 1 などの負の数を掛けるとき。

146
00:07:20,479 --> 00:07:24,170
8 の場合、ベクトルは最初に反転され、次にその係数 

147
00:07:24,170 --> 00:07:26,300
1 だけ引き伸ばされます。8.

148
00:07:27,360 --> 00:07:30,051
ベクトルを伸ばしたり押しつぶしたり、場合によっては

149
00:07:30,051 --> 00:07:32,742
方向を反転したりするこのプロセスは、2、3 分の 

150
00:07:32,742 --> 00:07:35,434
1、またはマイナス 1 などの数値をキャッチするた

151
00:07:35,434 --> 00:07:37,264
びにスケーリングと呼ばれます。8 

152
00:07:37,264 --> 00:07:39,955
、このように動作し、ベクトルをスケーリングすること

153
00:07:39,955 --> 00:07:41,140
をスカラーと呼びます。

154
00:07:41,940 --> 00:07:44,743
実際、線形代数全体を通じて、数値が行う主な機能の 1 

155
00:07:44,743 --> 00:07:46,611
つはベクトルをスケールすることであ 

156
00:07:46,611 --> 00:07:49,622
るため、スカラーという単語は数値という単語とほとんど同じ意

157
00:07:49,622 --> 00:07:51,180
味で使用されるのが一般的です。

158
00:07:52,020 --> 00:07:55,866
数値的には、ベクトルを係数 2 で伸ばすことは、その各コ 

159
00:07:55,866 --> 00:07:59,580
ンポーネントをその係数 2 で乗算することに対応します。

160
00:08:00,300 --> 00:08:02,823
したがって、数値のリストとしてのベクトルの概念では、特定

161
00:08:02,823 --> 00:08:05,346
のベクトルにスカラーを乗算す ることは、それらのコンポー

162
00:08:05,346 --> 00:08:07,960
ネントのそれぞれにそのスカラーを乗算することを意味します。

163
00:08:07,960 --> 00:08:11,758
次のビデオをご覧いただくと、線形代数のトピックはベクト 

164
00:08:11,758 --> 00:08:15,557
ル加算とスカラー乗算という 2 つの基本的な演算を中心 

165
00:08:15,557 --> 00:08:19,220
に展開する傾向があると私が言っている意味がわかります。

166
00:08:19,980 --> 00:08:23,113
そして、数学者がベクトルの表現方法から独立して 

167
00:08:23,113 --> 00:08:26,247
抽象化されたこれらの演算のみを考える方法と理由 

168
00:08:26,247 --> 00:08:29,120
については、最後のビデオで詳しく説明します。

169
00:08:29,800 --> 00:08:32,850
実のところ、私があなたに勧めているように、ベクトルを基本的

170
00:08:32,850 --> 00:08:35,900
に空間内の矢印であ り、たまたま優れた数値表現を持っている

171
00:08:35,900 --> 00:08:38,003
と考えるか、それとも基本的に優れた幾何 

172
00:08:38,003 --> 00:08:41,053
学的表現を持っている数値のリストとして考えるかは問題ではあ

173
00:08:41,053 --> 00:08:42,000
りません。 解釈。

174
00:08:42,520 --> 00:08:46,248
線形代数の有用性は、これらのビューのいずれかに関係するの 

175
00:08:46,248 --> 00:08:49,720
ではなく、それらの間を行き来する変換機能に関係します。

176
00:08:50,140 --> 00:08:52,489
これは、データ アナリストに、多くの数値リス

177
00:08:52,489 --> 00:08:55,053
トを視覚的な方法で概念化する優れた方法を提供し 

178
00:08:55,053 --> 00:08:57,403
、データ内のパターンを明確にし、特定の操作が

179
00:08:57,403 --> 00:08:59,860
何を行うのかを全体的に把握できるようにします。

180
00:08:59,860 --> 00:09:02,999
そして逆に、物理学者やコンピューター 

181
00:09:02,999 --> 00:09:06,799
グラフィックス プログ ラマーのような人々に、

182
00:09:06,799 --> 00:09:10,103
コンピューターで処理して実行できる数値 

183
00:09:10,103 --> 00:09:15,060
を使用して空間と空間の操作を記述するための言語を提供します。

184
00:09:15,060 --> 00:09:17,812
たとえば、数学的なアニメーションを作成するときは、空間で

185
00:09:17,812 --> 00:09:19,483
実際に何が起こっているかを考える 

186
00:09:19,483 --> 00:09:22,235
ことから始め、それからコンピューターに物事を数値的に表現

187
00:09:22,235 --> 00:09:23,808
させ、それによって画面上のどこ 

188
00:09:23,808 --> 00:09:25,577
にピクセルを配置するかを決定します。

189
00:09:25,577 --> 00:09:27,937
 これを行うには、通常、多くのことに依存します。

190
00:09:27,937 --> 00:09:28,920
 線形 代数の理解。

191
00:09:28,920 --> 00:09:30,803
これでベクトルの基本は終わりました。

192
00:09:30,803 --> 00:09:32,686
 次のビデオでは、スパン、ベース、 

193
00:09:32,686 --> 00:09:35,093
線形依存などのベクトルに関する非常に優れた概念

194
00:09:35,093 --> 00:09:36,140
について説明します。

195
00:09:40,940 --> 00:09:51,820
それではまた！

