1
00:00:11,176 --> 00:00:15,760
線形代数の基本的な基本的な構成要素はベクトルです。

2
00:00:15,760 --> 00:00:20,420
したがって、ベクトルとは正確には何なのかについて、全員が同じ認識を持っていることを確認することが重要です。

3
00:00:20,420 --> 00:00:24,960
ご存知のとおり、大まかに言って、ベクトルについては 3 つの異な

4
00:00:24,960 --> 00:00:28,960
る、しかし関連した考え方があります。これらを物理学の学生の視点、

5
00:00:28,960 --> 00:00:30,880
コンピューター サイエンスの学生の視点、数学者の視点と呼びます。

6
00:00:30,880 --> 00:00:35,040
物理学を学ぶ学生の視点では、ベクトルは空間を指す矢印であると考えられます。

7
00:00:35,040 --> 00:00:39,320
特定のベクトルを定義するのは、その長さとそのベクトルが指す方向ですが、これら 2

8
00:00:39,320 --> 00:00:44,200
つの事実が同じである限り、ベクトルをあちこちに移動しても、同じベクトルのままです。

9
00:00:44,200 --> 00:00:46,700
平面に存在するベクトルは二次元であり、あなたや私が住

10
00:00:46,700 --> 00:00:51,840
んでいるより広い空間に存在するベクトルは三次元です。

11
00:00:51,840 --> 00:00:56,320
コンピューター サイエンスの観点では、ベクトルは順序付けられた数値のリストであると考えられます。

12
00:00:56,320 --> 00:00:59,880
たとえば、住宅価格に関する分析を行っていて、関

13
00:00:59,880 --> 00:01:03,320
心のある特徴が面積と価格だけだったとします。

14
00:01:03,320 --> 00:01:05,820
各住宅を 1 組の数字でモデル化し、最初の数字

15
00:01:05,820 --> 00:01:09,520
は面積を示し、2 番目の数字は価格を示します。

16
00:01:09,520 --> 00:01:12,880
ここで順序が重要であることに注意してください。

17
00:01:12,880 --> 00:01:16,360
専門用語では、家を 2 次元のベクトルとしてモデル化することになります。こ

18
00:01:16,360 --> 00:01:20,400
の文脈では、ベクトルはほとんどリストを表す単なる派手な言葉であり、それを

19
00:01:20,400 --> 00:01:25,880
2 次元にするのは、そのリストの長さが 2 であるという事実です。 。

20
00:01:25,880 --> 00:01:29,760
一方、数学者は、これら両方の見解を一般化しようとしています。基本的に、ベクトルは

21
00:01:29,760 --> 00:01:34,600
、2 つのベクトルを加算し、ベクトルに数値を乗算するという賢明な概念が存在するも

22
00:01:34,600 --> 00:01:39,600
のであれば何でもよいと述べています。演算については後ほど説明します。このビデオ。

23
00:01:39,600 --> 00:01:42,000
このビューの詳細はかなり抽象的であり、実際には、

24
00:01:42,000 --> 00:01:45,880
このシリーズの最後のビデオまで無視して、その間は

25
00:01:45,880 --> 00:01:48,540
より具体的な設定を優先するのが健全だと思います。

26
00:01:48,540 --> 00:01:53,160
しかし、私がここでそれを取り上げる理由は、ベクトルの加算と数値による乗算の

27
00:01:53,200 --> 00:01:57,960
考え方が線形代数全体で重要な役割を果たすという事実を示唆しているからです。

28
00:01:57,960 --> 00:01:59,840
しかし、これらの演算について話す前に、ベクトルという言葉を言う

29
00:01:59,840 --> 00:02:04,720
ときに念頭に置くべき特定の考えについて整理しておきましょう。

30
00:02:04,720 --> 00:02:07,120
ここで私が幾何学的な焦点を当てていることを考えると

31
00:02:07,120 --> 00:02:09,760
、ベクトルに関する新しいトピックを紹介するときは常

32
00:02:09,760 --> 00:02:12,120
に、最初に矢印について考えてもらいたいのですが、具

33
00:02:12,120 --> 00:02:16,120
体的には、xy 平面のような座標系内のその矢印につ

34
00:02:16,120 --> 00:02:19,720
いて考えてください。その尾は原点に座っています。

35
00:02:19,720 --> 00:02:22,320
これは、ベクトルが空間内のどこにでも自由に配置

36
00:02:22,320 --> 00:02:25,400
できるという物理学生の観点とは少し異なります。

37
00:02:25,400 --> 00:02:31,080
線形代数では、ほとんどの場合、ベクトルは原点に根を置きます。

38
00:02:31,080 --> 00:02:35,560
次に、空間内の矢印のコンテキストで新しい概念を理解

39
00:02:35,560 --> 00:02:38,360
したら、それを数値のリストの観点に変換します。これ

40
00:02:38,360 --> 00:02:41,440
は、ベクトルの座標を考慮することで実行できます。

41
00:02:41,440 --> 00:02:45,120
さて、この座標系についてはすでによくご存じ

42
00:02:45,120 --> 00:02:46,600
の方も多いと思いますが、線形代数の 2 つ

43
00:02:46,600 --> 00:02:49,840
の観点間で重要なやり取りがすべてここで行わ

44
00:02:49,880 --> 00:02:52,680
れるため、明示的に説明する価値はあります。

45
00:02:52,680 --> 00:02:55,280
ここでは 2 次元に注目します。

46
00:02:55,280 --> 00:02:57,760
x 軸と呼ばれる水平線と、y

47
00:02:57,760 --> 00:03:00,320
軸と呼ばれる垂直線があります。

48
00:03:00,320 --> 00:03:02,640
それらが交差する場所は原点と呼ばれ、空間の中心お

49
00:03:02,640 --> 00:03:06,400
よびすべてのベクトルの根と考える必要があります。

50
00:03:06,400 --> 00:03:08,720
表すために任意の長さを選択した後、各軸

51
00:03:08,720 --> 00:03:12,360
に目盛りを付けてこの距離を表します。

52
00:03:12,360 --> 00:03:15,160
これらのビデオでよく出てくる 2D 空間全

53
00:03:15,160 --> 00:03:17,080
体のアイデアを伝えたいときは、目盛りを拡張

54
00:03:17,080 --> 00:03:19,320
してグリッド線を作成しますが、現時点では実

55
00:03:19,320 --> 00:03:22,080
際には少し長くなります。ちょっと邪魔です。

56
00:03:22,080 --> 00:03:24,760
ベクトルの座標は、基本的に、そのベクト

57
00:03:24,760 --> 00:03:28,640
ルの末尾 (原点) から先端までの移

58
00:03:28,640 --> 00:03:30,960
動方法を指示する 1 対の数値です。

59
00:03:30,960 --> 00:03:34,080
最初の数値は、X 軸に沿ってどれだけ歩くかを

60
00:03:34,080 --> 00:03:36,000
示します。正の数値は右方向への動きを示し、負

61
00:03:36,000 --> 00:03:38,360
の数値は左方向への動きを示します。2 番目の

62
00:03:38,360 --> 00:03:43,360
数値は、その後 Y 軸に沿ってどのくらいの距

63
00:03:43,360 --> 00:03:45,320
離を歩くかを示します。正の数値は上向きを示し

64
00:03:45,320 --> 00:03:48,360
ます。動き、および下向きの動きを示す負の数。

65
00:03:48,400 --> 00:03:50,040
ベクトルと点を区別するには、こ

66
00:03:50,040 --> 00:03:52,320
の数値のペアを縦方向に書き、

67
00:03:52,320 --> 00:03:54,320
角かっこで囲むのが慣例です。

68
00:03:56,320 --> 00:04:00,000
すべての数値のペアは 1 つだけのベクトルを与え、すべて

69
00:04:00,000 --> 00:04:04,640
のベクトルは 1 つだけの数値のペアに関連付けられます。

70
00:04:04,640 --> 00:04:06,160
三次元ではどうでしょうか？

71
00:04:06,160 --> 00:04:09,320
さて、x 軸と y 軸の両方に垂直な 3 番目の軸 (

72
00:04:09,320 --> 00:04:12,720
z 軸と呼ばれる) を追加します。この場合、各ベクト

73
00:04:12,720 --> 00:04:16,840
ルは順序付けられた 3 つの数値に関連付けられます。

74
00:04:16,840 --> 00:04:19,840
1 つ目は、X 軸に沿って移動する距離を示し、2 つ

75
00:04:19,840 --> 00:04:23,520
目は、Y 軸に平行に移動する距離を示し、3 つ目は、

76
00:04:23,520 --> 00:04:28,400
この新しい Z 軸に平行に移動する距離を示します。

77
00:04:28,400 --> 00:04:32,160
数値のすべての 3 つの組は空間内で 1 つの固有のベクトルを与え、空

78
00:04:32,160 --> 00:04:36,000
間内のすべてのベクトルは 1 つの数値の 3 つの組を正確に与えます。

79
00:04:36,880 --> 00:04:40,520
さて、ベクトルの加算と数値の乗算に戻ります。

80
00:04:40,520 --> 00:04:45,400
結局のところ、線形代数のすべてのトピックは、これら 2 つの演算を中心とすることになります。

81
00:04:45,400 --> 00:04:48,480
幸いなことに、それぞれの定義は非常に簡単です。

82
00:04:48,480 --> 00:04:51,880
2 つのベクトルがあり、1 つは上で少し右を指し

83
00:04:51,880 --> 00:04:54,240
、もう 1 つは右と少し下を指しているとします。

84
00:04:54,240 --> 00:05:00,320
これら 2 つのベクトルを追加するには、尾部が最初のベクトルの先端に位置するように 2 番目のベクトルを移動します。

85
00:05:00,320 --> 00:05:04,360
次に、最初のベクトルの尾部から 2 番目のベクトルの先端が位置する位置まで

86
00:05:04,360 --> 00:05:09,320
新しいベクトルを描画すると、その新しいベクトルはそれらの合計になります。

87
00:05:12,120 --> 00:05:14,080
ちなみに、この加算の定義は、線形代数においてベ

88
00:05:14,080 --> 00:05:19,680
クトルを原点から逸脱させるほぼ唯一の場合です。

89
00:05:19,680 --> 00:05:21,720
さて、なぜこれが合理的な行為なのでしょうか?

90
00:05:21,720 --> 00:05:24,480
なぜ他の定義ではなく、この加算の定義なのでしょうか?

91
00:05:25,600 --> 00:05:29,800
そうですね、私がよく考えているのは、各ベクトルは空間内での特定の動き

92
00:05:29,800 --> 00:05:32,960
、つまり特定の距離と方向を持ったステップを表しているということです。

93
00:05:34,240 --> 00:05:36,560
最初のベクトルに沿って一歩を踏み出し、次に 2 番目のベクトルで示

94
00:05:36,560 --> 00:05:40,120
される方向と距離に一歩進んだ場合、全体的な効果は、最初にこれら 2

95
00:05:40,120 --> 00:05:45,520
つのベクトルの合計に沿って移動した場合とまったく同じになります。

96
00:05:45,520 --> 00:05:50,200
これは、数直線上の数字の足し算についての考え方の延長として考えることができます。

97
00:05:50,200 --> 00:05:53,760
これについて子供たちに教える 1 つの方法は、たとえば 2 プラス 5 につい

98
00:05:53,760 --> 00:05:58,480
て、右に 2 歩移動してからさらに右に 5 歩移動することを考えることです。

99
00:05:58,480 --> 00:06:02,640
全体的な効果は、右に 7 歩進んだ場合と同じです。

100
00:06:02,640 --> 00:06:06,200
実際に、ベクトル加算が数値的にどのように見えるかを見てみましょう。

101
00:06:06,200 --> 00:06:09,960
ここでの最初のベクトルの座標は 1、2 であり、2

102
00:06:09,960 --> 00:06:12,840
番目のベクトルの座標は 3、マイナス 1 です。

103
00:06:14,600 --> 00:06:17,560
この先端から末尾までの方法を使用してベクトルの合計を取得すると、2 番目

104
00:06:17,560 --> 00:06:21,840
のベクトルの原点から先端までの 4 段階のパスを考えることができます。

105
00:06:21,840 --> 00:06:26,560
右に 1 歩、次に上に 2 歩、右に 3 歩、そして下に 1 歩歩きます。

106
00:06:26,560 --> 00:06:30,320
最初に右方向の動きをすべて実行し、次に垂直方向の動きをすべて実行す

107
00:06:30,320 --> 00:06:33,160
るようにこれらの手順を再構成すると、最初に 1 プラス 3 を右

108
00:06:33,160 --> 00:06:38,520
に移動し、次に 2 マイナス 1 を上に移動すると解釈できます。

109
00:06:40,280 --> 00:06:45,560
したがって、新しいベクトルの座標は 1 プラス 3 と 2 プラスマイナス 1 になります。

110
00:06:45,560 --> 00:06:49,080
一般に、この数値リストの概念におけるベクトル加算は、そ

111
00:06:49,080 --> 00:06:52,760
れらの項を一致させてそれぞれを加算するように見えます。

112
00:06:54,840 --> 00:06:58,600
もう 1 つの基本的なベクトル演算は数値による乗算です。

113
00:06:58,600 --> 00:07:01,800
これは、いくつかの例を見るだけで最も良く理解できます。

114
00:07:01,800 --> 00:07:05,160
数値 2 に特定のベクトルを掛けると、そのベクトル

115
00:07:05,240 --> 00:07:09,640
を開始時の 2 倍の長さに伸ばすことを意味します。

116
00:07:10,360 --> 00:07:13,080
そのベクトルに、たとえば 3 分の 1 を乗算すると、元の長

117
00:07:13,080 --> 00:07:16,760
さの 3 分の 1 になるまで押しつぶされることになります。

118
00:07:17,400 --> 00:07:21,480
マイナス 1 などの負の数を掛けるとき。8

119
00:07:21,480 --> 00:07:26,200
の場合、ベクトルは最初に反転され、次にその係数 1 だけ引き伸ばされます。8.

120
00:07:27,240 --> 00:07:31,640
ベクトルを伸ばしたり押しつぶしたり、場合によっては方向を反転したりするこのプロセスは、2、3

121
00:07:31,640 --> 00:07:37,400
分の 1、またはマイナス 1 などの数値をキャッチするたびにスケーリングと呼ばれます。8

122
00:07:37,400 --> 00:07:41,080
、このように動作し、ベクトルをスケーリングすることをスカラーと呼びます。

123
00:07:41,800 --> 00:07:47,000
実際、線形代数全体を通じて、数値が行う主な機能の 1 つはベクトルをスケールすることであ

124
00:07:47,000 --> 00:07:51,080
るため、スカラーという単語は数値という単語とほとんど同じ意味で使用されるのが一般的です。

125
00:07:51,800 --> 00:07:55,480
数値的には、ベクトルを係数 2 で伸ばすことは、その各コ

126
00:07:55,480 --> 00:07:59,560
ンポーネントをその係数 2 で乗算することに対応します。

127
00:08:00,120 --> 00:08:05,000
したがって、数値のリストとしてのベクトルの概念では、特定のベクトルにスカラーを乗算す

128
00:08:05,000 --> 00:08:08,360
ることは、それらのコンポーネントのそれぞれにそのスカラーを乗算することを意味します。

129
00:08:10,360 --> 00:08:13,960
次のビデオをご覧いただくと、線形代数のトピックはベクト

130
00:08:13,960 --> 00:08:17,240
ル加算とスカラー乗算という 2 つの基本的な演算を中心

131
00:08:17,240 --> 00:08:19,240
に展開する傾向があると私が言っている意味がわかります。

132
00:08:19,800 --> 00:08:23,560
そして、数学者がベクトルの表現方法から独立して

133
00:08:23,560 --> 00:08:27,800
抽象化されたこれらの演算のみを考える方法と理由

134
00:08:27,800 --> 00:08:29,080
については、最後のビデオで詳しく説明します。

135
00:08:29,640 --> 00:08:33,720
実のところ、私があなたに勧めているように、ベクトルを基本的に空間内の矢印であ

136
00:08:33,720 --> 00:08:37,960
り、たまたま優れた数値表現を持っていると考えるか、それとも基本的に優れた幾何

137
00:08:37,960 --> 00:08:42,360
学的表現を持っている数値のリストとして考えるかは問題ではありません。解釈。

138
00:08:42,360 --> 00:08:46,120
線形代数の有用性は、これらのビューのいずれかに関係するの

139
00:08:46,120 --> 00:08:49,560
ではなく、それらの間を行き来する変換機能に関係します。

140
00:08:50,120 --> 00:08:54,840
これは、データ アナリストに、多くの数値リストを視覚的な方法で概念化する優れた方法を提供し

141
00:08:54,920 --> 00:08:59,960
、データ内のパターンを明確にし、特定の操作が何を行うのかを全体的に把握できるようにします。

142
00:08:59,960 --> 00:09:04,920
そして逆に、物理学者やコンピューター グラフィックス プログ

143
00:09:04,920 --> 00:09:08,840
ラマーのような人々に、コンピューターで処理して実行できる数値

144
00:09:08,840 --> 00:09:11,320
を使用して空間と空間の操作を記述するための言語を提供します。

145
00:09:12,120 --> 00:09:16,920
たとえば、数学的なアニメーションを作成するときは、空間で実際に何が起こっているかを考える

146
00:09:16,920 --> 00:09:21,560
ことから始め、それからコンピューターに物事を数値的に表現させ、それによって画面上のどこ

147
00:09:21,560 --> 00:09:25,960
にピクセルを配置するかを決定します。これを行うには、通常、多くのことに依存します。線形

148
00:09:25,960 --> 00:09:31,160
代数の理解。これでベクトルの基本は終わりました。次のビデオでは、スパン、ベース、

149
00:09:31,160 --> 00:09:36,840
線形依存などのベクトルに関する非常に優れた概念について説明します。それではまた！

150
00:09:51,560 --> 00:09:52,460


