[
 {
  "input": "Hey everyone, where we last left off, I showed what linear transformations look like and how to represent them using matrices.",
  "model": "nmt",
  "translatedText": "皆さん、前回の続きで、線形変換がどのようなものなのか、そ して行列を使用して線形変換を表現する方法を説明しました。",
  "time_range": [
   11.109,
   18.36
  ]
 },
 {
  "input": "This is worth a quick recap because it's just really important, but of course if this feels like more than just a recap, go back and watch the full video.",
  "model": "nmt",
  "translatedText": "これは本当に重要なことなので、簡単に要約する価値がありますが、もちろん、こ れが単なる要約以上のものだと感じた場合は、戻ってビデオ全体を見てください。",
  "time_range": [
   18.36,
   26.28
  ]
 },
 {
  "input": "Generally speaking, linear transformations are functions with vectors as inputs and vectors as outputs, but I showed last time how we can think about them visually as smooshing around space in such a way that grid lines stay parallel and evenly spaced, and so that the origin remains fixed.",
  "model": "nmt",
  "translatedText": "一般的に、線形変換は入力としてベクト ル、出力としてベクトルを持つ関数です が、前回、グリッド線が平行で等間隔に 保たれ、原点が固定されたままです。",
  "time_range": [
   26.28,
   41.84
  ]
 },
 {
  "input": "The key takeaway was that a linear transformation is completely determined by where it takes the basis vectors of the space, which for two dimensions means i-hat and j-hat.",
  "model": "nmt",
  "translatedText": "重要な点は、線形変換は空間の基底ベクトル (2 次元の場合は i-hat と j -hat を意味します) をどこに取るかによって完全に決定されるということです。",
  "time_range": [
   41.84,
   52.26
  ]
 },
 {
  "input": "This is because any other vector could be described as a linear combination of those basis vectors.",
  "model": "nmt",
  "translatedText": "これは、他のベクトルはそれらの基底ベクト ルの線形結合として記述できるためです。",
  "time_range": [
   52.26,
   57.82
  ]
 },
 {
  "input": "A vector with coordinates x, y is x times i-hat plus y times j-hat.",
  "model": "nmt",
  "translatedText": "座標 x、y を持つベクトルは、x に i-hat を掛けたものに、y に j-hat を掛けたものです。",
  "time_range": [
   57.82,
   63.46
  ]
 },
 {
  "input": "After going through the transformation, this property that grid lines remain parallel and evenly spaced has a wonderful consequence.",
  "model": "nmt",
  "translatedText": "変換を経た後、グリッド線が平行かつ等間隔に保たれる というこの特性は、素晴らしい結果をもたらします。",
  "time_range": [
   63.46,
   70.6
  ]
 },
 {
  "input": "The place where your vector lands will be x times the transformed version of i-hat plus y times the transformed version of j-hat.",
  "model": "nmt",
  "translatedText": "ベクトルが着地する場所は、i-hat の変換バージョンの x 倍に 、j-hat の変換バージョンの y 倍を加えた場所になります。",
  "time_range": [
   70.6,
   78.44
  ]
 },
 {
  "input": "This means if you keep a record of the coordinates where i-hat lands and the coordinates where j-hat lands, you can compute that a vector which starts at x, y must land on x times the new coordinates of i-hat plus y times the new coordinates of j-hat.",
  "model": "nmt",
  "translatedText": "これは、i-hat が着地する座標と j-hat が着地する座標を記録しておくと、 x、y で始まるベクトルは、i-hat に y を加えた新しい座標の x 倍の位 置に着地する必要があることを計算できます。 j-hat の新しい座標を倍します。",
  "time_range": [
   78.44,
   93.6
  ]
 },
 {
  "input": "The convention is to record the coordinates of where i-hat and j-hat land as the columns of a matrix, and to define this sum of the scaled versions of those columns by x and y to be matrix-vector multiplication.",
  "model": "nmt",
  "translatedText": "慣例では、i ハットと j ハットが配置される場所の座標を 行列の列として記録し、これらの列を x と y でスケーリ ングしたものの合計を行列とベクトルの乗算として定義します。",
  "time_range": [
   93.6,
   106.28
  ]
 },
 {
  "input": "In this way, a matrix represents a specific linear transformation, and multiplying a matrix by a vector is what it means computationally to apply that transformation to that vector.",
  "model": "nmt",
  "translatedText": "このように、行列は特定の線形変換を表し、行列にベクトルを乗算するこ とは、その変換をそのベクトルに適用することを計算的に意味します。",
  "time_range": [
   106.28,
   118.04
  ]
 },
 {
  "input": "Alright, recap over, on to the new stuff.",
  "model": "nmt",
  "translatedText": "さて、おさらいして新しい内容に移りましょう。",
  "time_range": [
   118.04,
   121.76
  ]
 },
 {
  "input": "Oftentimes you find yourself wanting to describe the effects of applying one transformation and then another.",
  "model": "nmt",
  "translatedText": "ある変換を適用してから別の変換を適用した場 合の効果を説明したい場合がよくあります。",
  "time_range": [
   121.76,
   127.68
  ]
 },
 {
  "input": "For example, maybe you want to describe what happens when you first rotate the plane 90 degrees counterclockwise, then apply a shear.",
  "model": "nmt",
  "translatedText": "たとえば、最初に平面を反時計回りに 90 度回転し、次 にシアーを適用すると何が起こるかを説明したいとします。",
  "time_range": [
   127.68,
   135.44
  ]
 },
 {
  "input": "The overall effect here, from start to finish, is another linear transformation, distinct from the rotation and the shear.",
  "model": "nmt",
  "translatedText": "ここでの全体的な効果は、最初から最後まで、 回転やせん断とは異なる別の線形変換です。",
  "time_range": [
   135.44,
   142.54
  ]
 },
 {
  "input": "This new linear transformation is commonly called the composition of the two separate transformations we applied.",
  "model": "nmt",
  "translatedText": "この新しい線形変換は、一般に、適用した 2 つの別々の変換の合成と呼ばれます。",
  "time_range": [
   142.54,
   149.04
  ]
 },
 {
  "input": "And like any linear transformation, it can be described with a matrix all of its own by following i-hat and j-hat.",
  "model": "nmt",
  "translatedText": "そして、他の線形変換と同様に、i-hat と j-ha t に従って、それ自体の行列で記述することができます。",
  "time_range": [
   149.04,
   156.28
  ]
 },
 {
  "input": "In this example, the ultimate landing spot for i-hat after both transformations is 1,1, so let's make that the first column of a matrix.",
  "model": "nmt",
  "translatedText": "この例では、両方の変換後の i-hat の最終的な着地 点は 1,1 なので、これを行列の最初の列にします。",
  "time_range": [
   156.28,
   164.84
  ]
 },
 {
  "input": "Likewise, j-hat ultimately ends up at the location negative 1,0, so we make that the second column of the matrix.",
  "model": "nmt",
  "translatedText": "同様に、j-hat は最終的にマイナス 1,0 の位 置に到達するため、それを行列の 2 列目にします。",
  "time_range": [
   164.84,
   172.8
  ]
 },
 {
  "input": "This new matrix captures the overall effect of applying a rotation then a shear, but as one single action, rather than two successive ones.",
  "model": "nmt",
  "translatedText": "この新しいマトリックスは、回転とせん断を適用した場合の全体的な効果を、連続 した 2 つのアクションではなく 1 つのアクションとして捉えています。",
  "time_range": [
   172.8,
   183.4
  ]
 },
 {
  "input": "Here's one way to think about that new matrix.",
  "model": "nmt",
  "translatedText": "この新しいマトリックスについて考える 1 つの方法を次に示します。",
  "time_range": [
   183.4,
   185.48
  ]
 },
 {
  "input": "If you were to take some vector and pump it through the rotation, then the shear, the long way to compute where it ends up is to first multiply it on the left by the rotation matrix.",
  "model": "nmt",
  "translatedText": "ベクトルを取得し、それを回転、次にせん断を通してポ ンプする場合、最終的にどこに到達するかを計算する長 い方法は、まず左側で回転行列を乗算することです。",
  "time_range": [
   185.48,
   195.4
  ]
 },
 {
  "input": "Then, take whatever you get and multiply that on the left by the shear matrix.",
  "model": "nmt",
  "translatedText": "次に、得られたものをすべて取り、左側にせん断行列を掛けます。",
  "time_range": [
   195.4,
   200.52
  ]
 },
 {
  "input": "This is, numerically speaking, what it means to apply a rotation then a shear to a given vector.",
  "model": "nmt",
  "translatedText": "これは、数値的に言えば、特定のベクトルに回転を 加えてからせん断を適用することを意味します。",
  "time_range": [
   200.52,
   207.0
  ]
 },
 {
  "input": "But whatever you get should be the same as just applying this new composition matrix that we just found by that same vector, no matter what vector you chose, since this new matrix is supposed to capture the same overall effect as the rotation then shear action.",
  "model": "nmt",
  "translatedText": "しかし、得られるものは何であれ、選択したベクトルに関係なく、同じベクトルで見つ けたこの新しい合成行列を適用したのと同じであるはずです。 この新しい行列は、回転 とせん断アクションと同じ全体的な効果をキャプチャすることになっているためです。",
  "time_range": [
   207.0,
   222.72
  ]
 },
 {
  "input": "Based on how things are written down here, I think it's reasonable to call this new matrix the product of the original two matrices, don't you?",
  "model": "nmt",
  "translatedText": "ここでの書き方からすると、この新しい行列を元の 2 つの行列の積と呼ぶのが妥当だと思いますね。",
  "time_range": [
   222.72,
   230.64
  ]
 },
 {
  "input": "We can think about how to compute that product more generally in just a moment, but it's way too easy to get lost in the forest of numbers.",
  "model": "nmt",
  "translatedText": "その積をより一般的に計算する方法についてはすぐに考えることができ ますが、あまりにも簡単に数値の森の中で迷子になってしまいます。",
  "time_range": [
   230.64,
   237.44
  ]
 },
 {
  "input": "Always remember that multiplying two matrices like this has the geometric meaning of applying one transformation then another.",
  "model": "nmt",
  "translatedText": "このように 2 つの行列を乗算することには、ある変換を適用してから別の変 換を適用するという幾何学的な意味があることを常に覚えておいてください。",
  "time_range": [
   237.44,
   246.34
  ]
 },
 {
  "input": "One thing that's kind of weird here is that this has us reading from right to left.",
  "model": "nmt",
  "translatedText": "ここで少し奇妙なのは、右から左に読むことになることです。",
  "time_range": [
   246.34,
   250.08
  ]
 },
 {
  "input": "You first apply the transformation represented by the matrix on the right, then you apply the transformation represented by the matrix on the left.",
  "model": "nmt",
  "translatedText": "まず右側の行列で表される変換を適用し、次 に左側の行列で表される変換を適用します。",
  "time_range": [
   250.08,
   257.6
  ]
 },
 {
  "input": "This stems from function notation, since we write functions on the left of variables, so every time you compose two functions, you always have to read it right to left.",
  "model": "nmt",
  "translatedText": "これは関数の表記法に由来しています。 変数の左側に関数を記述するため 、2 つの関数を構成するたびに、常に右から左に読む必要があります。",
  "time_range": [
   257.6,
   266.16
  ]
 },
 {
  "input": "Good news for the Hebrew readers, bad news for the rest of us.",
  "model": "nmt",
  "translatedText": "ヘブライ語の読者にとっては良いニュースですが、それ以外の私たちにとっては悪いニュースです。",
  "time_range": [
   266.16,
   270.08
  ]
 },
 {
  "input": "Let's look at another example.",
  "model": "nmt",
  "translatedText": "別の例を見てみましょう。",
  "time_range": [
   270.08,
   271.88
  ]
 },
 {
  "input": "Take the matrix with columns 1,1 and negative 2,0, whose transformation looks like this.",
  "model": "nmt",
  "translatedText": "列 1,1 と負の 2,0 を持つ行列を考えます。 その変換は次のようになります。",
  "time_range": [
   271.88,
   278.24
  ]
 },
 {
  "input": "And let's call it m1.",
  "model": "nmt",
  "translatedText": "それを m1 と呼びます。",
  "time_range": [
   278.24,
   280.0
  ]
 },
 {
  "input": "Next, take the matrix with columns 0,1 and 2,0, whose transformation looks like this.",
  "model": "nmt",
  "translatedText": "次に、列 0,1 および 2,0 を持つ行列を取得します。 その変換は次のようになります。",
  "time_range": [
   280.0,
   287.84
  ]
 },
 {
  "input": "And let's call that guy m2.",
  "model": "nmt",
  "translatedText": "その男を m2 と呼びましょう。",
  "time_range": [
   287.84,
   290.04
  ]
 },
 {
  "input": "The total effect of applying m1 then m2 gives us a new transformation, so let's find its matrix.",
  "model": "nmt",
  "translatedText": "m1 を適用してから m2 を適用する合計の効果により、 新しい変換が得られるので、その行列を見つけてみましょう。",
  "time_range": [
   290.04,
   296.56
  ]
 },
 {
  "input": "But this time, let's see if we can do it without watching the animations, and instead just using the numerical entries in each matrix.",
  "model": "nmt",
  "translatedText": "ただし今回は、アニメーションを見ずに、各行列の数値入力 だけを使用してそれができるかどうかを見てみましょう。",
  "time_range": [
   296.56,
   304.48
  ]
 },
 {
  "input": "First, we need to figure out where i-hat goes.",
  "model": "nmt",
  "translatedText": "まず、i-hat がどこに行くのかを把握する必要があります。",
  "time_range": [
   304.48,
   308.28
  ]
 },
 {
  "input": "After applying m1, the new coordinates of i-hat, by definition, are given by that first column of m1, namely 1,1.",
  "model": "nmt",
  "translatedText": "m1 を適用した後、i-hat の新しい座標は、定義により 、m1 の最初の列、つまり 1,1 によって与えられます。",
  "time_range": [
   308.28,
   316.96
  ]
 },
 {
  "input": "To see what happens after applying m2, multiply the matrix for m2 by that vector 1,1.",
  "model": "nmt",
  "translatedText": "m2 を適用した後に何が起こるかを確認するには、m2 の行列にそのベクトル 1,1 を乗算します。",
  "time_range": [
   316.96,
   325.72
  ]
 },
 {
  "input": "Working it out, the way I described last video, you'll get the vector 2,1.",
  "model": "nmt",
  "translatedText": "前回のビデオで説明した方法で計算すると、ベクトル 2,1 が得られます。",
  "time_range": [
   325.72,
   330.86
  ]
 },
 {
  "input": "This will be the first column of the composition matrix.",
  "model": "nmt",
  "translatedText": "これは、構成マトリックスの最初の列になります。",
  "time_range": [
   330.86,
   334.16
  ]
 },
 {
  "input": "Likewise, to follow j-hat, the second column of m1 tells us that it first lands on negative 2,0.",
  "model": "nmt",
  "translatedText": "同様に、j-hat に従うと、m1 の 2 番目の列は 、最初に負の 2,0 に到達することを示しています。",
  "time_range": [
   334.16,
   342.0
  ]
 },
 {
  "input": "Then, when we apply m2 to that vector, you can work out the matrix vector product to get 0, negative 2, which becomes the second column of our composition matrix.",
  "model": "nmt",
  "translatedText": "次に、そのベクトルに m2 を適用すると、行列ベクトルの積を計算して 0、負の 2 を得ることができ、これが合成行列の 2 列目になります。",
  "time_range": [
   342.0,
   357.04
  ]
 },
 {
  "input": "Let me talk through that same process again, but this time I'll show variable entries in each matrix, just to show that the same line of reasoning works for any matrices.",
  "model": "nmt",
  "translatedText": "同じプロセスをもう一度説明しますが、今回は、同じ推論がどの行列 でも機能することを示すために、各行列の変数エントリを示します。",
  "time_range": [
   357.04,
   365.62
  ]
 },
 {
  "input": "This is more symbol-heavy and will require some more room, but it should be pretty satisfying for anyone who has previously been taught matrix multiplication the more rote way.",
  "model": "nmt",
  "translatedText": "これはシンボルが多くなり、もう少しスペースが必要になりますが、以前に行列の 乗算をより暗記的な方法で教えられた人にとっては、かなり満足できるはずです。",
  "time_range": [
   365.62,
   374.58
  ]
 },
 {
  "input": "To follow where i-hat goes, start by looking at the first column of the matrix on the right, since this is where i-hat initially lands.",
  "model": "nmt",
  "translatedText": "i-hat がどこへ行くのかを追跡するには、まず右側の行列の最初の 列を調べます。 これは、i-hat が最初に着地する場所だからです。",
  "time_range": [
   374.58,
   382.44
  ]
 },
 {
  "input": "Multiplying that column by the matrix on the left is how you can tell where the intermediate version of i-hat ends up after applying the second transformation.",
  "model": "nmt",
  "translatedText": "その列に左側の行列を乗算すると、2 番目の変換を適用した後に i-hat の中間バージョンがどこに到達するかがわかります。",
  "time_range": [
   382.44,
   391.78
  ]
 },
 {
  "input": "So the first column of the composition matrix will always equal the left matrix times the first column of the right matrix.",
  "model": "nmt",
  "translatedText": "したがって、合成行列の最初の列は常に、左行 列と右行列の最初の列の積に等しくなります。",
  "time_range": [
   391.78,
   399.38
  ]
 },
 {
  "input": "Likewise, j-hat will always initially land on the second column of the right matrix.",
  "model": "nmt",
  "translatedText": "同様に、j-hat は常に最初は右行列の 2 列目に配置されます。",
  "time_range": [
   399.38,
   408.96
  ]
 },
 {
  "input": "So multiplying the left matrix by this second column will give its final location, and hence that's the second column of the composition matrix.",
  "model": "nmt",
  "translatedText": "したがって、左の行列にこの 2 番目の列を乗算すると、その最終的 な位置が得られるため、それが合成行列の 2 番目の列になります。",
  "time_range": [
   408.96,
   420.74
  ]
 },
 {
  "input": "Notice there's a lot of symbols here, and it's common to be taught this formula as something to memorize, along with a certain algorithmic process to kind of help remember it.",
  "model": "nmt",
  "translatedText": "ここにはたくさんの記号があることに注意してください。 この公式は暗記するものとして教えられる のが一般的であり、それを覚えるのに役立つ特定のアルゴリズムのプロセスも一緒に教えられます。",
  "time_range": [
   420.74,
   429.32
  ]
 },
 {
  "input": "But I really do think that before memorizing that process, you should get in the habit of thinking about what matrix multiplication really represents, applying one transformation after another.",
  "model": "nmt",
  "translatedText": "しかし、そのプロセスを暗記する前に、行列の乗算 が実際に何を表し、変換を次々と適用するかを考え る習慣を身につけるべきだと私は心から思います。",
  "time_range": [
   429.32,
   439.66
  ]
 },
 {
  "input": "Trust me, this will give you a much better conceptual framework that makes the properties of matrix multiplication much easier to understand.",
  "model": "nmt",
  "translatedText": "信じてください。 これにより、行列の乗算の特性をはるかに理解 しやすくする、より優れた概念フレームワークが得られます。",
  "time_range": [
   439.66,
   447.16
  ]
 },
 {
  "input": "For example, here's a question.",
  "model": "nmt",
  "translatedText": "たとえば、こんな質問があります。",
  "time_range": [
   447.16,
   449.08
  ]
 },
 {
  "input": "Does it matter what order we put the two matrices in when we multiply them?",
  "model": "nmt",
  "translatedText": "2 つの行列を乗算するときにそれらをどの順序で置くかは重要ですか?",
  "time_range": [
   449.08,
   453.48
  ]
 },
 {
  "input": "Well, let's think through a simple example, like the one from earlier.",
  "model": "nmt",
  "translatedText": "さて、先ほどのような簡単な例で考えてみましょう。",
  "time_range": [
   453.48,
   457.76
  ]
 },
 {
  "input": "Take a shear, which fixes i-hat and smushes j-hat over to the right, and a 90 degree rotation.",
  "model": "nmt",
  "translatedText": "i-hat を固定し、j-hat を右に押しつぶすハサミを 90 度回転させます。",
  "time_range": [
   457.76,
   463.7
  ]
 },
 {
  "input": "If you first do the shear, then rotate, we can see that i-hat ends up at 0,1 and j-hat ends up at negative 1,1.",
  "model": "nmt",
  "translatedText": "最初にせん断を行ってから回転すると、i-hat が 0,1 になり、j-hat が負の 1,1 になることがわかります。",
  "time_range": [
   463.7,
   471.48
  ]
 },
 {
  "input": "Both are generally pointing close together.",
  "model": "nmt",
  "translatedText": "両方は通常、近くを指しています。",
  "time_range": [
   471.48,
   474.0
  ]
 },
 {
  "input": "If you first rotate, then do the shear, i-hat ends up over at 1,1, and j-hat is off in a different direction at negative 1,0, and they're pointing farther apart.",
  "model": "nmt",
  "translatedText": "最初に回転してからせん断を行うと、i-hat は 1,1 で終了し、j- hat は負の 1,0 で別の方向にずれて、さらに離れた方向を指します。",
  "time_range": [
   474.0,
   486.44
  ]
 },
 {
  "input": "The overall effect here is clearly different, so evidently order totally does matter.",
  "model": "nmt",
  "translatedText": "ここでの全体的な効果は明らかに異なるため、明らかに順序が完全に重要です。",
  "time_range": [
   486.44,
   492.48
  ]
 },
 {
  "input": "Notice by thinking in terms of transformations, that's the kind of thing you can do in your head by visualizing.",
  "model": "nmt",
  "translatedText": "変換という観点から考えると、視覚化する ことで頭の中でできるようなことです。",
  "time_range": [
   492.48,
   498.36
  ]
 },
 {
  "input": "No matrix multiplication necessary.",
  "model": "nmt",
  "translatedText": "行列の乗算は必要ありません。",
  "time_range": [
   498.36,
   501.8
  ]
 },
 {
  "input": "I remember when I first took linear algebra, there was this one homework problem that asked us to prove that matrix multiplication is associative.",
  "model": "nmt",
  "translatedText": "私が初めて線形代数を履修したとき、行列の乗算が結合的 であることを証明するという宿題が 1 つありました。",
  "time_range": [
   501.8,
   509.78
  ]
 },
 {
  "input": "This means that if you have three matrices, A, B, and C, and you multiply them all together, it shouldn't matter if you first compute A times B, then multiply the result by C, or if you first multiply B times C, then multiply that result by A on the left.",
  "model": "nmt",
  "translatedText": "これは、A、B、C という 3 つの行列があり、それらをすべて乗算する場合、最初に A と B を掛けてからその結果を C で乗算するか、最初に B を乗算するかは 問題ではないことを意味します。 C を計算し、その結果に左側の A を掛けます。",
  "time_range": [
   509.78,
   525.06
  ]
 },
 {
  "input": "In other words, it doesn't matter where you put the parentheses.",
  "model": "nmt",
  "translatedText": "つまり、括弧をどこに入れても問題ありません。",
  "time_range": [
   525.06,
   528.1
  ]
 },
 {
  "input": "Now, if you try to work through this numerically, like I did back then, it's horrible, just horrible, and unenlightening for that matter.",
  "model": "nmt",
  "translatedText": "さて、当時の私のようにこれを数値的に解明しようとすると、それは恐 ろしい、まったく恐ろしく、その点においては啓発的ではありません。",
  "time_range": [
   528.1,
   536.42
  ]
 },
 {
  "input": "But when you think about matrix multiplication as applying one transformation after another, this property is just trivial.",
  "model": "nmt",
  "translatedText": "しかし、行列の乗算を 1 つの変換を次々に適用する ものと考えると、この性質は単なる些細なものです。",
  "time_range": [
   536.42,
   543.46
  ]
 },
 {
  "input": "Can you see why?",
  "model": "nmt",
  "translatedText": "理由がわかりますか?",
  "time_range": [
   543.46,
   545.06
  ]
 },
 {
  "input": "What it's saying is that if you first apply C then B, then A, it's the same as applying C, then B, then A.",
  "model": "nmt",
  "translatedText": "何を言っているのかというと、最初に C を適用し、次に B、次に A を適用した 場合、それは C、次に B、次に A を適用したのと同じであるということです。",
  "time_range": [
   545.06,
   553.06
  ]
 },
 {
  "input": "I mean, there's nothing to prove, you're just applying the same three things one after the other, all in the same order.",
  "model": "nmt",
  "translatedText": "つまり、証明するものは何もなく、同じ 3 つのこ とをすべて同じ順序で順番に適用しているだけです。",
  "time_range": [
   553.06,
   559.68
  ]
 },
 {
  "input": "This might feel like cheating, but it's not.",
  "model": "nmt",
  "translatedText": "これは不正行為のように感じるかもしれませんが、そうではありません。",
  "time_range": [
   559.68,
   562.08
  ]
 },
 {
  "input": "This is an honest-to-goodness proof that matrix multiplication is associative.",
  "model": "nmt",
  "translatedText": "これは、行列の乗算が結合的であるという正直な証明です。",
  "time_range": [
   562.08,
   566.36
  ]
 },
 {
  "input": "And even better than that, it's a good explanation for why that property should be true.",
  "model": "nmt",
  "translatedText": "そしてそれ以上に、それはその特性が真である理由をうまく説明しています。",
  "time_range": [
   566.36,
   571.82
  ]
 },
 {
  "input": "I really do encourage you to play around more with this idea, imagining two different transformations, thinking about what happens when you apply one after the other, and then working out the matrix product numerically.",
  "model": "nmt",
  "translatedText": "このアイデアをもっと試してみることをお勧めします。 2 つの異なる変換を想像し、交互に適用すると何 が起こるかを考え、行列の積を数値的に計算します。",
  "time_range": [
   571.82,
   582.7
  ]
 },
 {
  "input": "Trust me, this is the kind of playtime that really makes the idea sink in.",
  "model": "nmt",
  "translatedText": "信じてください、これはアイデアを本当に浸透させる一種の遊びです。",
  "time_range": [
   582.7,
   587.46
  ]
 },
 {
  "input": "In the next video, I'll start talking about extending these ideas beyond just two dimensions.",
  "model": "nmt",
  "translatedText": "次のビデオでは、これらのアイデアを単なる 2 次元を超えて拡張することについて話し始めます。",
  "time_range": [
   587.46,
   592.06
  ]
 },
 {
  "input": "See you then!",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   592.06,
   592.06
  ]
 }
]