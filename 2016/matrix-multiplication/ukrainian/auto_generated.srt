1
00:00:11,109 --> 00:00:13,857
Усім привіт! Там, де ми зупинилися, я показав,

2
00:00:13,857 --> 00:00:18,360
як виглядають лінійні перетворення та як їх представити за допомогою матриць.

3
00:00:18,360 --> 00:00:21,813
Це варто короткого підсумку, оскільки це просто дуже важливо, але, звісно,

4
00:00:21,813 --> 00:00:24,300
якщо вам здається, що це більше, ніж просто підсумок,

5
00:00:24,300 --> 00:00:26,280
поверніться назад і подивіться повне відео.

6
00:00:26,280 --> 00:00:29,822
Взагалі кажучи, лінійні перетворення — це функції з векторами як входами,

7
00:00:29,822 --> 00:00:32,695
а векторами — як результатами, але минулого разу я показав,

8
00:00:32,695 --> 00:00:36,238
як ми можемо сприймати їх візуально як згладжування простору таким чином,

9
00:00:36,238 --> 00:00:39,685
щоб лінії сітки залишалися паралельними та рівномірними, і таким чином,

10
00:00:39,685 --> 00:00:41,840
щоб початок координат залишається фіксованим.

11
00:00:41,840 --> 00:00:46,984
Ключовим висновком було те, що лінійне перетворення повністю визначається тим,

12
00:00:46,984 --> 00:00:52,260
де воно бере базисні вектори простору, що для двох вимірів означає i-hat і j-hat.

13
00:00:52,260 --> 00:00:55,189
Це тому, що будь-який інший вектор можна описати

14
00:00:55,189 --> 00:00:57,820
як лінійну комбінацію цих базисних векторів.

15
00:00:57,820 --> 00:01:03,460
Вектор із координатами x, y дорівнює x, помноженому на i-hat плюс y, помноженому на j-hat.

16
00:01:03,460 --> 00:01:05,943
Після проходження трансформації ця властивість,

17
00:01:05,943 --> 00:01:10,600
що лінії сітки залишаються паралельними та рівномірно розташованими, має чудовий наслідок.

18
00:01:10,600 --> 00:01:14,712
Місце, куди приземляється ваш вектор, буде перетвореною версією

19
00:01:14,712 --> 00:01:18,440
i-hat у х разів плюс перетвореною версією j-hat у y разів.

20
00:01:18,440 --> 00:01:23,117
Це означає, що якщо ви записуєте координати, де приземляється i-hat, і координати,

21
00:01:23,117 --> 00:01:27,682
де приземляється j-hat, ви можете обчислити, що вектор, який починається в x, y,

22
00:01:27,682 --> 00:01:32,641
повинен приземлитися на x, помножених на нові координати i-hat плюс y помножити на нові

23
00:01:32,641 --> 00:01:33,600
координати j-hat.

24
00:01:33,600 --> 00:01:38,063
Конвенція полягає в тому, щоб записати координати місця розташування

25
00:01:38,063 --> 00:01:42,463
i-hat і j-hat як стовпці матриці, і визначити цю суму масштабованих

26
00:01:42,463 --> 00:01:46,280
версій цих стовпців на x і y як множення матриці на вектор.

27
00:01:46,280 --> 00:01:50,698
Таким чином, матриця представляє конкретне лінійне перетворення,

28
00:01:50,698 --> 00:01:56,000
і множення матриці на вектор – це те, що обчислювально означає застосувати це

29
00:01:56,000 --> 00:01:58,040
перетворення до цього вектора.

30
00:01:58,040 --> 00:02:01,760
Гаразд, підсумовуємо, переходимо до нового матеріалу.

31
00:02:01,760 --> 00:02:07,680
Часто вам хочеться описати наслідки застосування однієї трансформації, а потім іншої.

32
00:02:07,680 --> 00:02:10,379
Наприклад, можливо, ви хочете описати, що відбувається,

33
00:02:10,379 --> 00:02:14,186
коли ви спочатку повертаєте площину на 90 градусів проти годинникової стрілки,

34
00:02:14,186 --> 00:02:15,440
а потім застосовуєте зсув.

35
00:02:15,440 --> 00:02:20,390
Загальний ефект тут, від початку до кінця, є іншою лінійною трансформацією,

36
00:02:20,390 --> 00:02:22,540
відмінною від обертання та зсуву.

37
00:02:22,540 --> 00:02:27,863
Це нове лінійне перетворення зазвичай називають композицією двох окремих перетворень,

38
00:02:27,863 --> 00:02:29,040
які ми застосували.

39
00:02:29,040 --> 00:02:34,550
І, як будь-яке лінійне перетворення, його можна описати за допомогою власної матриці,

40
00:02:34,550 --> 00:02:36,280
дотримуючись i-hat і j-hat.

41
00:02:36,280 --> 00:02:41,773
У цьому прикладі кінцева точка посадки для i-hat після обох перетворень дорівнює 1,1,

42
00:02:41,773 --> 00:02:44,840
тому давайте зробимо це першим стовпцем матриці.

43
00:02:44,840 --> 00:02:49,760
Подібним чином, j-hat врешті-решт опиняється в положенні мінус 1,0,

44
00:02:49,760 --> 00:02:52,800
тому ми робимо це другим стовпцем матриці.

45
00:02:52,800 --> 00:02:58,606
Ця нова матриця фіксує загальний ефект застосування обертання,

46
00:02:58,606 --> 00:03:03,400
а потім зсуву, але як одну дію, а не дві послідовні.

47
00:03:03,400 --> 00:03:05,480
Ось один спосіб подумати про цю нову матрицю.

48
00:03:05,480 --> 00:03:09,551
Якби ви взяли якийсь вектор і прокачали його через обертання, то зсув,

49
00:03:09,551 --> 00:03:14,367
довгий спосіб обчислити, де він закінчується, це спочатку помножити його ліворуч на

50
00:03:14,367 --> 00:03:15,400
матрицю обертання.

51
00:03:15,400 --> 00:03:20,520
Потім візьміть все, що ви отримаєте, і помножте це ліворуч на матрицю зсуву.

52
00:03:20,520 --> 00:03:27,000
Це, чисельно кажучи, що означає застосувати обертання, а потім зсув до даного вектора.

53
00:03:27,000 --> 00:03:30,817
Але все, що ви отримаєте, має бути таким же, як і застосування цієї

54
00:03:30,817 --> 00:03:34,972
нової композиційної матриці, яку ми щойно знайшли, за тим самим вектором,

55
00:03:34,972 --> 00:03:38,790
незалежно від того, який вектор ви обрали, оскільки ця нова матриця

56
00:03:38,790 --> 00:03:42,720
має фіксувати той самий загальний ефект, що й обертання, а потім зсув.

57
00:03:42,720 --> 00:03:46,773
Виходячи з того, як тут записані речі, я вважаю розумним назвати

58
00:03:46,773 --> 00:03:50,640
цю нову матрицю добутком двох оригінальних матриць, чи не так?

59
00:03:50,640 --> 00:03:55,173
Ми можемо подумати про те, як обчислити цей добуток більш загально за мить,

60
00:03:55,173 --> 00:03:57,440
але заблукати в лісі чисел дуже легко.

61
00:03:57,440 --> 00:04:01,202
Завжди пам’ятайте, що множення двох матриць, як це,

62
00:04:01,202 --> 00:04:06,340
має геометричний сенс застосування одного перетворення, а потім іншого.

63
00:04:06,340 --> 00:04:10,080
Одна річ, яка є трохи дивною, це те, що ми читаємо справа наліво.

64
00:04:10,080 --> 00:04:14,005
Спочатку ви застосовуєте перетворення, представлене матрицею праворуч,

65
00:04:14,005 --> 00:04:17,600
а потім застосовуєте перетворення, представлене матрицею ліворуч.

66
00:04:17,600 --> 00:04:21,649
Це випливає з нотації функцій, оскільки ми пишемо функції ліворуч від змінних,

67
00:04:21,649 --> 00:04:26,160
тому щоразу, коли ви створюєте дві функції, вам завжди потрібно читати їх справа наліво.

68
00:04:26,160 --> 00:04:30,080
Хороші новини для читачів івритом, погані новини для всіх нас.

69
00:04:30,080 --> 00:04:31,880
Давайте розглянемо інший приклад.

70
00:04:31,880 --> 00:04:38,240
Візьмемо матрицю зі стовпцями 1,1 і мінус 2,0, перетворення якої виглядає так.

71
00:04:38,240 --> 00:04:40,000
І назвемо це m1.

72
00:04:40,000 --> 00:04:47,840
Далі беремо матрицю зі стовпцями 0,1 і 2,0, перетворення якої виглядає так.

73
00:04:47,840 --> 00:04:50,040
І давайте назвемо цього хлопця m2.

74
00:04:50,040 --> 00:04:54,407
Загальний ефект застосування m1, потім m2 дає нам нове перетворення,

75
00:04:54,407 --> 00:04:56,560
тож давайте знайдемо його матрицю.

76
00:04:56,560 --> 00:05:00,880
Але цього разу давайте подивимося, чи зможемо ми зробити це без перегляду анімації,

77
00:05:00,880 --> 00:05:04,480
а замість цього просто використовуючи числові записи в кожній матриці.

78
00:05:04,480 --> 00:05:08,280
По-перше, нам потрібно з’ясувати, куди йде i-hat.

79
00:05:08,280 --> 00:05:13,470
Після застосування m1 нові координати i-hat, за визначенням,

80
00:05:13,470 --> 00:05:16,960
задаються першим стовпцем m1, а саме 1,1.

81
00:05:16,960 --> 00:05:21,847
Щоб побачити, що відбувається після застосування m2,

82
00:05:21,847 --> 00:05:25,720
помножте матрицю для m2 на цей вектор 1,1.

83
00:05:25,720 --> 00:05:30,860
Опрацювавши це, як я описав останнє відео, ви отримаєте вектор 2,1.

84
00:05:30,860 --> 00:05:34,160
Це буде перший стовпець композиційної матриці.

85
00:05:34,160 --> 00:05:39,317
Так само, щоб слідувати за j-капелюхом, другий стовпець m1 повідомляє нам,

86
00:05:39,317 --> 00:05:42,000
що він спочатку потрапляє на мінус 2,0.

87
00:05:42,000 --> 00:05:46,211
Потім, коли ми застосовуємо m2 до цього вектора,

88
00:05:46,211 --> 00:05:52,570
ви можете розрахувати векторний добуток матриці, щоб отримати 0, мінус 2,

89
00:05:52,570 --> 00:05:57,040
що стає другим стовпцем нашої композиційної матриці.

90
00:05:57,040 --> 00:05:59,544
Дозвольте мені знову розповісти про той самий процес,

91
00:05:59,544 --> 00:06:02,188
але цього разу я покажу записи змінних у кожній матриці,

92
00:06:02,188 --> 00:06:05,620
щоб показати, що одна і та ж лінія міркувань працює для будь-яких матриць.

93
00:06:05,620 --> 00:06:10,960
Це більше символів і вимагатиме більше місця, але це має бути досить задовільним для тих,

94
00:06:10,960 --> 00:06:14,580
хто раніше навчався множення матриці більш запам’ятовуванням.

95
00:06:14,580 --> 00:06:19,599
Щоб зрозуміти, куди йде i-hat, почніть із першого стовпця матриці праворуч,

96
00:06:19,599 --> 00:06:22,440
оскільки саме тут спочатку потрапляє i-hat.

97
00:06:22,440 --> 00:06:26,685
Помноживши цей стовпець на матрицю ліворуч, ви можете визначити,

98
00:06:26,685 --> 00:06:31,780
де закінчується проміжна версія i-hat після застосування другого перетворення.

99
00:06:31,780 --> 00:06:36,644
Отже, перший стовпець композиційної матриці завжди дорівнюватиме лівій матриці,

100
00:06:36,644 --> 00:06:39,380
помноженій на перший стовпець правої матриці.

101
00:06:39,380 --> 00:06:48,960
Подібним чином j-hat завжди спочатку потраплятиме у другий стовпець правої матриці.

102
00:06:48,960 --> 00:06:56,432
Отже, множення лівої матриці на цей другий стовпець дасть її остаточне розташування,

103
00:06:56,432 --> 00:07:00,740
а отже, це другий стовпець композиційної матриці.

104
00:07:00,740 --> 00:07:04,519
Зауважте, що тут багато символів, і цю формулу зазвичай навчають як щось,

105
00:07:04,519 --> 00:07:07,838
що потрібно запам’ятати, разом із певним алгоритмічним процесом,

106
00:07:07,838 --> 00:07:09,320
щоб допомогти її запам’ятати.

107
00:07:09,320 --> 00:07:12,748
Але я справді вважаю, що перш ніж запам’ятовувати цей процес,

108
00:07:12,748 --> 00:07:17,448
ви повинні виробити звичку думати про те, що насправді представляє множення матриць,

109
00:07:17,448 --> 00:07:19,660
застосовуючи одне перетворення за іншим.

110
00:07:19,660 --> 00:07:23,812
Повірте мені, це дасть вам набагато кращу концептуальну структуру,

111
00:07:23,812 --> 00:07:27,160
яка полегшить розуміння властивостей множення матриць.

112
00:07:27,160 --> 00:07:29,080
Наприклад, ось таке запитання.

113
00:07:29,080 --> 00:07:33,480
Чи має значення, у якому порядку ми розміщуємо дві матриці, коли ми їх множимо?

114
00:07:33,480 --> 00:07:37,760
Ну, давайте поміркуємо на простому прикладі, як той, що був раніше.

115
00:07:37,760 --> 00:07:41,975
Візьміть ножиці, які фіксують i-hat і розтискають j-hat праворуч,

116
00:07:41,975 --> 00:07:43,700
і обертайте на 90 градусів.

117
00:07:43,700 --> 00:07:47,845
Якщо ви спочатку виконуєте зсув, а потім повертаєте, ми можемо побачити,

118
00:07:47,845 --> 00:07:51,480
що i-hat закінчується на 0,1, а j-hat закінчується на мінус 1,1.

119
00:07:51,480 --> 00:07:54,000
Обидва, як правило, спрямовані близько один до одного.

120
00:07:54,000 --> 00:07:59,815
Якщо ви спочатку обертаєте, а потім виконуєте зсув, i-hat закінчується на 1,1,

121
00:07:59,815 --> 00:08:06,440
а j-hat змінюється в іншому напрямку на мінус 1,0, і вони спрямовані далі один від одного.

122
00:08:06,440 --> 00:08:12,480
Загальний ефект тут явно інший, тому, очевидно, порядок має значення.

123
00:08:12,480 --> 00:08:15,227
Зверніть увагу, думаючи в термінах трансформацій,

124
00:08:15,227 --> 00:08:18,360
це те, що ви можете зробити у своїй голові, візуалізуючи.

125
00:08:18,360 --> 00:08:21,800
Множення матриці не потрібне.

126
00:08:21,800 --> 00:08:26,477
Я пам’ятаю, коли я вперше пройшов курс лінійної алгебри, було одне домашнє завдання,

127
00:08:26,477 --> 00:08:29,780
яке просили нас довести, що множення матриць є асоціативним.

128
00:08:29,780 --> 00:08:34,227
Це означає, що якщо у вас є три матриці, A, B і C, і ви множите їх усі разом,

129
00:08:34,227 --> 00:08:38,218
не повинно мати значення, чи ви спочатку обчислюєте A помножити на B,

130
00:08:38,218 --> 00:08:42,437
а потім помножити результат на C, або якщо ви спочатку помножите B раз C,

131
00:08:42,437 --> 00:08:45,060
потім помножте отриманий результат на A зліва.

132
00:08:45,060 --> 00:08:48,100
Іншими словами, не має значення, де ви ставите дужки.

133
00:08:48,100 --> 00:08:51,888
Тепер, якщо ви спробуєте пропрацювати це чисельно,

134
00:08:51,888 --> 00:08:56,420
як я тоді, це буде жахливо, просто жахливо і непросвітницько.

135
00:08:56,420 --> 00:08:59,883
Але коли ви думаєте про множення матриць як про застосування

136
00:08:59,883 --> 00:09:03,460
одного перетворення за іншим, ця властивість просто тривіальна.

137
00:09:03,460 --> 00:09:05,060
Ви бачите чому?

138
00:09:05,060 --> 00:09:09,060
Це означає, що якщо ви спочатку застосували C, потім B,

139
00:09:09,060 --> 00:09:13,060
потім A, це те саме, що застосувати C, потім B, потім A.

140
00:09:13,060 --> 00:09:16,480
Я маю на увазі, що нема чого доводити, ви просто застосовуєте

141
00:09:16,480 --> 00:09:19,680
ті самі три речі одна за одною, все в тому самому порядку.

142
00:09:19,680 --> 00:09:22,080
Це може здатися обманом, але це не так.

143
00:09:22,080 --> 00:09:26,360
Це щирий доказ того, що множення матриць є асоціативним.

144
00:09:26,360 --> 00:09:31,820
І навіть краще, це гарне пояснення того, чому ця властивість має бути істинною.

145
00:09:31,820 --> 00:09:34,651
Я дійсно заохочую вас більше пограти з цією ідеєю,

146
00:09:34,651 --> 00:09:38,203
уявивши два різні перетворення, подумавши про те, що станеться,

147
00:09:38,203 --> 00:09:42,700
коли ви застосовуєте одне за одним, а потім розробите матричний добуток чисельно.

148
00:09:42,700 --> 00:09:47,460
Повірте мені, це той вид гри, який справді захоплює ідею.

149
00:09:47,460 --> 00:09:52,060
У наступному відео я почну говорити про розширення цих ідей за межі двох вимірів.

150
00:09:52,060 --> 00:09:52,060
Побачимось!

