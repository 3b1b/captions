1
00:00:11,109 --> 00:00:15,240
Усім привіт! Там, де ми зупинилися, я показав, як виглядають

2
00:00:15,240 --> 00:00:18,360
лінійні перетворення та як їх представити за допомогою матриць.

3
00:00:18,360 --> 00:00:22,320
Це варто короткого підсумку, оскільки це просто дуже важливо, але, звісно, якщо вам

4
00:00:22,320 --> 00:00:26,280
здається, що це більше, ніж просто підсумок, поверніться назад і подивіться повне відео.

5
00:00:26,280 --> 00:00:30,700
Взагалі кажучи, лінійні перетворення — це функції з векторами як входами, а

6
00:00:30,700 --> 00:00:34,760
векторами — як результатами, але минулого разу я показав, як ми можемо

7
00:00:34,760 --> 00:00:39,760
сприймати їх візуально як згладжування простору таким чином, щоб лінії сітки залишалися

8
00:00:39,760 --> 00:00:41,840
паралельними та рівномірними, і таким чином, щоб початок координат залишається фіксованим.

9
00:00:41,840 --> 00:00:46,860
Ключовим висновком було те, що лінійне перетворення повністю визначається тим, де воно

10
00:00:46,860 --> 00:00:52,260
бере базисні вектори простору, що для двох вимірів означає i-hat і j-hat.

11
00:00:52,260 --> 00:00:56,500
Це тому, що будь-який інший вектор можна

12
00:00:56,500 --> 00:00:57,820
описати як лінійну комбінацію цих базисних векторів.

13
00:00:57,820 --> 00:01:03,460
Вектор із координатами x, y дорівнює x, помноженому на i-hat плюс y, помноженому на j-hat.

14
00:01:03,460 --> 00:01:07,540
Після проходження трансформації ця властивість, що лінії сітки

15
00:01:07,540 --> 00:01:10,600
залишаються паралельними та рівномірно розташованими, має чудовий наслідок.

16
00:01:10,600 --> 00:01:15,180
Місце, куди приземляється ваш вектор, буде перетвореною версією i-hat у

17
00:01:15,180 --> 00:01:18,440
х разів плюс перетвореною версією j-hat у y разів.

18
00:01:18,440 --> 00:01:22,960
Це означає, що якщо ви записуєте координати, де приземляється i-hat, і координати, де приземляється

19
00:01:22,960 --> 00:01:28,940
j-hat, ви можете обчислити, що вектор, який починається в x, y, повинен приземлитися на

20
00:01:28,940 --> 00:01:33,600
x, помножених на нові координати i-hat плюс y помножити на нові координати j-hat.

21
00:01:33,600 --> 00:01:38,000
Конвенція полягає в тому, щоб записати координати місця розташування i-hat і

22
00:01:38,000 --> 00:01:42,820
j-hat як стовпці матриці, і визначити цю суму масштабованих версій цих

23
00:01:42,820 --> 00:01:46,280
стовпців на x і y як множення матриці на вектор.

24
00:01:46,280 --> 00:01:51,320
Таким чином, матриця представляє конкретне лінійне перетворення, і множення матриці на вектор

25
00:01:51,320 --> 00:01:58,040
– це те, що обчислювально означає застосувати це перетворення до цього вектора.

26
00:01:58,040 --> 00:02:01,760
Гаразд, підсумовуємо, переходимо до нового матеріалу.

27
00:02:01,760 --> 00:02:06,160
Часто вам хочеться описати наслідки застосування

28
00:02:06,160 --> 00:02:07,680
однієї трансформації, а потім іншої.

29
00:02:07,680 --> 00:02:11,760
Наприклад, можливо, ви хочете описати, що відбувається, коли ви спочатку повертаєте

30
00:02:11,760 --> 00:02:15,440
площину на 90 градусів проти годинникової стрілки, а потім застосовуєте зсув.

31
00:02:15,440 --> 00:02:20,360
Загальний ефект тут, від початку до кінця, є

32
00:02:20,360 --> 00:02:22,540
іншою лінійною трансформацією, відмінною від обертання та зсуву.

33
00:02:22,540 --> 00:02:26,920
Це нове лінійне перетворення зазвичай називають композицією

34
00:02:26,920 --> 00:02:29,040
двох окремих перетворень, які ми застосували.

35
00:02:29,040 --> 00:02:33,480
І, як будь-яке лінійне перетворення, його можна описати

36
00:02:33,480 --> 00:02:36,280
за допомогою власної матриці, дотримуючись i-hat і j-hat.

37
00:02:36,280 --> 00:02:42,360
У цьому прикладі кінцева точка посадки для i-hat після обох

38
00:02:42,360 --> 00:02:44,800
перетворень дорівнює 1,1, тому давайте зробимо це першим стовпцем матриці.

39
00:02:44,840 --> 00:02:50,320
Подібним чином, j-hat врешті-решт опиняється в положенні мінус

40
00:02:50,320 --> 00:02:52,800
1,0, тому ми робимо це другим стовпцем матриці.

41
00:02:52,800 --> 00:02:58,300
Ця нова матриця фіксує загальний ефект застосування обертання, а потім

42
00:02:58,300 --> 00:03:03,400
зсуву, але як одну дію, а не дві послідовні.

43
00:03:03,400 --> 00:03:05,480
Ось один спосіб подумати про цю нову матрицю.

44
00:03:05,480 --> 00:03:09,760
Якби ви взяли якийсь вектор і прокачали його через

45
00:03:09,760 --> 00:03:14,360
обертання, то зсув, довгий спосіб обчислити, де він закінчується,

46
00:03:14,400 --> 00:03:15,400
це спочатку помножити його ліворуч на матрицю обертання.

47
00:03:15,400 --> 00:03:20,520
Потім візьміть все, що ви отримаєте, і помножте це ліворуч на матрицю зсуву.

48
00:03:20,520 --> 00:03:26,000
Це, чисельно кажучи, що означає застосувати обертання,

49
00:03:26,000 --> 00:03:27,000
а потім зсув до даного вектора.

50
00:03:27,000 --> 00:03:30,720
Але все, що ви отримаєте, має бути таким же, як і застосування цієї нової композиційної матриці,

51
00:03:30,720 --> 00:03:35,560
яку ми щойно знайшли, за тим самим вектором, незалежно від того, який вектор ви обрали, оскільки

52
00:03:35,560 --> 00:03:42,720
ця нова матриця має фіксувати той самий загальний ефект, що й обертання, а потім зсув.

53
00:03:42,720 --> 00:03:45,940
Виходячи з того, як тут записані речі, я вважаю розумним назвати

54
00:03:45,940 --> 00:03:50,640
цю нову матрицю добутком двох оригінальних матриць, чи не так?

55
00:03:50,640 --> 00:03:54,460
Ми можемо подумати про те, як обчислити цей добуток більш

56
00:03:54,460 --> 00:03:57,440
загально за мить, але заблукати в лісі чисел дуже легко.

57
00:03:57,440 --> 00:04:02,280
Завжди пам’ятайте, що множення двох матриць, як це, має

58
00:04:02,280 --> 00:04:06,340
геометричний сенс застосування одного перетворення, а потім іншого.

59
00:04:06,340 --> 00:04:10,080
Одна річ, яка є трохи дивною, це те, що ми читаємо справа наліво.

60
00:04:10,080 --> 00:04:14,160
Спочатку ви застосовуєте перетворення, представлене матрицею праворуч,

61
00:04:14,160 --> 00:04:17,600
а потім застосовуєте перетворення, представлене матрицею ліворуч.

62
00:04:17,600 --> 00:04:21,940
Це випливає з нотації функцій, оскільки ми пишемо функції ліворуч від змінних, тому

63
00:04:21,940 --> 00:04:26,160
щоразу, коли ви створюєте дві функції, вам завжди потрібно читати їх справа наліво.

64
00:04:26,160 --> 00:04:30,080
Хороші новини для читачів івритом, погані новини для всіх нас.

65
00:04:30,080 --> 00:04:31,880
Давайте розглянемо інший приклад.

66
00:04:31,880 --> 00:04:38,160
Візьмемо матрицю зі стовпцями 1,1 і мінус 2,0, перетворення якої виглядає так.

67
00:04:38,240 --> 00:04:40,000
І назвемо це m1.

68
00:04:40,000 --> 00:04:46,000
Далі беремо матрицю зі стовпцями 0,1 і 2,0, перетворення якої виглядає так.

69
00:04:47,840 --> 00:04:50,040
І давайте назвемо цього хлопця m2.

70
00:04:50,040 --> 00:04:55,560
Загальний ефект застосування m1, потім m2 дає нам

71
00:04:55,560 --> 00:04:56,560
нове перетворення, тож давайте знайдемо його матрицю.

72
00:04:56,560 --> 00:05:00,940
Але цього разу давайте подивимося, чи зможемо ми зробити це без перегляду

73
00:05:00,940 --> 00:05:04,480
анімації, а замість цього просто використовуючи числові записи в кожній матриці.

74
00:05:04,480 --> 00:05:08,040
По-перше, нам потрібно з’ясувати, куди йде i-hat.

75
00:05:08,280 --> 00:05:13,560
Після застосування m1 нові координати i-hat, за визначенням,

76
00:05:13,560 --> 00:05:16,960
задаються першим стовпцем m1, а саме 1,1.

77
00:05:16,960 --> 00:05:23,960
Щоб побачити, що відбувається після застосування m2, помножте матрицю для m2 на цей вектор 1,1.

78
00:05:25,720 --> 00:05:30,860
Опрацювавши це, як я описав останнє відео, ви отримаєте вектор 2,1.

79
00:05:30,860 --> 00:05:33,960
Це буде перший стовпець композиційної матриці.

80
00:05:34,160 --> 00:05:40,000
Так само, щоб слідувати за j-капелюхом, другий стовпець m1

81
00:05:40,000 --> 00:05:42,000
повідомляє нам, що він спочатку потрапляє на мінус 2,0.

82
00:05:42,000 --> 00:05:50,000
Потім, коли ми застосовуємо m2 до цього вектора, ви можете розрахувати векторний добуток

83
00:05:50,240 --> 00:05:57,040
матриці, щоб отримати 0, мінус 2, що стає другим стовпцем нашої композиційної матриці.

84
00:05:57,040 --> 00:06:01,060
Дозвольте мені знову розповісти про той самий процес, але цього разу я покажу записи змінних у

85
00:06:01,060 --> 00:06:05,620
кожній матриці, щоб показати, що одна і та ж лінія міркувань працює для будь-яких матриць.

86
00:06:05,620 --> 00:06:09,560
Це більше символів і вимагатиме більше місця, але це має бути

87
00:06:09,560 --> 00:06:14,580
досить задовільним для тих, хто раніше навчався множення матриці більш запам’ятовуванням.

88
00:06:14,580 --> 00:06:19,180
Щоб зрозуміти, куди йде i-hat, почніть із першого стовпця

89
00:06:19,180 --> 00:06:22,440
матриці праворуч, оскільки саме тут спочатку потрапляє i-hat.

90
00:06:22,440 --> 00:06:26,860
Помноживши цей стовпець на матрицю ліворуч, ви можете визначити,

91
00:06:26,860 --> 00:06:31,780
де закінчується проміжна версія i-hat після застосування другого перетворення.

92
00:06:31,780 --> 00:06:36,380
Отже, перший стовпець композиційної матриці завжди дорівнюватиме лівій

93
00:06:36,380 --> 00:06:39,380
матриці, помноженій на перший стовпець правої матриці.

94
00:06:39,380 --> 00:06:46,380
Подібним чином j-hat завжди спочатку потраплятиме у другий стовпець правої матриці.

95
00:06:48,960 --> 00:06:54,540
Отже, множення лівої матриці на цей другий стовпець дасть її

96
00:06:54,740 --> 00:07:00,740
остаточне розташування, а отже, це другий стовпець композиційної матриці.

97
00:07:00,740 --> 00:07:04,460
Зауважте, що тут багато символів, і цю формулу зазвичай навчають як щось,

98
00:07:04,460 --> 00:07:09,320
що потрібно запам’ятати, разом із певним алгоритмічним процесом, щоб допомогти її запам’ятати.

99
00:07:09,320 --> 00:07:13,100
Але я справді вважаю, що перш ніж запам’ятовувати цей

100
00:07:13,100 --> 00:07:18,140
процес, ви повинні виробити звичку думати про те, що

101
00:07:18,140 --> 00:07:19,660
насправді представляє множення матриць, застосовуючи одне перетворення за іншим.

102
00:07:19,660 --> 00:07:23,600
Повірте мені, це дасть вам набагато кращу концептуальну

103
00:07:23,640 --> 00:07:27,160
структуру, яка полегшить розуміння властивостей множення матриць.

104
00:07:27,160 --> 00:07:29,080
Наприклад, ось таке запитання.

105
00:07:29,080 --> 00:07:33,480
Чи має значення, у якому порядку ми розміщуємо дві матриці, коли ми їх множимо?

106
00:07:33,480 --> 00:07:37,760
Ну, давайте поміркуємо на простому прикладі, як той, що був раніше.

107
00:07:37,760 --> 00:07:43,700
Візьміть ножиці, які фіксують i-hat і розтискають j-hat праворуч, і обертайте на 90 градусів.

108
00:07:43,700 --> 00:07:49,560
Якщо ви спочатку виконуєте зсув, а потім повертаєте, ми можемо побачити,

109
00:07:49,600 --> 00:07:51,480
що i-hat закінчується на 0,1, а j-hat закінчується на мінус 1,1.

110
00:07:51,480 --> 00:07:54,000
Обидва, як правило, спрямовані близько один до одного.

111
00:07:54,000 --> 00:08:01,000
Якщо ви спочатку обертаєте, а потім виконуєте зсув, i-hat закінчується на 1,1, а j-hat

112
00:08:01,420 --> 00:08:06,440
змінюється в іншому напрямку на мінус 1,0, і вони спрямовані далі один від одного.

113
00:08:06,440 --> 00:08:12,480
Загальний ефект тут явно інший, тому, очевидно, порядок має значення.

114
00:08:12,480 --> 00:08:16,520
Зверніть увагу, думаючи в термінах трансформацій, це те,

115
00:08:16,520 --> 00:08:18,360
що ви можете зробити у своїй голові, візуалізуючи.

116
00:08:18,360 --> 00:08:21,800
Множення матриці не потрібне.

117
00:08:21,800 --> 00:08:26,020
Я пам’ятаю, коли я вперше пройшов курс лінійної алгебри, було одне

118
00:08:26,020 --> 00:08:29,780
домашнє завдання, яке просили нас довести, що множення матриць є асоціативним.

119
00:08:29,780 --> 00:08:34,660
Це означає, що якщо у вас є три матриці, A, B і C, і ви множите їх усі

120
00:08:34,660 --> 00:08:39,840
разом, не повинно мати значення, чи ви спочатку обчислюєте A помножити на B, а потім помножити результат

121
00:08:39,840 --> 00:08:45,060
на C, або якщо ви спочатку помножите B раз C, потім помножте отриманий результат на A зліва.

122
00:08:45,060 --> 00:08:48,100
Іншими словами, не має значення, де ви ставите дужки.

123
00:08:48,100 --> 00:08:53,340
Тепер, якщо ви спробуєте пропрацювати це чисельно, як я

124
00:08:53,340 --> 00:08:56,420
тоді, це буде жахливо, просто жахливо і непросвітницько.

125
00:08:56,420 --> 00:09:01,380
Але коли ви думаєте про множення матриць як про

126
00:09:01,380 --> 00:09:03,460
застосування одного перетворення за іншим, ця властивість просто тривіальна.

127
00:09:03,460 --> 00:09:05,060
Ви бачите чому?

128
00:09:05,060 --> 00:09:10,700
Це означає, що якщо ви спочатку застосували C, потім B, потім

129
00:09:10,700 --> 00:09:13,060
A, це те саме, що застосувати C, потім B, потім A.

130
00:09:13,060 --> 00:09:16,940
Я маю на увазі, що нема чого доводити, ви просто застосовуєте ті

131
00:09:16,940 --> 00:09:19,680
самі три речі одна за одною, все в тому самому порядку.

132
00:09:19,680 --> 00:09:22,080
Це може здатися обманом, але це не так.

133
00:09:22,080 --> 00:09:26,360
Це щирий доказ того, що множення матриць є асоціативним.

134
00:09:26,360 --> 00:09:31,820
І навіть краще, це гарне пояснення того, чому ця властивість має бути істинною.

135
00:09:31,820 --> 00:09:37,020
Я дійсно заохочую вас більше пограти з цією ідеєю, уявивши

136
00:09:37,020 --> 00:09:40,560
два різні перетворення, подумавши про те, що станеться, коли ви

137
00:09:40,560 --> 00:09:42,700
застосовуєте одне за одним, а потім розробите матричний добуток чисельно.

138
00:09:42,700 --> 00:09:47,460
Повірте мені, це той вид гри, який справді захоплює ідею.

139
00:09:47,460 --> 00:09:52,060
У наступному відео я почну говорити про розширення цих ідей за межі двох вимірів.

140
00:09:52,060 --> 00:09:52,560
Побачимось!

