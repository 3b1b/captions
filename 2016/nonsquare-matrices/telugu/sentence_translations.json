[
 {
  "input": "Hey everyone, I've got another quick footnote for you between chapters today.",
  "translatedText": "అందరికీ హేయ్, ఈరోజు అధ్యాయాల మధ్య మీ కోసం నేను మరొక శీఘ్ర ఫుట్‌నోట్‌ని పొందాను.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 10.62,
  "end": 14.58
 },
 {
  "input": "When I've talked about linear transformations so far, I've only really talked about transformations from 2D vectors to other 2D vectors, represented with 2x2 matrices, or from 3D vectors to other 3D vectors, represented with 3x3 matrices.",
  "translatedText": "నేను ఇప్పటివరకు లీనియర్ ట్రాన్స్‌ఫార్మేషన్‌ల గురించి మాట్లాడినప్పుడు, నేను నిజంగా 2D వెక్టర్స్ నుండి ఇతర 2D వెక్టర్‌లకు, 2x2 మాత్రికలతో లేదా 3D వెక్టర్స్ నుండి ఇతర 3D వెక్టర్‌లకు, 3x3 మాత్రికలతో ప్రాతినిధ్యం వహించే పరివర్తనల గురించి మాత్రమే మాట్లాడాను.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 15.24,
  "end": 28.08
 },
 {
  "input": "But several commenters have asked about non-square matrices, so I thought I'd take a moment to just show what those mean geometrically.",
  "translatedText": "కానీ చాలా మంది వ్యాఖ్యాతలు నాన్-స్క్వేర్ మాత్రికల గురించి అడిగారు, కాబట్టి నేను జ్యామితీయంగా వాటి అర్థం ఏమిటో చూపించడానికి కొంత సమయం కేటాయించాలని అనుకున్నాను.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 28.78,
  "end": 34.58
 },
 {
  "input": "By now in the series, you actually have most of the background you need to start pondering a question like this on your own, but I'll start talking through it just to give a little mental momentum.",
  "translatedText": "ఈ సిరీస్‌లో ఇప్పటికి, మీరు మీ స్వంతంగా ఇలాంటి ప్రశ్న గురించి ఆలోచించడం ప్రారంభించాల్సిన నేపథ్యం చాలా వరకు మీకు ఉంది, కానీ కొంచెం మానసిక వేగాన్ని అందించడానికి నేను దాని గురించి మాట్లాడటం ప్రారంభిస్తాను.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 35.38,
  "end": 43.18
 },
 {
  "input": "It's perfectly reasonable to talk about transformations between dimensions, such as one that takes 2D vectors to 3D vectors.",
  "translatedText": "2D వెక్టర్‌లను 3D వెక్టర్‌లకు తీసుకెళ్లడం వంటి కొలతల మధ్య పరివర్తనల గురించి మాట్లాడటం పూర్తిగా సహేతుకమైనది.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 44.02,
  "end": 51.28
 },
 {
  "input": "Again, what makes one of these linear is that grid lines remain parallel and evenly spaced, and that the origin maps to the origin.",
  "translatedText": "మళ్ళీ, వీటిలో ఒకదానిని లీనియర్‌గా మార్చేది ఏమిటంటే, గ్రిడ్ లైన్‌లు సమాంతరంగా మరియు సమానంగా ఖాళీగా ఉంటాయి మరియు మూలం మూలానికి మ్యాప్ చేస్తుంది.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 51.92,
  "end": 59.1
 },
 {
  "input": "What I have pictured here is the input space on the left, which is just 2D space, and the output of the transformation shown on the right.",
  "translatedText": "నేను ఇక్కడ చిత్రీకరించినది ఎడమవైపు ఉన్న ఇన్‌పుట్ స్థలం, ఇది కేవలం 2D స్పేస్ మరియు కుడివైపు చూపిన పరివర్తన యొక్క అవుట్‌పుట్.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 60.02,
  "end": 66.34
 },
 {
  "input": "The reason I'm not showing the inputs move over to the outputs like I usually do is not just animation laziness, it's worth emphasizing that 2D vector inputs are very different animals from these 3D vector outputs, living in a completely separate unconnected space.",
  "translatedText": "నేను సాధారణంగా చేసే విధంగా ఇన్‌పుట్‌లు అవుట్‌పుట్‌ల వైపుకు వెళ్లడానికి నేను చూపించకపోవడానికి కారణం కేవలం యానిమేషన్ బద్ధకం మాత్రమే కాదు, 2D వెక్టర్ ఇన్‌పుట్‌లు ఈ 3D వెక్టర్ అవుట్‌పుట్‌ల నుండి చాలా భిన్నమైన జంతువులు, పూర్తిగా వేరుగా కనెక్ట్ కాని ప్రదేశంలో నివసిస్తాయని నొక్కి చెప్పడం విలువ.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 67.0,
  "end": 80.9
 },
 {
  "input": "Encoding one of these transformations with a matrix is really just the same thing as what we've done before.",
  "translatedText": "మ్యాట్రిక్స్‌తో ఈ పరివర్తనలలో ఒకదానిని ఎన్‌కోడింగ్ చేయడం నిజంగా మనం ఇంతకు ముందు చేసిన పనిలాగే ఉంటుంది.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 81.86,
  "end": 86.78
 },
 {
  "input": "You look at where each basis vector lands, and write the coordinates of the landing spots as the columns of a matrix.",
  "translatedText": "మీరు ప్రతి ప్రాతిపదిక వెక్టార్ ఎక్కడ ల్యాండ్ అవుతుందో చూడండి మరియు ల్యాండింగ్ స్పాట్‌ల కోఆర్డినేట్‌లను మాతృక యొక్క నిలువు వరుసలుగా వ్రాయండి.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 87.38,
  "end": 93.1
 },
 {
  "input": "For example, what you're looking at here is an output of a transformation that takes i-hat to the coordinates 2, negative 1, negative 2, and j-hat to the coordinates 0, 1, 1.",
  "translatedText": "ఉదాహరణకు, మీరు ఇక్కడ చూస్తున్నది పరివర్తన యొక్క అవుట్‌పుట్, ఇది అక్షాంశాలు 2, ప్రతికూల 1, ప్రతికూల 2 మరియు 0, 1, 1 కోఆర్డినేట్‌లకు j-hatని తీసుకువెళుతుంది.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 93.76,
  "end": 105.16
 },
 {
  "input": "Notice, this means the matrix encoding our transformation has three rows and two columns, which to use standard terminology makes it a 3x2 matrix.",
  "translatedText": "గమనించండి, దీనర్థం మా పరివర్తన ఎన్‌కోడింగ్ మాతృకలో మూడు అడ్డు వరుసలు మరియు రెండు నిలువు వరుసలు ఉన్నాయి, వీటిని ప్రామాణిక పరిభాషను ఉపయోగించడం 3x2 మాతృకగా చేస్తుంది.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 107.68,
  "end": 116.66
 },
 {
  "input": "In the language of last video, the column space of this matrix, the place where all the vectors land, is a 2D plane slicing through the origin of 3D space.",
  "translatedText": "చివరి వీడియో భాషలో చెప్పాలంటే, ఈ మ్యాట్రిక్స్ యొక్క కాలమ్ స్పేస్, అన్ని వెక్టర్స్ ల్యాండ్ అయ్యే ప్రదేశం, 3D స్పేస్ యొక్క మూలాన్ని స్లైసింగ్ చేసే 2D విమానం.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 117.88,
  "end": 126.9
 },
 {
  "input": "But the matrix is still full rank, since the number of dimensions in this column space is the same as the number of dimensions of the input space.",
  "translatedText": "కానీ మాతృక ఇప్పటికీ పూర్తి ర్యాంక్‌లో ఉంది, ఎందుకంటే ఈ నిలువు వరుస స్థలంలో కొలతల సంఖ్య ఇన్‌పుట్ స్థలం యొక్క కొలతల సంఖ్యకు సమానంగా ఉంటుంది.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 127.36,
  "end": 135.48
 },
 {
  "input": "So if you see a 3x2 matrix out in the wild, you can know that it has the geometric interpretation of mapping two dimensions to three dimensions, since the two columns indicate that the input space has two basis vectors, and the three rows indicate that the landing spots for each of those basis vectors is described with three separate coordinates.",
  "translatedText": "కాబట్టి మీరు అడవిలో 3x2 మాతృకను చూసినట్లయితే, ఇది రెండు కోణాలను మూడు కోణాలకు మ్యాపింగ్ చేసే రేఖాగణిత వివరణను కలిగి ఉందని మీరు తెలుసుకోవచ్చు, ఎందుకంటే రెండు నిలువు వరుసలు ఇన్‌పుట్ స్థలంలో రెండు ప్రాతిపదిక వెక్టర్‌లు ఉన్నాయని సూచిస్తున్నాయి మరియు మూడు అడ్డు వరుసలు ఆ ప్రాతిపదిక వెక్టర్‌లలో ప్రతిదానికీ ల్యాండింగ్ స్పాట్‌లు మూడు వేర్వేరు కోఆర్డినేట్‌లతో వివరించబడ్డాయి.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 137.14,
  "end": 156.92
 },
 {
  "input": "Likewise, if you see a 2x3 matrix with two rows and three columns, what do you think that means?",
  "translatedText": "అలాగే, మీరు రెండు అడ్డు వరుసలు మరియు మూడు నిలువు వరుసలతో 2x3 మాతృకను చూసినట్లయితే, దాని అర్థం ఏమిటి?",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 157.9,
  "end": 163.0
 },
 {
  "input": "Well, the three columns indicate that you're starting in a space that has three basis vectors, so we're starting in three dimensions, and the two rows indicate that the landing spot for each of those three basis vectors is described with only two coordinates, so they must be landing in two dimensions.",
  "translatedText": "సరే, మూడు కాలమ్‌లు మీరు మూడు ప్రాతిపదిక వెక్టర్‌లను కలిగి ఉన్న స్థలంలో ప్రారంభిస్తున్నారని సూచిస్తున్నాయి, కాబట్టి మేము మూడు కోణాలలో ప్రారంభిస్తున్నాము మరియు రెండు అడ్డు వరుసలు ఆ మూడు ప్రాతిపదిక వెక్టర్‌లలో ప్రతిదానికి ల్యాండింగ్ స్పాట్ రెండు మాత్రమే వివరించబడిందని సూచిస్తున్నాయి. కోఆర్డినేట్‌లు, కాబట్టి అవి తప్పనిసరిగా రెండు కోణాలలో దిగాలి.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 163.66,
  "end": 179.7
 },
 {
  "input": "So it's a transformation from 3D space onto the 2D plane, a transformation that should feel very uncomfortable if you imagine going through it.",
  "translatedText": "కనుక ఇది 3D స్పేస్ నుండి 2D ప్లేన్‌లోకి రూపాంతరం చెందుతుంది, మీరు దాని గుండా వెళుతున్నప్పుడు చాలా అసౌకర్యంగా భావించే పరివర్తన.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 180.52,
  "end": 189.38
 },
 {
  "input": "You could also have a transformation from two dimensions to one dimension.",
  "translatedText": "మీరు రెండు కోణాల నుండి ఒక కోణానికి రూపాంతరం చెందవచ్చు.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 193.48,
  "end": 197.08
 },
 {
  "input": "One-dimensional space is really just the number line, so a transformation like this takes in 2D vectors and spits out numbers.",
  "translatedText": "వన్-డైమెన్షనల్ స్పేస్ నిజంగా నంబర్ లైన్ మాత్రమే, కాబట్టి ఇలాంటి పరివర్తన 2D వెక్టర్‌లను తీసుకుంటుంది మరియు సంఖ్యలను ఉమ్మివేస్తుంది.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 197.72,
  "end": 204.88
 },
 {
  "input": "Thinking about grid lines remaining parallel and evenly spaced is a little bit messy due to all of the squishification happening here, so in this case, the visual understanding for what linearity means is that if you have a line of evenly spaced dots, it would remain evenly spaced once they're mapped onto the number line.",
  "translatedText": "గ్రిడ్ లైన్‌ల గురించి సమాంతరంగా మరియు సమానంగా ఖాళీగా ఉండటం గురించి ఆలోచించడం ఇక్కడ జరుగుతున్న అన్ని స్క్విష్ఫికేషన్ కారణంగా కొంచెం గందరగోళంగా ఉంది, కాబట్టి ఈ సందర్భంలో, లీనియారిటీ అంటే ఏమిటో దృశ్యమాన అవగాహన ఏమిటంటే, మీకు సమాన అంతరం ఉన్న చుక్కల రేఖ ఉంటే, అది అలాగే ఉంటుంది. అవి నంబర్ లైన్‌లో మ్యాప్ చేయబడిన తర్వాత సమానంగా ఖాళీ చేయబడతాయి.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 205.84,
  "end": 222.32
 },
 {
  "input": "One of these transformations is encoded with a 1x2 matrix, each of whose two columns has just a single entry.",
  "translatedText": "ఈ రూపాంతరాలలో ఒకటి 1x2 మ్యాట్రిక్స్‌తో ఎన్‌కోడ్ చేయబడింది, వీటిలో ప్రతి రెండు నిలువు వరుసలు ఒకే ఎంట్రీని కలిగి ఉంటాయి.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 223.38,
  "end": 230.18
 },
 {
  "input": "The two columns represent where the basis vectors land, and each one of those columns requires just one number, the number that that basis vector landed on.",
  "translatedText": "రెండు నిలువు వరుసలు ప్రాతిపదిక వెక్టార్‌లు ఎక్కడ ల్యాండ్ అవుతాయో సూచిస్తాయి మరియు ఆ నిలువు వరుసలలో ప్రతిదానికి కేవలం ఒక సంఖ్య అవసరం, ఆ ప్రాతిపదిక వెక్టర్ ల్యాండ్ అయిన సంఖ్య.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 230.86,
  "end": 238.32
 },
 {
  "input": "This is actually a surprisingly meaningful type of transformation with close ties to the dot product, and I'll be talking about that next video.",
  "translatedText": "ఇది నిజానికి డాట్ ఉత్పత్తికి దగ్గరి సంబంధాలతో ఒక ఆశ్చర్యకరంగా అర్థవంతమైన రూపాంతరం, మరియు నేను ఆ తదుపరి వీడియో గురించి మాట్లాడతాను.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 239.24,
  "end": 245.7
 },
 {
  "input": "Until then, I encourage you to play around with this idea on your own, contemplating the meanings of things like matrix multiplication and linear systems of equations in the context of transformations between different dimensions.",
  "translatedText": "అప్పటి వరకు, వివిధ పరిమాణాల మధ్య పరివర్తనల సందర్భంలో మాతృక గుణకారం మరియు సమీకరణాల సరళ వ్యవస్థల వంటి వాటి అర్థాలను ఆలోచించి, ఈ ఆలోచనతో మీ స్వంతంగా ఆడుకోవాలని నేను మిమ్మల్ని ప్రోత్సహిస్తున్నాను.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 246.4,
  "end": 257.56
 },
 {
  "input": "Have fun!",
  "translatedText": "ఆనందించండి!",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 258.22,
  "end": 258.32
 }
]