1
00:00:11,109 --> 00:00:15,360
皆さん、今日は章の間に簡単な脚注を用意しました。

2
00:00:15,360 --> 00:00:17,360
これまで線形変換について説明してきたとき、実際には、2D

3
00:00:17,360 --> 00:00:21,840
ベクトルから 2x2 行列で表される他の 2D ベクトルへ

4
00:00:21,840 --> 00:00:23,720
の変換、または 3D ベクトルから 3x3 行列で表される

5
00:00:23,720 --> 00:00:29,220
他の 3D ベクトルへの変換についてのみ説明してきました。

6
00:00:29,260 --> 00:00:32,140
しかし、何人かのコメント投稿者が非正方行列について質問したので、そ

7
00:00:32,140 --> 00:00:35,460
れらが幾何学的に何を意味するのかを少しだけ説明したいと思いました。

8
00:00:35,460 --> 00:00:38,260
このシリーズのここまでで、このような質問を自分で考え始め

9
00:00:38,260 --> 00:00:40,860
るために必要な背景のほとんどを実際に習得していますが、少

10
00:00:40,860 --> 00:00:44,260
し精神的な勢いを与えるために、それについて話し始めます。

11
00:00:44,260 --> 00:00:48,520
2D ベクトルから 3D ベクトルへの変換など、

12
00:00:48,520 --> 00:00:51,940
次元間の変換について話すのは完全に合理的です。

13
00:00:51,940 --> 00:00:57,300
繰り返しますが、これらの 1 つが線形であるのは、グリッド線が

14
00:00:57,300 --> 00:01:00,180
平行かつ等間隔のままであり、原点が原点にマップされることです。

15
00:01:00,180 --> 00:01:02,580
ここで描いたのは、左側の入力空間

16
00:01:02,580 --> 00:01:04,180
(単なる 2D 空間) と、

17
00:01:04,180 --> 00:01:07,140
右側に示された変換の出力です。

18
00:01:07,140 --> 00:01:10,900
いつものように入力が出力に移行する様子を見せていな

19
00:01:10,900 --> 00:01:12,940
い理由は、アニメーションが怠いだけではなく、2D

20
00:01:12,940 --> 00:01:16,500
ベクトル入力はこれらの 3D ベクトル出力とは大

21
00:01:16,500 --> 00:01:18,460
きく異なる動物であり、完全に分離された接続されてい

22
00:01:18,460 --> 00:01:22,220
ない空間に存在することを強調する価値があります。

23
00:01:22,220 --> 00:01:24,280
これらの変換の 1 つを行列でエンコードすること

24
00:01:24,320 --> 00:01:27,440
は、実際には以前に行ったこととまったく同じです。

25
00:01:27,440 --> 00:01:29,640
各基底ベクトルがどこに着地するかを確認し、着地

26
00:01:29,640 --> 00:01:33,840
スポットの座標を行列の列として書き込みます。

27
00:01:33,840 --> 00:01:37,560
たとえば、ここで見ているのは、i-hat を

28
00:01:37,560 --> 00:01:42,240
座標 2、負の 1、負の 2、j-hat を

29
00:01:42,240 --> 00:01:46,800
座標 0、1、1 に変換する変換の出力です。

30
00:01:46,800 --> 00:01:53,460
これは、変換をエンコードする行列には 3 行 2 列があり、標準

31
00:01:53,460 --> 00:01:57,980
的な用語を使用すると 3x2 行列になることに注意してください。

32
00:01:57,980 --> 00:02:01,760
最後のビデオの言葉で言えば、この行列の列空間、

33
00:02:01,760 --> 00:02:03,460
つまりすべてのベクトルが到着する場所は、3D

34
00:02:03,460 --> 00:02:07,540
空間の原点をスライスした 2D 平面です。

35
00:02:07,540 --> 00:02:09,700
ただし、この列空間の次元数は入力

36
00:02:09,700 --> 00:02:12,300
空間の次元数と同じであるため、行

37
00:02:12,300 --> 00:02:17,580
列は依然としてフルランクです。

38
00:02:17,580 --> 00:02:20,300
したがって、実際に 3x2 行列を

39
00:02:20,300 --> 00:02:22,820
見れば、2 つの列は入力空間に

40
00:02:22,820 --> 00:02:25,860
2 つの基底ベクトルがあることを示

41
00:02:25,860 --> 00:02:30,060
し、3 つの行はこれらの基底ベク

42
00:02:30,060 --> 00:02:34,700
トルのそれぞれの着地スポットは、3

43
00:02:34,700 --> 00:02:37,580
つの個別の座標で記述されます。

44
00:02:37,580 --> 00:02:42,260
同様に、2 行 3 列の 2x3 行列が表示

45
00:02:42,260 --> 00:02:43,580
された場合、それは何を意味すると思いますか?

46
00:02:43,580 --> 00:02:46,660
3 つの列は、3 つの基底ベクトルを持つ空間から開始することを示しま

47
00:02:46,660 --> 00:02:50,460
す。したがって、3 次元で開始します。2 つの行は、これら 3 つ

48
00:02:50,460 --> 00:02:55,060
の基底ベクトルのそれぞれの着地点が 2 つの基底ベクトルのみで記述さ

49
00:02:55,060 --> 00:03:00,620
れることを示します。座標なので、2 次元に着陸する必要があります。

50
00:03:00,620 --> 00:03:05,500
つまり、これは 3D 空間から 2D 平面への変換であり、

51
00:03:05,500 --> 00:03:14,080
それを通過することを想像すると非常に不快に感じるはずです。

52
00:03:14,080 --> 00:03:18,020
2 次元から 1 次元への変換も可能です。

53
00:03:18,020 --> 00:03:20,540
1 次元空間は実際には単なる数直線であるため、このような

54
00:03:20,540 --> 00:03:25,940
変換では 2D ベクトルを取り込み、数値を吐き出します。

55
00:03:25,940 --> 00:03:28,780
グリッド線が平行で等間隔に保たれることについて考えるのは

56
00:03:28,780 --> 00:03:32,500
、ここで発生するすべての潰れのせいで少し面倒になります。

57
00:03:32,500 --> 00:03:36,180
この場合、線形性が何を意味するのかを視覚的に理解すると、

58
00:03:36,180 --> 00:03:39,200
等間隔の点の線がある場合、それはそのまま残るということに

59
00:03:39,200 --> 00:03:43,900
なります。数直線上にマッピングすると、等間隔になります。

60
00:03:43,900 --> 00:03:47,460
これらの変換の 1 つは 1x2 行列でエンコードされており、その

61
00:03:47,620 --> 00:03:50,900
2 つの列のそれぞれに 1 つのエントリだけが含まれています。

62
00:03:50,900 --> 00:03:53,740
2 つの列は基底ベクトルが着地する場所を表し

63
00:03:53,740 --> 00:03:56,520
、これらの列のそれぞれに必要な数値は、その基

64
00:03:56,520 --> 00:03:59,420
底ベクトルが着地する番号 1 つだけです。

65
00:03:59,420 --> 00:04:02,460
これは実際には、内積と密接な関係を持つ、驚くほど意味の

66
00:04:02,460 --> 00:04:06,480
あるタイプの変換であり、次のビデオについて説明します。

67
00:04:06,480 --> 00:04:09,900
それまでは、このアイデアを自分で試

68
00:04:09,900 --> 00:04:12,420
してみて、異なる次元間の変換の文脈

69
00:04:12,420 --> 00:04:16,180
における行列の乗算や線形方程式系の

70
00:04:16,180 --> 00:04:18,180
意味を熟考することをお勧めします。

71
00:04:18,180 --> 00:04:19,180
楽しむ！

