[
 {
  "input": "The hard assumption here is that you've watched part 3, giving an intuitive walkthrough of the backpropagation algorithm.",
  "model": "nmt",
  "translatedText": "Важке припущення полягає в тому, що ви переглянули частину 3, яка дає інтуїтивно зрозумілу інструкцію з алгоритму зворотного поширення.",
  "time_range": [
   0.0,
   11.16
  ]
 },
 {
  "input": "Here we get a little more formal and dive into the relevant calculus.",
  "model": "nmt",
  "translatedText": "Тут ми станемо більш формальними та зануримося у відповідне обчислення.",
  "time_range": [
   11.16,
   14.92
  ]
 },
 {
  "input": "It's normal for this to be at least a little confusing, so the mantra to regularly pause and ponder certainly applies as much here as anywhere else.",
  "model": "nmt",
  "translatedText": "Це нормально, що це принаймні трохи заплутає, тому мантра регулярно зупинятися та розмірковувати, безумовно, застосовна тут так само, як і будь-де.",
  "time_range": [
   14.92,
   22.0
  ]
 },
 {
  "input": "Our main goal is to show how people in machine learning commonly think about the chain rule from calculus in the context of networks, which has a different feel from how most introductory calculus courses approach the subject.",
  "model": "nmt",
  "translatedText": "Наша головна мета — показати, як люди, які займаються машинним навчанням, зазвичай думають про правило ланцюга з обчислення в контексті мереж, яке має інше відчуття від того, як більшість початкових курсів обчислення підходять до цього предмета.",
  "time_range": [
   22.0,
   34.58
  ]
 },
 {
  "input": "For those of you uncomfortable with the relevant calculus, I do have a whole series on the topic.",
  "model": "nmt",
  "translatedText": "Для тих із вас, кому незручно відповідне обчислення, у мене є ціла серія на цю тему.",
  "time_range": [
   34.58,
   39.3
  ]
 },
 {
  "input": "Let's start off with an extremely simple network, one where each layer has a single neuron in it.",
  "model": "nmt",
  "translatedText": "Давайте почнемо з надзвичайно простої мережі, де кожен рівень містить один нейрон.",
  "time_range": [
   39.3,
   46.78
  ]
 },
 {
  "input": "This network is determined by three weights and three biases, and our goal is to understand how sensitive the cost function is to these variables.",
  "model": "nmt",
  "translatedText": "Ця мережа визначається трьома вагами та трьома зміщеннями, і наша мета — зрозуміти, наскільки функція витрат чутлива до цих змінних.",
  "time_range": [
   46.78,
   55.64
  ]
 },
 {
  "input": "That way we know which adjustments to those terms will cause the most efficient decrease to the cost function.",
  "model": "nmt",
  "translatedText": "Таким чином ми знаємо, які коригування цих умов спричинять найефективніше зниження функції витрат.",
  "time_range": [
   55.64,
   61.1
  ]
 },
 {
  "input": "We'll just focus on the connection between the last two neurons.",
  "model": "nmt",
  "translatedText": "Ми просто зосередимося на зв’язку між двома останніми нейронами.",
  "time_range": [
   61.1,
   65.36
  ]
 },
 {
  "input": "Let's label the activation of that last neuron with a superscript L, indicating which layer it's in.",
  "model": "nmt",
  "translatedText": "Давайте позначимо активацію цього останнього нейрона верхнім індексом L, вказуючи, на якому шарі він знаходиться.",
  "time_range": [
   65.36,
   71.8
  ]
 },
 {
  "input": "So the activation of the previous neuron is AL-1.",
  "model": "nmt",
  "translatedText": "Таким чином, активація попереднього нейрона AL-1.",
  "time_range": [
   71.8,
   76.56
  ]
 },
 {
  "input": "These are not exponents, they're just a way of indexing what we're talking about, since I want to save subscripts for different indices later on.",
  "model": "nmt",
  "translatedText": "Це не експоненти, це лише спосіб індексування того, про що ми говоримо, оскільки пізніше я хочу зберегти індекси для різних індексів.",
  "time_range": [
   76.56,
   83.6
  ]
 },
 {
  "input": "Let's say that the value we want this last activation to be for a given training example is y, for example, y might be 0 or 1.",
  "model": "nmt",
  "translatedText": "Припустімо, що значення, яке ми хочемо мати для цієї останньої активації для даного прикладу навчання, дорівнює y, наприклад, y може бути 0 або 1.",
  "time_range": [
   83.6,
   93.02
  ]
 },
 {
  "input": "So the cost of this network for a single training example is AL-y2.",
  "model": "nmt",
  "translatedText": "Отже, вартість цієї мережі для одного навчального прикладу становить AL-y2.",
  "time_range": [
   93.02,
   99.04
  ]
 },
 {
  "input": "We'll denote the cost of that one training example as c0.",
  "model": "nmt",
  "translatedText": "Ми позначимо вартість одного навчального прикладу як c0.",
  "time_range": [
   99.04,
   106.12
  ]
 },
 {
  "input": "As a reminder, this last activation is determined by a weight, which I'm going to call wL, times the previous neuron's activation plus some bias, which I'll call bL.",
  "model": "nmt",
  "translatedText": "Нагадаю, що ця остання активація визначається вагою, яку я називатиму wL, помноженою на активацію попереднього нейрона плюс деяке зміщення, яке я називатиму bL.",
  "time_range": [
   106.12,
   117.6
  ]
 },
 {
  "input": "Then you pump that through some special nonlinear function like the sigmoid or ReLU.",
  "model": "nmt",
  "translatedText": "Потім ви прокачуєте це через якусь спеціальну нелінійну функцію, як-от сигмоїда або ReLU.",
  "time_range": [
   117.6,
   121.56
  ]
 },
 {
  "input": "It's actually going to make things easier for us if we give a special name to this weighted sum, like z, with the same superscript as the relevant activations.",
  "model": "nmt",
  "translatedText": "Насправді нам стане простіше, якщо ми дамо спеціальну назву цій зваженій сумі, як-от z, з тим самим верхнім індексом, що й відповідні активації.",
  "time_range": [
   121.56,
   130.6
  ]
 },
 {
  "input": "This is a lot of terms, and a way you might conceptualize it is that the weight, previous action, and bias all together are used to compute z, which in turn lets us compute a, which finally, along with a constant y, lets us compute the cost.",
  "model": "nmt",
  "translatedText": "Це багато термінів, і ви можете концептуалізувати це так: вага, попередня дія та зміщення разом використовуються для обчислення z, що, у свою чергу, дозволяє нам обчислити a, яке, нарешті, разом із константою y, дозволяє ми розрахуємо вартість.",
  "time_range": [
   130.6,
   147.36
  ]
 },
 {
  "input": "And of course, AL-1 is influenced by its own weight and bias and such, but we're not going to focus on that right now.",
  "model": "nmt",
  "translatedText": "І, звісно, на AL-1 впливає власна вага, упередженість тощо, але ми не збираємося на цьому зосереджуватися зараз.",
  "time_range": [
   147.36,
   155.92
  ]
 },
 {
  "input": "All of these are just numbers, right?",
  "model": "nmt",
  "translatedText": "Усе це лише цифри, чи не так?",
  "time_range": [
   155.92,
   158.12
  ]
 },
 {
  "input": "And it can be nice to think of each one as having its own little number line.",
  "model": "nmt",
  "translatedText": "І може бути приємно уявити, що кожна з них має власну маленьку числову лінію.",
  "time_range": [
   158.12,
   161.96
  ]
 },
 {
  "input": "Our first goal is to understand how sensitive the cost function is to small changes in our weight wL.",
  "model": "nmt",
  "translatedText": "Наша перша мета — зрозуміти, наскільки функція витрат чутлива до невеликих змін нашої ваги wL.",
  "time_range": [
   161.96,
   169.82
  ]
 },
 {
  "input": "Or phrase differently, what is the derivative of c with respect to wL?",
  "model": "nmt",
  "translatedText": "Або інакше сформулюйте, яка похідна c відносно wL?",
  "time_range": [
   169.82,
   175.74
  ]
 },
 {
  "input": "When you see this del w term, think of it as meaning some tiny nudge to w, like a change by 0.01, and think of this del c term as meaning whatever the resulting nudge to the cost is.",
  "model": "nmt",
  "translatedText": "Коли ви бачите цей термін del w, уявіть, що це означає деякий крихітний поштовх до w, як зміна на 0.01, і подумайте про те, що цей термін del c означає будь-яке кінцеве підвищення вартості.",
  "time_range": [
   175.74,
   188.82
  ]
 },
 {
  "input": "What we want is their ratio.",
  "model": "nmt",
  "translatedText": "Ми хочемо їх співвідношення.",
  "time_range": [
   188.82,
   190.9
  ]
 },
 {
  "input": "Conceptually, this tiny nudge to wL causes some nudge to zL, which in turn causes some nudge to AL, which directly influences the cost.",
  "model": "nmt",
  "translatedText": "Концептуально цей невеликий поштовх до wL спричиняє деякий поштовх до zL, який, у свою чергу, викликає певний поштовх до AL, що безпосередньо впливає на вартість.",
  "time_range": [
   190.9,
   203.22
  ]
 },
 {
  "input": "So we break things up by first looking at the ratio of a tiny change to zL to this tiny change w, that is, the derivative of zL with respect to wL.",
  "model": "nmt",
  "translatedText": "Отже, ми розділяємо речі, спочатку дивлячись на відношення незначної зміни zL до цієї незначної зміни w, тобто похідну від zL відносно wL.",
  "time_range": [
   203.22,
   213.34
  ]
 },
 {
  "input": "Likewise, you then consider the ratio of the change to AL to the tiny change in zL that caused it, as well as the ratio between the final nudge to c and this intermediate nudge to AL.",
  "model": "nmt",
  "translatedText": "Подібним чином ви розглядаєте співвідношення зміни до AL до крихітної зміни в zL, яка її спричинила, а також співвідношення між остаточним підштовхуванням до c і цим проміжним підштовхуванням до AL.",
  "time_range": [
   213.34,
   225.9
  ]
 },
 {
  "input": "This right here is the chain rule, where multiplying these three ratios gives us the sensitivity of c to small changes in wL.",
  "model": "nmt",
  "translatedText": "Це ланцюгове правило, де множення цих трьох співвідношень дає нам чутливість c до невеликих змін wL.",
  "time_range": [
   225.9,
   237.34
  ]
 },
 {
  "input": "So on screen right now, there's a lot of symbols, and take a moment to make sure it's clear what they all are, because now we're going to compute the relevant derivatives.",
  "model": "nmt",
  "translatedText": "Тож зараз на екрані є багато символів, і знайдіть хвилинку, щоб переконатися, що вони всі зрозумілі, тому що зараз ми збираємося обчислити відповідні похідні.",
  "time_range": [
   237.34,
   247.46
  ]
 },
 {
  "input": "The derivative of c with respect to AL works out to be 2AL-y.",
  "model": "nmt",
  "translatedText": "Похідна від c відносно AL виявляється 2AL-y.",
  "time_range": [
   247.46,
   254.22
  ]
 },
 {
  "input": "This means its size is proportional to the difference between the network's output and the thing we want it to be, so if that output was very different, even slight changes stand to have a big impact on the final cost function.",
  "model": "nmt",
  "translatedText": "Це означає, що його розмір пропорційний різниці між виходом мережі та тим, що ми хочемо, щоб він був, тому, якщо цей вивід сильно відрізняється, навіть незначні зміни можуть мати великий вплив на кінцеву функцію витрат.",
  "time_range": [
   254.22,
   268.38
  ]
 },
 {
  "input": "The derivative of AL with respect to zL is just the derivative of our sigmoid function, or whatever nonlinearity you choose to use.",
  "model": "nmt",
  "translatedText": "Похідна AL відносно zL — це просто похідна нашої сигмоїдної функції або будь-якої нелінійності, яку ви вирішите використовувати.",
  "time_range": [
   268.38,
   277.42
  ]
 },
 {
  "input": "The derivative of zL with respect to wL comes out to be AL-1.",
  "model": "nmt",
  "translatedText": "Похідна від zL відносно wL дорівнює AL-1.",
  "time_range": [
   277.42,
   286.18
  ]
 },
 {
  "input": "I don't know about you, but I think it's easy to get stuck head down in the formulas without taking a moment to sit back and remind yourself what they all mean.",
  "model": "nmt",
  "translatedText": "Я не знаю, як ви, але я думаю, що легко застрягти головою в формулах, не витрачаючи хвилини, щоб сісти склавши руки та нагадати собі, що вони означають.",
  "time_range": [
   286.18,
   294.18
  ]
 },
 {
  "input": "In the case of this last derivative, the amount that the small nudge to the weight influenced the last layer depends on how strong the previous neuron is.",
  "model": "nmt",
  "translatedText": "У випадку цієї останньої похідної величина впливу невеликого поштовху на вагу на останній шар залежить від того, наскільки сильним є попередній нейрон.",
  "time_range": [
   294.18,
   303.22
  ]
 },
 {
  "input": "Remember, this is where the neurons-that-fire-together-wire-together idea comes in.",
  "model": "nmt",
  "translatedText": "Пам’ятайте, що саме тут з’являється ідея нейронів, які спрацьовують разом.",
  "time_range": [
   303.22,
   309.32
  ]
 },
 {
  "input": "And all of this is the derivative with respect to wL only of the cost for a specific single training example.",
  "model": "nmt",
  "translatedText": "І все це є похідною по відношенню до wL лише від вартості окремого прикладу навчання.",
  "time_range": [
   309.32,
   316.58
  ]
 },
 {
  "input": "Since the full cost function involves averaging together all those costs across many different training examples, its derivative requires averaging this expression over all training examples.",
  "model": "nmt",
  "translatedText": "Оскільки функція повних витрат передбачає усереднення всіх цих витрат у багатьох різних прикладах навчання, її похідна вимагає усереднення цього виразу для всіх прикладів навчання.",
  "time_range": [
   316.58,
   328.54
  ]
 },
 {
  "input": "Of course, that's just one component of the gradient vector, which is built up from the partial derivatives of the cost function with respect to all those weights and biases.",
  "model": "nmt",
  "translatedText": "Звичайно, це лише один компонент вектора градієнта, який складається з часткових похідних функції вартості щодо всіх цих ваг і зміщень.",
  "time_range": [
   328.54,
   340.78
  ]
 },
 {
  "input": "But even though that's just one of the many partial derivatives we need, it's more than 50% of the work.",
  "model": "nmt",
  "translatedText": "Але хоча це лише одна з багатьох частинних похідних, які нам потрібні, це понад 50% роботи.",
  "time_range": [
   340.78,
   346.46
  ]
 },
 {
  "input": "The sensitivity to the bias, for example, is almost identical.",
  "model": "nmt",
  "translatedText": "Чутливість до зсуву, наприклад, практично однакова.",
  "time_range": [
   346.46,
   350.3
  ]
 },
 {
  "input": "We just need to change out this del z del w term for a del z del b.",
  "model": "nmt",
  "translatedText": "Нам просто потрібно змінити цей термін del z del w на a del z del b.",
  "time_range": [
   350.3,
   358.98
  ]
 },
 {
  "input": "And if you look at the relevant formula, that derivative comes out to be 1.",
  "model": "nmt",
  "translatedText": "І якщо ви подивитеся на відповідну формулу, ця похідна виявиться рівною 1.",
  "time_range": [
   358.98,
   364.7
  ]
 },
 {
  "input": "Also, and this is where the idea of propagating backwards comes in, you can see how sensitive this cost function is to the activation of the previous layer.",
  "model": "nmt",
  "translatedText": "Крім того, і саме тут виникає ідея поширення назад, ви можете побачити, наскільки ця функція вартості чутлива до активації попереднього рівня.",
  "time_range": [
   364.7,
   376.18
  ]
 },
 {
  "input": "Namely, this initial derivative in the chain rule expression, the sensitivity of z to the previous activation, comes out to be the weight wL.",
  "model": "nmt",
  "translatedText": "А саме, ця початкова похідна у виразі правила ланцюга, чутливість z до попередньої активації, виявляється вагою wL.",
  "time_range": [
   376.18,
   385.42
  ]
 },
 {
  "input": "And again, even though we're not going to be able to directly influence that previous layer activation, it's helpful to keep track of, because now we can just keep iterating this same chain rule idea backwards to see how sensitive the cost function is to previous weights and previous biases.",
  "model": "nmt",
  "translatedText": "І знову ж таки, хоча ми не зможемо напряму вплинути на активацію попереднього рівня, це корисно відслідковувати, тому що тепер ми можемо просто продовжувати повторювати ту саму ідею правила ланцюга назад, щоб побачити, наскільки чутлива функція витрат до попередні ваги та попередні упередження.",
  "time_range": [
   385.42,
   403.68
  ]
 },
 {
  "input": "And you might think this is an overly simple example, since all layers have one neuron, and things are going to get exponentially more complicated for a real network.",
  "model": "nmt",
  "translatedText": "І ви можете подумати, що це надто простий приклад, оскільки всі рівні мають один нейрон, а для реальної мережі все стане експоненціально складнішим.",
  "time_range": [
   403.68,
   411.32
  ]
 },
 {
  "input": "But honestly, not that much changes when we give the layers multiple neurons, really it's just a few more indices to keep track of.",
  "model": "nmt",
  "translatedText": "Але, чесно кажучи, не так багато змін, коли ми надаємо шарам кілька нейронів, насправді це лише кілька індексів, які потрібно відстежувати.",
  "time_range": [
   411.32,
   419.32
  ]
 },
 {
  "input": "Rather than the activation of a given layer simply being AL, it's also going to have a subscript indicating which neuron of that layer it is.",
  "model": "nmt",
  "translatedText": "Замість того, щоб активація даного шару була просто AL, він також матиме індекс, який вказує, який нейрон цього шару це.",
  "time_range": [
   419.32,
   427.92
  ]
 },
 {
  "input": "Let's use the letter k to index the layer L-1, and j to index the layer L.",
  "model": "nmt",
  "translatedText": "Використовуємо букву k для індексування шару L-1, а j для індексування шару L.",
  "time_range": [
   427.92,
   435.28
  ]
 },
 {
  "input": "For the cost, again we look at what the desired output is, but this time we add up the squares of the differences between these last layer activations and the desired output.",
  "model": "nmt",
  "translatedText": "Що стосується вартості, ми знову дивимося на бажаний результат, але цього разу ми складаємо квадрати різниць між цими останніми активаціями шару та бажаним результатом.",
  "time_range": [
   435.28,
   446.12
  ]
 },
 {
  "input": "That is, you take a sum over ALj minus yj squared.",
  "model": "nmt",
  "translatedText": "Тобто ви берете суму на ALj мінус yj у квадраті.",
  "time_range": [
   446.12,
   453.28
  ]
 },
 {
  "input": "Since there's a lot more weights, each one has to have a couple more indices to keep track of where it is, so let's call the weight of the edge connecting this kth neuron to the jth neuron, WLjk.",
  "model": "nmt",
  "translatedText": "Оскільки ваг набагато більше, кожен з них повинен мати ще пару індексів, щоб відстежувати, де він знаходиться, тому давайте назвемо вагу ребра, що з’єднує цей k-й нейрон із j-м нейроном, WLjk.",
  "time_range": [
   453.28,
   465.74
  ]
 },
 {
  "input": "Those indices might feel a little backwards at first, but it lines up with how you'd index the weight matrix I talked about in the part 1 video.",
  "model": "nmt",
  "translatedText": "Спочатку ці індекси можуть здатися трохи зворотними, але вони узгоджуються з тим, як ви індексуєте вагову матрицю, про яку я говорив у першій частині відео.",
  "time_range": [
   465.74,
   473.8
  ]
 },
 {
  "input": "Just as before, it's still nice to give a name to the relevant weighted sum, like z, so that the activation of the last layer is just your special function, like the sigmoid, applied to z.",
  "model": "nmt",
  "translatedText": "Як і раніше, доцільно дати ім’я відповідній зваженій сумі, як-от z, щоб активація останнього шару була просто вашою спеціальною функцією, як-от сигмоід, застосована до z.",
  "time_range": [
   473.8,
   484.98
  ]
 },
 {
  "input": "You can see what I mean, where all of these are essentially the same equations we had before in the one-neuron-per-layer case, it's just that it looks a little more complicated.",
  "model": "nmt",
  "translatedText": "Ви розумієте, що я маю на увазі, де всі ці рівняння, по суті, ті самі рівняння, які ми мали раніше у випадку одного нейрона на шар, просто це виглядає трохи складніше.",
  "time_range": [
   484.98,
   495.42
  ]
 },
 {
  "input": "And indeed, the chain rule derivative expression describing how sensitive the cost is to a specific weight looks essentially the same.",
  "model": "nmt",
  "translatedText": "І справді, похідний вираз ланцюгового правила, що описує, наскільки чутлива вартість до конкретної ваги, виглядає практично однаково.",
  "time_range": [
   495.42,
   503.54
  ]
 },
 {
  "input": "I'll leave it to you to pause and think about each of those terms if you want.",
  "model": "nmt",
  "translatedText": "Я залишу вам зробити паузу та подумати над кожним із цих термінів, якщо хочете.",
  "time_range": [
   503.54,
   509.42
  ]
 },
 {
  "input": "What does change here, though, is the derivative of the cost with respect to one of the activations in the layer L-1.",
  "model": "nmt",
  "translatedText": "Що тут змінюється, так це похідна вартості відносно однієї з активацій на рівні L-1.",
  "time_range": [
   509.42,
   517.82
  ]
 },
 {
  "input": "In this case, the difference is that the neuron influences the cost function through multiple different paths.",
  "model": "nmt",
  "translatedText": "У цьому випадку різниця полягає в тому, що нейрон впливає на функцію витрат кількома різними шляхами.",
  "time_range": [
   517.82,
   523.54
  ]
 },
 {
  "input": "That is, on the one hand, it influences AL0, which plays a role in the cost function, but it also has an influence on AL1, which also plays a role in the cost function, and you have to add those up.",
  "model": "nmt",
  "translatedText": "Тобто, з одного боку, це впливає на AL0, який відіграє певну роль у функції витрат, але він також впливає на AL1, який також відіграє роль у функції витрат, і ви повинні додати їх.",
  "time_range": [
   523.54,
   540.34
  ]
 },
 {
  "input": "And that, well, that's pretty much it.",
  "model": "nmt",
  "translatedText": "І це, ну, це майже все.",
  "time_range": [
   540.34,
   543.68
  ]
 },
 {
  "input": "Once you know how sensitive the cost function is to the activations in this second-to-last layer, you can just repeat the process for all the weights and biases feeding into that layer.",
  "model": "nmt",
  "translatedText": "Коли ви дізнаєтеся, наскільки функція вартості чутлива до активацій на цьому передостанньому шарі, ви можете просто повторити процес для всіх ваг і зміщень, що надходять у цей шар.",
  "time_range": [
   543.68,
   553.92
  ]
 },
 {
  "input": "So pat yourself on the back!",
  "model": "nmt",
  "translatedText": "Тож погладьте себе по плечу!",
  "time_range": [
   553.92,
   555.42
  ]
 },
 {
  "input": "If all of this makes sense, you have now looked deep into the heart of backpropagation, the workhorse behind how neural networks learn.",
  "model": "nmt",
  "translatedText": "Якщо все це має сенс, то тепер ви зазирнули глибоко в серце зворотного поширення, робочої конячки, яка лежить в основі того, як нейронні мережі навчаються.",
  "time_range": [
   555.42,
   563.7
  ]
 },
 {
  "input": "These chain rule expressions give you the derivatives that determine each component in the gradient that helps minimize the cost of the network by repeatedly stepping downhill.",
  "model": "nmt",
  "translatedText": "Ці вирази правил ланцюга дають вам похідні, які визначають кожен компонент у градієнті, що допомагає мінімізувати вартість мережі шляхом повторного кроку вниз.",
  "time_range": [
   563.7,
   575.02
  ]
 },
 {
  "input": "If you sit back and think about all that, this is a lot of layers of complexity to wrap your mind around, so don't worry if it takes time for your mind to digest it all.",
  "model": "nmt",
  "translatedText": "Якщо ви сидите склавши руки і думаєте про все це, це багато рівнів складності, щоб охопити свій розум, тож не хвилюйтеся, якщо вашому розуму потрібен час, щоб усе це переварити.",
  "time_range": [
   575.02,
   578.96
  ]
 }
]