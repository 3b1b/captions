1
00:00:04,380 --> 00:00:07,360
이 비디오는 제가 오랫동안 만들고 싶어했던 비디오입니다.

2
00:00:07,360 --> 00:00:14,180
오늘의 주제는 소수와 복소수,
그리고 π의 아름다운 삼중주입니다.

3
00:00:14,180 --> 00:00:18,520
현대 수학에서는 꽤 자주,
특히 리만 제타 함수와 연관된 부분에서는

4
00:00:18,520 --> 00:00:22,160
별 관련이 없어보이는 소수, 복소수, 그리고 π가
함께 조화를 이루는 걸 볼 수 있습니다.

5
00:00:22,160 --> 00:00:29,000
이 비디오에서는 그런 예 중 하나를 보여드리고자 합니다.
어려운 기술적 배경이 필요없는 걸로 말이죠.

6
00:00:29,000 --> 00:00:32,040
쉽다는 말은 결코 아닙니다.
사실 이 영상은 제가 만든 것 중

7
00:00:32,040 --> 00:00:36,740
제일 복잡한 축에 낍니다.
하지만 그럴 만한 가치가 있는 결말입니다.

8
00:00:36,740 --> 00:00:39,480
우리가 마지막에 보게 될 것은 π의 값을 구하는 공식으로

9
00:00:39,480 --> 00:00:44,860
하나의 무한 교대 급수입니다.
이 공식은 사실 제가 이 비디오를 만들면서

10
00:00:44,870 --> 00:00:49,520
커피를 마시고 있는 컵에도 적힌 공식인데요,
재미는 있지만 신빙성은 거의 없는 이야기지만

11
00:00:49,520 --> 00:00:54,730
이 공식의 아름다움이 라이프니츠가 변호사를 그만두고
수학자의 길을 걷게 만들었다는

12
00:00:54,730 --> 00:01:00,690
이야기가 있습니다.
우리가 수학에서 π를 발견할 때, 어딘가에는

13
00:01:00,690 --> 00:01:05,840
원이 숨어있습니다. 가끔씩 매우 깊이 숨어있죠.
그래서 오늘의 목표는 단순히 합을 구하는 것이 아니라

14
00:01:05,840 --> 00:01:11,280
그 뒤에 숨어있는 원이 무엇인지 정말로 이해하는 것입니다.

15
00:01:11,280 --> 00:01:15,410
같은 결과를 미적분학 계산 몇 줄로 증명하면서

16
00:01:15,410 --> 00:01:20,880
잠시간의 유의미한 시간을 보낼 수도 있겠지만,
그 증명은

17
00:01:20,880 --> 00:01:26,680
끝나고 나면 '오, 그런가보다'하고 생각하게 만들고
숨겨진 원이 어디 있는지에 대해

18
00:01:26,680 --> 00:01:32,380
생각하지 않게 만듭니다. 오늘 함께할 이야기에서는
이 급수 뒤에 숨겨진 근본적 진실과

19
00:01:32,380 --> 00:01:38,469
급수 속에 숨겨진 원,
그리고 소수가 지닌 특정한 규칙성과

20
00:01:38,469 --> 00:01:43,729
복소수의 연관성에 대해
알아볼 것입니다.

21
00:01:43,729 --> 00:01:47,810
이야기를 시작하기 위해서
우리한테 연필과 종이 몇 장, 그리고

22
00:01:47,810 --> 00:01:54,259
π를 계산할 공식에 대한 열망이 있다고 가정합시다.
정말 많은 접근법이 있겠지만

23
00:01:54,259 --> 00:01:58,670
우리가 할 방법의 대략적인 전개를 설명하자면
평면상의 커다란 원 안에 있는

24
00:01:58,670 --> 00:02:04,140
격자점의 개수를 세는 데서 시작할 것입니다.
그 다음으로는 숫자들을 어떻게

25
00:02:04,140 --> 00:02:10,149
두 제곱수의 합으로 표현할 수 있을지를 고민할 것이고,
그 고민은 복소평면에서 정수를

26
00:02:10,149 --> 00:02:15,489
인수분해하는 방법으로 이어집니다.
여기서 카이(χ)라는 함수를 활용해서

27
00:02:15,489 --> 00:02:22,060
π를 구하는 공식을 얻을 수 있습니다.
처음 봤을 때는 소수의 분포에 의존하는

28
00:02:22,060 --> 00:02:26,940
매우 복잡한 공식처럼 보일 수 있습니다만,
조금만 관점을 바꿔서 보면 매우 단순해지고

29
00:02:26,940 --> 00:02:29,980
결국 우리가 찾던 금덩어리가
모습을 드러낼 것입니다.

30
00:02:29,980 --> 00:02:35,950
내용이 많지만 좋은 수학은 시간이 걸리는 법입니다.
차근차근 진도를 나가보죠.

31
00:02:35,950 --> 00:02:40,900
제가 '격자점'이라 말하는 것은 평면상의 점 (a, b)를
가리키는 것이고 이 때 a와 b는 모두 정수입니다.

32
00:02:40,900 --> 00:02:47,100
격자의 가로선과 세로선이 교차하는 곳이죠.
만약 원점을 중심으로 하는 원을 그리면,

33
00:02:47,100 --> 00:02:52,690
예를 들어 반지름이 10인 원이라 하면,
이 원 안에 몇 개의 격자점이 있을까요?

34
00:02:52,690 --> 00:02:59,400
범위 면적 당 하나의 격자점이 존재할 테니까,
정답은 대략적으로 원의 면적, 즉

35
00:02:59,400 --> 00:03:06,330
πR²일 것이고, 이 경우 π 곱하기 10의 제곱일 것입니다.
그리고 정말로 반지름이

36
00:03:06,330 --> 00:03:11,819
큰 경우, 예를 들어 백만이라고 치면,
이 때의 값이 더 정확하리라고 생각할 수 있습니다.

37
00:03:11,820 --> 00:03:18,600
근사치 πR²와 실제 격자점의 개수의
비율 오류가 줄어든다는 관점에서 말이죠.

38
00:03:18,600 --> 00:03:22,290
만약 우리가 똑같은 문제, 그러니까 이 원 안에 있는

39
00:03:22,290 --> 00:03:27,400
격자점의 개수를 묻는 문제에 다른 답을 찾을 수 있다면,
이것은 원의 면적을 표현하는 다른 방법을

40
00:03:27,400 --> 00:03:33,390
발견하는 것이고, 따라서
π를 표현하는 다른 방법을 발견하는 것입니다.

41
00:03:33,390 --> 00:03:39,680
그럼 시작해 봅시다! 고민해 보세요.
어쩌면, 특히 어떤 미적분학 영상을 본 적이 있다면,

42
00:03:39,680 --> 00:03:45,819
격자점이 놓여있을 수 있는 모든 원들에
착안할 수 있을 겁니다.

43
00:03:45,819 --> 00:03:52,780
각 격자점 (a, b)와 원점과의 거리는
(a² + b²)의 제곱근이고

44
00:03:52,780 --> 00:03:59,209
a와 b는 모두 정수이기 때문에 a² + b² 또한 정수이므로
반지름이 정수의 제곱근인

45
00:03:59,220 --> 00:04:03,810
원들만 살펴 보면 될 것입니다.

46
00:04:03,810 --> 00:04:12,160
반지름이 0일 때는 그냥 원점 하나입니다.
1일 때는 네 개의 격자점을 지나고,

47
00:04:12,160 --> 00:04:19,480
√2일 때도 격자점 네 개를 지나죠.
√3일 때는 격자점을 지나지 않고,

48
00:04:19,480 --> 00:04:26,780
√4는 다시 격자점 네 개.
반지름이 √5인 원을 보면 격자점 여덟 개를 지나고…

49
00:04:26,780 --> 00:04:35,060
이제 우리한테 필요한 건 주어진 반지름에 대해
얼마나 많은 격자점이 있는지를 헤아리는 방법과

50
00:04:35,060 --> 00:04:37,780
그것을 모두 합할 체계적인 방법입니다.

51
00:04:37,780 --> 00:04:43,670
잠깐 멈춰서 첫 몇 항을 구하다 보면
패턴이 꽤나 제멋대로라는 걸 알 수 있는데

52
00:04:43,670 --> 00:04:50,190
이건 매우 흥미로운 수학적 방법이 힘을 발휘할
좋은 징조라고 할 수 있죠.

53
00:04:50,190 --> 00:04:56,380
실제로, 이제부터 확인하겠지만,
이 패턴은 소수의 분포에 기반하고 있습니다.

54
00:04:56,380 --> 00:05:00,960
예를 들어서 반지름이 √25인 원을 봅시다.

55
00:05:00,960 --> 00:05:12,780
5² + 0² = 25이기 때문에 (5, 0)을 지나고,
4² + 3² = 25이기 때문에 (4, 3)도 지나죠.

56
00:05:12,780 --> 00:05:20,200
마찬가지로 (3, 4)와 (0, 5)도 지나고…
여기서 우리가 실제로 하고 있는 일은

57
00:05:20,200 --> 00:05:28,360
a² + b² = 25라는 조건을 만족하는 정수쌍
(a, b)의 개수를 헤아리는 것입니다.

58
00:05:28,360 --> 00:05:36,240
원을 모두 둘러보면 총 열두 쌍이 있는 것 같군요.
다른 예로 반지름이 √11인 원을 봅시다.

59
00:05:36,240 --> 00:05:42,520
이 원은 아무 격자점도 지나지 않는데요,
이것은 우리가 제곱수의 합이 11인 두 정수를

60
00:05:42,520 --> 00:05:48,240
찾을 수 없다는 사실과 대응됩니다.

61
00:05:48,260 --> 00:05:56,100
다음으로, 수학에서 우리가 2차원 평면을 볼 때
이 평면을 모든 복소수의 집합으로 보는 것이

62
00:05:56,100 --> 00:06:00,060
놀라울 정도로 좋은 결과를 가져다주곤 합니다.

63
00:06:00,060 --> 00:06:05,200
이제부터 격자점을 정수 좌표쌍 (3, 4)로 보는 대신,

64
00:06:05,200 --> 00:06:09,800
하나의 복소수 3 + 4i로 보겠습니다.

65
00:06:09,800 --> 00:06:16,000
이렇게 하면 원래 좌표쌍의 제곱수의 합이었던 3² + 4²는

66
00:06:16,000 --> 00:06:20,780
이 숫자 3 + 4i에 3 - 4i를 곱하는 것으로
이해할 수 있습니다.

67
00:06:20,780 --> 00:06:25,820
이것은 '켤레 복소수'라고 하는데,
실수축에 대해 대칭인 점이라고 할 수 있고

68
00:06:25,820 --> 00:06:27,920
혹은 i를 -i로 바꿔 얻는 수입니다.

69
00:06:27,920 --> 00:06:32,980
복소수의 역사에 친숙하지 않다면
이상한 단계처럼 보일 수 있는데

70
00:06:32,980 --> 00:06:35,620
원점과의 거리를 켤레복소수와의
곱으로 나타낼 수 있는 것은

71
00:06:35,620 --> 00:06:40,380
예상밖으로 유용합니다. 이것은 우리의 질문을
인수분해 문제로 바꿀 것이고,

72
00:06:40,380 --> 00:06:44,750
그것이 궁극적으로 소수의 패턴이
모습을 드러내는 이유입니다.

73
00:06:44,750 --> 00:06:53,150
대수학적으로 켤레복소수의 이 관계는 자명합니다.
일단 3의 제곱을 얻고, 3 곱하기 4i는

74
00:06:53,150 --> 00:07:04,120
4i 곱하기 3과 상쇄되고, 마이너스 4i의 제곱이 남는데
i²은 -1이니까 플러스 4의 제곱이 됩니다.

75
00:07:04,120 --> 00:07:09,540
기하학적으로 이 관계를 보이는 것도 각별한데,
지금 설명하는 내용이 익숙하지 않다면

76
00:07:09,560 --> 00:07:15,640
왜 복소수의 곱셈이 이렇게 보이는지에 대해
설명한 다른 비디오를 마련해 두었습니다.

77
00:07:15,640 --> 00:07:24,160
3 + 4i라는 숫자는 크기가 5이고 수평선으로부터
일정한 각도로 벌어져 있습니다.

78
00:07:24,160 --> 00:07:33,000
3 - 4i를 곱하는 것은 정확히 그 각도만큼 반대 방향으로
회전시켜서 실수축 위에 놓은 다음

79
00:07:33,000 --> 00:07:35,860
같은 크기인 5의 배율만큼 늘려서

80
00:07:35,860 --> 00:07:43,560
25, 즉 크기의 제곱수 위치에 놓는 연산입니다.

81
00:07:43,560 --> 00:07:49,130
a와 b가 모두 정수일 때 a + bi 꼴의 모든 격자수의 집합에는

82
00:07:49,130 --> 00:07:53,880
'가우스 정수'라는 특별한 이름이 있습니다.
수학자 가우스 내지 배우 마틴 신의 이름에서 따 왔죠.

83
00:07:53,880 --> 00:07:58,780
기하학적으로, 우리는 여전히 같은 질문을 하고 있습니다.
원점에서의 거리가 주어졌을 때, 예를 들어

84
00:07:58,780 --> 00:08:05,320
√25라고 하죠. 얼마나 많은 격자점, 그러니까
가우스 정수가 존재하는가? 하는 질문입니다.

85
00:08:05,330 --> 00:08:11,160
좀 더 대수적으로 표현하자면,
얼마나 많은 가우스 정수가 켤레복소수를 곱했을 때

86
00:08:11,160 --> 00:08:16,530
25라는 값을 지니는 성질을 지니는가?
라는 질문이 됩니다.

87
00:08:16,530 --> 00:08:21,740
일견 불필요하게 복잡해 보입니다만,
이게 바로 원점으로부터 주어진 거리에

88
00:08:21,740 --> 00:08:26,590
얼마나 많은 격자점이 있는가 하는
규칙성 없어 보이는 패턴을 이해하는 열쇠입니다.

89
00:08:26,590 --> 00:08:33,880
왜 그런지를 보기 위해서 우리는 가우스 정수 체계에서
인수분해가 어떻게 일어나는지 이해할 필요가 있습니다.

90
00:08:33,880 --> 00:08:39,240
빠르게 복습해 봅시다. 보통 정수에서 
모든 숫자는 특정한 소수들의 모임으로

91
00:08:39,240 --> 00:08:48,930
소인수 분해되며 그 모임은 유일합니다.
예를 들면 2250은 2×3²×5³으로 인수 분해되며

92
00:08:48,930 --> 00:08:55,940
곱해서 2250이 되는 다른 소수들의 모임은
존재하지 않습니다.

93
00:08:55,940 --> 00:09:03,650
…소수들 중 일부를 음수로 바꾸지 않는다는
전제 하에 말이지요.

94
00:09:03,650 --> 00:09:10,450
다시 말해 정수에 있어서 인수 분해는
완벽히 유일하지 않으며, 거의 유일하고,

95
00:09:10,450 --> 00:09:17,850
인수들 중 일부분에 -1이 곱해질 때가
'거의' 부분이 의미하는 예외가 됩니다.

96
00:09:17,850 --> 00:09:23,900
같은 설명이 가우시안 정수에 있어서도
비슷하게 성립합니다.

97
00:09:23,900 --> 00:09:32,460
5와 같은 숫자는 더 작은 가우스 정수인
(2+i)(2-i)로 인수분해될 수 있습니다.

98
00:09:32,460 --> 00:09:36,410
이 가우스 정수 2+i는 더 작은 가우스 정수로

99
00:09:36,410 --> 00:09:40,860
인수분해될 수 없고, 그래서 우리는 이런 수를
가우스 소수라고 부릅니다.

100
00:09:40,860 --> 00:09:48,980
다시 한 번 말해서 이 인수분해는 거의 유일합니다.
하지만 가우스 정수의 경우, 우리는 인수에 -1을

101
00:09:48,980 --> 00:09:53,720
곱해서 다른 인수를 얻을 수 있는 것 뿐만 아니라,

102
00:09:53,720 --> 00:10:02,280
i를 곱해서도 다른 인수를 얻을 수 있고,
-i도 가능합니다.

103
00:10:02,280 --> 00:10:08,380
이것은 5를 가우스 정수에서 인수분해하는
다른 방식을 제시합니다.

104
00:10:08,380 --> 00:10:19,900
하지만 -1, i, -i를 곱하는 것을 제외하고는
가우스 정수에서의 소인수 분해는 유일합니다.

105
00:10:19,900 --> 00:10:25,660
만약 우리가 정수에서의 소수가
가우스 정수 안에서 어떻게 인수분해되는지

106
00:10:25,660 --> 00:10:31,140
이해한다면, 모든 정수가 가우스 정수 안에서 어떻게
인수분해되는지 이해할 수 있습니다.

107
00:10:31,140 --> 00:10:38,980
그래서 여기서 중요하고 놀라운 사실을 소개합니다.
4의 배수에 1을 더한 형태의 소수, 예를 들어

108
00:10:38,990 --> 00:10:48,700
5, 13, 17같은 소수는 언제나 서로 다른
두 가우스 소수로 인수분해됩니다.

109
00:10:48,700 --> 00:10:52,990
이 사실은 그런 소수들의 제곱근 길이의
반지름을 갖는 원들이

110
00:10:52,990 --> 00:10:59,460
언제나 격자점과 만나는 사실과 대응됩니다.
사실 그런 원은 언제나 여덟 개의 격자점과 만납니다.

111
00:10:59,460 --> 00:11:07,460
곧 확인하겠지만요.
4의 배수 더하기 3 형태의 소수들, 예를 들어

112
00:11:07,460 --> 00:11:14,540
3, 7, 11과 같은 소수는 가우스 정수로
더 이상 인수분해될 수 없습니다.

113
00:11:14,540 --> 00:11:22,020
그들은 소수일 뿐 아니라, 가우스 소수이기도 합니다.
i가 추가된 수 체계에서도 여전히 말이지요.

114
00:11:22,020 --> 00:11:26,940
이 사실은 4n+3 꼴 소수의 제곱근 길이의
반지름을 갖는 원이

115
00:11:26,940 --> 00:11:33,280
어떤 격자점과도 만나지 않는다는 사실과 대응됩니다.

116
00:11:33,280 --> 00:11:39,600
이 패턴이 우리가 궁극적으로 활용하고자 하는
소수의 규칙성입니다.

117
00:11:39,600 --> 00:11:43,140
왜 이게 성립하는지는 나중에 만들 비디오에서
설명드릴 기회가 있을 것 같습니다.

118
00:11:43,140 --> 00:11:50,900
왜 소수를 4로 나누었을 때의 나머지가
그 소수의 가우스 정수 인수분해와 관련이 있고

119
00:11:50,900 --> 00:11:59,300
따라서 그것이 두 제곱수의 합으로 표현될 수 있는지에 대한
설명 말이죠. 하지만 지금은 일단 참이라고 합시다.

120
00:11:59,300 --> 00:12:07,900
소수 2는 조금 특별한데요,
왜냐면 2는 (1+i)(1-i)로 인수분해되지만

121
00:12:07,900 --> 00:12:12,240
이 두 가우스 소수는
서로에 대해 90도 회전이기 때문에

122
00:12:12,240 --> 00:12:18,060
i를 곱함으로서 서로를 얻을 수 있습니다.
그리고 이 사실 때문에

123
00:12:18,060 --> 00:12:22,580
우리는 나중에 2를 조금 다르게
취급하게 될 것입니다.

124
00:12:22,580 --> 00:12:26,640
나중에 다시 나올테니
기억해 두세요.

125
00:12:26,640 --> 00:12:32,200
다시 한 번 강조하지만, 우리의 목표는
원점에서 주어진 거리만큼 떨어진 거리에

126
00:12:32,200 --> 00:12:36,100
얼마나 많은 격자점이 있는지 세는 것입니다.
이것을 모든 정수 제곱근 거리에 대해 체계적으로

127
00:12:36,100 --> 00:12:40,720
수행하면 π에 대한 공식을 얻을 수 있죠.
그리고 정해진 반지름에 대해 격자점의 수를 세는 것은,

128
00:12:40,730 --> 00:12:47,450
예를 들어 √25에 대해 세는 것은,
켤레복소수를 곱했을 때 25가 되는

129
00:12:47,450 --> 00:12:54,040
성질를 만족하는 가우스 정수의 개수를
세는 것과 같습니다.

130
00:12:54,040 --> 00:12:59,130
이제 그런 성질을 갖는 모든 가우스 정수를
세는 법을 보여드리겠습니다.

131
00:12:59,130 --> 00:13:07,790
먼저 25를 정수에서 인수분해해서 5의 제곱을 얻습니다.
그런데 5는 (2+i)(2-i)로 인수분해되므로

132
00:13:07,790 --> 00:13:16,830
25는 아래와 같은 네 가우스 소수로 인수분해됩니다.
다음으로 이 정수들을 두 줄로 정리하되,

133
00:13:16,830 --> 00:13:20,360
켤레복소수끼리 마주보도록 정렬합니다.

134
00:13:20,360 --> 00:13:27,670
이제 각 줄끼리 곱하면,
두 개의 가우스 정수를 얻을 수 있습니다.

135
00:13:27,670 --> 00:13:32,279
오른 쪽에 있는 모든 항이 왼쪽에 있는 항들의
켤레복소수였기 때문에, 두 값은

136
00:13:32,279 --> 00:13:37,540
하나의 켤레복소수 쌍이 될 것이며
그 둘을 곱한 값은 25입니다.

137
00:13:37,540 --> 00:13:42,420
임의적으로, 왼쪽 줄에서 곱한 값을 우리 방법의

138
00:13:42,420 --> 00:13:47,690
결과값이라고 합시다. 이 결과값을
다르게 만들기 위해서 소수를 세 가지 방법으로

139
00:13:47,690 --> 00:13:55,120
나눌 수 있다는 것을 알 수 있습니다.
우선 왼쪽에 2+i가 둘 다 오는 경우에는

140
00:13:55,120 --> 00:14:01,830
결과값이 3+4i가 되고,
2+i가 왼쪽에 하나만 있는 경우에는

141
00:14:01,830 --> 00:14:08,680
결과값이 5가 됩니다. 어쩌면 2+i가 둘 다
오른쪽 줄에 있을 수도 있겠죠.

142
00:14:08,680 --> 00:14:15,840
그 경우에 우리는 3-4i를 얻습니다.

143
00:14:15,840 --> 00:14:24,440
이 세 결과값은 모두 반지름 √25인 원 위에
존재하는 격자점에 대응합니다.

144
00:14:24,440 --> 00:14:29,800
그런데 왜 이 방법이
존재하는 모든 격자점을 찾지 못할까요?

145
00:14:29,800 --> 00:14:33,340
봅시다. 제가 가우스 소수
인수분해에 대해 이야기할 때

146
00:14:33,340 --> 00:14:38,740
1, i, -1, -i를 곱해서 다른 형태의 인수분해를
얻을 수 있다고 한 것 기억나시나요?

147
00:14:38,740 --> 00:14:48,740
만약 25의 다른 인수분해를 찾는다면,
예를 들어 하나의 5를 (-1+2i)(-1-2i)로 인수분해하고

148
00:14:48,740 --> 00:14:55,700
같은 방법을 진행하면
다른 결과값을 얻을 것입니다.

149
00:14:55,700 --> 00:15:03,440
하지만 그렇게 달라지는 결과는
'결과값'에 i, -1, -i를 곱하는 것과 마찬가지이므로

150
00:15:03,440 --> 00:15:08,560
우리 방법의 마지막 단계로
네 개 중에 한 가지를 선택합시다.

151
00:15:08,560 --> 00:15:15,540
왼쪽 줄에서 나온 결과값에 1, i, -1, -i 중 하나를 곱하는 겁니다.

152
00:15:15,540 --> 00:15:21,740
각 곱은 0도, 90도, 180도, 270도 회전에 대응하고

153
00:15:21,740 --> 00:15:26,080
12개의 격자점을 모두 찾을 수 있습니다.

154
00:15:26,080 --> 00:15:30,420
켤레복소수를 곱해서 25가 되는 격자점 말이죠.

155
00:15:30,420 --> 00:15:33,570
이 과정은 조금 복잡하므로
제 생각에는

156
00:15:33,570 --> 00:15:36,320
다른 예제를 보는 게
도움이 될 것 같습니다.

157
00:15:36,339 --> 00:15:44,240
125에 대해서 방법을 적용해 봅시다.
125는 5의 3승이고, 켤레복소 쌍을 나누는 데

158
00:15:44,240 --> 00:15:57,310
4가지 방법이 있습니다. 2+i가 왼쪽 줄에
0개, 1개, 2개, 아니면 3개 모두

159
00:15:57,310 --> 00:16:03,060
있는 경우죠.
이 네 선택지는 마지막 단계로

160
00:16:03,060 --> 00:16:11,100
1, i, -1, -i로 곱해질 수 있기 때문에
원점과의 거리가 √125인 격자점은

161
00:16:11,100 --> 00:16:19,110
총 16개가 있다고 계산할 수 있습니다.

162
00:16:19,110 --> 00:16:25,020
그리고 실제로 원을 그려서 확인해보면,
정확히 16개의 격자점을 지나는 것을

163
00:16:25,020 --> 00:16:26,940
알 수 있습니다.

164
00:16:26,940 --> 00:16:33,880
그런데 3처럼 두 켤레 가우스 소수로 인수분해되지 않는
인수가 들어가 있으면 어떻게 될까요?

165
00:16:33,880 --> 00:16:37,080
어떻게 되냐면,
우리가 쓴 방법 전체가 망가집니다.

166
00:16:37,080 --> 00:16:41,740
정수 소수를 두 줄로 나누는 과정에서,
3과 같은 소수는 나눌 방법이 없습니다.

167
00:16:41,740 --> 00:16:47,910
3을 어디에 두든 두 줄은 균형이 맞지 않게 되며
그 결과로

168
00:16:47,910 --> 00:16:54,120
두 줄을 곱한 결과는 어떤 경우에도
켤레복소 쌍이 될 수 없습니다.

169
00:16:54,120 --> 00:17:01,660
그러므로 3 곱하기 5의 3승, 즉 375같은 숫자는
아무 격자점도 만나지 않습니다.

170
00:17:01,660 --> 00:17:08,100
켤레복소수와 곱했을 때 375가 되는
가우스 정수는 존재하지 않는 거죠.

171
00:17:08,100 --> 00:17:11,640
하지만 3을 하나 더 곱하면,

172
00:17:11,640 --> 00:17:18,080
이젠 선택지가 있습니다. 3 하나를 왼쪽 줄에,
하나를 오른쪽 줄에 배치하면 됩니다.

173
00:17:18,090 --> 00:17:22,790
3은 자기 자신의 켤레복소수이기 때문에
이렇게 하면 두 줄의 균형이 맞고

174
00:17:22,790 --> 00:17:29,690
두 줄을 각각 곱한 결과는 서로의
켤레복소수가 됩니다.

175
00:17:29,690 --> 00:17:34,260
하지만, 이게 새로운 선택지를 가져다주지는 않죠.
여전히 5의 인수들을 배치하는 방법의 가지수는

176
00:17:34,260 --> 00:17:41,760
4가지이며, 마지막 1, i, -1, -i로 곱하는
4가지 경우의 수를 생각하면

177
00:17:41,760 --> 00:17:45,720
√125인 원의 경우와 마찬가지로

178
00:17:45,720 --> 00:17:51,080
이 원도 정확히 16개의 격자점과 만납니다.

179
00:17:51,080 --> 00:17:54,980
정리해 봅시다.
반지름이 N의 제곱근인 원 위에

180
00:17:54,980 --> 00:18:01,190
얼마나 많은 격자점이 있는지를 세려면,
그 첫 단계는 N을 인수분해하는 것입니다.

181
00:18:01,190 --> 00:18:09,010
5, 13, 17처럼 가우스 소수로 인수분해되는 소수 인수들은

182
00:18:09,010 --> 00:18:17,040
그 인수의 지수에 1을 더한 숫자만큼
선택지가 존재합니다.

183
00:18:17,040 --> 00:18:21,320
한편, 3, 7, 11처럼 이미 가우스 소수이고

184
00:18:21,330 --> 00:18:26,410
더 이상 인수분해될 수 없는 소수들은
만약 지수가 짝수일 경우에는

185
00:18:26,410 --> 00:18:30,900
단 한 가지 선택지만이 존재합니다.
만약 지수가 홀수라면

186
00:18:30,900 --> 00:18:34,260
우리는 망했습니다. 선택지가 없습니다.

187
00:18:34,260 --> 00:18:40,080
그리고 어떤 경우에도, 마지막에는
네 가지 선택지가 있습니다.

188
00:18:40,080 --> 00:18:45,370
잠깐 다른 얘기를 하자면, 지금까지 말한 부분이
이 영상에서 제일 복잡한 부분이라고 생각합니다.

189
00:18:45,370 --> 00:18:49,880
저는 이게 격자점을 세는 옳은 방법이라는 것을
이해하기 위해 몇 번이고 다시 확인해야 했습니다.

190
00:18:49,880 --> 00:18:54,720
그러니까 영상을 멈추고 몇 번 손으로 써 보는 걸
창피하다고 생각하지 마세요.

191
00:18:54,720 --> 00:18:58,500
마지막으로 다뤄야 하는 건 인수 2를

192
00:18:58,500 --> 00:19:01,060
어떻게 다뤄야 하는가입니다.

193
00:19:01,060 --> 00:19:08,160
만약 우리가 가진 숫자가 짝수면,
2는 (1+i)(1-i)로 인수분해되기 때문에

194
00:19:08,160 --> 00:19:16,020
그 두 인수를 각 줄에 배치하면 됩니다.
언뜻 보면 두 인수를 왼쪽에 배치하냐

195
00:19:16,020 --> 00:19:21,220
오른쪽에 배치하냐로
선택지가 두 배가 된 것 같습니다.

196
00:19:21,220 --> 00:19:27,100
하지만 이 두 가우스 소수는 i를 곱함으로서
서로를 얻을 수 있는 수이기 때문에,

197
00:19:27,100 --> 00:19:36,000
이 두 소수의 위치를 서로 바꾸면
'결과값'에 i나 -i를 곱한 것과 같고,

198
00:19:36,000 --> 00:19:39,480
우리 방법의 마지막 단계와
중복되게 됩니다.

199
00:19:39,480 --> 00:19:46,400
마지막 단계에서는 원래 1, i, -1, -i로
곱해왔으니까요.

200
00:19:46,400 --> 00:19:50,660
무슨 말이냐면, 인수 2, 혹은 2의 제곱수들은

201
00:19:50,660 --> 00:19:56,440
격자점 갯수에 아무 영향을 주지 않는다는 겁니다.
줄이지도, 늘리지도 않습니다.

202
00:19:56,440 --> 00:20:01,140
예를 들어서 반지름이 √5인 원은
격자점 8개를 지납니다.

203
00:20:01,140 --> 00:20:06,080
그 반지름을 √10으로 늘리면,
여전히 격자점 8개를 지납니다.

204
00:20:06,080 --> 00:20:10,760
√20도, √40도 마찬가지입니다.

205
00:20:10,760 --> 00:20:15,420
2의 제곱수는 그냥
아무런 영향을 주지 않습니다.

206
00:20:15,420 --> 00:20:19,020
이제부터 일어날 일들은
수론이 대활약하는 부분입니다.

207
00:20:19,020 --> 00:20:23,410
우리는 반지름이 √N인 원 위에 격자점이
몇 개 존재하는지를 계산하는

208
00:20:23,410 --> 00:20:28,520
복잡한 방법을 가지고 있고,
이 방법은 N의 소인수분해에 의존합니다.

209
00:20:28,520 --> 00:20:35,000
이 복잡한 방법을 조금 단순하게 만들기 위해,
우리는 소수의 규칙성을 이용할 것입니다.

210
00:20:35,000 --> 00:20:40,450
4n+1 꼴의 소수는 서로 다른 두 가우스 소수로
인수분해 될 수 있으며

211
00:20:40,450 --> 00:20:43,720
4n+3 꼴의 소수는 그렇지 않다는 성질
말이죠.

212
00:20:43,720 --> 00:20:46,950
그러기 위해서 간단한 함수를 하나
도입하려 합니다.

213
00:20:46,950 --> 00:20:49,600
그리스 문자 카이(χ)를 쓴 카이 함수입니다.

214
00:20:49,600 --> 00:20:55,660
4의 배수 더하기 1 형태의 입력값에 대해
카이의 함수값은 1이 됩니다.

215
00:20:55,660 --> 00:21:01,760
4의 배수 더하기 3 형태의 입력값에 대해
카이의 함수값은 -1이 됩니다.

216
00:21:01,760 --> 00:21:09,560
그리고 짝수를 입력값으로 받으면
함수값은 0이 됩니다.

217
00:21:09,560 --> 00:21:12,760
그러므로 카이 함수에 자연수를
순서대로 집어넣으면

218
00:21:12,780 --> 00:21:20,840
1, 0, -1, 0이 반복되는 깔끔한
순환 패턴이 됩니다.

219
00:21:20,840 --> 00:21:27,440
카이 함수는 '곱셈적' 함수라는
특별한 성질을 지니고 있습니다.

220
00:21:27,440 --> 00:21:33,720
만약 두 값에 대해 함수값을 계산하고 곱하면,
예를 들어 χ(3) × χ(5)라고 하면,

221
00:21:33,720 --> 00:21:40,120
그 값은 두 값을 곱하는 걸 먼저 한 다음
함수값을 계산한 것과 같습니다. χ(15) 말이죠.

222
00:21:40,130 --> 00:21:45,890
마찬가지로 χ(5) × χ(5) = χ(25)이고,

223
00:21:45,890 --> 00:21:53,100
이 성질은 어떤 두 수에 대해서도 성립합니다.
직접 한 번 확인해 보세요.

224
00:21:53,100 --> 00:21:58,440
다시 우리의 핵심 질문인 격자점을
인수분해를 통해 세는 방법으로 돌아와서

225
00:21:58,440 --> 00:22:03,300
선택지가 몇 개나 있는지를
카이 함수를 써서 적어내려가 보겠습니다.

226
00:22:03,300 --> 00:22:09,900
일견 더 복잡해지는 것 같지만,
모든 소수 인수를 동등히 취급하는 것이 도움이 됩니다.

227
00:22:09,900 --> 00:22:13,160
모든 소수 제곱수에 대해서 다음과 같이 표현합니다.

228
00:22:13,160 --> 00:22:19,500
5³을 예로 들면,
χ(1) + χ(5) + χ(5²) + χ(5³)라고 쓰는 겁니다.

229
00:22:19,500 --> 00:22:27,180
1부터 시작해서 인수분해에 등장하는 제곱수에
해당되는 항까지 전부 더하는 거죠.

230
00:22:27,180 --> 00:22:30,820
5는 4n+1꼴의 정수이므로,

231
00:22:30,820 --> 00:22:36,760
모든 항의 값이 1입니다.
이 사실은 5³을 두 가우스 정수의 곱으로

232
00:22:36,760 --> 00:22:46,440
표현하는 네 가지 방법이 있다는 사실과
대응합니다.

233
00:22:46,440 --> 00:22:54,820
3⁴같은 인수에 대해서 이 항은
χ(1) + χ(3) + χ(3²)… 같은 꼴로 나타나는데

234
00:22:54,820 --> 00:23:04,340
χ(3)은 -1이기 때문에
각 항은 1, -1, 1, -1처럼 진동하고

235
00:23:04,340 --> 00:23:09,740
이번 경우의 4처럼 승수가 짝수인 경우,
합은 1이 됩니다.

236
00:23:09,740 --> 00:23:16,080
나눌 수 없는 인수인 3이 짝수개일 때
단 하나의 방법이 있는 것을 의미합니다.

237
00:23:16,080 --> 00:23:24,600
하지만 홀수 승수일 때 합은 0이 되며
선택지가 없는 것을 의미합니다.

238
00:23:24,600 --> 00:23:31,220
2의 제곱수의 경우에 이 항은
1 + 0 + 0 + … 처럼 보이며,

239
00:23:31,220 --> 00:23:34,080
카이 함수가 짝수에서는 0이기 때문이죠.

240
00:23:34,080 --> 00:23:41,500
이것은 2의 인수가 선택지 개수에
아무런 영향을 주지 않는 것을 의미합니다.

241
00:23:41,500 --> 00:23:48,940
그리고 여기서도 마지막에 1, i, -1, -i를 곱하는 걸 의미하는
4를 맨 앞에 곱합니다.

242
00:23:48,940 --> 00:23:52,800
이제 정상이 눈앞입니다.
대부분의 준비물이 마련되었으니,

243
00:23:52,809 --> 00:23:57,610
잠깐 멈춰서 다시 들여다보고
여기까지 잘 이해했는지 되돌아봅시다.

244
00:23:57,610 --> 00:24:05,240
45를 예로 들어봅시다. 3² × 5로 인수분해되니까,
방금 쓴 격자점 개수 공식으로 표현하면

245
00:24:05,240 --> 00:24:17,060
4 × (χ(1) + χ(3) + χ(3²)) × (χ(1) + χ(5))가 되며,
이것은 4 곱하기 '3으로 할 수 있는 1가지 방법' 곱하기

246
00:24:17,060 --> 00:24:22,380
'5로 할 수 있는 2가지 방법'이라는
의미입니다.

247
00:24:22,380 --> 00:24:26,780
이 식을 전개하면 정말 복잡해 보입니다.
왜냐면 이것은

248
00:24:26,790 --> 00:24:31,420
이 소수 인수들의 모든 가능한 조합을
따져보는 것이기 때문이죠.

249
00:24:31,420 --> 00:24:39,380
하지만, 카이 함수는 곱셈적 함수이기 때문에
이 조합 하나하나가 45의 약수가 됩니다.

250
00:24:39,380 --> 00:24:51,300
이 경우 결국 4 × (χ(1) + χ(3) + χ(5) + χ(9) + χ(15) + χ(45))
꼴이 되지요.

251
00:24:51,300 --> 00:24:59,040
눈치채셨나요? 여기서 45의 약수는
모두, 그리고 딱 한 번 등장합니다.

252
00:24:59,040 --> 00:25:03,260
굳이 45에서만이 아니라
모든 숫자에서 성립하는 성질이죠.

253
00:25:03,260 --> 00:25:07,180
이건 제게 꽤나 흥미롭고
전혀 예상치 못했던 일입니다.

254
00:25:07,180 --> 00:25:12,760
원점에서 √N 거리에 있는 모든 격자점의 개수를
헤아리는 질문이

255
00:25:12,760 --> 00:25:20,040
N의 모든 약수에 대해서 이 간단한 함수를
더하는 질문으로 바뀌었습니다.

256
00:25:20,040 --> 00:25:23,060
우리가 왜 이걸 하고 있었는지 떠올려 봅시다.

257
00:25:23,060 --> 00:25:29,680
반지름 R인 큰 원 안에 있는 격자점의 개수는
대략 πR²개일 것입니다.

258
00:25:29,680 --> 00:25:32,500
다른 한편, 같은 격자점의 개수를
다른 방식으로 셀 수 있는데,

259
00:25:32,500 --> 00:25:41,100
0부터 R²까지의 모든 숫자 N에 대해
원점으로부터 거리가 √N인 격자점의 개수를 세는 겁니다.

260
00:25:41,100 --> 00:25:44,680
우리는 원점을 무시할 건데,

261
00:25:44,680 --> 00:25:48,340
다른 숫자들의 패턴을 따르지 않기 때문이고

262
00:25:48,340 --> 00:25:52,120
점 하나는 R이 무한히 커질 때
아무 영향을 주지 않기 때문이죠.

263
00:25:52,120 --> 00:25:58,120
가우스 정수, 인수분해, 카이 함수 등 우리가 다룬
모든 것을 정리하면

264
00:25:58,120 --> 00:26:04,700
각 N에 대한 격자점의 개수는 N의 모든 약수에
카이 함수를 적용해 더한 다음에

265
00:26:04,700 --> 00:26:10,100
4를 곱한 것과 같습니다.
4는 일단 구석에 치워두고,

266
00:26:10,100 --> 00:26:12,800
나중에 다시 가져와야 한다는 것만
기억해 둡시다.

267
00:26:12,800 --> 00:26:18,720
처음 볼 때, 각 행을 더하는 것은
매우 규칙성이 없어보입니다.

268
00:26:18,720 --> 00:26:26,440
인수가 많은 숫자는 약수도 많고,
소수는 약수가 두 개밖에 없고,

269
00:26:26,440 --> 00:26:34,220
어쩌면 이걸로 뭘 하기 위해서는 소수의 완벽한 분포를
알아야 한다고 생각하실지도 모릅니다.

270
00:26:34,230 --> 00:26:40,100
하지만 이 항들을 행이 아니라 열로 정렬하면
퍼즐 조각들이 맞아떨어지기 시작합니다.

271
00:26:40,100 --> 00:26:46,450
1을 약수로 갖는 숫자가 1과 R² 사이에 얼마나 있을까요?
전부죠. 즉 합계에는

272
00:26:46,450 --> 00:26:53,740
R² × χ(1)이 포함됩니다.
2를 약수로 갖는 숫자는 어떨까요? 대략

273
00:26:53,740 --> 00:26:59,260
절반이고, 그것은 합계에
(R²/2) × χ(2)가 들어가는 이유입니다.

274
00:26:59,260 --> 00:27:06,020
이 행들 중 삼분의 일은 χ(3)을 가지고 있고
그건 (R²/3) × χ(3)이 됩니다.

275
00:27:06,020 --> 00:27:10,960
이것들은 근사치라는 걸 염두에 두시기 바랍니다.
R²이 2, 3으로 항상 나누어 떨어지지는 않으니까요.

276
00:27:10,960 --> 00:27:15,320
하지만 R이 무한대로 갈수록
이 근사는 정확해집니다.

277
00:27:15,320 --> 00:27:23,380
이것을 반복하면 격자점의 개수를 표현하는
꽤 정돈된 공식을 얻을 수 있습니다.

278
00:27:23,380 --> 00:27:28,840
R²을 앞으로 묶어내고
곱해야 했던 4를 다시 가져오면,

279
00:27:28,840 --> 00:27:33,080
큰 원 안에 존재하는 모든 격자점의 개수가 근사적으로

280
00:27:33,080 --> 00:27:41,900
4 곱하기 R² 곱하기 이 항들의 합계라는 걸 알 수 있습니다.
카이 함수는 짝수에서 0이고,

281
00:27:41,900 --> 00:27:52,960
홀수에서 1과 -1을 반복하기 때문에,
이 합계는 1 - 1/3 + 1/5 + 1/7… 꼴이 됩니다.

282
00:27:52,960 --> 00:28:00,060
그리고 이게 우리가 원하던 결과입니다!
커다란 원 안에 있는 격자점들의 개수의 합계에 대한

283
00:28:00,060 --> 00:28:08,200
표현법인데, 우리는 이 수치가 대략 πR²임을 알고
R이 클수록 이 두 근사치가 가까움을 알기에

284
00:28:08,200 --> 00:28:14,160
근사 오류는 우리가 원하는 만큼
작게 만들 수 있습니다.

285
00:28:14,160 --> 00:28:21,160
R²으로 나누고 나면,
이 무한급수가 π로 수렴함을 알 수 있죠.

286
00:28:21,160 --> 00:28:29,340
한가지 정말 멋진 이야기를 짚고 넘어가죠.
이 급수를 이렇게 쉽게 설명할 수 있는 이유는

287
00:28:29,340 --> 00:28:37,440
가우스 정수 안에서 소수들이 어떻게 인수분해되는지를
알 수 있게 만드는 규칙성 때문입니다.

288
00:28:37,440 --> 00:28:40,820
더 깊이 알고 싶은 분들을 위해 설명하자면
수론에는 크게 두 줄기가 있습니다.

289
00:28:40,820 --> 00:28:43,860
대수적 수론과 해석적 수론입니다.

290
00:28:43,880 --> 00:28:48,220
정말 대략적으로 말하자면,
대수적 수론은 새로운 수 체계를 다루는데

291
00:28:48,220 --> 00:28:52,240
우리가 봐 온 가우스 정수가 그 예시입니다.

292
00:28:52,240 --> 00:28:58,220
해석적 수론은 리만 제타 함수나
그와 관련된 L 함수같은 것을 다루는데

293
00:28:58,220 --> 00:29:03,000
여기에는 우리가 다룬 카이 함수처럼
곱셈적인 함수가 관련되어 있습니다.

294
00:29:03,000 --> 00:29:07,760
우리가 오늘 살펴본 것은 두 분야에 공통되는 부분의
아주 작은 일부분입니다.

295
00:29:07,760 --> 00:29:13,080
두 분야 모두 미해결 문제와 현재진행형인 연구로 가득찬
꽤나 할 일이 넘쳐나는 분야입니다.

296
00:29:13,080 --> 00:29:16,560
그러니까 이것들을 이해하는데 시간이 걸릴 것 같고,

297
00:29:16,560 --> 00:29:19,760
발견되고 이해되어야 할 패턴이
더 있는 것 같다면,

298
00:29:19,760 --> 00:29:23,300
그것은 실제로 그렇기 때문입니다.

299
00:29:25,860 --> 00:29:31,320
자, 여기까지 함께해주신 여러분들은 자유시간을
깊이있는 수학 영상을 보는데 쓰는 분들이고,

300
00:29:31,320 --> 00:29:37,200
여러분들중 일부분은 소프트웨어 엔지니어거나
곧 그렇게 되실 분들일 걸 전 압니다.

301
00:29:37,200 --> 00:29:40,620
그러니까 마치기 전에
리쿠르팅을 조금 할까 합니다.

302
00:29:40,620 --> 00:29:45,780
이 비디오는 remix의 후원으로 제작되었으며,
remix는 대중교통 계획을 위한 플랫폼입니다.

303
00:29:45,780 --> 00:29:52,080
remix는 도시가 가장 효율적이고 경제적인 방법으로
공동체와 주민들에게 서비스를 제공할 수 있도록 돕습니다.

304
00:29:52,080 --> 00:29:54,400
그리고 조금 생각해 보면,

305
00:29:54,400 --> 00:29:58,500
이것을 잘 하려면 매우 흥미로운 최적화 문제를 풀어야 하며,

306
00:29:58,500 --> 00:30:02,060
실제로 remix에서는
수학 지향적인 프로그래머들을 찾고 있고

307
00:30:02,060 --> 00:30:06,100
다양한 최적화 기법들을 사용해 문제들을
풀어나가길 기대합니다.

308
00:30:06,100 --> 00:30:09,320
remix의 엔지니어들이 제게 한 말을 빌자면

309
00:30:09,320 --> 00:30:12,669
"우주를 속여넘겨서 훌륭한 스케쥴대로 움직이도록"
말입니다.

310
00:30:12,669 --> 00:30:15,620
만약 뛰어난 사람들과 일하며
흥미로운 문제들을 푸는 것에 관심이 있다면,

311
00:30:15,620 --> 00:30:20,860
그들의 홈페이지와 채용 페이지를 참고하세요.
화면과 설명에 링크를 걸어 두었습니다.

