1
00:00:04,060 --> 00:00:07,080
这是我很高兴制作一段时间的视频。

2
00:00:07,420 --> 00:00:10,390
这里的故事将质数、复数 和圆周率

3
00:00:10,390 --> 00:00:13,360
编织成一个非常令人愉快的三重奏。

4
00:00:14,100 --> 00:00:18,476
在现代数学中，尤 其是与黎曼 zeta 函数调情的数学中，

5
00:00:18,476 --> 00:00:21,193
这三个看似无关的 物体经常同时出现，

6
00:00:21,193 --> 00:00:24,061
我想让你看一下发生这种情况的一个例子，

7
00:00:24,061 --> 00:00:27,079
这 是少数几个不发生这种情况的例子之一。

8
00:00:27,079 --> 00:00:28,740
 要求太重的技术背景。

9
00:00:29,260 --> 00:00:33,940
这并不是说这很容易，事实上这可能是我做过的最复杂的 

10
00:00:33,940 --> 00:00:36,820
视频之一，但最终的成果是值得的。

11
00:00:36,980 --> 00:00:41,720
我们最终得到的是 p i 的公式，即某个交替无穷和。

12
00:00:42,520 --> 00:00:47,100
这个公式实际上写在我写这 篇文章时我正在喝咖啡的杯子上。

13
00:00:47,380 --> 00:00:50,940
一个有趣但几乎可以肯定 是杜撰的故事是，

14
00:00:50,940 --> 00:00:56,280
这个公式的美妙之处激励莱布尼茨放弃律师 职业，转而追求数学。

15
00:00:57,160 --> 00:00:59,844
每当你看到圆周率出现在数学中时，

16
00:00:59,844 --> 00:01:04,040
总会有一 个圆圈隐藏在某个地方，有时非常偷偷摸摸。

17
00:01:04,459 --> 00:01:07,793
因此，这里的目标不仅 仅是发现这个总和，

18
00:01:07,793 --> 00:01:10,460
而是真正了解隐藏在其背后的圆圈。

19
00:01:11,320 --> 00:01:15,110
你看，还有 另一种方法可以证明你和我将花费一些有

20
00:01:15,110 --> 00:01:18,900
意义的时间来获 得的相同结果，但只需几行微积分。

21
00:01:19,820 --> 00:01:24,439
这是让你思考的证据 之一，好吧，我想这是真的，

22
00:01:24,439 --> 00:01:29,260
但并没有真正理解为什么， 或者隐藏的圆圈在哪里。

23
00:01:29,800 --> 00:01:34,055
不过，在你我将要走的道路上 ，你会看到这个和

24
00:01:34,055 --> 00:01:39,471
及其隐藏的圆圈背后的基本事实是当 你将素数放入复数中时，

25
00:01:39,471 --> 00:01:42,760
素数的行为方式存在一定的 规律性。

26
00:01:43,720 --> 00:01:47,609
为了开始这个故事，想象一下你自己除了一支铅笔、一张纸之外 

27
00:01:47,609 --> 00:01:50,560
什么都没有，并且渴望找到计算 pi 的公式。

28
00:01:51,600 --> 00:01:56,449
有无数种方法可以实 现这一点，但作为情节线的大致轮廓，

29
00:01:56,449 --> 00:02:00,940
您将首先询问平面 上有多少个格点位于一个大圆圈内。

30
00:02:01,820 --> 00:02:07,420
这将导致我们询问 如何将数字表示为两个平方和，

31
00:02:07,420 --> 00:02:11,560
进而导致我们在复平面 内分解整数。

32
00:02:12,240 --> 00:02:16,975
从那里我们将引入一个名为 chi 的特 殊函数，

33
00:02:16,975 --> 00:02:20,132
它将为我们提供一个 pi 公式，

34
00:02:20,132 --> 00:02:25,064
乍一看似乎涉 及一个依赖于素数分布的疯狂复杂模式，

35
00:02:25,064 --> 00:02:29,800
但视角的轻微转变 将极大地简化它并揭示终极金块。

36
00:02:30,280 --> 00:02:34,420
虽然很多，但是好的数学需 要时间，我们会一步一步来。

37
00:02:35,420 --> 00:02:39,959
当我说格子点时，我的意思是平面 上的点AB，

38
00:02:39,959 --> 00:02:43,880
其中A和B都是整数，即网格线交叉的点。

39
00:02:43,880 --> 00:02:49,276
如果您画一个以原点为中心的圆，假设半径为 10，

40
00:02:49,276 --> 00:02:52,200
 您猜该圆内有多少个格点？

41
00:02:53,520 --> 00:02:56,669
嗯，每个面积单位都有一个格点 ，

42
00:02:56,669 --> 00:03:01,196
因此答案应该大约等于圆的面积 pi r 平方，

43
00:03:01,196 --> 00:03:04,740
在本例中为 pi 乘以 10 平方。

44
00:03:05,540 --> 00:03:09,302
如果它是一个非常大的圆，例如半 径 100 万，

45
00:03:09,302 --> 00:03:13,065
您会期望这是一个更准确的估计，从某种 意义上说，

46
00:03:13,065 --> 00:03:16,672
估计 pi r 平方与实际格点计数之间的百分 

47
00:03:16,672 --> 00:03:18,240
比误差应该变得更小。

48
00:03:19,200 --> 00:03:23,157
我们要做的是找到第二种方法来回答 同一个问题，

49
00:03:23,157 --> 00:03:28,318
即圆内有多少个格点，因为这可以导致另 一种表达圆面积的方法，

50
00:03:28,318 --> 00:03:31,760
从而产生另一种表达圆面积的方 法圆周率。

51
00:03:33,160 --> 00:03:35,864
所以你玩的时候，你想知道，也许，

52
00:03:35,864 --> 00:03:39,244
特 别是如果你刚刚观看了某个微积分视频，

53
00:03:39,244 --> 00:03:43,300
你可能 会尝试查看晶格点可能位于的每个可能的环。

54
00:03:43,300 --> 00:03:47,459
现在如果你想一想，对于这些格点AB中的每一个，

55
00:03:47,459 --> 00:03:51,980
它到原点的 距离都是a的平方加上b的平方的平方根。

56
00:03:52,700 --> 00:03:58,497
由于a和b都是整 数，a的平方加上b的平方也是某个整数，

57
00:03:58,497 --> 00:04:03,260
所以你只需 要考虑半径是某个整数的平方根的环。

58
00:04:04,160 --> 00:04:07,360
半径 0 只给 出单个原点。

59
00:04:08,220 --> 00:04:11,640
如果观察半径 1，就会碰到 4 个晶格点。

60
00:04:12,440 --> 00:04:16,920
半径为 2 的平方根，同样命中 4 个格点。

61
00:04:16,920 --> 00:04:19,180
半径 3 的平方根实际上并没有击中任何物体。

62
00:04:19,899 --> 00:04:22,180
4 的平方根再次击中 4 个格点。

63
00:04:22,840 --> 00:04:25,720
5 的半径平方根实际上击中了 8 个格点。

64
00:04:25,720 --> 00:04:29,907
我们想要的是一种系统的方法来计算给定 

65
00:04:29,907 --> 00:04:34,535
的一个环上有多少个格点，距原点的给定距离，

66
00:04:34,535 --> 00:04:36,960
然 后将它们全部计数。

67
00:04:37,720 --> 00:04:42,898
如果你停下来尝试一下，你会发 现这个模式看起来真的很混乱，

68
00:04:42,898 --> 00:04:45,220
只是很难在这里找到 秩序。

69
00:04:45,680 --> 00:04:49,260
这是一个好兆头，表明一些非常有趣的数 学即将发挥作用。

70
00:04:50,140 --> 00:04:54,980
事实上，正如您将看到的，这种 模式植根于素数的分布。

71
00:04:56,460 --> 00:04:59,880
作为一个例子，我们来看一下半径平 方根为 25 的环。

72
00:05:00,700 --> 00:05:05,180
它达到点 5,0，因为 5 的平方加 0 的 平方是 25。

73
00:05:06,100 --> 00:05:08,943
它也达到 4,3，因为 4 的平方加 

74
00:05:08,943 --> 00:05:10,740
3 的平方得 到 25。

75
00:05:12,780 --> 00:05:17,580
同样，它达到 3,4，也达到 0,5。

76
00:05:18,660 --> 00:05:23,070
这里真正发生的是，您正在计算有多少对整数 a、b 

77
00:05:23,070 --> 00:05:27,480
具有 a 的平方加 b 的平方等于 25 的属性。

78
00:05:28,120 --> 00:05:32,000
而看这个圆圈，一共有十二个。

79
00:05:32,700 --> 00:05:35,980
再举一个例子，看一下半径平方根为 11 的环。

80
00:05:36,600 --> 00:05:41,090
它没有击中任何格点，这对应于你找不到两个平 

81
00:05:41,090 --> 00:05:44,560
方加起来为 11 的整数这一事实。

82
00:05:45,140 --> 00:05:48,700
尝试一下。

83
00:05:48,720 --> 00:05:53,252
很多时候，在数学中，当你看到一个与二维平面有关的问题时，

84
00:05:53,252 --> 00:05:57,298
只要问 一下当你把这个平面想象成所有复数的集合时它

85
00:05:57,298 --> 00:06:00,860
看起来是什么样子， 就会出人意料地富有成效。

86
00:06:00,860 --> 00:06:05,639
因此，不要将此格点视为一对整 数坐标 3,4，

87
00:06:05,639 --> 00:06:09,380
而是将其视为单个复数 3 加 4i。

88
00:06:10,620 --> 00:06:14,670
这样，考虑坐标平方和（3 平方加 4 

89
00:06:14,670 --> 00:06:20,000
平方）的另一种方法就是将该数字乘以 3 减 4i。

90
00:06:20,760 --> 00:06:25,120
这称为复共轭，它是通过在实轴 上反射、用负 

91
00:06:25,120 --> 00:06:27,300
i 替换 i 得到的。

92
00:06:28,340 --> 00:06:32,855
如果您没有太多关于复数的历史，这可能看起来是一个奇怪的步 

93
00:06:32,855 --> 00:06:37,060
骤，但是将这个距离描述为一个乘积可能会出乎意料地有用。

94
00:06:37,780 --> 00:06:40,491
它将我们的问题变成了因式分解问题，

95
00:06:40,491 --> 00:06:43,840
这就是素数之间的模式最 终发挥作用的原因。

96
00:06:45,060 --> 00:06:48,280
从代数上来说，这个关系很简单，足 以验证。

97
00:06:48,560 --> 00:06:53,201
你得到一个 3 的平方，然后 3 乘以负 4i 与 

98
00:06:53,201 --> 00:06:58,020
4i 乘 以 3 相抵消，然后你得到负 4i 的平方，

99
00:06:58,020 --> 00:07:02,840
因为 i 的平方是负 1，所 以变成了正 4 的平方。

100
00:07:04,160 --> 00:07:07,034
从几何角度来看，这也很不错，如果 

101
00:07:07,034 --> 00:07:09,740
您对复杂乘法的工作原理有点生疏，

102
00:07:09,740 --> 00:07:13,460
我确实有另一个视 频更详细地介绍了为什么复杂

103
00:07:13,460 --> 00:07:15,320
乘法看起来像它的样子。

104
00:07:15,780 --> 00:07:22,380
您可能会想到这样的情况：数字 3 加 4i 的大小 为 5，

105
00:07:22,380 --> 00:07:27,659
并且与水平面有一定角度，将其乘以 3 减 4i 

106
00:07:27,659 --> 00:07:34,039
意味着以相反的方向旋转相同的角度方向，将其 放在正实轴上，

107
00:07:34,039 --> 00:07:40,200
然后拉伸 5 倍，在本例中，输出为 25，即幅度的平方。

108
00:07:43,100 --> 00:07:47,841
所有这些格点的集合，a加bi， 其中a和b是整数，

109
00:07:47,841 --> 00:07:51,633
有一个特殊的名字，它们被称为高斯整数 ，

110
00:07:51,633 --> 00:07:53,720
以马丁·辛的名字命名。

111
00:07:54,500 --> 00:07:57,885
从几何角度来看，您仍然会问同样 的问题，

112
00:07:57,885 --> 00:08:02,456
这些格点（高斯整数）中有多少距离原点给定距离（ 例如 

113
00:08:02,456 --> 00:08:03,980
25 的平方根）？

114
00:08:04,880 --> 00:08:08,751
但我们会用更代数的方式 来表述，

115
00:08:08,751 --> 00:08:14,800
有多少个高斯整数具有乘以复共轭得到 25 的性质？

116
00:08:16,540 --> 00:08:20,974
这可能看起来不必要地复杂， 但它是理解距原

117
00:08:20,974 --> 00:08:25,620
点给定距离有多少格点的看似 随机模式的关键。

118
00:08:26,580 --> 00:08:32,220
要了解原因，我们首先需要了解数字 如何在高斯整数中进行分解。

119
00:08:33,220 --> 00:08:36,836
回顾一下，在普通整数中，每个 数

120
00:08:36,836 --> 00:08:40,679
字都可以分解为一些唯一的素数集合。

121
00:08:41,559 --> 00:08:48,079
例如，2250 可以 因式分解为 2 乘以 3 的平方乘以 

122
00:08:48,079 --> 00:08:54,600
5 的立方，并且没有其他素数 集合也可以相乘得到 2250。

123
00:08:55,760 --> 00:08:59,009
除非你让负数进入图片，在这种 情况下，

124
00:08:59,009 --> 00:09:02,600
你可以将这个因式分解中的一些素数设为负数。

125
00:09:03,640 --> 00:09:08,050
所以实际上，在整数中，因式分解并不是完全唯一的，

126
00:09:08,050 --> 00:09:12,643
它几乎 是唯一的，除了您可以通过将某些因数乘以负 

127
00:09:12,643 --> 00:09:15,400
1 来获得看 起来不同的乘积。

128
00:09:17,960 --> 00:09:20,857
我提出这一点的原因是，因式分解在高斯 

129
00:09:20,857 --> 00:09:22,840
整数中的工作原理非常相似。

130
00:09:23,540 --> 00:09:27,988
有些数字（例如 5）可以分解为更 小的高斯整数，

131
00:09:27,988 --> 00:09:31,880
在本例中为 2 加 i 乘以 2 减 i。

132
00:09:32,880 --> 00:09:37,699
这个高斯整数 2 加 i 不能因式分解为任何更小的值，

133
00:09:37,699 --> 00:09:40,020
因此我们将其称为高斯素数。

134
00:09:41,080 --> 00:09:44,540
同样，这个因式分解几乎是唯一的，

135
00:09:44,540 --> 00:09:49,732
但这一次你不仅可以将这些 因数中的每一个乘以负 

136
00:09:49,732 --> 00:09:53,193
1 以获得看起来不同的因式分解，

137
00:09:53,193 --> 00:09:57,951
你 还可以更加狡猾地将这些因数之一乘以 i，

138
00:09:57,951 --> 00:10:00,980
然后将另一个乘以负 岛一号。

139
00:10:02,180 --> 00:10:04,810
这将为您提供一种不同的方法，将 

140
00:10:04,810 --> 00:10:07,440
5 分解为两个不同的高斯素 数。

141
00:10:08,420 --> 00:10:13,430
但是，除了将这些因子中的一些因子乘以负 1 或 i 或负 

142
00:10:13,430 --> 00:10:18,440
i 可以获得的结果之外，高斯整数内的因式分解是独一无二的。

143
00:10:20,120 --> 00:10:24,469
如果你能弄清楚普通素数如何因式分解高斯整数，

144
00:10:24,469 --> 00:10:30,400
那就 足以告诉我们任何其他自然数如何因式分解这些高斯整 数。

145
00:10:31,240 --> 00:10:35,040
因此，我们在这里提出了一个至关重要且相当令人惊讶的事实。

146
00:10:35,960 --> 00:10:41,631
大于 4 的倍数的素数（例如 5、13 或 

147
00:10:41,631 --> 00:10:47,560
17）始终可以因式分解 为两个不同的高斯素数。

148
00:10:48,860 --> 00:10:52,410
这与半径等于这些素数之一 的平方根

149
00:10:52,410 --> 00:10:55,960
的环总是击中某些格点的事实相对应。

150
00:10:56,620 --> 00:11:00,440
事实上，它们总是恰好命中 8 个格点，稍后您就会看到。

151
00:11:03,440 --> 00:11:08,560
另一方面，大于 4 的倍数 3 的素数（例如 

152
00:11:08,560 --> 00:11:13,680
3、7 或 11）不能在高斯整数内进一步分解。

153
00:11:14,600 --> 00:11:19,272
它们不仅是普通 数中的素数，而且还是高斯素数，

154
00:11:19,272 --> 00:11:22,320
即使 i 在图中也不 可分割。

155
00:11:22,320 --> 00:11:27,701
这对应于这样一个事实：半径为这些素 

156
00:11:27,701 --> 00:11:33,680
数之一的平方根的环永远不会碰到任何格点。

157
00:11:33,680 --> 00:11:40,060
这里的模式就是我们最终要利用的素数内的规 律性。

158
00:11:40,060 --> 00:11:44,851
在后面的视频中，我可能会解释为什么这是 真的，

159
00:11:44,851 --> 00:11:50,685
为什么素数除以 4 时的余数与它是否包含 高斯整数有关，

160
00:11:50,685 --> 00:11:55,060
或者换句话说，是否可以表示为两个 平方和。

161
00:11:55,980 --> 00:11:58,580
但此时此地，我们只能将其视为理所当然。

162
00:11:59,680 --> 00:12:02,676
顺便说一 句，素数 2 有点特殊，

163
00:12:02,676 --> 00:12:06,554
因为它确实因式分解，你可以把它写成 1 加 

164
00:12:06,554 --> 00:12:11,842
i 乘以 1 减 i，但这两个高斯素数彼此旋转 90 度 ，

165
00:12:11,842 --> 00:12:15,720
所以你可以其中一个乘以 i 即可得到另一个。

166
00:12:16,560 --> 00:12:20,730
这一事实将使 我们想要以稍微不同的方式对待素数 2，

167
00:12:20,730 --> 00:12:24,420
以了 解所有这些东西的走向，所以请记住这一点。

168
00:12:26,860 --> 00:12:31,351
请记住，我们的目标是计算距原点给定距离有多少格点，

169
00:12:31,351 --> 00:12:36,382
并且 对所有距离 n 的平方根系统地执行此操作可以得出 

170
00:12:36,382 --> 00:12:37,820
p i 的公式。

171
00:12:38,920 --> 00:12:44,551
计算给定大小（例如 25 的平方根 ）的格点数量，

172
00:12:44,551 --> 00:12:51,308
与询问有多少个高斯整数具有特 殊性质（将它们乘以复共轭得到 

173
00:12:51,308 --> 00:12:52,660
25）相同。

174
00:12:54,000 --> 00:12:58,000
因此，这是查找具有此属性的所有高斯整数的方法。

175
00:12:58,000 --> 00:13:03,450
步骤 1，因式 25，在普通整数中看起来像 5 的平方，

176
00:13:03,450 --> 00:13:08,512
但由于 5 的 因式更进一步，如 2 加 i 乘以 

177
00:13:08,512 --> 00:13:12,600
2 减 i，25 分解为这四个高 斯素数。

178
00:13:13,500 --> 00:13:20,320
第 2 步，将它们组织成两 个不同的列，共轭对彼此相邻。

179
00:13:20,320 --> 00:13:23,579
一旦你这样做了，将每列中的内容相乘，

180
00:13:23,579 --> 00:13:27,020
你就会在底部得到 两个不同的高斯整数。

181
00:13:27,020 --> 00:13:32,006
因为右边的所有内容都与左边的所 有内容共轭，

182
00:13:32,006 --> 00:13:36,540
所以结果是一个乘以 25 的复共轭 对。

183
00:13:37,980 --> 00:13:44,740
选择任意标准，假设左列中 的产品是我们配方的输出。

184
00:13:44,740 --> 00:13:51,520
请注意，对于如何分配可能影响此输出的素数，有三种选 择。

185
00:13:51,520 --> 00:13:54,874
如图所示，2 加 i 的两个副本都在左 列中，

186
00:13:54,874 --> 00:13:57,500
这样我们就得到了乘积 3 加 4i。

187
00:13:58,460 --> 00:14:02,312
您也可以选择在左列中仅保留一份 2 加 i，

188
00:14:02,312 --> 00:14:04,940
在这种情况 下，乘积将为 5。

189
00:14:05,720 --> 00:14:09,624
或者，您可以在右列中同时拥有 2 加 i 的两个副本，

190
00:14:09,624 --> 00:14:13,240
在这种情况下，我们的配方的输出将是 3 减 4i。

191
00:14:15,920 --> 00:14:22,280
这三个可能的输出都是半径平方根为 25 的圆上的不 同格点。

192
00:14:24,339 --> 00:14:29,120
但为什么这个配方还没有捕获所有 1 2 个格点呢？

193
00:14:30,180 --> 00:14:34,197
还记得我曾提到过，如果将其中一些素数乘以 i、–1 

194
00:14:34,197 --> 00:14:38,060
或 –i，则分解为高斯素数可能看起来会有所不同吗？

195
00:14:38,880 --> 00:14:43,107
在这种情况下，您可以以不同的方式编写 25 的因式分解，

196
00:14:43,107 --> 00:14:46,126
也许 将其中一个 5 分解为 –1 加 

197
00:14:46,126 --> 00:14:48,240
2i 乘以 –1 减 2i。

198
00:14:48,240 --> 00:14:53,113
如果你这样做，运行相同的配方，它会影 响结果，

199
00:14:53,113 --> 00:14:56,080
你会从左列中得到不同的产品。

200
00:14:56,080 --> 00:15:02,560
唯一的效果是将总输出乘以 i、或 –1、或 –i。

201
00:15:02,560 --> 00:15:08,140
因此，作为我们食谱的最后一步，假设您必须做出四个选择之一。

202
00:15:08,800 --> 00:15:14,187
从左列中取出该乘积，然后选择将其乘以 1、i、– 

203
00:15:14,187 --> 00:15:19,360
1 或 –i，对应于 90 度的某个倍数的旋转。

204
00:15:21,540 --> 00:15:25,567
这将解释构造高斯整数的所有 12 种不同方法，

205
00:15:25,567 --> 00:15:28,720
该整数与其自 身共轭的乘积为 25。

206
00:15:30,520 --> 00:15:33,240
这个过程有点复杂，所以我 认为感

207
00:15:33,240 --> 00:15:35,960
受它的最好方法是尝试更多的例子。

208
00:15:36,760 --> 00:15:40,760
假设我们正在查看 125，即 5 的立方。

209
00:15:40,760 --> 00:15:45,980
在这种情况下，我们将有四种不同的选择来将素数共轭 

210
00:15:45,980 --> 00:15:47,860
对分配到这两列中。

211
00:15:48,520 --> 00:15:52,605
您可以在左列中有零个 2 加 i 的副 本，

212
00:15:52,605 --> 00:15:55,948
在其中有一个副本，在其中有两个副本，

213
00:15:55,948 --> 00:15:58,920
或者在左列中拥有全部 三个副本。

214
00:15:59,660 --> 00:16:05,631
这四个选项，乘以左列的乘积乘以 1 、i、–1 

215
00:16:05,631 --> 00:16:11,105
或 –i 的最后四个选项，表明 距 125 

216
00:16:11,105 --> 00:16:16,580
的距离平方根总共有 16 个格 点。 起源。

217
00:16:16,580 --> 00:16:21,116
事实上，如果你把那个圆画出来并数 一下，

218
00:16:21,116 --> 00:16:25,200
你会发现它恰好击中了 16 个格点。

219
00:16:26,680 --> 00:16:30,012
但是，如果引入一个像 3 这样的因子，

220
00:16:30,012 --> 00:16:33,520
它不会分解为两个 共轭高斯素数的乘积呢？

221
00:16:34,420 --> 00:16:36,440
好吧，这真的把整个系统搞乱了。

222
00:16:36,940 --> 00:16:42,120
当你在两列之间分配素数时，你无法将这 3 列分开。

223
00:16:42,520 --> 00:16:45,620
无论你把它放在哪里，它都会使柱 子不平衡。

224
00:16:46,260 --> 00:16:50,748
这意味着，当您对每列中的所 有数字求积时，

225
00:16:50,748 --> 00:16:53,100
您最终不会得到共轭对。

226
00:16:53,660 --> 00:16:57,938
因此，对于像这样的数字，3 乘以 5 的立方，

227
00:16:57,938 --> 00:17:01,844
即 3 75，实际上没有任何格点可以命中，

228
00:17:01,844 --> 00:17:06,680
也没有高斯整数与其自身 共轭的乘积可以得到 375。

229
00:17:08,119 --> 00:17:12,420
但是，如果您引入第二个因子 3 ，那么您就有一个选择。

230
00:17:12,920 --> 00:17:17,200
您可以在左列中投掷一个 3，在右 列中投掷另外 3 个。

231
00:17:17,200 --> 00:17:23,000
由于 3 是它自己的复共轭 ，这使得事情保持平衡，

232
00:17:23,000 --> 00:17:27,640
因为左列和右列的乘积 确实将是复共轭对。

233
00:17:29,380 --> 00:17:31,520
但它没有添加任何新选项。

234
00:17:31,940 --> 00:17:36,670
对于如 何除以 5 的因子，乘以乘以 1、i、负 1 

235
00:17:36,670 --> 00:17:41,400
或负 i 的最后 4 个选择，仍然总共有 4 个选择。

236
00:17:42,000 --> 00:17:45,453
所以就像 125 圆的平方根一样，

237
00:17:45,453 --> 00:17:49,720
这个家伙最终也会恰好击 中 16 个格点。

238
00:17:51,240 --> 00:17:52,620
让我们总结一下我们现在的情况。

239
00:17:53,020 --> 00:17:56,992
当您计算半径平方根为 n 的圆上有多少个格点时，

240
00:17:56,992 --> 00:17:59,640
第一步 是对 n 进行因式分解。

241
00:18:01,000 --> 00:18:05,380
对于像 5、13 或 17 这样的素数，

242
00:18:05,380 --> 00:18:09,323
它们进一步分解成复数共轭高斯素数对，

243
00:18:09,323 --> 00:18:14,800
 它们给你的选择数量总是比该因子显示的指数多 1。

244
00:18:17,200 --> 00:18:21,425
另一方面，对于像 3、7 或 11 这样的素数因子，

245
00:18:21,425 --> 00:18:26,137
它们已 经是高斯素数并且不能被分割，如果它们以偶次幂出现，

246
00:18:26,137 --> 00:18:28,900
那么您就 只有一个选择来处理它们。

247
00:18:29,440 --> 00:18:33,240
但如果它是一个奇怪的指数，你就完蛋 了，你的选择为零。

248
00:18:34,200 --> 00:18:37,640
无论如何，最后你总 会有最后 4 个选择。

249
00:18:39,860 --> 00:18:44,700
顺便说一句，我确实认为这里的这个过程是视频中最复杂的部分。

250
00:18:45,380 --> 00:18:50,039
我花了好几次时间才想通，是的，这是 计算格点的有效方法，

251
00:18:50,039 --> 00:18:54,200
所以如果您想暂 停并记下内容来感受它，请不要害羞。

252
00:18:54,920 --> 00:19:00,080
关于这个配方最后要提到的一件事是因子 2 如何影响计数。

253
00:19:01,020 --> 00:19:06,600
如果你 的数字是偶数，那么 2 的因子分解为 1 加 

254
00:19:06,600 --> 00:19:12,800
i 乘以 1 减 i，这样你就可以在两列之间分配复数共轭对。

255
00:19:12,800 --> 00:19:15,875
乍一看，这可能会让 您的选择加倍，

256
00:19:15,875 --> 00:19:20,580
具体取决于您选择如何将这两个高斯素数放置 在列之间。

257
00:19:21,460 --> 00:19:26,765
然而，由于将其中一个乘以 i 会得到另 一个，

258
00:19:26,765 --> 00:19:33,685
因此当您在列之间交换它们时，对左列输出的影 响就是将其乘以 

259
00:19:33,685 --> 00:19:35,300
i 或负 i。

260
00:19:35,300 --> 00:19:39,536
所以这对于最后一步 来说实际上是多余的，

261
00:19:39,536 --> 00:19:45,680
我们取左列的乘积并选择将其乘以 1、i、负 1 或负 i。

262
00:19:46,640 --> 00:19:53,240
这意味着 2 的因数或 2 的任何幂实际上根本不会改变计数。

263
00:19:53,720 --> 00:19:55,620
它不疼，但没有 帮助。

264
00:19:56,420 --> 00:20:00,345
例如，半径平方根为 5 的圆会命中 8 个格点，

265
00:20:00,345 --> 00:20:04,762
如果将 半径增大到平方根 10，也会命中 8 个格点，

266
00:20:04,762 --> 00:20:07,870
平方根 20 也 会命中 8 个格点，

267
00:20:07,870 --> 00:20:10,160
平方根也是如此共 40 个。

268
00:20:11,020 --> 00:20:13,080
2 的因数 没有什么区别。

269
00:20:15,580 --> 00:20:18,320
现在即将发生的是数论的最佳状 态。

270
00:20:18,980 --> 00:20:23,082
我们有这个复杂的公式告诉我们半径平方根为 n 

271
00:20:23,082 --> 00:20:27,720
的圆上有多少个格点，并且它取决于 n 的素因数分解。

272
00:20:27,720 --> 00:20:31,372
为了把它变成更简单的东西，我们可以实际处理的东西，

273
00:20:31,372 --> 00:20:35,317
我们将利用素数的规 律性，即那些大于 4 的倍数 1 

274
00:20:35,317 --> 00:20:37,655
的素数分裂成不同的高斯素数因子，

275
00:20:37,655 --> 00:20:41,600
而 那些大于 4 的倍数 3 的素数分解为不同的高斯素

276
00:20:41,600 --> 00:20:43,500
数因子。 4 不能 分割。

277
00:20:44,300 --> 00:20:47,317
为此，我们引入一个简单的函数，我将用希腊字母 

278
00:20:47,317 --> 00:20:48,760
chi 对其进行标记。

279
00:20:49,680 --> 00:20:54,820
对于 1 大于 4 的倍数的输入， chi 的输出为 1。

280
00:20:55,380 --> 00:21:00,900
如果输入 3 大于 4 的倍数，则 chi 的输出为负 1。

281
00:21:01,880 --> 00:21:05,240
然后对于所有偶数，它给出 0。

282
00:21:09,680 --> 00:21:13,038
因此，如果您对自然数评估 chi，

283
00:21:13,038 --> 00:21:17,582
它会给出非常好的循环模式：1, 0，负 1, 

284
00:21:17,582 --> 00:21:19,360
0，然后无限重复。

285
00:21:20,860 --> 00:21:24,902
这个循环函数 chi 有一个非 常特殊的性质，

286
00:21:24,902 --> 00:21:26,660
就是所谓的乘法函数。

287
00:21:27,620 --> 00:21:31,116
如果您对两个不同的数字进行计算 并将结果相乘，

288
00:21:31,116 --> 00:21:34,460
例如 3 的 chi 乘以 5 的 chi，

289
00:21:34,460 --> 00:21:38,412
则与您根据这 两个数字的乘积计算 chi 是相同的，

290
00:21:38,412 --> 00:21:39,780
在本例中为 15。

291
00:21:40,880 --> 00:21:44,800
同样，5 的卡方乘 以 5 的卡方等于 25 的卡方。

292
00:21:45,640 --> 00:21:50,160
无论你在那里输入哪两个自然 数，这个属性都会成立。

293
00:21:50,700 --> 00:21:51,880
如果你愿意的话，就来尝试一下吧。

294
00:21:52,820 --> 00:21:56,499
因此，对于以这种方式计算格点的核心问题，

295
00:21:56,499 --> 00:22:02,017
涉及对数字进 行因式分解，我要做的是写下我们拥有的选择数量，

296
00:22:02,017 --> 00:22:05,696
但使用 chi 的方式乍一看似乎更复杂，

297
00:22:05,696 --> 00:22:09,560
但是这样做的好处是 平等对待所有主要因素。

298
00:22:10,660 --> 00:22:13,180
对于每个素数幂，例如 5 的立方，

299
00:22:13,180 --> 00:22:17,480
您写下的 是 1 的 chi 加 5 的 chi 加 5 

300
00:22:17,480 --> 00:22:19,260
的平方加 5 的三次方。

301
00:22:19,260 --> 00:22:23,558
您将 这个素数的所有幂的 chi 值相加，

302
00:22:23,558 --> 00:22:26,220
直到因式分解 中显示的值。

303
00:22:27,340 --> 00:22:31,834
在这种情况下，由于 5 是 4 的倍数之上的 1，

304
00:22:31,834 --> 00:22:35,789
因此所有这些都只是 1，因此这个总和为 4，

305
00:22:35,789 --> 00:22:39,924
这反映了这样一 个事实：5 的立方为您提供了 

306
00:22:39,924 --> 00:22:43,700
4 个选项来分配列之间的两个高斯素 因子。

307
00:22:46,340 --> 00:22:48,621
对于像 3 的 4 次方这样的因数，

308
00:22:48,621 --> 00:22:51,410
您写下的内容看起来完全相似，1 的 chi 

309
00:22:51,410 --> 00:22:54,960
加上 3 的 chi 一直到 3 的 4 次方 chi。

310
00:22:55,040 --> 00:22:59,498
但在这种情况下，由于 3 的 chi 为负 1，

311
00:22:59,498 --> 00:23:04,700
因此该和会振荡，即 1 减 1 加 1 减 1 加 1。

312
00:23:04,700 --> 00:23:09,291
如果它 是偶次幂，例如本例中的 4，则总和为 1，

313
00:23:09,291 --> 00:23:14,434
这概括了这样一个 事实：对于如何处理这些不可分割的 3，

314
00:23:14,434 --> 00:23:15,720
只有一种选择。

315
00:23:16,200 --> 00:23:19,209
但如果 它是奇数次幂，那么总和就是 0，

316
00:23:19,209 --> 00:23:22,820
这表明你完蛋了，你不能放置 那个不可分割的 3。

317
00:23:24,580 --> 00:23:28,900
当你对 2 的幂执行此操作时，看起来就像 1 加 0 

318
00:23:28,900 --> 00:23:33,380
加 0 加 0 不断，因为 chi 在偶数上始终为 0。

319
00:23:33,919 --> 00:23:37,311
这反映 了这样一个事实：2 没有帮助，

320
00:23:37,311 --> 00:23:41,060
也没有坏处，你总是只 有一个选择来处理它。

321
00:23:41,940 --> 00:23:44,385
和往常一样，我们在前面保留 4 

322
00:23:44,385 --> 00:23:47,900
来表示最终选择乘以 1、i、负 1 或负 i。

323
00:23:49,080 --> 00:23:52,612
我们现在 已经接近高潮了，事情开始看起来有条理，

324
00:23:52,612 --> 00:23:56,440
所以停 下来思考一下，确保到目前为止一切都感觉良好。

325
00:23:57,140 --> 00:23:59,460
以45号为例。

326
00:24:00,140 --> 00:24:03,255
这家伙因式分解为 3 的平方乘以 5，

327
00:24:03,255 --> 00:24:07,520
因此格点 总数的表达式为 4 乘以 1 的卡氏加上 

328
00:24:07,520 --> 00:24:12,440
3 的卡氏加上 3 的平方乘以 1 的卡氏加上 5 的卡氏。

329
00:24:13,160 --> 00:24:16,980
您可以将其视为 4 乘以 1 的选择（ 如何处理 

330
00:24:16,980 --> 00:24:21,260
3 的乘以 2 的选择）（如何除以 5 的高斯素因数）。

331
00:24:22,020 --> 00:24:27,636
展开这个总和似乎确实很复杂，因为它涉及这些素因 

332
00:24:27,636 --> 00:24:31,380
数的所有可能组合，而且确实如此。

333
00:24:32,020 --> 00:24:37,063
然而，由于 chi 是乘法，因此这些组合中的每一个都对应于 

334
00:24:37,063 --> 00:24:38,240
45 的除数。

335
00:24:38,240 --> 00:24:42,093
在这种情况下， 我们得到的是 4 乘以 

336
00:24:42,093 --> 00:24:46,140
1 的尺加上 3 的尺加上 5 的尺加上 

337
00:24:46,140 --> 00:24:50,380
9 的尺加上 15 的 尺加上 45 的尺。

338
00:24:51,360 --> 00:24:56,672
您会注意到，这涵盖了所有能被 45 整除的 数字，

339
00:24:56,672 --> 00:24:58,160
一次且仅一次。

340
00:24:58,940 --> 00:25:02,480
对于任何数字都是这 样，45 没有什么特别的。

341
00:25:03,220 --> 00:25:06,760
这对我来说非常有趣，我认为完全出乎意料。

342
00:25:07,380 --> 00:25:13,663
这个计算距 原点距离为 n 的平方根的格点数量的问题涉及将 

343
00:25:13,663 --> 00:25:18,480
这个相对简单的函数的值与 n 的所有除数相加。

344
00:25:20,100 --> 00:25:22,720
为了将所有这些结合在一起，请记住我们为什么要这样做。

345
00:25:23,100 --> 00:25:26,812
半径为 r 的大圆内的 格点总数应约为 

346
00:25:26,812 --> 00:25:29,040
pi 乘以 r 的平方。

347
00:25:29,040 --> 00:25:33,018
但另一方面， 我们可以通过查看 0 到 r 

348
00:25:33,018 --> 00:25:37,359
平方之间的所有数字 n 来计 算这些相同的格点，

349
00:25:37,359 --> 00:25:41,700
并计算有多少个格点距原点距离为 n 的平 方根。

350
00:25:41,700 --> 00:25:46,810
让我们忽略半径为 0 的原点，它不 遵循其余点的模式，

351
00:25:46,810 --> 00:25:52,300
并且当我们让 r 向 无穷大增长时，一个小点不会产生影响。

352
00:25:52,300 --> 00:25:56,913
从我们一直在做的所有高斯整数、因式分解和 chi 

353
00:25:56,913 --> 00:26:01,342
函数的内容来看，每 个 n 的答案看起来就像将 

354
00:26:01,342 --> 00:26:06,140
n 的每个除数上的 chi 值相加，然 后乘以 4。

355
00:26:07,220 --> 00:26:09,763
现在我们就把这 4 个放在角 落里，

356
00:26:09,763 --> 00:26:11,600
然后记得稍后再把它带回来。

357
00:26:12,720 --> 00:26:18,340
首先，将这些行中每一行的值相加似乎是超级随机的，对吧？

358
00:26:18,840 --> 00:26:23,209
我 的意思是，具有很多因数的数字有很多约数，

359
00:26:23,209 --> 00:26:28,770
而素数 总是只有两个约数，所以最初看起来你必须对素数的 

360
00:26:28,770 --> 00:26:33,140
分布有完美的了解才能从中得到任何有用的东西。

361
00:26:34,180 --> 00:26:39,040
但如果你把它们组织成列，这个谜题就会开始拼凑起来。

362
00:26:40,100 --> 00:26:44,700
1 和 r2 之间有多少个以 1 作为约数的数？

363
00:26:44,920 --> 00:26:45,400
他们全部。

364
00:26:45,900 --> 00:26:49,200
所以我们的总和应该包括 r2 乘以 1 的 chi。

365
00:26:50,060 --> 00:26:53,300
其中有多少个以 2 作为约数？

366
00:26:53,440 --> 00:26:54,320
大约有一半。

367
00:26:54,840 --> 00:26:58,520
这样 r2 就超 过了 2 的 chi 的 2 倍。

368
00:26:59,120 --> 00:27:02,145
这些行中大约有三分之一的 chi 为 3，

369
00:27:02,145 --> 00:27:06,180
因此我们可以 将 r2 除以 3 的 chi 乘以 3。

370
00:27:06,180 --> 00:27:10,147
请记住，我们是近似值，因为 r2 可 能无法完美地整除 

371
00:27:10,147 --> 00:27:12,839
2 或 3，但随着 r 向无穷大增长，

372
00:27:12,839 --> 00:27:14,540
这种近似值会 变得更好。

373
00:27:15,360 --> 00:27:20,200
当你继续这样做时，你会得到一个非常有组 织的格点总数表达式。

374
00:27:22,980 --> 00:27:28,988
如果你将 r2 分解出来并带 回需要相乘的 4，

375
00:27:28,988 --> 00:27:34,996
那么这意味着这个大圆内的格点总数 大约是 r2 

376
00:27:34,996 --> 00:27:38,000
乘以这个总和的 4 倍。

377
00:27:38,660 --> 00:27:42,097
因为 chi 在每个偶数上都是 0，

378
00:27:42,097 --> 00:27:45,916
而在奇数上它在 1 和负 1 之间波动，

379
00:27:45,916 --> 00:27:51,645
所以这个 和看起来像 1 减 1 第三加上第五减 1 第七，

380
00:27:51,645 --> 00:27:52,600
依此类推。

381
00:27:53,020 --> 00:27:54,360
这正是 我们想要的！

382
00:27:54,760 --> 00:27:59,213
我们这里有一个大圆内格点总数的替代表 达式，

383
00:27:59,213 --> 00:28:03,060
我们知道它应该约为 pi 乘以 r2。

384
00:28:04,000 --> 00:28:09,268
r 越大，这两个估计就越准确，因此左侧和右 

385
00:28:09,268 --> 00:28:13,340
侧之间的百分比误差可以变得任意小。

386
00:28:13,900 --> 00:28:20,140
除以 r 2，这给出了一个应该收敛于 pi 的无穷总和。

387
00:28:21,300 --> 00:28:24,633
请记住 ，我只是认为这真的很酷，

388
00:28:24,633 --> 00:28:30,467
这个总和之所以如此 简单，并且需要相对较少的信息来描述，

389
00:28:30,467 --> 00:28:35,260
最终 源于素数如何在高斯整数中分解的规则模式。

390
00:28:36,540 --> 00:28:43,600
如果您好奇，数论有两个主要分支：代数数论和 解析数论。

391
00:28:44,420 --> 00:28:48,317
非常宽松地说，前者处理新的数字系统，

392
00:28:48,317 --> 00:28:52,215
 比如你和我研究过的高斯整数，等等，

393
00:28:52,215 --> 00:28:57,629
后者处理黎曼 zeta 函数或它的近亲 L 函数，

394
00:28:57,629 --> 00:29:03,260
涉及乘法函 数，就像我们故事中的中心人物“气”一样。

395
00:29:03,260 --> 00:29:07,300
我们刚刚 走过的路可以瞥见这两个领域的交叉点。

396
00:29:07,920 --> 00:29:10,160
这两个领域都 是相当繁重的领域，

397
00:29:10,160 --> 00:29:12,400
有大量活跃的研究和未解决的问题。

398
00:29:13,000 --> 00:29:17,133
因此 ，如果所有这些感觉像是需要时间在精神上消化的事情，

399
00:29:17,133 --> 00:29:19,790
就像有更多 的模式需要被发现和理解，

400
00:29:19,790 --> 00:29:22,300
那是因为它确实如此，而且确实存在。

