1
00:00:00,000 --> 00:00:05,674
这是我很高兴制作一段时间的视频。

2
00:00:05,674 --> 00:00:09,490
这里的故事将质数、复数 和圆周率

3
00:00:09,490 --> 00:00:13,306
编织成一个非常令人愉快的三重奏。

4
00:00:13,306 --> 00:00:16,641
在现代数学中，尤 其是与黎曼 zeta

5
00:00:16,641 --> 00:00:19,642
函数调情的数学中，这三个看似无关的

6
00:00:19,642 --> 00:00:24,644
物体经常同时出现，我想让你看一下发生这种情况的一个例子，这

7
00:00:24,644 --> 00:00:29,480
是少数几个不发生这种情况的例子之一。 要求太重的技术背景。

8
00:00:29,480 --> 00:00:33,747
这并不是说这很容易，事实上这可能是我做过的最复杂的

9
00:00:33,747 --> 00:00:36,373
视频之一，但最终的成果是值得的。

10
00:00:36,373 --> 00:00:41,573
我们最终得到的是 p i 的公式，即某个交替无穷和。

11
00:00:41,573 --> 00:00:47,284
这个公式实际上写在我写这 篇文章时我正在喝咖啡的杯子上。

12
00:00:47,284 --> 00:00:51,952
一个有趣但几乎可以肯定 是杜撰的故事是，这个公式的

13
00:00:51,952 --> 00:00:56,620
美妙之处激励莱布尼茨放弃律师 职业，转而追求数学。

14
00:00:56,620 --> 00:01:00,406
每当你看到圆周率出现在数学中时，总会有一

15
00:01:00,406 --> 00:01:04,011
个圆圈隐藏在某个地方，有时非常偷偷摸摸。

16
00:01:04,011 --> 00:01:07,352
因此，这里的目标不仅 仅是发现这个总

17
00:01:07,352 --> 00:01:10,692
和，而是真正了解隐藏在其背后的圆圈。

18
00:01:10,692 --> 00:01:14,993
你看，还有 另一种方法可以证明你和我将花费一些有

19
00:01:14,993 --> 00:01:19,294
意义的时间来获 得的相同结果，但只需几行微积分。

20
00:01:19,294 --> 00:01:24,078
这是让你思考的证据 之一，好吧，我想这是真的，

21
00:01:24,078 --> 00:01:29,071
但并没有真正理解为什么， 或者隐藏的圆圈在哪里。

22
00:01:29,071 --> 00:01:33,515
不过，在你我将要走的道路上 ，你会看到这个和

23
00:01:33,515 --> 00:01:36,949
及其隐藏的圆圈背后的基本事实是当

24
00:01:36,949 --> 00:01:42,604
你将素数放入复数中时，素数的行为方式存在一定的 规律性。

25
00:01:42,604 --> 00:01:47,322
为了开始这个故事，想象一下你自己除了一支铅笔、一张纸之外

26
00:01:47,322 --> 00:01:50,901
什么都没有，并且渴望找到计算 pi 的公式。

27
00:01:50,901 --> 00:01:56,355
有无数种方法可以实 现这一点，但作为情节线的大致轮廓

28
00:01:56,355 --> 00:02:01,809
，您将首先询问平面 上有多少个格点位于一个大圆圈内。

29
00:02:01,809 --> 00:02:06,810
这将导致我们询问 如何将数字表示为两个平

30
00:02:06,810 --> 00:02:11,812
方和，进而导致我们在复平面 内分解整数。

31
00:02:11,812 --> 00:02:15,967
从那里我们将引入一个名为 chi 的特

32
00:02:15,967 --> 00:02:21,576
殊函数，它将为我们提供一个 pi 公式，乍一看似乎涉

33
00:02:21,576 --> 00:02:27,186
及一个依赖于素数分布的疯狂复杂模式，但视角的轻微转变

34
00:02:27,186 --> 00:02:30,302
将极大地简化它并揭示终极金块。

35
00:02:30,302 --> 00:02:34,876
虽然很多，但是好的数学需 要时间，我们会一步一步来。

36
00:02:34,876 --> 00:02:38,897
当我说格子点时，我的意思是平面

37
00:02:38,897 --> 00:02:45,180
上的点AB，其中A和B都是整数，即网格线交叉的点。

38
00:02:45,180 --> 00:02:49,615
如果您画一个以原点为中心的圆，假设半径为

39
00:02:49,615 --> 00:02:52,995
10， 您猜该圆内有多少个格点？

40
00:02:52,995 --> 00:02:58,965
嗯，每个面积单位都有一个格点 ，因此答案应该大约等于圆的

41
00:02:58,965 --> 00:03:05,149
面积 pi r 平方，在本例中为 pi 乘以 10 平方。

42
00:03:05,149 --> 00:03:08,719
如果它是一个非常大的圆，例如半 径 100

43
00:03:08,719 --> 00:03:13,424
万，您会期望这是一个更准确的估计，从某种 意义上说，估计

44
00:03:13,424 --> 00:03:18,292
pi r 平方与实际格点计数之间的百分 比误差应该变得更小。

45
00:03:18,292 --> 00:03:21,526
我们要做的是找到第二种方法来回答

46
00:03:21,526 --> 00:03:26,282
同一个问题，即圆内有多少个格点，因为这可以导致另

47
00:03:26,282 --> 00:03:31,229
一种表达圆面积的方法，从而产生另一种表达圆面积的方

48
00:03:31,229 --> 00:03:32,180
法圆周率。

49
00:03:32,180 --> 00:03:35,966
所以你玩的时候，你想知道，也许，特

50
00:03:35,966 --> 00:03:40,593
别是如果你刚刚观看了某个微积分视频，你可能

51
00:03:40,593 --> 00:03:44,800
会尝试查看晶格点可能位于的每个可能的环。

52
00:03:44,800 --> 00:03:49,315
现在如果你想一想，对于这些格点AB中的每一个，它到原点的

53
00:03:49,315 --> 00:03:52,274
距离都是a的平方加上b的平方的平方根。

54
00:03:52,274 --> 00:03:57,969
由于a和b都是整 数，a的平方加上b的平方也是某个

55
00:03:57,969 --> 00:04:03,891
整数，所以你只需 要考虑半径是某个整数的平方根的环。

56
00:04:03,891 --> 00:04:08,133
半径 0 只给 出单个原点。

57
00:04:08,133 --> 00:04:12,640
如果观察半径 1，就会碰到 4 个晶格点。

58
00:04:12,640 --> 00:04:17,140
半径为 2 的平方根，同样命中 4 个格点。

59
00:04:17,140 --> 00:04:19,880
半径 3 的平方根实际上并没有击中任何物体。

60
00:04:19,880 --> 00:04:22,683
4 的平方根再次击中 4 个格点。

61
00:04:22,683 --> 00:04:26,536
5 的半径平方根实际上击中了 8 个格点。

62
00:04:26,536 --> 00:04:30,429
我们想要的是一种系统的方法来计算给定

63
00:04:30,429 --> 00:04:35,141
的一个环上有多少个格点，距原点的给定距离，然

64
00:04:35,141 --> 00:04:36,985
后将它们全部计数。

65
00:04:36,985 --> 00:04:41,066
如果你停下来尝试一下，你会发 现这个模式看

66
00:04:41,066 --> 00:04:45,146
起来真的很混乱，只是很难在这里找到 秩序。

67
00:04:45,146 --> 00:04:49,959
这是一个好兆头，表明一些非常有趣的数 学即将发挥作用。

68
00:04:49,959 --> 00:04:55,296
事实上，正如您将看到的，这种 模式植根于素数的分布。

69
00:04:55,296 --> 00:05:00,164
作为一个例子，我们来看一下半径平 方根为 25 的环。

70
00:05:00,164 --> 00:05:05,246
它达到点 5,0，因为 5 的平方加 0 的 平方是 25。

71
00:05:05,246 --> 00:05:08,792
它也达到 4,3，因为 4 的平方加

72
00:05:08,792 --> 00:05:11,031
3 的平方得 到 25。

73
00:05:11,031 --> 00:05:18,780
同样，它达到 3,4，也达到 0,5。

74
00:05:18,780 --> 00:05:23,690
这里真正发生的是，您正在计算有多少对整数 a、b

75
00:05:23,690 --> 00:05:28,600
具有 a 的平方加 b 的平方等于 25 的属性。

76
00:05:28,600 --> 00:05:32,880
而看这个圆圈，一共有十二个。

77
00:05:32,880 --> 00:05:36,760
再举一个例子，看一下半径平方根为 11 的环。

78
00:05:36,760 --> 00:05:42,792
它没有击中任何格点，这对应于你找不到两个平

79
00:05:42,792 --> 00:05:47,454
方加起来为 11 的整数这一事实。

80
00:05:47,454 --> 00:05:49,000
尝试一下。

81
00:05:49,000 --> 00:05:52,517
很多时候，在数学中，当你看到一个与二维平面有关的问

82
00:05:52,517 --> 00:05:56,034
题时，只要问 一下当你把这个平面想象成所有复数的集

83
00:05:56,034 --> 00:05:59,552
合时它看起来是什么样子， 就会出人意料地富有成效。

84
00:05:59,552 --> 00:06:03,945
因此，不要将此格点视为一对整 数坐标

85
00:06:03,945 --> 00:06:09,033
3,4，而是将其视为单个复数 3 加 4i。

86
00:06:09,033 --> 00:06:13,490
这样，考虑坐标平方和（3 平方加 4

87
00:06:13,490 --> 00:06:19,354
平方）的另一种方法就是将该数字乘以 3 减 4i。

88
00:06:19,354 --> 00:06:25,358
这称为复共轭，它是通过在实轴 上反射、用负

89
00:06:25,358 --> 00:06:28,360
i 替换 i 得到的。

90
00:06:28,360 --> 00:06:33,258
如果您没有太多关于复数的历史，这可能看起来是一个奇怪的步

91
00:06:33,258 --> 00:06:37,820
骤，但是将这个距离描述为一个乘积可能会出乎意料地有用。

92
00:06:37,820 --> 00:06:42,645
它将我们的问题变成了因式分解问题，这就是素数之间的模式最

93
00:06:42,645 --> 00:06:44,143
终发挥作用的原因。

94
00:06:44,143 --> 00:06:48,627
从代数上来说，这个关系很简单，足 以验证。

95
00:06:48,627 --> 00:06:53,259
你得到一个 3 的平方，然后 3 乘以负 4i 与

96
00:06:53,259 --> 00:06:57,356
4i 乘 以 3 相抵消，然后你得到负 4i

97
00:06:57,356 --> 00:07:01,809
的平方，因为 i 的平方是负 1，所 以变成了正

98
00:07:01,809 --> 00:07:02,878
4 的平方。

99
00:07:02,878 --> 00:07:06,253
从几何角度来看，这也很不错，如果

100
00:07:06,253 --> 00:07:11,215
您对复杂乘法的工作原理有点生疏，我确实有另一个视

101
00:07:11,215 --> 00:07:15,980
频更详细地介绍了为什么复杂乘法看起来像它的样子。

102
00:07:15,980 --> 00:07:21,818
您可能会想到这样的情况：数字 3 加 4i 的大小

103
00:07:21,818 --> 00:07:28,105
为 5，并且与水平面有一定角度，将其乘以 3 减 4i

104
00:07:28,105 --> 00:07:33,045
意味着以相反的方向旋转相同的角度方向，将其

105
00:07:33,045 --> 00:07:38,658
放在正实轴上，然后拉伸 5 倍，在本例中，输出为

106
00:07:38,658 --> 00:07:40,903
25，即幅度的平方。

107
00:07:40,903 --> 00:07:44,556
所有这些格点的集合，a加bi，

108
00:07:44,556 --> 00:07:50,947
其中a和b是整数，有一个特殊的名字，它们被称为高斯整数

109
00:07:50,947 --> 00:07:53,686
，以马丁·辛的名字命名。

110
00:07:53,686 --> 00:07:56,657
从几何角度来看，您仍然会问同样

111
00:07:56,657 --> 00:08:01,858
的问题，这些格点（高斯整数）中有多少距离原点给定距离（

112
00:08:01,858 --> 00:08:04,086
例如 25 的平方根）？

113
00:08:04,086 --> 00:08:09,498
但我们会用更代数的方式 来表述，有多少个

114
00:08:09,498 --> 00:08:15,180
高斯整数具有乘以复共轭得到 25 的性质？

115
00:08:15,180 --> 00:08:20,552
这可能看起来不必要地复杂， 但它是理解距原

116
00:08:20,552 --> 00:08:26,181
点给定距离有多少格点的看似 随机模式的关键。

117
00:08:26,181 --> 00:08:32,344
要了解原因，我们首先需要了解数字 如何在高斯整数中进行分解。

118
00:08:32,344 --> 00:08:37,101
回顾一下，在普通整数中，每个 数

119
00:08:37,101 --> 00:08:42,155
字都可以分解为一些唯一的素数集合。

120
00:08:42,155 --> 00:08:48,024
例如，2250 可以 因式分解为 2 乘以 3 的平方乘以

121
00:08:48,024 --> 00:08:53,893
5 的立方，并且没有其他素数 集合也可以相乘得到 2250。

122
00:08:53,893 --> 00:08:58,786
除非你让负数进入图片，在这种 情况下，你

123
00:08:58,786 --> 00:09:03,680
可以将这个因式分解中的一些素数设为负数。

124
00:09:03,680 --> 00:09:09,022
所以实际上，在整数中，因式分解并不是完全唯一的，它几乎

125
00:09:09,022 --> 00:09:13,029
是唯一的，除了您可以通过将某些因数乘以负

126
00:09:13,029 --> 00:09:15,891
1 来获得看 起来不同的乘积。

127
00:09:15,891 --> 00:09:20,448
我提出这一点的原因是，因式分解在高斯

128
00:09:20,448 --> 00:09:23,566
整数中的工作原理非常相似。

129
00:09:23,566 --> 00:09:27,029
有些数字（例如 5）可以分解为更

130
00:09:27,029 --> 00:09:32,733
小的高斯整数，在本例中为 2 加 i 乘以 2 减 i。

131
00:09:32,733 --> 00:09:36,353
这个高斯整数 2 加 i 不能因式分解为

132
00:09:36,353 --> 00:09:39,973
任何更小的值，因此我们将其称为高斯素数。

133
00:09:39,973 --> 00:09:46,445
同样，这个因式分解几乎是唯一的，但这一次你不仅可以将这些

134
00:09:46,445 --> 00:09:52,917
因数中的每一个乘以负 1 以获得看起来不同的因式分解，你

135
00:09:52,917 --> 00:09:56,935
还可以更加狡猾地将这些因数之一乘以

136
00:09:56,935 --> 00:10:00,505
i，然后将另一个乘以负 岛一号。

137
00:10:00,505 --> 00:10:04,040
这将为您提供一种不同的方法，将

138
00:10:04,040 --> 00:10:07,574
5 分解为两个不同的高斯素 数。

139
00:10:07,574 --> 00:10:13,877
但是，除了将这些因子中的一些因子乘以负 1 或 i 或负

140
00:10:13,877 --> 00:10:20,180
i 可以获得的结果之外，高斯整数内的因式分解是独一无二的。

141
00:10:20,180 --> 00:10:25,159
如果你能弄清楚普通素数如何因式分解高斯整数，那就

142
00:10:25,159 --> 00:10:30,538
足以告诉我们任何其他自然数如何因式分解这些高斯整 数。

143
00:10:30,538 --> 00:10:35,323
因此，我们在这里提出了一个至关重要且相当令人惊讶的事实。

144
00:10:35,323 --> 00:10:40,563
大于 4 的倍数的素数（例如 5、13 或

145
00:10:40,563 --> 00:10:46,042
17）始终可以因式分解 为两个不同的高斯素数。

146
00:10:46,042 --> 00:10:50,211
这与半径等于这些素数之一 的平方根

147
00:10:50,211 --> 00:10:54,380
的环总是击中某些格点的事实相对应。

148
00:10:54,380 --> 00:10:59,122
事实上，它们总是恰好命中 8 个格点，稍后您就会看到。

149
00:10:59,122 --> 00:11:04,875
另一方面，大于 4 的倍数 3 的素数（例如

150
00:11:04,875 --> 00:11:10,628
3、7 或 11）不能在高斯整数内进一步分解。

151
00:11:10,628 --> 00:11:15,820
它们不仅是普通 数中的素数，而且还是高斯素数，即使

152
00:11:15,820 --> 00:11:18,217
i 在图中也不 可分割。

153
00:11:18,217 --> 00:11:23,438
这对应于这样一个事实：半径为这些素

154
00:11:23,438 --> 00:11:29,240
数之一的平方根的环永远不会碰到任何格点。

155
00:11:29,240 --> 00:11:39,056
这里的模式就是我们最终要利用的素数内的规 律性。

156
00:11:39,056 --> 00:11:43,558
在后面的视频中，我可能会解释为什么这是

157
00:11:43,558 --> 00:11:48,961
真的，为什么素数除以 4 时的余数与它是否包含

158
00:11:48,961 --> 00:11:55,264
高斯整数有关，或者换句话说，是否可以表示为两个 平方和。

159
00:11:55,264 --> 00:11:59,395
但此时此地，我们只能将其视为理所当然。

160
00:11:59,395 --> 00:12:03,433
顺便说一 句，素数 2 有点特殊，因为它确实

161
00:12:03,433 --> 00:12:07,472
因式分解，你可以把它写成 1 加 i 乘以

162
00:12:07,472 --> 00:12:11,510
1 减 i，但这两个高斯素数彼此旋转 90

163
00:12:11,510 --> 00:12:16,099
度 ，所以你可以其中一个乘以 i 即可得到另一个。

164
00:12:16,099 --> 00:12:20,909
这一事实将使 我们想要以稍微不同的方式对待素数

165
00:12:20,909 --> 00:12:25,920
2，以了 解所有这些东西的走向，所以请记住这一点。

166
00:12:25,920 --> 00:12:31,419
请记住，我们的目标是计算距原点给定距离有多少格点，并且

167
00:12:31,419 --> 00:12:36,328
对所有距离 n 的平方根系统地执行此操作可以得出

168
00:12:36,328 --> 00:12:37,900
p i 的公式。

169
00:12:37,900 --> 00:12:42,674
计算给定大小（例如 25 的平方根

170
00:12:42,674 --> 00:12:48,509
）的格点数量，与询问有多少个高斯整数具有特

171
00:12:48,509 --> 00:12:54,080
殊性质（将它们乘以复共轭得到 25）相同。

172
00:12:54,080 --> 00:12:59,040
因此，这是查找具有此属性的所有高斯整数的方法。

173
00:12:59,040 --> 00:13:03,348
步骤 1，因式 25，在普通整数中看起来像 5

174
00:13:03,348 --> 00:13:07,837
的平方，但由于 5 的 因式更进一步，如 2 加

175
00:13:07,837 --> 00:13:12,505
i 乘以 2 减 i，25 分解为这四个高 斯素数。

176
00:13:12,505 --> 00:13:20,440
第 2 步，将它们组织成两 个不同的列，共轭对彼此相邻。

177
00:13:20,440 --> 00:13:25,148
一旦你这样做了，将每列中的内容相乘，你就会在底部得到

178
00:13:25,148 --> 00:13:26,892
两个不同的高斯整数。

179
00:13:26,892 --> 00:13:30,419
因为右边的所有内容都与左边的所

180
00:13:30,419 --> 00:13:36,150
有内容共轭，所以结果是一个乘以 25 的复共轭 对。

181
00:13:36,150 --> 00:13:44,080
选择任意标准，假设左列中 的产品是我们配方的输出。

182
00:13:44,080 --> 00:13:50,248
请注意，对于如何分配可能影响此输出的素数，有三种选 择。

183
00:13:50,248 --> 00:13:54,273
如图所示，2 加 i 的两个副本都在左

184
00:13:54,273 --> 00:13:58,500
列中，这样我们就得到了乘积 3 加 4i。

185
00:13:58,500 --> 00:14:01,696
您也可以选择在左列中仅保留一份 2

186
00:14:01,696 --> 00:14:05,070
加 i，在这种情况 下，乘积将为 5。

187
00:14:05,070 --> 00:14:09,564
或者，您可以在右列中同时拥有 2 加 i

188
00:14:09,564 --> 00:14:15,129
的两个副本，在这种情况下，我们的配方的输出将是 3

189
00:14:15,129 --> 00:14:16,200
减 4i。

190
00:14:16,200 --> 00:14:22,630
这三个可能的输出都是半径平方根为 25 的圆上的不 同格点。

191
00:14:22,630 --> 00:14:29,228
但为什么这个配方还没有捕获所有 1 2 个格点呢？

192
00:14:29,228 --> 00:14:33,759
还记得我曾提到过，如果将其中一些素数乘以 i、–1

193
00:14:33,759 --> 00:14:38,115
或 –i，则分解为高斯素数可能看起来会有所不同吗？

194
00:14:38,115 --> 00:14:41,101
在这种情况下，您可以以不同的方式编写

195
00:14:41,101 --> 00:14:44,244
25 的因式分解，也许 将其中一个 5

196
00:14:44,244 --> 00:14:47,860
分解为 –1 加 2i 乘以 –1 减 2i。

197
00:14:47,860 --> 00:14:52,081
如果你这样做，运行相同的配方，它会影

198
00:14:52,081 --> 00:14:56,080
响结果，你会从左列中得到不同的产品。

199
00:14:56,080 --> 00:15:03,960
唯一的效果是将总输出乘以 i、或 –1、或 –i。

200
00:15:03,960 --> 00:15:08,920
因此，作为我们食谱的最后一步，假设您必须做出四个选择之一。

201
00:15:08,920 --> 00:15:15,593
从左列中取出该乘积，然后选择将其乘以 1、i、–

202
00:15:15,593 --> 00:15:22,000
1 或 –i，对应于 90 度的某个倍数的旋转。

203
00:15:22,000 --> 00:15:24,892
这将解释构造高斯整数的所有 12

204
00:15:24,892 --> 00:15:28,975
种不同方法，该整数与其自 身共轭的乘积为 25。

205
00:15:28,975 --> 00:15:32,487
这个过程有点复杂，所以我 认为感

206
00:15:32,487 --> 00:15:36,000
受它的最好方法是尝试更多的例子。

207
00:15:36,000 --> 00:15:40,720
假设我们正在查看 125，即 5 的立方。

208
00:15:40,720 --> 00:15:45,938
在这种情况下，我们将有四种不同的选择来将素数共轭

209
00:15:45,938 --> 00:15:47,817
对分配到这两列中。

210
00:15:47,817 --> 00:15:51,894
您可以在左列中有零个 2 加 i 的副

211
00:15:51,894 --> 00:15:57,601
本，在其中有一个副本，在其中有两个副本，或者在左列中拥有

212
00:15:57,601 --> 00:15:59,232
全部 三个副本。

213
00:15:59,232 --> 00:16:05,687
这四个选项，乘以左列的乘积乘以 1 、i、–1

214
00:16:05,687 --> 00:16:11,605
或 –i 的最后四个选项，表明 距 125

215
00:16:11,605 --> 00:16:17,523
的距离平方根总共有 16 个格 点。 起源。

216
00:16:17,523 --> 00:16:21,807
事实上，如果你把那个圆画出来并数

217
00:16:21,807 --> 00:16:27,100
一下，你会发现它恰好击中了 16 个格点。

218
00:16:27,100 --> 00:16:31,855
但是，如果引入一个像 3 这样的因子，它不会分解为两个

219
00:16:31,855 --> 00:16:33,723
共轭高斯素数的乘积呢？

220
00:16:33,723 --> 00:16:37,060
好吧，这真的把整个系统搞乱了。

221
00:16:37,060 --> 00:16:42,000
当你在两列之间分配素数时，你无法将这 3 列分开。

222
00:16:42,000 --> 00:16:45,338
无论你把它放在哪里，它都会使柱 子不平衡。

223
00:16:45,338 --> 00:16:49,195
这意味着，当您对每列中的所 有数

224
00:16:49,195 --> 00:16:53,053
字求积时，您最终不会得到共轭对。

225
00:16:53,053 --> 00:16:57,984
因此，对于像这样的数字，3 乘以 5 的立方，即

226
00:16:57,984 --> 00:17:02,521
3 75，实际上没有任何格点可以命中，也没有高

227
00:17:02,521 --> 00:17:06,861
斯整数与其自身 共轭的乘积可以得到 375。

228
00:17:06,861 --> 00:17:12,496
但是，如果您引入第二个因子 3 ，那么您就有一个选择。

229
00:17:12,496 --> 00:17:17,844
您可以在左列中投掷一个 3，在右 列中投掷另外 3 个。

230
00:17:17,844 --> 00:17:23,048
由于 3 是它自己的复共轭 ，这使得事情保持

231
00:17:23,048 --> 00:17:28,489
平衡，因为左列和右列的乘积 确实将是复共轭对。

232
00:17:28,489 --> 00:17:31,477
但它没有添加任何新选项。

233
00:17:31,477 --> 00:17:36,978
对于如 何除以 5 的因子，乘以乘以 1、i、负 1

234
00:17:36,978 --> 00:17:42,480
或负 i 的最后 4 个选择，仍然总共有 4 个选择。

235
00:17:42,480 --> 00:17:48,352
所以就像 125 圆的平方根一样，这个家伙最终也会恰好击

236
00:17:48,352 --> 00:17:50,175
中 16 个格点。

237
00:17:50,175 --> 00:17:53,120
让我们总结一下我们现在的情况。

238
00:17:53,120 --> 00:17:58,001
当您计算半径平方根为 n 的圆上有多少个格点时，第一步

239
00:17:58,001 --> 00:18:00,093
是对 n 进行因式分解。

240
00:18:00,093 --> 00:18:05,808
对于像 5、13 或 17 这样的素数，它

241
00:18:05,808 --> 00:18:10,707
们进一步分解成复数共轭高斯素数对，

242
00:18:10,707 --> 00:18:17,240
它们给你的选择数量总是比该因子显示的指数多 1。

243
00:18:17,240 --> 00:18:20,254
另一方面，对于像 3、7 或 11

244
00:18:20,254 --> 00:18:24,273
这样的素数因子，它们已 经是高斯素数并且不能被分

245
00:18:24,273 --> 00:18:29,297
割，如果它们以偶次幂出现，那么您就 只有一个选择来处理它们。

246
00:18:29,297 --> 00:18:33,279
但如果它是一个奇怪的指数，你就完蛋 了，你的选择为零。

247
00:18:33,279 --> 00:18:40,280
无论如何，最后你总 会有最后 4 个选择。

248
00:18:40,280 --> 00:18:45,360
顺便说一句，我确实认为这里的这个过程是视频中最复杂的部分。

249
00:18:45,360 --> 00:18:48,620
我花了好几次时间才想通，是的，这是

250
00:18:48,620 --> 00:18:51,880
计算格点的有效方法，所以如果您想暂

251
00:18:51,880 --> 00:18:54,960
停并记下内容来感受它，请不要害羞。

252
00:18:54,960 --> 00:19:00,766
关于这个配方最后要提到的一件事是因子 2 如何影响计数。

253
00:19:00,766 --> 00:19:06,291
如果你 的数字是偶数，那么 2 的因子分解为 1 加

254
00:19:06,291 --> 00:19:12,429
i 乘以 1 减 i，这样你就可以在两列之间分配复数共轭对。

255
00:19:12,429 --> 00:19:16,572
乍一看，这可能会让 您的选择加倍，具体取决

256
00:19:16,572 --> 00:19:20,911
于您选择如何将这两个高斯素数放置 在列之间。

257
00:19:20,911 --> 00:19:25,830
然而，由于将其中一个乘以 i 会得到另

258
00:19:25,830 --> 00:19:31,977
一个，因此当您在列之间交换它们时，对左列输出的影

259
00:19:31,977 --> 00:19:35,666
响就是将其乘以 i 或负 i。

260
00:19:35,666 --> 00:19:40,674
所以这对于最后一步 来说实际上是多余的，我们取左

261
00:19:40,674 --> 00:19:45,891
列的乘积并选择将其乘以 1、i、负 1 或负 i。

262
00:19:45,891 --> 00:19:53,201
这意味着 2 的因数或 2 的任何幂实际上根本不会改变计数。

263
00:19:53,201 --> 00:19:55,847
它不疼，但没有 帮助。

264
00:19:55,847 --> 00:20:00,831
例如，半径平方根为 5 的圆会命中 8 个格点，如果将

265
00:20:00,831 --> 00:20:05,637
半径增大到平方根 10，也会命中 8 个格点，平方根

266
00:20:05,637 --> 00:20:10,799
20 也 会命中 8 个格点，平方根也是如此共 40 个。

267
00:20:10,799 --> 00:20:13,896
2 的因数 没有什么区别。

268
00:20:13,896 --> 00:20:18,270
现在即将发生的是数论的最佳状 态。

269
00:20:18,270 --> 00:20:23,128
我们有这个复杂的公式告诉我们半径平方根为 n

270
00:20:23,128 --> 00:20:28,620
的圆上有多少个格点，并且它取决于 n 的素因数分解。

271
00:20:28,620 --> 00:20:32,401
为了把它变成更简单的东西，我们可以实际处理的东西，我们

272
00:20:32,401 --> 00:20:35,903
将利用素数的规 律性，即那些大于 4 的倍数 1

273
00:20:35,903 --> 00:20:39,404
的素数分裂成不同的高斯素数因子，而 那些大于 4

274
00:20:39,404 --> 00:20:42,486
的倍数 3 的素数分解为不同的高斯素数因子。

275
00:20:42,486 --> 00:20:43,746
4 不能 分割。

276
00:20:43,746 --> 00:20:47,604
为此，我们引入一个简单的函数，我将用希腊字母

277
00:20:47,604 --> 00:20:49,450
chi 对其进行标记。

278
00:20:49,450 --> 00:20:54,123
对于 1 大于 4 的倍数的输入， chi 的输出为 1。

279
00:20:54,123 --> 00:21:02,769
如果输入 3 大于 4 的倍数，则 chi 的输出为负 1。

280
00:21:02,769 --> 00:21:09,760
然后对于所有偶数，它给出 0。

281
00:21:09,760 --> 00:21:14,665
因此，如果您对自然数评估 chi，它会给出非常好

282
00:21:14,665 --> 00:21:19,775
的循环模式：1, 0，负 1, 0，然后无限重复。

283
00:21:19,775 --> 00:21:23,282
这个循环函数 chi 有一个非

284
00:21:23,282 --> 00:21:27,008
常特殊的性质，就是所谓的乘法函数。

285
00:21:27,008 --> 00:21:31,480
如果您对两个不同的数字进行计算 并将结果相乘，例如

286
00:21:31,480 --> 00:21:35,953
3 的 chi 乘以 5 的 chi，则与您根据这

287
00:21:35,953 --> 00:21:40,770
两个数字的乘积计算 chi 是相同的，在本例中为 15。

288
00:21:40,770 --> 00:21:44,807
同样，5 的卡方乘 以 5 的卡方等于 25 的卡方。

289
00:21:44,807 --> 00:21:50,906
无论你在那里输入哪两个自然 数，这个属性都会成立。

290
00:21:50,906 --> 00:21:53,320
如果你愿意的话，就来尝试一下吧。

291
00:21:53,320 --> 00:21:58,307
因此，对于以这种方式计算格点的核心问题，涉及对数字进

292
00:21:58,307 --> 00:22:03,294
行因式分解，我要做的是写下我们拥有的选择数量，但使用

293
00:22:03,294 --> 00:22:08,097
chi 的方式乍一看似乎更复杂，但是这样做的好处是

294
00:22:08,097 --> 00:22:10,129
平等对待所有主要因素。

295
00:22:10,129 --> 00:22:14,647
对于每个素数幂，例如 5 的立方，您写下的 是 1 的

296
00:22:14,647 --> 00:22:19,487
chi 加 5 的 chi 加 5 的平方加 5 的三次方。

297
00:22:19,487 --> 00:22:23,068
您将 这个素数的所有幂的 chi

298
00:22:23,068 --> 00:22:26,649
值相加，直到因式分解 中显示的值。

299
00:22:26,649 --> 00:22:31,012
在这种情况下，由于 5 是 4 的倍数之上的

300
00:22:31,012 --> 00:22:35,186
1，因此所有这些都只是 1，因此这个总和为

301
00:22:35,186 --> 00:22:39,928
4，这反映了这样一 个事实：5 的立方为您提供了

302
00:22:39,928 --> 00:22:43,912
4 个选项来分配列之间的两个高斯素 因子。

303
00:22:43,912 --> 00:22:47,350
对于像 3 的 4 次方这样的因数，您写下的

304
00:22:47,350 --> 00:22:50,631
内容看起来完全相似，1 的 chi 加上

305
00:22:50,631 --> 00:22:54,537
3 的 chi 一直到 3 的 4 次方 chi。

306
00:22:54,537 --> 00:22:58,539
但在这种情况下，由于 3 的 chi 为负

307
00:22:58,539 --> 00:23:03,996
1，因此该和会振荡，即 1 减 1 加 1 减 1 加 1。

308
00:23:03,996 --> 00:23:08,537
如果它 是偶次幂，例如本例中的 4，则总和为

309
00:23:08,537 --> 00:23:14,066
1，这概括了这样一个 事实：对于如何处理这些不可分割的

310
00:23:14,066 --> 00:23:15,843
3，只有一种选择。

311
00:23:15,843 --> 00:23:18,861
但如果 它是奇数次幂，那么总和就是

312
00:23:18,861 --> 00:23:23,221
0，这表明你完蛋了，你不能放置 那个不可分割的 3。

313
00:23:23,221 --> 00:23:28,391
当你对 2 的幂执行此操作时，看起来就像 1 加 0

314
00:23:28,391 --> 00:23:33,752
加 0 加 0 不断，因为 chi 在偶数上始终为 0。

315
00:23:33,752 --> 00:23:39,327
这反映 了这样一个事实：2 没有帮助，也没有坏处，你总是只

316
00:23:39,327 --> 00:23:41,186
有一个选择来处理它。

317
00:23:41,186 --> 00:23:44,160
和往常一样，我们在前面保留 4

318
00:23:44,160 --> 00:23:48,435
来表示最终选择乘以 1、i、负 1 或负 i。

319
00:23:48,435 --> 00:23:53,567
我们现在 已经接近高潮了，事情开始看起来有条理，所以停

320
00:23:53,567 --> 00:23:57,600
下来思考一下，确保到目前为止一切都感觉良好。

321
00:23:57,600 --> 00:23:59,865
以45号为例。

322
00:23:59,865 --> 00:24:03,758
这家伙因式分解为 3 的平方乘以 5，因此格点

323
00:24:03,758 --> 00:24:07,490
总数的表达式为 4 乘以 1 的卡氏加上 3

324
00:24:07,490 --> 00:24:12,032
的卡氏加上 3 的平方乘以 1 的卡氏加上 5 的卡氏。

325
00:24:12,032 --> 00:24:16,250
您可以将其视为 4 乘以 1 的选择（ 如何处理

326
00:24:16,250 --> 00:24:20,973
3 的乘以 2 的选择）（如何除以 5 的高斯素因数）。

327
00:24:20,973 --> 00:24:27,478
展开这个总和似乎确实很复杂，因为它涉及这些素因

328
00:24:27,478 --> 00:24:31,816
数的所有可能组合，而且确实如此。

329
00:24:31,816 --> 00:24:37,968
然而，由于 chi 是乘法，因此这些组合中的每一个都对应于

330
00:24:37,968 --> 00:24:39,403
45 的除数。

331
00:24:39,403 --> 00:24:42,652
在这种情况下， 我们得到的是 4 乘以

332
00:24:42,652 --> 00:24:46,064
1 的尺加上 3 的尺加上 5 的尺加上

333
00:24:46,064 --> 00:24:49,638
9 的尺加上 15 的 尺加上 45 的尺。

334
00:24:49,638 --> 00:24:53,958
您会注意到，这涵盖了所有能被 45

335
00:24:53,958 --> 00:24:57,318
整除的 数字，一次且仅一次。

336
00:24:57,318 --> 00:25:03,740
对于任何数字都是这 样，45 没有什么特别的。

337
00:25:03,740 --> 00:25:07,361
这对我来说非常有趣，我认为完全出乎意料。

338
00:25:07,361 --> 00:25:14,696
这个计算距 原点距离为 n 的平方根的格点数量的问题涉及将

339
00:25:14,696 --> 00:25:20,320
这个相对简单的函数的值与 n 的所有除数相加。

340
00:25:20,320 --> 00:25:22,935
为了将所有这些结合在一起，请记住我们为什么要这样做。

341
00:25:22,935 --> 00:25:26,685
半径为 r 的大圆内的 格点总数应约为

342
00:25:26,685 --> 00:25:28,936
pi 乘以 r 的平方。

343
00:25:28,936 --> 00:25:32,591
但另一方面， 我们可以通过查看 0 到 r

344
00:25:32,591 --> 00:25:36,412
平方之间的所有数字 n 来计 算这些相同的格点

345
00:25:36,412 --> 00:25:40,566
，并计算有多少个格点距原点距离为 n 的平 方根。

346
00:25:40,566 --> 00:25:44,395
让我们忽略半径为 0 的原点，它不

347
00:25:44,395 --> 00:25:48,650
遵循其余点的模式，并且当我们让 r 向

348
00:25:48,650 --> 00:25:52,480
无穷大增长时，一个小点不会产生影响。

349
00:25:52,480 --> 00:25:56,990
从我们一直在做的所有高斯整数、因式分解和 chi

350
00:25:56,990 --> 00:26:01,320
函数的内容来看，每 个 n 的答案看起来就像将

351
00:26:01,320 --> 00:26:06,010
n 的每个除数上的 chi 值相加，然 后乘以 4。

352
00:26:06,010 --> 00:26:09,295
现在我们就把这 4 个放在角

353
00:26:09,295 --> 00:26:12,800
落里，然后记得稍后再把它带回来。

354
00:26:12,800 --> 00:26:18,658
首先，将这些行中每一行的值相加似乎是超级随机的，对吧？

355
00:26:18,658 --> 00:26:24,278
我 的意思是，具有很多因数的数字有很多约数，而素数

356
00:26:24,278 --> 00:26:29,465
总是只有两个约数，所以最初看起来你必须对素数的

357
00:26:29,465 --> 00:26:34,220
分布有完美的了解才能从中得到任何有用的东西。

358
00:26:34,220 --> 00:26:39,656
但如果你把它们组织成列，这个谜题就会开始拼凑起来。

359
00:26:39,656 --> 00:26:44,442
1 和 r2 之间有多少个以 1 作为约数的数？

360
00:26:44,442 --> 00:26:45,583
他们全部。

361
00:26:45,583 --> 00:26:49,500
所以我们的总和应该包括 r2 乘以 1 的 chi。

362
00:26:49,500 --> 00:26:52,565
其中有多少个以 2 作为约数？

363
00:26:52,565 --> 00:26:54,140
大约有一半。

364
00:26:54,140 --> 00:26:58,078
这样 r2 就超 过了 2 的 chi 的 2 倍。

365
00:26:58,078 --> 00:27:01,960
这些行中大约有三分之一的 chi 为 3，因此我们可以

366
00:27:01,960 --> 00:27:04,871
将 r2 除以 3 的 chi 乘以 3。

367
00:27:04,871 --> 00:27:09,487
请记住，我们是近似值，因为 r2 可 能无法完美地整除

368
00:27:09,487 --> 00:27:13,773
2 或 3，但随着 r 向无穷大增长，这种近似值会

369
00:27:13,773 --> 00:27:14,597
变得更好。

370
00:27:14,597 --> 00:27:22,153
当你继续这样做时，你会得到一个非常有组 织的格点总数表达式。

371
00:27:22,153 --> 00:27:27,987
如果你将 r2 分解出来并带 回需要相乘的

372
00:27:27,987 --> 00:27:34,881
4，那么这意味着这个大圆内的格点总数 大约是 r2

373
00:27:34,881 --> 00:27:38,063
乘以这个总和的 4 倍。

374
00:27:38,063 --> 00:27:43,175
因为 chi 在每个偶数上都是 0，而在奇数上它在

375
00:27:43,175 --> 00:27:47,697
1 和负 1 之间波动，所以这个 和看起来像

376
00:27:47,697 --> 00:27:52,416
1 减 1 第三加上第五减 1 第七，依此类推。

377
00:27:52,416 --> 00:27:54,531
这正是 我们想要的！

378
00:27:54,531 --> 00:27:58,853
我们这里有一个大圆内格点总数的替代表

379
00:27:58,853 --> 00:28:03,857
达式，我们知道它应该约为 pi 乘以 r2。

380
00:28:03,857 --> 00:28:09,761
r 越大，这两个估计就越准确，因此左侧和右

381
00:28:09,761 --> 00:28:14,324
侧之间的百分比误差可以变得任意小。

382
00:28:14,324 --> 00:28:20,680
除以 r 2，这给出了一个应该收敛于 pi 的无穷总和。

383
00:28:20,680 --> 00:28:27,222
请记住 ，我只是认为这真的很酷，这个总和之所以如此

384
00:28:27,222 --> 00:28:32,507
简单，并且需要相对较少的信息来描述，最终

385
00:28:32,507 --> 00:28:37,540
源于素数如何在高斯整数中分解的规则模式。

386
00:28:37,540 --> 00:28:43,934
如果您好奇，数论有两个主要分支：代数数论和 解析数论。

387
00:28:43,934 --> 00:28:48,079
非常宽松地说，前者处理新的数字系统，

388
00:28:48,079 --> 00:28:54,405
比如你和我研究过的高斯整数，等等，后者处理黎曼 zeta

389
00:28:54,405 --> 00:28:58,550
函数或它的近亲 L 函数，涉及乘法函

390
00:28:58,550 --> 00:29:02,913
数，就像我们故事中的中心人物“气”一样。

391
00:29:02,913 --> 00:29:07,486
我们刚刚 走过的路可以瞥见这两个领域的交叉点。

392
00:29:07,486 --> 00:29:10,190
这两个领域都 是相当繁重的领域，

393
00:29:10,190 --> 00:29:12,893
有大量活跃的研究和未解决的问题。

394
00:29:12,893 --> 00:29:14,335
因此 ，如果所有这些感觉像是需要时间在精神

395
00:29:14,335 --> 00:29:15,777
上消化的事情，就像有更多 的模式需要被发现

396
00:29:15,777 --> 00:29:17,220
和理解，那是因为它确实如此，而且确实存在。

