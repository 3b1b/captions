[
 {
  "input": "This is a video I've been excited to make for a while now.",
  "model": "nmt",
  "translatedText": "这是我很高兴制作一段时间的视频。",
  "time_range": [
   0.0,
   5.674090909090909
  ]
 },
 {
  "input": "The story here braids together prime numbers, complex numbers, and pi in a very pleasing trio.",
  "model": "nmt",
  "translatedText": "这里的故事将质数、复数 和圆周率编织成一个非常令人愉快的三重奏。",
  "time_range": [
   5.674090909090909,
   13.306666666666667
  ]
 },
 {
  "input": "Quite often in modern math, especially that which flirts with the Riemann zeta function, these three seemingly unrelated objects show up in unison, and I want to give you a little peek at one instance where this happens, one of the few that doesn't require too heavy a technical background.",
  "model": "nmt",
  "translatedText": "在现代数学中，尤 其是与黎曼 zeta 函数调情的数学中，这三个看似无关的 物体经常同时出现，我想让你看一下发生这种情况的一个例子，这 是少数几个不发生这种情况的例子之一。 要求太重的技术背景。",
  "time_range": [
   13.306666666666667,
   29.48
  ]
 },
 {
  "input": "That's not to say this is easy, in fact this is probably one of the most intricate videos I've ever done, but the culmination is worth it.",
  "model": "nmt",
  "translatedText": "这并不是说这很容易，事实上这可能是我做过的最复杂的 视频之一，但最终的成果是值得的。",
  "time_range": [
   29.48,
   36.37365853658537
  ]
 },
 {
  "input": "What we'll end up with is a formula for pi, a certain alternating infinite sum.",
  "model": "nmt",
  "translatedText": "我们最终得到的是 p i 的公式，即某个交替无穷和。",
  "time_range": [
   36.37365853658537,
   41.57333333333333
  ]
 },
 {
  "input": "This formula is actually written on the mug I'm drinking coffee from right now as I write this.",
  "model": "nmt",
  "translatedText": "这个公式实际上写在我写这 篇文章时我正在喝咖啡的杯子上。",
  "time_range": [
   41.57333333333333,
   47.28423529411764
  ]
 },
 {
  "input": "And a fun but almost certainly apocryphal story is that the beauty of this formula is what inspired Leibniz to quit being a lawyer and instead pursue math.",
  "model": "nmt",
  "translatedText": "一个有趣但几乎可以肯定 是杜撰的故事是，这个公式的美妙之处激励莱布尼茨放弃律师 职业，转而追求数学。",
  "time_range": [
   47.28423529411764,
   56.62095238095239
  ]
 },
 {
  "input": "Whenever you see pi show up in math, there's always going to be a circle hiding somewhere, sometimes very sneakily.",
  "model": "nmt",
  "translatedText": "每当你看到圆周率出现在数学中时，总会有一 个圆圈隐藏在某个地方，有时非常偷偷摸摸。",
  "time_range": [
   56.62095238095239,
   64.01186813186813
  ]
 },
 {
  "input": "So the goal here is not just to discover this sum, but to really understand the circle hiding behind it.",
  "model": "nmt",
  "translatedText": "因此，这里的目标不仅 仅是发现这个总和，而是真正了解隐藏在其背后的圆圈。",
  "time_range": [
   64.01186813186813,
   70.69213483146068
  ]
 },
 {
  "input": "You see, there is another way you can prove the same result that you and I are going to spend some meaningful time building up to, but with just a few lines of calculus.",
  "model": "nmt",
  "translatedText": "你看，还有 另一种方法可以证明你和我将花费一些有意义的时间来获 得的相同结果，但只需几行微积分。",
  "time_range": [
   70.69213483146068,
   79.29422222222222
  ]
 },
 {
  "input": "And this is one of those proofs that leaves you thinking, okay, I suppose that's true, but not really getting a sense for why, or where the hidden circle is.",
  "model": "nmt",
  "translatedText": "这是让你思考的证据 之一，好吧，我想这是真的，但并没有真正理解为什么， 或者隐藏的圆圈在哪里。",
  "time_range": [
   79.29422222222222,
   89.07142857142857
  ]
 },
 {
  "input": "On the path you and I will take, though, what you'll see is that the fundamental truth behind this sum and the circle it hides is a certain regularity in the way that prime numbers behave when you put them inside the complex numbers.",
  "model": "nmt",
  "translatedText": "不过，在你我将要走的道路上 ，你会看到这个和及其隐藏的圆圈背后的基本事实是当 你将素数放入复数中时，素数的行为方式存在一定的 规律性。",
  "time_range": [
   89.07142857142857,
   102.60470588235295
  ]
 },
 {
  "input": "To start the story, imagine yourself with nothing more than a pencil, paper, and a desire to find a formula for computing pi.",
  "model": "nmt",
  "translatedText": "为了开始这个故事，想象一下你自己除了一支铅笔、一张纸之外 什么都没有，并且渴望找到计算 pi 的公式。",
  "time_range": [
   102.60470588235295,
   110.90168674698796
  ]
 },
 {
  "input": "There are countless ways you could approach this, but as a broad outline for the plotline, you'll start by asking how many lattice points of the plane sit inside a big circle.",
  "model": "nmt",
  "translatedText": "有无数种方法可以实 现这一点，但作为情节线的大致轮廓，您将首先询问平面 上有多少个格点位于一个大圆圈内。",
  "time_range": [
   110.90168674698796,
   121.80967032967033
  ]
 },
 {
  "input": "That will lead to asking about how to express numbers as the sum of two squares, which in turn will lead us to factoring integers inside the complex plane.",
  "model": "nmt",
  "translatedText": "这将导致我们询问 如何将数字表示为两个平方和，进而导致我们在复平面 内分解整数。",
  "time_range": [
   121.80967032967033,
   131.8120930232558
  ]
 },
 {
  "input": "From there we'll bring in a special function named chi, which will give us a formula for pi that at first seems to involve a crazy complicated pattern dependent on the distribution of primes, but a slight shift in perspective will simplify it dramatically and expose the ultimate gold nugget.",
  "model": "nmt",
  "translatedText": "从那里我们将引入一个名为 chi 的特 殊函数，它将为我们提供一个 pi 公式，乍一看似乎涉 及一个依赖于素数分布的疯狂复杂模式，但视角的轻微转变 将极大地简化它并揭示终极金块。",
  "time_range": [
   131.8120930232558,
   150.30265060240964
  ]
 },
 {
  "input": "It's a lot, but good math takes time and we'll take it step by step.",
  "model": "nmt",
  "translatedText": "虽然很多，但是好的数学需 要时间，我们会一步一步来。",
  "time_range": [
   150.30265060240964,
   154.87692307692308
  ]
 },
 {
  "input": "When I say lattice point, what I mean is a point AB on the plane where A and B are both integers, a spot where the grid lines cross.",
  "model": "nmt",
  "translatedText": "当我说格子点时，我的意思是平面 上的点AB，其中A和B都是整数，即网格线交叉的点。",
  "time_range": [
   154.87692307692308,
   165.18
  ]
 },
 {
  "input": "If you draw a circle centered at the origin, let's say with radius 10, how many lattice points would you guess are inside that circle?",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   165.18,
   172.99511627906978
  ]
 },
 {
  "input": "Well, there's one lattice point for each unit of area, so the answer should be approximately equal to the area of the circle, pi r squared, which in this case is pi times 10 squared.",
  "model": "nmt",
  "translatedText": "如果您画一个以原点为中心的圆，假设半径为 10， 您猜该圆内有多少个格点？嗯，每个面积单位都有一个格点 ，因此答案应该大约等于圆的面积 pi r 平方，在本例中为 pi 乘以 10 平方。",
  "time_range": [
   172.99511627906978,
   185.1493181818182
  ]
 },
 {
  "input": "And if it was a really big circle, like radius 1 million, you would expect this to be a much more accurate estimate, in the sense that the percent error between the estimate pi r squared and the actual count of lattice points should get smaller.",
  "model": "nmt",
  "translatedText": "如果它是一个非常大的圆，例如半 径 100 万，您会期望这是一个更准确的估计，从某种 意义上说，估计 pi r 平方与实际格点计数之间的百分 比误差应该变得更小。",
  "time_range": [
   185.1493181818182,
   198.2923076923077
  ]
 },
 {
  "input": "What we're going to try to do is find a second way to answer this same question, how many lattice points are inside the circle, because that can lead to another way to express the area of a circle, and hence another way to express pi.",
  "model": "nmt",
  "translatedText": "我们要做的是找到第二种方法来回答 同一个问题，即圆内有多少个格点，因为这可以导致另 一种表达圆面积的方法，从而产生另一种表达圆面积的方 法圆周率。",
  "time_range": [
   198.2923076923077,
   212.18035087719298
  ]
 },
 {
  "input": "And so you play, and you wonder, and maybe, especially if you just watched a certain calculus video, you might try looking through every possible ring that a lattice point could sit on.",
  "model": "nmt",
  "translatedText": "所以你玩的时候，你想知道，也许，特 别是如果你刚刚观看了某个微积分视频，你可能 会尝试查看晶格点可能位于的每个可能的环。",
  "time_range": [
   212.18035087719298,
   224.8
  ]
 },
 {
  "input": "Now if you think about it, for each one of these lattice points AB, its distance from the origin is the square root of a squared plus b squared.",
  "model": "nmt",
  "translatedText": "现在如果你想一想，对于这些格点AB中的每一个，它到原点的 距离都是a的平方加上b的平方的平方根。",
  "time_range": [
   224.8,
   232.27428571428572
  ]
 },
 {
  "input": "And since a and b are both integers, a squared plus b squared is also some integer, so you only have to consider rings whose radii are the square roots of some whole number.",
  "model": "nmt",
  "translatedText": "由于a和b都是整 数，a的平方加上b的平方也是某个整数，所以你只需 要考虑半径是某个整数的平方根的环。",
  "time_range": [
   232.27428571428572,
   243.89190476190473
  ]
 },
 {
  "input": "A radius of 0 just gives you that single origin point.",
  "model": "nmt",
  "translatedText": "半径 0 只给 出单个原点。",
  "time_range": [
   243.89190476190473,
   248.13333333333333
  ]
 },
 {
  "input": "If you look at the radius 1, that hits 4 lattice points.",
  "model": "nmt",
  "translatedText": "如果观察半径 1，就会碰到 4 个晶格点。",
  "time_range": [
   248.13333333333333,
   252.64
  ]
 },
 {
  "input": "Radius square root of 2, well that also hits 4 lattice points.",
  "model": "nmt",
  "translatedText": "半径为 2 的平方根，同样命中 4 个格点。",
  "time_range": [
   252.64,
   257.14
  ]
 },
 {
  "input": "Radius square root of 3 doesn't actually hit anything.",
  "model": "nmt",
  "translatedText": "半径 3 的平方根实际上并没有击中任何物体。",
  "time_range": [
   257.14,
   259.88
  ]
 },
 {
  "input": "Square root of 4 again hits 4 lattice points.",
  "model": "nmt",
  "translatedText": "4 的平方根再次击中 4 个格点。",
  "time_range": [
   259.88,
   262.68372093023254
  ]
 },
 {
  "input": "A radius square root of 5 actually hits 8 lattice points.",
  "model": "nmt",
  "translatedText": "5 的半径平方根实际上击中了 8 个格点。",
  "time_range": [
   262.68372093023254,
   266.536
  ]
 },
 {
  "input": "And what we want is a systematic way to count how many lattice points are on a given one of these rings, a given distance from the origin, and then tally them all up.",
  "model": "nmt",
  "translatedText": "我们想要的是一种系统的方法来计算给定 的一个环上有多少个格点，距原点的给定距离，然 后将它们全部计数。",
  "time_range": [
   266.536,
   276.98564102564103
  ]
 },
 {
  "input": "And if you pause and try this for a moment, what you'll find is that the pattern seems really chaotic, just very hard to find order under here.",
  "model": "nmt",
  "translatedText": "如果你停下来尝试一下，你会发 现这个模式看起来真的很混乱，只是很难在这里找到 秩序。",
  "time_range": [
   276.98564102564103,
   285.14666666666665
  ]
 },
 {
  "input": "And that's a good sign that some very interesting math is about to come into play.",
  "model": "nmt",
  "translatedText": "这是一个好兆头，表明一些非常有趣的数 学即将发挥作用。",
  "time_range": [
   285.14666666666665,
   289.95915492957744
  ]
 },
 {
  "input": "In fact, as you'll see, this pattern is rooted in the distribution of primes.",
  "model": "nmt",
  "translatedText": "事实上，正如您将看到的，这种 模式植根于素数的分布。",
  "time_range": [
   289.95915492957744,
   295.2969620253165
  ]
 },
 {
  "input": "As an example, let's look at the ring with radius square root of 25.",
  "model": "nmt",
  "translatedText": "作为一个例子，我们来看一下半径平 方根为 25 的环。",
  "time_range": [
   295.2969620253165,
   300.1647058823529
  ]
 },
 {
  "input": "It hits the point 5,0, since 5 squared plus 0 squared is 25.",
  "model": "nmt",
  "translatedText": "它达到点 5,0，因为 5 的平方加 0 的 平方是 25。",
  "time_range": [
   300.1647058823529,
   305.24625
  ]
 },
 {
  "input": "It also hits 4,3, since 4 squared plus 3 squared gives 25.",
  "model": "nmt",
  "translatedText": "它也达到 4,3，因为 4 的平方加 3 的平方得 到 25。",
  "time_range": [
   305.24625,
   311.0314893617021
  ]
 },
 {
  "input": "And likewise it hits 3,4, and also 0,5.",
  "model": "nmt",
  "translatedText": "同样，它达到 3,4，也达到 0,5。",
  "time_range": [
   311.0314893617021,
   318.78
  ]
 },
 {
  "input": "And what's really happening here is that you're counting how many pairs of integers, a,b, have the property that a squared plus b squared equals 25.",
  "model": "nmt",
  "translatedText": "这里真正发生的是，您正在计算有多少对整数 a、b 具有 a 的平方加 b 的平方等于 25 的属性。",
  "time_range": [
   318.78,
   328.6
  ]
 },
 {
  "input": "And looking at this circle, it looks like there's a total of 12 of them.",
  "model": "nmt",
  "translatedText": "而看这个圆圈，一共有十二个。",
  "time_range": [
   328.6,
   332.88
  ]
 },
 {
  "input": "As another example, take a look at the ring with radius square root of 11.",
  "model": "nmt",
  "translatedText": "再举一个例子，看一下半径平方根为 11 的环。",
  "time_range": [
   332.88,
   336.76
  ]
 },
 {
  "input": "It doesn't hit any lattice points, and that corresponds to the fact that you cannot find two integers whose squares add up to 11.",
  "model": "nmt",
  "translatedText": "它没有击中任何格点，这对应于你找不到两个平 方加起来为 11 的整数这一事实。",
  "time_range": [
   336.76,
   347.4547826086956
  ]
 },
 {
  "input": "Try it.",
  "model": "nmt",
  "translatedText": "尝试一下。",
  "time_range": [
   347.4547826086956,
   349.0
  ]
 },
 {
  "input": "Many times in math, when you see a question that has to do with the 2d plane, it can be surprisingly fruitful to just ask what it looks like when you think of this plane as the set of all complex numbers.",
  "model": "nmt",
  "translatedText": "很多时候，在数学中，当你看到一个与二维平面有关的问题时，只要问 一下当你把这个平面想象成所有复数的集合时它看起来是什么样子， 就会出人意料地富有成效。",
  "time_range": [
   349.0,
   359.552
  ]
 },
 {
  "input": "So instead of this lattice point here as the pair of integer coordinates, 3,4, instead think of it as the single complex number, 3 plus 4i.",
  "model": "nmt",
  "translatedText": "因此，不要将此格点视为一对整 数坐标 3,4，而是将其视为单个复数 3 加 4i。",
  "time_range": [
   359.552,
   369.0333333333333
  ]
 },
 {
  "input": "That way, another way to think about the sum of the squares of its coordinates, 3 squared plus 4 squared, is to multiply this number by 3 minus 4i.",
  "model": "nmt",
  "translatedText": "这样，考虑坐标平方和（3 平方加 4 平方）的另一种方法就是将该数字乘以 3 减 4i。",
  "time_range": [
   369.0333333333333,
   379.3542857142857
  ]
 },
 {
  "input": "This is called its complex conjugate, it's what you get by reflecting over the real axis, replacing i with negative i.",
  "model": "nmt",
  "translatedText": "这称为复共轭，它是通过在实轴 上反射、用负 i 替换 i 得到的。",
  "time_range": [
   379.3542857142857,
   388.36
  ]
 },
 {
  "input": "And this might seem like a strange step if you don't have much of a history with complex numbers, but describing this distance as a product can be unexpectedly useful.",
  "model": "nmt",
  "translatedText": "如果您没有太多关于复数的历史，这可能看起来是一个奇怪的步 骤，但是将这个距离描述为一个乘积可能会出乎意料地有用。",
  "time_range": [
   388.36,
   397.82
  ]
 },
 {
  "input": "It turns our question into a factoring problem, which is ultimately why patterns among prime numbers will come into play.",
  "model": "nmt",
  "translatedText": "它将我们的问题变成了因式分解问题，这就是素数之间的模式最 终发挥作用的原因。",
  "time_range": [
   397.82,
   404.14320000000004
  ]
 },
 {
  "input": "Algebraically, this relation is straightforward enough to verify.",
  "model": "nmt",
  "translatedText": "从代数上来说，这个关系很简单，足 以验证。",
  "time_range": [
   404.14320000000004,
   408.627619047619
  ]
 },
 {
  "input": "You get a 3 squared, and then the 3 times minus 4i cancels out with the 4i times 3, and then you have negative 4i squared, which because i squared is negative 1, becomes plus 4 squared.",
  "model": "nmt",
  "translatedText": "你得到一个 3 的平方，然后 3 乘以负 4i 与 4i 乘 以 3 相抵消，然后你得到负 4i 的平方，因为 i 的平方是负 1，所 以变成了正 4 的平方。",
  "time_range": [
   408.627619047619,
   422.8785915492958
  ]
 },
 {
  "input": "This is also quite nice to see geometrically, and if you're a little rusty with how complex multiplication works, I do have another video that goes more into detail about why complex multiplication looks the way it does.",
  "model": "nmt",
  "translatedText": "从几何角度来看，这也很不错，如果 您对复杂乘法的工作原理有点生疏，我确实有另一个视 频更详细地介绍了为什么复杂乘法看起来像它的样子。",
  "time_range": [
   422.8785915492958,
   435.98
  ]
 },
 {
  "input": "The way you might think about a case like this is that the number 3 plus 4i has a magnitude of 5 and some angle off the horizontal, and what it means to multiply it by 3 minus 4i is to rotate by that same angle in the opposite direction, putting it on the positive real axis, and then to stretch out by a factor of 5, which in this case lands you on the output 25, the square of the magnitude.",
  "model": "nmt",
  "translatedText": "您可能会想到这样的情况：数字 3 加 4i 的大小 为 5，并且与水平面有一定角度，将其乘以 3 减 4i 意味着以相反的方向旋转相同的角度方向，将其 放在正实轴上，然后拉伸 5 倍，在本例中，输出为 25，即幅度的平方。",
  "time_range": [
   435.98,
   460.9039024390245
  ]
 },
 {
  "input": "The collection of all these lattice points, a plus bi, where a and b are integers, has a special name, they're called the Gaussian integers, named after Martin Sheen.",
  "model": "nmt",
  "translatedText": "所有这些格点的集合，a加bi， 其中a和b是整数，有一个特殊的名字，它们被称为高斯整数 ，以马丁·辛的名字命名。",
  "time_range": [
   460.9039024390245,
   473.6863157894736
  ]
 },
 {
  "input": "Geometrically, you'll still be asking the same question, how many of these lattice points, Gaussian integers, are a given distance away from the origin, like square root of 25?",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   473.6863157894736,
   484.0869879518072
  ]
 },
 {
  "input": "But we'll be phrasing it in a slightly more algebraic way, how many Gaussian integers have the property that multiplying by their complex conjugate gives you 25?",
  "model": "nmt",
  "translatedText": "从几何角度来看，您仍然会问同样 的问题，这些格点（高斯整数）中有多少距离原点给定距离（ 例如 25 的平方根）？但我们会用更代数的方式 来表述，有多少个高斯整数具有乘以复共轭得到 25 的性质？这可能看起来不必要地复杂， 但它是理解距原点给定距离有多少格点的看似 随机模式的关键。",
  "time_range": [
   484.0869879518072,
   495.18000000000006
  ]
 },
 {
  "input": "This might seem needlessly complex, but it's the key to understanding the seemingly random pattern for how many lattice points are a given distance away from the origin.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   495.18000000000006,
   506.1817721518987
  ]
 },
 {
  "input": "To see why, we first need to understand how numbers factor inside the Gaussian integers.",
  "model": "nmt",
  "translatedText": "要了解原因，我们首先需要了解数字 如何在高斯整数中进行分解。",
  "time_range": [
   506.1817721518987,
   512.3444444444444
  ]
 },
 {
  "input": "As a refresher, among ordinary integers, every number can be factored as some unique collection of prime numbers.",
  "model": "nmt",
  "translatedText": "回顾一下，在普通整数中，每个 数字都可以分解为一些唯一的素数集合。",
  "time_range": [
   512.3444444444444,
   522.1555555555556
  ]
 },
 {
  "input": "For example, 2250 can be factored as 2 times 3 squared times 5 cubed, and there is no other collection of prime numbers that also multiplies to make 2250.",
  "model": "nmt",
  "translatedText": "例如，2250 可以 因式分解为 2 乘以 3 的平方乘以 5 的立方，并且没有其他素数 集合也可以相乘得到 2250。",
  "time_range": [
   522.1555555555556,
   533.8938461538462
  ]
 },
 {
  "input": "Unless you let negative numbers into the picture, in which case you could just make some of the primes in this factorization negative.",
  "model": "nmt",
  "translatedText": "除非你让负数进入图片，在这种 情况下，你可以将这个因式分解中的一些素数设为负数。",
  "time_range": [
   533.8938461538462,
   543.68
  ]
 },
 {
  "input": "So really, within the integers, factorization is not perfectly unique, it's almost unique, with the exception that you can get a different looking product by multiplying some of the factors by negative 1.",
  "model": "nmt",
  "translatedText": "所以实际上，在整数中，因式分解并不是完全唯一的，它几乎 是唯一的，除了您可以通过将某些因数乘以负 1 来获得看 起来不同的乘积。",
  "time_range": [
   543.68,
   555.8918181818182
  ]
 },
 {
  "input": "The reason I bring that up is that factoring works very similarly inside the Gaussian integers.",
  "model": "nmt",
  "translatedText": "我提出这一点的原因是，因式分解在高斯 整数中的工作原理非常相似。",
  "time_range": [
   555.8918181818182,
   563.5669565217391
  ]
 },
 {
  "input": "Some numbers, like 5, can be factored into smaller Gaussian integers, which in this case is 2 plus i times 2 minus i.",
  "model": "nmt",
  "translatedText": "有些数字（例如 5）可以分解为更 小的高斯整数，在本例中为 2 加 i 乘以 2 减 i。",
  "time_range": [
   563.5669565217391,
   572.7335632183908
  ]
 },
 {
  "input": "This Gaussian integer, 2 plus i, cannot be factored into anything smaller, so we call it a Gaussian prime.",
  "model": "nmt",
  "translatedText": "这个高斯整数 2 加 i 不能因式分解为任何更小的值，因此我们将其称为高斯素数。",
  "time_range": [
   572.7335632183908,
   579.9732584269664
  ]
 },
 {
  "input": "Again, this factorization is almost unique, but this time not only can you multiply each one of those factors by negative 1 to get a factorization that looks different, you can also be extra sneaky and multiply one of these factors by i, and the other one by negative i.",
  "model": "nmt",
  "translatedText": "同样，这个因式分解几乎是唯一的，但这一次你不仅可以将这些 因数中的每一个乘以负 1 以获得看起来不同的因式分解，你 还可以更加狡猾地将这些因数之一乘以 i，然后将另一个乘以负 岛一号。",
  "time_range": [
   579.9732584269664,
   600.5059770114943
  ]
 },
 {
  "input": "This will give you a different way to factor 5 into two distinct Gaussian primes.",
  "model": "nmt",
  "translatedText": "这将为您提供一种不同的方法，将 5 分解为两个不同的高斯素 数。",
  "time_range": [
   600.5059770114943,
   607.5742857142858
  ]
 },
 {
  "input": "But other than the things you can get by multiplying some of these factors by negative 1, or i, or negative i, factorization within the Gaussian integers is unique.",
  "model": "nmt",
  "translatedText": "但是，除了将这些因子中的一些因子乘以负 1 或 i 或负 i 可以获得的结果之外，高斯整数内的因式分解是独一无二的。",
  "time_range": [
   607.5742857142858,
   620.18
  ]
 },
 {
  "input": "And if you can figure out how ordinary prime numbers factor inside the Gaussian integers, that will be enough to tell us how any other natural number factors inside these Gaussian integers.",
  "model": "nmt",
  "translatedText": "如果你能弄清楚普通素数如何因式分解高斯整数，那就 足以告诉我们任何其他自然数如何因式分解这些高斯整 数。",
  "time_range": [
   620.18,
   630.5380487804878
  ]
 },
 {
  "input": "And so here we pull in a crucial and pretty surprising fact.",
  "model": "nmt",
  "translatedText": "因此，我们在这里提出了一个至关重要且相当令人惊讶的事实。",
  "time_range": [
   630.5380487804878,
   635.3234146341464
  ]
 },
 {
  "input": "Prime numbers that are one above a multiple of 4, like 5, or 13, or 17, can always be factored into exactly two distinct Gaussian primes.",
  "model": "nmt",
  "translatedText": "大于 4 的倍数的素数（例如 5、13 或 17）始终可以因式分解 为两个不同的高斯素数。",
  "time_range": [
   635.3234146341464,
   646.0424096385543
  ]
 },
 {
  "input": "This corresponds with the fact that rings with a radius equal to the square root of one of these prime numbers always hit some lattice points.",
  "model": "nmt",
  "translatedText": "这与半径等于这些素数之一 的平方根的环总是击中某些格点的事实相对应。",
  "time_range": [
   646.0424096385543,
   654.3807407407406
  ]
 },
 {
  "input": "In fact, they always hit exactly 8 lattice points, as you'll see in just a moment.",
  "model": "nmt",
  "translatedText": "事实上，它们总是恰好命中 8 个格点，稍后您就会看到。",
  "time_range": [
   654.3807407407406,
   659.1227586206896
  ]
 },
 {
  "input": "On the other hand, prime numbers that are 3 above a multiple of 4, like 3, or 7, or 11, cannot be factored further inside the Gaussian integers.",
  "model": "nmt",
  "translatedText": "另一方面，大于 4 的倍数 3 的素数（例如 3、7 或 11）不能在高斯整数内进一步分解。",
  "time_range": [
   659.1227586206896,
   670.6285057471264
  ]
 },
 {
  "input": "Not only are they primes in the normal numbers, but they're also Gaussian primes, unsplittable even when i is in the picture.",
  "model": "nmt",
  "translatedText": "它们不仅是普通 数中的素数，而且还是高斯素数，即使 i 在图中也不 可分割。",
  "time_range": [
   670.6285057471264,
   678.2170114942529
  ]
 },
 {
  "input": "This corresponds with the fact that a ring whose radius is the square root of one of those primes will never hit any lattice points.",
  "model": "nmt",
  "translatedText": "这对应于这样一个事实：半径为这些素 数之一的平方根的环永远不会碰到任何格点。",
  "time_range": [
   678.2170114942529,
   689.24
  ]
 },
 {
  "input": "This pattern right here is the regularity within prime numbers that we're going to ultimately exploit.",
  "model": "nmt",
  "translatedText": "这里的模式就是我们最终要利用的素数内的规 律性。",
  "time_range": [
   689.24,
   699.056
  ]
 },
 {
  "input": "In a later video I might explain why on earth this is true, why a prime number's remainder when divided by 4 has anything to do with whether or not it factors inside the Gaussian integers, or said differently, whether or not it can be expressed as the sum of two squares.",
  "model": "nmt",
  "translatedText": "在后面的视频中，我可能会解释为什么这是 真的，为什么素数除以 4 时的余数与它是否包含 高斯整数有关，或者换句话说，是否可以表示为两个 平方和。",
  "time_range": [
   699.056,
   715.2644705882353
  ]
 },
 {
  "input": "But here, and now, we'll just have to take it as a given.",
  "model": "nmt",
  "translatedText": "但此时此地，我们只能将其视为理所当然。",
  "time_range": [
   715.2644705882353,
   719.395294117647
  ]
 },
 {
  "input": "The prime number 2, by the way, is a little special, because it does factor, you can write it as 1 plus i times 1 minus i, but these two Gaussian primes are a 90 degree rotation away from each other, so you can multiply one of them by i to get the other.",
  "model": "nmt",
  "translatedText": "顺便说一 句，素数 2 有点特殊，因为它确实因式分解，你可以把它写成 1 加 i 乘以 1 减 i，但这两个高斯素数彼此旋转 90 度 ，所以你可以其中一个乘以 i 即可得到另一个。",
  "time_range": [
   719.395294117647,
   736.0995454545455
  ]
 },
 {
  "input": "And that fact is going to make us want to treat the prime number 2 a little bit differently for where all of this stuff is going, so just keep that in the back of your mind.",
  "model": "nmt",
  "translatedText": "这一事实将使 我们想要以稍微不同的方式对待素数 2，以了 解所有这些东西的走向，所以请记住这一点。",
  "time_range": [
   736.0995454545455,
   745.92
  ]
 },
 {
  "input": "Remember, our goal here is to count how many lattice points are a given distance away from the origin, and doing this systematically for all distances square root of n can lead us to a formula for pi.",
  "model": "nmt",
  "translatedText": "请记住，我们的目标是计算距原点给定距离有多少格点，并且 对所有距离 n 的平方根系统地执行此操作可以得出 p i 的公式。",
  "time_range": [
   745.92,
   757.9000000000001
  ]
 },
 {
  "input": "And counting the number of lattice points with a given magnitude, like square root of 25, is the same as asking how many Gaussian integers have the special property that multiplying them by their complex conjugate gives you 25.",
  "model": "nmt",
  "translatedText": "计算给定大小（例如 25 的平方根 ）的格点数量，与询问有多少个高斯整数具有特 殊性质（将它们乘以复共轭得到 25）相同。",
  "time_range": [
   757.9000000000001,
   774.08
  ]
 },
 {
  "input": "So here's the recipe for finding all Gaussian integers that have this property.",
  "model": "nmt",
  "translatedText": "因此，这是查找具有此属性的所有高斯整数的方法。",
  "time_range": [
   774.08,
   779.04
  ]
 },
 {
  "input": "Step 1, factor 25, which inside the ordinary integers looks like 5 squared, but since 5 factors even further, as 2 plus i times 2 minus i, 25 breaks down as these four Gaussian primes.",
  "model": "nmt",
  "translatedText": "步骤 1，因式 25，在普通整数中看起来像 5 的平方，但由于 5 的 因式更进一步，如 2 加 i 乘以 2 减 i，25 分解为这四个高 斯素数。",
  "time_range": [
   779.04,
   792.505
  ]
 },
 {
  "input": "Step 2, organize these into two different columns, with conjugate pairs sitting right next to each other.",
  "model": "nmt",
  "translatedText": "第 2 步，将它们组织成两 个不同的列，共轭对彼此相邻。",
  "time_range": [
   792.505,
   800.44
  ]
 },
 {
  "input": "Once you do that, multiply what's in each column, and you'll come out with two different Gaussian integers on the bottom.",
  "model": "nmt",
  "translatedText": "一旦你这样做了，将每列中的内容相乘，你就会在底部得到 两个不同的高斯整数。",
  "time_range": [
   800.44,
   806.8920512820512
  ]
 },
 {
  "input": "Because everything on the right is a conjugate with everything on the left, what comes out is a complex conjugate pair which multiplies to 25.",
  "model": "nmt",
  "translatedText": "因为右边的所有内容都与左边的所 有内容共轭，所以结果是一个乘以 25 的复共轭 对。",
  "time_range": [
   806.8920512820512,
   816.1504347826087
  ]
 },
 {
  "input": "Picking an arbitrary standard, let's say that the product from the left column is the output of our recipe.",
  "model": "nmt",
  "translatedText": "选择任意标准，假设左列中 的产品是我们配方的输出。",
  "time_range": [
   816.1504347826087,
   824.08
  ]
 },
 {
  "input": "Notice, there are three choices for how you can divvy up the primes that can affect this output.",
  "model": "nmt",
  "translatedText": "请注意，对于如何分配可能影响此输出的素数，有三种选 择。",
  "time_range": [
   824.08,
   830.2489795918367
  ]
 },
 {
  "input": "Pictured here, both copies of 2 plus i are in the left column, and that gives us the product 3 plus 4i.",
  "model": "nmt",
  "translatedText": "如图所示，2 加 i 的两个副本都在左 列中，这样我们就得到了乘积 3 加 4i。",
  "time_range": [
   830.2489795918367,
   838.5
  ]
 },
 {
  "input": "You could also have chosen to have only one copy of 2 plus i in the left column, in which case the product would be 5.",
  "model": "nmt",
  "translatedText": "您也可以选择在左列中仅保留一份 2 加 i，在这种情况 下，乘积将为 5。",
  "time_range": [
   838.5,
   845.0699999999999
  ]
 },
 {
  "input": "Or you could have both copies of 2 plus i in the right column, in which case the output of our recipe would have been 3 minus 4i.",
  "model": "nmt",
  "translatedText": "或者，您可以在右列中同时拥有 2 加 i 的两个副本，在这种情况下，我们的配方的输出将是 3 减 4i。",
  "time_range": [
   845.0699999999999,
   856.2
  ]
 },
 {
  "input": "And those three possible outputs are all different lattice points on a circle with radius square root of 25.",
  "model": "nmt",
  "translatedText": "这三个可能的输出都是半径平方根为 25 的圆上的不 同格点。",
  "time_range": [
   856.2,
   862.6309090909092
  ]
 },
 {
  "input": "But why does this recipe not yet capture all 12 of the lattice points?",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   862.6309090909092,
   869.2285714285715
  ]
 },
 {
  "input": "Remember how I mentioned that a factorization into Gaussian primes can look different if you multiply some of them by i, or –1, or –i?",
  "model": "nmt",
  "translatedText": "但为什么这个配方还没有捕获所有 1 2 个格点呢？还记得我曾提到过，如果将其中一些素数乘以 i、–1 或 –i，则分解为高斯素数可能看起来会有所不同吗 ？在这种情况下，您可以以不同的方式编写 25 的因式分解，也许 将其中一个 5 分解为 –1 加 2i 乘以 –1 减 2i。",
  "time_range": [
   869.2285714285715,
   878.1152
  ]
 },
 {
  "input": "In this case, you could write the factorization of 25 differently, maybe splitting up one of those 5s as –1 plus 2i times –1 minus 2i.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   878.1152,
   887.86
  ]
 },
 {
  "input": "And if you do that, running through the same recipe, it can affect the result, you'll get a different product out of that left column.",
  "model": "nmt",
  "translatedText": "如果你这样做，运行相同的配方，它会影 响结果，你会从左列中得到不同的产品。",
  "time_range": [
   887.86,
   896.08
  ]
 },
 {
  "input": "The only effect this will have is to multiply the total output by i, or –1, or –i.",
  "model": "nmt",
  "translatedText": "唯一的效果是将总输出乘以 i、或 –1、或 –i。",
  "time_range": [
   896.08,
   903.96
  ]
 },
 {
  "input": "So as a final step for our recipe, let's say you have to make one of four choices.",
  "model": "nmt",
  "translatedText": "因此，作为我们食谱的最后一步，假设您必须做出四个选择之一。",
  "time_range": [
   903.96,
   908.92
  ]
 },
 {
  "input": "Take that product from the left column, and choose to multiply it by 1, i, –1, or –i, corresponding to rotations that are some multiple of 90 degrees.",
  "model": "nmt",
  "translatedText": "从左列中取出该乘积，然后选择将其乘以 1、i、– 1 或 –i，对应于 90 度的某个倍数的旋转。",
  "time_range": [
   908.92,
   922.0
  ]
 },
 {
  "input": "That will account for all 12 different ways of constructing a Gaussian integer whose product with its own conjugate is 25.",
  "model": "nmt",
  "translatedText": "这将解释构造高斯整数的所有 12 种不同方法，该整数与其自 身共轭的乘积为 25。",
  "time_range": [
   922.0,
   928.9757746478874
  ]
 },
 {
  "input": "This process is a little complicated, so I think the best way to get a feel for it is to try it out with more examples.",
  "model": "nmt",
  "translatedText": "这个过程有点复杂，所以我 认为感受它的最好方法是尝试更多的例子。",
  "time_range": [
   928.9757746478874,
   936.0
  ]
 },
 {
  "input": "Let's say instead we were looking at 125, which is 5 cubed.",
  "model": "nmt",
  "translatedText": "假设我们正在查看 125，即 5 的立方。",
  "time_range": [
   936.0,
   940.72
  ]
 },
 {
  "input": "In that case, we would have four different choices for how to divvy up the prime conjugate pairs into these two columns.",
  "model": "nmt",
  "translatedText": "在这种情况下，我们将有四种不同的选择来将素数共轭 对分配到这两列中。",
  "time_range": [
   940.72,
   947.8177777777777
  ]
 },
 {
  "input": "You can either have zero copies of 2 plus i in the left column, one copy in there, two copies in there, or all three of them in the left column.",
  "model": "nmt",
  "translatedText": "您可以在左列中有零个 2 加 i 的副 本，在其中有一个副本，在其中有两个副本，或者在左列中拥有全部 三个副本。",
  "time_range": [
   947.8177777777777,
   959.232
  ]
 },
 {
  "input": "Those four choices, multiplied by the final four choices of multiplying the product from the left column by 1, i, –1, or –i, would suggest that there are a total of 16 lattice points a distance square root of 125 away from the origin.",
  "model": "nmt",
  "translatedText": "这四个选项，乘以左列的乘积乘以 1 、i、–1 或 –i 的最后四个选项，表明 距 125 的距离平方根总共有 16 个格 点。 起源。",
  "time_range": [
   959.232,
   977.5232258064517
  ]
 },
 {
  "input": "Indeed, if you draw that circle out and count, what you'll find is that it hits exactly 16 lattice points.",
  "model": "nmt",
  "translatedText": "事实上，如果你把那个圆画出来并数 一下，你会发现它恰好击中了 16 个格点。",
  "time_range": [
   977.5232258064517,
   987.1
  ]
 },
 {
  "input": "But what if you introduce a factor like 3, which doesn't break down as the product of two conjugate Gaussian primes?",
  "model": "nmt",
  "translatedText": "但是，如果引入一个像 3 这样的因子，它不会分解为两个 共轭高斯素数的乘积呢？好吧，这真的把整个系统搞乱了。",
  "time_range": [
   987.1,
   993.7232
  ]
 },
 {
  "input": "Well that really mucks up the whole system.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   993.7232,
   997.06
  ]
 },
 {
  "input": "When you're divvying up the primes between the two columns, there's no way you can split up this 3.",
  "model": "nmt",
  "translatedText": "当你在两列之间分配素数时，你无法将这 3 列分开。",
  "time_range": [
   997.06,
   1002.0
  ]
 },
 {
  "input": "No matter where you put it, it leaves the columns imbalanced.",
  "model": "nmt",
  "translatedText": "无论你把它放在哪里，它都会使柱 子不平衡。",
  "time_range": [
   1002.0,
   1005.338
  ]
 },
 {
  "input": "And what that means is that when you take the product of all the numbers in each column, you're not going to end up with a conjugate pair.",
  "model": "nmt",
  "translatedText": "这意味着，当您对每列中的所 有数字求积时，您最终不会得到共轭对。",
  "time_range": [
   1005.338,
   1013.0533333333334
  ]
 },
 {
  "input": "So for a number like this, 3 times 5 cubed, which is 375, there's actually no lattice point you'll hit, no Gaussian integer whose product with its own conjugate gives you 375.",
  "model": "nmt",
  "translatedText": "因此，对于像这样的数字，3 乘以 5 的立方，即 3 75，实际上没有任何格点可以命中，也没有高斯整数与其自身 共轭的乘积可以得到 375。",
  "time_range": [
   1013.0533333333334,
   1026.861395348837
  ]
 },
 {
  "input": "However, if you introduce a second factor of 3, then you have an option.",
  "model": "nmt",
  "translatedText": "但是，如果您引入第二个因子 3 ，那么您就有一个选择。",
  "time_range": [
   1026.861395348837,
   1032.4969863013698
  ]
 },
 {
  "input": "You can throw one 3 in the left column, and the other 3 in the right column.",
  "model": "nmt",
  "translatedText": "您可以在左列中投掷一个 3，在右 列中投掷另外 3 个。",
  "time_range": [
   1032.4969863013698,
   1037.8443243243241
  ]
 },
 {
  "input": "Since 3 is its own complex conjugate, this leaves things balanced, in the sense that the products of the left and right columns will indeed be a complex conjugate pair.",
  "model": "nmt",
  "translatedText": "由于 3 是它自己的复共轭 ，这使得事情保持平衡，因为左列和右列的乘积 确实将是复共轭对。",
  "time_range": [
   1037.8443243243241,
   1048.489268292683
  ]
 },
 {
  "input": "But it doesn't add any new options.",
  "model": "nmt",
  "translatedText": "但它没有添加任何新选项。",
  "time_range": [
   1048.489268292683,
   1051.4770731707317
  ]
 },
 {
  "input": "There's still going to be a total of 4 choices for how to divvy up those factors of 5, multiplied by the final 4 choices of multiplying by 1, i, negative 1, or negative i.",
  "model": "nmt",
  "translatedText": "对于如 何除以 5 的因子，乘以乘以 1、i、负 1 或负 i 的最后 4 个选择，仍然总共有 4 个选择。",
  "time_range": [
   1051.4770731707317,
   1062.48
  ]
 },
 {
  "input": "So just like the square root of 125 circle, this guy is also going to end up hitting exactly 16 lattice points.",
  "model": "nmt",
  "translatedText": "所以就像 125 圆的平方根一样，这个家伙最终也会恰好击 中 16 个格点。",
  "time_range": [
   1062.48,
   1070.175
  ]
 },
 {
  "input": "Let's just sum up where we are.",
  "model": "nmt",
  "translatedText": "让我们总结一下我们现在的情况。",
  "time_range": [
   1070.175,
   1073.12
  ]
 },
 {
  "input": "When you're counting up how many lattice points lie on a circle with a radius square root of n, the first step is to factor n.",
  "model": "nmt",
  "translatedText": "当您计算半径平方根为 n 的圆上有多少个格点时，第一步 是对 n 进行因式分解。",
  "time_range": [
   1073.12,
   1080.0933333333332
  ]
 },
 {
  "input": "And for prime numbers like 5, or 13, or 17, which factor further into a complex conjugate pair of Gaussian primes, the number of choices they give you will always be one more than the exponent that shows up with that factor.",
  "model": "nmt",
  "translatedText": "对于像 5、13 或 17 这样的素数，它们进一步分解成复数共轭高斯素数对， 它们给你的选择数量总是比该因子显示的指数多 1。",
  "time_range": [
   1080.0933333333332,
   1097.24
  ]
 },
 {
  "input": "On the other hand, for prime factors like 3, or 7, or 11, which are already Gaussian primes and cannot be split, if they show up with an even power, you have one and only one choice with what to do with them.",
  "model": "nmt",
  "translatedText": "另一方面，对于像 3、7 或 11 这样的素数因子，它们已 经是高斯素数并且不能被分割，如果它们以偶次幂出现，那么您就 只有一个选择来处理它们。",
  "time_range": [
   1097.24,
   1109.2977777777778
  ]
 },
 {
  "input": "But if it's an odd exponent, you're screwed, and you have zero choices.",
  "model": "nmt",
  "translatedText": "但如果它是一个奇怪的指数，你就完蛋 了，你的选择为零。",
  "time_range": [
   1109.2977777777778,
   1113.2795238095239
  ]
 },
 {
  "input": "And always, no matter what, you have those final 4 choices at the end.",
  "model": "nmt",
  "translatedText": "无论如何，最后你总 会有最后 4 个选择。",
  "time_range": [
   1113.2795238095239,
   1120.28
  ]
 },
 {
  "input": "By the way, I do think this process right here is the most complicated part of the video.",
  "model": "nmt",
  "translatedText": "顺便说一句，我确实认为这里的这个过程是视频中最复杂的部分。",
  "time_range": [
   1120.28,
   1125.36
  ]
 },
 {
  "input": "It took me a couple times to think through that yes, this is a valid way to count lattice points, so don't be shy if you want to pause and scribble things down to get a feel for it.",
  "model": "nmt",
  "translatedText": "我花了好几次时间才想通，是的，这是 计算格点的有效方法，所以如果您想暂 停并记下内容来感受它，请不要害羞。",
  "time_range": [
   1125.36,
   1134.96
  ]
 },
 {
  "input": "The one last thing to mention about this recipe is how factors of 2 affect the count.",
  "model": "nmt",
  "translatedText": "关于这个配方最后要提到的一件事是因子 2 如何影响计数。",
  "time_range": [
   1134.96,
   1140.766956521739
  ]
 },
 {
  "input": "If your number is even, then that factor of 2 breaks down as 1 plus i times 1 minus i, so you can divvy up that complex conjugate pair between the two columns.",
  "model": "nmt",
  "translatedText": "如果你 的数字是偶数，那么 2 的因子分解为 1 加 i 乘以 1 减 i，这样你就可以在两列之间分配复数共轭对。",
  "time_range": [
   1140.766956521739,
   1152.4296629213482
  ]
 },
 {
  "input": "At first, it might look like this doubles your options, depending on how you choose to place those two Gaussian primes between the columns.",
  "model": "nmt",
  "translatedText": "乍一看，这可能会让 您的选择加倍，具体取决于您选择如何将这两个高斯素数放置 在列之间。",
  "time_range": [
   1152.4296629213482,
   1160.9119101123595
  ]
 },
 {
  "input": "However, since multiplying one of these guys by i gives you the other one, when you swap them between the columns, the effect that has on the output from the left column is to just multiply it by i, or by negative i.",
  "model": "nmt",
  "translatedText": "然而，由于将其中一个乘以 i 会得到另 一个，因此当您在列之间交换它们时，对左列输出的影 响就是将其乘以 i 或负 i。",
  "time_range": [
   1160.9119101123595,
   1175.6665116279069
  ]
 },
 {
  "input": "So that's actually redundant with the final step, where we take the product of this left column and choose to multiply it by either 1, i, negative 1, or negative i.",
  "model": "nmt",
  "translatedText": "所以这对于最后一步 来说实际上是多余的，我们取左列的乘积并选择将其乘以 1、i、负 1 或负 i。",
  "time_range": [
   1175.6665116279069,
   1185.8915662650604
  ]
 },
 {
  "input": "What this means is that a factor of 2, or any power of 2, doesn't actually change the count at all.",
  "model": "nmt",
  "translatedText": "这意味着 2 的因数或 2 的任何幂实际上根本不会改变计数。",
  "time_range": [
   1185.8915662650604,
   1193.2019277108434
  ]
 },
 {
  "input": "It doesn't hurt, but it doesn't help.",
  "model": "nmt",
  "translatedText": "它不疼，但没有 帮助。",
  "time_range": [
   1193.2019277108434,
   1195.847441860465
  ]
 },
 {
  "input": "For example, a circle with radius square root of 5 hits 8 lattice points, and if you grow that radius to square root of 10, you also hit 8 lattice points, and square root of 20 also hits 8 lattice points, as does square root of 40.",
  "model": "nmt",
  "translatedText": "例如，半径平方根为 5 的圆会命中 8 个格点，如果将 半径增大到平方根 10，也会命中 8 个格点，平方根 20 也 会命中 8 个格点，平方根也是如此共 40 个。",
  "time_range": [
   1195.847441860465,
   1210.7991011235956
  ]
 },
 {
  "input": "Factors of 2 just don't make a difference.",
  "model": "nmt",
  "translatedText": "2 的因数 没有什么区别。",
  "time_range": [
   1210.7991011235956,
   1213.896119402985
  ]
 },
 {
  "input": "Now what's about to happen is number theory at its best.",
  "model": "nmt",
  "translatedText": "现在即将发生的是数论的最佳状 态。",
  "time_range": [
   1213.896119402985,
   1218.2703529411763
  ]
 },
 {
  "input": "We have this complicated recipe telling us how many lattice points sit on a circle with radius square root of n, and it depends on the prime factorization of n.",
  "model": "nmt",
  "translatedText": "我们有这个复杂的公式告诉我们半径平方根为 n 的圆上有多少个格点，并且它取决于 n 的素因数分解。",
  "time_range": [
   1218.2703529411763,
   1228.62
  ]
 },
 {
  "input": "To turn this into something simpler, something we can actually deal with, we're going to exploit the regularity of primes that those which are 1 above a multiple of 4 split into distinct Gaussian prime factors, while those that are 3 above a multiple of 4 cannot be split.",
  "model": "nmt",
  "translatedText": "为了把它变成更简单的东西，我们可以实际处理的东西，我们将利用素数的规 律性，即那些大于 4 的倍数 1 的素数分裂成不同的高斯素数因子，而 那些大于 4 的倍数 3 的素数分解为不同的高斯素数因子。 4 不能 分割。",
  "time_range": [
   1228.62,
   1243.7469230769232
  ]
 },
 {
  "input": "To do this, let's introduce a simple function, one which I'll label with the Greek letter chi.",
  "model": "nmt",
  "translatedText": "为此，我们引入一个简单的函数，我将用希腊字母 chi 对其进行标记。",
  "time_range": [
   1243.7469230769232,
   1249.450117647059
  ]
 },
 {
  "input": "For inputs that are 1 above a multiple of 4, the output of chi is 1.",
  "model": "nmt",
  "translatedText": "对于 1 大于 4 的倍数的输入， chi 的输出为 1。",
  "time_range": [
   1249.450117647059,
   1254.1236363636363
  ]
 },
 {
  "input": "If it takes in an input 3 above a multiple of 4, the output of chi is negative 1.",
  "model": "nmt",
  "translatedText": "如果输入 3 大于 4 的倍数，则 chi 的输出为负 1。",
  "time_range": [
   1254.1236363636363,
   1262.7698360655736
  ]
 },
 {
  "input": "And then on all even numbers, it gives 0.",
  "model": "nmt",
  "translatedText": "然后对于所有偶数，它给出 0。",
  "time_range": [
   1262.7698360655736,
   1269.76
  ]
 },
 {
  "input": "So if you evaluate chi on the natural numbers, it gives this very nice cyclic pattern, 1, 0, negative 1, 0, and then repeat indefinitely.",
  "model": "nmt",
  "translatedText": "因此，如果您对自然数评估 chi，它会给出非常好的循环模式：1, 0，负 1, 0，然后无限重复。",
  "time_range": [
   1269.76,
   1279.7753191489362
  ]
 },
 {
  "input": "And this cyclic function chi has a very special property, it's what's called a multiplicative function.",
  "model": "nmt",
  "translatedText": "这个循环函数 chi 有一个非 常特殊的性质，就是所谓的乘法函数。",
  "time_range": [
   1279.7753191489362,
   1287.0079999999998
  ]
 },
 {
  "input": "If you evaluate it on two different numbers and multiply the results, like chi of 3 times chi of 5, it's the same as if you evaluate chi on the product of those two numbers, in this case chi of 15.",
  "model": "nmt",
  "translatedText": "如果您对两个不同的数字进行计算 并将结果相乘，例如 3 的 chi 乘以 5 的 chi，则与您根据这 两个数字的乘积计算 chi 是相同的，在本例中为 15。",
  "time_range": [
   1287.0079999999998,
   1300.7701098901098
  ]
 },
 {
  "input": "Likewise, chi of 5 times chi of 5 is equal to chi of 25.",
  "model": "nmt",
  "translatedText": "同样，5 的卡方乘 以 5 的卡方等于 25 的卡方。",
  "time_range": [
   1300.7701098901098,
   1304.8077108433736
  ]
 },
 {
  "input": "And no matter what two natural numbers you put in there, this property will hold.",
  "model": "nmt",
  "translatedText": "无论你在那里输入哪两个自然 数，这个属性都会成立。",
  "time_range": [
   1304.8077108433736,
   1310.9064516129033
  ]
 },
 {
  "input": "Go ahead, try it if you want.",
  "model": "nmt",
  "translatedText": "如果你愿意的话，就来尝试一下吧。",
  "time_range": [
   1310.9064516129033,
   1313.32
  ]
 },
 {
  "input": "So for our central question of counting lattice points in this way that involves factoring a number, what I'm going to do is write down the number of choices we have but using chi in what at first seems like a much more complicated way, but this has the benefit of treating all prime factors equally.",
  "model": "nmt",
  "translatedText": "因此，对于以这种方式计算格点的核心问题，涉及对数字进 行因式分解，我要做的是写下我们拥有的选择数量，但使用 chi 的方式乍一看似乎更复杂，但是这样做的好处是 平等对待所有主要因素。",
  "time_range": [
   1313.32,
   1330.1292682926828
  ]
 },
 {
  "input": "For each prime power, like 5 cubed, what you write down is chi of 1 plus chi of 5 plus chi of 5 squared plus chi of 5 cubed.",
  "model": "nmt",
  "translatedText": "对于每个素数幂，例如 5 的立方，您写下的 是 1 的 chi 加 5 的 chi 加 5 的平方加 5 的三次方。",
  "time_range": [
   1330.1292682926828,
   1339.4878048780486
  ]
 },
 {
  "input": "You add up the value of chi on all the powers of this prime up to the one that shows up inside the factorization.",
  "model": "nmt",
  "translatedText": "您将 这个素数的所有幂的 chi 值相加，直到因式分解 中显示的值。",
  "time_range": [
   1339.4878048780486,
   1346.6496551724138
  ]
 },
 {
  "input": "In this case, since 5 is 1 above a multiple of 4, all of these are just 1, so this sum comes out to be 4, which reflects the fact that a factor of 5 cubed gives you 4 options for how to divvy up the two Gaussian prime factors between the columns.",
  "model": "nmt",
  "translatedText": "在这种情况下，由于 5 是 4 的倍数之上的 1，因此所有这些都只是 1，因此这个总和为 4，这反映了这样一 个事实：5 的立方为您提供了 4 个选项来分配列之间的两个高斯素 因子。",
  "time_range": [
   1346.6496551724138,
   1363.912558139535
  ]
 },
 {
  "input": "For a factor like 3 to the 4th, what you write down looks totally similar, chi of 1 plus chi of 3 on and on up to chi of 3 to the 4th.",
  "model": "nmt",
  "translatedText": "对于像 3 的 4 次方这样的因数，您写下的内容看起来完全相似，1 的 chi 加上 3 的 chi 一直到 3 的 4 次方 chi。",
  "time_range": [
   1363.912558139535,
   1374.5376744186046
  ]
 },
 {
  "input": "But in this case, since chi of 3 is negative 1, this sum oscillates, 1 minus 1 plus 1 minus 1 plus 1.",
  "model": "nmt",
  "translatedText": "但在这种情况下，由于 3 的 chi 为负 1，因此该和会振荡，即 1 减 1 加 1 减 1 加 1。",
  "time_range": [
   1374.5376744186046,
   1383.9959999999999
  ]
 },
 {
  "input": "If it's an even power, like 4 in this case, the sum comes out to be 1, which encapsulates the fact that there is only one choice for what to do with those unsplittable 3's.",
  "model": "nmt",
  "translatedText": "如果它 是偶次幂，例如本例中的 4，则总和为 1，这概括了这样一个 事实：对于如何处理这些不可分割的 3，只有一种选择。",
  "time_range": [
   1383.9959999999999,
   1395.843333333333
  ]
 },
 {
  "input": "But if it's an odd power, that sum comes out to be 0, indicating that you're screwed, you can't place that unsplittable 3.",
  "model": "nmt",
  "translatedText": "但如果 它是奇数次幂，那么总和就是 0，这表明你完蛋了，你不能放置 那个不可分割的 3。",
  "time_range": [
   1395.843333333333,
   1403.2216470588237
  ]
 },
 {
  "input": "When you do this for a power of 2, what it looks like is 1 plus 0 plus 0 plus 0 on and on, since chi is always 0 on even numbers.",
  "model": "nmt",
  "translatedText": "当你对 2 的幂执行此操作时，看起来就像 1 加 0 加 0 加 0 不断，因为 chi 在偶数上始终为 0。",
  "time_range": [
   1403.2216470588237,
   1413.7522891566266
  ]
 },
 {
  "input": "And this reflects the fact that a factor of 2 doesn't help and it doesn't hurt, you always have just one option for what to do with it.",
  "model": "nmt",
  "translatedText": "这反映 了这样一个事实：2 没有帮助，也没有坏处，你总是只 有一个选择来处理它。",
  "time_range": [
   1413.7522891566266,
   1421.1860465116279
  ]
 },
 {
  "input": "And as always, we keep a 4 in front to indicate that final choice of multiplying by 1, i, negative 1, or negative i.",
  "model": "nmt",
  "translatedText": "和往常一样，我们在前面保留 4 来表示最终选择乘以 1、i、负 1 或负 i。",
  "time_range": [
   1421.1860465116279,
   1428.4350617283949
  ]
 },
 {
  "input": "We're getting close to the culmination now, things are starting to look organized, so pause and ponder, make sure everything feels good up to this point.",
  "model": "nmt",
  "translatedText": "我们现在 已经接近高潮了，事情开始看起来有条理，所以停 下来思考一下，确保到目前为止一切都感觉良好。",
  "time_range": [
   1428.4350617283949,
   1437.6
  ]
 },
 {
  "input": "Take the number 45 as an example.",
  "model": "nmt",
  "translatedText": "以45号为例。",
  "time_range": [
   1437.6,
   1439.8651685393256
  ]
 },
 {
  "input": "This guy factors as 3 squared times 5, so the expression for the total number of lattice points is 4 times chi of 1 plus chi of 3 plus chi of 3 squared times chi of 1 plus chi of 5.",
  "model": "nmt",
  "translatedText": "这家伙因式分解为 3 的平方乘以 5，因此格点 总数的表达式为 4 乘以 1 的卡氏加上 3 的卡氏加上 3 的平方乘以 1 的卡氏加上 5 的卡氏。",
  "time_range": [
   1439.8651685393256,
   1452.032808988764
  ]
 },
 {
  "input": "You can think about this as 4 times the one choice for what to do with the 3's times 2 choices for how to divvy up the Gaussian prime factors of 5.",
  "model": "nmt",
  "translatedText": "您可以将其视为 4 乘以 1 的选择（ 如何处理 3 的乘以 2 的选择）（如何除以 5 的高斯素因数）。",
  "time_range": [
   1452.032808988764,
   1460.9732584269661
  ]
 },
 {
  "input": "It might seem like expanding out this sum is really complicated, because it involves all possible combinations of these prime factors, and it kind of is.",
  "model": "nmt",
  "translatedText": "展开这个总和似乎确实很复杂，因为它涉及这些素因 数的所有可能组合，而且确实如此。",
  "time_range": [
   1460.9732584269661,
   1471.8160439560436
  ]
 },
 {
  "input": "However, because chi is multiplicative, each one of those combinations corresponds to a divisor of 45.",
  "model": "nmt",
  "translatedText": "然而，由于 chi 是乘法，因此这些组合中的每一个都对应于 45 的除数。",
  "time_range": [
   1471.8160439560436,
   1479.4035555555556
  ]
 },
 {
  "input": "In this case what we get is 4 times chi of 1 plus chi of 3 plus chi of 5 plus chi of 9 plus chi of 15 plus chi of 45.",
  "model": "nmt",
  "translatedText": "在这种情况下， 我们得到的是 4 乘以 1 的尺加上 3 的尺加上 5 的尺加上 9 的尺加上 15 的 尺加上 45 的尺。",
  "time_range": [
   1479.4035555555556,
   1489.6388235294119
  ]
 },
 {
  "input": "What you'll notice is that this covers every number that divides evenly into 45, once and only once.",
  "model": "nmt",
  "translatedText": "您会注意到，这涵盖了所有能被 45 整除的 数字，一次且仅一次。",
  "time_range": [
   1489.6388235294119,
   1497.318024691358
  ]
 },
 {
  "input": "And it works like this for any number, there's nothing special about 45.",
  "model": "nmt",
  "translatedText": "对于任何数字都是这 样，45 没有什么特别的。",
  "time_range": [
   1497.318024691358,
   1503.74
  ]
 },
 {
  "input": "And that to me is pretty interesting, and I think wholly unexpected.",
  "model": "nmt",
  "translatedText": "这对我来说非常有趣，我认为完全出乎意料。",
  "time_range": [
   1503.74,
   1507.3611904761906
  ]
 },
 {
  "input": "This question of counting the number of lattice points a distance square root of n away from the origin involves adding up the value of this relatively simple function over all the divisors of n.",
  "model": "nmt",
  "translatedText": "这个计算距 原点距离为 n 的平方根的格点数量的问题涉及将 这个相对简单的函数的值与 n 的所有除数相加。",
  "time_range": [
   1507.3611904761906,
   1520.32
  ]
 },
 {
  "input": "To bring it all together, remember why we're doing this.",
  "model": "nmt",
  "translatedText": "为了将所有这些结合在一起，请记住我们为什么要这样做。",
  "time_range": [
   1520.32,
   1522.9355555555553
  ]
 },
 {
  "input": "The total number of lattice points inside a big circle with radius r should be about pi times r squared.",
  "model": "nmt",
  "translatedText": "半径为 r 的大圆内的 格点总数应约为 pi 乘以 r 的平方。",
  "time_range": [
   1522.9355555555553,
   1528.936
  ]
 },
 {
  "input": "But on the other hand we can count those same lattice points by looking through all the numbers n between 0 and r squared, and counting how many lattice points are a distance square root of n from the origin.",
  "model": "nmt",
  "translatedText": "但另一方面， 我们可以通过查看 0 到 r 平方之间的所有数字 n 来计 算这些相同的格点，并计算有多少个格点距原点距离为 n 的平 方根。",
  "time_range": [
   1528.936,
   1540.5666666666666
  ]
 },
 {
  "input": "Let's ignore that origin dot with radius 0, it doesn't follow the pattern of the rest, and one little dot isn't going to make a difference as we let r grow towards infinity.",
  "model": "nmt",
  "translatedText": "让我们忽略半径为 0 的原点，它不 遵循其余点的模式，并且当我们让 r 向 无穷大增长时，一个小点不会产生影响。",
  "time_range": [
   1540.5666666666666,
   1552.48
  ]
 },
 {
  "input": "From all this Gaussian integer and factoring and chi function stuff we've been doing, the answer for each n looks like adding up the value of chi on every divisor of n, and multiplying by 4.",
  "model": "nmt",
  "translatedText": "从我们一直在做的所有高斯整数、因式分解和 chi 函数的内容来看，每 个 n 的答案看起来就像将 n 的每个除数上的 chi 值相加，然 后乘以 4。",
  "time_range": [
   1552.48,
   1566.0108641975307
  ]
 },
 {
  "input": "And for now let's just take that 4 and put it in the corner, and remember to bring it back later.",
  "model": "nmt",
  "translatedText": "现在我们就把这 4 个放在角 落里，然后记得稍后再把它带回来。",
  "time_range": [
   1566.0108641975307,
   1572.8
  ]
 },
 {
  "input": "At first, adding up the values for each one of these rows seems super random, right?",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   1572.8,
   1578.6588235294118
  ]
 },
 {
  "input": "I mean numbers with a lot of factors have a lot of divisors, whereas prime numbers will always only have two divisors, so it initially seems like you would have to have perfect knowledge of the distribution of primes to get anything useful out of this.",
  "model": "nmt",
  "translatedText": "首先，将这些行中每一行的值相加似乎是超级随机的，对吧？我 的意思是，具有很多因数的数字有很多约数，而素数 总是只有两个约数，所以最初看起来你必须对素数的 分布有完美的了解才能从中得到任何有用的东西。",
  "time_range": [
   1578.6588235294118,
   1594.22
  ]
 },
 {
  "input": "But if instead you organize these into columns, the puzzle starts to fit together.",
  "model": "nmt",
  "translatedText": "但如果你把它们组织成列，这个谜题就会开始拼凑起来。",
  "time_range": [
   1594.22,
   1599.6559999999997
  ]
 },
 {
  "input": "How many numbers between 1 and r2 have 1 as a divisor?",
  "model": "nmt",
  "translatedText": "1 和 r2 之间有多少个以 1 作为约数的数？他们全部。",
  "time_range": [
   1599.6559999999997,
   1604.442588235294
  ]
 },
 {
  "input": "All of them.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   1604.442588235294,
   1605.5832941176473
  ]
 },
 {
  "input": "So our sum should include r2 times chi of 1.",
  "model": "nmt",
  "translatedText": "所以我们的总和应该包括 r2 乘以 1 的 chi。",
  "time_range": [
   1605.5832941176473,
   1609.5
  ]
 },
 {
  "input": "How many of them have 2 as a divisor?",
  "model": "nmt",
  "translatedText": "其中有多少个以 2 作为约数？大约有一半。",
  "time_range": [
   1609.5,
   1612.565714285714
  ]
 },
 {
  "input": "About half of them.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   1612.565714285714,
   1614.1399999999999
  ]
 },
 {
  "input": "So that would account for r2 over 2 times chi of 2.",
  "model": "nmt",
  "translatedText": "这样 r2 就超 过了 2 的 chi 的 2 倍。",
  "time_range": [
   1614.1399999999999,
   1618.0783529411765
  ]
 },
 {
  "input": "About a third of these rows have chi of 3, so we can put in r2 divided by 3 times chi of 3.",
  "model": "nmt",
  "translatedText": "这些行中大约有三分之一的 chi 为 3，因此我们可以 将 r2 除以 3 的 chi 乘以 3。",
  "time_range": [
   1618.0783529411765,
   1624.8712941176473
  ]
 },
 {
  "input": "Keep in mind we're being approximate, since r2 might not perfectly divide 2 or 3, but as r grows towards infinity, this approximation will get better.",
  "model": "nmt",
  "translatedText": "请记住，我们是近似值，因为 r2 可 能无法完美地整除 2 或 3，但随着 r 向无穷大增长，这种近似值会 变得更好。",
  "time_range": [
   1624.8712941176473,
   1634.5972727272726
  ]
 },
 {
  "input": "And when you keep going like this, you get a pretty organized expression for the total number of lattice points.",
  "model": "nmt",
  "translatedText": "当你继续这样做时，你会得到一个非常有组 织的格点总数表达式。",
  "time_range": [
   1634.5972727272726,
   1642.1537931034484
  ]
 },
 {
  "input": "And if you factor out that r2 and bring back the 4 that needs to be multiplied in, what it means is that the total number of lattice points inside this big circle is approximately 4 times r2 times this sum.",
  "model": "nmt",
  "translatedText": "如果你将 r2 分解出来并带 回需要相乘的 4，那么这意味着这个大圆内的格点总数 大约是 r2 乘以这个总和的 4 倍。",
  "time_range": [
   1642.1537931034484,
   1658.063636363636
  ]
 },
 {
  "input": "And because chi is 0 on every even number, and it oscillates between 1 and negative 1 for odd numbers, this sum looks like 1 minus 1 third plus a fifth minus 1 seventh and so on.",
  "model": "nmt",
  "translatedText": "因为 chi 在每个偶数上都是 0，而在奇数上它在 1 和负 1 之间波动，所以这个 和看起来像 1 减 1 第三加上第五减 1 第七，依此类推。",
  "time_range": [
   1658.063636363636,
   1672.4166265060242
  ]
 },
 {
  "input": "And this is exactly what we wanted!",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   1672.4166265060242,
   1674.5316483516483
  ]
 },
 {
  "input": "What we have here is an alternate expression for the total number of lattice points inside a big circle, which we know should be around pi times r2.",
  "model": "nmt",
  "translatedText": "这正是 我们想要的！我们这里有一个大圆内格点总数的替代表 达式，我们知道它应该约为 pi 乘以 r2。",
  "time_range": [
   1674.5316483516483,
   1683.8576470588234
  ]
 },
 {
  "input": "And the bigger r is, the more accurate both of these estimates are, so the percent error between the left hand side and the right hand side can get arbitrarily small.",
  "model": "nmt",
  "translatedText": "r 越大，这两个估计就越准确，因此左侧和右 侧之间的百分比误差可以变得任意小。",
  "time_range": [
   1683.8576470588234,
   1694.3241860465118
  ]
 },
 {
  "input": "So divide out by that r2, and this gives us an infinite sum that should converge to pi.",
  "model": "nmt",
  "translatedText": "除以 r 2，这给出了一个应该收敛于 pi 的无穷总和。",
  "time_range": [
   1694.3241860465118,
   1700.6799999999998
  ]
 },
 {
  "input": "And keep in mind, I just think this is really cool, the reason this sum came out to be so simple, and requiring relatively low information to describe, ultimately stems from the regular pattern in how prime numbers factor inside the Gaussian integers.",
  "model": "nmt",
  "translatedText": "请记住 ，我只是认为这真的很酷，这个总和之所以如此 简单，并且需要相对较少的信息来描述，最终 源于素数如何在高斯整数中分解的规则模式。",
  "time_range": [
   1700.6799999999998,
   1717.54
  ]
 },
 {
  "input": "If you're curious, there are two main branches of number theory, algebraic number theory and analytic number theory.",
  "model": "nmt",
  "translatedText": "如果您好奇，数论有两个主要分支：代数数论和 解析数论。",
  "time_range": [
   1717.54,
   1723.9342857142856
  ]
 },
 {
  "input": "Very loosely speaking, the former deals with new number systems, things like these Gaussian integers that you and I looked at, and a lot more, and the latter deals with things like the Riemann zeta function, or its cousins called L-functions, which involve multiplicative functions like this central character chi from our story.",
  "model": "nmt",
  "translatedText": "非常宽松地说，前者处理新的数字系统， 比如你和我研究过的高斯整数，等等，后者处理黎曼 zeta 函数或它的近亲 L 函数，涉及乘法函 数，就像我们故事中的中心人物“气”一样。",
  "time_range": [
   1723.9342857142856,
   1742.9138095238095
  ]
 },
 {
  "input": "And the path we just walked is a little glimpse at where those two fields intersect.",
  "model": "nmt",
  "translatedText": "我们刚刚 走过的路可以瞥见这两个领域的交叉点。",
  "time_range": [
   1742.9138095238095,
   1747.4863636363636
  ]
 },
 {
  "input": "And both of these are pretty heavy duty fields with a lot of active research and unsolved problems.",
  "model": "nmt",
  "translatedText": "这两个领域都 是相当繁重的领域，有大量活跃的研究和未解决的问题。",
  "time_range": [
   1747.4863636363636,
   1752.8937349397588
  ]
 },
 {
  "input": "So if all of this feels like something that takes time to mentally digest, like there's more patterns to be uncovered and understood, it's because it is, and there are.",
  "model": "nmt",
  "translatedText": "因此 ，如果所有这些感觉像是需要时间在精神上消化的事情，就像有更多 的模式需要被发现和理解，那是因为它确实如此，而且确实存在。",
  "time_range": [
   1752.8937349397588,
   1757.22
  ]
 }
]