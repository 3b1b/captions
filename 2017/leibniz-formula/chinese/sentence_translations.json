[
 {
  "input": "This is a video I've been excited to make for a while now.",
  "translatedText": "这是我很高兴制作一段时间的视频。",
  "model": "google_nmt",
  "from_community_srt": "这是一个我一直想做的视频，",
  "n_reviews": 0,
  "start": 4.06,
  "end": 7.08
 },
 {
  "input": "The story here braids together prime numbers, complex numbers, and pi in a very pleasing trio.",
  "translatedText": "这里的故事将质数、复数 和圆周率编织成一个非常令人愉快的三重奏。",
  "model": "google_nmt",
  "from_community_srt": "是关于 质数、复数以及圆周率π这三者如何以一种美妙的方式联系起来 在现代数学中，",
  "n_reviews": 0,
  "start": 7.42,
  "end": 13.36
 },
 {
  "input": "Quite often in modern math, especially that which flirts with the Riemann zeta function, these three seemingly unrelated objects show up in unison, and I want to give you a little peek at one instance where this happens, one of the few that doesn't require too heavy a technical background.",
  "translatedText": "在现代数学中，尤 其是与黎曼 zeta 函数调情的数学中，这三个看似无关的 物体经常同时出现，我想让你看一下发生这种情况的一个例子，这 是少数几个不发生这种情况的例子之一。 要求太重的技术背景。",
  "model": "google_nmt",
  "from_community_srt": "这三者通常会一起出现在黎曼zeta函数中 这三个看上去毫无相关的东西竟和谐地出现在一起， 而我想让你们瞧瞧 这是如何做到的。 虽然并不需要复杂的 背景知识，",
  "n_reviews": 0,
  "start": 14.1,
  "end": 28.74
 },
 {
  "input": "That's not to say this is easy, in fact this is probably one of the most intricate videos I've ever done, but the culmination is worth it.",
  "translatedText": "这并不是说这很容易，事实上这可能是我做过的最复杂的 视频之一，但最终的成果是值得的。",
  "model": "google_nmt",
  "from_community_srt": "但也并不简单。 事实上， 这是我做过的最复杂的视频之一，",
  "n_reviews": 0,
  "start": 29.26,
  "end": 36.82
 },
 {
  "input": "What we'll end up with is a formula for pi, a certain alternating infinite sum.",
  "translatedText": "我们最终得到的是 p i 的公式，即某个交替无穷和。",
  "model": "google_nmt",
  "from_community_srt": "但绝对值得 视频最终展现的是一个π的表达式 一个无穷交错级数 这个公式写在我喝咖啡的杯子上，",
  "n_reviews": 0,
  "start": 36.98,
  "end": 41.72
 },
 {
  "input": "This formula is actually written on the mug I'm drinking coffee from right now as I write this.",
  "translatedText": "这个公式实际上写在我写这 篇文章时我正在喝咖啡的杯子上。",
  "model": "google_nmt",
  "from_community_srt": "如图。",
  "n_reviews": 0,
  "start": 42.52,
  "end": 47.1
 },
 {
  "input": "And a fun but almost certainly apocryphal story is that the beauty of this formula is what inspired Leibniz to quit being a lawyer and instead pursue math.",
  "translatedText": "一个有趣但几乎可以肯定 是杜撰的故事是，这个公式的美妙之处激励莱布尼茨放弃律师 职业，转而追求数学。",
  "model": "google_nmt",
  "from_community_srt": "有一个有趣但几乎不足为信的说法是正是这个公式激励莱布尼茨放弃律师 而选择追寻数学。",
  "n_reviews": 0,
  "start": 47.38,
  "end": 56.28
 },
 {
  "input": "Whenever you see pi show up in math, there's always going to be a circle hiding somewhere, sometimes very sneakily.",
  "translatedText": "每当你看到圆周率出现在数学中时，总会有一 个圆圈隐藏在某个地方，有时非常偷偷摸摸。",
  "model": "google_nmt",
  "from_community_srt": "无论何时你看到π出现在数学中， 仿佛总会在哪里偷偷藏着一个圆。",
  "n_reviews": 0,
  "start": 57.16,
  "end": 64.04
 },
 {
  "input": "So the goal here is not just to discover this sum, but to really understand the circle hiding behind it.",
  "translatedText": "因此，这里的目标不仅 仅是发现这个总和，而是真正了解隐藏在其背后的圆圈。",
  "model": "google_nmt",
  "from_community_srt": "所以我们今天的目的 并不是讲如何发现这个级数和， 而是试图真正理解公式背后的\"圆\"在哪里。",
  "n_reviews": 0,
  "start": 64.46,
  "end": 70.46
 },
 {
  "input": "You see, there is another way you can prove the same result that you and I are going to spend some meaningful time building up to, but with just a few lines of calculus.",
  "translatedText": "你看，还有 另一种方法可以证明你和我将花费一些有意义的时间来获 得的相同结果，但只需几行微积分。",
  "model": "google_nmt",
  "from_community_srt": "这里有另一方法仅用几行简单的微积分就能证明我们 今天想要花一些时间来理解的同样内容。",
  "n_reviews": 0,
  "start": 71.32,
  "end": 78.9
 },
 {
  "input": "And this is one of those proofs that leaves you thinking, okay, I suppose that's true, but not really getting a sense for why, or where the hidden circle is.",
  "translatedText": "这是让你思考的证据 之一，好吧，我想这是真的，但并没有真正理解为什么， 或者隐藏的圆圈在哪里。",
  "model": "google_nmt",
  "from_community_srt": "这些证明总会让我们思考“好吧， 我想这是对的”， 但没能让我们搞明白为什么 以及这个关于π的公式的圆到底藏在哪里。",
  "n_reviews": 0,
  "start": 79.82,
  "end": 89.26
 },
 {
  "input": "On the path you and I will take, though, what you'll see is that the fundamental truth behind this sum and the circle it hides is a certain regularity in the way that prime numbers behave when you put them inside the complex numbers.",
  "translatedText": "不过，在你我将要走的道路上 ，你会看到这个和及其隐藏的圆圈背后的基本事实是当 你将素数放入复数中时，素数的行为方式存在一定的 规律性。",
  "model": "google_nmt",
  "from_community_srt": "在此视频中， 你将看到这个和背后的基本事实以及所隐含的圆实际上 是质数在复数域内表达的规律展现。",
  "n_reviews": 0,
  "start": 89.8,
  "end": 102.76
 },
 {
  "input": "To start the story, imagine yourself with nothing more than a pencil, paper, and a desire to find a formula for computing pi.",
  "translatedText": "为了开始这个故事，想象一下你自己除了一支铅笔、一张纸之外 什么都没有，并且渴望找到计算 pi 的公式。",
  "model": "google_nmt",
  "from_community_srt": "故事开始前， 想象你自己手里有的不过是一只笔一张纸 但总想找到计算π的公式。",
  "n_reviews": 0,
  "start": 103.72,
  "end": 110.56
 },
 {
  "input": "There are countless ways you could approach this, but as a broad outline for the plotline, you'll start by asking how many lattice points of the plane sit inside a big circle.",
  "translatedText": "有无数种方法可以实 现这一点，但作为情节线的大致轮廓，您将首先询问平面 上有多少个格点位于一个大圆圈内。",
  "model": "google_nmt",
  "from_community_srt": "这里有无数的方法能做到。 看到这里有一个正方形点阵， 你就会问到底有多少格点 在这个大圆内部。",
  "n_reviews": 0,
  "start": 111.6,
  "end": 120.94
 },
 {
  "input": "That will lead to asking about how to express numbers as the sum of two squares, which in turn will lead us to factoring integers inside the complex plane.",
  "translatedText": "这将导致我们询问 如何将数字表示为两个平方和，进而导致我们在复平面 内分解整数。",
  "model": "google_nmt",
  "from_community_srt": "这个问题稍微推演就成了 如何将一个数表达为两个平方数的和， 以及如何将整数 在复数域内分解质因数。",
  "n_reviews": 0,
  "start": 121.82,
  "end": 131.56
 },
 {
  "input": "From there we'll bring in a special function named chi, which will give us a formula for pi that at first seems to involve a crazy complicated pattern dependent on the distribution of primes, but a slight shift in perspective will simplify it dramatically and expose the ultimate gold nugget.",
  "translatedText": "从那里我们将引入一个名为 chi 的特 殊函数，它将为我们提供一个 pi 公式，乍一看似乎涉 及一个依赖于素数分布的疯狂复杂模式，但视角的轻微转变 将极大地简化它并揭示终极金块。",
  "model": "google_nmt",
  "from_community_srt": "然后引入这个叫做χ的函数 这个函数写成的π的公式似乎本身就包含有关质数分布的 奇特规律。 稍微简化并展开这个公式就会 得到开始提到的这个美妙公式。",
  "n_reviews": 0,
  "start": 132.24,
  "end": 149.8
 },
 {
  "input": "It's a lot, but good math takes time and we'll take it step by step.",
  "translatedText": "虽然很多，但是好的数学需 要时间，我们会一步一步来。",
  "model": "google_nmt",
  "from_community_srt": "内容很多， 但好东西值得花时间，",
  "n_reviews": 0,
  "start": 150.28,
  "end": 154.42
 },
 {
  "input": "When I say lattice point, what I mean is a point AB on the plane where A and B are both integers, a spot where the grid lines cross.",
  "translatedText": "当我说格子点时，我的意思是平面 上的点AB，其中A和B都是整数，即网格线交叉的点。",
  "model": "google_nmt",
  "from_community_srt": "我们会一步一步来 当我说“格点”的时候， 我指的是平面上a和b都是整数的点(a,b) 它们是网格线相交的地方。",
  "n_reviews": 0,
  "start": 155.42,
  "end": 163.88
 },
 {
  "input": "If you draw a circle centered at the origin, let's say with radius 10, how many lattice points would you guess are inside that circle?",
  "translatedText": "如果您画一个以原点为中心的圆，假设半径为 10， 您猜该圆内有多少个格点？",
  "model": "google_nmt",
  "from_community_srt": "如果以原点作圆， 比方说以10为半径， 那究竟有多少格点会在其内呢？",
  "n_reviews": 0,
  "start": 163.88,
  "end": 172.2
 },
 {
  "input": "Well, there's one lattice point for each unit of area, so the answer should be approximately equal to the area of the circle, pi r squared, which in this case is pi times 10 squared.",
  "translatedText": "嗯，每个面积单位都有一个格点 ，因此答案应该大约等于圆的面积 pi r 平方，在本例中为 pi 乘以 10 平方。",
  "model": "google_nmt",
  "from_community_srt": "既然每个格点都在一个单位正方形中， 那答案差不多 和圆的面积相等， πR^2， 在本例中就是π×10^2。",
  "n_reviews": 0,
  "start": 173.52,
  "end": 184.74
 },
 {
  "input": "And if it was a really big circle, like radius 1 million, you would expect this to be a much more accurate estimate, in the sense that the percent error between the estimate pi r squared and the actual count of lattice points should get smaller.",
  "translatedText": "如果它是一个非常大的圆，例如半 径 100 万，您会期望这是一个更准确的估计，从某种 意义上说，估计 pi r 平方与实际格点计数之间的百分 比误差应该变得更小。",
  "model": "google_nmt",
  "from_community_srt": "当半径足够大， 比如1000000， 估计的格点数就和面积越接近 估计的圆面积和实际的格点数之间的百分误差会 越来越小。",
  "n_reviews": 0,
  "start": 185.54,
  "end": 198.24
 },
 {
  "input": "What we're going to try to do is find a second way to answer this same question, how many lattice points are inside the circle, because that can lead to another way to express the area of a circle, and hence another way to express pi.",
  "translatedText": "我们要做的是找到第二种方法来回答 同一个问题，即圆内有多少个格点，因为这可以导致另 一种表达圆面积的方法，从而产生另一种表达圆面积的方 法圆周率。",
  "model": "google_nmt",
  "from_community_srt": "如果能够找到另一方法去计算 这个圆里面究竟有多少格点数。 也许就能让我们有另一方法 去计算圆的面积， 也就有了另一方法去计算π。",
  "n_reviews": 0,
  "start": 199.2,
  "end": 211.76
 },
 {
  "input": "And so you play, and you wonder, and maybe, especially if you just watched a certain calculus video, you might try looking through every possible ring that a lattice point could sit on.",
  "translatedText": "所以你玩的时候，你想知道，也许，特 别是如果你刚刚观看了某个微积分视频，你可能 会尝试查看晶格点可能位于的每个可能的环。",
  "model": "google_nmt",
  "from_community_srt": "按这思路试试看！ 你想到之前看过一个微积分的视频 也许试着看看每个可能的圆， 圆上有格点经过。",
  "n_reviews": 0,
  "start": 213.16,
  "end": 223.7
 },
 {
  "input": "Now if you think about it, for each one of these lattice points AB, its distance from the origin is the square root of a squared plus b squared.",
  "translatedText": "现在如果你想一想，对于这些格点AB中的每一个，它到原点的 距离都是a的平方加上b的平方的平方根。",
  "model": "google_nmt",
  "from_community_srt": "形如(a,b)的这些格点， 它到原点的距离是a^2+b^2和的平方根 因为a和b都是整数，",
  "n_reviews": 0,
  "start": 224.82,
  "end": 231.98
 },
 {
  "input": "And since a and b are both integers, a squared plus b squared is also some integer, so you only have to consider rings whose radii are the square roots of some whole number.",
  "translatedText": "由于a和b都是整 数，a的平方加上b的平方也是某个整数，所以你只需 要考虑半径是某个整数的平方根的环。",
  "model": "google_nmt",
  "from_community_srt": "所以a^2+b^2也是整数， 所以你只需考虑 那些半径是整数平方根的圆。",
  "n_reviews": 0,
  "start": 232.7,
  "end": 243.26
 },
 {
  "input": "A radius of 0 just gives you that single origin point.",
  "translatedText": "半径 0 只给 出单个原点。",
  "model": "google_nmt",
  "from_community_srt": "半径为0的圆相当于原点，",
  "n_reviews": 0,
  "start": 244.16,
  "end": 247.36
 },
 {
  "input": "If you look at the radius 1, that hits 4 lattice points.",
  "translatedText": "如果观察半径 1，就会碰到 4 个晶格点。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 248.22,
  "end": 251.64
 },
 {
  "input": "Radius square root of 2, well that also hits 4 lattice points.",
  "translatedText": "半径为 2 的平方根，同样命中 4 个格点。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 252.44,
  "end": 251.64
 },
 {
  "input": "Radius square root of 3 doesn't actually hit anything.",
  "translatedText": "半径 3 的平方根实际上并没有击中任何物体。",
  "model": "google_nmt",
  "from_community_srt": "半径为1的圆则会经过4个格点 半径为根号2的圆也会经过4个格点， 根号3则不会经过任何格点，",
  "n_reviews": 0,
  "start": 252.44,
  "end": 259.18
 },
 {
  "input": "Square root of 4 again hits 4 lattice points.",
  "translatedText": "4 的平方根再次击中 4 个格点。",
  "model": "google_nmt",
  "from_community_srt": "根号4经过4个格点，",
  "n_reviews": 0,
  "start": 259.9,
  "end": 262.18
 },
 {
  "input": "A radius square root of 5 actually hits 8 lattice points.",
  "translatedText": "5 的半径平方根实际上击中了 8 个格点。",
  "model": "google_nmt",
  "from_community_srt": "而根号5会经过8个格点。",
  "n_reviews": 0,
  "start": 262.84,
  "end": 266.14
 },
 {
  "input": "And what we want is a systematic way to count how many lattice points are on a given one of these rings, a given distance from the origin, and then tally them all up.",
  "translatedText": "我们想要的是一种系统的方法来计算给定 的一个环上有多少个格点，距原点的给定距离，然 后将它们全部计数。",
  "model": "google_nmt",
  "from_community_srt": "所以我们需要一个系统的方法去计算给定半径的圆所经过的格点数 并把它们加起来。",
  "n_reviews": 0,
  "start": 267.26,
  "end": 276.96
 },
 {
  "input": "And if you pause and try this for a moment, what you'll find is that the pattern seems really chaotic, just very hard to find order under here.",
  "translatedText": "如果你停下来尝试一下，你会发 现这个模式看起来真的很混乱，只是很难在这里找到 秩序。",
  "model": "google_nmt",
  "from_community_srt": "暂停试着想一想， 你会发现这个序列似乎毫无规律可言，",
  "n_reviews": 0,
  "start": 277.72,
  "end": 285.22
 },
 {
  "input": "And that's a good sign that some very interesting math is about to come into play.",
  "translatedText": "这是一个好兆头，表明一些非常有趣的数 学即将发挥作用。",
  "model": "google_nmt",
  "from_community_srt": "而此时就需要更进一步的数学方法来解决这个问题。",
  "n_reviews": 0,
  "start": 285.68,
  "end": 289.26
 },
 {
  "input": "In fact, as you'll see, this pattern is rooted in the distribution of primes.",
  "translatedText": "事实上，正如您将看到的，这种 模式植根于素数的分布。",
  "model": "google_nmt",
  "from_community_srt": "事实上， 你会发现， 其中的规律和质数的分布相关。",
  "n_reviews": 0,
  "start": 290.14,
  "end": 294.98
 },
 {
  "input": "As an example, let's look at the ring with radius square root of 25.",
  "translatedText": "作为一个例子，我们来看一下半径平 方根为 25 的环。",
  "model": "google_nmt",
  "from_community_srt": "比如，",
  "n_reviews": 0,
  "start": 296.46,
  "end": 299.88
 },
 {
  "input": "It hits the point 5,0, since 5 squared plus 0 squared is 25.",
  "translatedText": "它达到点 5,0，因为 5 的平方加 0 的 平方是 25。",
  "model": "google_nmt",
  "from_community_srt": "观察这个半径为根号25的圆 它会经过(5,0)， 因为5^2+0^2=25。",
  "n_reviews": 0,
  "start": 300.7,
  "end": 305.18
 },
 {
  "input": "It also hits 4,3, since 4 squared plus 3 squared gives 25.",
  "translatedText": "它也达到 4,3，因为 4 的平方加 3 的平方得 到 25。",
  "model": "google_nmt",
  "from_community_srt": "也会经过(4,3)，",
  "n_reviews": 0,
  "start": 306.1,
  "end": 310.74
 },
 {
  "input": "And likewise it hits 3,4, and also 0,5.",
  "translatedText": "同样，它达到 3,4，也达到 0,5。",
  "model": "google_nmt",
  "from_community_srt": "因为4^2+3^2=25 同理， 它也会经过(3,4) 和(0,5)。",
  "n_reviews": 0,
  "start": 312.78,
  "end": 317.58
 },
 {
  "input": "And what's really happening here is that you're counting how many pairs of integers, a,b, have the property that a squared plus b squared equals 25.",
  "translatedText": "这里真正发生的是，您正在计算有多少对整数 a、b 具有 a 的平方加 b 的平方等于 25 的属性。",
  "model": "google_nmt",
  "from_community_srt": "而这背后实际上是在计算 到底有多少这样的整数对(a,b)满足a^2+b^2=25 从这个圆上，",
  "n_reviews": 0,
  "start": 318.66,
  "end": 327.48
 },
 {
  "input": "And looking at this circle, it looks like there's a total of 12 of them.",
  "translatedText": "而看这个圆圈，一共有十二个。",
  "model": "google_nmt",
  "from_community_srt": "我们发现有12个这样的整数对。",
  "n_reviews": 0,
  "start": 328.12,
  "end": 332.0
 },
 {
  "input": "As another example, take a look at the ring with radius square root of 11.",
  "translatedText": "再举一个例子，看一下半径平方根为 11 的环。",
  "model": "google_nmt",
  "from_community_srt": "再来看看半径为根号11的圆，",
  "n_reviews": 0,
  "start": 332.7,
  "end": 335.98
 },
 {
  "input": "It doesn't hit any lattice points, and that corresponds to the fact that you cannot find two integers whose squares add up to 11.",
  "translatedText": "它没有击中任何格点，这对应于你找不到两个平 方加起来为 11 的整数这一事实。",
  "model": "google_nmt",
  "from_community_srt": "它没有经过任何一个格点 这就意味着并不能找到两个整数，",
  "n_reviews": 0,
  "start": 336.6,
  "end": 344.56
 },
 {
  "input": "Try it.",
  "translatedText": "尝试一下。",
  "model": "google_nmt",
  "from_community_srt": "满足其平方和为11.",
  "n_reviews": 0,
  "start": 345.14,
  "end": 348.7
 },
 {
  "input": "Many times in math, when you see a question that has to do with the 2d plane, it can be surprisingly fruitful to just ask what it looks like when you think of this plane as the set of all complex numbers.",
  "translatedText": "很多时候，在数学中，当你看到一个与二维平面有关的问题时，只要问 一下当你把这个平面想象成所有复数的集合时它看起来是什么样子， 就会出人意料地富有成效。",
  "model": "google_nmt",
  "from_community_srt": "在处理一个和二维平面有关的问题时 试着将其视做复平面后再来看看这个问题变成了什么 也许会有所启发。",
  "n_reviews": 0,
  "start": 348.72,
  "end": 359.34
 },
 {
  "input": "So instead of this lattice point here as the pair of integer coordinates, 3,4, instead think of it as the single complex number, 3 plus 4i.",
  "translatedText": "因此，不要将此格点视为一对整 数坐标 3,4，而是将其视为单个复数 3 加 4i。",
  "model": "google_nmt",
  "from_community_srt": "所以与其将这些格点看做形如 (3,4)的整数对， 不如将格点视作一个单一复数3+4i 换言之，",
  "n_reviews": 0,
  "start": 360.4,
  "end": 369.38
 },
 {
  "input": "That way, another way to think about the sum of the squares of its coordinates, 3 squared plus 4 squared, is to multiply this number by 3 minus 4i.",
  "translatedText": "这样，考虑坐标平方和（3 平方加 4 平方）的另一种方法就是将该数字乘以 3 减 4i。",
  "model": "google_nmt",
  "from_community_srt": "其坐标平方和3^2+4^2的另一表述方法 就是将其乘以3-4i。",
  "n_reviews": 0,
  "start": 370.62,
  "end": 380.0
 },
 {
  "input": "This is called its complex conjugate, it's what you get by reflecting over the real axis, replacing i with negative i.",
  "translatedText": "这称为复共轭，它是通过在实轴 上反射、用负 i 替换 i 得到的。",
  "model": "google_nmt",
  "from_community_srt": "这个数叫做它的“共轭复数”， 它们关于实数轴对称 只是将i换成了-i。",
  "n_reviews": 0,
  "start": 380.76,
  "end": 387.3
 },
 {
  "input": "And this might seem like a strange step if you don't have much of a history with complex numbers, but describing this distance as a product can be unexpectedly useful.",
  "translatedText": "如果您没有太多关于复数的历史，这可能看起来是一个奇怪的步 骤，但是将这个距离描述为一个乘积可能会出乎意料地有用。",
  "model": "google_nmt",
  "from_community_srt": "如果你没有学过有关复数的知识 这看起来不是很容易理解， 不过将距离描述为 它们的乘积非常有用。",
  "n_reviews": 0,
  "start": 388.34,
  "end": 397.06
 },
 {
  "input": "It turns our question into a factoring problem, which is ultimately why patterns among prime numbers will come into play.",
  "translatedText": "它将我们的问题变成了因式分解问题，这就是素数之间的模式最 终发挥作用的原因。",
  "model": "google_nmt",
  "from_community_srt": "这就将原问题转化成了分解质因数的问题。 这也是为什么质数会在其中出现的原因。",
  "n_reviews": 0,
  "start": 397.78,
  "end": 403.84
 },
 {
  "input": "Algebraically, this relation is straightforward enough to verify.",
  "translatedText": "从代数上来说，这个关系很简单，足 以验证。",
  "model": "google_nmt",
  "from_community_srt": "代数上， 这个关系很容易验证。",
  "n_reviews": 0,
  "start": 405.06,
  "end": 408.28
 },
 {
  "input": "You get a 3 squared, and then the 3 times minus 4i cancels out with the 4i times 3, and then you have negative 4i squared, which because i squared is negative 1, becomes plus 4 squared.",
  "translatedText": "你得到一个 3 的平方，然后 3 乘以负 4i 与 4i 乘 以 3 相抵消，然后你得到负 4i 的平方，因为 i 的平方是负 1，所 以变成了正 4 的平方。",
  "model": "google_nmt",
  "from_community_srt": "先有3^2， 然后3*(-4i)和 4i*3相抵消， 最后有-(4i)^2， 而因为i^2=-1， 最终就成了+4^2。",
  "n_reviews": 0,
  "start": 408.56,
  "end": 422.84
 },
 {
  "input": "This is also quite nice to see geometrically, and if you're a little rusty with how complex multiplication works, I do have another video that goes more into detail about why complex multiplication looks the way it does.",
  "translatedText": "从几何角度来看，这也很不错，如果 您对复杂乘法的工作原理有点生疏，我确实有另一个视 频更详细地介绍了为什么复杂乘法看起来像它的样子。",
  "model": "google_nmt",
  "from_community_srt": "这个过程在几何上也很容易理解。 如果你对以下内容不甚了解， 我在另外一个视频中深入讲解了复数乘积的几何意义。",
  "n_reviews": 0,
  "start": 424.16,
  "end": 435.32
 },
 {
  "input": "The way you might think about a case like this is that the number 3 plus 4i has a magnitude of 5 and some angle off the horizontal, and what it means to multiply it by 3 minus 4i is to rotate by that same angle in the opposite direction, putting it on the positive real axis, and then to stretch out by a factor of 5, which in this case lands you on the output 25, the square of the magnitude.",
  "translatedText": "您可能会想到这样的情况：数字 3 加 4i 的大小 为 5，并且与水平面有一定角度，将其乘以 3 减 4i 意味着以相反的方向旋转相同的角度方向，将其 放在正实轴上，然后拉伸 5 倍，在本例中，输出为 25，即幅度的平方。",
  "model": "google_nmt",
  "from_community_srt": "复数3+4i， 其模为5。 译者注：模可以理解为到原点的距离 并有一定的辐角。 乘以3-4i相当于逆方向旋转同样的角度 这样就回到了正实数轴上， 然后将其模再扩大5倍 最后就会得到25， 也就是其模的平方。",
  "n_reviews": 0,
  "start": 435.78,
  "end": 460.2
 },
 {
  "input": "The collection of all these lattice points, a plus bi, where a and b are integers, has a special name, they're called the Gaussian integers, named after Martin Sheen.",
  "translatedText": "所有这些格点的集合，a加bi， 其中a和b是整数，有一个特殊的名字，它们被称为高斯整数 ，以马丁·辛的名字命名。",
  "model": "google_nmt",
  "from_community_srt": "对所有整数a,b， 形如a+bi的格点， 有一个特殊的名字叫“高斯整数”， 它得名于马田.辛。 译者注：原作者讲了个冷笑话， 实际上他俩没什么关系， 只是长得像。",
  "n_reviews": 0,
  "start": 463.1,
  "end": 473.72
 },
 {
  "input": "Geometrically, you'll still be asking the same question, how many of these lattice points, Gaussian integers, are a given distance away from the origin, like square root of 25?",
  "translatedText": "从几何角度来看，您仍然会问同样 的问题，这些格点（高斯整数）中有多少距离原点给定距离（ 例如 25 的平方根）？",
  "model": "google_nmt",
  "from_community_srt": "几何角度看， 问题似乎没有变化， 成了到底有多少这样的高斯整数 满足其距离是一个给定的数字， 比如根号25。",
  "n_reviews": 0,
  "start": 474.5,
  "end": 483.98
 },
 {
  "input": "But we'll be phrasing it in a slightly more algebraic way, how many Gaussian integers have the property that multiplying by their complex conjugate gives you 25?",
  "translatedText": "但我们会用更代数的方式 来表述，有多少个高斯整数具有乘以复共轭得到 25 的性质？",
  "model": "google_nmt",
  "from_community_srt": "而更代数化的表达就成了到底有多少这样的高斯整数 满足乘以其共轭复数后会得到25？",
  "n_reviews": 0,
  "start": 484.88,
  "end": 494.8
 },
 {
  "input": "This might seem needlessly complex, but it's the key to understanding the seemingly random pattern for how many lattice points are a given distance away from the origin.",
  "translatedText": "这可能看起来不必要地复杂， 但它是理解距原点给定距离有多少格点的看似 随机模式的关键。",
  "model": "google_nmt",
  "from_community_srt": "这个问题看上去更复杂了， 但对我们理解给定圆内 有多少格点的规律至关重要。",
  "n_reviews": 0,
  "start": 496.54,
  "end": 505.62
 },
 {
  "input": "To see why, we first need to understand how numbers factor inside the Gaussian integers.",
  "translatedText": "要了解原因，我们首先需要了解数字 如何在高斯整数中进行分解。",
  "model": "google_nmt",
  "from_community_srt": "我们先要理解数字在高斯整数范围内如何分解 简单回顾，",
  "n_reviews": 0,
  "start": 506.58,
  "end": 512.22
 },
 {
  "input": "As a refresher, among ordinary integers, every number can be factored as some unique collection of prime numbers.",
  "translatedText": "回顾一下，在普通整数中，每个 数字都可以分解为一些唯一的素数集合。",
  "model": "google_nmt",
  "from_community_srt": "对于普通整数， 每个数字都能分解为唯一的 质因数的乘积。",
  "n_reviews": 0,
  "start": 513.22,
  "end": 520.68
 },
 {
  "input": "For example, 2250 can be factored as 2 times 3 squared times 5 cubed, and there is no other collection of prime numbers that also multiplies to make 2250.",
  "translatedText": "例如，2250 可以 因式分解为 2 乘以 3 的平方乘以 5 的立方，并且没有其他素数 集合也可以相乘得到 2250。",
  "model": "google_nmt",
  "from_community_srt": "比如2250可以分解为2*3^2*5^3.",
  "n_reviews": 0,
  "start": 521.56,
  "end": 534.6
 },
 {
  "input": "Unless you let negative numbers into the picture, in which case you could just make some of the primes in this factorization negative.",
  "translatedText": "除非你让负数进入图片，在这种 情况下，你可以将这个因式分解中的一些素数设为负数。",
  "model": "google_nmt",
  "from_community_srt": "并不会有其他质数的乘积会得到2250 除非你将其中一些质数变成负的 所以整数的分解方法并不真正唯一，",
  "n_reviews": 0,
  "start": 535.76,
  "end": 542.6
 },
 {
  "input": "So really, within the integers, factorization is not perfectly unique, it's almost unique, with the exception that you can get a different looking product by multiplying some of the factors by negative 1.",
  "translatedText": "所以实际上，在整数中，因式分解并不是完全唯一的，它几乎 是唯一的，除了您可以通过将某些因数乘以负 1 来获得看 起来不同的乘积。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 543.64,
  "end": 555.4
 },
 {
  "input": "The reason I bring that up is that factoring works very similarly inside the Gaussian integers.",
  "translatedText": "我提出这一点的原因是，因式分解在高斯 整数中的工作原理非常相似。",
  "model": "google_nmt",
  "from_community_srt": "但却几乎是唯一的 只是可以将其中一些因子乘以-1 高斯整数的质因数分解和普通整数的分解类似 比如5，",
  "n_reviews": 0,
  "start": 557.96,
  "end": 562.84
 },
 {
  "input": "Some numbers, like 5, can be factored into smaller Gaussian integers, which in this case is 2 plus i times 2 minus i.",
  "translatedText": "有些数字（例如 5）可以分解为更 小的高斯整数，在本例中为 2 加 i 乘以 2 减 i。",
  "model": "google_nmt",
  "from_community_srt": "就能够分解为 更小的高斯整数的积(2+i)(2-i)，",
  "n_reviews": 0,
  "start": 563.54,
  "end": 571.88
 },
 {
  "input": "This Gaussian integer, 2 plus i, cannot be factored into anything smaller, so we call it a Gaussian prime.",
  "translatedText": "这个高斯整数 2 加 i 不能因式分解为任何更小的值，因此我们将其称为高斯素数。",
  "model": "google_nmt",
  "from_community_srt": "而2+i则不能继续分解 所以我们将其称为“高斯质数” 同样的，",
  "n_reviews": 0,
  "start": 572.88,
  "end": 580.02
 },
 {
  "input": "Again, this factorization is almost unique, but this time not only can you multiply each one of those factors by negative 1 to get a factorization that looks different, you can also be extra sneaky and multiply one of these factors by i, and the other one by negative i.",
  "translatedText": "同样，这个因式分解几乎是唯一的，但这一次你不仅可以将这些 因数中的每一个乘以负 1 以获得看起来不同的因式分解，你 还可以更加狡猾地将这些因数之一乘以 i，然后将另一个乘以负 岛一号。",
  "model": "google_nmt",
  "from_community_srt": "这样的质因数分解也几乎是唯一的。 但这次， 不仅乘以-1就能得到看起来不同的分解， 还可以 将其中一个因子乘i， 另一个乘-i。",
  "n_reviews": 0,
  "start": 581.08,
  "end": 600.98
 },
 {
  "input": "This will give you a different way to factor 5 into two distinct Gaussian primes.",
  "translatedText": "这将为您提供一种不同的方法，将 5 分解为两个不同的高斯素 数。",
  "model": "google_nmt",
  "from_community_srt": "这就得到了一个将5分解成 高斯质数的新分解方法。",
  "n_reviews": 0,
  "start": 602.18,
  "end": 607.44
 },
 {
  "input": "But other than the things you can get by multiplying some of these factors by negative 1, or i, or negative i, factorization within the Gaussian integers is unique.",
  "translatedText": "但是，除了将这些因子中的一些因子乘以负 1 或 i 或负 i 可以获得的结果之外，高斯整数内的因式分解是独一无二的。",
  "model": "google_nmt",
  "from_community_srt": "但除了将一些因子乘以 -1， i或-i， 在高斯质数内的分解方法是唯一的。",
  "n_reviews": 0,
  "start": 608.42,
  "end": 618.44
 },
 {
  "input": "And if you can figure out how ordinary prime numbers factor inside the Gaussian integers, that will be enough to tell us how any other natural number factors inside these Gaussian integers.",
  "translatedText": "如果你能弄清楚普通素数如何因式分解高斯整数，那就 足以告诉我们任何其他自然数如何因式分解这些高斯整 数。",
  "model": "google_nmt",
  "from_community_srt": "如果你能找出普通质数的高斯质数分解方法， 就能找出任何自然数的高斯质数分解方式。",
  "n_reviews": 0,
  "start": 620.12,
  "end": 630.4
 },
 {
  "input": "And so here we pull in a crucial and pretty surprising fact.",
  "translatedText": "因此，我们在这里提出了一个至关重要且相当令人惊讶的事实。",
  "model": "google_nmt",
  "from_community_srt": "至此， 我们提出一个关键的 也令人惊异的事实。",
  "n_reviews": 0,
  "start": 631.24,
  "end": 635.04
 },
 {
  "input": "Prime numbers that are one above a multiple of 4, like 5, or 13, or 17, can always be factored into exactly two distinct Gaussian primes.",
  "translatedText": "大于 4 的倍数的素数（例如 5、13 或 17）始终可以因式分解 为两个不同的高斯素数。",
  "model": "google_nmt",
  "from_community_srt": "形如4n+1的质数 如5， 13， 17总能将其分解为两个不同的高斯质数。",
  "n_reviews": 0,
  "start": 635.96,
  "end": 647.56
 },
 {
  "input": "This corresponds with the fact that rings with a radius equal to the square root of one of these prime numbers always hit some lattice points.",
  "translatedText": "这与半径等于这些素数之一 的平方根的环总是击中某些格点的事实相对应。",
  "model": "google_nmt",
  "from_community_srt": "以这些质数的平方根为半径的圆 一定会经过一些格点，",
  "n_reviews": 0,
  "start": 648.86,
  "end": 655.96
 },
 {
  "input": "In fact, they always hit exactly 8 lattice points, as you'll see in just a moment.",
  "translatedText": "事实上，它们总是恰好命中 8 个格点，稍后您就会看到。",
  "model": "google_nmt",
  "from_community_srt": "而且一定是8个格点。",
  "n_reviews": 0,
  "start": 656.62,
  "end": 660.44
 },
 {
  "input": "On the other hand, prime numbers that are 3 above a multiple of 4, like 3, or 7, or 11, cannot be factored further inside the Gaussian integers.",
  "translatedText": "另一方面，大于 4 的倍数 3 的素数（例如 3、7 或 11）不能在高斯整数内进一步分解。",
  "model": "google_nmt",
  "from_community_srt": "形如4n+3的质数 比如3， 7， 11等等不能被进一步分解为高斯质数。",
  "n_reviews": 0,
  "start": 663.44,
  "end": 673.68
 },
 {
  "input": "Not only are they primes in the normal numbers, but they're also Gaussian primes, unsplittable even when i is in the picture.",
  "translatedText": "它们不仅是普通 数中的素数，而且还是高斯素数，即使 i 在图中也不 可分割。",
  "model": "google_nmt",
  "from_community_srt": "它们不仅是普通质数还是高斯质数， 再不能进一步分解 也就是说，",
  "n_reviews": 0,
  "start": 674.6,
  "end": 681.32
 },
 {
  "input": "This corresponds with the fact that a ring whose radius is the square root of one of those primes will never hit any lattice points.",
  "translatedText": "这对应于这样一个事实：半径为这些素 数之一的平方根的环永远不会碰到任何格点。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 682.2,
  "end": 688.98
 },
 {
  "input": "This pattern right here is the regularity within prime numbers that we're going to ultimately exploit.",
  "translatedText": "这里的模式就是我们最终要利用的素数内的规 律性。",
  "model": "google_nmt",
  "from_community_srt": "以这些质数的平方根为半径的圆 永远不会经过格点 这个在质数中的规律我们之后还会细讲。",
  "n_reviews": 0,
  "start": 693.18,
  "end": 698.88
 },
 {
  "input": "In a later video I might explain why on earth this is true, why a prime number's remainder when divided by 4 has anything to do with whether or not it factors inside the Gaussian integers, or said differently, whether or not it can be expressed as the sum of two squares.",
  "translatedText": "在后面的视频中，我可能会解释为什么这是 真的，为什么素数除以 4 时的余数与它是否包含 高斯整数有关，或者换句话说，是否可以表示为两个 平方和。",
  "model": "google_nmt",
  "from_community_srt": "稍后的视频中我也会解释为什么是这样。 为什么一个质数 被4除的余数会和是否能被高斯质数分解相关 也就是说能写成两个数的平方和。",
  "n_reviews": 0,
  "start": 699.66,
  "end": 715.06
 },
 {
  "input": "But here, and now, we'll just have to take it as a given.",
  "translatedText": "但此时此地，我们只能将其视为理所当然。",
  "model": "google_nmt",
  "from_community_srt": "但现在我们就假定如此 质数2很特别，",
  "n_reviews": 0,
  "start": 715.98,
  "end": 718.58
 },
 {
  "input": "The prime number 2, by the way, is a little special, because it does factor, you can write it as 1 plus i times 1 minus i, but these two Gaussian primes are a 90 degree rotation away from each other, so you can multiply one of them by i to get the other.",
  "translatedText": "顺便说一 句，素数 2 有点特殊，因为它确实因式分解，你可以把它写成 1 加 i 乘以 1 减 i，但这两个高斯素数彼此旋转 90 度 ，所以你可以其中一个乘以 i 即可得到另一个。",
  "model": "google_nmt",
  "from_community_srt": "因为它 能被分解为(1+i)(1-i)， 但这两个高斯质数实际上 就是彼此旋转了90°，",
  "n_reviews": 0,
  "start": 719.68,
  "end": 735.72
 },
 {
  "input": "And that fact is going to make us want to treat the prime number 2 a little bit differently for where all of this stuff is going, so just keep that in the back of your mind.",
  "translatedText": "这一事实将使 我们想要以稍微不同的方式对待素数 2，以了 解所有这些东西的走向，所以请记住这一点。",
  "model": "google_nmt",
  "from_community_srt": "所以其中一个乘以i就得到了另一个 这个事实显得质数2很特殊， 一会儿我们还会再提到。",
  "n_reviews": 0,
  "start": 736.56,
  "end": 744.42
 },
 {
  "input": "Remember, our goal here is to count how many lattice points are a given distance away from the origin, and doing this systematically for all distances square root of n can lead us to a formula for pi.",
  "translatedText": "请记住，我们的目标是计算距原点给定距离有多少格点，并且 对所有距离 n 的平方根系统地执行此操作可以得出 p i 的公式。",
  "model": "google_nmt",
  "from_community_srt": "还记得吗， 我们今天的目标是计算有多少个格点 在一个给定半径的圆内。 搞清楚每一个√n为半径的圆，",
  "n_reviews": 0,
  "start": 746.86,
  "end": 757.82
 },
 {
  "input": "And counting the number of lattice points with a given magnitude, like square root of 25, is the same as asking how many Gaussian integers have the special property that multiplying them by their complex conjugate gives you 25.",
  "translatedText": "计算给定大小（例如 25 的平方根 ）的格点数量，与询问有多少个高斯整数具有特 殊性质（将它们乘以复共轭得到 25）相同。",
  "model": "google_nmt",
  "from_community_srt": "就能得到关于π的表达式， 以及符合要求的格点数。 问题就成了。 给定一个数字， 比如√25， 有多少高斯整数乘以其共轭复数会得到25.",
  "n_reviews": 0,
  "start": 758.92,
  "end": 772.66
 },
 {
  "input": "So here's the recipe for finding all Gaussian integers that have this property.",
  "translatedText": "因此，这是查找具有此属性的所有高斯整数的方法。",
  "model": "google_nmt",
  "from_community_srt": "现在我们按以下方法就能找到所有这样的高斯整数。",
  "n_reviews": 0,
  "start": 774.0,
  "end": 778.0
 },
 {
  "input": "Step 1, factor 25, which inside the ordinary integers looks like 5 squared, but since 5 factors even further, as 2 plus i times 2 minus i, 25 breaks down as these four Gaussian primes.",
  "translatedText": "步骤 1，因式 25，在普通整数中看起来像 5 的平方，但由于 5 的 因式更进一步，如 2 加 i 乘以 2 减 i，25 分解为这四个高 斯素数。",
  "model": "google_nmt",
  "from_community_srt": "首先， 将其分解为普通质因数5*5。 因为5可以进一步分解为(2+i)(2-i) 所以25就能分解为4个高斯质数。",
  "n_reviews": 0,
  "start": 778.0,
  "end": 792.6
 },
 {
  "input": "Step 2, organize these into two different columns, with conjugate pairs sitting right next to each other.",
  "translatedText": "第 2 步，将它们组织成两 个不同的列，共轭对彼此相邻。",
  "model": "google_nmt",
  "from_community_srt": "然后将其分成两列 每一对共轭复数分列两侧 现在将每一列数乘起来，",
  "n_reviews": 0,
  "start": 793.5,
  "end": 799.5
 },
 {
  "input": "Once you do that, multiply what's in each column, and you'll come out with two different Gaussian integers on the bottom.",
  "translatedText": "一旦你这样做了，将每列中的内容相乘，你就会在底部得到 两个不同的高斯整数。",
  "model": "google_nmt",
  "from_community_srt": "就得到了两个高斯整数。",
  "n_reviews": 0,
  "start": 800.26,
  "end": 806.44
 },
 {
  "input": "Because everything on the right is a conjugate with everything on the left, what comes out is a complex conjugate pair which multiplies to 25.",
  "translatedText": "因为右边的所有内容都与左边的所 有内容共轭，所以结果是一个乘以 25 的复共轭 对。",
  "model": "google_nmt",
  "from_community_srt": "因为左右两边互为共轭， 乘积得到的也是 共轭复数对， 他们相乘就是25.",
  "n_reviews": 0,
  "start": 806.44,
  "end": 816.54
 },
 {
  "input": "Picking an arbitrary standard, let's say that the product from the left column is the output of our recipe.",
  "translatedText": "选择任意标准，假设左列中 的产品是我们配方的输出。",
  "model": "google_nmt",
  "from_community_srt": "随意分组， 左侧的乘积就是其中一个结果。",
  "n_reviews": 0,
  "start": 817.98,
  "end": 823.14
 },
 {
  "input": "Notice, there are three choices for how you can divvy up the primes that can affect this output.",
  "translatedText": "请注意，对于如何分配可能影响此输出的素数，有三种选 择。",
  "model": "google_nmt",
  "from_community_srt": "应注意， 总共有三种不同的分配方式 将这些高斯质数分列两侧。",
  "n_reviews": 0,
  "start": 824.68,
  "end": 830.38
 },
 {
  "input": "Pictured here, both copies of 2 plus i are in the left column, and that gives us the product 3 plus 4i.",
  "translatedText": "如图所示，2 加 i 的两个副本都在左 列中，这样我们就得到了乘积 3 加 4i。",
  "model": "google_nmt",
  "from_community_srt": "本例中可将两个2+i都放在左侧 左侧的乘积就是3+4i，",
  "n_reviews": 0,
  "start": 831.3,
  "end": 837.5
 },
 {
  "input": "You could also have chosen to have only one copy of 2 plus i in the left column, in which case the product would be 5.",
  "translatedText": "您也可以选择在左列中仅保留一份 2 加 i，在这种情况 下，乘积将为 5。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 838.46,
  "end": 844.94
 },
 {
  "input": "Or you could have both copies of 2 plus i in the right column, in which case the output of our recipe would have been 3 minus 4i.",
  "translatedText": "或者，您可以在右列中同时拥有 2 加 i 的两个副本，在这种情况下，我们的配方的输出将是 3 减 4i。",
  "model": "google_nmt",
  "from_community_srt": "也可以将一个2+i放在左侧 得到的乘积就是5；或将两个2+i都放在右侧 乘积就会是3-4i。",
  "n_reviews": 0,
  "start": 845.72,
  "end": 853.24
 },
 {
  "input": "And those three possible outputs are all different lattice points on a circle with radius square root of 25.",
  "translatedText": "这三个可能的输出都是半径平方根为 25 的圆上的不 同格点。",
  "model": "google_nmt",
  "from_community_srt": "这三个不同的结果都是半径为√25的圆 所会经过的高斯整数格点，",
  "n_reviews": 0,
  "start": 855.92,
  "end": 862.28
 },
 {
  "input": "But why does this recipe not yet capture all 12 of the lattice points?",
  "translatedText": "但为什么这个配方还没有捕获所有 1 2 个格点呢？",
  "model": "google_nmt",
  "from_community_srt": "但为什么总共会有12个点呢？",
  "n_reviews": 0,
  "start": 864.34,
  "end": 869.12
 },
 {
  "input": "Remember how I mentioned that a factorization into Gaussian primes can look different if you multiply some of them by i, or –1, or –i?",
  "translatedText": "还记得我曾提到过，如果将其中一些素数乘以 i、–1 或 –i，则分解为高斯素数可能看起来会有所不同吗？",
  "model": "google_nmt",
  "from_community_srt": "之前提过， 将这些因子乘以i， -1或-i就能得到 看起来不同的分解方法。",
  "n_reviews": 0,
  "start": 870.18,
  "end": 878.06
 },
 {
  "input": "In this case, you could write the factorization of 25 differently, maybe splitting up one of those 5s as –1 plus 2i times –1 minus 2i.",
  "translatedText": "在这种情况下，您可以以不同的方式编写 25 的因式分解，也许 将其中一个 5 分解为 –1 加 2i 乘以 –1 减 2i。",
  "model": "google_nmt",
  "from_community_srt": "稍微改写一下， 将左侧其中一个5写成(-1+2i)(-1-2i) 这会影响最后的结果，",
  "n_reviews": 0,
  "start": 878.88,
  "end": 888.24
 },
 {
  "input": "And if you do that, running through the same recipe, it can affect the result, you'll get a different product out of that left column.",
  "translatedText": "如果你这样做，运行相同的配方，它会影 响结果，你会从左列中得到不同的产品。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 888.24,
  "end": 894.98
 },
 {
  "input": "The only effect this will have is to multiply the total output by i, or –1, or –i.",
  "translatedText": "唯一的效果是将总输出乘以 i、或 –1、或 –i。",
  "model": "google_nmt",
  "from_community_srt": "但仅仅只是将这些结果 乘以i， -1或-i。",
  "n_reviews": 0,
  "start": 896.0,
  "end": 903.18
 },
 {
  "input": "So as a final step for our recipe, let's say you have to make one of four choices.",
  "translatedText": "因此，作为我们食谱的最后一步，假设您必须做出四个选择之一。",
  "model": "google_nmt",
  "from_community_srt": "所以最终的结果就是将一开始的三个结果 乘以1，",
  "n_reviews": 0,
  "start": 903.9,
  "end": 908.14
 },
 {
  "input": "Take that product from the left column, and choose to multiply it by 1, i, –1, or –i, corresponding to rotations that are some multiple of 90 degrees.",
  "translatedText": "从左列中取出该乘积，然后选择将其乘以 1、i、– 1 或 –i，对应于 90 度的某个倍数的旋转。",
  "model": "google_nmt",
  "from_community_srt": "i， -1或-i。 这三个格点 乘以1， i，",
  "n_reviews": 0,
  "start": 908.8,
  "end": 919.36
 },
 {
  "input": "That will account for all 12 different ways of constructing a Gaussian integer whose product with its own conjugate is 25.",
  "translatedText": "这将解释构造高斯整数的所有 12 种不同方法，该整数与其自 身共轭的乘积为 25。",
  "model": "google_nmt",
  "from_community_srt": "-1或-i后总共就能到12个符合要求的格点 也即他们与其共轭复数的乘积会是25 这个过程有点复杂，",
  "n_reviews": 0,
  "start": 921.54,
  "end": 928.72
 },
 {
  "input": "This process is a little complicated, so I think the best way to get a feel for it is to try it out with more examples.",
  "translatedText": "这个过程有点复杂，所以我 认为感受它的最好方法是尝试更多的例子。",
  "model": "google_nmt",
  "from_community_srt": "所以为了更好的理解 我们再来看看另一个例子 这次我们看125，",
  "n_reviews": 0,
  "start": 930.52,
  "end": 935.96
 },
 {
  "input": "Let's say instead we were looking at 125, which is 5 cubed.",
  "translatedText": "假设我们正在查看 125，即 5 的立方。",
  "model": "google_nmt",
  "from_community_srt": "它能被分解为5*5*5。",
  "n_reviews": 0,
  "start": 936.76,
  "end": 940.76
 },
 {
  "input": "In that case, we would have four different choices for how to divvy up the prime conjugate pairs into these two columns.",
  "translatedText": "在这种情况下，我们将有四种不同的选择来将素数共轭 对分配到这两列中。",
  "model": "google_nmt",
  "from_community_srt": "这次总共有4种 不同的分配方式，",
  "n_reviews": 0,
  "start": 940.76,
  "end": 947.86
 },
 {
  "input": "You can either have zero copies of 2 plus i in the left column, one copy in there, two copies in there, or all three of them in the left column.",
  "translatedText": "您可以在左列中有零个 2 加 i 的副 本，在其中有一个副本，在其中有两个副本，或者在左列中拥有全部 三个副本。",
  "model": "google_nmt",
  "from_community_srt": "也即将0,1,2个或所有的2+i 放在左侧。",
  "n_reviews": 0,
  "start": 948.52,
  "end": 958.92
 },
 {
  "input": "Those four choices, multiplied by the final four choices of multiplying the product from the left column by 1, i, –1, or –i, would suggest that there are a total of 16 lattice points a distance square root of 125 away from the origin.",
  "translatedText": "这四个选项，乘以左列的乘积乘以 1 、i、–1 或 –i 的最后四个选项，表明 距 125 的距离平方根总共有 16 个格 点。 起源。",
  "model": "google_nmt",
  "from_community_srt": "这四个不同的分配方式， 左侧最后的乘积 再乘以1， i， -1或-i， 就会得到 总共16个符合要求的高斯整点，",
  "n_reviews": 0,
  "start": 959.66,
  "end": 976.96
 },
 {
  "input": "Indeed, if you draw that circle out and count, what you'll find is that it hits exactly 16 lattice points.",
  "translatedText": "事实上，如果你把那个圆画出来并数 一下，你会发现它恰好击中了 16 个格点。",
  "model": "google_nmt",
  "from_community_srt": "他们距离原点√125 如果你画一个圆， 你的确能发现确实是会经过刚好16个格点 像3这样的因子，",
  "n_reviews": 0,
  "start": 979.0,
  "end": 985.2
 },
 {
  "input": "But what if you introduce a factor like 3, which doesn't break down as the product of two conjugate Gaussian primes?",
  "translatedText": "但是，如果引入一个像 3 这样的因子，它不会分解为两个 共轭高斯素数的乘积呢？",
  "model": "google_nmt",
  "from_community_srt": "它们不能被进一步分解为两个共轭的 两个高斯复数。",
  "n_reviews": 0,
  "start": 986.68,
  "end": 993.52
 },
 {
  "input": "Well that really mucks up the whole system.",
  "translatedText": "好吧，这真的把整个系统搞乱了。",
  "model": "google_nmt",
  "from_community_srt": "重复以上同样的过程就会遇到问题。",
  "n_reviews": 0,
  "start": 994.42,
  "end": 996.44
 },
 {
  "input": "When you're divvying up the primes between the two columns, there's no way you can split up this 3.",
  "translatedText": "当你在两列之间分配素数时，你无法将这 3 列分开。",
  "model": "google_nmt",
  "from_community_srt": "当你将质数分配到两列时，",
  "n_reviews": 0,
  "start": 996.94,
  "end": 1002.12
 },
 {
  "input": "No matter where you put it, it leaves the columns imbalanced.",
  "translatedText": "无论你把它放在哪里，它都会使柱 子不平衡。",
  "model": "google_nmt",
  "from_community_srt": "因为不能将3分解 所以无论如何分配，",
  "n_reviews": 0,
  "start": 1002.52,
  "end": 1005.62
 },
 {
  "input": "And what that means is that when you take the product of all the numbers in each column, you're not going to end up with a conjugate pair.",
  "translatedText": "这意味着，当您对每列中的所 有数字求积时，您最终不会得到共轭对。",
  "model": "google_nmt",
  "from_community_srt": "两列因子总会不平衡 所以最后的乘积是不可能得到一对共轭复数的。",
  "n_reviews": 0,
  "start": 1006.26,
  "end": 1013.1
 },
 {
  "input": "So for a number like this, 3 times 5 cubed, which is 375, there's actually no lattice point you'll hit, no Gaussian integer whose product with its own conjugate gives you 375.",
  "translatedText": "因此，对于像这样的数字，3 乘以 5 的立方，即 3 75，实际上没有任何格点可以命中，也没有高斯整数与其自身 共轭的乘积可以得到 375。",
  "model": "google_nmt",
  "from_community_srt": "所以像3*5*5*5=375的数， 作图后不会经过任一格点。 没有任何一个高斯整数与其共轭的乘积会得到375 如果再引入一个因子3，",
  "n_reviews": 0,
  "start": 1013.66,
  "end": 1026.68
 },
 {
  "input": "However, if you introduce a second factor of 3, then you have an option.",
  "translatedText": "但是，如果您引入第二个因子 3 ，那么您就有一个选择。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1028.12,
  "end": 1032.42
 },
 {
  "input": "You can throw one 3 in the left column, and the other 3 in the right column.",
  "translatedText": "您可以在左列中投掷一个 3，在右 列中投掷另外 3 个。",
  "model": "google_nmt",
  "from_community_srt": "那就行得通了 就可以将其中一个3放在左侧， 另一放在右侧。",
  "n_reviews": 0,
  "start": 1032.92,
  "end": 1037.2
 },
 {
  "input": "Since 3 is its own complex conjugate, this leaves things balanced, in the sense that the products of the left and right columns will indeed be a complex conjugate pair.",
  "translatedText": "由于 3 是它自己的复共轭 ，这使得事情保持平衡，因为左列和右列的乘积 确实将是复共轭对。",
  "model": "google_nmt",
  "from_community_srt": "因为3和其本身是共轭的， 所以两列是平衡的， 也就是说 左右两侧的乘积会得到一对共轭复数。",
  "n_reviews": 0,
  "start": 1037.2,
  "end": 1047.64
 },
 {
  "input": "But it doesn't add any new options.",
  "translatedText": "但它没有添加任何新选项。",
  "model": "google_nmt",
  "from_community_srt": "但并不会增加最终的结果数量，",
  "n_reviews": 0,
  "start": 1049.38,
  "end": 1051.52
 },
 {
  "input": "There's still going to be a total of 4 choices for how to divvy up those factors of 5, multiplied by the final 4 choices of multiplying by 1, i, negative 1, or negative i.",
  "translatedText": "对于如 何除以 5 的因子，乘以乘以 1、i、负 1 或负 i 的最后 4 个选择，仍然总共有 4 个选择。",
  "model": "google_nmt",
  "from_community_srt": "仍然只有4种分配方法 将这些5的高斯质因子分列两侧， 将4个结果 乘以1， i，",
  "n_reviews": 0,
  "start": 1051.94,
  "end": 1061.4
 },
 {
  "input": "So just like the square root of 125 circle, this guy is also going to end up hitting exactly 16 lattice points.",
  "translatedText": "所以就像 125 圆的平方根一样，这个家伙最终也会恰好击 中 16 个格点。",
  "model": "google_nmt",
  "from_community_srt": "-1或-i后， 其结果就会和√125为半径的圆类似 也就是说，",
  "n_reviews": 0,
  "start": 1062.0,
  "end": 1069.72
 },
 {
  "input": "Let's just sum up where we are.",
  "translatedText": "让我们总结一下我们现在的情况。",
  "model": "google_nmt",
  "from_community_srt": "总共还是会经过16个格点 到此总结一下：当我们想搞清楚，",
  "n_reviews": 0,
  "start": 1071.24,
  "end": 1072.62
 },
 {
  "input": "When you're counting up how many lattice points lie on a circle with a radius square root of n, the first step is to factor n.",
  "translatedText": "当您计算半径平方根为 n 的圆上有多少个格点时，第一步 是对 n 进行因式分解。",
  "model": "google_nmt",
  "from_community_srt": "半径为根号N的圆 究竟经过多少个格点，",
  "n_reviews": 0,
  "start": 1073.02,
  "end": 1079.64
 },
 {
  "input": "And for prime numbers like 5, or 13, or 17, which factor further into a complex conjugate pair of Gaussian primes, the number of choices they give you will always be one more than the exponent that shows up with that factor.",
  "translatedText": "对于像 5、13 或 17 这样的素数，它们进一步分解成复数共轭高斯素数对， 它们给你的选择数量总是比该因子显示的指数多 1。",
  "model": "google_nmt",
  "from_community_srt": "第一步就是将N进行质因数分解 像5,13,17的质数可以进一步分解为一对共轭高斯质数 不同的分派方法就是比其幂多1个 而像3,7,11这样的质数本身就是高斯质数 不能被进一步分解，",
  "n_reviews": 0,
  "start": 1081.0,
  "end": 1094.8
 },
 {
  "input": "On the other hand, for prime factors like 3, or 7, or 11, which are already Gaussian primes and cannot be split, if they show up with an even power, you have one and only one choice with what to do with them.",
  "translatedText": "另一方面，对于像 3、7 或 11 这样的素数因子，它们已 经是高斯素数并且不能被分割，如果它们以偶次幂出现，那么您就 只有一个选择来处理它们。",
  "model": "google_nmt",
  "from_community_srt": "所以只有当它们的幂是偶数时 才有且仅有1种分配的方式。",
  "n_reviews": 0,
  "start": 1097.2,
  "end": 1108.9
 },
 {
  "input": "But if it's an odd exponent, you're screwed, and you have zero choices.",
  "translatedText": "但如果它是一个奇怪的指数，你就完蛋 了，你的选择为零。",
  "model": "google_nmt",
  "from_community_srt": "如果它们的幂是奇数 就不可能有分配方式将其均分。",
  "n_reviews": 0,
  "start": 1109.44,
  "end": 1113.24
 },
 {
  "input": "And always, no matter what, you have those final 4 choices at the end.",
  "translatedText": "无论如何，最后你总 会有最后 4 个选择。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1114.2,
  "end": 1117.64
 },
 {
  "input": "By the way, I do think this process right here is the most complicated part of the video.",
  "translatedText": "顺便说一句，我确实认为这里的这个过程是视频中最复杂的部分。",
  "model": "google_nmt",
  "from_community_srt": "最后你的结果将会是4倍 截止目前， 我觉得这个过程是整个视频最晦涩的部分 让我思考了好久才想明白，",
  "n_reviews": 0,
  "start": 1119.86,
  "end": 1124.7
 },
 {
  "input": "It took me a couple times to think through that yes, this is a valid way to count lattice points, so don't be shy if you want to pause and scribble things down to get a feel for it.",
  "translatedText": "我花了好几次时间才想通，是的，这是 计算格点的有效方法，所以如果您想暂 停并记下内容来感受它，请不要害羞。",
  "model": "google_nmt",
  "from_community_srt": "这确实是正确计数的方式。",
  "n_reviews": 0,
  "start": 1125.38,
  "end": 1134.2
 },
 {
  "input": "The one last thing to mention about this recipe is how factors of 2 affect the count.",
  "translatedText": "关于这个配方最后要提到的一件事是因子 2 如何影响计数。",
  "model": "google_nmt",
  "from_community_srt": "所以如果你想暂停一下想想明白也别觉得灰心 最后要提的便是因子2如何影响最后的结果 如果是偶数，",
  "n_reviews": 0,
  "start": 1134.92,
  "end": 1140.08
 },
 {
  "input": "If your number is even, then that factor of 2 breaks down as 1 plus i times 1 minus i, so you can divvy up that complex conjugate pair between the two columns.",
  "translatedText": "如果你 的数字是偶数，那么 2 的因子分解为 1 加 i 乘以 1 减 i，这样你就可以在两列之间分配复数共轭对。",
  "model": "google_nmt",
  "from_community_srt": "其质因数2就能被分解为(1+i)(1-i)， 所以也能像刚才一样 将其共轭复数分开。",
  "n_reviews": 0,
  "start": 1141.02,
  "end": 1151.82
 },
 {
  "input": "At first, it might look like this doubles your options, depending on how you choose to place those two Gaussian primes between the columns.",
  "translatedText": "乍一看，这可能会让 您的选择加倍，具体取决于您选择如何将这两个高斯素数放置 在列之间。",
  "model": "google_nmt",
  "from_community_srt": "乍一看，",
  "n_reviews": 0,
  "start": 1152.78,
  "end": 1160.58
 },
 {
  "input": "However, since multiplying one of these guys by i gives you the other one, when you swap them between the columns, the effect that has on the output from the left column is to just multiply it by i, or by negative i.",
  "translatedText": "然而，由于将其中一个乘以 i 会得到另 一个，因此当您在列之间交换它们时，对左列输出的影 响就是将其乘以 i 或负 i。",
  "model": "google_nmt",
  "from_community_srt": "将它们放在不同的位置 好像让最终分配方式翻倍 然而将其中一个高斯质数乘以i就能得到另一个 如果你将它们左右交换， 最后的结果仅仅是左边的乘积 乘以i或-i。",
  "n_reviews": 0,
  "start": 1161.46,
  "end": 1175.3
 },
 {
  "input": "So that's actually redundant with the final step, where we take the product of this left column and choose to multiply it by either 1, i, negative 1, or negative i.",
  "translatedText": "所以这对于最后一步 来说实际上是多余的，我们取左列的乘积并选择将其乘以 1、i、负 1 或负 i。",
  "model": "google_nmt",
  "from_community_srt": "所以最后一步中我们将结果乘以1,i,-1,-i后， 实际上导致了重复计数。",
  "n_reviews": 0,
  "start": 1175.3,
  "end": 1185.68
 },
 {
  "input": "What this means is that a factor of 2, or any power of 2, doesn't actually change the count at all.",
  "translatedText": "这意味着 2 的因数或 2 的任何幂实际上根本不会改变计数。",
  "model": "google_nmt",
  "from_community_srt": "这就意味着像因子2， 或其幂 实际上并不增加也不减少最后的计数。",
  "n_reviews": 0,
  "start": 1186.64,
  "end": 1193.24
 },
 {
  "input": "It doesn't hurt, but it doesn't help.",
  "translatedText": "它不疼，但没有 帮助。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1193.72,
  "end": 1195.62
 },
 {
  "input": "For example, a circle with radius square root of 5 hits 8 lattice points, and if you grow that radius to square root of 10, you also hit 8 lattice points, and square root of 20 also hits 8 lattice points, as does square root of 40.",
  "translatedText": "例如，半径平方根为 5 的圆会命中 8 个格点，如果将 半径增大到平方根 10，也会命中 8 个格点，平方根 20 也 会命中 8 个格点，平方根也是如此共 40 个。",
  "model": "google_nmt",
  "from_community_srt": "比如半径为√5的圆经过8个格点， 而半径为√10的圆 同样也经过8个格点， √20， √40等同理。",
  "n_reviews": 0,
  "start": 1196.42,
  "end": 1210.16
 },
 {
  "input": "Factors of 2 just don't make a difference.",
  "translatedText": "2 的因数 没有什么区别。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1211.02,
  "end": 1213.08
 },
 {
  "input": "Now what's about to happen is number theory at its best.",
  "translatedText": "现在即将发生的是数论的最佳状 态。",
  "model": "google_nmt",
  "from_community_srt": "有没有因子2对 最后的计数不产生影响 我们现在有一个复杂的计算方法，",
  "n_reviews": 0,
  "start": 1215.58,
  "end": 1218.32
 },
 {
  "input": "We have this complicated recipe telling us how many lattice points sit on a circle with radius square root of n, and it depends on the prime factorization of n.",
  "translatedText": "我们有这个复杂的公式告诉我们半径平方根为 n 的圆上有多少个格点，并且它取决于 n 的素因数分解。",
  "model": "google_nmt",
  "from_community_srt": "能告诉我们一个半径为√N的圆 会经过多少个格点， 而这竟然取决于N的质因数分解方式。",
  "n_reviews": 0,
  "start": 1218.98,
  "end": 1227.72
 },
 {
  "input": "To turn this into something simpler, something we can actually deal with, we're going to exploit the regularity of primes that those which are 1 above a multiple of 4 split into distinct Gaussian prime factors, while those that are 3 above a multiple of 4 cannot be split.",
  "translatedText": "为了把它变成更简单的东西，我们可以实际处理的东西，我们将利用素数的规 律性，即那些大于 4 的倍数 1 的素数分裂成不同的高斯素数因子，而 那些大于 4 的倍数 3 的素数分解为不同的高斯素数因子。 4 不能 分割。",
  "model": "google_nmt",
  "from_community_srt": "简单来说， 我们将质数按一定规律分类 形如4n+1的质数能被分解一对高斯质数， 而形如4n+3的质数不能被分解 这时我们引入一个简单函数，",
  "n_reviews": 0,
  "start": 1227.72,
  "end": 1243.5
 },
 {
  "input": "To do this, let's introduce a simple function, one which I'll label with the Greek letter chi.",
  "translatedText": "为此，我们引入一个简单的函数，我将用希腊字母 chi 对其进行标记。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1244.3,
  "end": 1248.76
 },
 {
  "input": "For inputs that are 1 above a multiple of 4, the output of chi is 1.",
  "translatedText": "对于 1 大于 4 的倍数的输入， chi 的输出为 1。",
  "model": "google_nmt",
  "from_community_srt": "以希腊字母chi命名的χ函数 对于4n+1的自变量，",
  "n_reviews": 0,
  "start": 1249.68,
  "end": 1254.82
 },
 {
  "input": "If it takes in an input 3 above a multiple of 4, the output of chi is negative 1.",
  "translatedText": "如果输入 3 大于 4 的倍数，则 chi 的输出为负 1。",
  "model": "google_nmt",
  "from_community_srt": "其函数值为1 对于4n+3的自变量，",
  "n_reviews": 0,
  "start": 1255.38,
  "end": 1260.9
 },
 {
  "input": "And then on all even numbers, it gives 0.",
  "translatedText": "然后对于所有偶数，它给出 0。",
  "model": "google_nmt",
  "from_community_srt": "其函数值为-1 而偶数，",
  "n_reviews": 0,
  "start": 1261.88,
  "end": 1265.24
 },
 {
  "input": "So if you evaluate chi on the natural numbers, it gives this very nice cyclic pattern, 1, 0, negative 1, 0, and then repeat indefinitely.",
  "translatedText": "因此，如果您对自然数评估 chi，它会给出非常好的循环模式：1, 0，负 1, 0，然后无限重复。",
  "model": "google_nmt",
  "from_community_srt": "其函数值为0。 所以看自然数χ函数的值 就会有一个简洁的周期律， 1， 0， -1，",
  "n_reviews": 0,
  "start": 1269.68,
  "end": 1279.36
 },
 {
  "input": "And this cyclic function chi has a very special property, it's what's called a multiplicative function.",
  "translatedText": "这个循环函数 chi 有一个非 常特殊的性质，就是所谓的乘法函数。",
  "model": "google_nmt",
  "from_community_srt": "0 如此循环.... χ函数有一个特殊的性质，",
  "n_reviews": 0,
  "start": 1280.86,
  "end": 1286.66
 },
 {
  "input": "If you evaluate it on two different numbers and multiply the results, like chi of 3 times chi of 5, it's the same as if you evaluate chi on the product of those two numbers, in this case chi of 15.",
  "translatedText": "如果您对两个不同的数字进行计算 并将结果相乘，例如 3 的 chi 乘以 5 的 chi，则与您根据这 两个数字的乘积计算 chi 是相同的，在本例中为 15。",
  "model": "google_nmt",
  "from_community_srt": "它是一个“可乘”函数 当你将两个数的函数值相乘， 其结果就是乘积的函数值 比如χ(3)*χ(5)=χ(15)，",
  "n_reviews": 0,
  "start": 1287.62,
  "end": 1299.78
 },
 {
  "input": "Likewise, chi of 5 times chi of 5 is equal to chi of 25.",
  "translatedText": "同样，5 的卡方乘 以 5 的卡方等于 25 的卡方。",
  "model": "google_nmt",
  "from_community_srt": "同样χ(5)*χ(5)=χ(25)，",
  "n_reviews": 0,
  "start": 1300.88,
  "end": 1304.8
 },
 {
  "input": "And no matter what two natural numbers you put in there, this property will hold.",
  "translatedText": "无论你在那里输入哪两个自然 数，这个属性都会成立。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1305.64,
  "end": 1310.16
 },
 {
  "input": "Go ahead, try it if you want.",
  "translatedText": "如果你愿意的话，就来尝试一下吧。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1310.7,
  "end": 1311.88
 },
 {
  "input": "So for our central question of counting lattice points in this way that involves factoring a number, what I'm going to do is write down the number of choices we have but using chi in what at first seems like a much more complicated way, but this has the benefit of treating all prime factors equally.",
  "translatedText": "因此，对于以这种方式计算格点的核心问题，涉及对数字进 行因式分解，我要做的是写下我们拥有的选择数量，但使用 chi 的方式乍一看似乎更复杂，但是这样做的好处是 平等对待所有主要因素。",
  "model": "google_nmt",
  "from_community_srt": "而且这对任意两个整数都成立 不信你试试 所以计算圆上经过的格点数的核心便成了质因数分解 我将不同的分配方式用χ函数表达写出来 乍一看似乎更复杂了， 但却可以将不同的质因数一同处理 对于每个质因数的幂，",
  "n_reviews": 0,
  "start": 1312.82,
  "end": 1329.56
 },
 {
  "input": "For each prime power, like 5 cubed, what you write down is chi of 1 plus chi of 5 plus chi of 5 squared plus chi of 5 cubed.",
  "translatedText": "对于每个素数幂，例如 5 的立方，您写下的 是 1 的 chi 加 5 的 chi 加 5 的平方加 5 的三次方。",
  "model": "google_nmt",
  "from_community_srt": "如5^3，",
  "n_reviews": 0,
  "start": 1330.66,
  "end": 1339.26
 },
 {
  "input": "You add up the value of chi on all the powers of this prime up to the one that shows up inside the factorization.",
  "translatedText": "您将 这个素数的所有幂的 chi 值相加，直到因式分解 中显示的值。",
  "model": "google_nmt",
  "from_community_srt": "写成的表达式是χ(5^0)+χ(5^1)+χ(5^2)+χ(5^3) 将这些质数不同的幂的χ函数值加起来 本例中，",
  "n_reviews": 0,
  "start": 1339.26,
  "end": 1346.22
 },
 {
  "input": "In this case, since 5 is 1 above a multiple of 4, all of these are just 1, so this sum comes out to be 4, which reflects the fact that a factor of 5 cubed gives you 4 options for how to divvy up the two Gaussian prime factors between the columns.",
  "translatedText": "在这种情况下，由于 5 是 4 的倍数之上的 1，因此所有这些都只是 1，因此这个总和为 4，这反映了这样一 个事实：5 的立方为您提供了 4 个选项来分配列之间的两个高斯素 因子。",
  "model": "google_nmt",
  "from_community_srt": "因为5是形如4n+1的数， 所以每个χ函数值都是1 所以最后的和是4， 和之前的事实相符。 也即5^3，",
  "n_reviews": 0,
  "start": 1347.34,
  "end": 1363.7
 },
 {
  "input": "For a factor like 3 to the 4th, what you write down looks totally similar, chi of 1 plus chi of 3 on and on up to chi of 3 to the 4th.",
  "translatedText": "对于像 3 的 4 次方这样的因数，您写下的内容看起来完全相似，1 的 chi 加上 3 的 chi 一直到 3 的 4 次方 chi。",
  "model": "google_nmt",
  "from_community_srt": "有4种不同的高斯质数分配方法 而对于像3^4这样的因子， 这个过程类似。 写成χ(3^0)+χ(3^1)+χ(3^2)+χ(3^3)+χ(3^4) 但这时，",
  "n_reviews": 0,
  "start": 1366.34,
  "end": 1374.96
 },
 {
  "input": "But in this case, since chi of 3 is negative 1, this sum oscillates, 1 minus 1 plus 1 minus 1 plus 1.",
  "translatedText": "但在这种情况下，由于 3 的 chi 为负 1，因此该和会振荡，即 1 减 1 加 1 减 1 加 1。",
  "model": "google_nmt",
  "from_community_srt": "因为χ(3)=-1， χ值会在1， -1之前来回变动 本例中，",
  "n_reviews": 0,
  "start": 1375.04,
  "end": 1383.72
 },
 {
  "input": "If it's an even power, like 4 in this case, the sum comes out to be 1, which encapsulates the fact that there is only one choice for what to do with those unsplittable 3's.",
  "translatedText": "如果它 是偶次幂，例如本例中的 4，则总和为 1，这概括了这样一个 事实：对于如何处理这些不可分割的 3，只有一种选择。",
  "model": "google_nmt",
  "from_community_srt": "因为3的幂是偶数， 所以最后的和会是1 也即对于这些3， 只有一种方法将其平等分开。",
  "n_reviews": 0,
  "start": 1384.42,
  "end": 1395.72
 },
 {
  "input": "But if it's an odd power, that sum comes out to be 0, indicating that you're screwed, you can't place that unsplittable 3.",
  "translatedText": "但如果 它是奇数次幂，那么总和就是 0，这表明你完蛋了，你不能放置 那个不可分割的 3。",
  "model": "google_nmt",
  "from_community_srt": "但如果是奇数次幂， 和就会是0， 也就不可能均匀分配。",
  "n_reviews": 0,
  "start": 1396.2,
  "end": 1402.82
 },
 {
  "input": "When you do this for a power of 2, what it looks like is 1 plus 0 plus 0 plus 0 on and on, since chi is always 0 on even numbers.",
  "translatedText": "当你对 2 的幂执行此操作时，看起来就像 1 加 0 加 0 加 0 不断，因为 chi 在偶数上始终为 0。",
  "model": "google_nmt",
  "from_community_srt": "再来看2的幂的情况， 因为偶数的χ函数值是0， 所以就会是1+0+0+...",
  "n_reviews": 0,
  "start": 1404.58,
  "end": 1413.38
 },
 {
  "input": "And this reflects the fact that a factor of 2 doesn't help and it doesn't hurt, you always have just one option for what to do with it.",
  "translatedText": "这反映 了这样一个事实：2 没有帮助，也没有坏处，你总是只 有一个选择来处理它。",
  "model": "google_nmt",
  "from_community_srt": "这就是说因子2， 并不会增加也不会减少最终的结果， 永远都只有1种分配方式。",
  "n_reviews": 0,
  "start": 1413.92,
  "end": 1421.06
 },
 {
  "input": "And as always, we keep a 4 in front to indicate that final choice of multiplying by 1, i, negative 1, or negative i.",
  "translatedText": "和往常一样，我们在前面保留 4 来表示最终选择乘以 1、i、负 1 或负 i。",
  "model": "google_nmt",
  "from_community_srt": "最后， 考虑到乘以1， i， -1， -i， 结果就会是4倍，",
  "n_reviews": 0,
  "start": 1421.94,
  "end": 1427.9
 },
 {
  "input": "We're getting close to the culmination now, things are starting to look organized, so pause and ponder, make sure everything feels good up to this point.",
  "translatedText": "我们现在 已经接近高潮了，事情开始看起来有条理，所以停 下来思考一下，确保到目前为止一切都感觉良好。",
  "model": "google_nmt",
  "from_community_srt": "所以前面有一个系数4 我们马上就要揭晓谜底了。 截至目前， 分析逐渐有了调理 暂停思考一会儿，",
  "n_reviews": 0,
  "start": 1429.08,
  "end": 1436.44
 },
 {
  "input": "Take the number 45 as an example.",
  "translatedText": "以45号为例。",
  "model": "google_nmt",
  "from_community_srt": "想清楚明白 以45为例子，",
  "n_reviews": 0,
  "start": 1437.14,
  "end": 1439.46
 },
 {
  "input": "This guy factors as 3 squared times 5, so the expression for the total number of lattice points is 4 times chi of 1 plus chi of 3 plus chi of 3 squared times chi of 1 plus chi of 5.",
  "translatedText": "这家伙因式分解为 3 的平方乘以 5，因此格点 总数的表达式为 4 乘以 1 的卡氏加上 3 的卡氏加上 3 的平方乘以 1 的卡氏加上 5 的卡氏。",
  "model": "google_nmt",
  "from_community_srt": "它能分解为3^2*5。 所以它经过的格点数 是4*(χ(3^0)+χ(3^1)+χ(3^2))(χ(5^0)+χ(5^1))，",
  "n_reviews": 0,
  "start": 1440.14,
  "end": 1452.44
 },
 {
  "input": "You can think about this as 4 times the one choice for what to do with the 3's times 2 choices for how to divvy up the Gaussian prime factors of 5.",
  "translatedText": "您可以将其视为 4 乘以 1 的选择（ 如何处理 3 的乘以 2 的选择）（如何除以 5 的高斯素因数）。",
  "model": "google_nmt",
  "from_community_srt": "你可以理解为4乘以（3的不同分配方式数） 乘以（5的高斯质数的不同分配方式数） 似乎将这个和的乘积展开就更复杂了，",
  "n_reviews": 0,
  "start": 1453.16,
  "end": 1461.26
 },
 {
  "input": "It might seem like expanding out this sum is really complicated, because it involves all possible combinations of these prime factors, and it kind of is.",
  "translatedText": "展开这个总和似乎确实很复杂，因为它涉及这些素因 数的所有可能组合，而且确实如此。",
  "model": "google_nmt",
  "from_community_srt": "这些可能的因子的相互组合就成了这样 因为χ函数是可乘的，",
  "n_reviews": 0,
  "start": 1462.02,
  "end": 1471.38
 },
 {
  "input": "However, because chi is multiplicative, each one of those combinations corresponds to a divisor of 45.",
  "translatedText": "然而，由于 chi 是乘法，因此这些组合中的每一个都对应于 45 的除数。",
  "model": "google_nmt",
  "from_community_srt": "每个组合就对应着一个45的因数 本例中，",
  "n_reviews": 0,
  "start": 1472.02,
  "end": 1478.94
 },
 {
  "input": "In this case what we get is 4 times chi of 1 plus chi of 3 plus chi of 5 plus chi of 9 plus chi of 15 plus chi of 45.",
  "translatedText": "在这种情况下， 我们得到的是 4 乘以 1 的尺加上 3 的尺加上 5 的尺加上 9 的尺加上 15 的 尺加上 45 的尺。",
  "model": "google_nmt",
  "from_community_srt": "就成了4*(χ(1)+χ(3)+χ(5)+χ(9)+χ(15)+χ(45)) 你会注意到，",
  "n_reviews": 0,
  "start": 1478.94,
  "end": 1490.38
 },
 {
  "input": "What you'll notice is that this covers every number that divides evenly into 45, once and only once.",
  "translatedText": "您会注意到，这涵盖了所有能被 45 整除的 数字，一次且仅一次。",
  "model": "google_nmt",
  "from_community_srt": "这会遍历45的所有因数，",
  "n_reviews": 0,
  "start": 1491.36,
  "end": 1498.16
 },
 {
  "input": "And it works like this for any number, there's nothing special about 45.",
  "translatedText": "对于任何数字都是这 样，45 没有什么特别的。",
  "model": "google_nmt",
  "from_community_srt": "有且仅会有1次 而且这不仅对45成立，",
  "n_reviews": 0,
  "start": 1498.94,
  "end": 1502.48
 },
 {
  "input": "And that to me is pretty interesting, and I think wholly unexpected.",
  "translatedText": "这对我来说非常有趣，我认为完全出乎意料。",
  "model": "google_nmt",
  "from_community_srt": "对所有整数都成立 这太妙了， 而且意想不到。",
  "n_reviews": 0,
  "start": 1503.22,
  "end": 1506.76
 },
 {
  "input": "This question of counting the number of lattice points a distance square root of n away from the origin involves adding up the value of this relatively simple function over all the divisors of n.",
  "translatedText": "这个计算距 原点距离为 n 的平方根的格点数量的问题涉及将 这个相对简单的函数的值与 n 的所有除数相加。",
  "model": "google_nmt",
  "from_community_srt": "计算有多少个格点其到原点的距离为根号N的方法 竟然会是N的所有因数的χ函数值的和。",
  "n_reviews": 0,
  "start": 1507.38,
  "end": 1518.48
 },
 {
  "input": "To bring it all together, remember why we're doing this.",
  "translatedText": "为了将所有这些结合在一起，请记住我们为什么要这样做。",
  "model": "google_nmt",
  "from_community_srt": "记住以上结论。",
  "n_reviews": 0,
  "start": 1520.1,
  "end": 1522.72
 },
 {
  "input": "The total number of lattice points inside a big circle with radius r should be about pi times r squared.",
  "translatedText": "半径为 r 的大圆内的 格点总数应约为 pi 乘以 r 的平方。",
  "model": "google_nmt",
  "from_community_srt": "而半径为足够大的R的圆内的格点数 应该是π*R^2 另一方面，",
  "n_reviews": 0,
  "start": 1523.1,
  "end": 1529.04
 },
 {
  "input": "But on the other hand we can count those same lattice points by looking through all the numbers n between 0 and r squared, and counting how many lattice points are a distance square root of n from the origin.",
  "translatedText": "但另一方面， 我们可以通过查看 0 到 r 平方之间的所有数字 n 来计 算这些相同的格点，并计算有多少个格点距原点距离为 n 的平 方根。",
  "model": "google_nmt",
  "from_community_srt": "我们可以将所有半径0到R的整数半径的圆 上面的格点数加起来来计算总的格点数 忽略这个原点，",
  "n_reviews": 0,
  "start": 1529.04,
  "end": 1540.28
 },
 {
  "input": "Let's ignore that origin dot with radius 0, it doesn't follow the pattern of the rest, and one little dot isn't going to make a difference as we let r grow towards infinity.",
  "translatedText": "让我们忽略半径为 0 的原点，它不 遵循其余点的模式，并且当我们让 r 向 无穷大增长时，一个小点不会产生影响。",
  "model": "google_nmt",
  "from_community_srt": "因为它可以看成半径为0的圆 不过它不像其他整数有这么好的形式， 但一个点 对最终结论并不会有太的影响，",
  "n_reviews": 0,
  "start": 1541.28,
  "end": 1551.06
 },
 {
  "input": "From all this Gaussian integer and factoring and chi function stuff we've been doing, the answer for each n looks like adding up the value of chi on every divisor of n, and multiplying by 4.",
  "translatedText": "从我们一直在做的所有高斯整数、因式分解和 chi 函数的内容来看，每 个 n 的答案看起来就像将 n 的每个除数上的 chi 值相加，然 后乘以 4。",
  "model": "google_nmt",
  "from_community_srt": "因为我们会让R趋于无穷 有了前面讲的高斯整数， 质因数分解和χ函数这些内容 对一个给定的半径N的圆， 其经过的格点数实际上就是将N的每个因数的χ函数值加起来最后乘以4 先把4放在一边，",
  "n_reviews": 0,
  "start": 1552.2,
  "end": 1566.14
 },
 {
  "input": "And for now let's just take that 4 and put it in the corner, and remember to bring it back later.",
  "translatedText": "现在我们就把这 4 个放在角 落里，然后记得稍后再把它带回来。",
  "model": "google_nmt",
  "from_community_srt": "最后再记得乘回去就行。",
  "n_reviews": 0,
  "start": 1567.22,
  "end": 1571.6
 },
 {
  "input": "At first, adding up the values for each one of these rows seems super random, right?",
  "translatedText": "首先，将这些行中每一行的值相加似乎是超级随机的，对吧？",
  "model": "google_nmt",
  "from_community_srt": "粗看，",
  "n_reviews": 0,
  "start": 1572.72,
  "end": 1578.34
 },
 {
  "input": "I mean numbers with a lot of factors have a lot of divisors, whereas prime numbers will always only have two divisors, so it initially seems like you would have to have perfect knowledge of the distribution of primes to get anything useful out of this.",
  "translatedText": "我 的意思是，具有很多因数的数字有很多约数，而素数 总是只有两个约数，所以最初看起来你必须对素数的 分布有完美的了解才能从中得到任何有用的东西。",
  "model": "google_nmt",
  "from_community_srt": "将这几行的值加起来看起来毫无规律 那些质因数较多的数有很多因数， 而质数只有2个因子 所以好像你需要知道质数的准确分布才能求和 但你将这几行重新排列成几列，",
  "n_reviews": 0,
  "start": 1578.84,
  "end": 1593.14
 },
 {
  "input": "But if instead you organize these into columns, the puzzle starts to fit together.",
  "translatedText": "但如果你把它们组织成列，这个谜题就会开始拼凑起来。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1594.18,
  "end": 1599.04
 },
 {
  "input": "How many numbers between 1 and r2 have 1 as a divisor?",
  "translatedText": "1 和 r2 之间有多少个以 1 作为约数的数？",
  "model": "google_nmt",
  "from_community_srt": "问题就逐渐明朗起来了 1到R^2之间有多少个数有1作为其因子，",
  "n_reviews": 0,
  "start": 1600.1,
  "end": 1603.92
 },
 {
  "input": "All of them.",
  "translatedText": "他们全部。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1604.56,
  "end": 1605.4
 },
 {
  "input": "So our sum should include r2 times chi of 1.",
  "translatedText": "所以我们的总和应该包括 r2 乘以 1 的 chi。",
  "model": "google_nmt",
  "from_community_srt": "当然是全部。 所以我们的和会有R^2*χ(1)这一项，",
  "n_reviews": 0,
  "start": 1605.9,
  "end": 1609.2
 },
 {
  "input": "How many of them have 2 as a divisor?",
  "translatedText": "其中有多少个以 2 作为约数？",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1610.06,
  "end": 1612.32
 },
 {
  "input": "About half of them.",
  "translatedText": "大约有一半。",
  "model": "google_nmt",
  "from_community_srt": "那么有多少个数有2作为其因子呢 大概是一半，",
  "n_reviews": 0,
  "start": 1612.82,
  "end": 1614.32
 },
 {
  "input": "So that would account for r2 over 2 times chi of 2.",
  "translatedText": "这样 r2 就超 过了 2 的 chi 的 2 倍。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1614.84,
  "end": 1618.52
 },
 {
  "input": "About a third of these rows have chi of 3, so we can put in r2 divided by 3 times chi of 3.",
  "translatedText": "这些行中大约有三分之一的 chi 为 3，因此我们可以 将 r2 除以 3 的 chi 乘以 3。",
  "model": "google_nmt",
  "from_community_srt": "所以加上R^2/2*χ(2)这一项 有大约1/3的行有χ(3)， 所以加上R^2/3*χ(3) 记住，",
  "n_reviews": 0,
  "start": 1619.12,
  "end": 1625.12
 },
 {
  "input": "Keep in mind we're being approximate, since r2 might not perfectly divide 2 or 3, but as r grows towards infinity, this approximation will get better.",
  "translatedText": "请记住，我们是近似值，因为 r2 可 能无法完美地整除 2 或 3，但随着 r 向无穷大增长，这种近似值会 变得更好。",
  "model": "google_nmt",
  "from_community_srt": "这只是一个估计。 R^2并不总能被2、3...整除， 但是当R趋于无穷时， 这种近似效果就越好。",
  "n_reviews": 0,
  "start": 1626.02,
  "end": 1634.54
 },
 {
  "input": "And when you keep going like this, you get a pretty organized expression for the total number of lattice points.",
  "translatedText": "当你继续这样做时，你会得到一个非常有组 织的格点总数表达式。",
  "model": "google_nmt",
  "from_community_srt": "以此类推，",
  "n_reviews": 0,
  "start": 1635.36,
  "end": 1640.2
 },
 {
  "input": "And if you factor out that r2 and bring back the 4 that needs to be multiplied in, what it means is that the total number of lattice points inside this big circle is approximately 4 times r2 times this sum.",
  "translatedText": "如果你将 r2 分解出来并带 回需要相乘的 4，那么这意味着这个大圆内的格点总数 大约是 r2 乘以这个总和的 4 倍。",
  "model": "google_nmt",
  "from_community_srt": "圆内总格点数会是一个非常有规律的表达式 提取公因数， 再把4乘回来 所以足够大的圆内总的格点数 将会近似于4*R^2再乘以这个和。",
  "n_reviews": 0,
  "start": 1642.98,
  "end": 1658.0
 },
 {
  "input": "And because chi is 0 on every even number, and it oscillates between 1 and negative 1 for odd numbers, this sum looks like 1 minus 1 third plus a fifth minus 1 seventh and so on.",
  "translatedText": "因为 chi 在每个偶数上都是 0，而在奇数上它在 1 和负 1 之间波动，所以这个 和看起来像 1 减 1 第三加上第五减 1 第七，依此类推。",
  "model": "google_nmt",
  "from_community_srt": "因为偶数的χ函数值都是0， 而且奇数的函数值还会在1和-1来回跳跃。 所以这个和看起来就像是1-1/3+1/5-1/7...",
  "n_reviews": 0,
  "start": 1658.66,
  "end": 1672.6
 },
 {
  "input": "And this is exactly what we wanted!",
  "translatedText": "这正是 我们想要的！",
  "model": "google_nmt",
  "from_community_srt": "这正是我们所要的结果，",
  "n_reviews": 0,
  "start": 1673.02,
  "end": 1674.36
 },
 {
  "input": "What we have here is an alternate expression for the total number of lattice points inside a big circle, which we know should be around pi times r2.",
  "translatedText": "我们这里有一个大圆内格点总数的替代表 达式，我们知道它应该约为 pi 乘以 r2。",
  "model": "google_nmt",
  "from_community_srt": "一个关于圆内格点数的无穷交错级数。 而我们知道对于足够大的R， 它应该会是π*R^2。",
  "n_reviews": 0,
  "start": 1674.76,
  "end": 1683.06
 },
 {
  "input": "And the bigger r is, the more accurate both of these estimates are, so the percent error between the left hand side and the right hand side can get arbitrarily small.",
  "translatedText": "r 越大，这两个估计就越准确，因此左侧和右 侧之间的百分比误差可以变得任意小。",
  "model": "google_nmt",
  "from_community_srt": "R足够大时， 估计的误差就能任意小。",
  "n_reviews": 0,
  "start": 1684.0,
  "end": 1693.34
 },
 {
  "input": "So divide out by that r2, and this gives us an infinite sum that should converge to pi.",
  "translatedText": "除以 r 2，这给出了一个应该收敛于 pi 的无穷总和。",
  "model": "google_nmt",
  "from_community_srt": "两边除以R^2， 就会得到一个无穷级数，",
  "n_reviews": 0,
  "start": 1693.9,
  "end": 1700.14
 },
 {
  "input": "And keep in mind, I just think this is really cool, the reason this sum came out to be so simple, and requiring relatively low information to describe, ultimately stems from the regular pattern in how prime numbers factor inside the Gaussian integers.",
  "translatedText": "请记住 ，我只是认为这真的很酷，这个总和之所以如此 简单，并且需要相对较少的信息来描述，最终 源于素数如何在高斯整数中分解的规则模式。",
  "model": "google_nmt",
  "from_community_srt": "它的和收敛于π 想想这太酷了。 这个无穷级数和背后的原因竟是如此简单， 仅仅需要简单的背景知识。 其本质竟是普通质数的高斯质数分解 如果你对此感兴趣，",
  "n_reviews": 0,
  "start": 1701.3,
  "end": 1715.26
 },
 {
  "input": "If you're curious, there are two main branches of number theory, algebraic number theory and analytic number theory.",
  "translatedText": "如果您好奇，数论有两个主要分支：代数数论和 解析数论。",
  "model": "google_nmt",
  "from_community_srt": "数论目前有两大分支：几何数论 以及解析数论。",
  "n_reviews": 0,
  "start": 1716.54,
  "end": 1723.6
 },
 {
  "input": "Very loosely speaking, the former deals with new number systems, things like these Gaussian integers that you and I looked at, and a lot more, and the latter deals with things like the Riemann zeta function, or its cousins called L-functions, which involve multiplicative functions like this central character chi from our story.",
  "translatedText": "非常宽松地说，前者处理新的数字系统， 比如你和我研究过的高斯整数，等等，后者处理黎曼 zeta 函数或它的近亲 L 函数，涉及乘法函 数，就像我们故事中的中心人物“气”一样。",
  "model": "google_nmt",
  "from_community_srt": "简单浅显地讲就是几何数论考量的是新的数字系统， 比如今天我们了解到的高斯整数等等 分析数论考量的东西像是黎曼zeta函数或者它的推广， 叫做L函数。 它涉及到一些我们今天了解的可乘函数的性质 今天了解的内容，",
  "n_reviews": 0,
  "start": 1724.42,
  "end": 1742.2
 },
 {
  "input": "And the path we just walked is a little glimpse at where those two fields intersect.",
  "translatedText": "我们刚刚 走过的路可以瞥见这两个领域的交叉点。",
  "model": "google_nmt",
  "from_community_srt": "让我们得以窥探这两大分支的交叉。",
  "n_reviews": 0,
  "start": 1742.78,
  "end": 1747.3
 },
 {
  "input": "And both of these are pretty heavy duty fields with a lot of active research and unsolved problems.",
  "translatedText": "这两个领域都 是相当繁重的领域，有大量活跃的研究和未解决的问题。",
  "model": "google_nmt",
  "from_community_srt": "这两大分支都有很多尚未解决的难题，",
  "n_reviews": 0,
  "start": 1747.92,
  "end": 1752.4
 },
 {
  "input": "So if all of this feels like something that takes time to mentally digest, like there's more patterns to be uncovered and understood, it's because it is, and there are.",
  "translatedText": "因此 ，如果所有这些感觉像是需要时间在精神上消化的事情，就像有更多 的模式需要被发现和理解，那是因为它确实如此，而且确实存在。",
  "model": "google_nmt",
  "from_community_srt": "都进行着积极研究 如果你觉得本期内容需要花较多时间好好消化， 以及感觉到还有更多的规律尚未发现有待探索， 那就对了。 因为它确实很难而且还有很多的未知。",
  "n_reviews": 0,
  "start": 1753.0,
  "end": 1762.3
 }
]