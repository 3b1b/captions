1
00:00:15,246 --> 00:00:20,040
지난 비디오에서 나는 단순 함수의 파생물에 대해 이야기했고, 목표는 이러한 공식이

2
00:00:20,040 --> 00:00:25,280
실제로 어디서 나오는지 설명하는 명확한 그림이나 직관을 마음 속에 담아두는

3
00:00:25,280 --> 00:00:31,200
것이었습니다. 그러나 세계 모델링에서 다루는 대부분의 기능에는 이러한 간단한 기능을

4
00:00:31,200 --> 00:00:36,400
다른 방식으로 혼합, 결합 또는 조정하는 작업이 포함되므로 다음 단계는

5
00:00:36,400 --> 00:00:42,280
더 복잡한 조합의 파생물을 얻는 방법을 이해하는 것입니다. 다시 말하지만,

6
00:00:42,280 --> 00:00:45,680
저는 이것들을 외워야 할 것이 아니라, 여러분이 각각의

7
00:00:45,680 --> 00:00:50,500
출처가 어디인지에 대해 명확한 그림을 갖고 있기를 바랍니다.

8
00:00:50,500 --> 00:00:55,380
이는 실제로 기능을 결합하는 세 가지 기본 방법으로 요약됩니다. 그것들을 더할 수도 있고,

9
00:00:55,380 --> 00:01:00,260
곱할 수도 있고, 하나를 다른 하나 안에 넣을 수도 있습니다. 이를 구성이라고 합니다.

10
00:01:00,260 --> 00:01:04,920
물론, 뺄셈이라고 말할 수도 있지만 실제로는 두 번째 값에 음수

11
00:01:04,920 --> 00:01:10,280
값을 곱하고 더하는 것뿐입니다. 마찬가지로 함수 나누기는 실제로 아무것도

12
00:01:10,280 --> 00:01:15,220
추가하지 않습니다. 왜냐하면 함수 1 안에 하나를 x 위에

13
00:01:15,220 --> 00:01:17,660
연결한 다음 두 개를 곱하는 것과 같기 때문입니다.

14
00:01:17,660 --> 00:01:21,900
따라서 실제로 접하게 되는 대부분의 기능에는 이러한 세 가지 다른 유형의 조합을 함께

15
00:01:21,900 --> 00:01:26,060
사용하는 것이 포함되지만, 실제로 얼마나 괴물이 될 수 있는지에 대한 제한은 없습니다.

16
00:01:26,060 --> 00:01:31,140
그러나 이 세 가지 조합 유형만으로 파생 상품이

17
00:01:31,140 --> 00:01:35,640
어떻게 작동하는지 아는 한, 항상 단계별로 진행하여 모든 종류의

18
00:01:35,640 --> 00:01:39,460
괴물 같은 표현을 위해 레이어를 벗겨낼 수 있습니다.

19
00:01:39,460 --> 00:01:44,220
문제는 두 함수의 도함수를 알고 있다면 그 합, 곱,

20
00:01:44,220 --> 00:01:50,520
그리고 두 함수 사이의 함수 구성의 도함수가 무엇인지입니다.

21
00:01:50,520 --> 00:01:56,140
큰 소리로 말하기가 다소 어색하더라도 합계 규칙이 가장 쉽습니다. 두 함수의 합의

22
00:01:56,140 --> 00:02:01,840
미분은 해당 미분의 합입니다. 하지만 두 함수의 합에 대한 도함수를

23
00:02:01,840 --> 00:02:07,860
구하는 것이 무엇을 의미하는지 곰곰이 생각해 보면 이 예를 통해

24
00:02:07,860 --> 00:02:13,460
워밍업할 가치가 있습니다. 곱셈과 함수 구성에 대한 도함수 패턴은 그렇게

25
00:02:13,700 --> 00:02:16,740
간단하지 않고 이런 유형의 함수가 필요하기 때문입니다. 더 깊은 생각.

26
00:02:16,740 --> 00:02:22,300
예를 들어, 이 함수 f(x)는 사인(x) 더하기 x 제곱과 같다고 생각해 봅시다. 이는

27
00:02:22,300 --> 00:02:27,220
모든 입력에 대해 x의 사인 값과 해당 지점의 x 제곱을 더하는

28
00:02:27,220 --> 00:02:35,220
함수입니다. 예를 들어 x가 0이라고 가정해 보겠습니다. 도 5에서, 사인 그래프의 높이는

29
00:02:35,220 --> 00:02:41,060
이 수직 막대에 의해 주어지고, x 제곱 포물선의 높이는 이 작은 수직 막대에

30
00:02:41,460 --> 00:02:48,460
의해 주어진다. 그리고 그 합은 그것들을 함께 쌓아서 얻는 길이입니다.

31
00:02:48,820 --> 00:02:53,940
미분의 경우 해당 입력을 약간 움직여서 0까지 늘리면 어떤 일이 발생하는지 묻고

32
00:02:53,940 --> 00:03:00,940
싶습니다. 5 더하기 dx. 이 두 위치 사이의 f 값의 차이를 우리는 df라고

33
00:03:01,780 --> 00:03:08,080
부릅니다. 그리고 여러분이 이것을 이렇게 묘사할 때, 높이의 전체 변화는

34
00:03:08,080 --> 00:03:13,600
사인 그래프의 변화, 즉 x의 d 사인이라고 부르는 것과

35
00:03:13,600 --> 00:03:20,600
x 제곱의 변화가 무엇이든 dx라는 점에 동의하실 것입니다. 제곱.

36
00:03:22,840 --> 00:03:28,240
이제 우리는 사인의 도함수가 코사인이라는 것을 알고 그것이 무엇을 의미하는지 기억합니다. 이는 x의

37
00:03:28,240 --> 00:03:35,040
d 사인이라는 이 작은 변화가 대략 코사인 x 곱하기 dx와 같다는 것을 의미합니다. 이는 초기

38
00:03:35,080 --> 00:03:40,800
넛지 dx의 크기에 비례하며 비례 상수는 우리가 시작한 모든 입력의

39
00:03:40,800 --> 00:03:47,800
코사인과 같습니다. 마찬가지로 x 제곱의 도함수는 2x이므로

40
00:03:48,160 --> 00:03:55,160
x 제곱 그래프의 높이 변화는 dx의 2배입니다.

41
00:03:55,760 --> 00:04:02,360
따라서 df를 dx로 나눈 값, 즉 이 합 함수에 대한 작은 변화와

42
00:04:02,360 --> 00:04:09,320
이를 야기한 x의 작은 변화의 비율은 실제로 x의 코사인에 2x를 더한 부분의

43
00:04:09,320 --> 00:04:13,720
도함수의 합입니다. 하지만 제가 말했듯이 제품마다 상황이 조금 다르므로 다시

44
00:04:13,720 --> 00:04:20,720
작은 넛지 측면에서 그 이유를 생각해 보겠습니다. 이 경우 그래프가

45
00:04:20,760 --> 00:04:25,120
사물을 시각화하는 데 가장 좋은 방법은 아니라고 생각합니다. 수학에서 흔히 볼 수

46
00:04:25,120 --> 00:04:30,320
있는 일입니다. 수학의 많은 수준에서 두 가지의 곱을 다루는 경우 이를 일종의

47
00:04:30,360 --> 00:04:34,720
영역으로 이해하는 것이 도움이 됩니다. 이 경우 측면 길이가 x와 x 제곱의

48
00:04:34,720 --> 00:04:40,520
사인인 상자의 정신적 설정을 구성하려고 할 수 있습니다. 하지만 그게 무슨

49
00:04:40,520 --> 00:04:46,640
뜻일까요? 글쎄요, 이것들은 함수이기 때문에 x 값에 따라 조정 가능한 변이라고

50
00:04:46,640 --> 00:04:51,180
생각할 수도 있습니다. x 값을 자유롭게 위아래로 조정할 수 있는 숫자라고

51
00:04:51,180 --> 00:04:57,160
생각할 수도 있습니다. 따라서 이것이 의미하는 바를 이해하려면 x의 함수 사인으로

52
00:04:57,800 --> 00:05:04,800
변경되는 윗면에 집중하세요. x의 값을 0에서 위로 변경하면 x의 사인이

53
00:05:05,240 --> 00:05:10,840
최고점을 향해 올라갈 때 길이가 1까지 증가하고 그 후 x의 사인이 1에서

54
00:05:10,840 --> 00:05:16,920
내려갈 때 길이가 감소하기 시작합니다. 그리고 같은 방식으로, 그 높이는 항상

55
00:05:16,920 --> 00:05:22,520
x 제곱으로 변합니다. 따라서 이 두 함수의 곱으로 정의되는 x의

56
00:05:22,520 --> 00:05:29,060
f는 이 상자의 면적입니다. 그리고 미분의 경우, x x dx의 작은 변화가

57
00:05:29,060 --> 00:05:36,060
해당 영역에 어떻게 영향을 미치는지 생각해 봅시다. 면적 df의 결과적인 변화는 무엇입니까?

58
00:05:39,960 --> 00:05:45,580
dx를 살짝 밀면 너비가 x의 작은 d 사인만큼 변경되고

59
00:05:45,620 --> 00:05:52,620
높이가 dx 제곱만큼 변경됩니다. 그러면 새 영역에 대한 세 개의

60
00:05:53,100 --> 00:05:58,920
작은 조각이 제공됩니다. 아래쪽의 얇은 직사각형은 너비(사인 x)에 얇은 높이(dx 제곱)를

61
00:05:58,920 --> 00:06:05,920
곱한 면적이고, 오른쪽의 이 얇은 직사각형(넓이는 높이 x 제곱)입니다. 얇은

62
00:06:06,620 --> 00:06:13,000
너비를 곱한 x의 사인입니다. 구석에도 이런 작은 부분이 있지만

63
00:06:13,000 --> 00:06:19,160
무시해도 됩니다. 그 면적은 궁극적으로 dx 제곱에 비례하며, 이전에

64
00:06:19,160 --> 00:06:24,320
본 것처럼 dx가 0으로 갈수록 무시할 수 있게 됩니다.

65
00:06:24,320 --> 00:06:29,440
이 전체 설정은 x 제곱 다이어그램을 사용하여 지난 비디오에서 보여드린 것과 매우 유사합니다.

66
00:06:29,440 --> 00:06:33,560
그리고 그 때와 마찬가지로 여기서는 우리가 실제로 볼 수 있도록 그리기 위해 다소

67
00:06:33,560 --> 00:06:40,000
강력한 변화를 사용하고 있다는 점을 명심하십시오. 그러나 원칙적으로 dx는 매우 작은 값이며

68
00:06:40,000 --> 00:06:46,480
이는 dx 제곱과 x의 d 사인도 매우 작다는 것을 의미합니다. 매우 작은.

69
00:06:46,480 --> 00:06:52,000
따라서 우리가 사인과 x 제곱의 도함수에 대해 알고 있는 것을 적용하면 dx 제곱의 작은

70
00:06:52,000 --> 00:06:59,000
변화는 약 2x 곱하기 dx가 될 것이고 x의 작은 변화 d 사인은 대략 코사인

71
00:06:59,040 --> 00:07:06,040
x 곱하기 dx가 될 것입니다. 늘 그렇듯이, 우리가 원하는 비율인 df를 dx로

72
00:07:06,280 --> 00:07:13,280
나눈 값이 사인 x 곱하기 x 제곱 도함수에 x 제곱 곱하기 사인

73
00:07:13,400 --> 00:07:19,760
도함수인지 확인하기 위해 dx로 나눕니다. 그리고 여기서 우리가 한 일은 사인이나 x 제곱에

74
00:07:19,760 --> 00:07:24,660
특정한 것이 아닙니다. 이와 동일한 추론은 두 함수 g와 h에 대해

75
00:07:24,660 --> 00:07:28,520
적용됩니다. 그리고 때때로 사람들은 이 패턴을 머릿속에서 왼쪽 d

76
00:07:28,520 --> 00:07:33,140
오른쪽, 오른쪽 d 왼쪽으로 부르는 특정한 기억법으로 기억하고 싶어합니다.

77
00:07:33,180 --> 00:07:36,940
이 예에서 사인 x x 제곱, 왼쪽 d 오른쪽은

78
00:07:36,940 --> 00:07:42,700
왼쪽 함수 x 사인에 오른쪽 도함수를 곱한 값(이 경우

79
00:07:42,700 --> 00:07:48,700
2x)을 취한다는 의미입니다. 그런 다음 오른쪽 d 왼쪽에 오른쪽 함수

80
00:07:48,700 --> 00:07:52,780
x 제곱을 곱하고 왼쪽 함수의 도함수인 x의 코사인을 더합니다.

81
00:07:52,780 --> 00:07:59,780
맥락에서 벗어나 기억해야 할 규칙으로 제시된 이 내용은 꽤 이상하게 느껴질 것 같습니다. 그렇지 않습니까?

82
00:07:59,780 --> 00:08:05,340
하지만 실제로 이 조정 가능한 상자를 생각해 보면 각 용어가 무엇을 나타내는지 알 수

83
00:08:05,340 --> 00:08:12,340
있습니다. 왼쪽 d 오른쪽은 작은 아래쪽 직사각형의 면적이고 오른쪽 d 왼쪽은

84
00:08:13,100 --> 00:08:20,100
측면에 있는 직사각형의 면적입니다. 그건 그렇고, 상수를 곱하면, 예를 들어 x의 사인

85
00:08:22,120 --> 00:08:28,300
2배를 곱하면 상황이 훨씬 더 단순해진다는 점을 언급하고 싶습니다. 도함수는 상수에 함수의

86
00:08:28,300 --> 00:08:33,400
도함수를 곱한 것과 같습니다. 이 경우에는 x의 코사인

87
00:08:33,400 --> 00:08:39,300
2배입니다. 나는 그것이 의미가 있는지 잠시 멈추고 숙고하고 검증하는 것을 여러분에게 맡길

88
00:08:39,300 --> 00:08:44,540
것입니다. 덧셈과 곱셈을 제외하고, 함수를 결합하는 또 다른 일반적인

89
00:08:44,540 --> 00:08:49,260
방법은 항상 나오는 이 방법은 하나를 다른 하나 안에

90
00:08:49,260 --> 00:08:54,340
밀어넣는 것, 즉 함수 합성입니다. 예를 들어, x 제곱 함수를

91
00:08:54,660 --> 00:08:59,660
가져와 x의 사인 내부에 밀어 넣으면 이 새로운 함수인 x 제곱의 사인을 얻을

92
00:08:59,660 --> 00:09:05,540
수 있습니다. 그 새로운 함수의 미분은 무엇이라고 생각하시나요?

93
00:09:05,540 --> 00:09:09,980
이것을 깊이 생각하기 위해, 창의적 수학에는 많은 옵션이 있다는 점을 강조하기 위해

94
00:09:09,980 --> 00:09:15,700
사물을 시각화하는 또 다른 방법을 선택하겠습니다. 세 개의 서로 다른 수직선을 표시하겠습니다.

95
00:09:15,700 --> 00:09:22,120
맨 위의 줄은 x 값, 두 번째 줄은 x 제곱

96
00:09:22,120 --> 00:09:27,460
값, 세 번째 줄은 x 제곱의 사인 값, 즉 함수를 담을

97
00:09:27,460 --> 00:09:32,680
것입니다. x squared는 1행에서 2행으로 이동하고, sine 함수는 2행에서 3행으로

98
00:09:32,680 --> 00:09:37,300
이동합니다. 이 x 값 주위를 이동하면서 값 3으로 이동할 때 두

99
00:09:37,300 --> 00:09:44,040
번째 값은 x 제곱이 무엇이든 고정된 상태로 유지됩니다. 이 경우

100
00:09:44,040 --> 00:09:49,560
최대 9로 이동하고 맨 아래 값(x 제곱의 사인)은 9의 사인이 무엇이든

101
00:09:49,560 --> 00:09:57,680
간에 갈 수 있습니다. 따라서 도함수의 경우 x 값을 작은

102
00:09:57,680 --> 00:10:03,280
dx만큼 조금씩 움직여서 다시 시작하겠습니다. 나는 항상 x를 실제 구체적인 숫자, 아마도

103
00:10:03,280 --> 00:10:09,720
1에서 시작하는 것으로 생각하는 것이 도움이 된다고 생각합니다. 이 경우에는 5입니다. 두 번째 값으로의

104
00:10:09,720 --> 00:10:16,720
결과 이동, 그러한 dx로 인한 x 제곱의 변화는 dx 제곱입니다.

105
00:10:17,240 --> 00:10:24,240
이를 2x dx로 확장할 수 있으며, 특정 입력의 경우 2x 1이 됩니다. 5

106
00:10:25,040 --> 00:10:31,160
곱하기 dx. 하지만 적어도 지금은 dx 제곱으로 기록하는 것이 도움이 됩니다.

107
00:10:31,160 --> 00:10:37,520
사실, 저는 한 단계 더 나아가서 이 x 제곱에 새로운 이름을 부여할 것입니다. 어쩌면

108
00:10:37,520 --> 00:10:42,760
h일 수도 있습니다. 그러면 이 넛지에 대해 dx 제곱을 쓰는 대신 dh를 씁니다.

109
00:10:42,760 --> 00:10:48,120
이렇게 하면 이제 사인 h에 고정된 세 번째 값에 대해 생각하기가 더 쉬워집니다.

110
00:10:48,120 --> 00:10:55,120
그 변화는 h의 d 사인, 즉 넛지 dh로 인한 작은 변화입니다.

111
00:10:55,160 --> 00:10:59,200
그건 그렇고, dh 범프가 오른쪽으로 이동하는 동안 왼쪽으로 이동한다는 사실은

112
00:10:59,200 --> 00:11:04,860
이 변화, 즉 h의 d 사인이 일종의 음수가 될 것임을

113
00:11:04,860 --> 00:11:08,360
의미합니다. 다시 한번, 우리는 사인의 도함수에 대한 지식을 사용할

114
00:11:08,400 --> 00:11:13,140
수 있습니다. 이 h의 d 사인은 대략 코사인 h 곱하기 dh가

115
00:11:13,140 --> 00:11:16,760
될 것입니다. 이것이 바로 사인의 미분값이 코사인이라는

116
00:11:16,760 --> 00:11:21,840
뜻입니다. 물건을 펼치면 그 h를 다시 x 제곱으로 대체할 수

117
00:11:21,840 --> 00:11:26,880
있으므로 아래쪽 넛지는 x 제곱 곱하기 dx 제곱의 코사인 크기를 갖게 될

118
00:11:26,880 --> 00:11:33,080
것임을 알 수 있습니다. 사실, 좀 더 자세히 살펴보겠습니다.

119
00:11:33,080 --> 00:11:39,680
그 중간 넛지 dx 제곱은 dx의 약 2배가 될 것입니다.

120
00:11:39,680 --> 00:11:44,440
이와 같은 표현이 실제로 무엇을 의미하는지 스스로에게 상기시키는 것은 항상 좋은 습관입니다.

121
00:11:44,440 --> 00:11:50,240
이 경우 x에서 시작한 곳은 1입니다. 위의 5를 보면 이 전체 표현식은

122
00:11:50,240 --> 00:11:57,240
세 번째 줄의 넛지 크기가 대략 코사인 1이 될 것임을 알려줍니다. 5의 제곱

123
00:11:57,280 --> 00:12:02,320
곱하기 2 곱하기 1. dx의 크기에 관계없이 5배입니다.

124
00:12:02,320 --> 00:12:07,360
이는 dx의 크기에 비례하며, 이 도함수는 우리에게 비례 상수를

125
00:12:07,360 --> 00:12:13,080
제공합니다. 여기서 우리가 무엇을 얻었는지 주목하세요.

126
00:12:13,080 --> 00:12:18,580
우리는 외부 함수의 도함수를 갖고 있고, 여전히 변경되지 않은

127
00:12:18,580 --> 00:12:25,580
내부 함수를 받아들인 다음, 내부 함수의 도함수를 곱합니다.

128
00:12:26,580 --> 00:12:31,500
x 사인이나 x 제곱에는 특별한 것이 없습니다. 두 개의 함수(x의 g와

129
00:12:31,500 --> 00:12:38,500
x의 h)가 있는 경우 해당 구성의 도함수인 x의 h의

130
00:12:38,500 --> 00:12:45,500
g는 h에서 평가된 g의 도함수에 h의 도함수를 곱한 값입니다.

131
00:12:47,600 --> 00:12:52,660
이 패턴은 우리가 일반적으로 체인 규칙이라고 부르는 패턴입니다.

132
00:12:52,660 --> 00:12:59,300
g의 미분은 dg dx 대신 dg dh로 씁니다. 상징적 수준에서

133
00:12:59,300 --> 00:13:04,020
이는 파생물에 연결하는 것이 여전히 중개 기능 h가 될

134
00:13:04,020 --> 00:13:09,200
것임을 상기시켜줍니다. 그러나 그 이상으로, 이는 외부 함수의

135
00:13:09,200 --> 00:13:13,100
파생물이 실제로 무엇을 나타내는지 보여주는 중요한 반영입니다.

136
00:13:13,100 --> 00:13:18,820
세 줄 설정에서 바닥에 있는 사인의 도함수를 취했을 때 그 넛지의 크기인

137
00:13:18,820 --> 00:13:25,580
d 사인을 코사인 h 곱하기 dh로 확장했다는 것을 기억하세요. 이는 하단 넛지의

138
00:13:25,580 --> 00:13:33,300
크기가 x에 어떻게 의존하는지 즉시 알 수 없었기 때문입니다.

139
00:13:33,300 --> 00:13:38,820
그러나 우리는 중간 변수 h에 대해 미분을 취할 수 있습니다. 즉, 세

140
00:13:38,820 --> 00:13:43,380
번째 줄의 넛지 크기를 두 번째 줄의 넛지 크기인 dh의

141
00:13:43,380 --> 00:13:48,620
배수로 표현하는 방법을 알아보세요. 그 이후에야 우리는 dh가

142
00:13:48,620 --> 00:13:53,820
무엇인지 알아내면서 더 많은 것을 펼쳤습니다.

143
00:13:53,820 --> 00:13:58,100
이 연쇄 규칙 표현에서 최종 출력인 g의 작은 변화와 이를 유발한

144
00:13:58,100 --> 00:14:03,860
h의 작은 변화 사이의 비율을 살펴보겠습니다. h는 g에 연결하는 값입니다.

145
00:14:03,860 --> 00:14:10,440
그런 다음 이를 h의 작은 변화로 곱하고 이를 유발한 x의 작은 변화로

146
00:14:10,440 --> 00:14:16,800
나눕니다. dh는 상쇄되어 최종 출력의 변화와

147
00:14:16,800 --> 00:14:21,860
특정 일련의 사건을 통해 발생하는

148
00:14:21,860 --> 00:14:24,160
입력의 변화 사이의 비율을 제공합니다.

149
00:14:24,160 --> 00:14:29,640
dh를 취소하는 것은 단순한 표기법이 아니라 우리가 파생 상품으로 수행하는 모든

150
00:14:29,640 --> 00:14:37,240
작업을 뒷받침하는 작은 넛지에서 무슨 일이 일어나고 있는지를 실제로 반영한 것입니다.

151
00:14:37,240 --> 00:14:41,280
이것들은 많은 작은 것들을 결합한 함수의 파생물을 처리하기 위해 벨트에 가지고 있는

152
00:14:41,280 --> 00:14:46,700
세 가지 기본 도구입니다. 합의 법칙, 곱의

153
00:14:46,700 --> 00:14:48,720
법칙, 연쇄의 법칙이 있습니다.

154
00:14:48,720 --> 00:14:52,200
그리고 솔직하게 말씀드리자면, 체인 규칙이 무엇인지 아는 것과 제품 규칙이 무엇인지

155
00:14:52,200 --> 00:14:56,860
아는 것과 실제로 가장 까다로운 상황에서도 이를 유창하게 적용하는 것

156
00:14:56,860 --> 00:15:02,800
사이에는 큰 차이가 있습니다. 미적분학의 역학에 관한 비디오를 보는 것은 결코

157
00:15:02,800 --> 00:15:07,900
그 역학을 직접 연습하고 이러한 계산을 직접 수행할 수 있는 근육을

158
00:15:07,900 --> 00:15:13,200
키우는 것을 대체할 수 없습니다. 나는 정말로 당신을 위해 그렇게 하겠다고

159
00:15:13,200 --> 00:15:18,240
제안하고 싶지만, 친구여, 연습을 모색해야 할 공이 당신 코트에 있는 것이 두렵습니다.

160
00:15:18,240 --> 00:15:23,080
제가 제안할 수 있는 것, 그리고 제가 제안하고 싶은 것은 이러한 규칙이 실제로 어디서 나오는지 보여주는

161
00:15:23,080 --> 00:15:27,580
것입니다. 그것들이 단지 외워서 버려야 할 것이 아니라 자연스러운

162
00:15:27,580 --> 00:15:32,520
패턴이라는 것을 보여주기 위해, 파생어가 실제로 무엇을 의미하는지

163
00:15:32,520 --> 00:15:35,160
인내심을 갖고 생각함으로써 여러분도 발견할 수 있었던 것입니다.

