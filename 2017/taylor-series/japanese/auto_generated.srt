1
00:00:14,640 --> 00:00:17,267
初めてテイラーシリーズについて知ったとき、それがどれ 

2
00:00:17,267 --> 00:00:19,700
ほど重要であるかをまったく理解していませんでした。

3
00:00:20,120 --> 00:00:23,140
しかし、これらは関数を近似するために数学が提供す

4
00:00:23,140 --> 00:00:26,160
る最も強力なツールの 1 つであるため、数学、物

5
00:00:26,160 --> 00:00:29,180
理学、および工学の多くの分野で何度も登場します。

6
00:00:30,000 --> 00:00:32,814
学生だった私にとって、これが初めてピンと来たのは、微 

7
00:00:32,814 --> 00:00:35,420
積分の授業ではなく、物理学の授業だったと思います。

8
00:00:35,840 --> 00:00:39,165
私たちは振り子の位置エネルギーに関係する特定の問題

9
00:00:39,165 --> 00:00:42,491
を研究していま した。 そのためには、振り子の重量

10
00:00:42,491 --> 00:00:45,949
がその最低点からどれだけ高いか を表す式が必要です。

11
00:00:45,949 --> 00:00:48,610
 それを計算すると、次のようになります。

12
00:00:48,610 --> 00:00:51,935
 1 から振り子と垂直線の間の角度の余弦を引いたも

13
00:00:51,935 --> 00:00:53,000
のに比例します。

14
00:00:53,580 --> 00:00:56,815
私たちが解決しようとしていた問題の詳細についてはここでは説

15
00:00:56,815 --> 00:01:00,050
明しませんが、ここ で言いたいのは、このコサイン関数のせい

16
00:01:00,050 --> 00:01:02,281
で問題が厄介で扱いにくくなり、振り子が 

17
00:01:02,281 --> 00:01:05,516
他の振動現象とどのように関係しているのかがわかりにくくなっ

18
00:01:05,516 --> 00:01:06,520
たということです。

19
00:01:07,460 --> 00:01:10,467
しかし、シータのコサインを 1 からシータの 

20
00:01:10,467 --> 00:01:13,213
2 乗を引いたもの として近似すると、すべ

21
00:01:13,213 --> 00:01:15,960
てがはるかに簡単に適切な位置に収まります。

22
00:01:16,660 --> 00:01:19,780
これまでにこのようなものを見たことがない場合、その 

23
00:01:19,780 --> 00:01:22,780
ような近似は完全に常識外れに見えるかもしれません。

24
00:01:23,820 --> 00:01:27,117
この関数 (1 からシータの 2 乗を引いたもの) 

25
00:01:27,117 --> 00:01:30,668
とともにシータのコサインをグ ラフにすると、少なくとも 

26
00:01:30,668 --> 00:01:34,220
0 に近い小さな角度では、両者はかなり近いように見えま 

27
00:01:34,220 --> 00:01:37,390
すが、この近似をどのように行うと考えられますか? 

28
00:01:37,390 --> 00:01:39,420
特定の二次方程式を見つけますか?

29
00:01:41,220 --> 00:01:45,104
テイラー級数の研究は主に、非多項式関数を取得し、入 

30
00:01:45,104 --> 00:01:48,840
力付近でそれらを近似する多項式を見つけることです。

31
00:01:48,840 --> 00:01:51,233
ここでの目的は、多項式は他の関数より

32
00:01:51,233 --> 00:01:53,760
も扱いやすい傾向にあるということです。

33
00:01:54,340 --> 00:01:56,967
それらは計算が簡単で、導関数を取得しやすく、 

34
00:01:56,967 --> 00:01:59,480
統合が簡単で、全体的によりフレンドリーです。

35
00:02:00,680 --> 00:02:05,536
それでは、関数 x の余弦を見て、x が 0 に近い二 

36
00:02:05,536 --> 00:02:10,220
次近似をどのように構築するかを実際に考えてみましょう。

37
00:02:10,940 --> 00:02:14,156
つまり、c0 に c1 を掛けて x に c2 

38
00:02:14,156 --> 00:02:17,507
を掛けて x の 2 乗を加 えたような考えられる

39
00:02:17,507 --> 00:02:21,260
すべての多項式の中から、これらの定数 c0、c1、c2 

40
00:02:21,260 --> 00:02:23,672
を選択して、x が 0 に近い x 

41
00:02:23,672 --> 00:02:26,755
のコサインに最も似ている多項式を見つけま す。

42
00:02:26,755 --> 00:02:30,105
 、その時点でのコサイン x のグラフを持つスプー

43
00:02:30,105 --> 00:02:31,580
ンのようなグラフです。

44
00:02:31,580 --> 00:02:35,748
まず第一に、入力 0 では x のコサインの値は 

45
00:02:35,748 --> 00:02:40,417
1 なので、近似が少しでもうま くいくのであれば、入力 

46
00:02:40,417 --> 00:02:44,920
x が 0 である場合にも 1 に等しくなるはずです。

47
00:02:45,820 --> 00:02:49,556
0 を入力すると c0 が何になるだけなので、これを 

48
00:02:49,556 --> 00:02:50,940
1 に設定できます。

49
00:02:53,080 --> 00:02:56,028
これにより、この近似を可能な限り良好にするために定数 

50
00:02:56,028 --> 00:02:58,758
c1 と c2 を自由に選択できるようになりますが

51
00:02:58,758 --> 00:03:01,925
、これらを使用しても、x が 0 に等しいときに多項式が 

52
00:03:01,925 --> 00:03:04,000
1 に等しいという事実は変わりません。

53
00:03:04,960 --> 00:03:07,825
また、この注目点で近似値がコサイン x 

54
00:03:07,825 --> 00:03:11,120
と 同じ接線の傾きを持っていれば良いでしょう。

55
00:03:11,900 --> 00:03:14,883
そうしないと、近似値が必要以上に早くコサイン 

56
00:03:14,883 --> 00:03:16,700
グラフから離れてしまいます。

57
00:03:18,200 --> 00:03:20,625
コサインの導関数は負のサインであり、x 

58
00:03:20,625 --> 00:03:22,808
が 0 に等しい場合、 それは 0 

59
00:03:22,808 --> 00:03:25,840
に等しく、接線が完全に平坦であることを意味します。

60
00:03:26,960 --> 00:03:30,680
一方、二次方程式の導関数を計算すると、c1 

61
00:03:30,680 --> 00:03:34,400
プラス 2 倍 c2 倍 x が得られます。

62
00:03:35,320 --> 00:03:37,477
x が 0 に等しい場合、これは c1 

63
00:03:37,477 --> 00:03:39,420
として選択したものと同じになります。

64
00:03:40,260 --> 00:03:43,155
したがって、この定数 c1 は、x が 

65
00:03:43,155 --> 00:03:46,340
0 に等しい近似の導関数を完全に制御します。

66
00:03:47,120 --> 00:03:49,710
これを 0 に設定すると、近似もこの点

67
00:03:49,710 --> 00:03:52,300
で平らな接線を持つことが保証されます。

68
00:03:53,000 --> 00:03:56,531
これにより、c2 を自由に変更できるようになりますが、x 

69
00:03:56,531 --> 00:03:59,697
が 0 に等しいとき の多項式の値と傾きは、コサイン

70
00:03:59,697 --> 00:04:02,620
の値と一致するように所定の位置にロックされます。

71
00:04:04,260 --> 00:04:06,856
最後に利用するのは、コサイン グラフが 

72
00:04:06,856 --> 00:04:10,232
x が 0 に等しい以 上で下向きにカーブし、負の 

73
00:04:10,232 --> 00:04:12,440
2 次導関数を持つという事実です。

74
00:04:13,380 --> 00:04:16,989
つまり、その時点では変化率が0であっても、その付近 

75
00:04:16,989 --> 00:04:20,459
では変化率自体が減少しているということになります。

76
00:04:21,279 --> 00:04:25,143
具体的には、その導関数は x の負のサインであるため、その 

77
00:04:25,143 --> 00:04:28,491
2 次導関数は x の 負のコサインであり、x が 

78
00:04:28,491 --> 00:04:31,840
0 に等しい場合、それは負の 1 に等しくなります。

79
00:04:33,080 --> 00:04:37,128
ここで、近似値の微分値をコサインの微分値と一致させて、 

80
00:04:37,128 --> 00:04:41,176
値が不必要に急速に乖離しないようにしたのと同じように、 

81
00:04:41,176 --> 00:04:45,224
二次微分値が一致することにより、それらの値が同じ割合で 

82
00:04:45,224 --> 00:04:49,416
カーブすることが保証されます。 多項式の傾きが必要以上に 

83
00:04:49,416 --> 00:04:53,320
急速にコサイン x の傾きから離れることはありません。

84
00:04:54,220 --> 00:04:57,392
以前と同じ導関数を取り出し、その導関数を計

85
00:04:57,392 --> 00:05:00,414
算すると、この多項式の 2 次導関数が 

86
00:05:00,414 --> 00:05:04,040
c2 のちょうど 2 倍であることがわかります。

87
00:05:04,960 --> 00:05:07,383
したがって、x が 0 に等しいときにこの 2 

88
00:05:07,383 --> 00:05:10,109
階導関数も負の 1 に等しくなるようにするには、c2 

89
00:05:10,109 --> 00:05:12,330
の 2 倍が負の 1 でなければなりません。

90
00:05:12,330 --> 00:05:15,360
 つまり、c2 自体が負の 1 の半分になる必要があります。

91
00:05:15,360 --> 00:05:18,674
これにより、1 プラス 0x マイナス 1 

92
00:05:18,674 --> 00:05:22,140
の半分の x 2 乗という近似値が得られます。

93
00:05:23,200 --> 00:05:26,858
コサインを 0 と見積もると、その良さを実感できます。

94
00:05:26,858 --> 00:05:29,974
この多項式を使 用して 1 を計算すると、0 

95
00:05:29,974 --> 00:05:31,600
と推定されます。995。

96
00:05:32,520 --> 00:05:35,820
そして、これが 0 のコサインの真の値です。1.

97
00:05:36,640 --> 00:05:38,440
実に良い近似値ですね！

98
00:05:40,300 --> 00:05:42,520
少し時間を取って、今何が起こったのかを振り返ってください。

99
00:05:42,520 --> 00:05:45,770
この二次近似には 3 つの自由度 (定数 

100
00:05:45,770 --> 00:05:49,020
c0、c1、および c2) がありました。

101
00:05:49,520 --> 00:05:53,103
c0 は、x が 0 に等しいとき、近似の出力がコサイン 

102
00:05:53,103 --> 00:05:56,440
x の出力と一致することを確認する役割を果たしました。

103
00:05:57,120 --> 00:06:00,765
c1 はその時点で導関数が一致することを

104
00:06:00,765 --> 00:06:04,411
確認する責任を負い、 c2 は二次導関数

105
00:06:04,411 --> 00:06:08,240
が一致することを確認する責任を負いました。

106
00:06:08,940 --> 00:06:13,733
これにより、制御量を考慮して、x が 0 から離れるにつれ 

107
00:06:13,733 --> 00:06:18,526
て近似が変化する様子、および変化率自体が変化する様子が、コ 

108
00:06:18,526 --> 00:06:23,160
サイン x の動作と可能な限り類似することが保証されます。

109
00:06:24,080 --> 00:06:27,247
多項式でより多くの項を許可し、高次の導関数を 

110
00:06:27,247 --> 00:06:30,140
一致させることで、より詳細に制御できます。

111
00:06:30,840 --> 00:06:33,295
たとえば、ある定数 c3 に対して項 c3 

112
00:06:33,295 --> 00:06:35,640
に x3 を掛けたものを追加したとします。

113
00:06:35,640 --> 00:06:40,070
この場合、3次多項式の3次微分を取ると 

114
00:06:40,070 --> 00:06:44,280
、2次以下のものはすべて0になります。

115
00:06:45,560 --> 00:06:50,188
最後の項に関しては、べき乗則を 3 回反復した後、 

116
00:06:50,188 --> 00:06:54,460
1 回 2 回 3 回 c3 のようになります。

117
00:06:56,460 --> 00:06:59,932
一方、コサイン x の 3 階導関数はサイン x にな 

118
00:06:59,932 --> 00:07:03,280
り、x が 0 に等しい場合、これは 0 になります。

119
00:07:03,280 --> 00:07:06,492
したがって、3 次導関数が一致することを確認するには、定数 

120
00:07:06,492 --> 00:07:08,420
c3 を 0 にする必要があります。

121
00:07:08,420 --> 00:07:11,783
言い換えれば、1 マイナス 1 半分 x2 

122
00:07:11,783 --> 00:07:14,535
は、コサインの可能な限り最良の 2 

123
00:07:14,535 --> 00:07:18,051
次近似であるだけでなく、可能な限り最良の 3 

124
00:07:18,051 --> 00:07:19,580
次近似でもあります。

125
00:07:21,280 --> 00:07:24,237
4 次の項 (c4 に x を掛けたもの) 

126
00:07:24,237 --> 00:07:27,060
を 4 番目に追加することで改善できます。

127
00:07:27,880 --> 00:07:30,600
コサインの 4 階導関数はそれ自体であり、x 

128
00:07:30,600 --> 00:07:33,320
が 0 に等しい場合に 1 に等しくなります。

129
00:07:34,300 --> 00:07:36,119
そして、この新しい項を使った多項式の 

130
00:07:36,119 --> 00:07:37,460
4 階導関数は何でしょうか?

131
00:07:38,620 --> 00:07:42,945
さて、これらの指数がすべて前に飛び降りる状態でべき乗則を 

132
00:07:42,945 --> 00:07:46,972
何度も適用し続けると、最終的には 1 x 2 x 3 

133
00:07:46,972 --> 00:07:51,000
x 4 x c4、つまり 24 x c4 になります。

134
00:07:51,400 --> 00:07:53,571
したがって、これをコサイン x の 4 

135
00:07:53,571 --> 00:07:56,068
階微分値 (1) と一 致させたい場合、c4 

136
00:07:56,068 --> 00:07:58,240
は 24 の 1 でなければなりません。

137
00:07:58,240 --> 00:08:02,938
そして実際、次のような多項式 1 マイナス 1 の半分 

138
00:08:02,938 --> 00:08:06,630
x2 プラス 1 の 24 倍 x を 4 

139
00:08:06,630 --> 00:08:11,161
番目にすると、x が 0 に等しい付近のコサイン x 

140
00:08:11,161 --> 00:08:12,840
に非常に近似します。

141
00:08:13,740 --> 00:08:17,131
たとえば、小さな角度の余弦を含む物理問題で 

142
00:08:17,131 --> 00:08:20,522
は、この多項式を x の余弦に置き換えると 

143
00:08:20,522 --> 00:08:23,760
、予測はほとんど気付かないほど異なります。

144
00:08:23,760 --> 00:08:26,690
ここで一歩下がって、このプロセスでいくつか

145
00:08:26,690 --> 00:08:29,760
のことが起こっていることに注目してください。

146
00:08:30,520 --> 00:08:33,679
まず第一に、このプロセスでは階乗項が非常に自然に出てきます。

147
00:08:33,679 --> 00:08:38,782
関数 x の n 個の連続導関数を n に取り、 

148
00:08:38,782 --> 00:08:43,477
べき乗則を下にカスケードし続けると、残るのは 

149
00:08:43,477 --> 00:08:48,580
1 x 2 x 3 を繰り返し、n まで続きます。

150
00:08:49,220 --> 00:08:51,797
したがって、多項式の係数を必要な導関 

151
00:08:51,797 --> 00:08:54,240
数に単純に設定する必要はありません。

152
00:08:54,680 --> 00:08:58,540
この効果を打ち消すには、適切な階乗で除算する必要があります。

153
00:08:59,400 --> 00:09:02,463
たとえば、4 番目の係数の x はコサイン 1 の 

154
00:09:02,463 --> 00:09:05,880
4 階導関数ですが、4 階乗の 24 で除算されています。

155
00:09:05,880 --> 00:09:10,150
2 番目に注意すべきことは、この c4 に x を 4 

156
00:09:10,150 --> 00:09:12,589
回かけるなど、新しい用語を追加 

157
00:09:12,589 --> 00:09:17,012
しても、古い用語がどうあるべきかを台無しにしないということ

158
00:09:17,012 --> 00:09:19,300
です。 これは非常に重要です。

159
00:09:20,100 --> 00:09:23,192
たとえば、x が 0 に等しいこの多項式の 

160
00:09:23,192 --> 00:09:27,128
2 階導関数は、高次の項を 導入した後でも、依然として 

161
00:09:27,128 --> 00:09:30,080
2 番目の係数の 2 倍に等しくなります。

162
00:09:30,960 --> 00:09:33,813
そして、それは、x が 0 に等しいと差し込

163
00:09:33,813 --> 00:09:36,796
んでいるからで、すべて x を含む高次の項の 

164
00:09:36,796 --> 00:09:39,780
2 次導関数はそのまま洗い流されてしまいます。

165
00:09:40,740 --> 00:09:43,587
同じことが他の導関数にも当てはまります。

166
00:09:43,587 --> 00:09:46,720
 そのため、x が 0 に等 しい多項式の各

167
00:09:46,720 --> 00:09:50,280
導関数は、係数の 1 つだけによって制御されます。

168
00:09:52,640 --> 00:09:55,593
代わりに、x が pi に等しいなど、0 

169
00:09:55,593 --> 00:09:59,390
以外の入力を近似する 場合、同じ効果を得るために、x 

170
00:09:59,390 --> 00:10:02,625
から pi を引いた累乗、ま たは調べている入

171
00:10:02,625 --> 00:10:05,720
力の観点から多項式を記述する必要があります。

172
00:10:06,320 --> 00:10:09,731
これにより、著しく複雑に見えますが、ここで行っているこ

173
00:10:09,731 --> 00:10:13,143
とは、点 pi が 0 のように見え、動作することを確

174
00:10:13,143 --> 00:10:16,934
認することだけなので、x と pi を 代入すると、定数が 

175
00:10:16,934 --> 00:10:20,220
1 つだけ残る、多くの優れたキャンセルが行われます。

176
00:10:22,380 --> 00:10:26,230
そして最後に、より哲学的なレベルで、ここで行ってい

177
00:10:26,230 --> 00:10:30,079
ることは基本的に 、単一点における関数の高次導関数

178
00:10:30,079 --> 00:10:32,852
に関する情報を取得し、それをその点 

179
00:10:32,852 --> 00:10:36,702
付近の関数の値に関する情報に変換していることに注目

180
00:10:36,702 --> 00:10:37,780
してください。

181
00:10:40,960 --> 00:10:44,120
コサインの導関数は必要なだけ取得できます。

182
00:10:44,600 --> 00:10:47,870
この素晴らしい周期パターンに従い、x のコサイン、x 

183
00:10:47,870 --> 00:10:51,020
の負のサイン、負のコサイン、サインが繰り返されます。

184
00:10:52,320 --> 00:10:54,455
これらのそれぞれの値は、x が 0 

185
00:10:54,455 --> 00:10:56,828
に等しい場合に計算するのが簡単で、この 

186
00:10:56,828 --> 00:10:59,082
循環パターンに 1、0、負の 1、0 

187
00:10:59,082 --> 00:11:01,100
が与えられ、それが繰り返されます。

188
00:11:02,000 --> 00:11:05,450
そして、これらすべての高次導関数の値を知ることは、たと

189
00:11:05,450 --> 00:11:08,006
え単一の数値 (x が 0 に等しい) 

190
00:11:08,006 --> 00:11:11,457
を代入するだけであっても、x のコサインに関する多くの

191
00:11:11,457 --> 00:11:12,480
情報となります。

192
00:11:14,260 --> 00:11:19,797
そこで、私たちが行っていることは、その情報を活用し 

193
00:11:19,797 --> 00:11:23,844
てこの入力の近似値を取得することです。

194
00:11:23,844 --> 00:11:28,743
 これを行うに は、同じ 1、0、負の 1、 

195
00:11:28,743 --> 00:11:30,660
0、循環パターン。

196
00:11:31,420 --> 00:11:35,578
そのためには、多項式の各係数を同じパターンに従うだけで 

197
00:11:35,578 --> 00:11:39,440
すが、それぞれを適切な階乗で除算する必要があります。

198
00:11:40,120 --> 00:11:42,797
前に述べたように、これは多くの電力ルール アプリ 

199
00:11:42,797 --> 00:11:45,260
ケーションのカスケード効果を打ち消すものです。

200
00:11:47,280 --> 00:11:50,108
このプロセスを任意の時点で停止することで得られる多 

201
00:11:50,108 --> 00:11:52,720
項式は、x の余弦のテイラー多項式と呼ばれます。

202
00:11:52,720 --> 00:11:56,915
より一般的に、したがってより抽象的に言えば、コサイン以外

203
00:11:56,915 --> 00:12:01,110
の関数を扱っている 場合、その導関数、二次導関数などを計

204
00:12:01,110 --> 00:12:04,106
算して、必要なだけ多くの項を取得し、そ 

205
00:12:04,106 --> 00:12:06,503
れぞれを評価することになります。

206
00:12:06,503 --> 00:12:09,800
 そのうちの x は 0 に等しくなります。

207
00:12:09,800 --> 00:12:13,517
多項式近似の場合、n 項に対する各 x 

208
00:12:13,517 --> 00:12:17,235
の係数は、0 で評価された関 数の n 

209
00:12:17,235 --> 00:12:22,440
階導関数の値を n 階乗で割った値でなければなりません。

210
00:12:23,480 --> 00:12:27,773
このやや抽象的な式全体は、テイラー多項式に触 

211
00:12:27,773 --> 00:12:31,880
れるテキストやコースでよく目にするものです。

212
00:12:31,880 --> 00:12:35,270
これを見たとき、定数項によって多項式の値が f 

213
00:12:35,270 --> 00:12:38,660
の値と一致することが保証されると考えてください。

214
00:12:39,200 --> 00:12:42,443
次の項は、多項式の傾きが x が 0 に等 

215
00:12:42,443 --> 00:12:45,540
しい関数の傾きと一致することを保証します。

216
00:12:46,360 --> 00:12:50,010
次の項では、必要な項の数に応じて、その時点での傾き 

217
00:12:50,010 --> 00:12:53,520
の変化率が同じになるようにします。 以下同様です。

218
00:12:54,620 --> 00:12:57,867
選択する項が多いほど近似は近づきますが、その代 

219
00:12:57,867 --> 00:13:00,980
償として、得られる多項式はより複雑になります。

220
00:13:02,640 --> 00:13:06,104
そして、物事をさらに一般化するために、0 以外の入力 

221
00:13:06,104 --> 00:13:09,825
(これを a と呼びます ) に近い値を近似したい場合は、

222
00:13:09,825 --> 00:13:12,776
この多項式を x のべき乗から a を引いた 

223
00:13:12,776 --> 00:13:16,496
もので記述し、f の導関数をすべて評価することになります。

224
00:13:16,496 --> 00:13:17,780
 その入力では、a.

225
00:13:18,680 --> 00:13:20,828
これは、テイラー多項式が完全に

226
00:13:20,828 --> 00:13:23,120
一般的にどのように見えるかです。

227
00:13:24,000 --> 00:13:28,955
a の値を変更すると、この近似が元の関数に近づくように変 

228
00:13:28,955 --> 00:13:33,740
化し、その高次導関数が元の関数の導関数と等しくなります。

229
00:13:35,880 --> 00:13:38,890
これの最も単純で意味のある例の 1 つは、入力 x 

230
00:13:38,890 --> 00:13:41,900
が 0 に等しい場合の x に対する関数 e です。

231
00:13:42,760 --> 00:13:45,464
導関数の計算は非常に素晴らしく、これ以上に素晴らし

232
00:13:45,464 --> 00:13:48,170
いものです。 e の x に対する導関数はそれ自体

233
00:13:48,170 --> 00:13:50,766
なので、2 番目の導関数も x に 対する e 

234
00:13:50,766 --> 00:13:53,580
になり、その 3 番目の導関数も同様になるからです。

235
00:13:54,340 --> 00:13:56,608
したがって、x が 0 に等しい点では、これらはすべて 

236
00:13:56,608 --> 00:13:57,500
1 に等しくなります。

237
00:13:57,500 --> 00:14:04,672
これが意味するのは、多項式近似は、必要な項の数に応じて、1 

238
00:14:04,672 --> 00:14:11,606
プラス 1 倍 x プラス 1 の 2 倍 x 2 乗プ 

239
00:14:11,606 --> 00:14:18,540
ラス 1 の 3 階乗倍 x 3 乗などのようになります。

240
00:14:19,400 --> 00:14:22,700
これらは、e から x までのテイラー多項式です。

241
00:14:26,380 --> 00:14:29,915
さて、それを基礎として、微積分のすべてのトピックが

242
00:14:29,915 --> 00:14:33,450
どのように関連し ているかを示すという精神で、テイ

243
00:14:33,450 --> 00:14:35,853
ラー多項式のこの 2 次の項を理 

244
00:14:35,853 --> 00:14:39,530
解するための、まったく別の楽しい方法に移りましょう。

245
00:14:39,530 --> 00:14:40,520
 幾何学的に。

246
00:14:41,400 --> 00:14:43,570
これは微積分の基本定理に関連しています。

247
00:14:43,570 --> 00:14:46,283
 簡単な復習が 必要な場合は、第 1 章と第 8 

248
00:14:46,283 --> 00:14:47,260
章で説明しました。

249
00:14:47,980 --> 00:14:52,211
これらのビデオで行ったように、固定の左点と可変の右点の 

250
00:14:52,211 --> 00:14:56,140
間のグラフの下の面積を与える関数を考えてみましょう。

251
00:14:56,980 --> 00:15:00,704
ここでやろうとしているのは、これまでのようにグラフ自体の関 

252
00:15:00,704 --> 00:15:04,180
数ではなく、この面積関数を近似する方法を考えることです。

253
00:15:04,900 --> 00:15:07,096
その領域に焦点を当てることで、

254
00:15:07,096 --> 00:15:09,440
二次項が飛び出すことになります。

255
00:15:10,440 --> 00:15:15,322
微積分の基本定理は、このグラフ自体が面積関数の導関

256
00:15:15,322 --> 00:15:20,204
数を表すということ です。 これは、面積の右端に 

257
00:15:20,204 --> 00:15:25,282
dx をわずかに移動すると、グラフの高さ に dx 

258
00:15:25,282 --> 00:15:30,360
を掛けた値にほぼ等しい新しい面積が得られるためです。

259
00:15:30,360 --> 00:15:32,420
この近似は、dx の選択肢がますます小さ

260
00:15:32,420 --> 00:15:34,480
くなるにつれて、ますます正確になります。

261
00:15:35,980 --> 00:15:40,021
しかし、0 に近づくことを意図していない x の変化を 

262
00:15:40,021 --> 00:15:44,062
考慮して、この面積の変化をより正確にしたい場合は、ここ 

263
00:15:44,062 --> 00:15:47,960
で、ほぼ三角形であるこの部分を考慮する必要があります。

264
00:15:49,600 --> 00:15:53,708
開始入力を a 、その上に微調整された入力を 

265
00:15:53,708 --> 00:15:57,460
x と名付け、その変更を xa とします。

266
00:15:58,100 --> 00:16:03,040
その小さな三角形の底辺はその変化 xa であり、そ 

267
00:16:03,040 --> 00:16:07,600
の高さはグラフの傾きに xa を掛けたものです。

268
00:16:08,420 --> 00:16:12,931
このグラフは面積関数の導関数であるため、その傾きは入力 

269
00:16:12,931 --> 00:16:17,120
a で評価された面積関数の 2 次導関数になります。

270
00:16:18,440 --> 00:16:21,714
したがって、この三角形の面積 (底辺の 1/2 

271
00:16:21,714 --> 00:16:25,534
と高さの積) は、a で評価されるこ の面積関数の 2 

272
00:16:25,534 --> 00:16:28,126
次導関数の 1/2 に xa の 2 

273
00:16:28,126 --> 00:16:29,900
乗を乗じたものになります。

274
00:16:30,960 --> 00:16:34,380
これはまさにテイラー多項式で見られるものです。

275
00:16:34,880 --> 00:16:40,580
点 a におけるこの面積関数のさまざまな微分情報がわかって 

276
00:16:40,580 --> 00:16:45,900
いる場合、点 x における面積をどのように近似しますか?

277
00:16:45,900 --> 00:16:50,809
a、a の f までのすべての面積と、この長方形の面積 

278
00:16:50,809 --> 00:16:55,718
(一 次導関数の xa 倍)、および小さな三角形の面積 

279
00:16:55,718 --> 00:17:00,627
(二次導 関数の 1/2 倍) を含める必要があります。

280
00:17:00,627 --> 00:17:01,680
 xの二乗。

281
00:17:02,560 --> 00:17:04,275
これは非常に気に入っています。 

282
00:17:04,275 --> 00:17:06,740
すべてを書き出すと少し乱雑に見えますが、用語 

283
00:17:06,740 --> 00:17:09,420
のそれぞれには非常に明確な意味があり、図上でポイン

284
00:17:09,420 --> 00:17:10,599
トするだけで済みます。

285
00:17:10,599 --> 00:17:13,984
必要に応じて、ここで終了と呼ぶこともできます。

286
00:17:13,984 --> 00:17:17,222
 そうすれば、これらの テイラー多項式で近似

287
00:17:17,222 --> 00:17:20,460
するための非常に便利なツールが手に入ります。

288
00:17:21,400 --> 00:17:24,420
しかし、もしあなたが数学者のように考えているなら、

289
00:17:24,420 --> 00:17:27,440
立ち止まらずに無限に多く の項を追加することに意味

290
00:17:27,440 --> 00:17:30,460
があるのかどうかという疑問が生じるかもしれません。

291
00:17:31,380 --> 00:17:33,980
数学では、無限の和は級数と呼ばれます。

292
00:17:33,980 --> 00:17:37,128
 そのため、有限数の項を含 むこれらの近似の 

293
00:17:37,128 --> 00:17:40,276
1 つがテイラー多項式と呼ばれますが、無限に 

294
00:17:40,276 --> 00:17:43,561
多くの項をすべて加算すると、いわゆるテイラー級数

295
00:17:43,561 --> 00:17:44,520
が得られます。

296
00:17:45,260 --> 00:17:48,410
無限級数という考え方には細心の注意が必要です。

297
00:17:48,410 --> 00:17:51,971
 無限に 多くのものを足していくのは実際には意味がな

298
00:17:51,971 --> 00:17:56,080
く、電卓 のプラス ボタンを押す回数は限られているからです。

299
00:17:57,440 --> 00:18:01,595
しかし、各ステップで意味のある項をどんどん追加し 

300
00:18:01,595 --> 00:18:05,750
ていくことで特定の値にどんどん近づいていく系列が 

301
00:18:05,750 --> 00:18:09,740
ある場合、その系列はその値に収束すると言います。

302
00:18:10,320 --> 00:18:14,438
あるいは、この種の級数収束を含めるように等価性の定 

303
00:18:14,438 --> 00:18:18,557
義を拡張することに抵抗がない場合は、級数全体、つま 

304
00:18:18,557 --> 00:18:22,360
りこの無限和が収束する値に等しいと言うでしょう。

305
00:18:23,460 --> 00:18:26,944
たとえば、e から x までのテイラー多項式を見て 

306
00:18:26,944 --> 00:18:30,160
、x が 1 に等しいなどの入力を差し込みます。

307
00:18:31,140 --> 00:18:35,100
多項式の項をさらに追加すると、総和は値 e 

308
00:18:35,100 --> 00:18:40,140
にどんどん近づきま す。 そのため、この無限級数は数値 

309
00:18:40,140 --> 00:18:43,020
e に収束すると言います。 あ 

310
00:18:43,020 --> 00:18:48,420
るいは、同じことを言っていて、数値 e に等しいと言います。

311
00:18:48,780 --> 00:18:53,979
実際、x が 2 に等しいなど、x の他の値を代入し、こ 

312
00:18:53,979 --> 00:18:58,999
の値での高次のテイラー多項式の値を見ると、それらは e 

313
00:18:58,999 --> 00:19:04,020
に向かって x に収束することがわかります。 eの二乗。

314
00:19:04,680 --> 00:19:06,901
これらのテイラー多項式が入力 0 

315
00:19:06,901 --> 00:19:10,560
で収集された導関数情報のみから構築されているとしても、 

316
00:19:10,560 --> 00:19:14,350
これは、入力が 0 からどれだけ離れているかに関係なく、あ

317
00:19:14,350 --> 00:19:16,180
らゆる入力に当てはまります。

318
00:19:18,270 --> 00:19:21,424
このような場合、x に対する e はすべての入力 

319
00:19:21,424 --> 00:19:24,704
x において独自のテイ ラー級数に等しいと言います。

320
00:19:24,704 --> 00:19:27,480
 これは一種の魔法のようなことが起こります。

321
00:19:28,380 --> 00:19:31,378
これは、サインやコサインなど、他のいくつかの重要

322
00:19:31,378 --> 00:19:34,377
な関数にも当ては まりますが、場合によっては、こ

323
00:19:34,377 --> 00:19:36,626
れらの系列が、使用している導関数情 

324
00:19:36,626 --> 00:19:39,625
報の入力を中心とした特定の範囲内でのみ収束するこ

325
00:19:39,625 --> 00:19:40,500
とがあります。

326
00:19:41,580 --> 00:19:43,969
入力 x が 1 に等しい x 

327
00:19:43,969 --> 00:19:47,554
の自然対数のテイラー級数を計算 すると、これは 

328
00:19:47,554 --> 00:19:51,139
x が 1 に等しいときの x の自然対数の高 

329
00:19:51,139 --> 00:19:55,620
次導関数を評価することによって構築され、次のようになります。

330
00:19:56,080 --> 00:20:00,879
0 と 2 の間の入力を接続する場合、この系列の項をさらに 

331
00:20:00,879 --> 00:20:05,520
追加すると、その入力の自然対数にどんどん近づいていきます。

332
00:20:06,400 --> 00:20:08,974
しかし、その範囲を少しでも外れると

333
00:20:08,974 --> 00:20:11,700
、このシリーズは何にも近づけません。

334
00:20:12,480 --> 00:20:17,440
さらに多くの用語を追加すると、合計は大きく前後します。

335
00:20:18,100 --> 00:20:20,946
ご想像のとおり、x の自然対数は 2 

336
00:20:20,946 --> 00:20:24,093
を超える入力に対して完全 に適切に定義され

337
00:20:24,093 --> 00:20:27,540
ていますが、その値の自然対数には近づきません。

338
00:20:28,460 --> 00:20:31,836
ある意味では、x が 1 に等しいときの x 

339
00:20:31,836 --> 00:20:35,360
の ln の導関数情報は、そこまで伝播しません。

340
00:20:36,580 --> 00:20:39,977
このような場合、級数の項を追加しても何も近づ 

341
00:20:39,977 --> 00:20:43,080
かない場合、級数が分岐していると言います。

342
00:20:44,180 --> 00:20:48,034
そして、近似している入力と、これらの多項 

343
00:20:48,034 --> 00:20:51,889
式の出力が実際に収束する点の間の最大距離 

344
00:20:51,889 --> 00:20:55,560
は、テイラー級数の収束半径と呼ばれます。

345
00:20:56,840 --> 00:20:59,160
テイラー級数については学ぶべきことがまだ残っています。

346
00:20:59,500 --> 00:21:02,445
多くのユースケース、これらの近似の誤差に限界を設定

347
00:21:02,445 --> 00:21:05,390
するための戦 術、級数がいつ収束するか収束しないか

348
00:21:05,390 --> 00:21:08,335
を理解するためのテストがあ り、さらに言えば、微積

349
00:21:08,335 --> 00:21:10,810
分全体と触れられていない無数のトピックに 

350
00:21:10,810 --> 00:21:13,166
ついては学ぶべきことがまだ残っています。

351
00:21:13,166 --> 00:21:14,580
 このシリーズによって。

352
00:21:15,320 --> 00:21:19,359
これらのビデオの目的は、自信を持って効率的に学習し、 

353
00:21:19,359 --> 00:21:23,399
場合によっては自分でさらに多くのトピックを再発見でき 

354
00:21:23,399 --> 00:21:27,140
るようにするための基本的な直観を提供することです。

355
00:21:28,060 --> 00:21:32,594
テイラー級数の場合、そこにあるものをさらに探索すると 

356
00:21:32,594 --> 00:21:36,961
きに覚えておくべき基本的な直観は、単一点の微分情報 

357
00:21:36,961 --> 00:21:41,160
をその点の周囲の近似情報に変換するということです。

358
00:21:43,919 --> 00:21:45,216
このシリーズを応援してくださっ

359
00:21:45,216 --> 00:21:46,600
た皆様に改めて感謝申し上げます。

360
00:21:47,300 --> 00:21:58,849
次のシリーズは確率に基づいたものになるでしょう。

361
00:21:58,849 --> 00:22:09,435
 ビデオが作成され たときに早期アクセスした

362
00:22:09,435 --> 00:22:19,060
い場合は、どこに行くべきか知っています。

