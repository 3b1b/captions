[
 {
  "input": "When I first learned about Taylor series, I definitely didn't appreciate just how important they are. ",
  "translatedText": "Taylor 시리즈에 대해 처음 배웠을 때 나는 그것이 얼마나 중요한지 전혀 인식하지 못했습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 14.64,
  "end": 19.7
 },
 {
  "input": "But time and time again they come up in math, physics, and many fields of engineering because they're one of the most powerful tools that math has to offer for approximating functions. ",
  "translatedText": "그러나 이 개념은 수학, 물리학 및 다양한 공학 분야에서 계속해서 등장합니다. 왜냐하면 수학이 함수를 근사화하기 위해 제공하는 가장 강력한 도구 중 하나이기 때문입니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 20.12,
  "end": 29.18
 },
 {
  "input": "I think one of the first times this clicked for me as a student was not in a calculus class, but a physics class. ",
  "translatedText": "제가 학생이었을 때 처음으로 이런 일이 일어났던 것은 미적분학 수업이 아니라 물리학 수업이었을 때였습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 30.0,
  "end": 35.42
 },
 {
  "input": "We were studying a certain problem that had to do with the potential energy of a pendulum, and for that you need an expression for how high the weight of the pendulum is above its lowest point, and when you work that out it comes out to be proportional to 1 minus the cosine of the angle between the pendulum and the vertical. ",
  "translatedText": "우리는 진자의 위치 에너지와 관련된 특정 문제를 연구하고 있었는데 이를 위해서는 진자의 무게가 가장 낮은 지점보다 얼마나 높은지에 대한 표현이 필요합니다. 1에서 진자와 수직선 사이의 각도의 코사인을 뺀 값에 비례합니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 35.84,
  "end": 53.0
 },
 {
  "input": "The specifics of the problem we were trying to solve are beyond the point here, but what I'll say is that this cosine function made the problem awkward and unwieldy, and made it less clear how pendulums relate to other oscillating phenomena. ",
  "translatedText": "우리가 해결하려고 했던 문제의 구체적인 내용은 여기에서 다루지 않습니다. 하지만 제가 말씀드리고 싶은 것은 이 코사인 함수가 문제를 어색하고 다루기 힘들게 만들고 진자가 다른 진동 현상과 어떻게 관련되는지를 덜 명확하게 만들었다는 것입니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 53.58,
  "end": 66.52
 },
 {
  "input": "But if you approximate cosine of theta as 1 minus theta squared over 2, everything just fell into place much more easily. ",
  "translatedText": "그러나 세타의 코사인을 1 빼기 세타 제곱/2로 근사하면 모든 것이 훨씬 더 쉽게 제자리에 놓이게 됩니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 67.46,
  "end": 75.96
 },
 {
  "input": "If you've never seen anything like this before, an approximation like that might seem completely out of left field. ",
  "translatedText": "이전에 이와 같은 것을 본 적이 없다면 이와 같은 근사치는 완전히 의외인 것처럼 보일 수 있습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 76.66,
  "end": 82.78
 },
 {
  "input": "If you graph cosine of theta along with this function, 1 minus theta squared over 2, they do seem rather close to each other, at least for small angles near 0, but how would you even think to make this approximation, and how would you find that particular quadratic? ",
  "translatedText": "이 함수와 함께 세타의 코사인을 그래프로 그리면 1에서 세타의 제곱을 2로 나눈 것인데, 적어도 0에 가까운 작은 각도에서는 서로 가까워 보입니다. 하지만 이 근사치를 어떻게 생각하겠습니까? 그 특정한 이차식을 찾으세요? ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 83.82,
  "end": 99.42
 },
 {
  "input": "The study of Taylor series is largely about taking non-polynomial functions and finding polynomials that approximate them near some input. ",
  "translatedText": "Taylor 시리즈에 대한 연구는 주로 비다항식 함수를 취하고 일부 입력 근처에서 이를 근사화하는 다항식을 찾는 것에 관한 것입니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 101.22,
  "end": 108.84
 },
 {
  "input": "The motive here is that polynomials tend to be much easier to deal with than other functions. ",
  "translatedText": "여기서의 동기는 다항식이 다른 함수보다 다루기가 훨씬 쉬운 경향이 있다는 것입니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 108.84,
  "end": 113.76
 },
 {
  "input": "They're easier to compute, easier to take derivatives, easier to integrate, just all around more friendly. ",
  "translatedText": "계산하기 쉽고, 파생 상품을 사용하기 쉽고, 통합하기 쉽고, 모든 면에서 더 친숙합니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 114.34,
  "end": 119.48
 },
 {
  "input": "So let's take a look at that function, cosine of x, and really take a moment to think about how you might construct a quadratic approximation near x equals 0. ",
  "translatedText": "그럼 x의 코사인 함수를 살펴보고 x가 0인 근처에서 2차 근사를 어떻게 구성할 수 있는지 잠시 생각해 보겠습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 120.68,
  "end": 130.22
 },
 {
  "input": "That is, among all of the possible polynomials that look like c0 plus c1 times x plus c2 times x squared, for some choice of these constants, c0, c1, and c2, find the one that most resembles cosine of x near x equals 0, whose graph kind of spoons with the graph of cosine x at that point. ",
  "translatedText": "즉, c0 더하기 c1 곱하기 x 더하기 c2 곱하기 x 제곱처럼 보이는 모든 가능한 다항식 중에서 이러한 상수 c0, c1 및 c2 중 일부를 선택하여 x = 0 근처에서 x의 코사인과 가장 유사한 것을 찾으세요. , 그 지점에서 코사인 x 그래프가 있는 그래프 종류입니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 130.94,
  "end": 152.66
 },
 {
  "input": "Well, first of all, at the input 0, the value of cosine of x is 1, so if our approximation is going to be any good at all, it should also equal 1 at the input x equals 0. ",
  "translatedText": "음, 우선, 입력 0에서 x의 코사인 값은 1입니다. 따라서 근사치가 조금이라도 좋으려면 입력 x에서 1과 같아야 합니다. 0입니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 153.86,
  "end": 164.92
 },
 {
  "input": "Plugging in 0 just results in whatever c0 is, so we can set that equal to 1. ",
  "translatedText": "0을 연결하면 c0이 무엇이든 결과가 나오므로 이를 1과 동일하게 설정할 수 있습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 165.82,
  "end": 170.94
 },
 {
  "input": "This leaves us free to choose constants c1 and c2 to make this approximation as good as we can, but nothing we do with them is going to change the fact that the polynomial equals 1 at x equals 0. ",
  "translatedText": "이를 통해 우리는 이 근사치를 최대한 좋게 만들기 위해 상수 c1과 c2를 자유롭게 선택할 수 있지만, 이를 사용하여 수행하는 작업은 다항식이 1과 같고 x가 0과 같다는 사실을 바꾸지 않습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 173.08,
  "end": 184.0
 },
 {
  "input": "It would also be good if our approximation had the same tangent slope as cosine x at this point of interest. ",
  "translatedText": "우리의 근사치가 관심 지점에서 코사인 x와 동일한 접선 기울기를 갖는다면 좋을 것입니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 184.96,
  "end": 191.12
 },
 {
  "input": "Otherwise, the approximation drifts away from the cosine graph much faster than it needs to. ",
  "translatedText": "그렇지 않으면 근사치가 필요한 것보다 훨씬 빠르게 코사인 그래프에서 멀어집니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 191.9,
  "end": 196.7
 },
 {
  "input": "The derivative of cosine is negative sine, and at x equals 0, that equals 0, meaning the tangent line is perfectly flat. ",
  "translatedText": "코사인의 도함수는 음의 사인이고 x는 0, 즉 0과 같습니다. 이는 접선이 완벽하게 평평하다는 것을 의미합니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 198.2,
  "end": 205.84
 },
 {
  "input": "On the other hand, when you work out the derivative of our quadratic, you get c1 plus 2 times c2 times x. ",
  "translatedText": "반면에, 이차 방정식의 도함수를 계산하면 c1 더하기 2 곱하기 c2 곱하기 x를 얻게 됩니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 206.96,
  "end": 214.4
 },
 {
  "input": "At x equals 0, this just equals whatever we choose for c1. ",
  "translatedText": "x가 0일 때 이것은 우리가 c1에 대해 선택한 것과 같습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 215.32,
  "end": 219.42
 },
 {
  "input": "So this constant c1 has complete control over the derivative of our approximation around x equals 0. ",
  "translatedText": "따라서 이 상수 c1은 x=0에 대한 근사치의 도함수를 완벽하게 제어할 수 있습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 220.26,
  "end": 226.34
 },
 {
  "input": "Setting it equal to 0 ensures that our approximation also has a flat tangent line at this point. ",
  "translatedText": "0으로 설정하면 근사값도 이 지점에서 평평한 접선을 갖게 됩니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 227.12,
  "end": 232.3
 },
 {
  "input": "This leaves us free to change c2, but the value and slope of our polynomial at x equals 0 are locked in place to match that of cosine. ",
  "translatedText": "이로 인해 c2를 자유롭게 변경할 수 있지만 x가 0인 다항식의 값과 기울기는 코사인의 값과 일치하도록 고정되어 있습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 233.0,
  "end": 242.62
 },
 {
  "input": "The final thing to take advantage of is the fact that the cosine graph curves downward above x equals 0, it has a negative second derivative. ",
  "translatedText": "마지막으로 활용해야 할 점은 코사인 그래프가 x가 0인 경우 아래쪽으로 곡선을 그리며 음의 2차 도함수를 갖는다는 사실입니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 244.26,
  "end": 252.44
 },
 {
  "input": "Or in other words, even though the rate of change is 0 at that point, the rate of change itself is decreasing around that point. ",
  "translatedText": "즉, 해당 지점에서는 변화율이 0이더라도 해당 지점을 중심으로 변화율 자체가 감소하는 것입니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 253.38,
  "end": 260.46
 },
 {
  "input": "Specifically, since its derivative is negative sine of x, its second derivative is negative cosine of x, and at x equals 0, that equals negative 1. ",
  "translatedText": "구체적으로, 그 도함수는 x의 음의 사인이므로 2차 도함수는 x의 음의 코사인이고 x가 0일 때 이는 음의 1과 같습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 261.28,
  "end": 271.84
 },
 {
  "input": "Now in the same way that we wanted the derivative of our approximation to match that of the cosine, so that their values wouldn't drift apart needlessly quickly, making sure that their second derivatives match will ensure that they curve at the same rate, that the slope of our polynomial doesn't drift away from the slope of cosine x any more quickly than it needs to. ",
  "translatedText": "이제 우리는 근사치의 도함수를 코사인의 도함수와 일치시켜 그 값이 불필요하게 빠르게 떨어져 나가지 않도록 하고, 두 번째 도함수가 일치하는지 확인하여 동일한 비율로 곡선을 그리도록 하기를 원했습니다. 다항식의 기울기는 필요한 것보다 더 빨리 코사인 x의 기울기에서 벗어나지 않습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 273.08,
  "end": 293.32
 },
 {
  "input": "Pulling up the same derivative we had before, and then taking its derivative, we see that the second derivative of this polynomial is exactly 2 times c2. ",
  "translatedText": "이전에 가졌던 것과 동일한 도함수를 꺼내서 그 도함수를 취하면 이 다항식의 2차 도함수는 정확히 c2의 2배라는 것을 알 수 있습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 294.22,
  "end": 304.04
 },
 {
  "input": "So to make sure that this second derivative also equals negative 1 at x equals 0, 2 times c2 has to be negative 1, meaning c2 itself should be negative 1 half. ",
  "translatedText": "따라서 이 2차 도함수가 x가 0일 때 음수 1과 같다는 것을 확인하려면 c2 곱하기 2가 음수 1이 되어야 합니다. 즉, c2 자체는 음수 1/2이 되어야 합니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 304.96,
  "end": 315.58
 },
 {
  "input": "And this gives us the approximation 1 plus 0x minus 1 half x squared. ",
  "translatedText": "그리고 이것은 대략 1 더하기 0x 빼기 1 반 x 제곱을 제공합니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 316.38,
  "end": 322.14
 },
 {
  "input": "And to get a feel for how good it is, if you estimate cosine of 0.1 using this polynomial, you'd estimate it to be 0.995. ",
  "translatedText": "그리고 코사인을 0으로 추정하면 얼마나 좋은지 느껴보실 수 있습니다. 1 이 다항식을 사용하면 0으로 추정됩니다. 995. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 323.2,
  "end": 331.6
 },
 {
  "input": "And this is the true value of cosine of 0.1. ",
  "translatedText": "그리고 이것이 코사인 0의 실제값입니다. 1. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 332.52,
  "end": 335.82
 },
 {
  "input": "It's a really good approximation! ",
  "translatedText": "정말 좋은 근사치네요! ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 336.64,
  "end": 338.44
 },
 {
  "input": "Take a moment to reflect on what just happened. ",
  "translatedText": "잠시 시간을 내어 방금 일어난 일을 생각해 보세요. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 340.3,
  "end": 342.52
 },
 {
  "input": "You had 3 degrees of freedom with this quadratic approximation, the constants c0, c1, and c2. ",
  "translatedText": "이 2차 근사, 상수 c0, c1 및 c2를 사용하면 3개의 자유도를 가집니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 342.52,
  "end": 349.02
 },
 {
  "input": "c0 was responsible for making sure that the output of the approximation matches that of cosine x at x equals 0. ",
  "translatedText": "c0은 근사치의 출력이 x가 0인 코사인 x의 출력과 일치하는지 확인하는 역할을 담당했습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 349.52,
  "end": 356.44
 },
 {
  "input": "c1 was in charge of making sure that the derivatives match at that point, and c2 was responsible for making sure that the second derivatives match up. ",
  "translatedText": "c1은 해당 시점에서 파생 상품이 일치하는지 확인하는 역할을 담당했고, c2는 2차 파생 상품이 일치하는지 확인하는 역할을 담당했습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 357.12,
  "end": 368.24
 },
 {
  "input": "This ensures that the way your approximation changes as you move away from x equals 0, and the way that the rate of change itself changes, is as similar as possible to the behavior of cosine x, given the amount of control you have. ",
  "translatedText": "이렇게 하면 x에서 멀어질 때 근사치가 0으로 변하는 방식과 변화율 자체가 변하는 방식이 제어할 수 있는 정도에 따라 코사인 x의 동작과 최대한 유사해집니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 368.94,
  "end": 383.16
 },
 {
  "input": "You could give yourself more control by allowing more terms in your polynomial and matching higher order derivatives. ",
  "translatedText": "다항식에 더 많은 항을 허용하고 고차 도함수를 일치시켜 더 많은 제어권을 가질 수 있습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 384.08,
  "end": 390.14
 },
 {
  "input": "For example, let's say you added on the term c3 times x3 for some constant c3. ",
  "translatedText": "예를 들어, 어떤 상수 c3에 대해 c3 곱하기 x3이라는 항을 추가했다고 가정해 보겠습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 390.84,
  "end": 396.58
 },
 {
  "input": "In that case, if you take the third derivative of a cubic polynomial, anything that's quadratic or smaller goes to 0. ",
  "translatedText": "이 경우, 3차 다항식의 3차 도함수를 취하면 2차 이하의 모든 것은 0이 됩니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 396.58,
  "end": 404.28
 },
 {
  "input": "As for that last term, after 3 iterations of the power rule, it looks like 1 times 2 times 3 times c3. ",
  "translatedText": "마지막 항은 거듭제곱 법칙을 3번 반복한 후 1 곱하기 2 곱하기 3 곱하기 c3 처럼 보입니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 405.56,
  "end": 414.46
 },
 {
  "input": "On the other hand, the third derivative of cosine x comes out to sine x, which equals 0 at x equals 0. ",
  "translatedText": "반면에, 코사인 x의 3차 도함수는 사인 x로 나오며, 이는 x가 0과 같을 때 0과 같습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 416.46,
  "end": 423.28
 },
 {
  "input": "So to make sure that the third derivatives match, the constant c3 should be 0. ",
  "translatedText": "따라서 3차 도함수가 일치하는지 확인하려면 상수 c3이 0이어야 합니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 423.28,
  "end": 428.76
 },
 {
  "input": "Or in other words, not only is 1 minus 1 half x2 the best possible quadratic approximation of cosine, it's also the best possible cubic approximation. ",
  "translatedText": "즉, 1 빼기 1 반 x2는 코사인의 가능한 가장 좋은 2차 근사일 뿐만 아니라 가장 좋은 3차 근사이기도 합니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 429.88,
  "end": 439.58
 },
 {
  "input": "You can make an improvement by adding on a fourth order term, c4 times x to the fourth. ",
  "translatedText": "4차 항인 c4 곱하기 x를 4차 항에 추가하여 개선할 수 있습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 441.28,
  "end": 447.06
 },
 {
  "input": "The fourth derivative of cosine is itself, which equals 1 at x equals 0. ",
  "translatedText": "코사인의 4차 도함수는 x가 0일 때 1과 같습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 447.88,
  "end": 453.32
 },
 {
  "input": "And what's the fourth derivative of our polynomial with this new term? ",
  "translatedText": "그리고 이 새로운 항을 사용한 다항식의 네 번째 도함수는 무엇입니까? ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 454.3,
  "end": 457.46
 },
 {
  "input": "Well, when you keep applying the power rule over and over, with those exponents all hopping down in front, you end up with 1 times 2 times 3 times 4 times c4, which is 24 times c4. ",
  "translatedText": "음, 계속해서 거듭제곱 법칙을 적용하면 지수가 모두 앞쪽으로 뛰어내리면서 결국 1 곱하기 2 곱하기 3 곱하기 4 곱하기 c4, 즉 24 곱하기 c4가 됩니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 458.62,
  "end": 471.0
 },
 {
  "input": "So if we want this to match the fourth derivative of cosine x, which is 1, c4 has to be 1 over 24. ",
  "translatedText": "따라서 이것이 코사인 x의 4차 도함수인 1과 일치하도록 하려면 c4는 24분의 1이어야 합니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 471.4,
  "end": 478.76
 },
 {
  "input": "And indeed, the polynomial 1 minus 1 half x2 plus 1 24 times x to the fourth, which looks like this, is a very close approximation for cosine x around x equals 0. ",
  "translatedText": "그리고 실제로, 다항식 1 빼기 1 반 x2 더하기 1 24 곱하기 x의 4제곱은 이렇게 보입니다. 이는 x 주위의 코사인 x가 0과 매우 가까운 근사치입니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 479.82,
  "end": 492.84
 },
 {
  "input": "In any physics problem involving the cosine of a small angle, for example, predictions would be almost unnoticeably different if you substituted this polynomial for cosine of x. ",
  "translatedText": "예를 들어 작은 각도의 코사인과 관련된 모든 물리학 문제에서 이 다항식을 x의 코사인으로 대체하면 예측이 거의 눈에 띄지 않게 달라질 수 있습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 493.74,
  "end": 504.06
 },
 {
  "input": "Now take a step back and notice a few things happening with this process. ",
  "translatedText": "이제 한 걸음 물러서서 이 프로세스에서 일어나는 몇 가지 일을 살펴보세요. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 506.1,
  "end": 509.76
 },
 {
  "input": "First of all, factorial terms come up very naturally in this process. ",
  "translatedText": "우선, 이 과정에서 계승항이 매우 자연스럽게 등장합니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 510.52,
  "end": 514.2
 },
 {
  "input": "When you take n successive derivatives of the function x to the n, letting the power rule keep cascading on down, what you'll be left with is 1 times 2 times 3 on and on and on up to whatever n is. ",
  "translatedText": "함수 x에서 n까지 n개의 연속 도함수를 취하여 거듭제곱 법칙이 계속 아래로 내려가도록 두면, 1 곱하기 2 곱하기 3이 계속해서 계속해서 n이 될 때까지 계속됩니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 515.02,
  "end": 528.58
 },
 {
  "input": "So you don't simply set the coefficients of the polynomial equal to whatever derivative you want. ",
  "translatedText": "따라서 단순히 다항식의 계수를 원하는 도함수와 동일하게 설정하지 않습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 529.22,
  "end": 534.24
 },
 {
  "input": "You have to divide by the appropriate factorial to cancel out this effect. ",
  "translatedText": "이 효과를 상쇄하려면 적절한 계승으로 나누어야 합니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 534.68,
  "end": 538.54
 },
 {
  "input": "For example, that x to the fourth coefficient was the fourth derivative of cosine, 1, but divided by 4 factorial, 24. ",
  "translatedText": "예를 들어, 네 번째 계수에 대한 x는 코사인 1의 네 번째 도함수였지만 4 계승값 24로 나누어졌습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 539.4,
  "end": 547.78
 },
 {
  "input": "The second thing to notice is that adding on new terms, like this c4 times x to the fourth, doesn't mess up what the old terms should be, and that's really important. ",
  "translatedText": "두 번째로 주목해야 할 점은 c4 곱하기 x의 4승과 같은 새로운 항을 추가해도 이전 항이 엉망이 되지 않으며 이것이 정말 중요하다는 것입니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 549.4,
  "end": 559.3
 },
 {
  "input": "For example, the second derivative of this polynomial at x equals 0 is still equal to 2 times the second coefficient, even after you introduce higher order terms. ",
  "translatedText": "예를 들어, x가 0인 이 다항식의 2차 도함수는 더 높은 차수의 항을 도입한 후에도 여전히 두 번째 계수의 2배와 같습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 560.1,
  "end": 570.08
 },
 {
  "input": "And it's because we're plugging in x equals 0, so the second derivative of any higher order term, which all include an x, will just wash away. ",
  "translatedText": "그리고 그것은 우리가 x가 0과 같다고 대입하기 때문입니다. 따라서 모두 x를 포함하는 고차 항의 2차 도함수는 그냥 사라져 버릴 것입니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 570.96,
  "end": 579.78
 },
 {
  "input": "And the same goes for any other derivative, which is why each derivative of a polynomial at x equals 0 is controlled by one and only one of the coefficients. ",
  "translatedText": "그리고 다른 도함수도 마찬가지입니다. 이것이 x가 0인 다항식의 각 도함수가 계수 중 하나만으로 제어되는 이유입니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 580.74,
  "end": 590.28
 },
 {
  "input": "If instead you were approximating near an input other than 0, like x equals pi, in order to get the same effect, you would have to write your polynomial in terms of powers of x minus pi, or whatever input you're looking at. ",
  "translatedText": "대신 x가 pi와 같은 0이 아닌 입력 근처에 접근하는 경우 동일한 효과를 얻으려면 x 빼기 pi의 거듭제곱 또는 현재 보고 있는 입력의 관점에서 다항식을 작성해야 합니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 592.64,
  "end": 605.72
 },
 {
  "input": "This makes it look noticeably more complicated, but all we're doing is making sure that the point pi looks and behaves like 0, so that plugging in x equals pi will result in a lot of nice cancellation that leaves only one constant. ",
  "translatedText": "이로 인해 눈에 띄게 더 복잡해 보이지만 우리가 하는 일은 점 pi가 0처럼 보이고 동작하는지 확인하는 것뿐입니다. 따라서 x와 pi를 연결하면 하나의 상수만 남기는 멋진 취소가 많이 발생합니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 606.32,
  "end": 620.22
 },
 {
  "input": "And finally, on a more philosophical level, notice how what we're doing here is basically taking information about higher order derivatives of a function at a single point, and translating that into information about the value of the function near that point. ",
  "translatedText": "마지막으로 좀 더 철학적인 수준에서 우리가 여기서 하고 있는 일이 어떻게 기본적으로 단일 지점에서 함수의 고차 도함수에 대한 정보를 취하고 이를 해당 지점 근처의 함수 값에 대한 정보로 변환하는지 주목하세요. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 622.38,
  "end": 637.78
 },
 {
  "input": "You can take as many derivatives of cosine as you want. ",
  "translatedText": "원하는만큼 코사인 파생 상품을 사용할 수 있습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 640.96,
  "end": 644.12
 },
 {
  "input": "It follows this nice cyclic pattern, cosine of x, negative sine of x, negative cosine, sine, and then repeat. ",
  "translatedText": "이 멋진 순환 패턴, 즉 x의 코사인, x의 음의 사인, 음의 코사인, 사인을 따르고 반복됩니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 644.6,
  "end": 651.02
 },
 {
  "input": "And the value of each one of these is easy to compute at x equals 0, it gives this cyclic pattern 1, 0, negative 1, 0, and then repeat. ",
  "translatedText": "그리고 이들 각각의 값은 x가 0일 때 계산하기 쉽습니다. 이 순환 패턴은 1, 0, 음수 1, 0을 제공하고 반복됩니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 652.32,
  "end": 661.1
 },
 {
  "input": "And knowing the values of all those higher order derivatives is a lot of information about cosine of x, even though it only involves plugging in a single number, x equals 0. ",
  "translatedText": "그리고 모든 고차 도함수 값을 아는 것은 x의 코사인에 대한 많은 정보입니다. x는 0이라는 단일 숫자만 대입해도 됩니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 662.0,
  "end": 672.48
 },
 {
  "input": "So what we're doing is leveraging that information to get an approximation around this input, and you do it by creating a polynomial whose higher order derivatives are designed to match up with those of cosine, following this same 1, 0, negative 1, 0, cyclic pattern. ",
  "translatedText": "따라서 우리가 하는 일은 해당 정보를 활용하여 이 입력에 대한 근사치를 구하는 것입니다. 그리고 동일한 1, 0, 음수 1을 따라 코사인과 일치하도록 설계된 고차 도함수를 갖는 다항식을 생성하여 수행합니다. 0, 순환 패턴. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 674.26,
  "end": 690.66
 },
 {
  "input": "And to do that, you just make each coefficient of the polynomial follow that same pattern, but you have to divide each one by the appropriate factorial. ",
  "translatedText": "그렇게 하려면 다항식의 각 계수가 동일한 패턴을 따르도록 하고 각 계수를 적절한 계승으로 나누어야 합니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 691.42,
  "end": 699.44
 },
 {
  "input": "Like I mentioned before, this is what cancels out the cascading effect of many power rule applications. ",
  "translatedText": "앞서 언급한 것처럼 이는 많은 거듭제곱 법칙 적용의 계단식 효과를 상쇄하는 것입니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 700.12,
  "end": 705.26
 },
 {
  "input": "The polynomials you get by stopping this process at any point are called Taylor polynomials for cosine of x. ",
  "translatedText": "임의의 지점에서 이 과정을 중지하여 얻는 다항식을 x의 코사인에 대한 테일러 다항식이라고 합니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 707.28,
  "end": 713.16
 },
 {
  "input": "More generally, and hence more abstractly, if we were dealing with some other function other than cosine, you would compute its derivative, its second derivative, and so on, getting as many terms as you'd like, and you would evaluate each one of them at x equals 0. ",
  "translatedText": "더 일반적으로, 따라서 더 추상적으로, 코사인 이외의 다른 함수를 다루는 경우 해당 도함수, 2차 도함수 등을 계산하여 원하는 만큼 많은 항을 얻은 다음 각 함수를 평가합니다. 그 중 x는 0입니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 713.9,
  "end": 728.4
 },
 {
  "input": "For the polynomial approximation, the coefficient of each x to the n term should be the value of the nth derivative of the function evaluated at 0, but divided by n factorial. ",
  "translatedText": "다항식 근사의 경우, n 항에 대한 각 x의 계수는 0에서 평가된 함수의 n차 도함수 값이어야 하지만 n 계승으로 나누어야 합니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 729.58,
  "end": 742.44
 },
 {
  "input": "This whole rather abstract formula is something you'll likely see in any text or course that touches on Taylor polynomials. ",
  "translatedText": "이 전체적으로 다소 추상적인 공식은 Taylor 다항식을 다루는 모든 텍스트나 강좌에서 볼 수 있는 것입니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 743.48,
  "end": 751.2
 },
 {
  "input": "When you see it, think to yourself that the constant term ensures that the value of the polynomial matches with the value of f. ",
  "translatedText": "그것을 볼 때 상수 항이 다항식의 값이 f의 값과 일치하도록 보장한다고 스스로 생각하십시오. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 751.78,
  "end": 758.66
 },
 {
  "input": "The next term ensures that the slope of the polynomial matches the slope of the function at x equals 0. ",
  "translatedText": "다음 항은 다항식의 기울기가 x가 0인 함수의 기울기와 일치하는지 확인합니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 759.2,
  "end": 765.54
 },
 {
  "input": "The next term ensures that the rate at which the slope changes is the same at that point, and so on, depending on how many terms you want. ",
  "translatedText": "다음 항은 원하는 항 수에 따라 기울기가 변경되는 비율이 해당 지점에서 동일하도록 보장합니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 766.36,
  "end": 773.52
 },
 {
  "input": "And the more terms you choose, the closer the approximation, but the tradeoff is that the polynomial you'd get would be more complicated. ",
  "translatedText": "더 많은 항을 선택할수록 근사값이 가까워지지만, 얻게 되는 다항식은 더 복잡해집니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 774.62,
  "end": 780.98
 },
 {
  "input": "And to make things even more general, if you wanted to approximate near some input other than 0, which we'll call a, you would write this polynomial in terms of powers of x minus a, and you would evaluate all the derivatives of f at that input, a. ",
  "translatedText": "그리고 상황을 더욱 일반화하기 위해 0이 아닌 입력(a라고 함)에 가까운 근사값을 얻으려면 이 다항식을 x 빼기 a의 거듭제곱으로 작성하고 f의 모든 도함수를 평가해야 합니다. 해당 입력에서 a. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 782.64,
  "end": 797.78
 },
 {
  "input": "This is what Taylor polynomials look like in their fullest generality. ",
  "translatedText": "이것이 테일러 다항식의 일반적인 모습입니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 798.68,
  "end": 803.12
 },
 {
  "input": "Changing the value of a changes where this approximation is hugging the original function, where its higher order derivatives will be equal to those of the original function. ",
  "translatedText": "이 근사치가 원래 함수를 껴안는 경우 변경 값을 변경하면 더 높은 차수의 도함수가 원래 함수의 값과 동일해집니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 804.0,
  "end": 813.74
 },
 {
  "input": "One of the simplest meaningful examples of this is the function e to the x around the input x equals 0. ",
  "translatedText": "이에 대한 가장 간단하고 의미 있는 예 중 하나는 입력 x가 0인 주변의 x에 대한 함수 e입니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 815.88,
  "end": 821.9
 },
 {
  "input": "Computing the derivatives is super nice, as nice as it gets, because the derivative of e to the x is itself, so the second derivative is also e to the x, as is its third, and so on. ",
  "translatedText": "도함수를 계산하는 것은 매우 훌륭합니다. 왜냐하면 e에 대한 x의 도함수는 그 자체이기 때문에 2차 도함수도 x에 대한 e이고 세 번째도 마찬가지이기 때문입니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 822.76,
  "end": 833.58
 },
 {
  "input": "So at the point x equals 0, all of these are equal to 1. ",
  "translatedText": "따라서 x가 0인 지점에서 이들 모두는 1과 같습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 834.34,
  "end": 838.24
 },
 {
  "input": "And what that means is our polynomial approximation should look like 1 plus 1 times x plus 1 over 2 times x squared plus 1 over 3 factorial times x cubed, and so on, depending on how many terms you want. ",
  "translatedText": "이것이 의미하는 바는 다항식 근사가 원하는 항 수에 따라 1 더하기 1 곱하기 x 더하기 1 나누기 2 곱하기 x 제곱 더하기 1 나누기 3 계승 곱하기 x 세제곱 등과 같은 모습이어야 한다는 것입니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 839.12,
  "end": 858.54
 },
 {
  "input": "These are the Taylor polynomials for e to the x. ",
  "translatedText": "이것은 e에서 x까지의 테일러 다항식입니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 859.4,
  "end": 862.7
 },
 {
  "input": "Ok, so with that as a foundation, in the spirit of showing you just how connected all the topics of calculus are, let me turn to something kind of fun, a completely different way to understand this second order term of the Taylor polynomials, but geometrically. ",
  "translatedText": "좋아, 그럼 그것을 기초로 미적분학의 모든 주제가 얼마나 연결되어 있는지 보여주기 위해 테일러 다항식의 2차 항을 이해하는 완전히 다른 재미있는 방법을 살펴보겠습니다. 하지만 기하학적으로. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 866.38,
  "end": 880.52
 },
 {
  "input": "It's related to the fundamental theorem of calculus, which I talked about in chapters 1 and 8 if you need a quick refresher. ",
  "translatedText": "이는 미적분학의 기본 정리와 관련이 있으며, 빠르게 복습이 필요한 경우 1장과 8장에서 설명했습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 881.4,
  "end": 887.26
 },
 {
  "input": "Like we did in those videos, consider a function that gives the area under some graph between a fixed left point and a variable right point. ",
  "translatedText": "해당 비디오에서 했던 것처럼 고정된 왼쪽 지점과 가변적인 오른쪽 지점 사이의 일부 그래프 아래 영역을 제공하는 함수를 고려해 보세요. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 887.98,
  "end": 896.14
 },
 {
  "input": "What we're going to do here is think about how to approximate this area function, not the function for the graph itself, like we've been doing before. ",
  "translatedText": "여기서 우리가 하려는 일은 이전처럼 그래프 자체에 대한 함수가 아니라 이 면적 함수를 어떻게 근사화할지 생각하는 것입니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 896.98,
  "end": 904.18
 },
 {
  "input": "Focusing on that area is what's going to make the second order term pop out. ",
  "translatedText": "그 영역에 초점을 맞추면 2차 용어가 튀어나오게 됩니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 904.9,
  "end": 909.44
 },
 {
  "input": "Remember, the fundamental theorem of calculus is that this graph itself represents the derivative of the area function, and it's because a slight nudge dx to the right bound of the area gives a new bit of area approximately equal to the height of the graph times dx. ",
  "translatedText": "미적분학의 기본 정리는 이 그래프 자체가 면적 함수의 도함수를 나타낸다는 점을 기억하세요. dx를 면적의 오른쪽 경계로 살짝 밀어 넣으면 그래프 높이에 dx를 곱한 것과 거의 같은 새로운 면적이 생기기 때문입니다. . ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 910.44,
  "end": 929.2
 },
 {
  "input": "That approximation is increasingly accurate for smaller and smaller choices of dx. ",
  "translatedText": "이 근사치는 dx의 선택이 점점 작아질수록 점점 더 정확해집니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 930.04,
  "end": 934.48
 },
 {
  "input": "But if you wanted to be more accurate about this change in area, given some change in x that isn't meant to approach 0, you would have to take into account this portion right here, which is approximately a triangle. ",
  "translatedText": "그러나 이 영역 변화에 대해 더 정확하게 알고 싶다면 0에 접근하지 않는 x의 일부 변화가 주어지면 바로 여기에서 대략 삼각형인 이 부분을 고려해야 합니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 935.98,
  "end": 947.96
 },
 {
  "input": "Let's name the starting input a, and the nudged input above it x, so that change is x-a. ",
  "translatedText": "시작 입력의 이름을 a로 지정하고 그 위에 있는 입력의 이름을 x로 지정하여 변경 사항이 xa가 되도록 하겠습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 949.6,
  "end": 957.46
 },
 {
  "input": "The base of that little triangle is that change, x-a, and its height is the slope of the graph times x-a. ",
  "translatedText": "그 작은 삼각형의 밑변은 변화 xa이고 높이는 그래프의 기울기에 xa를 곱한 값입니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 958.1,
  "end": 967.6
 },
 {
  "input": "Since this graph is the derivative of the area function, its slope is the second derivative of the area function, evaluated at the input a. ",
  "translatedText": "이 그래프는 면적 함수의 도함수이므로 기울기는 입력 a에서 평가된 면적 함수의 2차 도함수입니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 968.42,
  "end": 977.12
 },
 {
  "input": "So the area of this triangle, 1 half base times height, is 1 half times the second derivative of this area function, evaluated at a, multiplied by x-a squared. ",
  "translatedText": "따라서 이 삼각형의 면적(1/2 밑수 x 높이)은 a에서 평가된 이 면적 함수의 2차 도함수에 xa 제곱을 곱한 값의 1/2입니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 978.44,
  "end": 989.9
 },
 {
  "input": "And this is exactly what you would see with a Taylor polynomial. ",
  "translatedText": "그리고 이것이 바로 Taylor 다항식에서 볼 수 있는 것입니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 990.96,
  "end": 994.38
 },
 {
  "input": "If you knew the various derivative information about this area function at the point a, how would you approximate the area at the point x? ",
  "translatedText": "점 a에서 이 면적 함수에 대한 다양한 미분 정보를 알고 있다면 점 x의 면적을 어떻게 근사화하겠습니까? ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 994.88,
  "end": 1003.66
 },
 {
  "input": "You have to include all that area up to a, f of a, plus the area of this rectangle here, which is the first derivative, times x-a, plus the area of that little triangle, which is 1 half times the second derivative, times x-a squared. ",
  "translatedText": "a, f의 a까지의 모든 면적에 여기 이 직사각형의 면적(1차 도함수 xa)과 작은 삼각형의 면적(1/2 곱하기 2차 도함수 xa)을 더해야 합니다. xa 제곱. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1005.36,
  "end": 1021.68
 },
 {
  "input": "I really like this, because even though it looks a bit messy all written out, each one of the terms has a very clear meaning that you can just point to on the diagram. ",
  "translatedText": "저는 이것이 정말 마음에 듭니다. 비록 모든 내용이 조금 지저분해 보일지라도 각 용어는 도표에서 가리킬 수 있을 만큼 매우 명확한 의미를 갖고 있기 때문입니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1022.56,
  "end": 1031.08
 },
 {
  "input": "If you wanted, we could call it an end here, and you would have a phenomenally useful tool for approximations with these Taylor polynomials. ",
  "translatedText": "원하신다면 여기서 끝이라고 부를 수 있으며, 이러한 Taylor 다항식을 사용한 근사를 위한 놀랍도록 유용한 도구를 갖게 될 것입니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1033.4,
  "end": 1040.46
 },
 {
  "input": "But if you're thinking like a mathematician, one question you might ask is whether or not it makes sense to never stop and just add infinitely many terms. ",
  "translatedText": "그러나 당신이 수학자처럼 생각한다면, 당신이 물을 수 있는 한 가지 질문은 절대 멈추지 않고 무한히 많은 항을 추가하는 것이 타당한지 여부입니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1041.4,
  "end": 1050.46
 },
 {
  "input": "In math, an infinite sum is called a series, so even though one of these approximations with finitely many terms is called a Taylor polynomial, adding all infinitely many terms gives what's called a Taylor series. ",
  "translatedText": "수학에서는 무한합을 계열이라고 합니다. 따라서 유한한 개수의 항을 사용하는 이러한 근사 중 하나를 테일러 다항식이라고 하지만, 무한히 많은 항을 모두 추가하면 테일러 계열이라는 것이 생성됩니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1051.38,
  "end": 1064.52
 },
 {
  "input": "You have to be really careful with the idea of an infinite series, because it doesn't actually make sense to add infinitely many things, you can only hit the plus button on the calculator so many times. ",
  "translatedText": "무한한 계열이라는 아이디어에는 정말 조심해야 합니다. 실제로 무한히 많은 것을 추가하는 것은 의미가 없기 때문에 계산기의 더하기 버튼을 여러 번만 누를 수 있기 때문입니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1065.26,
  "end": 1076.08
 },
 {
  "input": "But if you have a series where adding more and more of the terms, which makes sense at each step, gets you increasingly close to some specific value, you say that the series converges to that value. ",
  "translatedText": "그러나 각 단계에서 의미가 있는 용어를 점점 더 추가하면 특정 값에 점점 더 가까워지는 계열이 있는 경우 계열이 해당 값에 수렴한다고 말합니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1077.44,
  "end": 1089.74
 },
 {
  "input": "Or if you're comfortable extending the definition of equality to include this kind of series convergence, you'd say that the series as a whole, this infinite sum, equals the value that it's converging to. ",
  "translatedText": "또는 이러한 종류의 계열 수렴을 포함하도록 동등성의 정의를 확장하는 것이 편안하다면 계열 전체, 이 무한 합이 수렴되는 값과 같다고 말할 수 있습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1090.32,
  "end": 1102.36
 },
 {
  "input": "For example, look at the Taylor polynomial for e to the x, and plug in some input, like x equals 1. ",
  "translatedText": "예를 들어 e와 x에 대한 Taylor 다항식을 보고 x가 1과 같은 일부 입력을 연결합니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1103.46,
  "end": 1110.16
 },
 {
  "input": "As you add more and more polynomial terms, the total sum gets closer and closer to the value e, so you say that this infinite series converges to the number e, or what's saying the same thing, that it equals the number e. ",
  "translatedText": "다항식 항을 더 추가할수록 총합은 e 값에 점점 더 가까워집니다. 따라서 이 무한 급수는 숫자 e로 수렴한다고 말합니다. 또는 동일한 의미로 숫자 e와 같다고 말합니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1111.14,
  "end": 1126.7
 },
 {
  "input": "In fact, it turns out that if you plug in any other value of x, like x equals 2, and look at the value of the higher and higher order Taylor polynomials at this value, they will converge towards e to the x, which is e squared. ",
  "translatedText": "실제로, x가 2인 것처럼 x의 다른 값을 대입하고 이 값에서 점점 더 높은 차수의 테일러 다항식의 값을 보면 e를 향해 x로 수렴할 것입니다. 전자 제곱. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1127.84,
  "end": 1144.02
 },
 {
  "input": "This is true for any input, no matter how far away from 0 it is, even though these Taylor polynomials are constructed only from derivative information gathered at the input 0. ",
  "translatedText": "이는 0에서 아무리 멀리 떨어져 있더라도 모든 입력에 적용됩니다. 비록 이러한 테일러 다항식이 입력 0에서 수집된 도함수 정보로만 구성되더라도 마찬가지입니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1144.68,
  "end": 1156.18
 },
 {
  "input": "In a case like this, we say that e to the x equals its own Taylor series at all inputs x, which is kind of a magical thing to have happen. ",
  "translatedText": "이와 같은 경우, 우리는 x에 대한 e가 모든 입력 x에서 자신의 Taylor 급수와 같다고 말하는데, 이는 일종의 마법 같은 일이 일어난 것입니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1158.27,
  "end": 1167.48
 },
 {
  "input": "Even though this is also true for a couple other important functions, like sine and cosine, sometimes these series only converge within a certain range around the input whose derivative information you're using. ",
  "translatedText": "이는 사인 및 코사인과 같은 몇 가지 다른 중요한 함수에도 적용되지만 때로는 이러한 계열이 파생 정보를 사용하는 입력 주변의 특정 범위 내에서만 수렴됩니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1168.38,
  "end": 1180.5
 },
 {
  "input": "If you worked out the Taylor series for the natural log of x around the input x equals 1, which is built by evaluating the higher order derivatives of the natural log of x at x equals 1, this is what it would look like. ",
  "translatedText": "입력 x가 1일 때 x의 자연 로그에 대한 Taylor 시리즈를 계산하면 x가 1일 때 x의 자연 로그의 고차 도함수를 평가하여 구축됩니다. 이는 다음과 같습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1181.58,
  "end": 1195.62
 },
 {
  "input": "When you plug in an input between 0 and 2, adding more and more terms of this series will indeed get you closer and closer to the natural log of that input. ",
  "translatedText": "0과 2 사이의 입력을 연결하면 이 계열의 항을 점점 더 추가하면 해당 입력의 자연 로그에 점점 더 가까워집니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1196.08,
  "end": 1205.52
 },
 {
  "input": "But outside of that range, even by just a little bit, the series fails to approach anything. ",
  "translatedText": "하지만 그 범위를 벗어나면 이 시리즈는 조금이라도 접근하지 못한다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1206.4,
  "end": 1211.7
 },
 {
  "input": "As you add on more and more terms, the sum bounces back and forth wildly. ",
  "translatedText": "더 많은 용어를 추가하면 합계가 격렬하게 앞뒤로 튕겨 나옵니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1212.48,
  "end": 1217.44
 },
 {
  "input": "It does not, as you might expect, approach the natural log of that value, even though the natural log of x is perfectly well defined for inputs above 2. ",
  "translatedText": "x의 자연 로그가 2보다 큰 입력에 대해 완벽하게 잘 정의되어 있음에도 불구하고 예상한 대로 해당 값의 자연 로그에 접근하지 않습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1218.1,
  "end": 1227.54
 },
 {
  "input": "In some sense, the derivative information of ln of x at x equals 1 doesn't propagate out that far. ",
  "translatedText": "어떤 의미에서 x가 1인 x에서 ln의 도함수 정보는 그렇게까지 전파되지 않습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1228.46,
  "end": 1235.36
 },
 {
  "input": "In a case like this, where adding more terms of the series doesn't approach anything, you say the series diverges. ",
  "translatedText": "이와 같이 계열의 항을 더 추가해도 아무 것도 접근하지 않는 경우 계열이 발산한다고 말합니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1236.58,
  "end": 1243.08
 },
 {
  "input": "And that maximum distance between the input you're approximating near and points where the outputs of these polynomials actually converge is called the radius of convergence for the Taylor series. ",
  "translatedText": "그리고 가까운 입력과 이러한 다항식의 출력이 실제로 수렴하는 지점 사이의 최대 거리를 Taylor 시리즈의 수렴 반경이라고 합니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1244.18,
  "end": 1255.56
 },
 {
  "input": "There remains more to learn about Taylor series. ",
  "translatedText": "Taylor 시리즈에 대해 더 배울 것이 남아 있습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1256.84,
  "end": 1259.16
 },
 {
  "input": "There are many use cases, tactics for placing bounds on the error of these approximations, tests for understanding when series do and don't converge, and for that matter, there remains more to learn about calculus as a whole and the countless topics not touched by this series. ",
  "translatedText": "많은 사용 사례, 이러한 근사의 오류에 대한 경계를 설정하기 위한 전술, 계열이 수렴하고 수렴하지 않는 시기를 이해하기 위한 테스트 등이 있습니다. 그리고 그 문제에 대해 전체적으로 미적분학에 대해 배울 것이 더 많이 남아 있으며 다루지 않은 수많은 주제도 있습니다. 이 시리즈로. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1259.5,
  "end": 1274.58
 },
 {
  "input": "The goal with these videos is to give you the fundamental intuitions that make you feel confident and efficient in learning more on your own, and potentially even rediscovering more of the topic for yourself. ",
  "translatedText": "이 비디오의 목표는 스스로 더 많은 것을 배우고 잠재적으로 스스로 더 많은 주제를 재발견할 수 있는 자신감과 효율성을 느낄 수 있는 근본적인 직관을 제공하는 것입니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1275.32,
  "end": 1287.14
 },
 {
  "input": "In the case of Taylor series, the fundamental intuition to keep in mind as you explore more of what there is, is that they translate derivative information at a single point to approximation information around that point. ",
  "translatedText": "Taylor 시리즈의 경우, 더 많은 것을 탐색할 때 염두에 두어야 할 근본적인 직관은 단일 지점의 파생 정보를 해당 지점 주변의 근사 정보로 변환한다는 것입니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1288.06,
  "end": 1301.16
 },
 {
  "input": "Thank you once again to everybody who supported this series. ",
  "translatedText": "이 시리즈를 지지해주신 모든 분들께 다시 한 번 감사드립니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1303.92,
  "end": 1306.6
 },
 {
  "input": "The next series like it will be on probability, and if you want early access as those videos are made, you know where to go. ",
  "translatedText": "이와 같은 다음 시리즈는 확률적으로 나올 것이며 해당 비디오가 제작될 때 조기 액세스를 원한다면 어디로 가야할지 알 수 있습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1307.3,
  "end": 1339.06
 }
]