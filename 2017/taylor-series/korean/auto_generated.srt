1
00:00:14,640 --> 00:00:17,124
Taylor 시리즈에 대해 처음 배웠을 때 나는 

2
00:00:17,124 --> 00:00:19,700
그것이 얼마나 중요한지 전혀 인식하지 못했습니다. 

3
00:00:20,120 --> 00:00:22,408
그러나 이 개념은 수학, 물리학 및 다양한 

4
00:00:22,408 --> 00:00:24,316
공학 분야에서 계속해서 등장합니다. 

5
00:00:24,316 --> 00:00:26,414
왜냐하면 수학이 함수를 근사화하기 위해 

6
00:00:26,414 --> 00:00:29,180
제공하는 가장 강력한 도구 중 하나이기 때문입니다. 

7
00:00:30,000 --> 00:00:32,710
제가 학생이었을 때 처음으로 이런 일이 일어났던 것은 

8
00:00:32,710 --> 00:00:35,420
미적분학 수업이 아니라 물리학 수업이었을 때였습니다. 

9
00:00:35,840 --> 00:00:39,022
우리는 진자의 위치 에너지와 관련된 특정 

10
00:00:39,022 --> 00:00:42,067
문제를 연구하고 있었는데 이를 위해서는 

11
00:00:42,067 --> 00:00:45,250
진자의 무게가 가장 낮은 지점보다 얼마나 

12
00:00:45,250 --> 00:00:47,879
높은지에 대한 표현이 필요합니다. 

13
00:00:47,879 --> 00:00:51,339
1에서 진자와 수직선 사이의 각도의 코사인을 

14
00:00:51,339 --> 00:00:53,000
뺀 값에 비례합니다. 

15
00:00:53,580 --> 00:00:56,072
우리가 해결하려고 했던 문제의 구체적인 내용은 

16
00:00:56,072 --> 00:00:58,756
여기에서 다루지 않습니다. 하지만 제가 말씀드리고 

17
00:00:58,756 --> 00:01:01,152
싶은 것은 이 코사인 함수가 문제를 어색하고 

18
00:01:01,152 --> 00:01:03,644
다루기 힘들게 만들고 진자가 다른 진동 현상과 

19
00:01:03,644 --> 00:01:06,520
어떻게 관련되는지를 덜 명확하게 만들었다는 것입니다. 

20
00:01:07,460 --> 00:01:11,285
그러나 세타의 코사인을 1 빼기 세타 제곱/2로 

21
00:01:11,285 --> 00:01:15,251
근사하면 모든 것이 훨씬 더 쉽게 제자리에 놓이게 

22
00:01:15,251 --> 00:01:15,960
됩니다. 

23
00:01:16,660 --> 00:01:19,720
이전에 이와 같은 것을 본 적이 없다면 이와 같은 

24
00:01:19,720 --> 00:01:22,780
근사치는 완전히 의외인 것처럼 보일 수 있습니다. 

25
00:01:23,820 --> 00:01:26,713
이 함수와 함께 세타의 코사인을 그래프로 

26
00:01:26,713 --> 00:01:30,110
그리면 1에서 세타의 제곱을 2로 나눈 것인데, 

27
00:01:30,110 --> 00:01:33,003
적어도 0에 가까운 작은 각도에서는 서로 

28
00:01:33,003 --> 00:01:36,149
가까워 보입니다. 하지만 이 근사치를 어떻게 

29
00:01:36,149 --> 00:01:39,420
생각하겠습니까? 그 특정한 이차식을 찾으세요? 

30
00:01:41,220 --> 00:01:43,963
Taylor 시리즈에 대한 연구는 주로 비다항식 

31
00:01:43,963 --> 00:01:46,198
함수를 취하고 일부 입력 근처에서 이를 

32
00:01:46,198 --> 00:01:48,840
근사화하는 다항식을 찾는 것에 관한 것입니다. 

33
00:01:48,840 --> 00:01:51,142
여기서의 동기는 다항식이 다른 함수보다 

34
00:01:51,142 --> 00:01:53,760
다루기가 훨씬 쉬운 경향이 있다는 것입니다. 

35
00:01:54,340 --> 00:01:56,910
계산하기 쉽고, 파생 상품을 사용하기 쉽고, 

36
00:01:56,910 --> 00:01:59,480
통합하기 쉽고, 모든 면에서 더 친숙합니다. 

37
00:02:00,680 --> 00:02:03,908
그럼 x의 코사인 함수를 살펴보고 x가 

38
00:02:03,908 --> 00:02:06,697
0인 근처에서 2차 근사를 어떻게 

39
00:02:06,697 --> 00:02:10,220
구성할 수 있는지 잠시 생각해 보겠습니다. 

40
00:02:10,940 --> 00:02:14,402
즉, c0 더하기 c1 곱하기 x 더하기 c2 

41
00:02:14,402 --> 00:02:17,864
곱하기 x 제곱처럼 보이는 모든 가능한 다항식 

42
00:02:17,864 --> 00:02:21,193
중에서 이러한 상수 c0, c1 및 c2 중 

43
00:02:21,193 --> 00:02:24,256
일부를 선택하여 x = 0 근처에서 x의 

44
00:02:24,256 --> 00:02:27,318
코사인과 가장 유사한 것을 찾으세요. , 

45
00:02:27,318 --> 00:02:30,647
그 지점에서 코사인 x 그래프가 있는 그래프 

46
00:02:30,647 --> 00:02:31,580
종류입니다. 

47
00:02:31,580 --> 00:02:36,916
음, 우선, 입력 0에서 x의 코사인 값은 1입니다. 

48
00:02:36,916 --> 00:02:41,006
따라서 근사치가 조금이라도 좋으려면 입력 

49
00:02:41,006 --> 00:02:44,920
x에서 1과 같아야 합니다. 0입니다. 

50
00:02:45,820 --> 00:02:48,536
0을 연결하면 c0이 무엇이든 결과가 나오므로 

51
00:02:48,536 --> 00:02:50,940
이를 1과 동일하게 설정할 수 있습니다. 

52
00:02:53,080 --> 00:02:55,859
이를 통해 우리는 이 근사치를 최대한 좋게 만들기 

53
00:02:55,859 --> 00:02:58,837
위해 상수 c1과 c2를 자유롭게 선택할 수 있지만, 

54
00:02:58,837 --> 00:03:01,617
이를 사용하여 수행하는 작업은 다항식이 1과 같고 

55
00:03:01,617 --> 00:03:04,000
x가 0과 같다는 사실을 바꾸지 않습니다. 

56
00:03:04,960 --> 00:03:07,916
우리의 근사치가 관심 지점에서 코사인 x와 

57
00:03:07,916 --> 00:03:11,120
동일한 접선 기울기를 갖는다면 좋을 것입니다. 

58
00:03:11,900 --> 00:03:14,140
그렇지 않으면 근사치가 필요한 것보다 

59
00:03:14,140 --> 00:03:16,700
훨씬 빠르게 코사인 그래프에서 멀어집니다. 

60
00:03:18,200 --> 00:03:21,110
코사인의 도함수는 음의 사인이고 x는 0, 

61
00:03:21,110 --> 00:03:23,899
즉 0과 같습니다. 이는 접선이 완벽하게 

62
00:03:23,899 --> 00:03:25,840
평평하다는 것을 의미합니다. 

63
00:03:26,960 --> 00:03:30,542
반면에, 이차 방정식의 도함수를 계산하면 c1 

64
00:03:30,542 --> 00:03:34,400
더하기 2 곱하기 c2 곱하기 x를 얻게 됩니다. 

65
00:03:35,320 --> 00:03:37,142
x가 0일 때 이것은 우리가 

66
00:03:37,142 --> 00:03:39,420
c1에 대해 선택한 것과 같습니다. 

67
00:03:40,260 --> 00:03:43,553
따라서 이 상수 c1은 x=0에 대한 근사치의 

68
00:03:43,553 --> 00:03:46,340
도함수를 완벽하게 제어할 수 있습니다. 

69
00:03:47,120 --> 00:03:49,360
0으로 설정하면 근사값도 이 

70
00:03:49,360 --> 00:03:52,300
지점에서 평평한 접선을 갖게 됩니다. 

71
00:03:53,000 --> 00:03:55,927
이로 인해 c2를 자유롭게 변경할 수 

72
00:03:55,927 --> 00:03:59,134
있지만 x가 0인 다항식의 값과 기울기는 

73
00:03:59,134 --> 00:04:02,620
코사인의 값과 일치하도록 고정되어 있습니다. 

74
00:04:04,260 --> 00:04:07,140
마지막으로 활용해야 할 점은 코사인 그래프가 

75
00:04:07,140 --> 00:04:09,790
x가 0인 경우 아래쪽으로 곡선을 그리며 

76
00:04:09,790 --> 00:04:12,440
음의 2차 도함수를 갖는다는 사실입니다. 

77
00:04:13,380 --> 00:04:16,788
즉, 해당 지점에서는 변화율이 0이더라도 해당 

78
00:04:16,788 --> 00:04:20,459
지점을 중심으로 변화율 자체가 감소하는 것입니다. 

79
00:04:21,279 --> 00:04:24,340
구체적으로, 그 도함수는 x의 음의 

80
00:04:24,340 --> 00:04:27,401
사인이므로 2차 도함수는 x의 음의 

81
00:04:27,401 --> 00:04:31,840
코사인이고 x가 0일 때 이는 음의 1과 같습니다. 

82
00:04:33,080 --> 00:04:36,516
이제 우리는 근사치의 도함수를 코사인의 도함수와 

83
00:04:36,516 --> 00:04:39,572
일치시켜 그 값이 불필요하게 빠르게 떨어져 

84
00:04:39,572 --> 00:04:43,136
나가지 않도록 하고, 두 번째 도함수가 일치하는지 

85
00:04:43,136 --> 00:04:46,446
확인하여 동일한 비율로 곡선을 그리도록 하기를 

86
00:04:46,446 --> 00:04:49,628
원했습니다. 다항식의 기울기는 필요한 것보다 

87
00:04:49,628 --> 00:04:53,320
더 빨리 코사인 x의 기울기에서 벗어나지 않습니다. 

88
00:04:54,220 --> 00:04:57,321
이전에 가졌던 것과 동일한 도함수를 꺼내서 

89
00:04:57,321 --> 00:05:00,680
그 도함수를 취하면 이 다항식의 2차 도함수는 

90
00:05:00,680 --> 00:05:04,040
정확히 c2의 2배라는 것을 알 수 있습니다. 

91
00:05:04,960 --> 00:05:07,420
따라서 이 2차 도함수가 x가 0일 때 

92
00:05:07,420 --> 00:05:09,880
음수 1과 같다는 것을 확인하려면 c2 

93
00:05:09,880 --> 00:05:12,340
곱하기 2가 음수 1이 되어야 합니다. 

94
00:05:12,340 --> 00:05:15,360
즉, c2 자체는 음수 1/2이 되어야 합니다. 

95
00:05:15,360 --> 00:05:18,750
그리고 이것은 대략 1 더하기 0x 

96
00:05:18,750 --> 00:05:22,140
빼기 1 반 x 제곱을 제공합니다. 

97
00:05:23,200 --> 00:05:25,878
그리고 코사인을 0으로 추정하면 얼마나 

98
00:05:25,878 --> 00:05:27,947
좋은지 느껴보실 수 있습니다. 

99
00:05:27,947 --> 00:05:31,600
1 이 다항식을 사용하면 0으로 추정됩니다. 995. 

100
00:05:32,520 --> 00:05:35,820
그리고 이것이 코사인 0의 실제값입니다. 1. 

101
00:05:36,640 --> 00:05:38,440
정말 좋은 근사치네요! 

102
00:05:40,300 --> 00:05:42,520
잠시 시간을 내어 방금 일어난 일을 생각해 보세요. 

103
00:05:42,520 --> 00:05:45,553
이 2차 근사, 상수 c0, c1 및 

104
00:05:45,553 --> 00:05:49,020
c2를 사용하면 3개의 자유도를 가집니다. 

105
00:05:49,520 --> 00:05:52,914
c0은 근사치의 출력이 x가 0인 코사인 x의 

106
00:05:52,914 --> 00:05:56,440
출력과 일치하는지 확인하는 역할을 담당했습니다. 

107
00:05:57,120 --> 00:06:00,730
c1은 해당 시점에서 파생 상품이 일치하는지 

108
00:06:00,730 --> 00:06:04,340
확인하는 역할을 담당했고, c2는 2차 파생 

109
00:06:04,340 --> 00:06:08,240
상품이 일치하는지 확인하는 역할을 담당했습니다. 

110
00:06:08,940 --> 00:06:13,733
이렇게 하면 x에서 멀어질 때 근사치가 0으로 변하는 

111
00:06:13,733 --> 00:06:18,366
방식과 변화율 자체가 변하는 방식이 제어할 수 있는 

112
00:06:18,366 --> 00:06:23,160
정도에 따라 코사인 x의 동작과 최대한 유사해집니다. 

113
00:06:24,080 --> 00:06:27,110
다항식에 더 많은 항을 허용하고 고차 도함수를 

114
00:06:27,110 --> 00:06:30,140
일치시켜 더 많은 제어권을 가질 수 있습니다. 

115
00:06:30,840 --> 00:06:33,285
예를 들어, 어떤 상수 c3에 대해 c3 곱하기 

116
00:06:33,285 --> 00:06:35,640
x3이라는 항을 추가했다고 가정해 보겠습니다. 

117
00:06:35,640 --> 00:06:39,684
이 경우, 3차 다항식의 3차 도함수를 

118
00:06:39,684 --> 00:06:44,280
취하면 2차 이하의 모든 것은 0이 됩니다. 

119
00:06:45,560 --> 00:06:49,929
마지막 항은 거듭제곱 법칙을 3번 반복한 후 1 

120
00:06:49,929 --> 00:06:54,460
곱하기 2 곱하기 3 곱하기 c3 처럼 보입니다. 

121
00:06:56,460 --> 00:06:59,743
반면에, 코사인 x의 3차 도함수는 사인 x로 

122
00:06:59,743 --> 00:07:03,280
나오며, 이는 x가 0과 같을 때 0과 같습니다. 

123
00:07:03,280 --> 00:07:05,536
따라서 3차 도함수가 일치하는지 

124
00:07:05,536 --> 00:07:08,420
확인하려면 상수 c3이 0이어야 합니다. 

125
00:07:08,420 --> 00:07:12,025
즉, 1 빼기 1 반 x2는 코사인의 

126
00:07:12,025 --> 00:07:15,459
가능한 가장 좋은 2차 근사일 뿐만 

127
00:07:15,459 --> 00:07:19,580
아니라 가장 좋은 3차 근사이기도 합니다. 

128
00:07:21,280 --> 00:07:24,095
4차 항인 c4 곱하기 x를 4차 

129
00:07:24,095 --> 00:07:27,060
항에 추가하여 개선할 수 있습니다. 

130
00:07:27,880 --> 00:07:33,320
코사인의 4차 도함수는 x가 0일 때 1과 같습니다. 

131
00:07:34,300 --> 00:07:35,677
그리고 이 새로운 항을 사용한 

132
00:07:35,677 --> 00:07:37,460
다항식의 네 번째 도함수는 무엇입니까? 

133
00:07:38,620 --> 00:07:42,609
음, 계속해서 거듭제곱 법칙을 적용하면 지수가 모두 

134
00:07:42,609 --> 00:07:46,598
앞쪽으로 뛰어내리면서 결국 1 곱하기 2 곱하기 3 

135
00:07:46,598 --> 00:07:50,312
곱하기 4 곱하기 c4, 즉 24 곱하기 c4가 

136
00:07:50,312 --> 00:07:51,000
됩니다. 

137
00:07:51,400 --> 00:07:54,633
따라서 이것이 코사인 x의 4차 도함수인 1과 

138
00:07:54,633 --> 00:07:58,240
일치하도록 하려면 c4는 24분의 1이어야 합니다. 

139
00:07:58,240 --> 00:08:02,944
그리고 실제로, 다항식 1 빼기 1 반 x2 더하기 

140
00:08:02,944 --> 00:08:07,324
1 24 곱하기 x의 4제곱은 이렇게 보입니다. 

141
00:08:07,324 --> 00:08:11,542
이는 x 주위의 코사인 x가 0과 매우 가까운 

142
00:08:11,542 --> 00:08:12,840
근사치입니다. 

143
00:08:13,740 --> 00:08:16,758
예를 들어 작은 각도의 코사인과 관련된 모든 

144
00:08:16,758 --> 00:08:19,776
물리학 문제에서 이 다항식을 x의 코사인으로 

145
00:08:19,776 --> 00:08:23,035
대체하면 예측이 거의 눈에 띄지 않게 달라질 수 

146
00:08:23,035 --> 00:08:23,760
있습니다. 

147
00:08:23,760 --> 00:08:26,902
이제 한 걸음 물러서서 이 프로세스에서 

148
00:08:26,902 --> 00:08:29,760
일어나는 몇 가지 일을 살펴보세요. 

149
00:08:30,520 --> 00:08:32,099
우선, 이 과정에서 계승항이 

150
00:08:32,099 --> 00:08:33,679
매우 자연스럽게 등장합니다. 

151
00:08:33,679 --> 00:08:37,325
함수 x에서 n까지 n개의 연속 도함수를 

152
00:08:37,325 --> 00:08:42,081
취하여 거듭제곱 법칙이 계속 아래로 내려가도록 두면, 

153
00:08:42,081 --> 00:08:46,043
1 곱하기 2 곱하기 3이 계속해서 계속해서 

154
00:08:46,043 --> 00:08:48,580
n이 될 때까지 계속됩니다. 

155
00:08:49,220 --> 00:08:51,730
따라서 단순히 다항식의 계수를 원하는 

156
00:08:51,730 --> 00:08:54,240
도함수와 동일하게 설정하지 않습니다. 

157
00:08:54,680 --> 00:08:58,415
이 효과를 상쇄하려면 적절한 계승으로 나누어야 합니다.

158
00:08:58,415 --> 00:08:58,540
 

159
00:08:59,400 --> 00:09:02,531
예를 들어, 네 번째 계수에 대한 x는 코사인 1의 

160
00:09:02,531 --> 00:09:05,771
네 번째 도함수였지만 4 계승값 24로 나누어졌습니다.

161
00:09:05,771 --> 00:09:05,880
 

162
00:09:05,880 --> 00:09:10,187
두 번째로 주목해야 할 점은 c4 곱하기 x의 

163
00:09:10,187 --> 00:09:14,329
4승과 같은 새로운 항을 추가해도 이전 항이 

164
00:09:14,329 --> 00:09:19,300
엉망이 되지 않으며 이것이 정말 중요하다는 것입니다. 

165
00:09:20,100 --> 00:09:23,332
예를 들어, x가 0인 이 다항식의 2차 

166
00:09:23,332 --> 00:09:26,284
도함수는 더 높은 차수의 항을 도입한 

167
00:09:26,284 --> 00:09:30,080
후에도 여전히 두 번째 계수의 2배와 같습니다. 

168
00:09:30,960 --> 00:09:33,974
그리고 그것은 우리가 x가 0과 같다고 대입하기 

169
00:09:33,974 --> 00:09:36,765
때문입니다. 따라서 모두 x를 포함하는 고차 

170
00:09:36,765 --> 00:09:39,780
항의 2차 도함수는 그냥 사라져 버릴 것입니다. 

171
00:09:40,740 --> 00:09:43,775
그리고 다른 도함수도 마찬가지입니다. 

172
00:09:43,775 --> 00:09:46,955
이것이 x가 0인 다항식의 각 도함수가 

173
00:09:46,955 --> 00:09:50,280
계수 중 하나만으로 제어되는 이유입니다. 

174
00:09:52,640 --> 00:09:55,606
대신 x가 pi와 같은 0이 아닌 입력 

175
00:09:55,606 --> 00:09:58,977
근처에 접근하는 경우 동일한 효과를 얻으려면 

176
00:09:58,977 --> 00:10:02,079
x 빼기 pi의 거듭제곱 또는 현재 보고 

177
00:10:02,079 --> 00:10:05,720
있는 입력의 관점에서 다항식을 작성해야 합니다. 

178
00:10:06,320 --> 00:10:09,731
이로 인해 눈에 띄게 더 복잡해 보이지만 우리가 

179
00:10:09,731 --> 00:10:13,017
하는 일은 점 pi가 0처럼 보이고 동작하는지 

180
00:10:13,017 --> 00:10:16,555
확인하는 것뿐입니다. 따라서 x와 pi를 연결하면 

181
00:10:16,555 --> 00:10:20,220
하나의 상수만 남기는 멋진 취소가 많이 발생합니다. 

182
00:10:22,380 --> 00:10:26,065
마지막으로 좀 더 철학적인 수준에서 우리가 여기서 

183
00:10:26,065 --> 00:10:29,619
하고 있는 일이 어떻게 기본적으로 단일 지점에서 

184
00:10:29,619 --> 00:10:33,436
함수의 고차 도함수에 대한 정보를 취하고 이를 해당 

185
00:10:33,436 --> 00:10:36,858
지점 근처의 함수 값에 대한 정보로 변환하는지 

186
00:10:36,858 --> 00:10:37,780
주목하세요. 

187
00:10:40,960 --> 00:10:44,120
원하는만큼 코사인 파생 상품을 사용할 수 있습니다. 

188
00:10:44,600 --> 00:10:47,168
이 멋진 순환 패턴, 즉 x의 코사인, 

189
00:10:47,168 --> 00:10:49,269
x의 음의 사인, 음의 코사인, 

190
00:10:49,269 --> 00:10:51,020
사인을 따르고 반복됩니다. 

191
00:10:52,320 --> 00:10:55,119
그리고 이들 각각의 값은 x가 0일 때 

192
00:10:55,119 --> 00:10:58,046
계산하기 쉽습니다. 이 순환 패턴은 1, 

193
00:10:58,046 --> 00:11:01,100
0, 음수 1, 0을 제공하고 반복됩니다. 

194
00:11:02,000 --> 00:11:05,493
그리고 모든 고차 도함수 값을 아는 것은 

195
00:11:05,493 --> 00:11:08,682
x의 코사인에 대한 많은 정보입니다. 

196
00:11:08,682 --> 00:11:12,480
x는 0이라는 단일 숫자만 대입해도 됩니다. 

197
00:11:14,260 --> 00:11:17,644
따라서 우리가 하는 일은 해당 정보를 활용하여 

198
00:11:17,644 --> 00:11:20,767
이 입력에 대한 근사치를 구하는 것입니다. 

199
00:11:20,767 --> 00:11:23,761
그리고 동일한 1, 0, 음수 1을 따라 

200
00:11:23,761 --> 00:11:27,145
코사인과 일치하도록 설계된 고차 도함수를 갖는 

201
00:11:27,145 --> 00:11:30,660
다항식을 생성하여 수행합니다. 0, 순환 패턴. 

202
00:11:31,420 --> 00:11:35,029
그렇게 하려면 다항식의 각 계수가 동일한 패턴을 

203
00:11:35,029 --> 00:11:38,771
따르도록 하고 각 계수를 적절한 계승으로 나누어야 

204
00:11:38,771 --> 00:11:39,440
합니다. 

205
00:11:40,120 --> 00:11:42,797
앞서 언급한 것처럼 이는 많은 거듭제곱 법칙 

206
00:11:42,797 --> 00:11:45,260
적용의 계단식 효과를 상쇄하는 것입니다. 

207
00:11:47,280 --> 00:11:50,049
임의의 지점에서 이 과정을 중지하여 얻는 다항식을 

208
00:11:50,049 --> 00:11:52,720
x의 코사인에 대한 테일러 다항식이라고 합니다. 

209
00:11:52,720 --> 00:11:56,075
더 일반적으로, 따라서 더 추상적으로, 

210
00:11:56,075 --> 00:12:00,650
코사인 이외의 다른 함수를 다루는 경우 해당 도함수, 

211
00:12:00,650 --> 00:12:04,920
2차 도함수 등을 계산하여 원하는 만큼 많은 항을 

212
00:12:04,920 --> 00:12:07,817
얻은 다음 각 함수를 평가합니다. 

213
00:12:07,817 --> 00:12:09,800
그 중 x는 0입니다. 

214
00:12:09,800 --> 00:12:14,070
다항식 근사의 경우, n 항에 대한 각 x의 

215
00:12:14,070 --> 00:12:17,998
계수는 0에서 평가된 함수의 n차 도함수 

216
00:12:17,998 --> 00:12:22,440
값이어야 하지만 n 계승으로 나누어야 합니다. 

217
00:12:23,480 --> 00:12:26,189
이 전체적으로 다소 추상적인 공식은 

218
00:12:26,189 --> 00:12:28,763
Taylor 다항식을 다루는 모든 

219
00:12:28,763 --> 00:12:31,880
텍스트나 강좌에서 볼 수 있는 것입니다. 

220
00:12:31,880 --> 00:12:35,139
그것을 볼 때 상수 항이 다항식의 값이 f의 

221
00:12:35,139 --> 00:12:38,660
값과 일치하도록 보장한다고 스스로 생각하십시오. 

222
00:12:39,200 --> 00:12:42,370
다음 항은 다항식의 기울기가 x가 0인 

223
00:12:42,370 --> 00:12:45,540
함수의 기울기와 일치하는지 확인합니다. 

224
00:12:46,360 --> 00:12:50,142
다음 항은 원하는 항 수에 따라 기울기가 변경되는 

225
00:12:50,142 --> 00:12:53,520
비율이 해당 지점에서 동일하도록 보장합니다. 

226
00:12:54,620 --> 00:12:58,197
더 많은 항을 선택할수록 근사값이 가까워지지만, 

227
00:12:58,197 --> 00:13:00,980
얻게 되는 다항식은 더 복잡해집니다. 

228
00:13:02,640 --> 00:13:06,218
그리고 상황을 더욱 일반화하기 위해 0이 아닌 

229
00:13:06,218 --> 00:13:09,934
입력(a라고 함)에 가까운 근사값을 얻으려면 이 

230
00:13:09,934 --> 00:13:13,788
다항식을 x 빼기 a의 거듭제곱으로 작성하고 f의 

231
00:13:13,788 --> 00:13:17,780
모든 도함수를 평가해야 합니다. 해당 입력에서 a. 

232
00:13:18,680 --> 00:13:23,120
이것이 테일러 다항식의 일반적인 모습입니다. 

233
00:13:24,000 --> 00:13:27,195
이 근사치가 원래 함수를 껴안는 경우 

234
00:13:27,195 --> 00:13:30,239
변경 값을 변경하면 더 높은 차수의 

235
00:13:30,239 --> 00:13:33,740
도함수가 원래 함수의 값과 동일해집니다. 

236
00:13:35,880 --> 00:13:38,890
이에 대한 가장 간단하고 의미 있는 예 중 하나는 

237
00:13:38,890 --> 00:13:41,900
입력 x가 0인 주변의 x에 대한 함수 e입니다. 

238
00:13:42,760 --> 00:13:45,494
도함수를 계산하는 것은 매우 훌륭합니다. 

239
00:13:45,494 --> 00:13:47,991
왜냐하면 e에 대한 x의 도함수는 그 

240
00:13:47,991 --> 00:13:50,726
자체이기 때문에 2차 도함수도 x에 대한 

241
00:13:50,726 --> 00:13:53,580
e이고 세 번째도 마찬가지이기 때문입니다. 

242
00:13:54,340 --> 00:13:57,398
따라서 x가 0인 지점에서 이들 모두는 1과 같습니다.

243
00:13:57,398 --> 00:13:57,500
 

244
00:13:57,500 --> 00:14:02,852
이것이 의미하는 바는 다항식 근사가 원하는 항 수에 

245
00:14:02,852 --> 00:14:07,835
따라 1 더하기 1 곱하기 x 더하기 1 나누기 

246
00:14:07,835 --> 00:14:12,634
2 곱하기 x 제곱 더하기 1 나누기 3 계승 

247
00:14:12,634 --> 00:14:17,432
곱하기 x 세제곱 등과 같은 모습이어야 한다는 

248
00:14:17,432 --> 00:14:18,540
것입니다. 

249
00:14:19,400 --> 00:14:22,700
이것은 e에서 x까지의 테일러 다항식입니다. 

250
00:14:26,380 --> 00:14:29,581
좋아, 그럼 그것을 기초로 미적분학의 모든 

251
00:14:29,581 --> 00:14:32,916
주제가 얼마나 연결되어 있는지 보여주기 위해 

252
00:14:32,916 --> 00:14:36,518
테일러 다항식의 2차 항을 이해하는 완전히 다른 

253
00:14:36,518 --> 00:14:40,520
재미있는 방법을 살펴보겠습니다. 하지만 기하학적으로. 

254
00:14:41,400 --> 00:14:43,970
이는 미적분학의 기본 정리와 관련이 있으며, 

255
00:14:43,970 --> 00:14:46,437
빠르게 복습이 필요한 경우 1장과 8장에서 

256
00:14:46,437 --> 00:14:47,260
설명했습니다. 

257
00:14:47,980 --> 00:14:50,482
해당 비디오에서 했던 것처럼 고정된 왼쪽 

258
00:14:50,482 --> 00:14:52,984
지점과 가변적인 오른쪽 지점 사이의 일부 

259
00:14:52,984 --> 00:14:56,140
그래프 아래 영역을 제공하는 함수를 고려해 보세요. 

260
00:14:56,980 --> 00:14:59,484
여기서 우리가 하려는 일은 이전처럼 그래프 

261
00:14:59,484 --> 00:15:01,988
자체에 대한 함수가 아니라 이 면적 함수를 

262
00:15:01,988 --> 00:15:04,180
어떻게 근사화할지 생각하는 것입니다. 

263
00:15:04,900 --> 00:15:07,311
그 영역에 초점을 맞추면 2차 

264
00:15:07,311 --> 00:15:09,440
용어가 튀어나오게 됩니다. 

265
00:15:10,440 --> 00:15:14,195
미적분학의 기본 정리는 이 그래프 자체가 

266
00:15:14,195 --> 00:15:18,767
면적 함수의 도함수를 나타낸다는 점을 기억하세요. 

267
00:15:18,767 --> 00:15:22,359
dx를 면적의 오른쪽 경계로 살짝 밀어 

268
00:15:22,359 --> 00:15:26,441
넣으면 그래프 높이에 dx를 곱한 것과 거의 

269
00:15:26,441 --> 00:15:30,360
같은 새로운 면적이 생기기 때문입니다. . 

270
00:15:30,360 --> 00:15:32,364
이 근사치는 dx의 선택이 점점 

271
00:15:32,364 --> 00:15:34,480
작아질수록 점점 더 정확해집니다. 

272
00:15:35,980 --> 00:15:40,064
그러나 이 영역 변화에 대해 더 정확하게 알고 싶다면 

273
00:15:40,064 --> 00:15:44,012
0에 접근하지 않는 x의 일부 변화가 주어지면 바로 

274
00:15:44,012 --> 00:15:47,960
여기에서 대략 삼각형인 이 부분을 고려해야 합니다. 

275
00:15:49,600 --> 00:15:52,139
시작 입력의 이름을 a로 지정하고 그 

276
00:15:52,139 --> 00:15:54,799
위에 있는 입력의 이름을 x로 지정하여 

277
00:15:54,799 --> 00:15:57,460
변경 사항이 xa가 되도록 하겠습니다. 

278
00:15:58,100 --> 00:16:02,365
그 작은 삼각형의 밑변은 변화 xa이고 

279
00:16:02,365 --> 00:16:07,600
높이는 그래프의 기울기에 xa를 곱한 값입니다. 

280
00:16:08,420 --> 00:16:12,532
이 그래프는 면적 함수의 도함수이므로 기울기는 

281
00:16:12,532 --> 00:16:17,120
입력 a에서 평가된 면적 함수의 2차 도함수입니다. 

282
00:16:18,440 --> 00:16:22,001
따라서 이 삼각형의 면적(1/2 밑수 x 

283
00:16:22,001 --> 00:16:25,873
높이)은 a에서 평가된 이 면적 함수의 2차 

284
00:16:25,873 --> 00:16:29,900
도함수에 xa 제곱을 곱한 값의 1/2입니다. 

285
00:16:30,960 --> 00:16:32,623
그리고 이것이 바로 Taylor 

286
00:16:32,623 --> 00:16:34,380
다항식에서 볼 수 있는 것입니다. 

287
00:16:34,880 --> 00:16:40,296
점 a에서 이 면적 함수에 대한 다양한 미분 정보를 

288
00:16:40,296 --> 00:16:45,900
알고 있다면 점 x의 면적을 어떻게 근사화하겠습니까? 

289
00:16:45,900 --> 00:16:49,541
a, f의 a까지의 모든 면적에 여기 

290
00:16:49,541 --> 00:16:53,529
이 직사각형의 면적(1차 도함수 xa)과 

291
00:16:53,529 --> 00:16:57,344
작은 삼각형의 면적(1/2 곱하기 2차 

292
00:16:57,344 --> 00:17:01,680
도함수 xa)을 더해야 합니다. xa 제곱. 

293
00:17:02,560 --> 00:17:04,257
저는 이것이 정말 마음에 듭니다. 

294
00:17:04,257 --> 00:17:06,937
비록 모든 내용이 조금 지저분해 보일지라도 각 용어는 

295
00:17:06,937 --> 00:17:09,438
도표에서 가리킬 수 있을 만큼 매우 명확한 의미를 

296
00:17:09,438 --> 00:17:10,599
갖고 있기 때문입니다. 

297
00:17:10,599 --> 00:17:13,843
원하신다면 여기서 끝이라고 부를 수 있으며, 

298
00:17:13,843 --> 00:17:16,957
이러한 Taylor 다항식을 사용한 근사를 

299
00:17:16,957 --> 00:17:20,460
위한 놀랍도록 유용한 도구를 갖게 될 것입니다. 

300
00:17:21,400 --> 00:17:23,720
그러나 당신이 수학자처럼 생각한다면, 

301
00:17:23,720 --> 00:17:26,813
당신이 물을 수 있는 한 가지 질문은 절대 멈추지 

302
00:17:26,813 --> 00:17:29,686
않고 무한히 많은 항을 추가하는 것이 타당한지 

303
00:17:29,686 --> 00:17:30,460
여부입니다. 

304
00:17:31,380 --> 00:17:34,032
수학에서는 무한합을 계열이라고 합니다. 

305
00:17:34,032 --> 00:17:37,286
따라서 유한한 개수의 항을 사용하는 이러한 근사 

306
00:17:37,286 --> 00:17:39,939
중 하나를 테일러 다항식이라고 하지만, 

307
00:17:39,939 --> 00:17:43,314
무한히 많은 항을 모두 추가하면 테일러 계열이라는 

308
00:17:43,314 --> 00:17:44,520
것이 생성됩니다. 

309
00:17:45,260 --> 00:17:48,606
무한한 계열이라는 아이디어에는 정말 조심해야 합니다. 

310
00:17:48,606 --> 00:17:51,060
실제로 무한히 많은 것을 추가하는 것은 

311
00:17:51,060 --> 00:17:53,737
의미가 없기 때문에 계산기의 더하기 버튼을 

312
00:17:53,737 --> 00:17:56,080
여러 번만 누를 수 있기 때문입니다. 

313
00:17:57,440 --> 00:18:01,540
그러나 각 단계에서 의미가 있는 용어를 점점 더 

314
00:18:01,540 --> 00:18:05,488
추가하면 특정 값에 점점 더 가까워지는 계열이 

315
00:18:05,488 --> 00:18:09,740
있는 경우 계열이 해당 값에 수렴한다고 말합니다. 

316
00:18:10,320 --> 00:18:14,427
또는 이러한 종류의 계열 수렴을 포함하도록 동등성의 

317
00:18:14,427 --> 00:18:17,968
정의를 확장하는 것이 편안하다면 계열 전체, 

318
00:18:17,968 --> 00:18:22,218
이 무한 합이 수렴되는 값과 같다고 말할 수 있습니다.

319
00:18:22,218 --> 00:18:22,360
 

320
00:18:23,460 --> 00:18:26,873
예를 들어 e와 x에 대한 Taylor 다항식을 

321
00:18:26,873 --> 00:18:30,160
보고 x가 1과 같은 일부 입력을 연결합니다. 

322
00:18:31,140 --> 00:18:35,596
다항식 항을 더 추가할수록 총합은 e 값에 

323
00:18:35,596 --> 00:18:39,681
점점 더 가까워집니다. 따라서 이 무한 

324
00:18:39,681 --> 00:18:43,766
급수는 숫자 e로 수렴한다고 말합니다. 

325
00:18:43,766 --> 00:18:48,780
또는 동일한 의미로 숫자 e와 같다고 말합니다. 

326
00:18:48,780 --> 00:18:53,802
실제로, x가 2인 것처럼 x의 다른 값을 대입하고 

327
00:18:53,802 --> 00:18:58,997
이 값에서 점점 더 높은 차수의 테일러 다항식의 값을 

328
00:18:58,997 --> 00:19:04,020
보면 e를 향해 x로 수렴할 것입니다. 전자 제곱. 

329
00:19:04,680 --> 00:19:08,556
이는 0에서 아무리 멀리 떨어져 있더라도 모든 입력에 

330
00:19:08,556 --> 00:19:12,432
적용됩니다. 비록 이러한 테일러 다항식이 입력 0에서 

331
00:19:12,432 --> 00:19:16,180
수집된 도함수 정보로만 구성되더라도 마찬가지입니다. 

332
00:19:18,270 --> 00:19:21,449
이와 같은 경우, 우리는 x에 대한 e가 모든 입력 

333
00:19:21,449 --> 00:19:24,629
x에서 자신의 Taylor 급수와 같다고 말하는데, 

334
00:19:24,629 --> 00:19:27,480
이는 일종의 마법 같은 일이 일어난 것입니다. 

335
00:19:28,380 --> 00:19:32,236
이는 사인 및 코사인과 같은 몇 가지 다른 중요한 

336
00:19:32,236 --> 00:19:36,368
함수에도 적용되지만 때로는 이러한 계열이 파생 정보를 

337
00:19:36,368 --> 00:19:40,500
사용하는 입력 주변의 특정 범위 내에서만 수렴됩니다. 

338
00:19:41,580 --> 00:19:45,242
입력 x가 1일 때 x의 자연 로그에 대한 

339
00:19:45,242 --> 00:19:48,752
Taylor 시리즈를 계산하면 x가 1일 

340
00:19:48,752 --> 00:19:52,567
때 x의 자연 로그의 고차 도함수를 평가하여 

341
00:19:52,567 --> 00:19:55,620
구축됩니다. 이는 다음과 같습니다. 

342
00:19:56,080 --> 00:19:59,030
0과 2 사이의 입력을 연결하면 이 

343
00:19:59,030 --> 00:20:01,980
계열의 항을 점점 더 추가하면 해당 

344
00:20:01,980 --> 00:20:05,520
입력의 자연 로그에 점점 더 가까워집니다. 

345
00:20:06,400 --> 00:20:08,771
하지만 그 범위를 벗어나면 이 

346
00:20:08,771 --> 00:20:11,700
시리즈는 조금이라도 접근하지 못한다. 

347
00:20:12,480 --> 00:20:14,960
더 많은 용어를 추가하면 합계가 

348
00:20:14,960 --> 00:20:17,440
격렬하게 앞뒤로 튕겨 나옵니다. 

349
00:20:18,100 --> 00:20:20,956
x의 자연 로그가 2보다 큰 입력에 대해 

350
00:20:20,956 --> 00:20:24,186
완벽하게 잘 정의되어 있음에도 불구하고 예상한 

351
00:20:24,186 --> 00:20:27,540
대로 해당 값의 자연 로그에 접근하지 않습니다. 

352
00:20:28,460 --> 00:20:31,689
어떤 의미에서 x가 1인 x에서 ln의 

353
00:20:31,689 --> 00:20:35,360
도함수 정보는 그렇게까지 전파되지 않습니다. 

354
00:20:36,580 --> 00:20:39,768
이와 같이 계열의 항을 더 추가해도 아무 것도 

355
00:20:39,768 --> 00:20:43,080
접근하지 않는 경우 계열이 발산한다고 말합니다. 

356
00:20:44,180 --> 00:20:48,024
그리고 가까운 입력과 이러한 다항식의 출력이 

357
00:20:48,024 --> 00:20:51,561
실제로 수렴하는 지점 사이의 최대 거리를 

358
00:20:51,561 --> 00:20:55,560
Taylor 시리즈의 수렴 반경이라고 합니다. 

359
00:20:56,840 --> 00:20:58,072
Taylor 시리즈에 대해 더 

360
00:20:58,072 --> 00:20:59,160
배울 것이 남아 있습니다. 

361
00:20:59,500 --> 00:21:01,886
많은 사용 사례, 이러한 근사의 오류에 대한 

362
00:21:01,886 --> 00:21:04,272
경계를 설정하기 위한 전술, 계열이 수렴하고 

363
00:21:04,272 --> 00:21:06,849
수렴하지 않는 시기를 이해하기 위한 테스트 등이 

364
00:21:06,849 --> 00:21:09,235
있습니다. 그리고 그 문제에 대해 전체적으로 

365
00:21:09,235 --> 00:21:11,812
미적분학에 대해 배울 것이 더 많이 남아 있으며 

366
00:21:11,812 --> 00:21:14,580
다루지 않은 수많은 주제도 있습니다. 이 시리즈로. 

367
00:21:15,320 --> 00:21:18,212
이 비디오의 목표는 스스로 더 많은 것을 

368
00:21:18,212 --> 00:21:21,104
배우고 잠재적으로 스스로 더 많은 주제를 

369
00:21:21,104 --> 00:21:23,996
재발견할 수 있는 자신감과 효율성을 느낄 

370
00:21:23,996 --> 00:21:27,140
수 있는 근본적인 직관을 제공하는 것입니다. 

371
00:21:28,060 --> 00:21:31,477
Taylor 시리즈의 경우, 더 많은 것을 

372
00:21:31,477 --> 00:21:34,467
탐색할 때 염두에 두어야 할 근본적인 

373
00:21:34,467 --> 00:21:37,885
직관은 단일 지점의 파생 정보를 해당 지점 

374
00:21:37,885 --> 00:21:41,160
주변의 근사 정보로 변환한다는 것입니다. 

375
00:21:43,919 --> 00:21:45,145
이 시리즈를 지지해주신 모든 

376
00:21:45,145 --> 00:21:46,600
분들께 다시 한 번 감사드립니다. 

377
00:21:47,300 --> 00:21:57,306
이와 같은 다음 시리즈는 확률적으로 나올 

378
00:21:57,306 --> 00:22:08,618
것이며 해당 비디오가 제작될 때 조기 액세스를 

379
00:22:08,618 --> 00:22:19,060
원한다면 어디로 가야할지 알 수 있습니다. 

