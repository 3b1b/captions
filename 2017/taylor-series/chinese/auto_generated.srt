1
00:00:14,640 --> 00:00:19,700
当我第一次了解泰勒级数时，我绝 对没有意识到它们有多么重要。

2
00:00:20,120 --> 00:00:24,650
但它们一次又一次地出现在数学、物理和许多工程领域，

3
00:00:24,650 --> 00:00:29,180
 因为它们是数学为逼近函数提供的最强大的工具之一。

4
00:00:30,000 --> 00:00:32,779
我想，作为一名学生，我第一次意识到这一 

5
00:00:32,779 --> 00:00:35,420
点并不是在微积分课上，而是在物理课上。

6
00:00:35,840 --> 00:00:39,865
我们正在研究一个与钟摆势能有关的问题，

7
00:00:39,865 --> 00:00:46,220
为 此你需要一个表达式来表达钟摆的重量高于其 最低点的高度，

8
00:00:46,220 --> 00:00:51,940
当你计算出来时，结果是与 1 减去摆锤与垂线夹角的余弦

9
00:00:51,940 --> 00:00:53,000
值成正比。

10
00:00:53,580 --> 00:00:57,354
我们试图解决的问题的细节超出了这里的重点，

11
00:00:57,354 --> 00:01:02,206
但我要 说的是，这个余弦函数使问题变得尴尬和难以处理，

12
00:01:02,206 --> 00:01:06,520
 并且使摆与其他振荡现象之间的关系变得不太清楚。

13
00:01:07,460 --> 00:01:13,472
但如果你将 θ 的余弦近似为 1 减去 2 的 θ 平方，

14
00:01:13,472 --> 00:01:15,960
那么一切就更容易实现了。

15
00:01:16,660 --> 00:01:19,873
如果你以前从未见过这样的东西，那么这样的 

16
00:01:19,873 --> 00:01:22,780
近似可能看起来完全超出了你的想象范围。

17
00:01:23,820 --> 00:01:27,684
如果你将 theta 的余弦与这个函数（1 减去 2 

18
00:01:27,684 --> 00:01:31,691
的 2 的平方）一 起绘制出来，它们看起来确实非常接近，

19
00:01:31,691 --> 00:01:34,553
至少对于接近 0 的小角度来说是这样 ，

20
00:01:34,553 --> 00:01:38,418
但是你会如何考虑进行这种近似，以及你会如何做找到那个特

21
00:01:38,418 --> 00:01:39,420
定的二次方程？

22
00:01:41,220 --> 00:01:45,230
泰勒级数的研究主要是采用非多项式函数并 

23
00:01:45,230 --> 00:01:48,840
找到在某些输入附近逼近它们的多项式。

24
00:01:48,840 --> 00:01:53,760
这里的动机是多项式往往比其他函数更容易处理。

25
00:01:54,340 --> 00:01:59,480
它们更容易计算，更容易求导 ，更容易集成，而且更友好。

26
00:02:00,680 --> 00:02:04,047
因此，让我们看一下 x 的余弦函数，

27
00:02:04,047 --> 00:02:08,536
并真正花点时间 思考一下如何构造 x 等于 0 

28
00:02:08,536 --> 00:02:10,220
附近的二次近似值。

29
00:02:10,940 --> 00:02:16,100
也就是说，在看起来像 c0 加 c1 乘以 x 加 c2 

30
00:02:16,100 --> 00:02:19,124
乘以 x 平方的所有可能多项式中，

31
00:02:19,124 --> 00:02:23,395
对于这些常数 c0、c1 和 c2 的某些选择，

32
00:02:23,395 --> 00:02:28,555
找到最接近 x 接近 x 等于 0 的 x 余弦的多项式，

33
00:02:28,555 --> 00:02:31,580
其图形与该点的余弦 x 图形类似。

34
00:02:31,580 --> 00:02:36,582
好吧，首先，在输入 0 处，x 的余弦值为 1，

35
00:02:36,582 --> 00:02:40,125
因此如果我们的近 似值有任何好处，

36
00:02:40,125 --> 00:02:44,920
那么在输入 x 等于 0 处它也应该等于 1。

37
00:02:45,820 --> 00:02:48,627
代入 0 只会得到 c0 的结果，

38
00:02:48,627 --> 00:02:50,940
因此我们可以将其设置为 1。

39
00:02:53,080 --> 00:02:56,819
这让我们可以自由选择常数 c1 和 c2 来使近 

40
00:02:56,819 --> 00:03:00,559
似值尽可能好，但我们对它们所做的任何事情都不会改 

41
00:03:00,559 --> 00:03:04,000
变多项式在 x 等于 0 时等于 1 的事实。

42
00:03:04,960 --> 00:03:10,093
如果我们的近似值与该感兴趣点的余弦 x 具有相同的切线斜率，

43
00:03:10,093 --> 00:03:11,120
那就太好了。

44
00:03:11,900 --> 00:03:16,700
否则，近似值偏离余弦图的速度会比需要的快得多。

45
00:03:18,200 --> 00:03:22,536
余弦的导数是负正弦，在 x 等于 0 时，

46
00:03:22,536 --> 00:03:25,840
即等于 0，意味着切线完全平坦。

47
00:03:26,960 --> 00:03:30,148
另一方面，当你计算二次方程的导数时，

48
00:03:30,148 --> 00:03:34,400
你会得 到 c1 加 2 乘以 c2 乘以 x。

49
00:03:35,320 --> 00:03:39,420
当 x 等于 0 时，这恰好等于我们为 c1 选择的值。

50
00:03:40,260 --> 00:03:43,398
所以这个常数 c1 完全控制了 

51
00:03:43,398 --> 00:03:46,340
x 等于 0 的近似值的导数。

52
00:03:47,120 --> 00:03:52,300
将其设置为 0 可确保我们的近似值在该点也具有平坦的切线。

53
00:03:53,000 --> 00:03:57,810
这让我们可以自由地更改 c2，但 x 等于 0 

54
00:03:57,810 --> 00:04:02,620
处的多项式的值和斜率被锁定以匹配余弦的值和斜率。

55
00:04:04,260 --> 00:04:10,502
最后要利用的是余弦图在 x 等于 0 上方向下弯曲的事实，

56
00:04:10,502 --> 00:04:12,440
它具有负二阶导数。

57
00:04:13,380 --> 00:04:17,313
或者换句话说，即使该点的变化率为 0 ，

58
00:04:17,313 --> 00:04:20,459
但在该点附近变化率本身正在减小。

59
00:04:21,279 --> 00:04:25,159
具体来说，由于它的导数是x的负正弦，

60
00:04:25,159 --> 00:04:30,546
所以它的二阶 导数是x的负余弦，并且当x等于0时，

61
00:04:30,546 --> 00:04:31,840
它等于负1。

62
00:04:33,080 --> 00:04:37,202
现在，以同样的方式，我们希望近似值的导数与 

63
00:04:37,202 --> 00:04:42,262
余弦的导数相匹配，以便它们的值不会不必要地 快速漂移，

64
00:04:42,262 --> 00:04:47,135
确保它们的二阶导数匹配将确保它们 以相同的速率弯曲，

65
00:04:47,135 --> 00:04:50,508
即我们的多项式的斜率偏离 余弦 x 

66
00:04:50,508 --> 00:04:53,320
的斜率的速度不会比需要的更快。

67
00:04:54,220 --> 00:04:58,516
提取我们之前得到的相同导数，然后求其导数，

68
00:04:58,516 --> 00:05:04,040
我们发 现该多项式的二阶导数恰好是 c2 的 2 倍。

69
00:05:04,960 --> 00:05:09,489
因此，为了确保 x 等于 0 时二阶导数也等于负 1，

70
00:05:09,489 --> 00:05:12,843
2 乘以 c2 必须为负 1，这意味着 

71
00:05:12,843 --> 00:05:15,360
c2 本身应该为负 1 一半。

72
00:05:15,360 --> 00:05:22,140
这给出了近似值 1 加 0x 减 1 x 平方的一半。

73
00:05:23,200 --> 00:05:27,225
如果您估计余弦为 0，则可以感受一下它有多好。

74
00:05:27,225 --> 00:05:31,600
1 使用这 个多项式，你会估计它是 0。995. 

75
00:05:32,520 --> 00:05:35,820
这就是 0 余弦的真实值。1. 

76
00:05:36,640 --> 00:05:38,440
这是一个非常好的近似！

77
00:05:40,300 --> 00:05:42,520
花点时间反思一下刚刚发生的事情。

78
00:05:42,520 --> 00:05:49,020
这个二次近似有 3 个自由度，即常数 c0、c1 和 c2。

79
00:05:49,520 --> 00:05:52,699
c0 负责确保近似值的输出与 x 

80
00:05:52,699 --> 00:05:56,440
等 于 0 处的余弦 x 的输出相匹配。

81
00:05:57,120 --> 00:06:08,240
c1 负责确保此时的导数匹配， c2 负责确保二阶导数匹配。

82
00:06:08,940 --> 00:06:13,971
这确保了当您远离 x 等于 0 时近似值的变 

83
00:06:13,971 --> 00:06:18,565
化方式以及变化率本身变化的方式与余弦 x 

84
00:06:18,565 --> 00:06:23,160
的行为尽可能相似（考虑到您拥有的控制量）。

85
00:06:24,080 --> 00:06:27,278
您可以通过在多项式中允许更多项并匹配 

86
00:06:27,278 --> 00:06:30,140
更高阶的导数来给自己更多的控制权。

87
00:06:30,840 --> 00:06:33,472
例如，假设您添加了项 c3 乘以 

88
00:06:33,472 --> 00:06:35,640
x3 以获得某个常数 c3。

89
00:06:35,640 --> 00:06:40,642
在这种情况下，如果对三次多项式求三阶导 数，

90
00:06:40,642 --> 00:06:44,280
任何二次或更小的值都会变为 0。

91
00:06:45,560 --> 00:06:49,403
至于最后一项，在幂律迭代 3 次之后，

92
00:06:49,403 --> 00:06:54,460
它看起 来像 1 乘以 2 乘以 3 乘以 c3。

93
00:06:56,460 --> 00:07:00,408
另一方面，余弦 x 的三阶导数得出正弦 x，

94
00:07:00,408 --> 00:07:03,280
在 x 等于 0 时它等于 0。

95
00:07:03,280 --> 00:07:08,420
因此，为了确保三阶导数匹配，常数 c3 应为 0。

96
00:07:08,420 --> 00:07:14,101
或者换句话说，1 minus 1 half x2 不仅 

97
00:07:14,101 --> 00:07:19,580
是余弦的最佳二次近似值，而且也是最佳可能的三次近似值。

98
00:07:21,280 --> 00:07:27,060
您可以通过添加四阶项（c4 乘以 x 到四项）来进行改进。

99
00:07:27,880 --> 00:07:33,320
余弦的四阶导数是它本身，在 x 等于 0 时等于 1。

100
00:07:34,300 --> 00:07:37,460
这个新项的多项式的四阶导数是多少？

101
00:07:38,620 --> 00:07:41,672
好吧，当你一遍又一遍地应用幂法则时，

102
00:07:41,672 --> 00:07:45,573
那些指数都在 前面向下跳跃，你最终会得到 1 

103
00:07:45,573 --> 00:07:49,134
乘以 2 乘以 3 乘以 4 乘以 c4，

104
00:07:49,134 --> 00:07:51,000
即 24 乘以 c4。

105
00:07:51,400 --> 00:07:55,765
因此，如果我们希望它与余弦 x 的四阶导数（即 1）相匹配，

106
00:07:55,765 --> 00:07:58,240
则 c4 必须为 24 分之 1。

107
00:07:58,240 --> 00:08:02,969
事实上，多项式 1 减 1 半 x2 加 1 

108
00:08:02,969 --> 00:08:07,287
24 乘以 x 的四次方 ，看起来像这样，

109
00:08:07,287 --> 00:08:12,840
是关于 x 等于 0 的余弦 x 的非常接近的近似值。

110
00:08:13,740 --> 00:08:17,786
例如，在任何涉及小角度余弦的物理问 题中，

111
00:08:17,786 --> 00:08:21,255
如果用这个多项式代替 x 的 余弦，

112
00:08:21,255 --> 00:08:23,760
预测结果几乎不会明显不同。

113
00:08:23,760 --> 00:08:29,760
现在退一步，注意这个过程中发生的一些事情。

114
00:08:30,520 --> 00:08:33,679
首先，阶乘项在这个过程中很自然地出现。

115
00:08:33,679 --> 00:08:39,447
当你对函数 x 求 n 个连续的导数到 n 时，

116
00:08:39,447 --> 00:08:46,417
让幂律继续向下级联，你剩下的就是 1 乘以 2 乘以 3，

117
00:08:46,417 --> 00:08:48,580
一直到 n 的值。

118
00:08:49,220 --> 00:08:51,810
因此，您不能简单地将多项式的系 

119
00:08:51,810 --> 00:08:54,240
数设置为等于您想要的任何导数。

120
00:08:54,680 --> 00:08:58,540
您必须除以适当的阶乘才能抵消这种影响。

121
00:08:59,400 --> 00:09:03,720
例如，第四个系数的 x 是余弦的四阶 导数 1，

122
00:09:03,720 --> 00:09:05,880
但除以 4 阶乘 24。

123
00:09:05,880 --> 00:09:10,437
第二件需要注意的事情是，添加新术语，

124
00:09:10,437 --> 00:09:17,780
例如 c4 乘以 x 到第四个，不会弄乱旧术语应该是什么，

125
00:09:17,780 --> 00:09:19,300
这非常重要。

126
00:09:20,100 --> 00:09:25,274
例如，该多项式在 x 等于 0 处的二阶导数仍然等于第 

127
00:09:25,274 --> 00:09:30,080
二个系数的 2 倍，即使在引入更高阶项之后也是如此。

128
00:09:30,960 --> 00:09:34,530
这是因为我们代入的 x 等于 0，

129
00:09:34,530 --> 00:09:39,780
因此任何 包含 x 的高阶项的二阶导数都会被冲走。

130
00:09:40,740 --> 00:09:45,319
对于任何其他导数也是如此，这就是为什么多项式在 

131
00:09:45,319 --> 00:09:50,280
x 等于 0 处的每个导数都由一个且仅一个系数控制。

132
00:09:52,640 --> 00:09:57,836
相反，如果您近似于 0 以外的输入，例如 x 等于 pi，

133
00:09:57,836 --> 00:10:02,136
为了获得相同的效果，您必须根据 x 减去 pi 

134
00:10:02,136 --> 00:10:05,720
的幂或您正在查看的任何输入来编写多项式。

135
00:10:06,320 --> 00:10:11,214
这使得它看起来明显更复杂，但我们所做的就是确保点 

136
00:10:11,214 --> 00:10:15,912
pi 看起来和行为都像 0，这样插入 x 等于 

137
00:10:15,912 --> 00:10:20,220
pi 将导致很多很好的取消，只留下一个常量。

138
00:10:22,380 --> 00:10:27,666
最后，在更哲学的层面上，请注意我们在这里所做 

139
00:10:27,666 --> 00:10:33,412
的基本上是获取有关函数在单个点的高阶导数的信 息，

140
00:10:33,412 --> 00:10:37,780
并将其转换为有关该点附近函数值的信息。

141
00:10:40,960 --> 00:10:44,120
您可以根据需要获取任意数量的余弦导数。

142
00:10:44,600 --> 00:10:47,727
它遵循这个很好的循环模式，x 的余弦，

143
00:10:47,727 --> 00:10:51,020
 x 的负正弦，负余弦，正弦，然后重复。

144
00:10:52,320 --> 00:10:56,203
在 x 等于 0 时，每一个的值都很容易计算，

145
00:10:56,203 --> 00:11:01,100
它给出 了这个循环模式 1, 0，负 1, 0，然后重复。

146
00:11:02,000 --> 00:11:07,342
了解所有这些高阶导数的值就可以获得有关 x 余弦的 

147
00:11:07,342 --> 00:11:12,480
大量信息，即使它只涉及插入一个数字，x 等于 0。

148
00:11:14,260 --> 00:11:18,970
因此，我们正在做的是利用这些信息来获得该输入的近似值，

149
00:11:18,970 --> 00:11:22,460
您可以通 过创建一个多项式来实现这一点，

150
00:11:22,460 --> 00:11:26,472
该多项式的高阶导数被设计为与余弦 的导数匹配，

151
00:11:26,472 --> 00:11:30,660
遵循相同的 1, 0, 负 1, 0、循环模式。

152
00:11:31,420 --> 00:11:36,232
为此，您只需使多项式的每个系数遵循相同的 模式，

153
00:11:36,232 --> 00:11:39,440
但必须将每个系数除以适当的阶乘。

154
00:11:40,120 --> 00:11:45,260
正如我之前提到的，这可以抵消 许多幂律应用程序的级联效应。

155
00:11:47,280 --> 00:11:50,170
通过在任意点停止此过程得到的多项 

156
00:11:50,170 --> 00:11:52,720
式称为 x 余弦的泰勒多项式。

157
00:11:52,720 --> 00:11:59,206
更一般地，因此更抽象地，如果我们处理除余弦之外的其他 函数，

158
00:11:59,206 --> 00:12:05,692
您将计算它的导数、二阶导数等等，获得您想要的尽 可能多的项，

159
00:12:05,692 --> 00:12:09,800
并且您将评估每一项其中 x 等于 0。

160
00:12:09,800 --> 00:12:15,876
对于多项式近似，每个 x 到 n 项的系数应为在 

161
00:12:15,876 --> 00:12:22,440
0 处计算的函数的 n 次导数的值，但除以 n 阶乘。

162
00:12:23,480 --> 00:12:27,913
您可能会在任何涉及泰勒多项式的文本或 

163
00:12:27,913 --> 00:12:31,880
课程中看到这个整个相当抽象的公式。

164
00:12:31,880 --> 00:12:38,660
当你看到它时，想想常数项确保 多项式的值与 f 的值匹配。

165
00:12:39,200 --> 00:12:42,568
下一项确保多项式的斜率与 x 等 

166
00:12:42,568 --> 00:12:45,540
于 0 处的函数的斜率相匹配。

167
00:12:46,360 --> 00:12:49,940
下一项确保斜率变化的速率在该点相同，

168
00:12:49,940 --> 00:12:53,520
 依此类推，具体取决于您想要的项数。

169
00:12:54,620 --> 00:12:57,703
您选择的项越多，近似值就越接近，

170
00:12:57,703 --> 00:13:00,980
 但代价是您得到的多项式会更复杂。

171
00:13:02,640 --> 00:13:07,745
为了让事情变得更一般化，如果你想近似接近 0 以外的某个 

172
00:13:07,745 --> 00:13:12,850
输入（我们称之为 a），你可以用 x 减 a 的幂来写这 

173
00:13:12,850 --> 00:13:17,780
个多项式，然后你可以计算 f 的所有导数在该输入处，a。

174
00:13:18,680 --> 00:13:23,120
这就是泰勒多项式最普遍的样子。

175
00:13:24,000 --> 00:13:29,357
更改 a 的值会导致该近似值接近原始函数 ，

176
00:13:29,357 --> 00:13:33,740
其高阶导数将等于原始函数的高阶导数。

177
00:13:35,880 --> 00:13:38,632
最简单、有意义的例子之一是函数 

178
00:13:38,632 --> 00:13:41,900
e 与输入 x 周围的 x 等于 0。

179
00:13:42,760 --> 00:13:47,912
计算导数非常好，尽可能好，因为 e 对 x 的导数是它本身，

180
00:13:47,912 --> 00:13:51,175
所以二阶导数也是 e 对 x 的导数，

181
00:13:51,175 --> 00:13:53,580
三阶导数也是如此，依此类推。

182
00:13:54,340 --> 00:13:57,500
所以当 x 等于 0 时，所有这些都等于 1。

183
00:13:57,500 --> 00:14:04,430
这意味着我们的多项式近似应该看起来像 1 加 1 乘以 

184
00:14:04,430 --> 00:14:11,114
x 加 1 除以 2 乘以 x 的平方加上 1 除以 

185
00:14:11,114 --> 00:14:18,540
3 阶乘乘以 x 的立方，依此类推，具体取决于您想要的项数。

186
00:14:19,400 --> 00:14:22,700
这些是 e 到 x 的泰勒多项式。

187
00:14:26,380 --> 00:14:31,217
好的，以此为基础，本着向您展示微积分的所有主题之间 

188
00:14:31,217 --> 00:14:35,124
的相互联系的精神，让我转向一些有趣的东西，

189
00:14:35,124 --> 00:14:40,520
一种完全 不同的方式来理解泰勒多项式的二阶项，但是几何上。

190
00:14:41,400 --> 00:14:44,641
它与微积分的基本定理有关，如果您需要快速回顾一 下，

191
00:14:44,641 --> 00:14:47,260
我在第 1 章和第 8 章中讨论过该定理。

192
00:14:47,980 --> 00:14:51,810
就像我们在这些视频中所做的那样，考虑一个函数，

193
00:14:51,810 --> 00:14:56,140
它 给出了固定左点和可变右点之间的某个图形下的面积。

194
00:14:56,980 --> 00:15:00,423
我们在这里要做的是考虑如何近似这个面积函数，

195
00:15:00,423 --> 00:15:04,180
而 不是像我们之前所做的那样计算图形本身的函数。

196
00:15:04,900 --> 00:15:09,440
专注于该区域将使二阶项弹出。

197
00:15:10,440 --> 00:15:18,142
请记住，微积分的基本定理是，该图本身表示面积函数的 导数，

198
00:15:18,142 --> 00:15:23,985
这是因为将 dx 稍微推到面积的右边界会给 

199
00:15:23,985 --> 00:15:30,360
出一个新的面积位，大约等于图的高度乘以 dx 。

200
00:15:30,360 --> 00:15:34,480
对于越来越小的 dx 选择，该近似值越来越准确。

201
00:15:35,980 --> 00:15:39,481
但是，如果您想更准确地了解面积的变化，

202
00:15:39,481 --> 00:15:43,536
考虑 到 x 的一些变化并不意味着接近 0，

203
00:15:43,536 --> 00:15:47,960
您就 必须考虑这里的这部分，它大约是一个三角形。

204
00:15:49,600 --> 00:15:55,598
我们将起始输入命名为 a，将其上方的微 移输入命名为 x，

205
00:15:55,598 --> 00:15:57,460
因此更改为 xa。

206
00:15:58,100 --> 00:16:03,003
该小三角形的底边是变化 xa， 

207
00:16:03,003 --> 00:16:07,600
其高度是图形的斜率乘以 xa。

208
00:16:08,420 --> 00:16:14,945
由于该图是面积函数的导数，因此其斜率是面 积函数的二阶导数，

209
00:16:14,945 --> 00:16:17,120
在输入 a 处计算。

210
00:16:18,440 --> 00:16:24,367
因此，该三角形的面积（底边的 1 倍乘以高度）是该面积函数 

211
00:16:24,367 --> 00:16:29,900
的二阶导数的 1 倍（以 a 计算）乘以 xa 的平方。

212
00:16:30,960 --> 00:16:34,380
这正是泰勒多项式所看到的。

213
00:16:34,880 --> 00:16:41,840
如果您知道该面积函数在 a 点的各种导 数信息，

214
00:16:41,840 --> 00:16:45,900
您将如何近似 x 点的面积？

215
00:16:45,900 --> 00:16:52,074
你必须包括a的所有面积，a的f，加上这里矩形的 面积，

216
00:16:52,074 --> 00:16:57,563
即一阶导数，乘以xa，加上那个小三角形 的面积，

217
00:16:57,563 --> 00:17:01,680
即二阶导数的1倍，乘以xa 的平方。

218
00:17:02,560 --> 00:17:06,055
我真的很喜欢这个，因为尽管写起来有点乱，

219
00:17:06,055 --> 00:17:10,599
但每个 术语都有非常明确的含义，你可以在图表上指出。

220
00:17:10,599 --> 00:17:15,754
如果您愿意，我们可以到此结束，您将拥有一个非 

221
00:17:15,754 --> 00:17:20,460
常有用的工具来使用这些泰勒多项式进行近似。

222
00:17:21,400 --> 00:17:26,753
但如果您像数学家一样思考，您可能会问的一个问 题是，

223
00:17:26,753 --> 00:17:30,460
永不停歇地添加无限多个项是否有意义。

224
00:17:31,380 --> 00:17:35,968
在数学中，无限和称为级数，因此即使这些具有 

225
00:17:35,968 --> 00:17:39,722
有限多项项的近似之一称为泰勒多项式，

226
00:17:39,722 --> 00:17:44,520
将所 有无限多项项相加即可得到所谓的泰勒级数。

227
00:17:45,260 --> 00:17:49,005
你必须非常小心无限级数的想法，因为 

228
00:17:49,005 --> 00:17:52,334
添加无限多的东西实际上没有意义，

229
00:17:52,334 --> 00:17:56,080
你 只能多次点击计算器上的加号按钮。

230
00:17:57,440 --> 00:18:01,735
但是，如果您有一个级数，其中添加越来越多的 

231
00:18:01,735 --> 00:18:07,006
项（这在每一步都有意义），使您越来越接近 某个特定值，

232
00:18:07,006 --> 00:18:09,740
则您可以说该级数收敛于该值。

233
00:18:10,320 --> 00:18:16,011
或者，如果您愿意扩展等式的定义以包括 这种级数收敛，

234
00:18:16,011 --> 00:18:22,360
您会说级数作为一个整体 ，即这个无限和，等于它收敛到的值。

235
00:18:23,460 --> 00:18:26,724
例如，查看 e 到 x 的泰勒多项式，

236
00:18:26,724 --> 00:18:30,160
 然后插入一些输入，例如 x 等于 1。

237
00:18:31,140 --> 00:18:38,467
当你添加越来越多的多项式项时，总和越来越接 近值 e，

238
00:18:38,467 --> 00:18:44,166
因此你可以说这个无穷级数收敛到数 字 e，

239
00:18:44,166 --> 00:18:48,780
或者说同样的事情，它等于数字 e。

240
00:18:48,780 --> 00:18:53,790
事实上，事实证明，如果你代入 x 的任何其他值，

241
00:18:53,790 --> 00:19:00,053
 例如 x 等于 2，并查看该值处的更高阶泰勒多项 式的值，

242
00:19:00,053 --> 00:19:04,020
它们将向 e 收敛到 x，即e 平方。

243
00:19:04,680 --> 00:19:09,578
对于任何输入都是如此，无论它距离 0 有多远，

244
00:19:09,578 --> 00:19:13,411
即使这些 泰勒多项式仅根据输入 0 

245
00:19:13,411 --> 00:19:16,180
处收集的导数信息构造而成。

246
00:19:18,270 --> 00:19:23,084
在这种情况下，我们说 x 的 e 等于所有输 

247
00:19:23,084 --> 00:19:27,480
入 x 处的泰勒级数，这是一件神奇的事情。

248
00:19:28,380 --> 00:19:33,853
尽管这对于其他几个重要函数（例如正弦和余 弦）也是如此，

249
00:19:33,853 --> 00:19:37,763
但有时这些级数仅在您正在使 用其导数信息

250
00:19:37,763 --> 00:19:40,500
的输入周围的一定范围内收敛。

251
00:19:41,580 --> 00:19:46,318
如果您计算出输入 x 等于 1 附近 x 的自然对数 

252
00:19:46,318 --> 00:19:51,056
的泰勒级数（这是通过评估 x 等于 1 处 x 的自 

253
00:19:51,056 --> 00:19:55,620
然对数的高阶导数而构建的），那么它看起来就是这样的。

254
00:19:56,080 --> 00:19:59,547
当您插入 0 到 2 之间的输入时，

255
00:19:59,547 --> 00:20:04,171
添加越来越多 的该级数项确实会让您越来越接近该输

256
00:20:04,171 --> 00:20:05,520
入的自然对数。

257
00:20:06,400 --> 00:20:11,700
但超出这个范围，即使只有一点点，该系列也无法达到任何目标。

258
00:20:12,480 --> 00:20:17,440
当你添加越来越多的条款时，总和会剧烈地来回波动。

259
00:20:18,100 --> 00:20:22,374
正如您可能期望的那样，它不会接近该值的自然对数，

260
00:20:22,374 --> 00:20:27,540
即使 x 的自然对数对于 2 以上的输入来说是完美定义的。

261
00:20:28,460 --> 00:20:31,630
从某种意义上说，x 等于 1 时 

262
00:20:31,630 --> 00:20:35,360
x 的 ln 的导数信息不会传播那么远。

263
00:20:36,580 --> 00:20:41,408
在这样的情况下，添加更多级数项并不 能解决任何问题，

264
00:20:41,408 --> 00:20:43,080
您可以说级数发散。

265
00:20:44,180 --> 00:20:52,037
您近似的输入与这些多项式的输 出实际收敛的点之间的最大距 

266
00:20:52,037 --> 00:20:55,560
离称为泰勒级数的收敛半径。

267
00:20:56,840 --> 00:20:59,160
关于泰勒级数还有更多需要了解。

268
00:20:59,500 --> 00:21:03,409
有许多用例、对这些近似值的误差设置界限的 

269
00:21:03,409 --> 00:21:08,808
策略、用于理解级数何时收敛和不收敛的测 试，就这一点而言，

270
00:21:08,808 --> 00:21:13,835
还有更多关于微积分的整 体知识和无数未触及的主题通过这

271
00:21:13,835 --> 00:21:14,580
个系列。

272
00:21:15,320 --> 00:21:19,119
这些视频的目标是为您提供基本的直觉，

273
00:21:19,119 --> 00:21:23,762
 让您在自己学习更多内容时感到自信和高 效，

274
00:21:23,762 --> 00:21:27,140
甚至有可能自己重新发现更多主题。

275
00:21:28,060 --> 00:21:34,980
就泰勒级数而言，当您探索更多内容时 要记住的基本直觉是，

276
00:21:34,980 --> 00:21:41,160
它们将单个点的 导数信息转换为该点周围的近似信息。

277
00:21:43,919 --> 00:21:46,600
再次感谢所有支持这个系列的人。

278
00:21:47,300 --> 00:21:59,399
下一个类似的系列将是关于概率的，

279
00:21:59,399 --> 00:22:19,060
如果您想在 这些视频制作时尽早访问，您知道该去哪里。

