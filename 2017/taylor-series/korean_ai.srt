1
00:00:00,000 --> 00:00:18,600
Taylor 시리즈에 대해 처음 배웠을 때 나는

2
00:00:18,600 --> 00:00:20,180
그것이 얼마나 중요한지 전혀 인식하지 못했습니다.

3
00:00:20,180 --> 00:00:24,800
그러나 이 개념은 수학, 물리학 및 다양한 공학 분야에서 계속해서 등장합니다. 왜냐하면

4
00:00:24,800 --> 00:00:30,080
수학이 함수를 근사화하기 위해 제공하는 가장 강력한 도구 중 하나이기 때문입니다.

5
00:00:30,080 --> 00:00:34,000
제가 학생이었을 때 처음으로 이런 일이 일어났던

6
00:00:34,000 --> 00:00:35,960
것은 미적분학 수업이 아니라 물리학 수업이었을 때였습니다.

7
00:00:35,960 --> 00:00:40,560
우리는 진자의 위치 에너지와 관련된 특정 문제를 연구하고

8
00:00:40,560 --> 00:00:45,000
있었는데 이를 위해서는 진자의 무게가 가장 낮은

9
00:00:45,000 --> 00:00:49,720
지점보다 얼마나 높은지에 대한 표현이 필요합니다. 1에서 진자와

10
00:00:49,720 --> 00:00:54,080
수직선 사이의 각도의 코사인을 뺀 값에 비례합니다.

11
00:00:54,080 --> 00:00:57,840
우리가 해결하려고 했던 문제의 구체적인 내용은 여기에서 다루지 않습니다. 하지만 제가

12
00:00:57,840 --> 00:01:03,360
말씀드리고 싶은 것은 이 코사인 함수가 문제를 어색하고 다루기 힘들게 만들고

13
00:01:03,360 --> 00:01:07,680
진자가 다른 진동 현상과 어떻게 관련되는지를 덜 명확하게 만들었다는 것입니다.

14
00:01:07,680 --> 00:01:14,440
그러나 세타의 코사인을 1 빼기 세타 제곱/2로 근사하면

15
00:01:14,440 --> 00:01:17,080
모든 것이 훨씬 더 쉽게 제자리에 놓이게 됩니다.

16
00:01:17,080 --> 00:01:21,360
이전에 이와 같은 것을 본 적이 없다면 이와

17
00:01:21,360 --> 00:01:23,900
같은 근사치는 완전히 의외인 것처럼 보일 수 있습니다.

18
00:01:23,900 --> 00:01:29,440
이 함수와 함께 세타의 코사인을 그래프로 그리면 1에서 세타의 제곱을

19
00:01:29,440 --> 00:01:34,720
2로 나눈 것인데, 적어도 0에 가까운 작은 각도에서는 서로 가까워

20
00:01:34,720 --> 00:01:41,360
보입니다. 하지만 이 근사치를 어떻게 생각하겠습니까? 그 특정한 이차식을 찾으세요?

21
00:01:41,360 --> 00:01:46,220
Taylor 시리즈에 대한 연구는 주로 비다항식 함수를 취하고 일부

22
00:01:46,220 --> 00:01:49,660
입력 근처에서 이를 근사화하는 다항식을 찾는 것에 관한 것입니다.

23
00:01:49,820 --> 00:01:53,940
여기서의 동기는 다항식이 다른 함수보다 다루기가 훨씬 쉬운 경향이 있다는 것입니다.

24
00:01:53,940 --> 00:01:58,420
계산하기 쉽고, 파생 상품을 사용하기 쉽고,

25
00:01:58,420 --> 00:02:00,700
통합하기 쉽고, 모든 면에서 더 친숙합니다.

26
00:02:00,700 --> 00:02:05,400
그럼 x의 코사인 함수를 살펴보고 x가 0인 근처에서 2차

27
00:02:05,400 --> 00:02:11,220
근사를 어떻게 구성할 수 있는지 잠시 생각해 보겠습니다.

28
00:02:11,220 --> 00:02:18,340
즉, c0 더하기 c1 곱하기 x 더하기 c2 곱하기 x 제곱처럼

29
00:02:18,340 --> 00:02:24,860
보이는 모든 가능한 다항식 중에서 이러한 상수 c0, c1 및 c2

30
00:02:24,860 --> 00:02:30,940
중 일부를 선택하여 x = 0 근처에서 x의 코사인과 가장 유사한

31
00:02:30,940 --> 00:02:33,500
것을 찾으세요. , 그 지점에서 코사인 x 그래프가 있는 그래프 종류입니다.

32
00:02:33,500 --> 00:02:40,020
음, 우선, 입력 0에서 x의 코사인 값은 1입니다. 따라서

33
00:02:40,020 --> 00:02:45,860
근사치가 조금이라도 좋으려면 입력 x에서 1과 같아야 합니다. 0입니다.

34
00:02:45,860 --> 00:02:53,260
0을 연결하면 c0이 무엇이든 결과가 나오므로 이를 1과 동일하게 설정할 수 있습니다.

35
00:02:53,260 --> 00:02:57,580
이를 통해 우리는 이 근사치를 최대한 좋게 만들기 위해 상수

36
00:02:57,580 --> 00:03:01,860
c1과 c2를 자유롭게 선택할 수 있지만, 이를 사용하여 수행하는 작업은

37
00:03:01,860 --> 00:03:05,580
다항식이 1과 같고 x가 0과 같다는 사실을 바꾸지 않습니다.

38
00:03:05,580 --> 00:03:10,220
우리의 근사치가 관심 지점에서 코사인 x와

39
00:03:10,220 --> 00:03:11,700
동일한 접선 기울기를 갖는다면 좋을 것입니다.

40
00:03:11,740 --> 00:03:16,740
그렇지 않으면 근사치가 필요한 것보다 훨씬 빠르게 코사인 그래프에서 멀어집니다.

41
00:03:18,300 --> 00:03:24,100
코사인의 도함수는 음의 사인이고 x는 0, 즉 0과

42
00:03:24,100 --> 00:03:27,500
같습니다. 이는 접선이 완벽하게 평평하다는 것을 의미합니다.

43
00:03:27,500 --> 00:03:33,260
반면에, 이차 방정식의 도함수를 계산하면 c1 더하기

44
00:03:33,260 --> 00:03:35,240
2 곱하기 c2 곱하기 x를 얻게 됩니다.

45
00:03:35,240 --> 00:03:40,280
x가 0일 때 이것은 우리가 c1에 대해 선택한 것과 같습니다.

46
00:03:40,280 --> 00:03:45,440
따라서 이 상수 c1은 x=0에 대한

47
00:03:45,440 --> 00:03:47,200
근사치의 도함수를 완벽하게 제어할 수 있습니다.

48
00:03:47,200 --> 00:03:53,480
0으로 설정하면 근사값도 이 지점에서 평평한 접선을 갖게 됩니다.

49
00:03:53,480 --> 00:03:58,760
이로 인해 c2를 자유롭게 변경할 수 있지만 x가 0인

50
00:03:58,760 --> 00:04:04,360
다항식의 값과 기울기는 코사인의 값과 일치하도록 고정되어 있습니다.

51
00:04:04,360 --> 00:04:08,940
마지막으로 활용해야 할 점은 코사인 그래프가 x가 0인 경우

52
00:04:08,980 --> 00:04:13,460
아래쪽으로 곡선을 그리며 음의 2차 도함수를 갖는다는 사실입니다.

53
00:04:13,460 --> 00:04:17,820
즉, 해당 지점에서는 변화율이 0이더라도 해당

54
00:04:17,820 --> 00:04:21,300
지점을 중심으로 변화율 자체가 감소하는 것입니다.

55
00:04:21,300 --> 00:04:26,980
구체적으로, 그 도함수는 x의 음의 사인이므로 2차 도함수는 x의

56
00:04:26,980 --> 00:04:33,140
음의 코사인이고 x가 0일 때 이는 음의 1과 같습니다.

57
00:04:33,140 --> 00:04:37,020
이제 우리는 근사치의 도함수를 코사인의 도함수와 일치시켜 그

58
00:04:37,100 --> 00:04:41,980
값이 불필요하게 빠르게 떨어져 나가지 않도록 하고,

59
00:04:41,980 --> 00:04:47,260
두 번째 도함수가 일치하는지 확인하여 동일한 비율로 곡선을

60
00:04:47,260 --> 00:04:52,260
그리도록 하기를 원했습니다. 다항식의 기울기는 필요한 것보다

61
00:04:52,260 --> 00:04:54,500
더 빨리 코사인 x의 기울기에서 벗어나지 않습니다.

62
00:04:54,500 --> 00:04:59,280
이전에 가졌던 것과 동일한 도함수를 꺼내서 그 도함수를 취하면 이

63
00:04:59,280 --> 00:05:05,020
다항식의 2차 도함수는 정확히 c2의 2배라는 것을 알 수 있습니다.

64
00:05:05,020 --> 00:05:10,620
따라서 이 2차 도함수가 x가 0일 때 음수 1과 같다는 것을 확인하려면 c2

65
00:05:10,620 --> 00:05:16,820
곱하기 2가 음수 1이 되어야 합니다. 즉, c2 자체는 음수 1/2이 되어야 합니다.

66
00:05:16,820 --> 00:05:23,180
그리고 이것은 대략 1 더하기 0x 빼기 1 반 x 제곱을 제공합니다.

67
00:05:23,180 --> 00:05:29,460
그리고 코사인을 0으로 추정하면 얼마나 좋은지 느껴보실 수 있습니다. 1 이

68
00:05:29,460 --> 00:05:32,860
다항식을 사용하면 0으로 추정됩니다. 995.

69
00:05:32,860 --> 00:05:36,020
그리고 이것이 코사인 0의 실제값입니다. 1.

70
00:05:36,020 --> 00:05:40,420
정말 좋은 근사치네요!

71
00:05:40,420 --> 00:05:43,000
잠시 시간을 내어 방금 일어난 일을 생각해 보세요.

72
00:05:43,000 --> 00:05:49,540
이 2차 근사, 상수 c0, c1 및 c2를 사용하면 3개의 자유도를 가집니다.

73
00:05:49,540 --> 00:05:54,520
c0은 근사치의 출력이 x가 0인 코사인

74
00:05:54,520 --> 00:05:57,180
x의 출력과 일치하는지 확인하는 역할을 담당했습니다.

75
00:05:57,180 --> 00:06:05,100
c1은 해당 시점에서 파생 상품이 일치하는지 확인하는 역할을 담당했고,

76
00:06:05,100 --> 00:06:09,420
c2는 2차 파생 상품이 일치하는지 확인하는 역할을 담당했습니다.

77
00:06:09,420 --> 00:06:14,820
이렇게 하면 x에서 멀어질 때 근사치가 0으로 변하는

78
00:06:14,820 --> 00:06:19,620
방식과 변화율 자체가 변하는 방식이 제어할 수 있는

79
00:06:19,620 --> 00:06:24,340
정도에 따라 코사인 x의 동작과 최대한 유사해집니다.

80
00:06:24,340 --> 00:06:28,860
다항식에 더 많은 항을 허용하고 고차 도함수를

81
00:06:28,860 --> 00:06:30,860
일치시켜 더 많은 제어권을 가질 수 있습니다.

82
00:06:30,860 --> 00:06:36,580
예를 들어, 어떤 상수 c3에 대해 c3 곱하기 x3이라는 항을 추가했다고 가정해 보겠습니다.

83
00:06:36,580 --> 00:06:42,860
이 경우, 3차 다항식의 3차 도함수를 취하면

84
00:06:42,860 --> 00:06:45,700
2차 이하의 모든 것은 0이 됩니다.

85
00:06:45,700 --> 00:06:52,420
마지막 항은 거듭제곱 법칙을 3번 반복한 후 1

86
00:06:52,420 --> 00:06:56,700
곱하기 2 곱하기 3 곱하기 c3 처럼 보입니다.

87
00:06:56,700 --> 00:07:01,860
반면에, 코사인 x의 3차 도함수는 사인 x로 나오며,

88
00:07:01,860 --> 00:07:04,020
이는 x가 0과 같을 때 0과 같습니다.

89
00:07:04,020 --> 00:07:09,920
따라서 3차 도함수가 일치하는지 확인하려면 상수 c3이 0이어야 합니다.

90
00:07:09,920 --> 00:07:15,940
즉, 1 빼기 1 반 x2는 코사인의 가능한 가장 좋은

91
00:07:15,940 --> 00:07:21,580
2차 근사일 뿐만 아니라 가장 좋은 3차 근사이기도 합니다.

92
00:07:21,580 --> 00:07:28,060
4차 항인 c4 곱하기 x를 4차 항에 추가하여 개선할 수 있습니다.

93
00:07:28,060 --> 00:07:34,340
코사인의 4차 도함수는 x가 0일 때 1과 같습니다.

94
00:07:34,340 --> 00:07:38,260
그리고 이 새로운 항을 사용한 다항식의 네 번째 도함수는 무엇입니까?

95
00:07:38,260 --> 00:07:43,160
음, 계속해서 거듭제곱 법칙을 적용하면 지수가 모두 앞쪽으로

96
00:07:43,160 --> 00:07:50,240
뛰어내리면서 결국 1 곱하기 2 곱하기 3 곱하기

97
00:07:50,240 --> 00:07:51,700
4 곱하기 c4, 즉 24 곱하기 c4가 됩니다.

98
00:07:51,700 --> 00:07:58,280
따라서 이것이 코사인 x의 4차 도함수인 1과

99
00:07:58,280 --> 00:07:59,280
일치하도록 하려면 c4는 24분의 1이어야 합니다.

100
00:07:59,280 --> 00:08:06,660
그리고 실제로, 다항식 1 빼기 1 반 x2 더하기 1 24 곱하기 x의

101
00:08:06,660 --> 00:08:13,820
4제곱은 이렇게 보입니다. 이는 x 주위의 코사인 x가 0과 매우 가까운 근사치입니다.

102
00:08:13,820 --> 00:08:18,540
예를 들어 작은 각도의 코사인과 관련된 모든 물리학

103
00:08:18,540 --> 00:08:23,520
문제에서 이 다항식을 x의 코사인으로 대체하면 예측이

104
00:08:23,520 --> 00:08:26,220
거의 눈에 띄지 않게 달라질 수 있습니다.

105
00:08:26,220 --> 00:08:30,620
이제 한 걸음 물러서서 이 프로세스에서 일어나는 몇 가지 일을 살펴보세요.

106
00:08:30,620 --> 00:08:35,060
우선, 이 과정에서 계승항이 매우 자연스럽게 등장합니다.

107
00:08:35,060 --> 00:08:39,500
함수 x에서 n까지 n개의 연속 도함수를 취하여 거듭제곱

108
00:08:39,500 --> 00:08:46,580
법칙이 계속 아래로 내려가도록 두면, 1 곱하기 2

109
00:08:46,580 --> 00:08:49,460
곱하기 3이 계속해서 계속해서 n이 될 때까지 계속됩니다.

110
00:08:49,460 --> 00:08:53,780
따라서 단순히 다항식의 계수를 원하는

111
00:08:53,780 --> 00:08:54,780
도함수와 동일하게 설정하지 않습니다.

112
00:08:54,780 --> 00:08:59,500
이 효과를 상쇄하려면 적절한 계승으로 나누어야 합니다.

113
00:08:59,500 --> 00:09:05,260
예를 들어, 네 번째 계수에 대한 x는 코사인

114
00:09:05,260 --> 00:09:09,540
1의 네 번째 도함수였지만 4 계승값 24로 나누어졌습니다.

115
00:09:09,540 --> 00:09:14,500
두 번째로 주목해야 할 점은 c4 곱하기 x의 4승과 같은 새로운

116
00:09:14,500 --> 00:09:20,140
항을 추가해도 이전 항이 엉망이 되지 않으며 이것이 정말 중요하다는 것입니다.

117
00:09:20,140 --> 00:09:25,740
예를 들어, x가 0인 이 다항식의 2차 도함수는 더 높은

118
00:09:25,740 --> 00:09:31,060
차수의 항을 도입한 후에도 여전히 두 번째 계수의 2배와 같습니다.

119
00:09:31,060 --> 00:09:35,860
그리고 그것은 우리가 x가 0과 같다고 대입하기 때문입니다. 따라서 모두

120
00:09:35,860 --> 00:09:40,820
x를 포함하는 고차 항의 2차 도함수는 그냥 사라져 버릴 것입니다.

121
00:09:40,820 --> 00:09:45,780
그리고 다른 도함수도 마찬가지입니다. 이것이 x가 0인 다항식의

122
00:09:45,780 --> 00:09:52,680
각 도함수가 계수 중 하나만으로 제어되는 이유입니다.

123
00:09:52,680 --> 00:09:58,220
대신 x가 pi와 같은 0이 아닌 입력 근처에 접근하는

124
00:09:58,220 --> 00:10:02,320
경우 동일한 효과를 얻으려면 x 빼기 pi의 거듭제곱 또는

125
00:10:02,320 --> 00:10:06,480
현재 보고 있는 입력의 관점에서 다항식을 작성해야 합니다.

126
00:10:06,480 --> 00:10:10,760
이로 인해 눈에 띄게 더 복잡해 보이지만 우리가 하는 일은

127
00:10:10,760 --> 00:10:17,140
점 pi가 0처럼 보이고 동작하는지 확인하는 것뿐입니다. 따라서 x와

128
00:10:17,140 --> 00:10:22,700
pi를 연결하면 하나의 상수만 남기는 멋진 취소가 많이 발생합니다.

129
00:10:22,700 --> 00:10:27,320
마지막으로 좀 더 철학적인 수준에서 우리가 여기서 하고 있는 일이

130
00:10:27,320 --> 00:10:33,740
어떻게 기본적으로 단일 지점에서 함수의 고차 도함수에 대한 정보를 취하고

131
00:10:33,740 --> 00:10:41,420
이를 해당 지점 근처의 함수 값에 대한 정보로 변환하는지 주목하세요.

132
00:10:41,420 --> 00:10:44,580
원하는만큼 코사인 파생 상품을 사용할 수 있습니다.

133
00:10:44,580 --> 00:10:49,460
이 멋진 순환 패턴, 즉 x의 코사인, x의

134
00:10:49,460 --> 00:10:52,380
음의 사인, 음의 코사인, 사인을 따르고 반복됩니다.

135
00:10:52,380 --> 00:10:56,900
그리고 이들 각각의 값은 x가 0일 때 계산하기 쉽습니다. 이

136
00:10:56,900 --> 00:11:02,060
순환 패턴은 1, 0, 음수 1, 0을 제공하고 반복됩니다.

137
00:11:02,060 --> 00:11:06,660
그리고 모든 고차 도함수 값을 아는 것은 x의 코사인에

138
00:11:06,660 --> 00:11:14,540
대한 많은 정보입니다. x는 0이라는 단일 숫자만 대입해도 됩니다.

139
00:11:14,540 --> 00:11:19,260
따라서 우리가 하는 일은 해당 정보를 활용하여 이 입력에 대한 근사치를

140
00:11:19,260 --> 00:11:24,740
구하는 것입니다. 그리고 동일한 1, 0, 음수 1을 따라 코사인과 일치하도록

141
00:11:24,740 --> 00:11:31,660
설계된 고차 도함수를 갖는 다항식을 생성하여 수행합니다. 0, 순환 패턴.

142
00:11:31,660 --> 00:11:36,900
그렇게 하려면 다항식의 각 계수가 동일한 패턴을 따르도록

143
00:11:36,900 --> 00:11:40,140
하고 각 계수를 적절한 계승으로 나누어야 합니다.

144
00:11:40,180 --> 00:11:44,660
앞서 언급한 것처럼 이는 많은 거듭제곱

145
00:11:44,660 --> 00:11:47,340
법칙 적용의 계단식 효과를 상쇄하는 것입니다.

146
00:11:47,340 --> 00:11:52,100
임의의 지점에서 이 과정을 중지하여 얻는 다항식을

147
00:11:52,100 --> 00:11:53,860
x의 코사인에 대한 테일러 다항식이라고 합니다.

148
00:11:53,860 --> 00:11:58,440
더 일반적으로, 따라서 더 추상적으로, 코사인 이외의 다른 함수를 다루는

149
00:11:58,440 --> 00:12:03,860
경우 해당 도함수, 2차 도함수 등을 계산하여 원하는 만큼 많은

150
00:12:03,860 --> 00:12:09,780
항을 얻은 다음 각 함수를 평가합니다. 그 중 x는 0입니다.

151
00:12:09,820 --> 00:12:16,660
다항식 근사의 경우, n 항에 대한 각 x의 계수는 0에서

152
00:12:16,660 --> 00:12:23,900
평가된 함수의 n차 도함수 값이어야 하지만 n 계승으로 나누어야 합니다.

153
00:12:23,900 --> 00:12:29,400
이 전체적으로 다소 추상적인 공식은 Taylor 다항식을 다루는

154
00:12:29,400 --> 00:12:31,940
모든 텍스트나 강좌에서 볼 수 있는 것입니다.

155
00:12:31,940 --> 00:12:36,420
그것을 볼 때 상수 항이 다항식의 값이

156
00:12:36,420 --> 00:12:39,200
f의 값과 일치하도록 보장한다고 스스로 생각하십시오.

157
00:12:39,280 --> 00:12:44,600
다음 항은 다항식의 기울기가 x가

158
00:12:44,600 --> 00:12:46,360
0인 함수의 기울기와 일치하는지 확인합니다.

159
00:12:46,360 --> 00:12:51,280
다음 항은 원하는 항 수에 따라 기울기가

160
00:12:51,280 --> 00:12:54,680
변경되는 비율이 해당 지점에서 동일하도록 보장합니다.

161
00:12:54,680 --> 00:12:58,400
더 많은 항을 선택할수록 근사값이 가까워지지만,

162
00:12:58,400 --> 00:13:02,720
얻게 되는 다항식은 더 복잡해집니다.

163
00:13:02,720 --> 00:13:07,040
그리고 상황을 더욱 일반화하기 위해 0이 아닌 입력(a라고 함)에

164
00:13:07,080 --> 00:13:13,080
가까운 근사값을 얻으려면 이 다항식을 x 빼기 a의 거듭제곱으로

165
00:13:13,080 --> 00:13:19,320
작성하고 f의 모든 도함수를 평가해야 합니다. 해당 입력에서 a.

166
00:13:19,320 --> 00:13:24,280
이것이 테일러 다항식의 일반적인 모습입니다.

167
00:13:24,280 --> 00:13:29,600
이 근사치가 원래 함수를 껴안는 경우 변경 값을 변경하면

168
00:13:29,600 --> 00:13:36,000
더 높은 차수의 도함수가 원래 함수의 값과 동일해집니다.

169
00:13:36,040 --> 00:13:40,560
이에 대한 가장 간단하고 의미 있는 예 중 하나는

170
00:13:40,560 --> 00:13:43,280
입력 x가 0인 주변의 x에 대한 함수 e입니다.

171
00:13:43,280 --> 00:13:47,520
도함수를 계산하는 것은 매우 훌륭합니다. 왜냐하면 e에 대한

172
00:13:47,520 --> 00:13:53,180
x의 도함수는 그 자체이기 때문에 2차 도함수도

173
00:13:53,180 --> 00:13:54,460
x에 대한 e이고 세 번째도 마찬가지이기 때문입니다.

174
00:13:54,460 --> 00:13:59,240
따라서 x가 0인 지점에서 이들 모두는 1과 같습니다.

175
00:13:59,240 --> 00:14:09,000
이것이 의미하는 바는 다항식 근사가 원하는 항 수에 따라 1 더하기 1

176
00:14:09,000 --> 00:14:17,480
곱하기 x 더하기 1 나누기 2 곱하기 x 제곱 더하기 1

177
00:14:17,480 --> 00:14:19,840
나누기 3 계승 곱하기 x 세제곱 등과 같은 모습이어야 한다는 것입니다.

178
00:14:19,840 --> 00:14:22,800
이것은 e에서 x까지의 테일러 다항식입니다.

179
00:14:22,800 --> 00:14:31,360
좋아, 그럼 그것을 기초로 미적분학의 모든 주제가 얼마나

180
00:14:31,360 --> 00:14:36,280
연결되어 있는지 보여주기 위해 테일러 다항식의 2차 항을

181
00:14:36,280 --> 00:14:41,420
이해하는 완전히 다른 재미있는 방법을 살펴보겠습니다. 하지만 기하학적으로.

182
00:14:41,420 --> 00:14:45,160
이는 미적분학의 기본 정리와 관련이 있으며, 빠르게

183
00:14:45,160 --> 00:14:48,200
복습이 필요한 경우 1장과 8장에서 설명했습니다.

184
00:14:48,200 --> 00:14:53,340
해당 비디오에서 했던 것처럼 고정된 왼쪽 지점과 가변적인 오른쪽 지점

185
00:14:53,340 --> 00:14:56,280
사이의 일부 그래프 아래 영역을 제공하는 함수를 고려해 보세요.

186
00:14:56,280 --> 00:15:01,480
여기서 우리가 하려는 일은 이전처럼 그래프 자체에 대한 함수가

187
00:15:01,480 --> 00:15:05,120
아니라 이 면적 함수를 어떻게 근사화할지 생각하는 것입니다.

188
00:15:05,120 --> 00:15:09,920
그 영역에 초점을 맞추면 2차 용어가 튀어나오게 됩니다.

189
00:15:09,920 --> 00:15:16,460
미적분학의 기본 정리는 이 그래프 자체가 면적 함수의 도함수를 나타낸다는 점을

190
00:15:16,460 --> 00:15:21,780
기억하세요. dx를 면적의 오른쪽 경계로 살짝 밀어 넣으면 그래프 높이에

191
00:15:21,780 --> 00:15:30,480
dx를 곱한 것과 거의 같은 새로운 면적이 생기기 때문입니다. .

192
00:15:30,480 --> 00:15:36,060
이 근사치는 dx의 선택이 점점 작아질수록 점점 더 정확해집니다.

193
00:15:36,060 --> 00:15:39,700
그러나 이 영역 변화에 대해 더 정확하게 알고

194
00:15:39,700 --> 00:15:44,900
싶다면 0에 접근하지 않는 x의 일부 변화가 주어지면

195
00:15:44,900 --> 00:15:48,860
바로 여기에서 대략 삼각형인 이 부분을 고려해야 합니다.

196
00:15:48,860 --> 00:15:56,460
시작 입력의 이름을 a로 지정하고 그 위에 있는 입력의

197
00:15:56,460 --> 00:15:58,620
이름을 x로 지정하여 변경 사항이 xa가 되도록 하겠습니다.

198
00:15:58,620 --> 00:16:06,140
그 작은 삼각형의 밑변은 변화 xa이고

199
00:16:06,140 --> 00:16:08,540
높이는 그래프의 기울기에 xa를 곱한 값입니다.

200
00:16:08,540 --> 00:16:14,140
이 그래프는 면적 함수의 도함수이므로 기울기는 입력

201
00:16:14,180 --> 00:16:18,580
a에서 평가된 면적 함수의 2차 도함수입니다.

202
00:16:18,580 --> 00:16:24,140
따라서 이 삼각형의 면적(1/2 밑수 x 높이)은 a에서 평가된 이

203
00:16:24,140 --> 00:16:31,300
면적 함수의 2차 도함수에 xa 제곱을 곱한 값의 1/2입니다.

204
00:16:31,300 --> 00:16:35,180
그리고 이것이 바로 Taylor 다항식에서 볼 수 있는 것입니다.

205
00:16:35,180 --> 00:16:40,920
점 a에서 이 면적 함수에 대한 다양한 미분

206
00:16:40,920 --> 00:16:46,040
정보를 알고 있다면 점 x의 면적을 어떻게 근사화하겠습니까?

207
00:16:46,040 --> 00:16:52,480
a, f의 a까지의 모든 면적에 여기 이 직사각형의

208
00:16:52,480 --> 00:16:58,240
면적(1차 도함수 xa)과 작은 삼각형의 면적(1/2 곱하기

209
00:16:58,240 --> 00:17:02,880
2차 도함수 xa)을 더해야 합니다. xa 제곱.

210
00:17:02,880 --> 00:17:07,220
저는 이것이 정말 마음에 듭니다. 비록 모든 내용이 조금 지저분해 보일지라도 각

211
00:17:07,220 --> 00:17:13,700
용어는 도표에서 가리킬 수 있을 만큼 매우 명확한 의미를 갖고 있기 때문입니다.

212
00:17:13,700 --> 00:17:17,720
원하신다면 여기서 끝이라고 부를 수 있으며, 이러한 Taylor 다항식을

213
00:17:17,720 --> 00:17:21,700
사용한 근사를 위한 놀랍도록 유용한 도구를 갖게 될 것입니다.

214
00:17:21,700 --> 00:17:26,460
그러나 당신이 수학자처럼 생각한다면, 당신이 물을 수 있는 한 가지 질문은

215
00:17:26,460 --> 00:17:31,740
절대 멈추지 않고 무한히 많은 항을 추가하는 것이 타당한지 여부입니다.

216
00:17:31,740 --> 00:17:37,040
수학에서는 무한합을 계열이라고 합니다. 따라서 유한한 개수의 항을 사용하는

217
00:17:37,040 --> 00:17:42,880
이러한 근사 중 하나를 테일러 다항식이라고 하지만, 무한히

218
00:17:42,880 --> 00:17:45,720
많은 항을 모두 추가하면 테일러 계열이라는 것이 생성됩니다.

219
00:17:45,720 --> 00:17:49,760
무한한 계열이라는 아이디어에는 정말 조심해야 합니다. 실제로 무한히

220
00:17:49,760 --> 00:17:54,400
많은 것을 추가하는 것은 의미가 없기 때문에 계산기의

221
00:17:54,400 --> 00:17:57,840
더하기 버튼을 여러 번만 누를 수 있기 때문입니다.

222
00:17:57,840 --> 00:18:01,800
그러나 각 단계에서 의미가 있는 용어를 점점 더

223
00:18:01,800 --> 00:18:08,000
추가하면 특정 값에 점점 더 가까워지는 계열이

224
00:18:08,000 --> 00:18:10,800
있는 경우 계열이 해당 값에 수렴한다고 말합니다.

225
00:18:10,800 --> 00:18:15,440
또는 이러한 종류의 계열 수렴을 포함하도록 동등성의 정의를

226
00:18:15,440 --> 00:18:21,240
확장하는 것이 편안하다면 계열 전체, 이 무한

227
00:18:21,240 --> 00:18:23,880
합이 수렴되는 값과 같다고 말할 수 있습니다.

228
00:18:23,880 --> 00:18:29,320
예를 들어 e와 x에 대한 Taylor 다항식을

229
00:18:29,320 --> 00:18:31,280
보고 x가 1과 같은 일부 입력을 연결합니다.

230
00:18:31,280 --> 00:18:37,060
다항식 항을 더 추가할수록 총합은 e 값에 점점 더

231
00:18:37,060 --> 00:18:44,000
가까워집니다. 따라서 이 무한 급수는 숫자 e로 수렴한다고

232
00:18:44,000 --> 00:18:48,080
말합니다. 또는 동일한 의미로 숫자 e와 같다고 말합니다.

233
00:18:48,080 --> 00:18:53,800
실제로, x가 2인 것처럼 x의 다른 값을 대입하고 이

234
00:18:53,800 --> 00:18:59,200
값에서 점점 더 높은 차수의 테일러 다항식의 값을

235
00:18:59,200 --> 00:19:05,320
보면 e를 향해 x로 수렴할 것입니다. 전자 제곱.

236
00:19:05,320 --> 00:19:11,340
이는 0에서 아무리 멀리 떨어져 있더라도 모든 입력에 적용됩니다. 비록

237
00:19:11,340 --> 00:19:18,540
이러한 테일러 다항식이 입력 0에서 수집된 도함수 정보로만 구성되더라도 마찬가지입니다.

238
00:19:18,540 --> 00:19:24,320
이와 같은 경우, 우리는 x에 대한 e가 모든 입력 x에서 자신의

239
00:19:24,320 --> 00:19:29,000
Taylor 급수와 같다고 말하는데, 이는 일종의 마법 같은 일이 일어난 것입니다.

240
00:19:29,000 --> 00:19:34,280
이는 사인 및 코사인과 같은 몇 가지 다른

241
00:19:34,280 --> 00:19:39,320
중요한 함수에도 적용되지만 때로는 이러한 계열이 파생 정보를

242
00:19:39,320 --> 00:19:41,640
사용하는 입력 주변의 특정 범위 내에서만 수렴됩니다.

243
00:19:41,640 --> 00:19:46,640
입력 x가 1일 때 x의 자연 로그에 대한

244
00:19:46,640 --> 00:19:52,380
Taylor 시리즈를 계산하면 x가 1일 때 x의 자연

245
00:19:52,380 --> 00:19:56,340
로그의 고차 도함수를 평가하여 구축됩니다. 이는 다음과 같습니다.

246
00:19:56,340 --> 00:20:01,500
0과 2 사이의 입력을 연결하면 이 계열의 항을 점점

247
00:20:01,500 --> 00:20:06,460
더 추가하면 해당 입력의 자연 로그에 점점 더 가까워집니다.

248
00:20:06,460 --> 00:20:12,580
하지만 그 범위를 벗어나면 이 시리즈는 조금이라도 접근하지 못한다.

249
00:20:12,580 --> 00:20:18,260
더 많은 용어를 추가하면 합계가 격렬하게 앞뒤로 튕겨 나옵니다.

250
00:20:18,260 --> 00:20:23,620
x의 자연 로그가 2보다 큰 입력에 대해 완벽하게 잘 정의되어

251
00:20:23,620 --> 00:20:28,640
있음에도 불구하고 예상한 대로 해당 값의 자연 로그에 접근하지 않습니다.

252
00:20:28,640 --> 00:20:34,520
어떤 의미에서 x가 1인 x에서 ln의

253
00:20:34,520 --> 00:20:36,740
도함수 정보는 그렇게까지 전파되지 않습니다.

254
00:20:36,740 --> 00:20:41,240
이와 같이 계열의 항을 더 추가해도 아무

255
00:20:41,240 --> 00:20:44,280
것도 접근하지 않는 경우 계열이 발산한다고 말합니다.

256
00:20:44,280 --> 00:20:48,640
그리고 가까운 입력과 이러한 다항식의 출력이

257
00:20:48,640 --> 00:20:54,380
실제로 수렴하는 지점 사이의 최대 거리를

258
00:20:54,380 --> 00:20:57,040
Taylor 시리즈의 수렴 반경이라고 합니다.

259
00:20:57,040 --> 00:20:59,620
Taylor 시리즈에 대해 더 배울 것이 남아 있습니다.

260
00:20:59,620 --> 00:21:04,740
많은 사용 사례, 이러한 근사의 오류에 대한 경계를 설정하기 위한 전술,

261
00:21:04,740 --> 00:21:09,540
계열이 수렴하고 수렴하지 않는 시기를 이해하기 위한 테스트 등이 있습니다.

262
00:21:09,540 --> 00:21:13,760
그리고 그 문제에 대해 전체적으로 미적분학에 대해 배울 것이 더

263
00:21:13,760 --> 00:21:15,620
많이 남아 있으며 다루지 않은 수많은 주제도 있습니다. 이 시리즈로.

264
00:21:15,620 --> 00:21:19,960
이 비디오의 목표는 스스로 더 많은 것을 배우고 잠재적으로

265
00:21:19,960 --> 00:21:25,440
스스로 더 많은 주제를 재발견할 수 있는 자신감과

266
00:21:25,440 --> 00:21:28,200
효율성을 느낄 수 있는 근본적인 직관을 제공하는 것입니다.

267
00:21:28,200 --> 00:21:33,080
Taylor 시리즈의 경우, 더 많은 것을 탐색할 때

268
00:21:33,080 --> 00:21:39,260
염두에 두어야 할 근본적인 직관은 단일 지점의 파생

269
00:21:39,260 --> 00:21:44,320
정보를 해당 지점 주변의 근사 정보로 변환한다는 것입니다.

270
00:21:44,320 --> 00:21:47,320
이 시리즈를 지지해주신 모든 분들께 다시 한 번 감사드립니다.

271
00:21:47,320 --> 00:21:51,540
이와 같은 다음 시리즈는 확률적으로 나올 것이며 해당 비디오가 제작될

272
00:21:51,540 --> 00:21:53,000
때 조기 액세스를 원한다면 어디로 가야할지 알 수 있습니다.

