[
 {
  "input": "Last video I laid out the structure of a neural network.",
  "translatedText": "В прошлом видео я изложил структуру нейронной сети.",
  "n_reviews": 0
 },
 {
  "input": "I'll give a quick recap here so that it's fresh in our minds, and then I have two main goals for this video.",
  "translatedText": "Я подведу здесь краткий обзор, чтобы он был свеж в нашей памяти, а также у меня есть две основные цели для этого видео.",
  "n_reviews": 0
 },
 {
  "input": "The first is to introduce the idea of gradient descent, which underlies not only how neural networks learn, but how a lot of other machine learning works as well.",
  "translatedText": "Первый — представить идею градиентного спуска, которая лежит в основе не только того, как обучаются нейронные сети, но и того, как работают многие другие методы машинного обучения.",
  "n_reviews": 0
 },
 {
  "input": "Then after that we'll dig in a little more into how this particular network performs, and what those hidden layers of neurons end up looking for.",
  "translatedText": "Затем мы немного углубимся в то, как работает эта конкретная сеть и что в конечном итоге ищут эти скрытые слои нейронов.",
  "n_reviews": 0
 },
 {
  "input": "As a reminder, our goal here is the classic example of handwritten digit recognition, the hello world of neural networks.",
  "translatedText": "Напоминаем, что наша цель — классический пример распознавания рукописных цифр, привет, мир нейронных сетей.",
  "n_reviews": 0
 },
 {
  "input": "These digits are rendered on a 28x28 pixel grid, each pixel with some grayscale value between 0 and 1.",
  "translatedText": "Эти цифры отображаются в сетке 28x28 пикселей, каждый пиксель имеет некоторое значение шкалы серого от 0 до 1.",
  "n_reviews": 0
 },
 {
  "input": "Those are what determine the activations of 784 neurons in the input layer of the network.",
  "translatedText": "Именно они определяют активацию 784 нейронов входного слоя сети.",
  "n_reviews": 0
 },
 {
  "input": "And then the activation for each neuron in the following layers is based on a weighted sum of all the activations in the previous layer, plus some special number called a bias.",
  "translatedText": "А затем активация каждого нейрона в следующих слоях основана на взвешенной сумме всех активаций в предыдущем слое плюс некое специальное число, называемое смещением.",
  "n_reviews": 0
 },
 {
  "input": "Then you compose that sum with some other function, like the sigmoid squishification, or a relu, the way I walked through last video.",
  "translatedText": "Затем вы составляете эту сумму с помощью какой-либо другой функции, например, сжимания сигмовидной кишки или повторения, как я рассматривал в прошлом видео.",
  "n_reviews": 0
 },
 {
  "input": "In total, given the somewhat arbitrary choice of two hidden layers with 16 neurons each, the network has about 13,000 weights and biases that we can adjust, and it's these values that determine what exactly the network actually does.",
  "translatedText": "В общей сложности, учитывая несколько произвольный выбор двух скрытых слоев по 16 нейронов каждый, сеть имеет около 13 000 весов и смещений, которые мы можем регулировать, и именно эти значения определяют, что именно делает сеть на самом деле.",
  "n_reviews": 0
 },
 {
  "input": "Then what we mean when we say that this network classifies a given digit is that the brightest of those 10 neurons in the final layer corresponds to that digit.",
  "translatedText": "Тогда, когда мы говорим, что эта сеть классифицирует данную цифру, мы имеем в виду, что самый яркий из этих 10 нейронов в последнем слое соответствует этой цифре.",
  "n_reviews": 0
 },
 {
  "input": "And remember, the motivation we had in mind here for the layered structure was that maybe the second layer could pick up on the edges, and the third layer might pick up on patterns like loops and lines, and the last one could just piece together those patterns to recognize digits.",
  "translatedText": "И помните, мотивация, которую мы имели в виду здесь для многослойной структуры, заключалась в том, что, возможно, второй слой мог бы улавливать края, а третий слой мог бы улавливать такие узоры, как петли и линии, а последний мог бы просто собрать воедино эти шаблоны для распознавания цифр.",
  "n_reviews": 0
 },
 {
  "input": "So here, we learn how the network learns.",
  "translatedText": "Итак, здесь мы узнаем, как учится сеть.",
  "n_reviews": 0
 },
 {
  "input": "What we want is an algorithm where you can show this network a whole bunch of training data, which comes in the form of a bunch of different images of handwritten digits, along with labels for what they're supposed to be, and it'll adjust those 13,000 weights and biases so as to improve its performance on the training data.",
  "translatedText": "Нам нужен алгоритм, с помощью которого вы сможете показать этой сети целый набор обучающих данных, которые представлены в виде набора различных изображений рукописных цифр вместе с метками того, какими они должны быть, и он будет отрегулируйте эти 13 000 весов и смещений, чтобы улучшить производительность на обучающих данных.",
  "n_reviews": 0
 },
 {
  "input": "Hopefully, this layered structure will mean that what it learns generalizes to images beyond that training data.",
  "translatedText": "Будем надеяться, что эта многоуровневая структура будет означать, что то, что он изучает, обобщается на изображения, выходящие за рамки этих обучающих данных.",
  "n_reviews": 0
 },
 {
  "input": "The way we test that is that after you train the network, you show it more labeled data that it's never seen before, and you see how accurately it classifies those new images.",
  "translatedText": "Мы тестируем это так: после обучения сети вы показываете ей больше размеченных данных, которых она никогда раньше не видела, и видите, насколько точно она классифицирует эти новые изображения.",
  "n_reviews": 0
 },
 {
  "input": "Fortunately for us, and what makes this such a common example to start with, is that the good people behind the MNIST database have put together a collection of tens of thousands of handwritten digit images, each one labeled with the numbers they're supposed to be.",
  "translatedText": "К счастью для нас, и что делает этот пример таким распространенным, так это то, что хорошие люди, стоящие за базой данных MNIST, собрали коллекцию из десятков тысяч рукописных изображений цифр, каждое из которых помечено числами, которые они должны были быть.",
  "n_reviews": 0
 },
 {
  "input": "And as provocative as it is to describe a machine as learning, once you see how it works, it feels a lot less like some crazy sci-fi premise, and a lot more like a calculus exercise.",
  "translatedText": "И как бы провокационно ни было описание машины как обучающейся, как только вы увидите, как она работает, это станет уже не похоже на какую-то сумасшедшую научно-фантастическую предпосылку, а скорее на упражнение по математическому анализу.",
  "n_reviews": 0
 },
 {
  "input": "I mean, basically it comes down to finding the minimum of a certain function.",
  "translatedText": "Я имею в виду, что по сути все сводится к поиску минимума определенной функции.",
  "n_reviews": 0
 },
 {
  "input": "Remember, conceptually, we're thinking of each neuron as being connected to all the neurons in the previous layer, and the weights in the weighted sum defining its activation are kind of like the strengths of those connections, and the bias is some indication of whether that neuron tends to be active or inactive.",
  "translatedText": "Помните, концептуально мы думаем о том, что каждый нейрон связан со всеми нейронами предыдущего слоя, а веса во взвешенной сумме, определяющей его активацию, являются чем-то вроде силы этих связей, а смещение является некоторым показателем имеет ли этот нейрон тенденцию быть активным или неактивным.",
  "n_reviews": 0
 },
 {
  "input": "And to start things off, we're just going to initialize all of those weights and biases totally randomly.",
  "translatedText": "И для начала мы просто собираемся инициализировать все эти веса и смещения совершенно случайным образом.",
  "n_reviews": 0
 },
 {
  "input": "Needless to say, this network is going to perform pretty horribly on a given training example, since it's just doing something random.",
  "translatedText": "Излишне говорить, что эта сеть будет работать ужасно на данном обучающем примере, поскольку она просто делает что-то случайное.",
  "n_reviews": 0
 },
 {
  "input": "For example, you feed in this image of a 3, and the output layer just looks like a mess.",
  "translatedText": "Например, вы вводите это изображение с цифрой 3, а выходной слой выглядит как беспорядок.",
  "n_reviews": 0
 },
 {
  "input": "So what you do is define a cost function, a way of telling the computer, no, bad computer, that output should have activations which are 0 for most neurons, but 1 for this neuron, what you gave me is utter trash.",
  "translatedText": "Итак, что вы делаете, так это определяете функцию стоимости, способ сообщить компьютеру (нет, плохой компьютер), что выходные данные должны иметь активации, которые равны 0 для большинства нейронов, но 1 для этого нейрона, то, что вы мне дали, — это полный мусор.",
  "n_reviews": 0
 },
 {
  "input": "To say that a little more mathematically, you add up the squares of the differences between each of those trash output activations and the value you want them to have, and this is what we'll call the cost of a single training example.",
  "translatedText": "Если выразить это немного более математически, вы складываете квадраты различий между каждой из этих мусорных выходных активаций и желаемым значением, которое вы хотите, чтобы они имели, и это то, что мы будем называть стоимостью одного обучающего примера.",
  "n_reviews": 0
 },
 {
  "input": "Notice this sum is small when the network confidently classifies the image correctly, but it's large when the network seems like it doesn't know what it's doing.",
  "translatedText": "Обратите внимание, что эта сумма мала, когда сеть уверенно классифицирует изображение правильно, но она велика, когда кажется, что сеть не знает, что делает.",
  "n_reviews": 0
 },
 {
  "input": "So then what you do is consider the average cost over all of the tens of thousands of training examples at your disposal.",
  "translatedText": "Итак, что вам нужно сделать, так это оценить среднюю стоимость по всем десяткам тысяч обучающих примеров, имеющихся в вашем распоряжении.",
  "n_reviews": 0
 },
 {
  "input": "This average cost is our measure for how lousy the network is, and how bad the computer should feel.",
  "translatedText": "Эта средняя стоимость является нашей мерой того, насколько паршивой является сеть и насколько плохим должен быть компьютер.",
  "n_reviews": 0
 },
 {
  "input": "And that's a complicated thing.",
  "translatedText": "И это сложная вещь.",
  "n_reviews": 0
 },
 {
  "input": "Remember how the network itself was basically a function, one that takes in 784 numbers as inputs, the pixel values, and spits out 10 numbers as its output, and in a sense it's parameterized by all these weights and biases?",
  "translatedText": "Помните, что сама сеть по сути представляла собой функцию, которая принимает на вход 784 числа, значения пикселей и выдает 10 чисел на выходе, и в каком-то смысле она параметризуется всеми этими весами и смещениями?",
  "n_reviews": 0
 },
 {
  "input": "Well the cost function is a layer of complexity on top of that.",
  "translatedText": "Ну, функция стоимости — это еще один уровень сложности.",
  "n_reviews": 0
 },
 {
  "input": "It takes as its input those 13,000 or so weights and biases, and spits out a single number describing how bad those weights and biases are, and the way it's defined depends on the network's behavior over all the tens of thousands of pieces of training data.",
  "translatedText": "В качестве входных данных он принимает примерно 13 000 весов и смещений и выдает одно число, описывающее, насколько плохи эти веса и смещения, а способ его определения зависит от поведения сети на всех десятках тысяч фрагментов обучающих данных.",
  "n_reviews": 0
 },
 {
  "input": "That's a lot to think about.",
  "translatedText": "Об этом нужно много думать.",
  "n_reviews": 0
 },
 {
  "input": "But just telling the computer what a crappy job it's doing isn't very helpful.",
  "translatedText": "Но просто сказать компьютеру, какую дрянную работу он делает, не очень-то поможет.",
  "n_reviews": 0
 },
 {
  "input": "You want to tell it how to change those weights and biases so that it gets better.",
  "translatedText": "Вы хотите рассказать ему, как изменить эти веса и предубеждения, чтобы он стал лучше.",
  "n_reviews": 0
 },
 {
  "input": "To make it easier, rather than struggling to imagine a function with 13,000 inputs, just imagine a simple function that has one number as an input and one number as an output.",
  "translatedText": "Чтобы упростить задачу, вместо того, чтобы изо всех сил пытаться представить функцию с 13 000 входными параметрами, просто представьте себе простую функцию, которая имеет одно число в качестве входных данных и одно число в качестве выходных данных.",
  "n_reviews": 0
 },
 {
  "input": "How do you find an input that minimizes the value of this function?",
  "translatedText": "Как найти входные данные, которые минимизируют значение этой функции?",
  "n_reviews": 0
 },
 {
  "input": "Calculus students will know that you can sometimes figure out that minimum explicitly, but that's not always feasible for really complicated functions, certainly not in the 13,000 input version of this situation for our crazy complicated neural network cost function.",
  "translatedText": "Студенты, изучающие математический анализ, знают, что иногда можно вычислить этот минимум явно, но это не всегда осуществимо для действительно сложных функций, особенно в версии этой ситуации с 13 000 входов для нашей безумно сложной функции стоимости нейронной сети.",
  "n_reviews": 0
 },
 {
  "input": "A more flexible tactic is to start at any input, and figure out which direction you should step to make that output lower.",
  "translatedText": "Более гибкая тактика — начать с любого входного сигнала и выяснить, в каком направлении вам следует двигаться, чтобы снизить этот выходной результат.",
  "n_reviews": 0
 },
 {
  "input": "Specifically, if you can figure out the slope of the function where you are, then shift to the left if that slope is positive, and shift the input to the right if that slope is negative.",
  "translatedText": "В частности, если вы можете определить наклон функции в том месте, где вы находитесь, затем сдвиньте влево, если этот наклон положителен, и сдвиньте входные данные вправо, если этот наклон отрицательный.",
  "n_reviews": 0
 },
 {
  "input": "If you do this repeatedly, at each point checking the new slope and taking the appropriate step, you're going to approach some local minimum of the function.",
  "translatedText": "Если вы будете делать это неоднократно, в каждой точке проверяя новый наклон и делая соответствующий шаг, вы приблизитесь к некоторому локальному минимуму функции.",
  "n_reviews": 0
 },
 {
  "input": "The image you might have in mind here is a ball rolling down a hill.",
  "translatedText": "Вы, возможно, имеете в виду образ мяча, катящегося с холма.",
  "n_reviews": 0
 },
 {
  "input": "Notice, even for this really simplified single input function, there are many possible valleys that you might land in, depending on which random input you start at, and there's no guarantee that the local minimum you land in is going to be the smallest possible value of the cost function.",
  "translatedText": "Обратите внимание: даже для этой действительно упрощенной функции с одним входом существует множество возможных впадин, в которые вы можете попасть, в зависимости от того, с какого случайного входа вы начинаете, и нет никакой гарантии, что локальный минимум, в который вы попадете, будет наименьшим возможным значением. функции стоимости.",
  "n_reviews": 0
 },
 {
  "input": "That will carry over to our neural network case as well.",
  "translatedText": "Это применимо и к нашему случаю с нейронной сетью.",
  "n_reviews": 0
 },
 {
  "input": "I also want you to notice how if you make your step sizes proportional to the slope, then when the slope is flattening out towards the minimum, your steps get smaller and smaller, and that helps you from overshooting.",
  "translatedText": "Я также хочу, чтобы вы заметили, что если вы сделаете размер шага пропорциональным наклону, то, когда уклон выравнивается к минимуму, ваши шаги будут становиться все меньше и меньше, и это поможет вам не промахнуться.",
  "n_reviews": 0
 },
 {
  "input": "Bumping up the complexity a bit, imagine instead a function with two inputs and one output.",
  "translatedText": "Немного усложняя, представьте себе функцию с двумя входами и одним выходом.",
  "n_reviews": 0
 },
 {
  "input": "You might think of the input space as the xy-plane, and the cost function as being graphed as a surface above it.",
  "translatedText": "Вы можете думать о входном пространстве как о плоскости xy, а о функции стоимости как о графической поверхности над ней.",
  "n_reviews": 0
 },
 {
  "input": "Instead of asking about the slope of the function, you have to ask which direction you should step in this input space so as to decrease the output of the function most quickly.",
  "translatedText": "Вместо того, чтобы спрашивать о наклоне функции, вы должны спросить, в каком направлении вам следует двигаться в этом входном пространстве, чтобы быстрее всего уменьшить выходной результат функции.",
  "n_reviews": 0
 },
 {
  "input": "In other words, what's the downhill direction?",
  "translatedText": "Другими словами, каково направление спуска?",
  "n_reviews": 0
 },
 {
  "input": "Again, it's helpful to think of a ball rolling down that hill.",
  "translatedText": "Опять же, полезно представить себе мяч, катящийся с холма.",
  "n_reviews": 0
 },
 {
  "input": "Those of you familiar with multivariable calculus will know that the gradient of a function gives you the direction of steepest ascent, which direction should you step to increase the function most quickly.",
  "translatedText": "Те из вас, кто знаком с исчислением многих переменных, знают, что градиент функции указывает направление наибольшего подъема, в каком направлении вам следует сделать шаг, чтобы увеличить функцию быстрее всего.",
  "n_reviews": 0
 },
 {
  "input": "Naturally enough, taking the negative of that gradient gives you the direction to step that decreases the function most quickly.",
  "translatedText": "Вполне естественно, что отрицание этого градиента дает вам направление шага, при котором функция уменьшается быстрее всего.",
  "n_reviews": 0
 },
 {
  "input": "Even more than that, the length of this gradient vector is an indication for just how steep that steepest slope is.",
  "translatedText": "Более того, длина этого вектора градиента является показателем того, насколько крутым является самый крутой склон.",
  "n_reviews": 0
 },
 {
  "input": "If you're unfamiliar with multivariable calculus and want to learn more, check out some of the work I did for Khan Academy on the topic.",
  "translatedText": "Если вы не знакомы с многомерным исчислением и хотите узнать больше, ознакомьтесь с некоторыми работами, которые я сделал для Академии Хана по этой теме.",
  "n_reviews": 0
 },
 {
  "input": "Honestly though, all that matters for you and me right now is that in principle there exists a way to compute this vector, this vector that tells you what the downhill direction is and how steep it is.",
  "translatedText": "Однако, честно говоря, для нас с вами сейчас важно только то, что в принципе существует способ вычислить этот вектор, этот вектор, который скажет вам, каково направление спуска и насколько он крутой.",
  "n_reviews": 0
 },
 {
  "input": "You'll be okay if that's all you know and you're not rock solid on the details.",
  "translatedText": "Все будет в порядке, если это все, что вы знаете, и вы не очень уверены в деталях.",
  "n_reviews": 0
 },
 {
  "input": "If you can get that, the algorithm for minimizing the function is to compute this gradient direction, then take a small step downhill, and repeat that over and over.",
  "translatedText": "Если вы можете это понять, алгоритм минимизации функции состоит в том, чтобы вычислить это направление градиента, затем сделать небольшой шаг вниз и повторять это снова и снова.",
  "n_reviews": 0
 },
 {
  "input": "It's the same basic idea for a function that has 13,000 inputs instead of 2 inputs.",
  "translatedText": "Это та же основная идея для функции, которая имеет 13 000 входов вместо двух.",
  "n_reviews": 0
 },
 {
  "input": "Imagine organizing all 13,000 weights and biases of our network into a giant column vector.",
  "translatedText": "Представьте себе организацию всех 13 000 весов и смещений нашей сети в гигантский вектор-столбец.",
  "n_reviews": 0
 },
 {
  "input": "The negative gradient of the cost function is just a vector, it's some direction inside this insanely huge input space that tells you which nudges to all of those numbers is going to cause the most rapid decrease to the cost function.",
  "translatedText": "Отрицательный градиент функции стоимости — это всего лишь вектор, это некоторое направление внутри этого безумно огромного входного пространства, которое подсказывает вам, какое подталкивание всех этих чисел приведет к наиболее быстрому уменьшению функции стоимости.",
  "n_reviews": 0
 },
 {
  "input": "And of course, with our specially designed cost function, changing the weights and biases to decrease it means making the output of the network on each piece of training data look less like a random array of 10 values, and more like an actual decision we want it to make.",
  "translatedText": "И, конечно же, с помощью нашей специально разработанной функции стоимости изменение весов и смещений для уменьшения означает, что выходные данные сети для каждого фрагмента обучающих данных будут выглядеть не как случайный массив из 10 значений, а больше как фактическое решение, которое мы хотим это сделать.",
  "n_reviews": 0
 },
 {
  "input": "It's important to remember, this cost function involves an average over all of the training data, so if you minimize it, it means it's a better performance on all of those samples.",
  "translatedText": "Важно помнить, что эта функция стоимости включает в себя среднее значение по всем обучающим данным, поэтому, если вы ее минимизируете, это означает, что она будет иметь лучшую производительность на всех этих выборках.",
  "n_reviews": 0
 },
 {
  "input": "The algorithm for computing this gradient efficiently, which is effectively the heart of how a neural network learns, is called backpropagation, and it's what I'm going to be talking about next video.",
  "translatedText": "Алгоритм эффективного расчета этого градиента, который, по сути, является основой обучения нейронной сети, называется обратным распространением ошибки, и именно об этом я собираюсь поговорить в следующем видео.",
  "n_reviews": 0
 },
 {
  "input": "There, I really want to take the time to walk through what exactly happens to each weight and bias for a given piece of training data, trying to give an intuitive feel for what's happening beyond the pile of relevant calculus and formulas.",
  "translatedText": "Здесь я действительно хочу потратить время на то, чтобы разобраться, что именно происходит с каждым весом и смещением для данного фрагмента тренировочных данных, пытаясь дать интуитивное представление о том, что происходит за пределами кучи соответствующих расчетов и формул.",
  "n_reviews": 0
 },
 {
  "input": "Right here, right now, the main thing I want you to know, independent of implementation details, is that what we mean when we talk about a network learning is that it's just minimizing a cost function.",
  "translatedText": "Прямо здесь и сейчас главное, что я хочу, чтобы вы знали, независимо от деталей реализации, это то, что, когда мы говорим о сетевом обучении, мы имеем в виду, что оно просто минимизирует функцию стоимости.",
  "n_reviews": 0
 },
 {
  "input": "And notice, one consequence of that is that it's important for this cost function to have a nice smooth output, so that we can find a local minimum by taking little steps downhill.",
  "translatedText": "И обратите внимание: одним из последствий этого является то, что для этой функции стоимости важно иметь хороший плавный выходной сигнал, чтобы мы могли найти локальный минимум, делая небольшие шаги вниз.",
  "n_reviews": 0
 },
 {
  "input": "This is why, by the way, artificial neurons have continuously ranging activations, rather than simply being active or inactive in a binary way, the way biological neurons are.",
  "translatedText": "Вот почему, кстати, искусственные нейроны имеют постоянно меняющуюся активацию, а не просто бинарно активны или неактивны, как биологические нейроны.",
  "n_reviews": 0
 },
 {
  "input": "This process of repeatedly nudging an input of a function by some multiple of the negative gradient is called gradient descent.",
  "translatedText": "Этот процесс многократного подталкивания входных данных функции на величину, кратную отрицательному градиенту, называется градиентным спуском.",
  "n_reviews": 0
 },
 {
  "input": "It's a way to converge towards some local minimum of a cost function, basically a valley in this graph.",
  "translatedText": "Это способ приблизиться к некоторому локальному минимуму функции стоимости, по сути, к впадине на этом графике.",
  "n_reviews": 0
 },
 {
  "input": "I'm still showing the picture of a function with two inputs, of course, because nudges in a 13,000 dimensional input space are a little hard to wrap your mind around, but there is a nice non-spatial way to think about this.",
  "translatedText": "Конечно, я все еще показываю изображение функции с двумя входами, потому что подталкивания в 13 000-мерном входном пространстве немного сложно усвоить, но есть хороший непространственный способ подумать об этом.",
  "n_reviews": 0
 },
 {
  "input": "Each component of the negative gradient tells us two things.",
  "translatedText": "Каждый компонент отрицательного градиента говорит нам о двух вещах.",
  "n_reviews": 0
 },
 {
  "input": "The sign, of course, tells us whether the corresponding component of the input vector should be nudged up or down.",
  "translatedText": "Знак, конечно, говорит нам, следует ли сдвинуть соответствующий компонент входного вектора вверх или вниз.",
  "n_reviews": 0
 },
 {
  "input": "But importantly, the relative magnitudes of all these components kind of tells you which changes matter more.",
  "translatedText": "Но что немаловажно, относительные величины всех этих компонентов подскажут вам, какие изменения имеют большее значение.",
  "n_reviews": 0
 },
 {
  "input": "You see, in our network, an adjustment to one of the weights might have a much greater impact on the cost function than the adjustment to some other weight.",
  "translatedText": "Видите ли, в нашей сети корректировка одного из весов может оказать гораздо большее влияние на функцию стоимости, чем корректировка какого-либо другого веса.",
  "n_reviews": 0
 },
 {
  "input": "Some of these connections just matter more for our training data.",
  "translatedText": "Некоторые из этих связей имеют большее значение для наших тренировочных данных.",
  "n_reviews": 0
 },
 {
  "input": "So a way you can think about this gradient vector of our mind-warpingly massive cost function is that it encodes the relative importance of each weight and bias, that is, which of these changes is going to carry the most bang for your buck.",
  "translatedText": "Таким образом, вы можете думать об этом градиентном векторе нашей ошеломляюще массивной функции затрат так, что он кодирует относительную важность каждого веса и смещения, то есть какое из этих изменений принесет наибольшую отдачу от вложенных средств.",
  "n_reviews": 0
 },
 {
  "input": "This really is just another way of thinking about direction.",
  "translatedText": "На самом деле это просто еще один способ мышления о направлении.",
  "n_reviews": 0
 },
 {
  "input": "To take a simpler example, if you have some function with two variables as an input, and you compute that its gradient at some particular point comes out as 3,1, then on the one hand you can interpret that as saying that when you're standing at that input, moving along this direction increases the function most quickly, that when you graph the function above the plane of input points, that vector is what's giving you the straight uphill direction.",
  "translatedText": "Возьмем более простой пример: если у вас есть некоторая функция с двумя переменными в качестве входных данных, и вы вычисляете, что ее градиент в какой-то конкретной точке равен 3,1, то, с одной стороны, вы можете интерпретировать это как утверждение, что когда вы Если вы стоите на этом входе, движение в этом направлении быстрее всего увеличивает функцию: когда вы строите график функции над плоскостью входных точек, этот вектор дает вам прямое направление в гору.",
  "n_reviews": 0
 },
 {
  "input": "But another way to read that is to say that changes to this first variable have 3 times the importance as changes to the second variable, that at least in the neighborhood of the relevant input, nudging the x-value carries a lot more bang for your buck.",
  "translatedText": "Но другой способ понять это — сказать, что изменения в этой первой переменной имеют в 3 раза большую важность, чем изменения во второй переменной, что, по крайней мере, вблизи соответствующего входного значения, подталкивание значения x несет гораздо большую пользу для вашего бакс.",
  "n_reviews": 0
 },
 {
  "input": "Let's zoom out and sum up where we are so far.",
  "translatedText": "Давайте уменьшим масштаб и подведем итоги того, где мы находимся на данный момент.",
  "n_reviews": 0
 },
 {
  "input": "The network itself is this function with 784 inputs and 10 outputs, defined in terms of all these weighted sums.",
  "translatedText": "Сама сеть представляет собой эту функцию с 784 входами и 10 выходами, определяемыми через все эти взвешенные суммы.",
  "n_reviews": 0
 },
 {
  "input": "The cost function is a layer of complexity on top of that.",
  "translatedText": "Функция стоимости представляет собой еще один уровень сложности.",
  "n_reviews": 0
 },
 {
  "input": "It takes the 13,000 weights and biases as inputs and spits out a single measure of lousiness based on the training examples.",
  "translatedText": "Он принимает 13 000 весов и смещений в качестве входных данных и выдает единственную меру неудачи на основе обучающих примеров.",
  "n_reviews": 0
 },
 {
  "input": "And the gradient of the cost function is one more layer of complexity still.",
  "translatedText": "И градиент функции стоимости — это еще один уровень сложности.",
  "n_reviews": 0
 },
 {
  "input": "It tells us what nudges to all these weights and biases cause the fastest change to the value of the cost function, which you might interpret as saying which changes to which weights matter the most.",
  "translatedText": "Он говорит нам, какие подталкивания ко всем этим весам и отклонениям вызывают наиболее быстрое изменение значения функции стоимости, что можно интерпретировать как указание того, какие изменения в каких весах имеют наибольшее значение.",
  "n_reviews": 0
 },
 {
  "input": "So, when you initialize the network with random weights and biases, and adjust them many times based on this gradient descent process, how well does it actually perform on images it's never seen before?",
  "translatedText": "Итак, когда вы инициализируете сеть со случайными весами и смещениями и много раз настраиваете их на основе этого процесса градиентного спуска, насколько хорошо она на самом деле работает с изображениями, которых она никогда раньше не видела?",
  "n_reviews": 0
 },
 {
  "input": "The one I've described here, with the two hidden layers of 16 neurons each, chosen mostly for aesthetic reasons, is not bad, classifying about 96% of the new images it sees correctly.",
  "translatedText": "Тот, который я описал здесь, с двумя скрытыми слоями по 16 нейронов в каждом, выбранными в основном из эстетических соображений, неплохой, правильно классифицируя около 96% новых изображений, которые он видит.",
  "n_reviews": 0
 },
 {
  "input": "And honestly, if you look at some of the examples it messes up on, you feel compelled to cut it a little slack.",
  "translatedText": "И, честно говоря, если вы посмотрите на некоторые примеры, в которых он дает сбой, вы почувствуете необходимость немного ослабить его.",
  "n_reviews": 0
 },
 {
  "input": "Now if you play around with the hidden layer structure and make a couple tweaks, you can get this up to 98%.",
  "translatedText": "Теперь, если вы поиграете со структурой скрытых слоев и сделаете пару настроек, вы сможете получить до 98%.",
  "n_reviews": 0
 },
 {
  "input": "And that's pretty good!",
  "translatedText": "И это очень хорошо!",
  "n_reviews": 0
 },
 {
  "input": "It's not the best, you can certainly get better performance by getting more sophisticated than this plain vanilla network, but given how daunting the initial task is, I think there's something incredible about any network doing this well on images it's never seen before, given that we never specifically told it what patterns to look for.",
  "translatedText": "Это не самое лучшее решение, вы, конечно, можете добиться большей производительности, если станете более сложной, чем эта простая ванильная сеть, но, учитывая, насколько сложной является первоначальная задача, я думаю, что есть что-то невероятное в том, что любая сеть так хорошо справляется с изображениями, которые она никогда раньше не видела, учитывая, что мы никогда специально не говорили ему, какие закономерности искать.",
  "n_reviews": 0
 },
 {
  "input": "Originally, the way I motivated this structure was by describing a hope we might have, that the second layer might pick up on little edges, that the third layer would piece together those edges to recognize loops and longer lines, and that those might be pieced together to recognize digits.",
  "translatedText": "Первоначально я мотивировал эту структуру, описывая нашу надежду на то, что второй слой сможет улавливать маленькие ребра, что третий слой будет соединять эти ребра, чтобы распознавать петли и более длинные линии, и что их можно будет соединить. вместе, чтобы распознавать цифры.",
  "n_reviews": 0
 },
 {
  "input": "So is this what our network is actually doing?",
  "translatedText": "Так действительно ли этим занимается наша сеть?",
  "n_reviews": 0
 },
 {
  "input": "Well, for this one at least, not at all.",
  "translatedText": "Ну, по крайней мере, для этого, совсем нет.",
  "n_reviews": 0
 },
 {
  "input": "Remember how last video we looked at how the weights of the connections from all the neurons in the first layer to a given neuron in the second layer can be visualized as a given pixel pattern that the second layer neuron is picking up on?",
  "translatedText": "Помните, как в прошлом видео мы рассматривали, как веса связей всех нейронов первого слоя с данным нейроном второго слоя можно визуализировать как заданный шаблон пикселей, который улавливает нейрон второго слоя?",
  "n_reviews": 0
 },
 {
  "input": "Well, when we actually do that for the weights associated with these transitions, from the first layer to the next, instead of picking up on isolated little edges here and there, they look, well, almost random, just with some very loose patterns in the middle there.",
  "translatedText": "Что ж, когда мы на самом деле делаем это для весов, связанных с этими переходами, от первого слоя к следующему, вместо того, чтобы собирать отдельные маленькие ребра здесь и там, они выглядят почти случайными, просто с некоторыми очень свободными шаблонами в середина там.",
  "n_reviews": 0
 },
 {
  "input": "It would seem that in the unfathomably large 13,000 dimensional space of possible weights and biases, our network found itself a happy little local minimum that, despite successfully classifying most images, doesn't exactly pick up on the patterns we might have hoped for.",
  "translatedText": "Казалось бы, в непостижимо большом 13 000-мерном пространстве возможных весов и смещений наша сеть обнаружила счастливый маленький локальный минимум, который, несмотря на успешную классификацию большинства изображений, не совсем уловил закономерности, на которые мы могли надеяться.",
  "n_reviews": 0
 },
 {
  "input": "And to really drive this point home, watch what happens when you input a random image.",
  "translatedText": "И чтобы по-настоящему понять эту мысль, посмотрите, что происходит, когда вы вводите случайное изображение.",
  "n_reviews": 0
 },
 {
  "input": "If the system was smart, you might expect it to feel uncertain, maybe not really activating any of those 10 output neurons or activating them all evenly, but instead it confidently gives you some nonsense answer, as if it feels as sure that this random noise is a 5 as it does that an actual image of a 5 is a 5.",
  "translatedText": "Если бы система была умной, вы могли бы ожидать, что она будет чувствовать себя неуверенно, возможно, на самом деле не активирует ни один из этих 10 выходных нейронов или не активирует их все равномерно, но вместо этого она уверенно дает вам какой-то бессмысленный ответ, как если бы она чувствовала себя настолько же уверенным, что этот случайный шум это 5, так же как и фактическое изображение 5 — это 5.",
  "n_reviews": 0
 },
 {
  "input": "Phrased differently, even if this network can recognize digits pretty well, it has no idea how to draw them.",
  "translatedText": "Другими словами, даже если эта сеть довольно хорошо распознает цифры, она понятия не имеет, как их рисовать.",
  "n_reviews": 0
 },
 {
  "input": "A lot of this is because it's such a tightly constrained training setup.",
  "translatedText": "Во многом это связано с тем, что это очень жестко ограниченная система тренировок.",
  "n_reviews": 0
 },
 {
  "input": "I mean, put yourself in the network's shoes here.",
  "translatedText": "Я имею в виду, поставьте себя на место сети.",
  "n_reviews": 0
 },
 {
  "input": "From its point of view, the entire universe consists of nothing but clearly defined unmoving digits centered in a tiny grid, and its cost function never gave it any incentive to be anything but utterly confident in its decisions.",
  "translatedText": "С ее точки зрения, вся Вселенная состоит только из четко определенных неподвижных цифр, сосредоточенных в крошечной сетке, и ее функция стоимости никогда не давала ей никаких стимулов быть чем-то иным, кроме полной уверенности в своих решениях.",
  "n_reviews": 0
 },
 {
  "input": "So with this as the image of what those second layer neurons are really doing, you might wonder why I would introduce this network with the motivation of picking up on edges and patterns.",
  "translatedText": "Итак, учитывая то, что на самом деле делают нейроны второго слоя, вы можете задаться вопросом, почему я представил эту сеть с мотивацией улавливать края и закономерности.",
  "n_reviews": 0
 },
 {
  "input": "I mean, that's just not at all what it ends up doing.",
  "translatedText": "Я имею в виду, что в конечном итоге это совсем не то.",
  "n_reviews": 0
 },
 {
  "input": "Well, this is not meant to be our end goal, but instead a starting point.",
  "translatedText": "Что ж, это не наша конечная цель, а отправная точка.",
  "n_reviews": 0
 },
 {
  "input": "Frankly, this is old technology, the kind researched in the 80s and 90s, and you do need to understand it before you can understand more detailed modern variants, and it clearly is capable of solving some interesting problems, but the more you dig into what those hidden layers are really doing, the less intelligent it seems.",
  "translatedText": "Честно говоря, это старая технология, исследованная в 80-х и 90-х годах, и вам нужно понять ее, прежде чем вы сможете понять более подробные современные варианты, и она явно способна решать некоторые интересные проблемы, но чем больше вы копаетесь в том, что эти скрытые слои действительно работают, тем менее разумным это кажется.",
  "n_reviews": 0
 },
 {
  "input": "Shifting the focus for a moment from how networks learn to how you learn, that'll only happen if you engage actively with the material here somehow.",
  "translatedText": "Если на мгновение сместить фокус с того, как сети учатся, на то, как вы учитесь, это произойдет только в том случае, если вы каким-то образом активно будете изучать материал здесь.",
  "n_reviews": 0
 },
 {
  "input": "One pretty simple thing I want you to do is just pause right now and think deeply for a moment about what changes you might make to this system and how it perceives images if you wanted it to better pick up on things like edges and patterns.",
  "translatedText": "Я хочу, чтобы вы сделали одну довольно простую вещь: просто сделайте паузу прямо сейчас и на мгновение глубоко задумайтесь о том, какие изменения вы могли бы внести в эту систему и о том, как она воспринимает изображения, если вы хотите, чтобы она лучше улавливала такие вещи, как края и узоры.",
  "n_reviews": 0
 },
 {
  "input": "But better than that, to actually engage with the material, I highly recommend the book by Michael Nielsen on deep learning and neural networks.",
  "translatedText": "Но более того, чтобы по-настоящему углубиться в материал, я настоятельно рекомендую книгу Майкла Нильсена о глубоком обучении и нейронных сетях.",
  "n_reviews": 0
 },
 {
  "input": "In it, you can find the code and the data to download and play with for this exact example, and the book will walk you through step by step what that code is doing.",
  "translatedText": "В ней вы можете найти код и данные для загрузки и воспроизведения именно для этого примера, и книга шаг за шагом проведет вас через то, что делает этот код.",
  "n_reviews": 0
 },
 {
  "input": "What's awesome is that this book is free and publicly available, so if you do get something out of it, consider joining me in making a donation towards Nielsen's efforts.",
  "translatedText": "Что удивительно, так это то, что эта книга бесплатна и общедоступна, поэтому, если вы что-то из нее получите, подумайте о том, чтобы присоединиться ко мне и сделать пожертвование на усилия Нильсена.",
  "n_reviews": 0
 },
 {
  "input": "I've also linked a couple other resources I like a lot in the description, including the phenomenal and beautiful blog post by Chris Ola and the articles in Distill.",
  "translatedText": "Я также связал в описании пару других ресурсов, которые мне очень нравятся, в том числе феноменальный и красивый пост в блоге Криса Олы и статьи в Distill.",
  "n_reviews": 0
 },
 {
  "input": "To close things off here for the last few minutes, I want to jump back into a snippet of the interview I had with Leisha Lee.",
  "translatedText": "Чтобы закончить на последние несколько минут, я хочу вернуться к фрагменту интервью, которое я дал Лейше Ли.",
  "n_reviews": 0
 },
 {
  "input": "You might remember her from the last video, she did her PhD work in deep learning.",
  "translatedText": "Возможно, вы помните ее по последнему видео: она защитила докторскую диссертацию в области глубокого обучения.",
  "n_reviews": 0
 },
 {
  "input": "In this little snippet she talks about two recent papers that really dig into how some of the more modern image recognition networks are actually learning.",
  "translatedText": "В этом небольшом отрывке она рассказывает о двух недавних статьях, в которых действительно изучается, как на самом деле обучаются некоторые из более современных сетей распознавания изображений.",
  "n_reviews": 0
 },
 {
  "input": "Just to set up where we were in the conversation, the first paper took one of these particularly deep neural networks that's really good at image recognition, and instead of training it on a properly labeled dataset, shuffled all the labels around before training.",
  "translatedText": "Чтобы понять, на каком этапе разговора мы находимся, в первой статье была взята одна из этих особенно глубоких нейронных сетей, которая действительно хороша в распознавании изображений, и вместо обучения ее на правильно размеченном наборе данных перед обучением перетасованы все метки.",
  "n_reviews": 0
 },
 {
  "input": "Obviously the testing accuracy here was no better than random, since everything is just randomly labeled, but it was still able to achieve the same training accuracy as you would on a properly labeled dataset.",
  "translatedText": "Очевидно, что точность тестирования здесь была не лучше, чем случайная, поскольку все помечено случайным образом, но все равно удалось достичь той же точности обучения, что и на правильно маркированном наборе данных.",
  "n_reviews": 0
 },
 {
  "input": "Basically, the millions of weights for this particular network were enough for it to just memorize the random data, which raises the question for whether minimizing this cost function actually corresponds to any sort of structure in the image, or is it just memorization?",
  "translatedText": "По сути, миллионов весов для этой конкретной сети было достаточно, чтобы она просто запомнила случайные данные, что поднимает вопрос, действительно ли минимизация этой функции стоимости соответствует какой-либо структуре изображения или это просто запоминание?",
  "n_reviews": 0
 },
 {
  "input": "If you look at that accuracy curve, if you were just training on a random dataset, that curve sort of went down very slowly in almost kind of a linear fashion, so you're really struggling to find that local minima of possible, you know, the right weights that would get you that accuracy.",
  "translatedText": "Если вы посмотрите на эту кривую точности, если бы вы просто тренировались на случайном наборе данных, эта кривая как бы снижалась очень медленно, почти линейно, так что вы действительно изо всех сил пытаетесь найти этот локальный минимум возможных, вы знаете , правильные веса, которые обеспечат вам такую точность.",
  "n_reviews": 0
 },
 {
  "input": "Whereas if you're actually training on a structured dataset, one that has the right labels, you fiddle around a little bit in the beginning, but then you kind of dropped very fast to get to that accuracy level, and so in some sense it was easier to find that local maxima.",
  "translatedText": "В то время как, если вы на самом деле тренируетесь на структурированном наборе данных, который имеет правильные метки, вначале вы немного повозитесь, но затем вы как бы очень быстро падаете, чтобы добраться до этого уровня точности, и поэтому в некотором смысле это было легче найти эти локальные максимумы.",
  "n_reviews": 0
 },
 {
  "input": "And so what was also interesting about that is it brings into light another paper from actually a couple of years ago, which has a lot more simplifications about the network layers, but one of the results was saying how if you look at the optimization landscape, the local minima that these networks tend to learn are actually of equal quality, so in some sense if your dataset is structured, you should be able to find that much more easily.",
  "translatedText": "И что еще было интересно в этом, так это то, что это проливает свет на еще одну статью, написанную пару лет назад, в которой гораздо больше упрощений в отношении сетевых уровней, но в одном из результатов говорилось, что, если вы посмотрите на ландшафт оптимизации, локальные минимумы, которые эти сети обычно изучают, на самом деле имеют одинаковое качество, поэтому в некотором смысле, если ваш набор данных структурирован, вам будет гораздо легче найти его.",
  "n_reviews": 0
 },
 {
  "input": "My thanks, as always, to those of you supporting on Patreon.",
  "translatedText": "Моя благодарность, как всегда, тем из вас, кто поддерживает Patreon.",
  "n_reviews": 0
 },
 {
  "input": "I've said before just what a game changer Patreon is, but these videos really would not be possible without you.",
  "translatedText": "Я уже говорил, что меняет правила игры Патреон, но эти видео действительно были бы невозможны без вас.",
  "n_reviews": 0
 },
 {
  "input": "I also want to give a special thanks to the VC firm Amplify Partners, in their support of these initial videos in the series.",
  "translatedText": "Я также хочу выразить особую благодарность венчурной фирме Amplify Partners за поддержку этих первых видеороликов из этой серии.",
  "n_reviews": 0
 }
]