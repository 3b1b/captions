[
 {
  "input": "Last video I laid out the structure of a neural network.",
  "translatedText": "చివరి వీడియో నేను న్యూరల్ నెట్‌వర్క్ యొక్క నిర్మాణాన్ని రూపొందించాను.",
  "n_reviews": 0,
  "start": 4.18,
  "end": 7.28
 },
 {
  "input": "I'll give a quick recap here so that it's fresh in our minds, and then I have two main goals for this video.",
  "translatedText": "నేను ఇక్కడ శీఘ్ర రీక్యాప్ ఇస్తాను, తద్వారా ఇది మన మనస్సులో తాజాగా ఉంటుంది, ఆపై ఈ వీడియో కోసం నాకు రెండు ప్రధాన లక్ష్యాలు ఉన్నాయి.",
  "n_reviews": 0,
  "start": 7.68,
  "end": 12.6
 },
 {
  "input": "The first is to introduce the idea of gradient descent, which underlies not only how neural networks learn, but how a lot of other machine learning works as well.",
  "translatedText": "మొదటిది గ్రేడియంట్ డీసెంట్ ఆలోచనను పరిచయం చేయడం, ఇది న్యూరల్ నెట్‌వర్క్‌లు ఎలా నేర్చుకుంటాయో మాత్రమే కాకుండా, చాలా ఇతర మెషీన్ లెర్నింగ్ కూడా ఎలా పనిచేస్తుందో తెలియజేస్తుంది.",
  "n_reviews": 0,
  "start": 13.1,
  "end": 20.6
 },
 {
  "input": "Then after that we'll dig in a little more into how this particular network performs, and what those hidden layers of neurons end up looking for.",
  "translatedText": "ఆ తర్వాత మేము ఈ నిర్దిష్ట నెట్‌వర్క్ ఎలా పని చేస్తుందో మరియు న్యూరాన్‌ల యొక్క దాచిన పొరలు దేని కోసం వెతుకుతున్నాయో కొంచెం ఎక్కువ త్రవ్విస్తాము.",
  "n_reviews": 0,
  "start": 21.12,
  "end": 27.94
 },
 {
  "input": "As a reminder, our goal here is the classic example of handwritten digit recognition, the hello world of neural networks.",
  "translatedText": "రిమైండర్‌గా, ఇక్కడ మా లక్ష్యం చేతితో వ్రాసిన అంకెల గుర్తింపు యొక్క క్లాసిక్ ఉదాహరణ, న్యూరల్ నెట్‌వర్క్‌ల హలో వరల్డ్.",
  "n_reviews": 0,
  "start": 28.98,
  "end": 36.22
 },
 {
  "input": "These digits are rendered on a 28x28 pixel grid, each pixel with some grayscale value between 0 and 1.",
  "translatedText": "ఈ అంకెలు 28x28 పిక్సెల్ గ్రిడ్‌లో రెండర్ చేయబడ్డాయి, ప్రతి పిక్సెల్ కొంత గ్రేస్కేల్ విలువ 0 మరియు 1 మధ్య ఉంటుంది.",
  "n_reviews": 0,
  "start": 37.02,
  "end": 43.42
 },
 {
  "input": "Those are what determine the activations of 784 neurons in the input layer of the network.",
  "translatedText": "నెట్‌వర్క్ యొక్క ఇన్‌పుట్ లేయర్‌లోని 784 న్యూరాన్‌ల క్రియాశీలతను అవి నిర్ణయిస్తాయి.",
  "n_reviews": 0,
  "start": 43.82,
  "end": 50.04
 },
 {
  "input": "And then the activation for each neuron in the following layers is based on a weighted sum of all the activations in the previous layer, plus some special number called a bias.",
  "translatedText": "ఆపై క్రింది లేయర్‌లలోని ప్రతి న్యూరాన్‌కి క్రియాశీలత మునుపటి లేయర్‌లోని అన్ని యాక్టివేషన్‌ల యొక్క వెయిటెడ్ మొత్తంపై ఆధారపడి ఉంటుంది, దానితో పాటు బయాస్ అని పిలువబడే కొన్ని ప్రత్యేక సంఖ్య.",
  "n_reviews": 0,
  "start": 51.18,
  "end": 60.82
 },
 {
  "input": "Then you compose that sum with some other function, like the sigmoid squishification, or a relu, the way I walked through last video.",
  "translatedText": "అప్పుడు మీరు ఆ మొత్తాన్ని సిగ్మోయిడ్ స్క్విషిఫికేషన్ లేదా రెలు వంటి కొన్ని ఇతర ఫంక్షన్‌తో కంపోజ్ చేయండి, నేను చివరి వీడియో ద్వారా నడిచాను.",
  "n_reviews": 0,
  "start": 62.16,
  "end": 68.94
 },
 {
  "input": "In total, given the somewhat arbitrary choice of two hidden layers with 16 neurons each, the network has about 13,000 weights and biases that we can adjust, and it's these values that determine what exactly the network actually does.",
  "translatedText": "మొత్తంగా, ఒక్కొక్కటి 16 న్యూరాన్‌లతో రెండు దాచిన లేయర్‌లను కొంతవరకు ఏకపక్షంగా ఎంపిక చేస్తే, నెట్‌వర్క్‌లో సుమారు 13,000 బరువులు మరియు పక్షపాతాలు ఉన్నాయి, వీటిని మనం సర్దుబాటు చేయవచ్చు మరియు నెట్‌వర్క్ వాస్తవానికి ఏమి చేస్తుందో ఈ విలువలు నిర్ణయిస్తాయి.",
  "n_reviews": 0,
  "start": 69.48,
  "end": 84.38
 },
 {
  "input": "Then what we mean when we say that this network classifies a given digit is that the brightest of those 10 neurons in the final layer corresponds to that digit.",
  "translatedText": "ఈ నెట్‌వర్క్ ఇచ్చిన అంకెను వర్గీకరిస్తుంది అని మనం చెప్పినప్పుడు మనకు అర్థం ఏమిటంటే, చివరి పొరలో ఉన్న 10 న్యూరాన్‌లలో ప్రకాశవంతమైనది ఆ అంకెకు అనుగుణంగా ఉంటుంది.",
  "n_reviews": 0,
  "start": 84.88,
  "end": 93.3
 },
 {
  "input": "And remember, the motivation we had in mind here for the layered structure was that maybe the second layer could pick up on the edges, and the third layer might pick up on patterns like loops and lines, and the last one could just piece together those patterns to recognize digits.",
  "translatedText": "మరియు గుర్తుంచుకోండి, లేయర్డ్ స్ట్రక్చర్ కోసం మనం ఇక్కడ దృష్టిలో ఉంచుకున్న ప్రేరణ ఏమిటంటే, రెండవ పొర అంచుల నుండి ఎంచుకోవచ్చు మరియు మూడవ లేయర్ లూప్‌లు మరియు లైన్‌ల వంటి నమూనాలను ఎంచుకోవచ్చు మరియు చివరిది వాటిని కలపవచ్చు. అంకెలను గుర్తించడానికి నమూనాలు.",
  "n_reviews": 0,
  "start": 94.1,
  "end": 108.8
 },
 {
  "input": "So here, we learn how the network learns.",
  "translatedText": "కాబట్టి ఇక్కడ, నెట్‌వర్క్ ఎలా నేర్చుకుంటుందో మనం నేర్చుకుంటాము.",
  "n_reviews": 0,
  "start": 109.8,
  "end": 112.24
 },
 {
  "input": "What we want is an algorithm where you can show this network a whole bunch of training data, which comes in the form of a bunch of different images of handwritten digits, along with labels for what they're supposed to be, and it'll adjust those 13,000 weights and biases so as to improve its performance on the training data.",
  "translatedText": "మేము కోరుకునేది మీరు ఈ నెట్‌వర్క్‌కు శిక్షణ డేటా యొక్క మొత్తం సమూహాన్ని చూపగల అల్గారిథమ్, ఇది చేతితో వ్రాసిన అంకెల యొక్క విభిన్న చిత్రాల సమూహంతో పాటు అవి ఏవి ఉండాలో లేబుల్‌లతో పాటుగా వస్తాయి మరియు ఇది శిక్షణ డేటాపై దాని పనితీరును మెరుగుపరచడానికి ఆ 13,000 బరువులు మరియు పక్షపాతాలను సర్దుబాటు చేయండి.",
  "n_reviews": 0,
  "start": 112.64,
  "end": 130.12
 },
 {
  "input": "Hopefully, this layered structure will mean that what it learns generalizes to images beyond that training data.",
  "translatedText": "ఆశాజనక, ఈ లేయర్డ్ నిర్మాణం అంటే అది నేర్చుకునేది ఆ శిక్షణ డేటాకు మించిన చిత్రాలకు సాధారణీకరిస్తుంది.",
  "n_reviews": 0,
  "start": 130.72,
  "end": 136.86
 },
 {
  "input": "The way we test that is that after you train the network, you show it more labeled data that it's never seen before, and you see how accurately it classifies those new images.",
  "translatedText": "మేము దానిని పరీక్షించే విధానం ఏమిటంటే, మీరు నెట్‌వర్క్‌కు శిక్షణ ఇచ్చిన తర్వాత, మీరు ఇంతకు ముందెన్నడూ చూడని మరింత లేబుల్ డేటాను చూపుతారు మరియు ఆ కొత్త చిత్రాలను అది ఎంత ఖచ్చితంగా వర్గీకరిస్తుందో మీరు చూస్తారు.",
  "n_reviews": 0,
  "start": 137.64,
  "end": 146.7
 },
 {
  "input": "Fortunately for us, and what makes this such a common example to start with, is that the good people behind the MNIST database have put together a collection of tens of thousands of handwritten digit images, each one labeled with the numbers they're supposed to be.",
  "translatedText": "అదృష్టవశాత్తూ, మరియు ప్రారంభించడానికి ఇది చాలా సాధారణ ఉదాహరణగా మారింది, MNIST డేటాబేస్ వెనుక ఉన్న మంచి వ్యక్తులు పదివేల చేతివ్రాత అంకెల చిత్రాల సేకరణను కలిగి ఉన్నారు, ప్రతి ఒక్కటి వారు చేయవలసిన సంఖ్యలతో లేబుల్ చేయబడ్డాయి. ఉంటుంది.",
  "n_reviews": 0,
  "start": 151.12,
  "end": 164.2
 },
 {
  "input": "And as provocative as it is to describe a machine as learning, once you see how it works, it feels a lot less like some crazy sci-fi premise, and a lot more like a calculus exercise.",
  "translatedText": "మరియు మెషీన్‌ను నేర్చుకోవడంగా వర్ణించడం ఎంత రెచ్చగొట్టేదో, అది ఎలా పనిచేస్తుందో మీరు ఒకసారి చూస్తే, అది కొన్ని వెర్రి సైన్స్ ఫిక్షన్ ఆవరణలాగా చాలా తక్కువగా అనిపిస్తుంది మరియు కాలిక్యులస్ వ్యాయామం లాగా చాలా ఎక్కువ అనిపిస్తుంది.",
  "n_reviews": 0,
  "start": 164.9,
  "end": 175.48
 },
 {
  "input": "I mean, basically it comes down to finding the minimum of a certain function.",
  "translatedText": "నా ఉద్దేశ్యం, ప్రాథమికంగా ఇది ఒక నిర్దిష్ట ఫంక్షన్ యొక్క కనిష్టాన్ని కనుగొనడానికి వస్తుంది.",
  "n_reviews": 0,
  "start": 176.2,
  "end": 179.96
 },
 {
  "input": "Remember, conceptually, we're thinking of each neuron as being connected to all the neurons in the previous layer, and the weights in the weighted sum defining its activation are kind of like the strengths of those connections, and the bias is some indication of whether that neuron tends to be active or inactive.",
  "translatedText": "గుర్తుంచుకోండి, సంభావితంగా, మేము ప్రతి న్యూరాన్ మునుపటి లేయర్‌లోని అన్ని న్యూరాన్‌లకు అనుసంధానించబడిందని ఆలోచిస్తున్నాము మరియు దాని క్రియాశీలతను నిర్వచించే వెయిటెడ్ మొత్తంలోని బరువులు ఆ కనెక్షన్‌ల బలాలు లాగా ఉంటాయి మరియు పక్షపాతం కొన్ని సూచన ఆ న్యూరాన్ చురుకుగా లేదా క్రియారహితంగా ఉంటుందా.",
  "n_reviews": 0,
  "start": 181.94,
  "end": 198.96
 },
 {
  "input": "And to start things off, we're just going to initialize all of those weights and biases totally randomly.",
  "translatedText": "మరియు విషయాలను ప్రారంభించడానికి, మేము ఆ బరువులు మరియు పక్షపాతాలను పూర్తిగా యాదృచ్ఛికంగా ప్రారంభించబోతున్నాము.",
  "n_reviews": 0,
  "start": 199.72,
  "end": 204.4
 },
 {
  "input": "Needless to say, this network is going to perform pretty horribly on a given training example, since it's just doing something random.",
  "translatedText": "ఈ నెట్‌వర్క్ ఇచ్చిన శిక్షణ ఉదాహరణపై చాలా భయంకరంగా పని చేస్తుందని ప్రత్యేకంగా చెప్పనవసరం లేదు, ఎందుకంటే ఇది యాదృచ్ఛికంగా ఏదో చేస్తోంది.",
  "n_reviews": 0,
  "start": 204.94,
  "end": 210.72
 },
 {
  "input": "For example, you feed in this image of a 3, and the output layer just looks like a mess.",
  "translatedText": "ఉదాహరణకు, మీరు 3 యొక్క ఈ చిత్రంలో ఫీడ్ చేస్తారు మరియు అవుట్‌పుట్ లేయర్ గందరగోళంగా కనిపిస్తుంది.",
  "n_reviews": 0,
  "start": 211.04,
  "end": 216.02
 },
 {
  "input": "So what you do is define a cost function, a way of telling the computer, no, bad computer, that output should have activations which are 0 for most neurons, but 1 for this neuron, what you gave me is utter trash.",
  "translatedText": "కాబట్టి మీరు చేసేది ఖర్చు ఫంక్షన్‌ని నిర్వచించడం, కంప్యూటర్‌కు చెప్పే మార్గం, కాదు, చెడ్డ కంప్యూటర్, ఆ అవుట్‌పుట్‌లో చాలా న్యూరాన్‌లకు 0 ఉండే యాక్టివేషన్‌లు ఉండాలి, కానీ ఈ న్యూరాన్‌కు 1, మీరు నాకు ఇచ్చినది పూర్తిగా చెత్త.",
  "n_reviews": 0,
  "start": 216.6,
  "end": 230.76
 },
 {
  "input": "To say that a little more mathematically, you add up the squares of the differences between each of those trash output activations and the value you want them to have, and this is what we'll call the cost of a single training example.",
  "translatedText": "కొంచెం ఎక్కువ గణితశాస్త్రంలో చెప్పాలంటే, మీరు ఆ ప్రతి ట్రాష్ అవుట్‌పుట్ యాక్టివేషన్‌ల మధ్య వ్యత్యాసాల చతురస్రాలను మరియు వాటిని కలిగి ఉండాలని మీరు కోరుకునే విలువను జోడిస్తారు మరియు దీనిని మేము ఒకే శిక్షణ ఉదాహరణగా పిలుస్తాము.",
  "n_reviews": 0,
  "start": 231.72,
  "end": 245.02
 },
 {
  "input": "Notice this sum is small when the network confidently classifies the image correctly, but it's large when the network seems like it doesn't know what it's doing.",
  "translatedText": "నెట్‌వర్క్ నమ్మకంగా చిత్రాన్ని సరిగ్గా వర్గీకరించినప్పుడు ఈ మొత్తం చిన్నదని గమనించండి, కానీ నెట్‌వర్క్ ఏమి చేస్తుందో తెలియనట్లు అనిపించినప్పుడు అది పెద్దదిగా ఉంటుంది.",
  "n_reviews": 0,
  "start": 245.96,
  "end": 256.4
 },
 {
  "input": "So then what you do is consider the average cost over all of the tens of thousands of training examples at your disposal.",
  "translatedText": "కాబట్టి మీరు చేసేది మీ వద్ద ఉన్న పదివేల శిక్షణా ఉదాహరణల కంటే సగటు ధరను పరిగణించడం.",
  "n_reviews": 0,
  "start": 258.64,
  "end": 265.44
 },
 {
  "input": "This average cost is our measure for how lousy the network is, and how bad the computer should feel.",
  "translatedText": "ఈ సగటు ధర నెట్‌వర్క్ ఎంత అధ్వాన్నంగా ఉందో మరియు కంప్యూటర్ ఎంత చెడ్డగా భావించాలో మా కొలమానం.",
  "n_reviews": 0,
  "start": 267.04,
  "end": 272.74
 },
 {
  "input": "And that's a complicated thing.",
  "translatedText": "మరియు అది సంక్లిష్టమైన విషయం.",
  "n_reviews": 0,
  "start": 273.42,
  "end": 274.6
 },
 {
  "input": "Remember how the network itself was basically a function, one that takes in 784 numbers as inputs, the pixel values, and spits out 10 numbers as its output, and in a sense it's parameterized by all these weights and biases?",
  "translatedText": "నెట్‌వర్క్ ప్రాథమికంగా ఒక ఫంక్షన్‌గా ఎలా ఉందో గుర్తుంచుకోండి, ఇది 784 సంఖ్యలను ఇన్‌పుట్‌లుగా, పిక్సెల్ విలువలుగా తీసుకుంటుంది మరియు 10 సంఖ్యలను దాని అవుట్‌పుట్‌గా ఉమ్మివేస్తుంది మరియు ఒక కోణంలో ఇది ఈ బరువులు మరియు పక్షపాతాల ద్వారా పారామితి చేయబడిందా?",
  "n_reviews": 0,
  "start": 275.04,
  "end": 288.8
 },
 {
  "input": "Well the cost function is a layer of complexity on top of that.",
  "translatedText": "బాగా ఖర్చు ఫంక్షన్ దాని పైన సంక్లిష్టత పొర.",
  "n_reviews": 0,
  "start": 289.5,
  "end": 292.82
 },
 {
  "input": "It takes as its input those 13,000 or so weights and biases, and spits out a single number describing how bad those weights and biases are, and the way it's defined depends on the network's behavior over all the tens of thousands of pieces of training data.",
  "translatedText": "ఇది దాని ఇన్‌పుట్‌గా ఆ 13,000 లేదా అంతకంటే ఎక్కువ బరువులు మరియు పక్షపాతాలను తీసుకుంటుంది మరియు ఆ బరువులు మరియు పక్షపాతాలు ఎంత చెడ్డవో వివరిస్తూ ఒకే సంఖ్యను ఉమ్మివేస్తుంది మరియు అది నిర్వచించబడిన విధానం మొత్తం పదివేల శిక్షణా డేటాపై నెట్‌వర్క్ ప్రవర్తనపై ఆధారపడి ఉంటుంది.",
  "n_reviews": 0,
  "start": 293.1,
  "end": 308.9
 },
 {
  "input": "That's a lot to think about.",
  "translatedText": "అన్నది చాలా ఆలోచించాల్సిన విషయం.",
  "n_reviews": 0,
  "start": 309.52,
  "end": 311.0
 },
 {
  "input": "But just telling the computer what a crappy job it's doing isn't very helpful.",
  "translatedText": "కానీ కంప్యూటర్‌కు అది ఎంత చెత్త పని చేస్తుందో చెప్పడం చాలా ఉపయోగకరంగా ఉండదు.",
  "n_reviews": 0,
  "start": 312.4,
  "end": 315.82
 },
 {
  "input": "You want to tell it how to change those weights and biases so that it gets better.",
  "translatedText": "ఆ బరువులు మరియు పక్షపాతాలను ఎలా మార్చాలో మీరు చెప్పాలనుకుంటున్నారు, తద్వారా అది మెరుగుపడుతుంది.",
  "n_reviews": 0,
  "start": 316.22,
  "end": 320.06
 },
 {
  "input": "To make it easier, rather than struggling to imagine a function with 13,000 inputs, just imagine a simple function that has one number as an input and one number as an output.",
  "translatedText": "దీన్ని సులభతరం చేయడానికి, 13,000 ఇన్‌పుట్‌లతో ఒక ఫంక్షన్‌ను ఊహించడం కష్టపడకుండా, ఒక సంఖ్యను ఇన్‌పుట్‌గా మరియు ఒక సంఖ్యను అవుట్‌పుట్‌గా కలిగి ఉండే సాధారణ ఫంక్షన్‌ను ఊహించుకోండి.",
  "n_reviews": 0,
  "start": 320.78,
  "end": 330.48
 },
 {
  "input": "How do you find an input that minimizes the value of this function?",
  "translatedText": "ఈ ఫంక్షన్ విలువను తగ్గించే ఇన్‌పుట్‌ను మీరు ఎలా కనుగొంటారు?",
  "n_reviews": 0,
  "start": 331.48,
  "end": 335.3
 },
 {
  "input": "Calculus students will know that you can sometimes figure out that minimum explicitly, but that's not always feasible for really complicated functions, certainly not in the 13,000 input version of this situation for our crazy complicated neural network cost function.",
  "translatedText": "కాలిక్యులస్ విద్యార్థులకు మీరు కొన్నిసార్లు స్పష్టంగా కనిష్టంగా గుర్తించగలరని తెలుసుకుంటారు, కానీ నిజంగా సంక్లిష్టమైన ఫంక్షన్‌లకు ఇది ఎల్లప్పుడూ సాధ్యపడదు, మా క్రేజీ కాంప్లికేటెడ్ న్యూరల్ నెట్‌వర్క్ ఖర్చు ఫంక్షన్ కోసం ఈ పరిస్థితి యొక్క 13,000 ఇన్‌పుట్ వెర్షన్‌లో ఖచ్చితంగా కాదు.",
  "n_reviews": 0,
  "start": 336.46,
  "end": 351.08
 },
 {
  "input": "A more flexible tactic is to start at any input, and figure out which direction you should step to make that output lower.",
  "translatedText": "ఏదైనా ఇన్‌పుట్‌లో ప్రారంభించడం మరియు ఆ అవుట్‌పుట్ తక్కువగా చేయడానికి మీరు ఏ దిశలో అడుగు పెట్టాలో గుర్తించడం మరింత సౌకర్యవంతమైన వ్యూహం.",
  "n_reviews": 0,
  "start": 351.58,
  "end": 359.2
 },
 {
  "input": "Specifically, if you can figure out the slope of the function where you are, then shift to the left if that slope is positive, and shift the input to the right if that slope is negative.",
  "translatedText": "ప్రత్యేకించి, మీరు ఉన్న ఫంక్షన్ యొక్క వాలును మీరు గుర్తించగలిగితే, ఆ వాలు సానుకూలంగా ఉంటే ఎడమవైపుకు మార్చండి మరియు ఆ వాలు ప్రతికూలంగా ఉంటే ఇన్‌పుట్‌ను కుడివైపుకి మార్చండి.",
  "n_reviews": 0,
  "start": 360.08,
  "end": 369.9
 },
 {
  "input": "If you do this repeatedly, at each point checking the new slope and taking the appropriate step, you're going to approach some local minimum of the function.",
  "translatedText": "మీరు దీన్ని పదేపదే చేస్తే, ప్రతి పాయింట్‌లో కొత్త వాలును తనిఖీ చేసి, తగిన దశను తీసుకుంటే, మీరు ఫంక్షన్‌లో కొంత స్థానిక కనిష్టాన్ని చేరుకోబోతున్నారు.",
  "n_reviews": 0,
  "start": 371.96,
  "end": 379.84
 },
 {
  "input": "The image you might have in mind here is a ball rolling down a hill.",
  "translatedText": "ఇక్కడ మీ మనస్సులో ఉన్న చిత్రం కొండపై నుండి దొర్లుతున్న బంతి.",
  "n_reviews": 0,
  "start": 380.64,
  "end": 383.8
 },
 {
  "input": "Notice, even for this really simplified single input function, there are many possible valleys that you might land in, depending on which random input you start at, and there's no guarantee that the local minimum you land in is going to be the smallest possible value of the cost function.",
  "translatedText": "గమనించండి, ఈ నిజంగా సరళీకృతమైన సింగిల్ ఇన్‌పుట్ ఫంక్షన్‌కి కూడా, మీరు ఏ యాదృచ్ఛిక ఇన్‌పుట్‌ను ప్రారంభించాలనే దానిపై ఆధారపడి, మీరు ల్యాండింగ్ చేయగల అనేక లోయలు ఉన్నాయి మరియు మీరు దిగిన స్థానిక కనీస విలువ సాధ్యమైనంత చిన్నదిగా ఉంటుందని ఎటువంటి హామీ లేదు. ఖర్చు ఫంక్షన్.",
  "n_reviews": 0,
  "start": 384.62,
  "end": 399.4
 },
 {
  "input": "That will carry over to our neural network case as well.",
  "translatedText": "అది మన న్యూరల్ నెట్‌వర్క్ కేసుకు కూడా తీసుకువెళుతుంది.",
  "n_reviews": 0,
  "start": 400.22,
  "end": 402.62
 },
 {
  "input": "I also want you to notice how if you make your step sizes proportional to the slope, then when the slope is flattening out towards the minimum, your steps get smaller and smaller, and that helps you from overshooting.",
  "translatedText": "మీరు మీ దశల పరిమాణాలను వాలుకు అనులోమానుపాతంలో చేస్తే, వాలు కనిష్ట స్థాయికి చదునుగా ఉన్నప్పుడు, మీ అడుగులు చిన్నవిగా మరియు చిన్నవిగా ఉంటాయి మరియు అది ఓవర్‌షూట్ నుండి మీకు ఎలా సహాయపడుతుందో కూడా మీరు గమనించాలని నేను కోరుకుంటున్నాను.",
  "n_reviews": 0,
  "start": 403.18,
  "end": 414.6
 },
 {
  "input": "Bumping up the complexity a bit, imagine instead a function with two inputs and one output.",
  "translatedText": "సంక్లిష్టతను కొంచెం పెంచుతూ, బదులుగా రెండు ఇన్‌పుట్‌లు మరియు ఒక అవుట్‌పుట్‌తో ఫంక్షన్‌ను ఊహించుకోండి.",
  "n_reviews": 0,
  "start": 415.94,
  "end": 420.98
 },
 {
  "input": "You might think of the input space as the xy-plane, and the cost function as being graphed as a surface above it.",
  "translatedText": "మీరు ఇన్‌పుట్ స్పేస్‌ను xy-ప్లేన్‌గా భావించవచ్చు మరియు ఖర్చు ఫంక్షన్ దాని పైన ఉపరితలంగా గ్రాఫ్ చేయబడి ఉండవచ్చు.",
  "n_reviews": 0,
  "start": 421.5,
  "end": 428.14
 },
 {
  "input": "Instead of asking about the slope of the function, you have to ask which direction you should step in this input space so as to decrease the output of the function most quickly.",
  "translatedText": "ఫంక్షన్ యొక్క వాలు గురించి అడగడానికి బదులుగా, మీరు ఈ ఇన్‌పుట్ స్థలంలో ఏ దిశలో అడుగు పెట్టాలని అడగాలి, తద్వారా ఫంక్షన్ యొక్క అవుట్‌పుట్ చాలా త్వరగా తగ్గుతుంది.",
  "n_reviews": 0,
  "start": 428.76,
  "end": 438.96
 },
 {
  "input": "In other words, what's the downhill direction?",
  "translatedText": "మరో మాటలో చెప్పాలంటే, లోతువైపు దిశ ఏమిటి?",
  "n_reviews": 0,
  "start": 439.72,
  "end": 441.76
 },
 {
  "input": "Again, it's helpful to think of a ball rolling down that hill.",
  "translatedText": "మళ్ళీ, ఆ కొండపై నుండి ఒక బంతిని రోలింగ్ చేయడం గురించి ఆలోచించడం ఉపయోగకరంగా ఉంటుంది.",
  "n_reviews": 0,
  "start": 442.38,
  "end": 445.56
 },
 {
  "input": "Those of you familiar with multivariable calculus will know that the gradient of a function gives you the direction of steepest ascent, which direction should you step to increase the function most quickly.",
  "translatedText": "మీలో మల్టీవియరబుల్ కాలిక్యులస్ గురించి తెలిసిన వారికి, ఫంక్షన్ యొక్క గ్రేడియంట్ మీకు ఏటవాలుగా ఉన్న ఆరోహణ దిశను ఇస్తుందని, మీరు ఫంక్షన్‌ను అత్యంత వేగంగా పెంచడానికి ఏ దిశలో అడుగు పెట్టాలి అని తెలుసుకుంటారు.",
  "n_reviews": 0,
  "start": 446.66,
  "end": 458.78
 },
 {
  "input": "Naturally enough, taking the negative of that gradient gives you the direction to step that decreases the function most quickly.",
  "translatedText": "సహజంగానే తగినంత, ఆ ప్రవణత యొక్క ప్రతికూలతను తీసుకోవడం వలన ఫంక్షన్‌ను చాలా త్వరగా తగ్గించే దశకు దిశను అందిస్తుంది.",
  "n_reviews": 0,
  "start": 459.56,
  "end": 466.04
 },
 {
  "input": "Even more than that, the length of this gradient vector is an indication for just how steep that steepest slope is.",
  "translatedText": "దాని కంటే ఎక్కువగా, ఈ గ్రేడియంట్ వెక్టర్ యొక్క పొడవు ఆ ఏటవాలు వాలు ఎంత నిటారుగా ఉందో సూచిస్తుంది.",
  "n_reviews": 0,
  "start": 467.24,
  "end": 473.84
 },
 {
  "input": "If you're unfamiliar with multivariable calculus and want to learn more, check out some of the work I did for Khan Academy on the topic.",
  "translatedText": "మీకు మల్టీవియరబుల్ కాలిక్యులస్ గురించి తెలియకపోతే మరియు మరింత తెలుసుకోవాలనుకుంటే, ఈ అంశంపై ఖాన్ అకాడమీ కోసం నేను చేసిన కొన్ని పనిని చూడండి.",
  "n_reviews": 0,
  "start": 474.54,
  "end": 480.34
 },
 {
  "input": "Honestly though, all that matters for you and me right now is that in principle there exists a way to compute this vector, this vector that tells you what the downhill direction is and how steep it is.",
  "translatedText": "నిజాయితీగా చెప్పాలంటే, ప్రస్తుతం మీకు మరియు నాకు ముఖ్యమైనది ఏమిటంటే, సూత్రప్రాయంగా ఈ వెక్టార్‌ను గణించడానికి ఒక మార్గం ఉంది, ఈ వెక్టర్ లోతువైపు దిశ ఏమిటో మరియు అది ఎంత నిటారుగా ఉందో మీకు తెలియజేస్తుంది.",
  "n_reviews": 0,
  "start": 480.86,
  "end": 491.9
 },
 {
  "input": "You'll be okay if that's all you know and you're not rock solid on the details.",
  "translatedText": "మీకు తెలిసినంత మాత్రాన మీరు బాగానే ఉంటారు మరియు వివరాలపై మీరు గట్టిగా ఉండకపోతే.",
  "n_reviews": 0,
  "start": 492.4,
  "end": 496.12
 },
 {
  "input": "If you can get that, the algorithm for minimizing the function is to compute this gradient direction, then take a small step downhill, and repeat that over and over.",
  "translatedText": "మీరు దానిని పొందగలిగితే, ఫంక్షన్‌ను కనిష్టీకరించడానికి అల్గోరిథం ఈ గ్రేడియంట్ దిశను గణించడం, ఆపై ఒక చిన్న అడుగు లోతువైపు వేసి, మళ్లీ మళ్లీ పునరావృతం చేయడం.",
  "n_reviews": 0,
  "start": 497.2,
  "end": 506.74
 },
 {
  "input": "It's the same basic idea for a function that has 13,000 inputs instead of 2 inputs.",
  "translatedText": "2 ఇన్‌పుట్‌లకు బదులుగా 13,000 ఇన్‌పుట్‌లను కలిగి ఉన్న ఫంక్షన్‌కి ఇది అదే ప్రాథమిక ఆలోచన.",
  "n_reviews": 0,
  "start": 507.7,
  "end": 512.82
 },
 {
  "input": "Imagine organizing all 13,000 weights and biases of our network into a giant column vector.",
  "translatedText": "మా నెట్‌వర్క్‌లోని మొత్తం 13,000 బరువులు మరియు పక్షపాతాలను ఒక జెయింట్ కాలమ్ వెక్టర్‌గా నిర్వహించడం గురించి ఆలోచించండి.",
  "n_reviews": 0,
  "start": 513.4,
  "end": 519.46
 },
 {
  "input": "The negative gradient of the cost function is just a vector, it's some direction inside this insanely huge input space that tells you which nudges to all of those numbers is going to cause the most rapid decrease to the cost function.",
  "translatedText": "కాస్ట్ ఫంక్షన్ యొక్క నెగటివ్ గ్రేడియంట్ అనేది వెక్టార్ మాత్రమే, ఇది ఈ అతి పెద్ద ఇన్‌పుట్ స్పేస్‌లోని కొంత దిశలో ఉంటుంది, ఇది ఆ సంఖ్యలన్నింటికీ ఏ నడ్జ్‌లు కాస్ట్ ఫంక్షన్‌లో అత్యంత వేగంగా తగ్గుదలని కలిగిస్తుందో మీకు తెలియజేస్తుంది.",
  "n_reviews": 0,
  "start": 520.14,
  "end": 534.88
 },
 {
  "input": "And of course, with our specially designed cost function, changing the weights and biases to decrease it means making the output of the network on each piece of training data look less like a random array of 10 values, and more like an actual decision we want it to make.",
  "translatedText": "మరియు వాస్తవానికి, మా ప్రత్యేకంగా రూపొందించిన ఖర్చు ఫంక్షన్‌తో, బరువులు మరియు పక్షపాతాలను తగ్గించడానికి మార్చడం అంటే ప్రతి శిక్షణా డేటాపై నెట్‌వర్క్ అవుట్‌పుట్ 10 విలువల యాదృచ్ఛిక శ్రేణి వలె తక్కువగా కనిపించేలా చేయడం మరియు మనకు కావలసిన వాస్తవ నిర్ణయం వలె ఉంటుంది. అది చేయడానికి.",
  "n_reviews": 0,
  "start": 535.64,
  "end": 550.82
 },
 {
  "input": "It's important to remember, this cost function involves an average over all of the training data, so if you minimize it, it means it's a better performance on all of those samples.",
  "translatedText": "గుర్తుంచుకోవడం ముఖ్యం, ఈ ఖర్చు ఫంక్షన్ మొత్తం శిక్షణ డేటాపై సగటును కలిగి ఉంటుంది, కాబట్టి మీరు దానిని కనిష్టీకరించినట్లయితే, ఆ నమూనాలన్నింటిలో ఇది మెరుగైన పనితీరు అని అర్థం.",
  "n_reviews": 0,
  "start": 551.44,
  "end": 561.18
 },
 {
  "input": "The algorithm for computing this gradient efficiently, which is effectively the heart of how a neural network learns, is called backpropagation, and it's what I'm going to be talking about next video.",
  "translatedText": "ఈ గ్రేడియంట్‌ను సమర్ధవంతంగా కంప్యూటింగ్ చేయడానికి అల్గోరిథం, ఇది ఒక న్యూరల్ నెట్‌వర్క్ ఎలా నేర్చుకుంటుంది అనేదానికి ప్రభావవంతంగా గుండెకాయ, దీనిని బ్యాక్‌ప్రొపగేషన్ అంటారు మరియు నేను తదుపరి వీడియో గురించి మాట్లాడబోతున్నాను.",
  "n_reviews": 0,
  "start": 563.82,
  "end": 573.98
 },
 {
  "input": "There, I really want to take the time to walk through what exactly happens to each weight and bias for a given piece of training data, trying to give an intuitive feel for what's happening beyond the pile of relevant calculus and formulas.",
  "translatedText": "అక్కడ, నేను నిజంగా శిక్షణ డేటా యొక్క ప్రతి భాగం కోసం ప్రతి బరువు మరియు పక్షపాతంతో సరిగ్గా ఏమి జరుగుతుందో తెలుసుకోవడానికి సమయాన్ని వెచ్చించాలనుకుంటున్నాను, సంబంధిత కాలిక్యులస్ మరియు ఫార్ములాల కుప్పకు మించి ఏమి జరుగుతుందో దాని గురించి స్పష్టమైన అనుభూతిని ఇవ్వడానికి ప్రయత్నిస్తాను.",
  "n_reviews": 0,
  "start": 574.66,
  "end": 587.1
 },
 {
  "input": "Right here, right now, the main thing I want you to know, independent of implementation details, is that what we mean when we talk about a network learning is that it's just minimizing a cost function.",
  "translatedText": "ఇక్కడే, ప్రస్తుతం, మీరు తెలుసుకోవలసిన ప్రధాన విషయం ఏమిటంటే, అమలు వివరాలతో సంబంధం లేకుండా, మనం నెట్‌వర్క్ లెర్నింగ్ గురించి మాట్లాడేటప్పుడు మనం అర్థం చేసుకునేది అది కేవలం ఖర్చు ఫంక్షన్‌ను తగ్గించడం.",
  "n_reviews": 0,
  "start": 587.78,
  "end": 598.36
 },
 {
  "input": "And notice, one consequence of that is that it's important for this cost function to have a nice smooth output, so that we can find a local minimum by taking little steps downhill.",
  "translatedText": "మరియు గమనించండి, దాని యొక్క ఒక పర్యవసానమేమిటంటే, ఈ ఖర్చు ఫంక్షన్‌కు చక్కని మృదువైన అవుట్‌పుట్‌ను కలిగి ఉండటం చాలా ముఖ్యం, తద్వారా మేము దిగువకు చిన్న అడుగులు వేయడం ద్వారా స్థానిక కనిష్టాన్ని కనుగొనవచ్చు.",
  "n_reviews": 0,
  "start": 599.3,
  "end": 608.1
 },
 {
  "input": "This is why, by the way, artificial neurons have continuously ranging activations, rather than simply being active or inactive in a binary way, the way biological neurons are.",
  "translatedText": "అందుకే, కృత్రిమ న్యూరాన్‌లు జీవసంబంధమైన న్యూరాన్‌ల మాదిరిగానే బైనరీ మార్గంలో చురుకుగా లేదా క్రియారహితంగా ఉండకుండా, నిరంతరం శ్రేణి క్రియాశీలతను కలిగి ఉంటాయి.",
  "n_reviews": 0,
  "start": 609.26,
  "end": 619.14
 },
 {
  "input": "This process of repeatedly nudging an input of a function by some multiple of the negative gradient is called gradient descent.",
  "translatedText": "ప్రతికూల ప్రవణత యొక్క కొన్ని గుణిజాలతో ఫంక్షన్ యొక్క ఇన్‌పుట్‌ను పదేపదే నడ్జ్ చేసే ఈ ప్రక్రియను గ్రేడియంట్ డీసెంట్ అంటారు.",
  "n_reviews": 0,
  "start": 620.22,
  "end": 626.76
 },
 {
  "input": "It's a way to converge towards some local minimum of a cost function, basically a valley in this graph.",
  "translatedText": "ఇది ప్రాథమికంగా ఈ గ్రాఫ్‌లోని లోయలో కొంత స్థానిక కనిష్ట ధర ఫంక్షన్‌కి కలుస్తుంది.",
  "n_reviews": 0,
  "start": 627.3,
  "end": 632.58
 },
 {
  "input": "I'm still showing the picture of a function with two inputs, of course, because nudges in a 13,000 dimensional input space are a little hard to wrap your mind around, but there is a nice non-spatial way to think about this.",
  "translatedText": "నేను ఇప్పటికీ రెండు ఇన్‌పుట్‌లతో ఫంక్షన్ యొక్క చిత్రాన్ని చూపుతున్నాను, ఎందుకంటే 13,000 డైమెన్షనల్ ఇన్‌పుట్ స్పేస్‌లోని నడ్జ్‌లు మీ మనస్సును చుట్టుముట్టడం కొంచెం కష్టం, కానీ దీని గురించి ఆలోచించడానికి ఒక మంచి నాన్-స్పేషియల్ మార్గం ఉంది.",
  "n_reviews": 0,
  "start": 633.44,
  "end": 644.26
 },
 {
  "input": "Each component of the negative gradient tells us two things.",
  "translatedText": "ప్రతికూల ప్రవణత యొక్క ప్రతి భాగం మనకు రెండు విషయాలను చెబుతుంది.",
  "n_reviews": 0,
  "start": 645.08,
  "end": 648.44
 },
 {
  "input": "The sign, of course, tells us whether the corresponding component of the input vector should be nudged up or down.",
  "translatedText": "ఇన్‌పుట్ వెక్టార్ యొక్క సంబంధిత కాంపోనెంట్‌ను పైకి లేదా క్రిందికి నడ్జ్ చేయాలా వద్దా అనే విషయాన్ని గుర్తు, వాస్తవానికి తెలియజేస్తుంది.",
  "n_reviews": 0,
  "start": 649.06,
  "end": 655.14
 },
 {
  "input": "But importantly, the relative magnitudes of all these components kind of tells you which changes matter more.",
  "translatedText": "కానీ ముఖ్యంగా, ఈ అన్ని భాగాల యొక్క సాపేక్ష పరిమాణాలు ఏ మార్పులు మరింత ముఖ్యమైనవి అని మీకు తెలియజేస్తాయి.",
  "n_reviews": 0,
  "start": 655.8,
  "end": 662.72
 },
 {
  "input": "You see, in our network, an adjustment to one of the weights might have a much greater impact on the cost function than the adjustment to some other weight.",
  "translatedText": "మీరు చూస్తారు, మా నెట్‌వర్క్‌లో, కొన్ని ఇతర బరువులకు సర్దుబాటు చేయడం కంటే బరువులలో ఒకదానికి సర్దుబాటు చేయడం ధర పనితీరుపై చాలా ఎక్కువ ప్రభావాన్ని చూపుతుంది.",
  "n_reviews": 0,
  "start": 665.22,
  "end": 673.04
 },
 {
  "input": "Some of these connections just matter more for our training data.",
  "translatedText": "ఈ కనెక్షన్‌లలో కొన్ని మా శిక్షణ డేటాకు మరింత ముఖ్యమైనవి.",
  "n_reviews": 0,
  "start": 674.8,
  "end": 678.2
 },
 {
  "input": "So a way you can think about this gradient vector of our mind-warpingly massive cost function is that it encodes the relative importance of each weight and bias, that is, which of these changes is going to carry the most bang for your buck.",
  "translatedText": "కాబట్టి మీరు మా మైండ్-వార్పింగ్‌గా భారీ వ్యయ ఫంక్షన్ యొక్క ఈ గ్రేడియంట్ వెక్టర్ గురించి ఆలోచించగల మార్గం ఏమిటంటే, ఇది ప్రతి బరువు మరియు పక్షపాతం యొక్క సాపేక్ష ప్రాముఖ్యతను ఎన్కోడ్ చేస్తుంది, అంటే, ఈ మార్పులలో ఏది మీ బక్ కోసం ఎక్కువ బ్యాంగ్ తీసుకువెళుతుంది.",
  "n_reviews": 0,
  "start": 679.32,
  "end": 692.4
 },
 {
  "input": "This really is just another way of thinking about direction.",
  "translatedText": "ఇది నిజంగా దిశ గురించి ఆలోచించే మరొక మార్గం.",
  "n_reviews": 0,
  "start": 693.62,
  "end": 696.64
 },
 {
  "input": "To take a simpler example, if you have some function with two variables as an input, and you compute that its gradient at some particular point comes out as 3,1, then on the one hand you can interpret that as saying that when you're standing at that input, moving along this direction increases the function most quickly, that when you graph the function above the plane of input points, that vector is what's giving you the straight uphill direction.",
  "translatedText": "సరళమైన ఉదాహరణను తీసుకుంటే, మీరు ఇన్‌పుట్‌గా రెండు వేరియబుల్స్‌తో కొంత ఫంక్షన్‌ను కలిగి ఉంటే, మరియు మీరు నిర్దిష్ట పాయింట్‌లో దాని గ్రేడియంట్ 3,1గా వస్తుందని గణిస్తే, ఒక వైపు మీరు దానిని మీరు చెప్పినట్లు అర్థం చేసుకోవచ్చు. ఆ ఇన్‌పుట్ వద్ద నిలబడి, ఈ దిశలో కదలడం వలన ఫంక్షన్‌ని చాలా త్వరగా పెంచుతుంది, మీరు ఇన్‌పుట్ పాయింట్ల విమానం పైన ఫంక్షన్‌ను గ్రాఫ్ చేసినప్పుడు, ఆ వెక్టార్ మీకు నేరుగా పైకి దిశను ఇస్తుంది.",
  "n_reviews": 0,
  "start": 697.1,
  "end": 722.26
 },
 {
  "input": "But another way to read that is to say that changes to this first variable have 3 times the importance as changes to the second variable, that at least in the neighborhood of the relevant input, nudging the x-value carries a lot more bang for your buck.",
  "translatedText": "కానీ దానిని చదవడానికి మరొక మార్గం ఏమిటంటే, ఈ మొదటి వేరియబుల్‌కు మార్పులు రెండవ వేరియబుల్‌కు మార్పుల కంటే 3 రెట్లు ప్రాముఖ్యతను కలిగి ఉన్నాయని చెప్పడం, కనీసం సంబంధిత ఇన్‌పుట్ పరిసరాల్లో, x-విలువను నడ్జ్ చేయడం వల్ల మీ కోసం చాలా ఎక్కువ బ్యాంగ్‌ను కలిగి ఉంటుంది. బక్",
  "n_reviews": 0,
  "start": 722.86,
  "end": 736.9
 },
 {
  "input": "Let's zoom out and sum up where we are so far.",
  "translatedText": "జూమ్ అవుట్ చేసి, ఇప్పటివరకు మనం ఎక్కడ ఉన్నామో సంక్షిప్తం చేద్దాం.",
  "n_reviews": 0,
  "start": 739.88,
  "end": 742.34
 },
 {
  "input": "The network itself is this function with 784 inputs and 10 outputs, defined in terms of all these weighted sums.",
  "translatedText": "నెట్‌వర్క్ అనేది 784 ఇన్‌పుట్‌లు మరియు 10 అవుట్‌పుట్‌లతో కూడిన ఈ ఫంక్షన్, ఈ మొత్తం వెయిటెడ్ మొత్తాల పరంగా నిర్వచించబడింది.",
  "n_reviews": 0,
  "start": 742.84,
  "end": 750.04
 },
 {
  "input": "The cost function is a layer of complexity on top of that.",
  "translatedText": "ఖర్చు ఫంక్షన్ దాని పైన సంక్లిష్టత యొక్క పొర.",
  "n_reviews": 0,
  "start": 750.64,
  "end": 753.68
 },
 {
  "input": "It takes the 13,000 weights and biases as inputs and spits out a single measure of lousiness based on the training examples.",
  "translatedText": "ఇది 13,000 బరువులు మరియు పక్షపాతాలను ఇన్‌పుట్‌లుగా తీసుకుంటుంది మరియు శిక్షణా ఉదాహరణల ఆధారంగా ఒకే కొలమానాన్ని ఉమ్మివేస్తుంది.",
  "n_reviews": 0,
  "start": 753.98,
  "end": 761.72
 },
 {
  "input": "And the gradient of the cost function is one more layer of complexity still.",
  "translatedText": "మరియు వ్యయ ఫంక్షన్ యొక్క గ్రేడియంట్ ఇప్పటికీ సంక్లిష్టత యొక్క మరొక పొర.",
  "n_reviews": 0,
  "start": 762.44,
  "end": 766.9
 },
 {
  "input": "It tells us what nudges to all these weights and biases cause the fastest change to the value of the cost function, which you might interpret as saying which changes to which weights matter the most.",
  "translatedText": "ఈ అన్ని బరువులు మరియు పక్షపాతాలు ధర ఫంక్షన్ యొక్క విలువలో వేగవంతమైన మార్పుకు కారణమయ్యే వాటిని మాకు తెలియజేస్తుంది, ఇది మీరు ఏ బరువులకు అత్యంత ముఖ్యమైన మార్పులు అని అర్థం చేసుకోవచ్చు.",
  "n_reviews": 0,
  "start": 767.36,
  "end": 777.88
 },
 {
  "input": "So, when you initialize the network with random weights and biases, and adjust them many times based on this gradient descent process, how well does it actually perform on images it's never seen before?",
  "translatedText": "కాబట్టి, మీరు యాదృచ్ఛిక బరువులు మరియు పక్షపాతాలతో నెట్‌వర్క్‌ను ప్రారంభించినప్పుడు మరియు ఈ గ్రేడియంట్ అవరోహణ ప్రక్రియ ఆధారంగా వాటిని చాలాసార్లు సర్దుబాటు చేసినప్పుడు, ఇది ఇంతకు ముందెన్నడూ చూడని చిత్రాలపై ఎంత బాగా పని చేస్తుంది?",
  "n_reviews": 0,
  "start": 782.56,
  "end": 793.2
 },
 {
  "input": "The one I've described here, with the two hidden layers of 16 neurons each, chosen mostly for aesthetic reasons, is not bad, classifying about 96% of the new images it sees correctly.",
  "translatedText": "నేను ఇక్కడ వివరించినది, 16 న్యూరాన్‌ల యొక్క రెండు దాచిన పొరలతో, ఎక్కువగా సౌందర్య కారణాల కోసం ఎంపిక చేయబడింది, ఇది చెడ్డది కాదు, ఇది సరిగ్గా చూసే 96% కొత్త చిత్రాలను వర్గీకరిస్తుంది.",
  "n_reviews": 0,
  "start": 794.1,
  "end": 805.96
 },
 {
  "input": "And honestly, if you look at some of the examples it messes up on, you feel compelled to cut it a little slack.",
  "translatedText": "మరియు నిజాయితీగా, మీరు అది గందరగోళానికి గురిచేసే కొన్ని ఉదాహరణలను చూస్తే, మీరు దానిని కొంచెం మందగించవలసి వస్తుంది.",
  "n_reviews": 0,
  "start": 806.68,
  "end": 812.54
 },
 {
  "input": "Now if you play around with the hidden layer structure and make a couple tweaks, you can get this up to 98%.",
  "translatedText": "ఇప్పుడు మీరు దాచిన లేయర్ స్ట్రక్చర్‌తో ప్లే చేసి, రెండు ట్వీక్‌లు చేస్తే, మీరు దీన్ని 98% వరకు పొందవచ్చు.",
  "n_reviews": 0,
  "start": 816.22,
  "end": 821.76
 },
 {
  "input": "And that's pretty good!",
  "translatedText": "మరియు అది చాలా బాగుంది!",
  "n_reviews": 0,
  "start": 821.76,
  "end": 822.72
 },
 {
  "input": "It's not the best, you can certainly get better performance by getting more sophisticated than this plain vanilla network, but given how daunting the initial task is, I think there's something incredible about any network doing this well on images it's never seen before, given that we never specifically told it what patterns to look for.",
  "translatedText": "ఇది ఉత్తమమైనది కాదు, మీరు ఈ సాదా వెనీలా నెట్‌వర్క్ కంటే మరింత అధునాతనంగా ఉండటం ద్వారా ఖచ్చితంగా మెరుగైన పనితీరును పొందవచ్చు, కానీ ప్రారంభ పని ఎంత నిరుత్సాహకరంగా ఉందో చూస్తే, ఏ నెట్‌వర్క్ ఇంతకు ముందెన్నడూ చూడని చిత్రాలపై దీన్ని బాగా చేయడంలో అద్భుతమైన ఏదో ఉందని నేను భావిస్తున్నాను. ఏ నమూనాల కోసం చూడాలో మేము ప్రత్యేకంగా చెప్పలేదు.",
  "n_reviews": 0,
  "start": 823.02,
  "end": 841.42
 },
 {
  "input": "Originally, the way I motivated this structure was by describing a hope we might have, that the second layer might pick up on little edges, that the third layer would piece together those edges to recognize loops and longer lines, and that those might be pieced together to recognize digits.",
  "translatedText": "నిజానికి, నేను ఈ నిర్మాణాన్ని ప్రేరేపించిన విధానం ఏమిటంటే, మనం కలిగి ఉండగల ఒక ఆశను వివరించడం ద్వారా, రెండవ పొర చిన్న అంచులపైకి ఎదగవచ్చు, మూడవ పొర లూప్‌లు మరియు పొడవైన పంక్తులను గుర్తించడానికి ఆ అంచులను ఒకచోట చేర్చుతుంది మరియు వాటిని ముక్కలు చేయవచ్చు. అంకెలను గుర్తించడానికి కలిసి.",
  "n_reviews": 0,
  "start": 842.56,
  "end": 857.18
 },
 {
  "input": "So is this what our network is actually doing?",
  "translatedText": "నిజానికి మన నెట్‌వర్క్ చేస్తున్నది ఇదేనా?",
  "n_reviews": 0,
  "start": 857.96,
  "end": 860.4
 },
 {
  "input": "Well, for this one at least, not at all.",
  "translatedText": "సరే, దీని కోసం కనీసం, అస్సలు కాదు.",
  "n_reviews": 0,
  "start": 861.08,
  "end": 864.4
 },
 {
  "input": "Remember how last video we looked at how the weights of the connections from all the neurons in the first layer to a given neuron in the second layer can be visualized as a given pixel pattern that the second layer neuron is picking up on?",
  "translatedText": "మొదటి లేయర్‌లోని అన్ని న్యూరాన్‌ల నుండి రెండవ లేయర్‌లోని ఇచ్చిన న్యూరాన్‌కి కనెక్షన్‌ల బరువులు రెండవ లేయర్ న్యూరాన్ పొందుతున్న ఇచ్చిన పిక్సెల్ నమూనాగా ఎలా విజువలైజ్ చేయబడతాయో మనం చివరిగా ఎలా చూశామో గుర్తుందా?",
  "n_reviews": 0,
  "start": 864.82,
  "end": 877.06
 },
 {
  "input": "Well, when we actually do that for the weights associated with these transitions, from the first layer to the next, instead of picking up on isolated little edges here and there, they look, well, almost random, just with some very loose patterns in the middle there.",
  "translatedText": "సరే, ఈ పరివర్తనలతో అనుబంధించబడిన బరువుల కోసం మనం నిజంగా చేసినప్పుడు, మొదటి లేయర్ నుండి తదుపరి వరకు, ఇక్కడ మరియు అక్కడక్కడ వేరుచేయబడిన చిన్న అంచులను ఎంచుకునే బదులు, అవి దాదాపు యాదృచ్ఛికంగా కనిపిస్తాయి, కొన్ని చాలా వదులుగా ఉండే నమూనాలతో అక్కడ మధ్యలో.",
  "n_reviews": 0,
  "start": 877.78,
  "end": 893.68
 },
 {
  "input": "It would seem that in the unfathomably large 13,000 dimensional space of possible weights and biases, our network found itself a happy little local minimum that, despite successfully classifying most images, doesn't exactly pick up on the patterns we might have hoped for.",
  "translatedText": "13,000 డైమెన్షనల్ స్పేస్‌లో సాధ్యమయ్యే బరువులు మరియు పక్షపాతాలతో, మా నెట్‌వర్క్ చాలా చిత్రాలను విజయవంతంగా వర్గీకరించినప్పటికీ, మనం ఆశించిన నమూనాలను సరిగ్గా అందుకోలేనంత సంతోషకరమైన స్థానిక కనిష్టంగా ఉన్నట్లు అనిపిస్తుంది.",
  "n_reviews": 0,
  "start": 893.76,
  "end": 908.96
 },
 {
  "input": "And to really drive this point home, watch what happens when you input a random image.",
  "translatedText": "మరియు నిజంగా ఈ పాయింట్‌ని ఇంటికి తీసుకెళ్లడానికి, మీరు యాదృచ్ఛిక చిత్రాన్ని ఇన్‌పుట్ చేసినప్పుడు ఏమి జరుగుతుందో చూడండి.",
  "n_reviews": 0,
  "start": 909.78,
  "end": 913.82
 },
 {
  "input": "If the system was smart, you might expect it to feel uncertain, maybe not really activating any of those 10 output neurons or activating them all evenly, but instead it confidently gives you some nonsense answer, as if it feels as sure that this random noise is a 5 as it does that an actual image of a 5 is a 5.",
  "translatedText": "సిస్టమ్ స్మార్ట్‌గా ఉంటే, అది అనిశ్చితంగా ఉంటుందని మీరు ఆశించవచ్చు, బహుశా ఆ 10 అవుట్‌పుట్ న్యూరాన్‌లలో దేనినైనా సక్రియం చేయకపోవచ్చు లేదా వాటన్నింటిని సమానంగా యాక్టివేట్ చేయకపోవచ్చు, కానీ బదులుగా ఇది మీకు నమ్మకంగా కొన్ని అర్ధంలేని సమాధానం ఇస్తుంది, ఈ యాదృచ్ఛిక శబ్దం ఖచ్చితంగా అనిపిస్తుంది. 5 అంటే 5 యొక్క వాస్తవ చిత్రం 5.",
  "n_reviews": 0,
  "start": 914.32,
  "end": 934.16
 },
 {
  "input": "Phrased differently, even if this network can recognize digits pretty well, it has no idea how to draw them.",
  "translatedText": "విభిన్న పదజాలంతో, ఈ నెట్‌వర్క్ అంకెలను చక్కగా గుర్తించగలిగినప్పటికీ, వాటిని ఎలా గీయాలి అనే ఆలోచన దీనికి లేదు.",
  "n_reviews": 0,
  "start": 934.54,
  "end": 940.7
 },
 {
  "input": "A lot of this is because it's such a tightly constrained training setup.",
  "translatedText": "ఇది చాలా కఠినంగా నిర్బంధించబడిన శిక్షణా సెటప్ కాబట్టి.",
  "n_reviews": 0,
  "start": 941.42,
  "end": 945.24
 },
 {
  "input": "I mean, put yourself in the network's shoes here.",
  "translatedText": "నా ఉద్దేశ్యం, ఇక్కడ నెట్‌వర్క్ షూస్‌లో మిమ్మల్ని మీరు ఉంచుకోండి.",
  "n_reviews": 0,
  "start": 945.88,
  "end": 947.74
 },
 {
  "input": "From its point of view, the entire universe consists of nothing but clearly defined unmoving digits centered in a tiny grid, and its cost function never gave it any incentive to be anything but utterly confident in its decisions.",
  "translatedText": "దాని దృక్కోణం నుండి, మొత్తం విశ్వం ఒక చిన్న గ్రిడ్‌లో కేంద్రీకృతమై స్పష్టంగా నిర్వచించబడిన కదలని అంకెలు తప్ప మరేమీ కలిగి ఉండదు మరియు దాని వ్యయ పనితీరు దాని నిర్ణయాలపై పూర్తిగా నమ్మకంగా ఉండేందుకు ఎటువంటి ప్రోత్సాహాన్ని అందించలేదు.",
  "n_reviews": 0,
  "start": 948.14,
  "end": 961.08
 },
 {
  "input": "So with this as the image of what those second layer neurons are really doing, you might wonder why I would introduce this network with the motivation of picking up on edges and patterns.",
  "translatedText": "కాబట్టి ఆ రెండవ పొర న్యూరాన్‌లు నిజంగా ఏమి చేస్తున్నాయో దాని చిత్రంగా, అంచులు మరియు నమూనాలను తీయడానికి ప్రేరణతో నేను ఈ నెట్‌వర్క్‌ను ఎందుకు పరిచయం చేస్తానని మీరు ఆశ్చర్యపోవచ్చు.",
  "n_reviews": 0,
  "start": 962.12,
  "end": 969.92
 },
 {
  "input": "I mean, that's just not at all what it ends up doing.",
  "translatedText": "నా ఉద్దేశ్యం, అది పూర్తి చేసేది కాదు.",
  "n_reviews": 0,
  "start": 969.92,
  "end": 972.3
 },
 {
  "input": "Well, this is not meant to be our end goal, but instead a starting point.",
  "translatedText": "సరే, ఇది మా అంతిమ లక్ష్యం కాదు, బదులుగా ఒక ప్రారంభ స్థానం.",
  "n_reviews": 0,
  "start": 973.38,
  "end": 977.18
 },
 {
  "input": "Frankly, this is old technology, the kind researched in the 80s and 90s, and you do need to understand it before you can understand more detailed modern variants, and it clearly is capable of solving some interesting problems, but the more you dig into what those hidden layers are really doing, the less intelligent it seems.",
  "translatedText": "స్పష్టముగా, ఇది పాత సాంకేతికత, 80 మరియు 90 లలో పరిశోధించబడిన రకం, మరియు మీరు మరింత వివరణాత్మక ఆధునిక రూపాంతరాలను అర్థం చేసుకునే ముందు మీరు దానిని అర్థం చేసుకోవాలి మరియు ఇది స్పష్టంగా కొన్ని ఆసక్తికరమైన సమస్యలను పరిష్కరించగలదు, కానీ మీరు దేని గురించి మరింత తవ్వుతారు ఆ దాచిన పొరలు నిజంగా చేస్తున్నాయి, తక్కువ తెలివితేటలు కనిపిస్తున్నాయి.",
  "n_reviews": 0,
  "start": 977.64,
  "end": 994.74
 },
 {
  "input": "Shifting the focus for a moment from how networks learn to how you learn, that'll only happen if you engage actively with the material here somehow.",
  "translatedText": "నెట్‌వర్క్‌లు ఎలా నేర్చుకుంటాయనే దాని నుండి మీరు ఎలా నేర్చుకుంటారు అనేదానికి ఫోకస్‌ని ఒక క్షణం మార్చడం, మీరు ఏదో ఒకవిధంగా ఇక్కడ ఉన్న మెటీరియల్‌తో చురుకుగా పాల్గొంటేనే అది జరుగుతుంది.",
  "n_reviews": 0,
  "start": 998.48,
  "end": 1006.3
 },
 {
  "input": "One pretty simple thing I want you to do is just pause right now and think deeply for a moment about what changes you might make to this system and how it perceives images if you wanted it to better pick up on things like edges and patterns.",
  "translatedText": "మీరు చేయాలనుకుంటున్న ఒక అందమైన సాధారణ విషయం ఏమిటంటే, ఇప్పుడే పాజ్ చేయండి మరియు మీరు ఈ సిస్టమ్‌లో ఎలాంటి మార్పులు చేయవచ్చు మరియు అంచులు మరియు నమూనాల వంటి వాటిని మెరుగ్గా ఎంచుకోవాలని మీరు కోరుకుంటే అది చిత్రాలను ఎలా గ్రహిస్తుంది అనే దాని గురించి ఒక్క క్షణం లోతుగా ఆలోచించండి.",
  "n_reviews": 0,
  "start": 1007.06,
  "end": 1020.88
 },
 {
  "input": "But better than that, to actually engage with the material, I highly recommend the book by Michael Nielsen on deep learning and neural networks.",
  "translatedText": "కానీ దాని కంటే మెరుగ్గా, వాస్తవానికి మెటీరియల్‌తో నిమగ్నమవ్వడానికి, లోతైన అభ్యాసం మరియు న్యూరల్ నెట్‌వర్క్‌లపై మైఖేల్ నీల్సన్ పుస్తకాన్ని నేను బాగా సిఫార్సు చేస్తున్నాను.",
  "n_reviews": 0,
  "start": 1021.48,
  "end": 1029.1
 },
 {
  "input": "In it, you can find the code and the data to download and play with for this exact example, and the book will walk you through step by step what that code is doing.",
  "translatedText": "దీనిలో, మీరు ఈ ఖచ్చితమైన ఉదాహరణ కోసం డౌన్‌లోడ్ చేయడానికి మరియు ప్లే చేయడానికి కోడ్ మరియు డేటాను కనుగొనవచ్చు మరియు పుస్తకం ఆ కోడ్ ఏమి చేస్తుందో దశలవారీగా మీకు తెలియజేస్తుంది.",
  "n_reviews": 0,
  "start": 1029.68,
  "end": 1038.36
 },
 {
  "input": "What's awesome is that this book is free and publicly available, so if you do get something out of it, consider joining me in making a donation towards Nielsen's efforts.",
  "translatedText": "అద్భుతం ఏమిటంటే, ఈ పుస్తకం ఉచితం మరియు పబ్లిక్‌గా అందుబాటులో ఉంది, కాబట్టి మీరు దాని నుండి ఏదైనా పొందినట్లయితే, నీల్సన్ ప్రయత్నాల కోసం విరాళం ఇవ్వడంలో నాతో చేరండి.",
  "n_reviews": 0,
  "start": 1039.3,
  "end": 1047.66
 },
 {
  "input": "I've also linked a couple other resources I like a lot in the description, including the phenomenal and beautiful blog post by Chris Ola and the articles in Distill.",
  "translatedText": "నేను క్రిస్ ఓలా యొక్క అద్భుతమైన మరియు అందమైన బ్లాగ్ పోస్ట్ మరియు డిస్టిల్‌లోని కథనాలతో సహా వివరణలో నాకు చాలా నచ్చిన రెండు ఇతర వనరులను కూడా లింక్ చేసాను.",
  "n_reviews": 0,
  "start": 1047.66,
  "end": 1056.5
 },
 {
  "input": "To close things off here for the last few minutes, I want to jump back into a snippet of the interview I had with Leisha Lee.",
  "translatedText": "గత కొన్ని నిమిషాలు ఇక్కడ విషయాలను మూసివేయడానికి, నేను లీషా లీతో చేసిన ఇంటర్వ్యూ యొక్క స్నిప్పెట్‌లోకి తిరిగి వెళ్లాలనుకుంటున్నాను.",
  "n_reviews": 0,
  "start": 1058.28,
  "end": 1063.88
 },
 {
  "input": "You might remember her from the last video, she did her PhD work in deep learning.",
  "translatedText": "చివరి వీడియో నుండి మీరు ఆమెను గుర్తుంచుకోవచ్చు, ఆమె లోతైన అభ్యాసంలో ఆమె PhD పని చేసింది.",
  "n_reviews": 0,
  "start": 1064.3,
  "end": 1067.72
 },
 {
  "input": "In this little snippet she talks about two recent papers that really dig into how some of the more modern image recognition networks are actually learning.",
  "translatedText": "ఈ చిన్న స్నిప్పెట్‌లో ఆమె కొన్ని ఆధునిక ఇమేజ్ రికగ్నిషన్ నెట్‌వర్క్‌లు వాస్తవానికి ఎలా నేర్చుకుంటున్నాయో నిజంగా త్రవ్విన రెండు ఇటీవలి పేపర్ల గురించి మాట్లాడుతుంది.",
  "n_reviews": 0,
  "start": 1068.3,
  "end": 1075.78
 },
 {
  "input": "Just to set up where we were in the conversation, the first paper took one of these particularly deep neural networks that's really good at image recognition, and instead of training it on a properly labeled dataset, shuffled all the labels around before training.",
  "translatedText": "మేము సంభాషణలో ఉన్న చోట సెటప్ చేయడానికి, మొదటి పేపర్ ఇమేజ్ రికగ్నిషన్‌లో నిజంగా మంచి ఈ డీప్ న్యూరల్ నెట్‌వర్క్‌లలో ఒకదాన్ని తీసుకుంది మరియు సరిగ్గా లేబుల్ చేయబడిన డేటాసెట్‌లో శిక్షణ ఇవ్వడానికి బదులుగా, శిక్షణకు ముందు చుట్టూ ఉన్న అన్ని లేబుల్‌లను షఫుల్ చేసింది.",
  "n_reviews": 0,
  "start": 1076.12,
  "end": 1088.74
 },
 {
  "input": "Obviously the testing accuracy here was no better than random, since everything is just randomly labeled, but it was still able to achieve the same training accuracy as you would on a properly labeled dataset.",
  "translatedText": "సహజంగానే ఇక్కడ టెస్టింగ్ ఖచ్చితత్వం యాదృచ్ఛికం కంటే మెరుగైనది కాదు, ఎందుకంటే ప్రతిదీ యాదృచ్ఛికంగా లేబుల్ చేయబడింది, కానీ సరిగ్గా లేబుల్ చేయబడిన డేటాసెట్‌లో మీరు సాధించిన అదే శిక్షణ ఖచ్చితత్వాన్ని ఇది ఇప్పటికీ సాధించగలిగింది.",
  "n_reviews": 0,
  "start": 1089.48,
  "end": 1100.88
 },
 {
  "input": "Basically, the millions of weights for this particular network were enough for it to just memorize the random data, which raises the question for whether minimizing this cost function actually corresponds to any sort of structure in the image, or is it just memorization?",
  "translatedText": "ప్రాథమికంగా, ఈ నిర్దిష్ట నెట్‌వర్క్‌కు మిలియన్ల బరువులు కేవలం యాదృచ్ఛిక డేటాను గుర్తుంచుకోవడానికి సరిపోతాయి, ఈ ఖర్చు ఫంక్షన్‌ను తగ్గించడం అనేది చిత్రంలో ఏ విధమైన నిర్మాణానికి అనుగుణంగా ఉంటుందా అనే ప్రశ్నను లేవనెత్తుతుంది లేదా ఇది కేవలం జ్ఞాపకం ఉందా?",
  "n_reviews": 0,
  "start": 1101.6,
  "end": 1116.4
 },
 {
  "input": "If you look at that accuracy curve, if you were just training on a random dataset, that curve sort of went down very slowly in almost kind of a linear fashion, so you're really struggling to find that local minima of possible, you know, the right weights that would get you that accuracy.",
  "translatedText": "మీరు ఆ ఖచ్చితత్వ వక్రతను పరిశీలిస్తే, మీరు కేవలం యాదృచ్ఛిక డేటాసెట్‌లో శిక్షణ పొందుతున్నట్లయితే, ఆ వక్రరేఖ దాదాపు సరళ పద్ధతిలో చాలా నెమ్మదిగా తగ్గుతుంది, కాబట్టి మీరు సాధ్యమయ్యే స్థానిక కనిష్టాన్ని కనుగొనడంలో నిజంగా కష్టపడుతున్నారని మీకు తెలుసు. , మీరు ఆ ఖచ్చితత్వాన్ని పొందే సరైన బరువులు.",
  "n_reviews": 0,
  "start": 1131.44,
  "end": 1152.14
 },
 {
  "input": "Whereas if you're actually training on a structured dataset, one that has the right labels, you fiddle around a little bit in the beginning, but then you kind of dropped very fast to get to that accuracy level, and so in some sense it was easier to find that local maxima.",
  "translatedText": "అయితే మీరు నిజంగా నిర్మాణాత్మక డేటాసెట్‌పై శిక్షణ పొందుతున్నట్లయితే, సరైన లేబుల్‌లను కలిగి ఉన్నట్లయితే, మీరు ప్రారంభంలో కొంచెం ఫిడేలు చేస్తారు, కానీ మీరు ఆ ఖచ్చితత్వ స్థాయికి చేరుకోవడానికి చాలా వేగంగా పడిపోయారు మరియు కొంత కోణంలో అది స్థానిక గరిష్టాన్ని కనుగొనడం సులభం.",
  "n_reviews": 0,
  "start": 1152.24,
  "end": 1168.22
 },
 {
  "input": "And so what was also interesting about that is it brings into light another paper from actually a couple of years ago, which has a lot more simplifications about the network layers, but one of the results was saying how if you look at the optimization landscape, the local minima that these networks tend to learn are actually of equal quality, so in some sense if your dataset is structured, you should be able to find that much more easily.",
  "translatedText": "మరియు దాని గురించి ఆసక్తికరమైన విషయం ఏమిటంటే, వాస్తవానికి కొన్ని సంవత్సరాల క్రితం నుండి మరొక కాగితాన్ని వెలుగులోకి తెస్తుంది, ఇది నెట్‌వర్క్ లేయర్‌ల గురించి చాలా ఎక్కువ సరళీకరణలను కలిగి ఉంది, అయితే ఫలితాలలో ఒకటి మీరు ఆప్టిమైజేషన్ ల్యాండ్‌స్కేప్‌ను చూస్తే ఎలా అని చెబుతోంది, ఈ నెట్‌వర్క్‌లు నేర్చుకునే లోకల్ మినిమా వాస్తవానికి సమాన నాణ్యతతో ఉంటుంది, కాబట్టి కొంత కోణంలో మీ డేటాసెట్ నిర్మాణాత్మకంగా ఉంటే, మీరు దానిని మరింత సులభంగా కనుగొనగలరు.",
  "n_reviews": 0,
  "start": 1168.54,
  "end": 1194.32
 },
 {
  "input": "My thanks, as always, to those of you supporting on Patreon.",
  "translatedText": "ఎప్పటిలాగే, మీలో పాట్రియన్‌కు మద్దతు ఇస్తున్న వారికి నా ధన్యవాదాలు.",
  "n_reviews": 0,
  "start": 1198.16,
  "end": 1201.18
 },
 {
  "input": "I've said before just what a game changer Patreon is, but these videos really would not be possible without you.",
  "translatedText": "పాట్రియన్ గేమ్ ఛేంజర్ అంటే ఏమిటో నేను ముందే చెప్పాను, కానీ మీరు లేకుండా ఈ వీడియోలు నిజంగా సాధ్యం కాదు.",
  "n_reviews": 0,
  "start": 1201.52,
  "end": 1206.8
 },
 {
  "input": "I also want to give a special thanks to the VC firm Amplify Partners, in their support of these initial videos in the series.",
  "translatedText": "సిరీస్‌లోని ఈ ప్రారంభ వీడియోలకు మద్దతుగా VC సంస్థ యాంప్లిఫై పార్ట్‌నర్‌లకు కూడా నేను ప్రత్యేక ధన్యవాదాలు చెప్పాలనుకుంటున్నాను.",
  "n_reviews": 0,
  "start": 1207.46,
  "end": 1212.78
 }
]