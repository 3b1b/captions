[
 {
  "input": "Last video I laid out the structure of a neural network. ",
  "translatedText": "У минулому відео я описав структуру нейронної мережі. ",
  "model": "nmt",
  "time_range": [
   0.0,
   7.24
  ]
 },
 {
  "input": "I'll give a quick recap here so that it's fresh in our minds, and then I have two main goals for this video. ",
  "translatedText": "Я дам тут короткий підсумок, щоб це було свіжим у нашій пам’яті, а потім у мене є дві головні цілі для цього відео. ",
  "model": "nmt",
  "time_range": [
   7.24,
   13.16
  ]
 },
 {
  "input": "The first is to introduce the idea of gradient descent, which underlies not only how neural networks learn, but how a lot of other machine learning works as well. ",
  "translatedText": "Перший полягає в тому, щоб представити ідею градієнтного спуску, яка лежить в основі не тільки того, як навчаються нейронні мережі, але й того, як працює багато інших машинного навчання. ",
  "model": "nmt",
  "time_range": [
   13.16,
   20.8
  ]
 },
 {
  "input": "Then after that we'll dig in a little more into how this particular network performs, and what those hidden layers of neurons end up looking for. ",
  "translatedText": "Після цього ми детальніше розглянемо, як працює ця конкретна мережа, і що шукають ці приховані шари нейронів. ",
  "model": "nmt",
  "time_range": [
   20.8,
   29.56
  ]
 },
 {
  "input": "As a reminder, our goal here is the classic example of handwritten digit recognition, the hello world of neural networks. ",
  "translatedText": "Нагадуємо, що нашою метою тут є класичний приклад розпізнавання рукописних цифр, привіт, світ нейронних мереж. ",
  "model": "nmt",
  "time_range": [
   29.56,
   37.08
  ]
 },
 {
  "input": "These digits are rendered on a 28x28 pixel grid, each pixel with some grayscale value between 0 and 1. ",
  "translatedText": "Ці цифри відображаються на сітці 28x28 пікселів, кожен піксель має значення відтінків сірого від 0 до 1. ",
  "model": "nmt",
  "time_range": [
   37.08,
   44.26
  ]
 },
 {
  "input": "Those are what determine the activations of 784 neurons in the input layer of the network. ",
  "translatedText": "Саме вони визначають активацію 784 нейронів на вхідному рівні мережі. ",
  "model": "nmt",
  "time_range": [
   44.26,
   51.4
  ]
 },
 {
  "input": "The activation for each neuron in the following layers is based on a weighted sum of all the activations in the previous layer, plus some special number called a bias. ",
  "translatedText": "Активація для кожного нейрона в наступних шарах базується на зваженій сумі всіх активацій у попередньому шарі, плюс деяке спеціальне число, яке називається зміщенням. ",
  "model": "nmt",
  "time_range": [
   51.4,
   62.3
  ]
 },
 {
  "input": "You compose that sum with some other function, like the sigmoid squishification, or a ReLU, the way I walked through last video. ",
  "translatedText": "Ви складаєте цю суму за допомогою якоїсь іншої функції, як-от сигмоїда, або ReLU, як я пройшов у минулому відео. ",
  "model": "nmt",
  "time_range": [
   62.3,
   69.64
  ]
 },
 {
  "input": "In total, given the somewhat arbitrary choice of two hidden layers with 16 neurons each, the network has about 13,000 weights and biases that we can adjust, and it's these values that determine what exactly the network actually does. ",
  "translatedText": "Загалом, враховуючи дещо довільний вибір двох прихованих шарів із 16 нейронами кожен, мережа має близько 13 000 ваг і зміщень, які ми можемо налаштувати, і саме ці значення визначають, що саме мережа насправді робить. ",
  "model": "nmt",
  "time_range": [
   69.64,
   85.32
  ]
 },
 {
  "input": "And what we mean when we say that this network classifies a given digit is that the brightest of those 10 neurons in the final layer corresponds to that digit. ",
  "translatedText": "Коли ми кажемо, що ця мережа класифікує певну цифру, ми маємо на увазі те, що найяскравіший із 10 нейронів останнього шару відповідає цій цифрі. ",
  "model": "nmt",
  "time_range": [
   85.32,
   94.08
  ]
 },
 {
  "input": "And remember, the motivation we had in mind for the layered structure was that maybe the second layer could pick up on the edges, the third layer might pick up on patterns like loops and lines, and the last one could just piece together those patterns to recognize digits. ",
  "translatedText": "І пам’ятайте, мотивація, яку ми мали на увазі для багатошарової структури, полягала в тому, що, можливо, другий шар міг би підхопити краї, третій шар міг би підхопити візерунки, як-от петлі та лінії, а останній міг би просто з’єднати ці візерунки, щоб розпізнавати цифри. ",
  "model": "nmt",
  "time_range": [
   94.08,
   109.64
  ]
 },
 {
  "input": "So here, we learn how the network learns. ",
  "translatedText": "Отже, ми дізнаємося, як навчається мережа. ",
  "model": "nmt",
  "time_range": [
   109.64,
   112.88
  ]
 },
 {
  "input": "What we want is an algorithm where you can show this network a whole bunch of training data, which comes in the form of a bunch of different images of handwritten digits, along with labels for what they're supposed to be, and it'll adjust those 13,000 weights and biases so as to improve its performance on the training data. ",
  "translatedText": "Те, що ми хочемо, — це алгоритм, за допомогою якого ви можете показати цій мережі цілий набір навчальних даних, які надходять у формі набору різних зображень рукописних цифр разом із мітками, якими вони мають бути, і це буде відкоригувати ці 13 000 ваг і зміщень, щоб покращити ефективність тренувальних даних. ",
  "model": "nmt",
  "time_range": [
   112.88,
   130.76
  ]
 },
 {
  "input": "Hopefully this layered structure will mean that what it learns generalizes to images beyond that training data. ",
  "translatedText": "Сподіваюся, ця багаторівнева структура означатиме, що те, що вона вивчає, узагальнює зображення за межами навчальних даних. ",
  "model": "nmt",
  "time_range": [
   130.76,
   137.84
  ]
 },
 {
  "input": "The way we test that is that after you train the network, you show it more labeled data, and you see how accurately it classifies those new images. ",
  "translatedText": "Ми перевіряємо це так: після навчання мережі ви показуєте їй більше позначених даних і бачите, наскільки точно вона класифікує ці нові зображення. ",
  "model": "nmt",
  "time_range": [
   137.84,
   151.16
  ]
 },
 {
  "input": "Fortunately for us, and what makes this a common example to start with, is that the good people behind the MNIST database have put together a collection of tens of thousands of handwritten digit images, each labeled with the numbers they're supposed to be. ",
  "translatedText": "На щастя для нас, і те, що робить цей приклад типовим для початку, полягає в тому, що хороші люди, що стоять за базою даних MNIST, зібрали колекцію з десятків тисяч рукописних зображень цифр, кожне з яких позначено номерами, якими вони повинні бути. ",
  "model": "nmt",
  "time_range": [
   151.16,
   165.08
  ]
 },
 {
  "input": "And as provocative as it is to describe a machine as learning, once you see how it works, it feels a lot less like some crazy sci-fi premise, and a lot more like a calculus exercise. ",
  "translatedText": "І як би не було провокаційно описувати машину як навчальну, коли ви бачите, як вона працює, це стає набагато менше схожим на якусь божевільну науково-фантастичну передумову, а набагато більше схоже на вправу з обчислення. ",
  "model": "nmt",
  "time_range": [
   165.08,
   175.56
  ]
 },
 {
  "input": "I mean, basically it comes down to finding the minimum of a certain function. ",
  "translatedText": "Я маю на увазі, що в основному це зводиться до пошуку мінімуму певної функції. ",
  "model": "nmt",
  "time_range": [
   175.56,
   181.04
  ]
 },
 {
  "input": "Remember, conceptually we're thinking of each neuron as being connected to all of the neurons in the previous layer, and the weights in the weighted sum defining its activation are kind of like the strengths of those connections, and the bias is some indication of whether that neuron tends to be active or inactive. ",
  "translatedText": "Пам’ятайте, концептуально ми думаємо про те, що кожен нейрон пов’язаний з усіма нейронами попереднього шару, і ваги у зваженій сумі, що визначає його активацію, схожі на силу цих зв’язків, а зміщення є певним показником чи цей нейрон має тенденцію бути активним чи неактивним. ",
  "model": "nmt",
  "time_range": [
   181.04,
   199.78
  ]
 },
 {
  "input": "And to start things off, we're just going to initialize all of those weights and biases totally randomly. ",
  "translatedText": "І для початку ми просто ініціалізуємо всі ці ваги та зміщення абсолютно випадковим чином. ",
  "model": "nmt",
  "time_range": [
   199.78,
   205.02
  ]
 },
 {
  "input": "Needless to say, this network is going to perform horribly on a given training example, since it's just doing something random. ",
  "translatedText": "Зайве говорити, що ця мережа працюватиме жахливо на даному навчальному прикладі, оскільки вона просто робить щось випадкове. ",
  "model": "nmt",
  "time_range": [
   205.02,
   211.18
  ]
 },
 {
  "input": "For example, you feed in this image of a 3, and the output layer just looks like a mess. ",
  "translatedText": "Наприклад, ви подаєте на це зображення 3, а вихідний шар виглядає просто безладом. ",
  "model": "nmt",
  "time_range": [
   211.18,
   216.82
  ]
 },
 {
  "input": "So what you do is define a cost function, a way of telling the computer, no, bad computer, that output should have activations which are 0 for most neurons, but 1 for this neuron. ",
  "translatedText": "Отже, що ви робите, це визначаєте функцію вартості, спосіб сказати комп’ютеру, ні, поганий комп’ютер, що вихід має мати активації, які дорівнюють 0 для більшості нейронів, але 1 для цього нейрона. ",
  "model": "nmt",
  "time_range": [
   216.82,
   228.94
  ]
 },
 {
  "input": "What you gave me is utter trash. ",
  "translatedText": "Те, що ти мені дав, це чисте сміття. ",
  "model": "nmt",
  "time_range": [
   228.94,
   231.74
  ]
 },
 {
  "input": "To say that a little more mathematically, you add up the squares of the differences between each of those trash output activations and the value you want them to have, and this is what we'll call the cost of a single training example. ",
  "translatedText": "Якщо говорити трохи математичніше, ви складаєте квадрати різниць між кожною з цих активацій виведення сміття та значенням, яке ви хочете, щоб вони мали, і це те, що ми називатимемо вартістю одного навчального прикладу. ",
  "model": "nmt",
  "time_range": [
   231.74,
   246.02
  ]
 },
 {
  "input": "Notice this sum is small when the network confidently classifies the image correctly, but it's large when the network seems like it doesn't know what it's doing. ",
  "translatedText": "Зауважте, що ця сума невелика, коли мережа впевнено правильно класифікує зображення, але велика, коли здається, що мережа не знає, що вона робить. ",
  "model": "nmt",
  "time_range": [
   246.02,
   258.82
  ]
 },
 {
  "input": "So then what you do is consider the average cost over all of the tens of thousands of training examples at your disposal. ",
  "translatedText": "Отже, що ви робите, це розглядаєте середню вартість усіх десятків тисяч навчальних прикладів, які є у вашому розпорядженні. ",
  "model": "nmt",
  "time_range": [
   258.82,
   267.58
  ]
 },
 {
  "input": "This average cost is our measure for how lousy the network is, and how bad the computer should feel. ",
  "translatedText": "Ця середня вартість є нашим показником того, наскільки поганою є мережа та наскільки погано має працювати комп’ютер. ",
  "model": "nmt",
  "time_range": [
   267.58,
   273.3
  ]
 },
 {
  "input": "And that's a complicated thing. ",
  "translatedText": "І це складна річ. ",
  "model": "nmt",
  "time_range": [
   273.3,
   275.3
  ]
 },
 {
  "input": "Remember how the network itself was basically a function, one that takes in 784 numbers as inputs, the pixel values, and spits out 10 numbers as its output, and in a sense it's parameterized by all these weights and biases? ",
  "translatedText": "Пам’ятаєте, як сама мережа була в основному функцією, яка приймає 784 числа як вхідні дані, значення пікселів, і викидає 10 чисел як свій вихід, і в певному сенсі вона параметризована всіма цими вагами та зміщеннями? ",
  "model": "nmt",
  "time_range": [
   275.3,
   289.7
  ]
 },
 {
  "input": "The cost function is a layer of complexity on top of that. ",
  "translatedText": "Функція витрат є ще одним шаром складності. ",
  "model": "nmt",
  "time_range": [
   289.7,
   293.34
  ]
 },
 {
  "input": "It takes as its input those 13,000 or so weights and biases, and spits out a single number describing how bad those weights and biases are, and the way it's defined depends on the network's behavior over all the tens of thousands of pieces of training data. ",
  "translatedText": "Він бере на вхід приблизно 13 000 ваг і упереджень і видає одне число, яке описує, наскільки погані ці ваги та упередження, і спосіб його визначення залежить від поведінки мережі над усіма десятками тисяч фрагментів навчальних даних. ",
  "model": "nmt",
  "time_range": [
   293.34,
   309.14
  ]
 },
 {
  "input": "That's a lot to think about. ",
  "translatedText": "Це багато про що думати. ",
  "model": "nmt",
  "time_range": [
   309.14,
   312.46
  ]
 },
 {
  "input": "But just telling the computer what a crappy job it's doing isn't very helpful. ",
  "translatedText": "Але просто говорити комп’ютеру, яку погану роботу він робить, не дуже корисно. ",
  "model": "nmt",
  "time_range": [
   312.46,
   316.38
  ]
 },
 {
  "input": "You want to tell it how to change those weights and biases so that it gets better. ",
  "translatedText": "Ви хочете сказати йому, як змінити ці ваги та упередження, щоб воно стало кращим. ",
  "model": "nmt",
  "time_range": [
   316.38,
   321.3
  ]
 },
 {
  "input": "To make it easier, rather than struggling to imagine a function with 13,000 inputs, just imagine a simple function that has one number as an input and one number as an output. ",
  "translatedText": "Щоб зробити це легше, замість того, щоб намагатися уявити функцію з 13 000 входами, просто уявіть просту функцію, яка має одне число як вхід і одне число як вихід. ",
  "model": "nmt",
  "time_range": [
   321.3,
   331.44
  ]
 },
 {
  "input": "How do you find an input that minimizes the value of this function? ",
  "translatedText": "Як знайти вхідні дані, які мінімізують значення цієї функції? ",
  "model": "nmt",
  "time_range": [
   331.44,
   336.42
  ]
 },
 {
  "input": "Calculus students will know that you can sometimes figure out that minimum explicitly, but that's not always feasible for really complicated functions, certainly not in the 13,000 input version of this situation for our crazy complicated neural network cost function. ",
  "translatedText": "Студенти, які вивчають обчислення, знатимуть, що іноді можна чітко визначити цей мінімум, але це не завжди можливо для справді складних функцій, а особливо не у версії цієї ситуації з 13 000 вхідних даних для нашої божевільно складної функції вартості нейронної мережі. ",
  "model": "nmt",
  "time_range": [
   336.42,
   351.64
  ]
 },
 {
  "input": "A more flexible tactic is to start at any input, and figure out which direction you should step to make that output lower. ",
  "translatedText": "Більш гнучка тактика полягає в тому, щоб почати з будь-якого входу та визначити, у якому напрямку слід рухатися, щоб знизити цей вихід. ",
  "model": "nmt",
  "time_range": [
   351.64,
   359.86
  ]
 },
 {
  "input": "Specifically, if you can figure out the slope of the function where you are, then shift to the left if that slope is positive, and shift the input to the right if that slope is negative. ",
  "translatedText": "Зокрема, якщо ви можете визначити нахил функції, де ви знаходитесь, тоді перемістіть ліворуч, якщо цей нахил додатний, і перемістіть вхідні дані праворуч, якщо цей нахил від’ємний. ",
  "model": "nmt",
  "time_range": [
   359.86,
   372.72
  ]
 },
 {
  "input": "If you do this repeatedly, at each point checking the new slope and taking the appropriate step, you're going to approach some local minimum of the function. ",
  "translatedText": "Якщо ви робите це неодноразово, у кожній точці перевіряючи новий нахил і роблячи відповідний крок, ви наблизитесь до деякого локального мінімуму функції. ",
  "model": "nmt",
  "time_range": [
   372.72,
   380.68
  ]
 },
 {
  "input": "And the image you might have in mind here is a ball rolling down a hill. ",
  "translatedText": "І зображення, яке ви можете мати тут на увазі, це м’яч, що котиться з пагорба. ",
  "model": "nmt",
  "time_range": [
   380.68,
   384.6
  ]
 },
 {
  "input": "And notice, even for this really simplified single input function, there are many possible valleys you might land in, depending on which random input you start at, and there's no guarantee that the local minimum you land in is going to be the smallest possible value of the cost function. ",
  "translatedText": "І зауважте, що навіть для цієї справді спрощеної функції єдиного введення існує багато можливих долин, у які ви можете потрапити, залежно від того, з якого випадкового введення ви почнете, і немає гарантії, що локальний мінімум, у який ви потрапите, буде найменшим можливим значенням функції витрат. ",
  "model": "nmt",
  "time_range": [
   384.6,
   399.46
  ]
 },
 {
  "input": "That's going to carry over to our neural network case as well. ",
  "translatedText": "Це також перенесеться на нашу нейронну мережу. ",
  "model": "nmt",
  "time_range": [
   399.46,
   403.18
  ]
 },
 {
  "input": "And I also want you to notice how if you make your step sizes proportional to the slope, then when the slope is flattening out towards the minimum, your steps get smaller and smaller, and that kind of helps you from overshooting. ",
  "translatedText": "І я також хочу, щоб ви помітили, що якщо ви робите розмір кроку пропорційним схилу, тоді, коли схил вирівнюється до мінімуму, ваші кроки стають все меншими і меншими, і це допомагає вам уникнути перевищення. ",
  "model": "nmt",
  "time_range": [
   403.18,
   416.02
  ]
 },
 {
  "input": "Bumping up the complexity a bit, imagine instead a function with two inputs and one output. ",
  "translatedText": "Трохи збільшуючи складність, уявіть натомість функцію з двома входами та одним виходом. ",
  "model": "nmt",
  "time_range": [
   416.02,
   421.64
  ]
 },
 {
  "input": "You might think of the input space as the xy-plane, and the cost function as being graphed as a surface above it. ",
  "translatedText": "Ви можете подумати про вхідний простір як про площину xy, а функцію вартості як поверхню над нею. ",
  "model": "nmt",
  "time_range": [
   421.64,
   429.02
  ]
 },
 {
  "input": "Instead of asking about the slope of the function, you have to ask which direction you should step in this input space so as to decrease the output of the function most quickly. ",
  "translatedText": "Замість того, щоб запитувати про нахил функції, ви повинні запитати, у якому напрямку вам слід зробити крок у цьому вхідному просторі, щоб найшвидше зменшити вихід функції. ",
  "model": "nmt",
  "time_range": [
   429.02,
   439.78
  ]
 },
 {
  "input": "In other words, what's the downhill direction? ",
  "translatedText": "Іншими словами, який напрямок спуску? ",
  "model": "nmt",
  "time_range": [
   439.78,
   442.34
  ]
 },
 {
  "input": "And again, it's helpful to think of a ball rolling down that hill. ",
  "translatedText": "І знову ж таки, корисно подумати про м’яч, що котиться з того пагорба. ",
  "model": "nmt",
  "time_range": [
   442.34,
   446.74
  ]
 },
 {
  "input": "Those of you familiar with multivariable calculus will know that the gradient of a function gives you the direction of steepest ascent, which direction should you step to increase the function most quickly. ",
  "translatedText": "Ті з вас, хто знайомий із численням багатьох змінних, знають, що градієнт функції дає вам напрямок найкрутішого підйому, у якому напрямку слід зробити крок, щоб збільшити функцію найшвидше. ",
  "model": "nmt",
  "time_range": [
   446.74,
   459.42
  ]
 },
 {
  "input": "Naturally enough, taking the negative of that gradient gives you the direction to step that decreases the function most quickly. ",
  "translatedText": "Цілком природно, що негативний градієнт дає вам напрямок кроку, який найшвидше зменшує функцію. ",
  "model": "nmt",
  "time_range": [
   459.42,
   467.46
  ]
 },
 {
  "input": "Even more than that, the length of this gradient vector is an indication for just how steep that steepest slope is. ",
  "translatedText": "Навіть більше того, довжина цього вектора градієнта є показником того, наскільки крутим є найкрутіший схил. ",
  "model": "nmt",
  "time_range": [
   467.46,
   474.58
  ]
 },
 {
  "input": "Now if you're unfamiliar with multivariable calculus and want to learn more, check out some of the work I did for Khan Academy on the topic. ",
  "translatedText": "Тепер, якщо ви не знайомі з численням багатьох змінних і хочете дізнатися більше, ознайомтеся з деякою роботою, яку я виконав для Академії Хана на цю тему. ",
  "model": "nmt",
  "time_range": [
   474.58,
   481.1
  ]
 },
 {
  "input": "Honestly though, all that matters for you and me right now is that in principle there exists a way to compute this vector, this vector that tells you what the downhill direction is and how steep it is. ",
  "translatedText": "Але, чесно кажучи, для нас з вами зараз важливо лише те, що в принципі існує спосіб обчислити цей вектор, цей вектор, який повідомляє вам, яким є напрямок спуску та наскільки він крутий. ",
  "model": "nmt",
  "time_range": [
   481.1,
   492.04
  ]
 },
 {
  "input": "You'll be okay if that's all you know and you're not rock solid on the details. ",
  "translatedText": "З тобою все буде добре, якщо це все, що ти знаєш, і ти не розбираєшся в деталях. ",
  "model": "nmt",
  "time_range": [
   492.04,
   497.28
  ]
 },
 {
  "input": "Because if you can get that, the algorithm for minimizing the function is to compute this gradient direction, then take a small step downhill, and repeat that over and over. ",
  "translatedText": "Тому що, якщо ви можете отримати це, алгоритм для мінімізації функції полягає в тому, щоб обчислити цей напрямок градієнта, потім зробити невеликий крок вниз і повторити це знову і знову. ",
  "model": "nmt",
  "time_range": [
   497.28,
   507.4
  ]
 },
 {
  "input": "It's the same basic idea for a function that has 13,000 inputs instead of 2 inputs. ",
  "translatedText": "Це та сама основна ідея для функції, яка має 13 000 входів замість 2 входів. ",
  "model": "nmt",
  "time_range": [
   507.4,
   513.7
  ]
 },
 {
  "input": "Imagine organizing all 13,000 weights and biases of our network into a giant column vector. ",
  "translatedText": "Уявіть собі організацію всіх 13 000 ваг і зміщень нашої мережі у гігантський вектор-стовпець. ",
  "model": "nmt",
  "time_range": [
   513.7,
   520.18
  ]
 },
 {
  "input": "The negative gradient of the cost function is just a vector, it's some direction inside this insanely huge input space that tells you which nudges to all of those numbers is going to cause the most rapid decrease to the cost function. ",
  "translatedText": "Від’ємний градієнт функції витрат — це просто вектор, це певний напрямок у цьому шалено величезному просторі введення, який говорить вам, які підштовхи до всіх цих чисел призведуть до найшвидшого зменшення функції витрат. ",
  "model": "nmt",
  "time_range": [
   520.18,
   535.9
  ]
 },
 {
  "input": "And of course, with our specially designed cost function, changing the weights and biases to decrease it means making the output of the network on each piece of training data look less like a random array of 10 values, and more like an actual decision we want it to make. ",
  "translatedText": "І, звісно, завдяки нашій спеціально розробленій функції вартості зміна вагових коефіцієнтів і зміщень для їх зменшення означає, що вихідні дані мережі для кожної частини навчальних даних виглядатимуть не так як випадковий масив із 10 значень, а більше як фактичне рішення, яке ми хочемо це зробити. ",
  "model": "nmt",
  "time_range": [
   535.9,
   551.28
  ]
 },
 {
  "input": "It's important to remember, this cost function involves an average over all of the training data, so if you minimize it, it means it's a better performance on all of those samples. ",
  "translatedText": "Важливо пам’ятати, що ця функція вартості передбачає середнє значення за всіма навчальними даними, тож якщо ви мінімізуєте її, це означає, що для всіх цих зразків буде краща продуктивність. ",
  "model": "nmt",
  "time_range": [
   551.28,
   564.26
  ]
 },
 {
  "input": "The algorithm for computing this gradient efficiently, which is effectively the heart of how a neural network learns, is called backpropagation, and it's what I'm going to be talking about next video. ",
  "translatedText": "Алгоритм для ефективного обчислення цього градієнта, який фактично є основою того, як нейронна мережа навчається, називається зворотним поширенням, і саме про нього я буду говорити в наступному відео. ",
  "model": "nmt",
  "time_range": [
   564.26,
   574.04
  ]
 },
 {
  "input": "There, I really want to take the time to walk through what exactly happens to each weight and bias for a given piece of training data, trying to give an intuitive feel for what's happening beyond the pile of relevant calculus and formulas. ",
  "translatedText": "Там я справді хочу витратити час, щоб пройти через те, що саме відбувається з кожною вагою та зміщенням для певної частини тренувальних даних, намагаючись дати інтуїтивне відчуття того, що відбувається за межами купи відповідних обчислень і формул. ",
  "model": "nmt",
  "time_range": [
   574.04,
   587.98
  ]
 },
 {
  "input": "Right here, right now, the main thing I want you to know, independent of implementation details, is that what we mean when we talk about a network learning is that it's just minimizing a cost function. ",
  "translatedText": "Прямо тут, прямо зараз, головне, що я хочу, щоб ви знали, незалежно від деталей реалізації, це те, що ми маємо на увазі, коли говоримо про мережеве навчання, це те, що це просто мінімізація функції витрат. ",
  "model": "nmt",
  "time_range": [
   587.98,
   599.32
  ]
 },
 {
  "input": "And notice, one consequence of that is that it's important for this cost function to have a nice smooth output, so that we can find a local minimum by taking little steps downhill. ",
  "translatedText": "І зауважте, одним із наслідків цього є те, що для цієї функції витрат важливо мати гарний плавний результат, щоб ми могли знайти локальний мінімум, роблячи невеликі кроки вниз. ",
  "model": "nmt",
  "time_range": [
   599.32,
   609.34
  ]
 },
 {
  "input": "This is why, by the way, artificial neurons have continuously ranging activations, rather than simply being active or inactive in a binary way, the way that biological neurons are. ",
  "translatedText": "Ось чому, до речі, штучні нейрони мають безперервний діапазон активацій, а не просто активні чи неактивні у бінарному порядку, як біологічні нейрони. ",
  "model": "nmt",
  "time_range": [
   609.34,
   620.44
  ]
 },
 {
  "input": "This process of repeatedly nudging an input of a function by some multiple of the negative gradient is called gradient descent. ",
  "translatedText": "Цей процес багаторазового підштовхування вхідних даних функції деяким кратним від’ємним градієнтом називається градієнтним спуском. ",
  "model": "nmt",
  "time_range": [
   620.44,
   626.96
  ]
 },
 {
  "input": "It's a way to converge towards some local minimum of a cost function, basically a valley in this graph. ",
  "translatedText": "Це спосіб сходитися до деякого локального мінімуму функції вартості, по суті, долини на цьому графіку. ",
  "model": "nmt",
  "time_range": [
   626.96,
   633.0
  ]
 },
 {
  "input": "I'm still showing the picture of a function with two inputs, of course, because nudges in a 13,000 dimensional input space are a little hard to wrap your mind around, but there is actually a nice non-spatial way to think about this. ",
  "translatedText": "Звичайно, я все ще показую зображення функції з двома входами, тому що підштовхування у 13 000-вимірному просторі введення трохи важко уявити, але насправді є гарний непросторовий спосіб подумати про це. ",
  "model": "nmt",
  "time_range": [
   633.0,
   645.22
  ]
 },
 {
  "input": "Each component of the negative gradient tells us two things. ",
  "translatedText": "Кожен компонент негативного градієнта говорить нам про дві речі. ",
  "model": "nmt",
  "time_range": [
   645.22,
   649.1
  ]
 },
 {
  "input": "The sign, of course, tells us whether the corresponding component of the input vector should be nudged up or down. ",
  "translatedText": "Знак, звичайно, говорить нам про те, чи потрібно підштовхнути відповідний компонент вхідного вектора вгору чи вниз. ",
  "model": "nmt",
  "time_range": [
   649.1,
   655.86
  ]
 },
 {
  "input": "But importantly, the relative magnitudes of all these components kind of tells you which changes matter more. ",
  "translatedText": "Але важливо те, що відносні величини всіх цих компонентів ніби підказують вам, які зміни важливіші. ",
  "model": "nmt",
  "time_range": [
   655.86,
   665.62
  ]
 },
 {
  "input": "You see, in our network, an adjustment to one of the weights might have a much greater impact on the cost function than the adjustment to some other weight. ",
  "translatedText": "Розумієте, у нашій мережі коригування однієї з ваг може мати набагато більший вплив на функцію витрат, ніж коригування іншої ваги. ",
  "model": "nmt",
  "time_range": [
   665.62,
   674.98
  ]
 },
 {
  "input": "Some of these connections just matter more for our training data. ",
  "translatedText": "Деякі з цих зв’язків просто важливіші для наших навчальних даних. ",
  "model": "nmt",
  "time_range": [
   674.98,
   679.44
  ]
 },
 {
  "input": "So a way you can think about this gradient vector of our mind-warpingly massive cost function is that it encodes the relative importance of each weight and bias, that is, which of these changes is going to carry the most bang for your buck. ",
  "translatedText": "Таким чином, ви можете подумати про цей вектор градієнта нашої величезної функції витрат, що спотворює розум, так це те, що він кодує відносну важливість кожної ваги та зміщення, тобто те, яка з цих змін принесе найбільшу віддачу від ваших грошей. ",
  "model": "nmt",
  "time_range": [
   679.44,
   694.1
  ]
 },
 {
  "input": "This really is just another way of thinking about direction. ",
  "translatedText": "Це просто інший спосіб думати про напрямок. ",
  "model": "nmt",
  "time_range": [
   694.1,
   697.36
  ]
 },
 {
  "input": "To take a simpler example, if you have some function with two variables as an input, and compute that its gradient at some particular point comes out as 3,1, then on the one hand you can interpret that as saying that when you're standing at that input, moving along this direction increases the function most quickly, that when you graph the function above the plane of input points, that vector is what's giving you the straight uphill direction. ",
  "translatedText": "Щоб взяти простіший приклад, якщо у вас є деяка функція з двома змінними як вхідні дані, і ви обчислюєте, що її градієнт у певній точці виходить як 3,1, тоді, з одного боку, ви можете інтерпретувати це як те, що коли ви стоячи на цьому вході, рух уздовж цього напрямку збільшує функцію найшвидше, тому, коли ви будуєте графік функції над площиною вхідних точок, цей вектор дає вам прямий напрямок угору. ",
  "model": "nmt",
  "time_range": [
   697.36,
   723.2
  ]
 },
 {
  "input": "But another way to read that is to say that changes to this first variable have three times the importance as changes to the second variable, that at least in the neighborhood of the relevant input, nudging the x-value carries a lot more bang for your buck. ",
  "translatedText": "Але інший спосіб прочитати це – сказати, що зміни цієї першої змінної мають утричі більшу важливість, ніж зміни другої змінної, що принаймні в околицях відповідного вхідного значення, підштовхування значення x несе набагато більше удару для вашого бакс. ",
  "model": "nmt",
  "time_range": [
   723.2,
   737.74
  ]
 },
 {
  "input": "Alright, let's zoom out and sum up where we are so far. ",
  "translatedText": "Гаразд, давайте зменшимо масштаб і підведемо підсумок, де ми зараз. ",
  "model": "nmt",
  "time_range": [
   737.74,
   742.88
  ]
 },
 {
  "input": "The network itself is this function with 784 inputs and 10 outputs, defined in terms of all of these weighted sums. ",
  "translatedText": "Сама мережа є цією функцією з 784 входами та 10 виходами, визначеними в термінах усіх цих зважених сум. ",
  "model": "nmt",
  "time_range": [
   742.88,
   750.86
  ]
 },
 {
  "input": "The cost function is a layer of complexity on top of that. ",
  "translatedText": "Функція витрат є ще одним шаром складності. ",
  "model": "nmt",
  "time_range": [
   750.86,
   754.16
  ]
 },
 {
  "input": "It takes the 13,000 weights and biases as inputs, and spits out a single measure of lousiness based on the training examples. ",
  "translatedText": "Він приймає 13 000 ваг і упереджень як вхідні дані та викидає єдину міру паршивості на основі навчальних прикладів. ",
  "model": "nmt",
  "time_range": [
   754.16,
   762.64
  ]
 },
 {
  "input": "The gradient of the cost function is one more layer of complexity still. ",
  "translatedText": "Градієнт функції витрат — це ще один рівень складності. ",
  "model": "nmt",
  "time_range": [
   762.64,
   767.52
  ]
 },
 {
  "input": "It tells us what nudges to all of these weights and biases cause the fastest change to the value of the cost function, which you might interpret as saying which changes to which weights matter the most. ",
  "translatedText": "Він говорить нам, які підштовхи до всіх цих ваг і упереджень спричиняють найшвидшу зміну значення функції вартості, що можна інтерпретувати як те, які зміни до яких ваг мають найбільше значення. ",
  "model": "nmt",
  "time_range": [
   767.52,
   783.04
  ]
 },
 {
  "input": "So when you initialize the network with random weights and biases, and adjust them many times based on this gradient descent process, how well does it actually perform on images it's never seen before? ",
  "translatedText": "Отже, коли ви ініціалізуєте мережу випадковими вагами та зміщеннями та багато разів налаштовуєте їх на основі цього процесу градієнтного спуску, наскільки добре вона справді працює на зображеннях, яких раніше не бачив? ",
  "model": "nmt",
  "time_range": [
   783.04,
   794.24
  ]
 },
 {
  "input": "The one I've described here, with the two hidden layers of 16 neurons each, chosen mostly for aesthetic reasons, is not bad, classifying about 96% of the new images it sees correctly. ",
  "translatedText": "Той, який я описав тут, із двома прихованими шарами по 16 нейронів кожен, обраними здебільшого з естетичних міркувань, непоганий, оскільки він класифікує приблизно 96% нових зображень, які він бачить правильно. ",
  "model": "nmt",
  "time_range": [
   794.24,
   806.92
  ]
 },
 {
  "input": "And honestly, if you look at some of the examples it messes up on, you feel compelled to cut it a little slack. ",
  "translatedText": "І, чесно кажучи, якщо ви подивіться на деякі приклади, з якими він зіпсувався, ви відчуєте потребу трохи послабити. ",
  "model": "nmt",
  "time_range": [
   806.92,
   816.3
  ]
 },
 {
  "input": "If you play around with the hidden layer structure and make a couple tweaks, you can get this up to 98%. ",
  "translatedText": "Якщо ви пограєте зі структурою прихованого шару та зробите кілька налаштувань, ви можете отримати це до 98%. ",
  "model": "nmt",
  "time_range": [
   816.3,
   821.22
  ]
 },
 {
  "input": "And that's pretty good! ",
  "translatedText": "І це дуже добре! ",
  "model": "nmt",
  "time_range": [
   821.22,
   822.9
  ]
 },
 {
  "input": "It's not the best, you can certainly get better performance by getting more sophisticated than this plain vanilla network, but given how daunting the initial task is, I think there's something incredible about any network doing this well on images it's never seen before given that we never specifically told it what patterns to look for. ",
  "translatedText": "Це не найкраще, ви, звичайно, можете отримати кращу продуктивність, ставши більш складною, ніж ця звичайна ванільна мережа, але враховуючи, наскільки складним є початкове завдання, я вважаю, що є щось неймовірне в тому, щоб будь-яка мережа так добре справлялася із зображеннями, яких вона ніколи раніше не бачила, враховуючи, що ми ніколи конкретно не говорив, які шаблони шукати. ",
  "model": "nmt",
  "time_range": [
   822.9,
   842.0
  ]
 },
 {
  "input": "Originally, the way I motivated this structure was by describing a hope we might have, that the second layer might pick up on little edges, that the third layer would piece together those edges to recognize loops and longer lines, and that those might be pieced together to recognize digits. ",
  "translatedText": "Спочатку я мотивував цю структуру, описуючи надію, яку ми могли б мати, що другий шар може підхопити маленькі краї, що третій шар з’єднає ці краї разом, щоб розпізнати петлі та довші лінії, і що вони можуть бути складені разом, щоб розпізнавати цифри. ",
  "model": "nmt",
  "time_range": [
   842.0,
   858.22
  ]
 },
 {
  "input": "So is this what our network is actually doing? ",
  "translatedText": "Отже, це те, що насправді робить наша мережа? ",
  "model": "nmt",
  "time_range": [
   858.22,
   861.04
  ]
 },
 {
  "input": "Well, for this one at least, not at all. ",
  "translatedText": "Ну, принаймні для цього, зовсім ні. ",
  "model": "nmt",
  "time_range": [
   861.04,
   864.88
  ]
 },
 {
  "input": "Remember how last video we looked at how the weights of the connections from all the neurons in the first layer to a given neuron in the second layer can be visualized as a given pixel pattern that the second layer neuron is picking up on? ",
  "translatedText": "Пам’ятаєте, як у минулому відео ми дивилися на те, як ваги зв’язків від усіх нейронів першого шару до даного нейрона другого шару можна візуалізувати як даний піксельний шаблон, який нейрон другого шару вловлює? ",
  "model": "nmt",
  "time_range": [
   864.88,
   877.44
  ]
 },
 {
  "input": "Well, when we do that for the weights associated with these transitions, instead of picking up on isolated little edges here and there, they look, well, almost random, just with some very loose patterns in the middle. ",
  "translatedText": "Що ж, коли ми робимо це для ваг, пов’язаних із цими переходами, замість того, щоб шукати окремі маленькі краї тут і там, вони виглядають, ну, майже випадковими, просто з деякими дуже вільними візерунками посередині. ",
  "model": "nmt",
  "time_range": [
   877.44,
   894.2
  ]
 },
 {
  "input": "It would seem that in the unfathomably large 13,000 dimensional space of possible weights and biases, our network found itself a happy little local minimum that, despite successfully classifying most images, doesn't exactly pick up on the patterns we might have hoped for. ",
  "translatedText": "Здавалося б, що в незбагненно великому 13 000-вимірному просторі можливих ваг і упереджень наша мережа знайшла щасливий маленький локальний мінімум, який, незважаючи на успішну класифікацію більшості зображень, не точно вловлює шаблони, на які ми могли сподіватися. ",
  "model": "nmt",
  "time_range": [
   894.2,
   909.84
  ]
 },
 {
  "input": "And to really drive this point home, watch what happens when you input a random image. ",
  "translatedText": "Щоб переконатися в цьому, подивіться, що відбувається, коли ви вводите випадкове зображення. ",
  "model": "nmt",
  "time_range": [
   909.84,
   914.6
  ]
 },
 {
  "input": "If the system was smart, you might expect it to either feel uncertain, maybe not really activating any of those 10 output neurons or activating them all evenly, but instead it confidently gives you some nonsense answer, as if it feels as sure that this random noise is a 5 as it does that an actual image of a 5 is a 5. ",
  "translatedText": "Якби система була розумною, ви могли б очікувати, що вона буде відчувати себе невизначеною, можливо, насправді не активуючи жоден із цих 10 вихідних нейронів або активуючи їх усі рівномірно, але натомість вона впевнено дає вам якусь безглузду відповідь, ніби вона відчуває себе впевненою, що цей випадковий Шум – це 5, тому що фактичне зображення 5 – це 5. ",
  "model": "nmt",
  "time_range": [
   914.6,
   934.56
  ]
 },
 {
  "input": "Phrased differently, even if this network can recognize digits pretty well, it has no idea how to draw them. ",
  "translatedText": "Іншими словами, навіть якщо ця мережа досить добре розпізнає цифри, вона не знає, як їх намалювати. ",
  "model": "nmt",
  "time_range": [
   934.56,
   941.8
  ]
 },
 {
  "input": "A lot of this is because it's such a tightly constrained training setup. ",
  "translatedText": "Багато в чому це тому, що це жорстко обмежена система навчання. ",
  "model": "nmt",
  "time_range": [
   941.8,
   945.4
  ]
 },
 {
  "input": "I mean, put yourself in the network's shoes here. ",
  "translatedText": "Я маю на увазі, поставте себе на місце мережі. ",
  "model": "nmt",
  "time_range": [
   945.4,
   948.22
  ]
 },
 {
  "input": "From its point of view, the entire universe consists of nothing but clearly defined unmoving digits centered in a tiny grid, and its cost function never gave it any incentive to be anything but utterly confident in its decisions. ",
  "translatedText": "З його точки зору, весь Всесвіт складається лише з чітко визначених нерухомих цифр, зосереджених у крихітній сітці, і його функція вартості ніколи не давала жодних стимулів бути чимось іншим, крім як абсолютно впевненим у своїх рішеннях. ",
  "model": "nmt",
  "time_range": [
   948.22,
   962.16
  ]
 },
 {
  "input": "So with this as the image of what those second layer neurons are really doing, you might wonder why I would introduce this network with the motivation of picking up on edges and patterns. ",
  "translatedText": "Отже, маючи це як образ того, що насправді роблять нейрони другого шару, ви можете задатися питанням, чому я представив цю мережу з мотивацією підхоплення країв і шаблонів. ",
  "model": "nmt",
  "time_range": [
   962.16,
   970.32
  ]
 },
 {
  "input": "I mean, that's just not at all what it ends up doing. ",
  "translatedText": "Я маю на увазі, що це зовсім не те, що це закінчується. ",
  "model": "nmt",
  "time_range": [
   970.32,
   973.04
  ]
 },
 {
  "input": "Well, this is not meant to be our end goal, but instead a starting point. ",
  "translatedText": "Що ж, це не наша кінцева мета, а натомість відправна точка. ",
  "model": "nmt",
  "time_range": [
   973.04,
   977.48
  ]
 },
 {
  "input": "Frankly, this is old technology, the kind researched in the 80s and 90s, and you do need to understand it before you can understand more detailed modern variants, and it clearly is capable of solving some interesting problems, but the more you dig into what those hidden layers are really doing, the less intelligent it seems. ",
  "translatedText": "Відверто кажучи, це стара технологія, яку досліджували у 80-х і 90-х роках, і вам потрібно її зрозуміти, перш ніж ви зможете зрозуміти більш детальні сучасні варіанти, і вона явно здатна вирішити деякі цікаві проблеми, але чим більше ви заглиблюєтесь у те, що ті приховані шари дійсно роблять, тим менш розумним це здається. ",
  "model": "nmt",
  "time_range": [
   977.48,
   998.72
  ]
 },
 {
  "input": "Shifting the focus for a moment from how networks learn to how you learn, that'll only happen if you engage actively with the material here somehow. ",
  "translatedText": "Якщо на мить перенести фокус із того, як мережі навчаються, на те, як навчаєтеся ви, це станеться лише за умови активного вивчення матеріалу тут. ",
  "model": "nmt",
  "time_range": [
   998.72,
   1007.16
  ]
 },
 {
  "input": "One pretty simple thing I want you to do is just pause right now and think deeply for a moment about what changes you might make to this system and how it perceives images if you wanted it to better pick up on things like edges and patterns. ",
  "translatedText": "Я хочу, щоб ви зробили одну досить просту річ: просто зупиніться зараз і на мить глибоко подумайте про те, які зміни ви можете внести в цю систему та як вона сприймає зображення, якщо ви хочете, щоб вона краще вловлювала такі речі, як краї та візерунки. ",
  "model": "nmt",
  "time_range": [
   1007.16,
   1021.88
  ]
 },
 {
  "input": "But better than that, to actually engage with the material, I highly recommend the book by Michael Nielsen on deep learning and neural networks. ",
  "translatedText": "Але краще за все, щоб справді ознайомитися з матеріалом, я настійно рекомендую книгу Майкла Нільсена про глибоке навчання та нейронні мережі. ",
  "model": "nmt",
  "time_range": [
   1021.88,
   1029.72
  ]
 },
 {
  "input": "In it, you can find the code and the data to download and play with for this exact example, and the book will walk you through step by step what that code is doing. ",
  "translatedText": "У ньому ви можете знайти код і дані для завантаження та використання для цього точного прикладу, і книга проведе вас крок за кроком, що цей код робить. ",
  "model": "nmt",
  "time_range": [
   1029.72,
   1039.36
  ]
 },
 {
  "input": "What's awesome is that this book is free and publicly available, so if you do get something out of it, consider joining me in making a donation towards Nielsen's efforts. ",
  "translatedText": "Що чудово, так це те, що ця книга є безкоштовною та загальнодоступною, тому, якщо ви щось отримаєте від неї, подумайте про те, щоб приєднатися до мене та зробити пожертву на користь Nielsen. ",
  "model": "nmt",
  "time_range": [
   1039.36,
   1048.04
  ]
 },
 {
  "input": "I've also linked a couple other resources I like a lot in the description, including the phenomenal and beautiful blog post by Chris Ola and the articles in Distill. ",
  "translatedText": "Я також пов’язав кілька інших ресурсів, які мені дуже подобаються, в описі, включно з феноменальним і красивим дописом у блозі Кріса Оли та статті в Distill. ",
  "model": "nmt",
  "time_range": [
   1048.04,
   1058.72
  ]
 },
 {
  "input": "To close things off here for the last few minutes, I want to jump back into a snippet of the interview I had with Leisha Lee. ",
  "translatedText": "Щоб завершити це на останні кілька хвилин, я хочу повернутися до фрагменту інтерв’ю, яке я мав із Лейшею Лі. ",
  "model": "nmt",
  "time_range": [
   1058.72,
   1064.44
  ]
 },
 {
  "input": "You might remember her from the last video, she did her PhD work in deep learning. ",
  "translatedText": "Можливо, ви пам’ятаєте її з останнього відео, вона захистила докторську роботу з глибокого навчання. ",
  "model": "nmt",
  "time_range": [
   1064.44,
   1068.52
  ]
 },
 {
  "input": "In this little snippet, she talks about two recent papers that really dig into how some of the more modern image recognition networks are actually learning. ",
  "translatedText": "У цьому невеличкому фрагменті вона розповідає про дві нещодавні статті, які дійсно досліджують, як деякі з більш сучасних мереж розпізнавання зображень насправді навчаються. ",
  "model": "nmt",
  "time_range": [
   1068.52,
   1076.38
  ]
 },
 {
  "input": "Just to set up where we were in the conversation, the first paper took one of these particularly deep neural networks that's really good at image recognition, and instead of training it on a properly labeled dataset, it shuffled all of the labels around before training. ",
  "translatedText": "Просто щоб визначити, де ми знаходимося в розмові, перша стаття взяла одну з цих особливо глибоких нейронних мереж, яка справді добре розпізнає зображення, і замість того, щоб навчати її на правильно позначеному наборі даних, вона перетасувала всі мітки перед навчанням. ",
  "model": "nmt",
  "time_range": [
   1076.38,
   1089.4
  ]
 },
 {
  "input": "Obviously the testing accuracy here was going to be no better than random, since everything's just randomly labeled. ",
  "translatedText": "Очевидно, що точність тестування тут мала бути не кращою, ніж випадкова, оскільки все просто випадково позначено. ",
  "model": "nmt",
  "time_range": [
   1089.4,
   1095.32
  ]
 },
 {
  "input": "But it was still able to achieve the same training accuracy as you would on a properly labeled dataset. ",
  "translatedText": "Але він все одно зміг досягти такої ж точності навчання, як і на правильно позначеному наборі даних. ",
  "model": "nmt",
  "time_range": [
   1095.32,
   1101.44
  ]
 },
 {
  "input": "Basically, the millions of weights for this particular network were enough for it to just memorize the random data, which raises the question for whether minimizing this cost function actually corresponds to any sort of structure in the image, or is it just memorization? ",
  "translatedText": "По суті, мільйонів ваг для цієї конкретної мережі було достатньо, щоб вона просто запам’ятовувала випадкові дані, що піднімає питання, чи насправді мінімізація цієї функції вартості відповідає будь-якій структурі в зображенні, чи це просто запам’ятовування? ",
  "model": "nmt",
  "time_range": [
   1101.44,
   1116.72
  ]
 },
 {
  "input": "...to memorize the entire dataset of what the correct classification is. ",
  "translatedText": ". . . щоб запам’ятати весь набір даних, що таке правильна класифікація. ",
  "model": "nmt",
  "time_range": [
   1116.72,
   1120.12
  ]
 },
 {
  "input": "And so a couple of, you know, half a year later at ICML this year, there was not exactly rebuttal paper, but paper that addressed some aspects of like, hey, actually these networks are doing something a little bit smarter than that. ",
  "translatedText": "І ось кілька, ви знаєте, півроку пізніше на ICML цього року, була не зовсім спростувальна стаття, а стаття, в якій розглядалися деякі аспекти, наприклад, ага, насправді ці мережі роблять щось трохи розумніше, ніж це. ",
  "model": "nmt",
  "time_range": [
   1120.12,
   1132.22
  ]
 },
 {
  "input": "If you look at that accuracy curve, if you were just training on a random dataset, that curve sort of went down very, you know, very slowly in almost kind of a linear fashion. ",
  "translatedText": "Якщо ви подивитеся на цю криву точності, якби ви просто тренувалися на випадковому наборі даних, ця крива начебто опускалася дуже, знаєте, дуже повільно майже лінійним способом. ",
  "model": "nmt",
  "time_range": [
   1132.22,
   1145.24
  ]
 },
 {
  "input": "So you're really struggling to find that local minima of possible, you know, the right weights that would get you that accuracy. ",
  "translatedText": "Тож вам справді важко знайти локальні мінімуми можливих, знаєте, правильних ваг, які дадуть вам таку точність. ",
  "model": "nmt",
  "time_range": [
   1145.24,
   1152.32
  ]
 },
 {
  "input": "Whereas if you're actually training on a structured dataset, one that has the right labels, you know, you fiddle around a little bit in the beginning, but then you kind of dropped very fast to get to that accuracy level. ",
  "translatedText": "У той час як якщо ви насправді тренуєтеся на структурованому наборі даних, який має правильні мітки, ви знаєте, ви знаєте, ви трохи возитеся на початку, але потім ви дуже швидко впали, щоб досягти такого рівня точності. ",
  "model": "nmt",
  "time_range": [
   1152.32,
   1163.36
  ]
 },
 {
  "input": "And so in some sense it was easier to find that local maxima. ",
  "translatedText": "І тому в якомусь сенсі було легше знайти ці локальні максимуми. ",
  "model": "nmt",
  "time_range": [
   1163.36,
   1168.58
  ]
 },
 {
  "input": "And so what was also interesting about that is it brings into light another paper from actually a couple of years ago, which has a lot more simplifications about the network layers. ",
  "translatedText": "І що також було цікаво в цьому, це висвітлює іншу статтю, фактично пару років тому, яка містить набагато більше спрощень щодо мережевих рівнів. ",
  "model": "nmt",
  "time_range": [
   1168.58,
   1180.14
  ]
 },
 {
  "input": "But one of the results was saying how, if you look at the optimization landscape, the local minima that these networks tend to learn are actually of equal quality. ",
  "translatedText": "Але один із результатів показав, що, якщо ви подивитеся на ландшафт оптимізації, локальні мінімуми, які ці мережі, як правило, вивчають, насправді мають однакову якість. ",
  "model": "nmt",
  "time_range": [
   1180.14,
   1189.4
  ]
 },
 {
  "input": "So in some sense, if your data set is structured, you should be able to find that much more easily. ",
  "translatedText": "Тож у певному сенсі, якщо ваш набір даних структурований, ви зможете знайти це набагато легше. ",
  "model": "nmt",
  "time_range": [
   1189.4,
   1194.3
  ]
 },
 {
  "input": "My thanks as always to those of you supporting on Patreon. ",
  "translatedText": "Я, як завжди, дякую тим із вас, хто підтримує на Patreon. ",
  "model": "nmt",
  "time_range": [
   1194.3,
   1201.14
  ]
 },
 {
  "input": "I've said before just what a game changer on Patreon is, but these videos really would not be possible without you. ",
  "translatedText": "Раніше я вже говорив про те, що змінює гру на Patreon, але ці відео справді були б неможливими без вас. ",
  "model": "nmt",
  "time_range": [
   1201.14,
   1207.16
  ]
 },
 {
  "input": "I also want to give a special thanks to the VC firm Amplify Partners and their support of these initial videos in the series. ",
  "translatedText": "Я також хочу висловити особливу подяку фірмі венчурного капіталу Amplify Partners та її підтримці цих перших відео в серії. ",
  "model": "nmt",
  "time_range": [
   1207.16,
   1213.24
  ]
 },
 {
  "input": "Thank you. ",
  "translatedText": "Дякую тобі. ",
  "model": "nmt",
  "time_range": [
   1213.24,
   1233.14
  ]
 }
]