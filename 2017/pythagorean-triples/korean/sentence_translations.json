[
 {
  "input": "When you first learned about the Pythagorean theorem, that the sum of the squares of the two shorter sides on a right triangle always equals the square of its hypotenuse, I'm guessing that you came to be pretty familiar with a few examples, like the 3-4-5 triangle, or the 5-12-13 triangle.",
  "translatedText": "직각삼각형에서 두 짧은 변의 제곱의 합은 항상 빗변의 제곱과 같다는 피타고라스의 정리를 처음 배우셨을 때 3-4-5 삼각형이나 5-12-13 삼각형과 같은 몇 가지 예는 꽤 익숙해졌을 것으로 생각됩니다.",
  "model": "DeepL",
  "from_community_srt": "자막: newspaper0 (뜻이 왜곡되진 않았으나 의역이 많으므로 주의할 것!) 피타고라스 정리를 처음 배울 땐, 고 가르쳐주죠",
  "n_reviews": 0,
  "start": 3.94,
  "end": 20.28
 },
 {
  "input": "And I think it's easy to take for granted that these even exist, examples where the sum of two perfect squares happens to be a perfect square.",
  "translatedText": "그리고 두 개의 완벽한 정사각형의 합이 완벽한 정사각형이 되는 예도 존재한다는 사실을 당연하게 생각하기 쉽습니다.",
  "model": "DeepL",
  "from_community_srt": "아마 여러분에게 가장 익숙한 예시는 3 4 5 삼각형이거나 5 12 13 삼각형이겠네요 피타고라스 정리가 사실이라고 인정하는 건 쉽습니다 두 수의 제곱을 더하면 다른 한 수의 제곱이 되니까요",
  "n_reviews": 0,
  "start": 21.16,
  "end": 29.38
 },
 {
  "input": "But keep in mind for comparison, if you were to change that exponent to any whole number bigger than 2, you go from having many integer solutions to no solutions whatsoever.",
  "translatedText": "하지만 비교를 위해 지수를 2보다 큰 정수로 바꾸면 정수의 해가 많던 것이 전혀 없는 해로 바뀐다는 점을 기억하세요.",
  "model": "DeepL",
  "from_community_srt": "하지만 이걸 꼭 명심하세요 여러분이 이 식의 지수를 2보다 큰 정수로 바꾸신다면 어떤 수로 바꾸시든 간에 그 식에 만족하는 정수 a b c 는 없을겁니다 이게 바로 그 유명한 \"페르마의 마지막 정리\" 죠",
  "n_reviews": 0,
  "start": 30.04,
  "end": 40.34
 },
 {
  "input": "This is Fermat's famous last theorem.",
  "translatedText": "이것은 페르마의 유명한 마지막 정리입니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 41.12,
  "end": 42.98
 },
 {
  "input": "Now there's a special name for any triplet of whole numbers, ABC, where a2 plus b2 equals c2.",
  "translatedText": "이제 정수의 삼중항을 나타내는 특별한 이름인 ABC가 있는데, 여기서 a2 더하기 b2는 c2와 같습니다.",
  "model": "DeepL",
  "from_community_srt": "자,",
  "n_reviews": 0,
  "start": 44.72,
  "end": 51.22
 },
 {
  "input": "It's called a Pythagorean triple.",
  "translatedText": "이를 피타고라스의 삼각형이라고 합니다.",
  "model": "DeepL",
  "from_community_srt": "\"a² + b² = c²\" 을 만족하는 세 개의 정수 a b c 를 부르는 용어가 있습니다 바로 \"피타고라스 수\" 입니다 그리고 우리가 이 동영상에서 할 것은 모든 피타고라스 수들을 각각 찾아내는 것입니다",
  "n_reviews": 0,
  "start": 51.68,
  "end": 53.34
 },
 {
  "input": "And what we're going to do here is find every single possible example.",
  "translatedText": "여기서 우리가 할 일은 가능한 모든 사례를 찾아내는 것입니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 54.1,
  "end": 57.76
 },
 {
  "input": "And moreover, we'll do so in a way where you can visualize how all of these triples fit together.",
  "translatedText": "또한, 이 모든 트리플이 어떻게 결합되는지 시각화할 수 있는 방식으로 진행할 것입니다.",
  "model": "DeepL",
  "from_community_srt": "더 나아가서,",
  "n_reviews": 0,
  "start": 57.76,
  "end": 63.02
 },
 {
  "input": "This is an old question, pretty much as old as they come in math.",
  "translatedText": "이것은 수학에서 나오는 질문만큼이나 오래된 질문입니다.",
  "model": "DeepL",
  "from_community_srt": "우리가 이런 것들을 찾아내고 피타고라스 수들이 어떤 식으로 잘 맞는지를 시각화시킬 것입니다 이건 수학의 역사만큼 꽤나 오래된 질문입니다 피타고라스보다 천 년 앞선,",
  "n_reviews": 0,
  "start": 64.2,
  "end": 67.26
 },
 {
  "input": "There are some Babylonian clay tablets from 1800 BC, more than a millennium before Pythagoras himself, that just list these triples.",
  "translatedText": "피타고라스보다 천 년 이상 앞선 기원전 1800년 바빌로니아의 점토판에는 이 세 가지가 적혀 있습니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 67.82,
  "end": 75.92
 },
 {
  "input": "And by the way, while we're talking about the Pythagorean theorem, it would be a shame not to share my favorite proof, for anyone who hasn't already seen this.",
  "translatedText": "그런데 피타고라스의 정리에 대해 이야기하는 동안 제가 가장 좋아하는 증명을 아직 보지 못한 분들을 위해 공유하지 않는 것은 부끄러운 일입니다.",
  "model": "DeepL",
  "from_community_srt": "기원전 1800년경에 만들어진 바빌로니아 점토판에는 피타고라스 수 리스트가 있습니다 근데 우리가 이렇게 피타고라스 정리에 대해서 얘기하고 있는데, 제가 가장 좋아하는 증명을 단 한 번도 보지 못한 사람들에게 그걸 보여주지 않으면 아쉽겠죠?",
  "n_reviews": 0,
  "start": 77.36,
  "end": 84.88
 },
 {
  "input": "You start off by drawing a square on each side of the triangle, and if you take that c square and add four copies of the original triangle around it, you can get a big square whose side lengths are a plus b.",
  "translatedText": "먼저 삼각형의 각 변에 정사각형을 그리고, 그 정사각형을 중심으로 원래 삼각형의 복사본 네 개를 더하면 변의 길이가 A와 B를 더한 큰 정사각형을 얻을 수 있습니다.",
  "model": "DeepL",
  "from_community_srt": "먼저, 삼각형의 각 변을 한 변으로 하는 세 개의 정사각형을 그립니다 넓이가 c² 인 정사각형의 각 변에 원래 삼각형 4개를 덧붙이게 되면 한 변의 길이가 \"a + b\" 인 큰 정사각형이 되죠",
  "n_reviews": 0,
  "start": 85.52,
  "end": 97.74
 },
 {
  "input": "But you can also arrange the a square and the b square together with four copies of the original triangle to get a big square whose side lengths are a plus b.",
  "translatedText": "그러나 원래 삼각형의 복사본 네 개와 함께 a 정사각형과 b 정사각형을 배열하여 변의 길이가 a와 b를 더한 큰 정사각형을 얻을 수도 있습니다.",
  "model": "DeepL",
  "from_community_srt": "하지만 넓이가 a² 인 정사각형과 넓이가 b² 인 정사각형을 원래 삼각형 4개랑 같이 배열시켜도 한 변의 길이가 \"a + b\" 인 큰 정사각형이 만들어집니다 이게 무슨 뜻이냐면,",
  "n_reviews": 0,
  "start": 98.56,
  "end": 106.94
 },
 {
  "input": "What this means is that the negative space in each of these diagrams, the area of that big square minus four times the area of the triangle, is from one perspective clearly a squared plus b squared, but from another perspective it's c squared.",
  "translatedText": "즉, 각 다이어그램에서 음의 공간, 즉 큰 사각형의 면적에서 삼각형의 면적의 4배를 뺀 면적이 어떤 관점에서는 분명히 제곱에 B제곱을 더한 것이지만 다른 관점에서는 C제곱에 해당한다는 것입니다.",
  "model": "DeepL",
  "from_community_srt": "큰 정사각형 공간에서 삼각형 공간 4개를 빼고 남은 검정색 공간은 어떻게 보면, a² 과 b² 을 더한 공간으로 보이겠지만 어떻게 보면,",
  "n_reviews": 0,
  "start": 107.92,
  "end": 121.24
 },
 {
  "input": "Anyway, back to the question of finding whole number solutions.",
  "translatedText": "다시 정수의 해를 찾는 문제로 돌아가 보겠습니다.",
  "model": "DeepL",
  "from_community_srt": "c² 인 공간으로 보인다는 것입니다 어쨌든, 다시 정수 해를 찾는 질문으로 돌아갑시다 먼저,",
  "n_reviews": 0,
  "start": 122.84,
  "end": 125.7
 },
 {
  "input": "Start by reframing the question slightly.",
  "translatedText": "질문을 약간 바꿔서 시작하세요.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 126.52,
  "end": 128.62
 },
 {
  "input": "Among all of the points on the plane with integer coordinates, that is, all of these lattice points where grid lines cross, which ones are a whole number distance away from the origin?",
  "translatedText": "정수의 좌표를 가진 평면상의 모든 점, 즉 격자선이 교차하는 모든 격자점 중에서 원점에서 정수로 떨어진 곳은 어디일까요?",
  "model": "DeepL",
  "from_community_srt": "질문을 조금 바꾸겠습니다 정수를 가리키는 좌표평면의 모든 점들 중에서, (격자선들이 가로지르는 격자점들이 정수를 가리키죠) 어느 점과 원점 사이의 거리가 정수일까요? 예를 들어,",
  "n_reviews": 0,
  "start": 129.26,
  "end": 139.42
 },
 {
  "input": "For example, the point 3,4 is a distance 5 away from the origin, and the point 12,5 is a distance 13 away from the origin.",
  "translatedText": "예를 들어, 점 3,4는 원점에서 5 떨어진 거리이고 점 12,5는 원점에서 13 떨어진 거리입니다.",
  "model": "DeepL",
  "from_community_srt": "점 (3,4)와 원점 사이의 거리는 5 고,",
  "n_reviews": 0,
  "start": 140.18,
  "end": 148.7
 },
 {
  "input": "The question of finding Pythagorean triples is completely equivalent to finding lattice points which are a whole number distance away from the origin.",
  "translatedText": "피타고라스의 3배수를 구하는 문제는 원점에서 정수로 떨어진 격자점을 구하는 문제와 완전히 동일합니다.",
  "model": "DeepL",
  "from_community_srt": "점 (12,5)와 원점 사이의 거리는 13 이죠 피타고라스 수 찾기는 원점과의 거리가 정수인 격자점 찾기와 같습니다 물론,",
  "n_reviews": 0,
  "start": 149.36,
  "end": 157.74
 },
 {
  "input": "Of course, for most points, like 2,1, the distance from the origin is not a whole number, but it is at least the square root of a whole number.",
  "translatedText": "물론 2,1과 같은 대부분의 점에서 원점으로부터의 거리는 정수는 아니지만 적어도 정수의 제곱근입니다.",
  "model": "DeepL",
  "from_community_srt": "(2,1) 같은 대부분의 점들과 원점 사이의 거리는 정수가 아닙니다 하지만 적어도 √n 만큼은 떨어져 있죠 (※ n는 정수) 이 경우에는 \"2² + 1² = 5\" 니까",
  "n_reviews": 0,
  "start": 158.6,
  "end": 167.62
 },
 {
  "input": "In this case, 2 squared plus 1 squared is 5, so that distance, that hypotenuse there, is the square root of 5.",
  "translatedText": "이 경우 2제곱에 1제곱을 더하면 5이므로 거리, 즉 저기 빗변은 5의 제곱근입니다.",
  "model": "DeepL",
  "from_community_srt": "빗변의 길이는 √5 가 되겠네요 그럼 이제,",
  "n_reviews": 0,
  "start": 168.34,
  "end": 175.4
 },
 {
  "input": "Now, taking what might seem like a strange step, but one which will justify itself in just a moment, think of this as the complex plane, so that every one of these points, like 2,1 here, is actually an individual complex number, in this case 2 plus i.",
  "translatedText": "이제 이상한 단계처럼 보일 수 있지만 잠시 후에 정당화될 단계로, 이것을 복소수 평면이라고 생각하면 여기 2,1과 같은 모든 점이 실제로는 개별 복소수(이 경우 2 더하기 i)라고 생각할 수 있습니다.",
  "model": "DeepL",
  "from_community_srt": "좀 이상해 보여도 증명할 수 있는 방법을 잠깐 동안만 대입해봅시다 이 좌표평면을 복소평면으로 생각해보는 겁니다 (2,1) 과 같은 모든 점들이 한 개의 복소수가 되는 거죠 이 경우에는 2 + i 겠죠",
  "n_reviews": 0,
  "start": 177.04,
  "end": 192.22
 },
 {
  "input": "What this gives is a surprisingly simple way to modify it to get a new point whose distance away from the origin is guaranteed to be a whole number.",
  "translatedText": "이렇게 하면 놀랍도록 간단한 방법으로 수정하여 원점으로부터의 거리가 정수로 보장되는 새로운 점을 얻을 수 있습니다.",
  "model": "DeepL",
  "from_community_srt": "여기서, 새로운 점과 원점 사이의 거리가 정수가 되도록 수정하는 놀랍고 간단한 방법이 있습니다 그냥 제곱하면 됩니다 대수적으로,",
  "n_reviews": 0,
  "start": 192.98,
  "end": 200.96
 },
 {
  "input": "Just square it.",
  "translatedText": "그냥 정사각형입니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 201.6,
  "end": 202.46
 },
 {
  "input": "Algebraically, when you square a complex number, expanding out this product and matching up all of the like terms, because everything here just involves multiplying and adding integers, each component of the result is guaranteed to be an integer, in this case you get 3 plus 4i.",
  "translatedText": "대수적으로 복소수를 제곱하고 이 곱을 확장하여 같은 항을 모두 일치시킬 때, 여기서 모든 것은 정수를 곱하고 더하기만 하면 되므로 결과의 각 성분은 정수가 보장되며, 이 경우 3 더하기 4i를 얻게 됩니다.",
  "model": "DeepL",
  "from_community_srt": "복소수를 제곱할 땐 정수의 덧셈과 곱셈이랑 관련되어 있으므로 곱을 전개시켜 동류항끼리 더하죠 그리고 결과에서의 각 수들은 항상 정수입니다 이 경우에는 3 + 4i 겠네요",
  "n_reviews": 0,
  "start": 203.86,
  "end": 219.74
 },
 {
  "input": "But you can also think of complex multiplication more geometrically.",
  "translatedText": "하지만 복소수 곱셈을 좀 더 기하학적으로 생각할 수도 있습니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 220.82,
  "end": 224.08
 },
 {
  "input": "You take this line drawn from the origin to the number, and consider the angle it makes with the horizontal axis, as well as its length, which in this case is the square root of 5.",
  "translatedText": "원점에서 숫자까지 그려진 이 선을 가로축과 이루는 각도와 길이(이 경우 5의 제곱근)를 고려합니다.",
  "model": "DeepL",
  "from_community_srt": "그 외에도 복소수 곱셈을 좀 더 기하학적으로 생각할 수도 있습니다 원점과 그 복소수를 잇는 선분을 그리고 그 선분의 길이뿐만 아니라 x축과의 각도도 확인합니다 이 경우,",
  "n_reviews": 0,
  "start": 224.62,
  "end": 234.2
 },
 {
  "input": "The effect of multiplying anything by this complex number is to rotate it by that angle, and to stretch out by a factor equal to that length.",
  "translatedText": "어떤 것에 이 복소수를 곱하면 그 각도로 회전하고 그 길이만큼 늘어나는 효과를 얻을 수 있습니다.",
  "model": "DeepL",
  "from_community_srt": "선분의 길이는 √5 겠죠 이 복소수를 어떤 수와 곱한다는 것은 복소평면을 각도만큼 회전시킨 후,",
  "n_reviews": 0,
  "start": 235.3,
  "end": 243.74
 },
 {
  "input": "So when you multiply the number by itself, the effect is to double that angle, and importantly, to square its length.",
  "translatedText": "따라서 숫자를 곱하면 그 각도를 두 배로 늘리고 중요한 것은 길이를 제곱하는 효과가 있습니다.",
  "model": "DeepL",
  "from_community_srt": "그 선분의 길이만큼 배로 늘리는 것입니다 그러므로 그 수를 제곱한다는 건 각도를 두 배로 늘리고, 길이를 제곱한다는 거죠",
  "n_reviews": 0,
  "start": 245.04,
  "end": 252.84
 },
 {
  "input": "Since the length started off as the square root of some whole number, this resulting length is guaranteed to be a whole number, in this case 5.",
  "translatedText": "길이가 정수의 제곱근으로 시작했기 때문에 이 결과 길이는 정수(이 경우 5)가 보장됩니다.",
  "model": "DeepL",
  "from_community_srt": "처음 선분의 길이가 √n 이였기 때문에 (※ n는 정수) 제곱한 길이는 정수가 될 수밖에 없는겁니다 이 경우에는 제곱한 길이가 5 죠 그럼,",
  "n_reviews": 0,
  "start": 253.42,
  "end": 261.64
 },
 {
  "input": "Here, let's try it with another example.",
  "translatedText": "이제 다른 예제를 통해 시도해 보겠습니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 263.14,
  "end": 264.66
 },
 {
  "input": "Start off with some complex number that has integer coordinates, like 3 plus 2i.",
  "translatedText": "3 더하기 2i와 같은 정수 좌표를 가진 복소수로 시작하세요.",
  "model": "DeepL",
  "from_community_srt": "다른 예도 들어봅시다 정수로 이루어진 복소수 좌표 3 + 2i 를 정합니다 이 경우엔,",
  "n_reviews": 0,
  "start": 265.18,
  "end": 269.58
 },
 {
  "input": "In this case, the distance between this number and the origin is the square root of 3 squared plus 2 squared, which is the square root of 13.",
  "translatedText": "이 경우 이 숫자와 원점 사이의 거리는 3의 제곱에 2의 제곱을 더한 제곱근, 즉 13의 제곱근입니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 270.5,
  "end": 278.1
 },
 {
  "input": "Now multiply this complex number by itself.",
  "translatedText": "이제 이 복소수를 그 자체로 곱합니다.",
  "model": "DeepL",
  "from_community_srt": "\"3² + 2² = 13\" 이므로 이 복소수와 원점 사이의 거리는 √13 이죠 이제 이 복소수를 제곱합시다 실수부분은 \"3² + (2i)²\",",
  "n_reviews": 0,
  "start": 279.34,
  "end": 281.5
 },
 {
  "input": "The real part comes out to 3 squared plus 2i squared, which is 9 minus 4, and the imaginary part is 3 times 2 plus 2 times 3, so the result is 5 plus 12i, and the magnitude of this new number is 13, the square of the magnitude of our starting number, 3 plus 2i.",
  "translatedText": "실수 부분은 3제곱에 2i제곱을 더한 9 마이너스 4가 나오고, 허수 부분은 3 곱하기 2 곱하기 2 곱하기 3이 나오므로 결과는 5 곱하기 12i가 되고, 이 새로운 수의 크기는 시작 수의 크기인 3 곱하기 2i의 제곱인 13이 됩니다.",
  "model": "DeepL",
  "from_community_srt": "즉 \"9 - 4\" 이고, 허수부분은 \"3 × 2 + 2 × 3\" 이죠 따라서 답은 5 +12i 입니다 이 새로운 수와 원점 사이의 거리는 3 + 2i 와 원점 사이의 거리를 제곱한 값인 13 입니다 따라서 우리가 정한 격자점의 수를 제곱함으로써 5 12 13 삼각형을 만들 수 있게 된 것이죠",
  "n_reviews": 0,
  "start": 282.16,
  "end": 302.94
 },
 {
  "input": "So simply squaring our randomly chosen lattice point gives us the 512-13 triangle.",
  "translatedText": "따라서 무작위로 선택한 격자점을 제곱하면 512-13 삼각형이 됩니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 304.0,
  "end": 309.86
 },
 {
  "input": "There's something kind of magical about actually watching this work.",
  "translatedText": "이 작품을 실제로 보는 것은 일종의 마법과도 같습니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 310.54,
  "end": 313.74
 },
 {
  "input": "It almost feels like cheating.",
  "translatedText": "마치 속임수를 쓰는 것처럼 느껴집니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 313.8,
  "end": 315.22
 },
 {
  "input": "You can start with any randomly chosen lattice point, like 4 plus i, and just by taking its square, you generate a pythagorean triple.",
  "translatedText": "4 더하기 i와 같이 무작위로 선택한 격자 점으로 시작하여 그 제곱을 구하면 피타고라스의 3제곱을 생성할 수 있습니다.",
  "model": "DeepL",
  "from_community_srt": "이런 식으로 이어진다는 게 마법 같기도 하고 속임수 같기도 합니다 4 + i 같은 격자점을 아무거나 정하고 제곱하기만 해도 피타고라스 수를 찾을 수 있으니까요 이 경우엔 4 + i 를 제곱하면 15 + 8i 니까 원점과의 거리는 17 이겠네요",
  "n_reviews": 0,
  "start": 315.46,
  "end": 323.64
 },
 {
  "input": "In this case, 4 plus i squared is 15 plus 8i, which has a distance 17 away from the origin.",
  "translatedText": "이 경우 4 더하기 i 제곱은 15 더하기 8i이며, 원점으로부터의 거리는 17입니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 324.3,
  "end": 330.52
 },
 {
  "input": "If you play around with this, which I encourage you to do, you'll find that some of the results are kind of boring.",
  "translatedText": "이 기능을 사용해 보시면 일부 결과가 다소 지루하다는 것을 알 수 있습니다.",
  "model": "DeepL",
  "from_community_srt": "이런 식으로 계속하다보면 원하지 않았던 결과를 얻을 수도 있습니다 실수 좌표와 허수 좌표가 같거나 둘 중 하나가 0 이면,",
  "n_reviews": 0,
  "start": 331.56,
  "end": 336.68
 },
 {
  "input": "If both the coordinates of your starting point are the same, or if one of them is zero, then the triple at the end is going to include a zero.",
  "translatedText": "시작점의 좌표가 모두 같거나 둘 중 하나가 0이면 끝의 삼각형에 0이 포함됩니다.",
  "model": "DeepL",
  "from_community_srt": "피타고라스 수 중 하나가 0 이 되어버리는 거죠 예를 들어,",
  "n_reviews": 0,
  "start": 337.24,
  "end": 344.32
 },
 {
  "input": "For example, 2 plus 2i squared gives 8i, and even though technically this is indeed a lattice point a whole number distance away from the origin, the triple that it corresponds to is 0 squared plus 8 squared equals 8 squared, which isn't exactly something to write home about.",
  "translatedText": "예를 들어, 2 더하기 2i 제곱은 8i가 되는데, 기술적으로는 원점에서 정수로 떨어진 격자점이지만, 이 격자점에 해당하는 삼승은 0 제곱에 8 제곱을 더한 8 제곱으로, 정확히 말하자면 8 제곱이 아닙니다.",
  "model": "DeepL",
  "from_community_srt": "2 + 2i 를 제곱하면 8i 가 나옵니다 엄밀히 따지면, 8i 도 격자점이고 8i 와 원점 사이의 거리도 정수입니다 이걸 피타고라스 정리로 만들면 \"0² + 8² = 8²\" 이 되죠 굳이 말 안 해줘도 다 아는 거지만요 대부분의 경우,",
  "n_reviews": 0,
  "start": 345.06,
  "end": 362.52
 },
 {
  "input": "But for the most part, this method of squaring complex numbers is a surprisingly simple way to generate non-trivial pythagorean triples.",
  "translatedText": "하지만 대부분의 경우 복소수를 제곱하는 이 방법은 사소한 피타고라스 3제곱을 생성하는 놀랍도록 간단한 방법입니다.",
  "model": "DeepL",
  "from_community_srt": "복소수를 제곱하는 이 방법은 피타고라스 수를 만드는 쉬운 방법입니다 대부분의 경우,",
  "n_reviews": 0,
  "start": 363.18,
  "end": 370.94
 },
 {
  "input": "And you can even generalize it to get a nice formula.",
  "translatedText": "또한 이를 일반화하여 멋진 공식을 얻을 수도 있습니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 371.96,
  "end": 374.18
 },
 {
  "input": "If you write the coordinates of your initial point as u and v, then when you work out u plus vi squared, the real part is u squared minus v squared, and the imaginary part is 2 times uv.",
  "translatedText": "초기 점의 좌표를 u와 v로 적는다면, u에 vi 제곱을 더하면 실수 부분은 u 제곱에서 v 제곱을 뺀 값이고, 허수 부분은 u의 2배가 됩니다.",
  "model": "DeepL",
  "from_community_srt": "복소수를 제곱하는 이 방법은 피타고라스 수를 만드는 쉬운 방법입니다 심지어 이 방법을 멋진 공식으로 일반화할 수도 있습니다 처음 좌표를 \"u + vi\" 로 정하고 그걸 제곱하면",
  "n_reviews": 0,
  "start": 374.96,
  "end": 388.54
 },
 {
  "input": "The resulting distance from the origin is going to be u squared plus v squared.",
  "translatedText": "원점으로부터의 결과 거리는 u의 제곱에 v의 제곱을 더한 값이 됩니다.",
  "model": "DeepL",
  "from_community_srt": "실수 부분은 \"u² - v²\" 이 되고 허수 부분은 2uv 가 됩니다 제곱했을 때의 좌표와 원점 사이의 거리는 \"u² + v²\" 가 되죠",
  "n_reviews": 0,
  "start": 390.18,
  "end": 394.82
 },
 {
  "input": "It's kind of fun to work out this expression algebraically and see that it does indeed check out, and it's also fun to plug in some random integers for u and v and get out a pythagorean triple.",
  "translatedText": "이 식을 대수적으로 풀고 실제로 체크 아웃되는지 확인하는 것도 재미있고, u와 v에 임의의 정수를 대입하여 피타고라스의 3배를 구하는 것도 재미있습니다.",
  "model": "DeepL",
  "from_community_srt": "v²\" 가 되죠",
  "n_reviews": 0,
  "start": 395.92,
  "end": 406.18
 },
 {
  "input": "Essentially, we've created a machine where you give it any pair of integers, and it gives you back some pythagorean triple.",
  "translatedText": "기본적으로 저희는 임의의 정수 쌍을 주면 피타고라스의 3배를 돌려주는 기계를 만들었습니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 407.28,
  "end": 414.08
 },
 {
  "input": "A really nice way to visualize this, which will be familiar to any of you who watch the zeta video, is to watch every point of z on the plane move over to the point z squared.",
  "translatedText": "제타 동영상을 보신 분이라면 익숙하실 텐데, 이를 시각화하는 정말 좋은 방법은 평면의 모든 z 점이 z 제곱의 점으로 이동하는 것을 관찰하는 것입니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 415.46,
  "end": 425.68
 },
 {
  "input": "For example, the point 3 plus 2i is going to move over to 5 plus 12i.",
  "translatedText": "예를 들어, 포인트 3 더하기 2i는 5 더하기 12i로 이동합니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 426.7,
  "end": 431.6
 },
 {
  "input": "The point i is going to rotate 90 degrees to its square, negative 1.",
  "translatedText": "점 i는 제곱의 제곱인 음수 1로 90도 회전합니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 434.02,
  "end": 437.82
 },
 {
  "input": "The point negative 1 is going to move over to 1, and so on.",
  "translatedText": "음수 1 포인트는 1로 이동하는 식으로 이동합니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 438.38,
  "end": 441.96
 },
 {
  "input": "Now when you do this to every single point on the plane, including the grid lines, which I'll make more colorful so they're easier to follow, here's what it looks like.",
  "translatedText": "이제 그리드 선을 포함하여 평면의 모든 지점에 이 작업을 수행하면 다음과 같이 표시됩니다(따라하기 쉽도록 더 다채롭게 만들겠습니다).",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 442.82,
  "end": 450.42
 },
 {
  "input": "So the grid lines all get turned into these parabolic arcs, and every point where these arcs intersect is a place where a lattice point landed, so it corresponds to some pythagorean triple.",
  "translatedText": "그리드 선은 모두 포물선 호로 바뀌고, 이 호가 교차하는 모든 지점은 격자점이 떨어진 곳이기 때문에 피타고라스 삼각형에 해당합니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 455.42,
  "end": 466.5
 },
 {
  "input": "That is, if you draw a triangle whose hypotenuse is the line between any one of these points and the origin, and whose legs are parallel to the axes, all three side lengths of that triangle will be whole numbers.",
  "translatedText": "즉, 빗변이 이 점들 중 하나와 원점 사이의 선이고 다리가 축과 평행한 삼각형을 그리면 해당 삼각형의 세 변 길이가 모두 정수가 됩니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 467.32,
  "end": 478.52
 },
 {
  "input": "What I love about this is that usually when you view pythagorean triples just on their own, they seem completely random and unconnected, and you'd be tempted to say there's no pattern.",
  "translatedText": "제가 이 점을 좋아하는 이유는 일반적으로 피타고라스 삼각형만 보면 완전히 무작위적이고 연결되지 않은 것처럼 보이기 때문에 패턴이 없다고 말하고 싶을 것입니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 479.48,
  "end": 487.96
 },
 {
  "input": "But here we have a lot of them sitting together really organized, just sitting on the intersections of these nicely spaced curves.",
  "translatedText": "하지만 여기에는 많은 수의 곡선이 멋지게 간격을 두고 교차하는 교차점에 정말 정돈된 채로 모여 있습니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 488.48,
  "end": 495.76
 },
 {
  "input": "Now you might ask if this accounts for every possible pythagorean triple.",
  "translatedText": "이제 이것이 가능한 모든 피타고라스의 세 배를 설명하는지 물어볼 수 있습니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 504.58,
  "end": 508.5
 },
 {
  "input": "Sadly, it does not.",
  "translatedText": "안타깝게도 그렇지 않습니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 509.58,
  "end": 510.78
 },
 {
  "input": "For example, you will never get the point 6 plus 8i using this method, even though 6 8 10 is a perfectly valid pythagorean triple.",
  "translatedText": "예를 들어, 6 8 10이 완벽하게 유효한 피타고라스의 삼각형이지만 이 방법을 사용하면 6 더하기 8i라는 점을 얻을 수 없습니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 511.54,
  "end": 519.96
 },
 {
  "input": "There are simply no integers u and v where u plus vi squared is 6 plus 8i.",
  "translatedText": "u와 v의 제곱이 6과 8i인 정수는 존재하지 않습니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 520.52,
  "end": 526.68
 },
 {
  "input": "Likewise, you will never hit 9 plus 12i.",
  "translatedText": "마찬가지로 9에 12i를 더한 값은 절대 나오지 않습니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 527.56,
  "end": 530.48
 },
 {
  "input": "But these don't really feel like anything new, do they, since you can get each one of them by scaling up the familiar triple 3 4 5, which is accounted for in our method.",
  "translatedText": "하지만 익숙한 트리플 3 4 5를 확장하여 각각을 얻을 수 있기 때문에 새로운 것처럼 느껴지지는 않죠?",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 531.62,
  "end": 541.1
 },
 {
  "input": "In fact, for reasons that I'll explain shortly, every possible pythagorean triple we miss is just some multiple of a different triple we hit.",
  "translatedText": "사실, 곧 설명할 이유 때문에 우리가 놓칠 수 있는 모든 피타고라스 삼각형은 다른 삼각형의 일부 배수일 뿐입니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 542.18,
  "end": 550.82
 },
 {
  "input": "To give another example, we miss the point 4 plus 3i.",
  "translatedText": "다른 예를 들자면, 우리는 4 더하기 3i의 요점을 놓치고 있습니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 551.56,
  "end": 554.88
 },
 {
  "input": "There are no integers u and v, so that u plus vi squared is 4 plus 3i.",
  "translatedText": "정수 u와 v가 없으므로 u와 vi를 제곱하면 4와 3i가 됩니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 555.48,
  "end": 560.66
 },
 {
  "input": "In fact, you'll never hit any points whose imaginary component is odd.",
  "translatedText": "실제로 가상의 구성 요소가 홀수인 포인트는 절대 맞히지 않습니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 561.48,
  "end": 565.06
 },
 {
  "input": "However, we do hit 8 plus 6i, that's 3 plus i squared.",
  "translatedText": "하지만 8에 6i를 더하면 3에 i를 제곱한 값입니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 566.1,
  "end": 570.82
 },
 {
  "input": "So even though we miss 4 plus 3i, it's just one half times the point we do hit.",
  "translatedText": "따라서 4 더하기 3i를 놓치더라도 우리가 맞힌 점수의 절반에 불과합니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 571.46,
  "end": 576.62
 },
 {
  "input": "And by the way, you'll never have to scale down by anything smaller than one half.",
  "translatedText": "그리고 절반 이하로 축소할 필요는 없습니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 577.44,
  "end": 581.04
 },
 {
  "input": "A nice way to think about these multiples that we miss is to take each point that we get using this squaring method and draw a line from the origin through that point out to infinity.",
  "translatedText": "우리가 놓치고 있는 이러한 배수를 생각하는 좋은 방법은 이 제곱 방법을 사용하여 얻은 각 점을 원점에서 무한대까지 선을 그리는 것입니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 582.46,
  "end": 592.76
 },
 {
  "input": "Marking all of the lattice points that this line hits will account for any multiples of these points that we might have missed.",
  "translatedText": "이 선이 닿는 격자점을 모두 표시하면 놓쳤을 수 있는 격자점의 배수를 모두 설명할 수 있습니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 593.82,
  "end": 599.88
 },
 {
  "input": "Doing this for all possible points, you'll account for every possible pythagorean triple.",
  "translatedText": "가능한 모든 포인트에 대해 이 작업을 수행하면 가능한 모든 피타고라스의 세 배를 설명할 수 있습니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 603.7,
  "end": 609.22
 },
 {
  "input": "Every right triangle that you ever have seen or ever will see that has whole number side lengths is accounted for somewhere in this diagram.",
  "translatedText": "지금까지 보았거나 앞으로 보게 될 모든 정수의 변 길이를 가진 직각삼각형은 이 다이어그램의 어딘가에 설명되어 있습니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 610.0,
  "end": 618.18
 },
 {
  "input": "To see why, we'll now shift to a different view of the pythagorean triple problem, one that involves finding points on a unit circle that have rational coordinates.",
  "translatedText": "그 이유를 알아보기 위해 이제 단위 원에서 합리적인 좌표를 가진 점을 찾는 피타고라스의 삼중 문제에 대한 다른 관점으로 전환해 보겠습니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 622.76,
  "end": 631.88
 },
 {
  "input": "If you take the expression a squared plus b squared equals c squared and divide out by that c squared, what you get is a over c squared plus b over c squared equals 1.",
  "translatedText": "a 제곱에 b 제곱을 더한 값은 c 제곱이고, 그 c 제곱으로 나누면 a 제곱에 c 제곱을 더한 값에 b 제곱을 더한 값은 1이 됩니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 633.08,
  "end": 644.38
 },
 {
  "input": "This gives us some point on the unit circle x squared plus y squared equals 1 whose coordinates are each rational numbers.",
  "translatedText": "이렇게 하면 단위 원에서 x 제곱에 y 제곱을 더한 값은 1이 되고 좌표는 각각 유리수입니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 645.2,
  "end": 652.0
 },
 {
  "input": "This is what we call a rational point of the unit circle.",
  "translatedText": "이를 단위 원의 유리점이라고 합니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 652.4,
  "end": 655.68
 },
 {
  "input": "And going the other way around, if you find some rational point on the unit circle when you multiply out by a common denominator for each of those coordinates, what you'll land on is a point that has integer coordinates and whose distance from the origin is also an integer.",
  "translatedText": "반대로, 각 좌표에 공통 분모를 곱하면 단위 원에서 어떤 합리적인 점을 찾을 수 있다면, 원점으로부터의 거리도 정수가 되고 좌표가 정수인 점을 찾을 수 있습니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 656.22,
  "end": 670.42
 },
 {
  "input": "With that in mind, consider our diagram, where we squared every possible lattice point and then drew these radial lines through each one to account for any multiples that we might have missed.",
  "translatedText": "이를 염두에 두고 가능한 모든 격자점을 제곱한 다음 각 격자점을 통해 방사형 선을 그려 놓쳤을 수 있는 배수를 설명한 다이어그램을 생각해 보세요.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 671.7,
  "end": 681.22
 },
 {
  "input": "If you project all of these points onto the unit circle, each one moving along its corresponding radial line, what you'll end up with is a whole bunch of rational points on that circle.",
  "translatedText": "이 모든 점을 단위 원에 투영하고 각각 해당 방사선을 따라 이동하면 해당 원에 합리적인 점들이 가득 차게 됩니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 682.04,
  "end": 692.22
 },
 {
  "input": "And keep in mind, by the way, I'm drawing only finitely many of these dots and lines, but if I drew all infinitely many lines corresponding to every possible squared lattice point, it would actually fill every single pixel of the screen.",
  "translatedText": "참고로 저는 이 점과 선을 유한하게 많이 그리고 있지만, 가능한 모든 제곱 격자 점에 해당하는 선을 무한히 많이 그리면 실제로는 화면의 모든 픽셀을 채울 수 있습니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 693.44,
  "end": 706.04
 },
 {
  "input": "Now if our method was incomplete, if we were missing a Pythagorean triple out there somewhere, it would mean that there's some rational point on this circle that we never hit once we project everything onto the circle.",
  "translatedText": "만약 우리의 방법이 불완전하다면, 어딘가에 피타고라스의 3배가 누락되어 있다면, 모든 것을 원에 투영하면 절대 닿지 않는 어떤 합리적인 점이 이 원에 있다는 뜻이 됩니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 707.66,
  "end": 719.04
 },
 {
  "input": "And let me show you why that cannot happen.",
  "translatedText": "왜 그럴 수 없는지 보여드리겠습니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 719.9,
  "end": 722.1
 },
 {
  "input": "Take any one of those rational points and draw a line between it and the point at negative 1.",
  "translatedText": "그 합리적인 점 중 하나를 취하여 그 점과 음수 1의 점 사이에 선을 그립니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 723.12,
  "end": 728.72
 },
 {
  "input": "When you compute the rise over run slope of this line, the rise between the two points is rational and the run is also rational, so the slope itself is just going to be some rational number.",
  "translatedText": "이 선의 상승 대비 실행 기울기를 계산할 때 두 점 사이의 상승은 유리하고 실행도 유리하므로 기울기 자체는 유리한 숫자가 될 것입니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 729.34,
  "end": 741.76
 },
 {
  "input": "So if we can show that our method of squaring complex numbers accounts for every possible rational slope here, it's going to guarantee that we hit every possible rational point of the unit circle, right?",
  "translatedText": "따라서 복소수를 제곱하는 방법이 여기서 가능한 모든 유리한 기울기를 설명한다는 것을 보여줄 수 있다면 단위 원의 가능한 모든 유리한 점을 맞출 수 있겠죠?",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 742.52,
  "end": 754.42
 },
 {
  "input": "Well, let's think through our method.",
  "translatedText": "그럼, 우리의 방법을 생각해 봅시다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 756.72,
  "end": 758.58
 },
 {
  "input": "We start off with some point u plus vi that has integer coordinates, and this number makes some angle off of the horizontal, which I'm going to call theta.",
  "translatedText": "먼저 정수 좌표를 가진 점 u에 정수를 더한 값 vi로 시작하며, 이 숫자는 수평에서 약간의 각도를 만드는데 이를 세타라고 부를 것입니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 759.34,
  "end": 768.16
 },
 {
  "input": "Squaring this number, the resulting angle off the horizontal, is 2 times theta.",
  "translatedText": "이 숫자를 제곱한 결과 수평에서 벗어난 각도는 세타의 2배가 됩니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 768.9,
  "end": 774.22
 },
 {
  "input": "And of course, when you project that onto the unit circle, it's along the same radial line, so the corresponding rational point of the unit circle also has that same angle, 2 times theta.",
  "translatedText": "물론 이를 단위 원에 투영하면 동일한 방사선을 따라 있으므로 단위 원의 대응하는 유리점도 동일한 각도인 세타의 2배를 갖습니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 776.16,
  "end": 787.02
 },
 {
  "input": "And here, I'll bring in a nice little bit of circle geometry, which is that any time you have an angle between two points on the circumference of a circle and its center, that turns out to be exactly two times the angle made by those same points and any other point on the circle's circumference, provided that that other point isn't between the original two points.",
  "translatedText": "여기에서는 원 둘레의 두 점과 원심 사이에 각도가 있을 때마다 원래 두 점 사이에 있지 않다면 같은 점과 원 둘레의 다른 점이 이루는 각도의 정확히 두 배가 된다는 원 기하학에 대해 설명해 드리겠습니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 788.14,
  "end": 807.14
 },
 {
  "input": "What this means for our situation is that the line between negative 1 and the rational point on the circle must make an angle theta with the horizontal.",
  "translatedText": "이것이 우리 상황에서 의미하는 바는 음수 1과 원의 유리점 사이의 선이 수평과 세타 각을 이루어야 한다는 것입니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 808.4,
  "end": 817.36
 },
 {
  "input": "In other words, that line has the same slope as the line between the origin and our initial complex number, u plus vi.",
  "translatedText": "즉, 이 선은 원점과 초기 복소수인 u와 vi 사이의 선과 같은 기울기를 가집니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 818.74,
  "end": 826.16
 },
 {
  "input": "But look at the rise over run slope of the line defined by our choice of integers, u and v.",
  "translatedText": "하지만 우리가 선택한 정수인 u와 v에 의해 정의된 선의 상승 오버런 기울기를 살펴보십시오.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 826.78,
  "end": 832.48
 },
 {
  "input": "The slope is v divided by u.",
  "translatedText": "기울기는 V를 U로 나눈 값입니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 833.28,
  "end": 835.22
 },
 {
  "input": "And of course, we can choose v and u to be whatever integers we want, and therefore we do indeed account for every possible rational slope.",
  "translatedText": "물론 v와 u를 원하는 정수로 선택할 수 있으므로 실제로 가능한 모든 합리적인 기울기를 설명할 수 있습니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 836.06,
  "end": 844.66
 },
 {
  "input": "So there you go!",
  "translatedText": "이제 됐어요!",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 845.82,
  "end": 846.46
 },
 {
  "input": "The radial lines from our method, determined by all possible choices of u and v, must pass through every rational point on this circle.",
  "translatedText": "이 방법의 방사선은 가능한 모든 u와 v 선택에 의해 결정되며, 이 원의 모든 합리적인 점을 통과해야 합니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 847.08,
  "end": 855.84
 },
 {
  "input": "And that means our method must hit every possible Pythagorean triple.",
  "translatedText": "즉, 우리의 방법은 가능한 모든 피타고라스 삼중 항을 맞혀야 합니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 856.16,
  "end": 860.4
 },
 {
  "input": "If you haven't already watched the video about pi hiding in prime regularities, the topics there are highly related to the ones here.",
  "translatedText": "소수의 규칙성에 숨어 있는 파이에 관한 동영상을 아직 보시지 않으셨다면, 여기 주제와 매우 관련이 있는 내용입니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 867.54,
  "end": 892.26
 }
]