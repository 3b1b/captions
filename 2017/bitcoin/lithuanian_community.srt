1
00:00:04,220 --> 00:00:06,780
Ką reiškia *turėti* bitkoiną?

2
00:00:07,440 --> 00:00:09,410
Daugelis žmonių girdėjo apie Bitkoiną, kad

3
00:00:09,410 --> 00:00:12,570
tai pilnai skaitmeninė valiuta, kuri neturi centrinės ją leidžiančios valdžios;

4
00:00:12,690 --> 00:00:16,130
ir kad jokiems bankams nereikia tvarkyti sąskaitų ir tikrinti transakcijų;

5
00:00:16,350 --> 00:00:19,080
ir taip pat, kad niekas tikrai nežino, kas jį iš tikro išrado.

6
00:00:19,440 --> 00:00:23,570
Ir visgi, daugelis žmonių nežino atsakymo į šį klausimą, bent jau ne pilnai.

7
00:00:24,340 --> 00:00:25,120
Kad tai atsakytume,

8
00:00:25,120 --> 00:00:29,780
ir, kad būtume tikri, kad techninės detalės esančios atsakyme jaustųsi motyvuotos,

9
00:00:29,780 --> 00:00:32,340
ką mes padarysim, tai praeisime žingnis po žingsnio

10
00:00:32,340 --> 00:00:35,600
kaip tu galėjai išrasti savo paties Bitkoino versiją.

11
00:00:36,120 --> 00:00:40,050
Pradėsime tuom, kad tu ir tavo draugai sekate savo mokėjimus naudodami bendruomenės apskaitos knygą.

12
00:00:40,370 --> 00:00:44,690
Ir tada, kai pradedi pasitikėti savo draugais ir pasauliu aplink tave vis mažiau ir mažiau,

13
00:00:44,910 --> 00:00:48,130
ir jei esi pakankamai gudrus pridėti keletą kriptografijos idėjų,

14
00:00:48,130 --> 00:00:50,260
kad apeitum pasitikėjimo reikalingumą -

15
00:00:50,260 --> 00:00:53,310
tai, ką sukursi, yra vadinama "kriptovaliuta".

16
00:00:53,700 --> 00:00:58,040
Matai, Bitkoinas tėra pirmas implemetuotas kriptovaliutos pavyzdys.

17
00:00:58,340 --> 00:01:02,840
Ir dabar yra tūkstančiai kitų biržose su tradicinėmis valiutomis.

18
00:01:03,280 --> 00:01:06,410
Eiti kelią išrandant savo kriptovaliutą gali padėti pagrindus

19
00:01:06,410 --> 00:01:09,440
kai kurių visai neseniai pasirodžiusių žaidime veikėjų supratimui,

20
00:01:09,440 --> 00:01:13,600
ir kada ir kodėl yra vietos skirtingų dizaino/projektavimo pasirinkimų atpažinimui.

21
00:01:14,050 --> 00:01:16,300
Iš tiesų, viena iš priežasčių, kodėl pasirinkau šią temą yra tai,

22
00:01:16,300 --> 00:01:20,060
kad per paskutinius metus atsirado didžiulis kiekis dėmesio ir investavimo

23
00:01:20,060 --> 00:01:23,600
ir, na, nuoširdžiai nepagrįsto susijaudinimo (hype'o) nukreipto į šias valiutas.

24
00:01:24,320 --> 00:01:28,060
Ir aš neketinu komentuoti ar spekuliuoti apie dabartinius ir ateities valiutos kursus,

25
00:01:28,060 --> 00:01:29,350
bet manau mes visi galime sutarti, kad

26
00:01:29,350 --> 00:01:33,640
bet kas, planuojantis pirkti kriptovaliutą, turėtų iš tikro žinoti, kas tai yra.

27
00:01:33,920 --> 00:01:38,080
Ir aš neturiu galvoje supratimo palyginimais, su neaiškiais ryšiais su aukso kasimu;

28
00:01:38,080 --> 00:01:42,510
turiu galvoje tikrą tiesioginį aprašymą, ką kompiuteriai daro

29
00:01:42,510 --> 00:01:45,660
kai mes siunčiame, gauname ir sukuriame kriptovaliutas.

30
00:01:46,800 --> 00:01:48,870
Vienas dalykas vertas pabrėžti, beje, yra tai,

31
00:01:48,870 --> 00:01:51,930
kad nors mes čia ir įsigilinsime į detales,

32
00:01:52,120 --> 00:01:53,830
ir tai užtruks vertingą laiką,

33
00:01:54,110 --> 00:01:58,770
tau iš tikro nereikia žinoti šių detalių, jei tenori naudoti kriptovaliutą,

34
00:01:59,070 --> 00:02:03,290
lygiai taip pat, kaip tau nereikia žinoti smulkmenų, kas vyksta po kapotu, kai atsiskaitydamas perbrauki kreditine kortele.

35
00:02:03,680 --> 00:02:07,190
Kaip bet koks skaitmeninis apmokėjimas, yra daugybė vartotojui draugiškų aplikacijų, kurios

36
00:02:07,190 --> 00:02:11,260
leidžia tau tiesiog siųsti ir gauti valiutas, nereikiant galvoti, kas vyksta.

37
00:02:11,780 --> 00:02:14,940
Skirtumas yra tai, kad stuburas, esantis po viskuom,

38
00:02:14,940 --> 00:02:17,300
yra ne bankas, kuris tikrina transakcijas.

39
00:02:17,620 --> 00:02:21,970
Vietoj to, tai gudri decentralizuota patikrinimo be pasitikėjimo sistema,

40
00:02:22,180 --> 00:02:24,850
paremta tam tikros matematika, kilusios iš kriptografijos.

41
00:02:25,910 --> 00:02:26,460
Bet prieš pradedant

42
00:02:26,460 --> 00:02:30,730
noriu, kad padėtum kriptovaliutas ir visa kita į šalį minutėlei.

43
00:02:31,040 --> 00:02:35,810
Pradėsim istoriją su kai kuo daug žemiškesniu: apskaitos įrašais ir skaitmeniniais parašais.

44
00:02:36,400 --> 00:02:38,980
Jei tu ir tavo draugai keičiatės pinigais gana dažnai,

45
00:02:38,980 --> 00:02:41,660
na žinai, mokat savo dalį už vakarienę ir panašiai,

46
00:02:41,660 --> 00:02:44,250
gali būti nepatogu keistis grynais pinigais visą laiką.

47
00:02:44,700 --> 00:02:46,300
Tad galbūt turite bendruomeninę apskaitos knygą,

48
00:02:46,300 --> 00:02:50,190
kurioje surašyti visi sumokėjimai, kuriuose planuoji padaryti kažkuriuo metu ateityje.

49
00:02:50,500 --> 00:02:52,470
Na žinai, Alisa moka Bobui $20,

50
00:02:52,470 --> 00:02:54,940
Bobas moka Čarliui $40, tokio tipo dalykai.

51
00:02:55,580 --> 00:02:58,920
Ši apskaita bus vieša ir prienama visiems,

52
00:02:58,920 --> 00:03:01,980
kaip internetinis puslapis, kur bet kas gali nueiti ir pridėti naujas eilutes.

53
00:03:02,530 --> 00:03:04,320
Ir sakykim, kad kiekvieno mėnesio gale

54
00:03:04,320 --> 00:03:07,930
jūs visi susirenkat, pažiūrit į transakcijų sąrašą ir atsiskaitot.

55
00:03:08,290 --> 00:03:11,450
Jei išleidai daugiau, nei gavai, padedi tuos pinigus į bendrą katilą;

56
00:03:11,450 --> 00:03:14,560
ir jei gavai daugiau, nei išleidai, tu pasiimi tuos pinigus.

57
00:03:15,390 --> 00:03:19,530
Taigi buvimo šios labai paprastos sistemos dalimi protokolas gali atrodyti taip:

58
00:03:19,950 --> 00:03:22,000
bet kas gali pridėti eilutes į apskaitą;

59
00:03:22,000 --> 00:03:25,340
ir kiekvieno mėnesio gale visi susirenkat ir atsiskaitot.

60
00:03:26,240 --> 00:03:31,010
Dabar, viena problema su vieša apskaita yra ta, kad bet kas gali pridėti eilutę.

61
00:03:31,010 --> 00:03:37,240
Tai kas trukdo Bobui prirašyti "Alisa sumoka Bobui $100" be Alisos patvirtinimo?

62
00:03:37,750 --> 00:03:41,260
Kaip mes turėtume pasitikėti, kad visos šios transakcijos

63
00:03:41,260 --> 00:03:43,400
yra tai, ką siuntėjas turėjo galvoje, kad jos yra?

64
00:03:44,810 --> 00:03:48,850
Na, štai čia atsiranda pirmasis gabaliukas kriptografijos: skaitmeniniai parašai.

65
00:03:49,460 --> 00:03:50,960
Kaip ir su ranka rašytais parašais,

66
00:03:50,960 --> 00:03:55,830
idėja čia yra ta, kad Alisa turėtų galėti pridėti kažką prie tos transakcijos,

67
00:03:55,830 --> 00:03:58,720
kas įrodo, kad ji ją matė ir ji ją patvirtino.

68
00:03:59,220 --> 00:04:03,490
Ir turėtų būti neįmanoma bet kam kitam padirbti tą parašą.

69
00:04:04,360 --> 00:04:08,790
Iš pradžių, gali atrodyti, kad skaitmeninis parašas neturėtų net būti įmanomas.

70
00:04:09,130 --> 00:04:14,160
Turiu galvoje, kad ir kokie duomenys sudaro šį parašą, jie gali būti kompiuterio nuskaityti ir nukopijuoti,

71
00:04:14,390 --> 00:04:16,580
tad kaip galime užkirsti kelią padirbimui?

72
00:04:17,300 --> 00:04:22,200
Na, būdas, kaip tai veikia yra tai, kad visi sugeneruoja kas yra vadinama "viešo rakto - privataus rakto porą",

73
00:04:22,200 --> 00:04:24,410
kur kiekvienas raktas atrodo kaip tam tikra bitų eilutė.

74
00:04:24,810 --> 00:04:27,280
"Privatus raktas" kartais yra vadinamas "slaptu raktu",

75
00:04:27,280 --> 00:04:31,670
tad galime sutrumpinti jį kaip "sk", o viešąjį raktą kaip "pk".

76
00:04:32,400 --> 00:04:36,480
Dabar, kaip pavadinimas ir užsimena, šis slaptas raktas yra kažkas, ką tu nori pasilaikyti tik sau pačiam.

77
00:04:37,080 --> 00:04:41,950
Realiame pasaulyje, tavo ranka rašytass parašas atrodo taip pat, nesvarbu, kokį dokumentą pasirašai.

78
00:04:42,480 --> 00:04:45,080
Bet skaitmeninis parašas iš tikro yra daug stipresnis,

79
00:04:45,080 --> 00:04:47,320
nes jis keičiasi su kiekviena skirtinga žinute.

80
00:04:47,880 --> 00:04:52,900
Jis atrodo kaip vienetų ir nulių eilutė, paprastai galbūt 256 bitai;

81
00:04:53,310 --> 00:04:55,840
ir keičiant žinutę net vos vos

82
00:04:55,840 --> 00:04:59,760
visiškai pakeičia kaip parašas ant tos žinutės turėtų atrodyti.

83
00:05:00,910 --> 00:05:02,720
Kalbant truputį formaliau,

84
00:05:02,720 --> 00:05:08,720
parašo sukūrime dalyvauja funkcija, kuri priklauso ir nuo pačios žinutės ir nuo tavo privataus rakto.

85
00:05:09,260 --> 00:05:12,590
Privatus raktas užtikrina, kad tik tu vienas gali sukurti tą parašą,

86
00:05:12,900 --> 00:05:15,180
ir tas faktas, kad parašas priklauso nuo žinutės,

87
00:05:15,180 --> 00:05:19,870
reiškia, kad niekas negali tiesiog nukopijuoti vieno iš tavo parašų ir padirbti jį ant kitos žinutės.

88
00:05:21,120 --> 00:05:25,850
Kartu su tuo yra antra funkcija, skirta patikrinti, kad parašas yra validus (tikras, nepadirbtas).

89
00:05:26,280 --> 00:05:28,420
Ir štai čia dalyvauja viešas raktas.

90
00:05:29,170 --> 00:05:31,470
Viskas, ką ši funkcija daro, tai išveda "tiesa" arba "netiesa",

91
00:05:31,470 --> 00:05:34,740
kad parodytų, ar šis parašas buvo sukurtas privačiu raktu,

92
00:05:34,740 --> 00:05:38,080
asocijuotu su viešu raktu, kurį naudoji patikrinimui.

93
00:05:38,610 --> 00:05:42,240
Aš nesismulkinsiu, kaip konkrečiai šios abi funkcijos veikia,

94
00:05:42,240 --> 00:05:47,590
bet idėja yra ta, kad turėtų būti visiškai neįmanoma surasti validų parašą,

95
00:05:47,590 --> 00:05:49,390
jei nežinai slapto rakto.

96
00:05:50,040 --> 00:05:54,970
Specifiškai, nėra geresnės strategijos negu tiesiog spėti ir tikrinti atsitiktinai parašus,

97
00:05:54,970 --> 00:05:58,080
kuriuos gali patikrinti viešu raktu, kurį visi žino.

98
00:05:59,020 --> 00:06:03,370
Dabar pagalvok, kiek yra parašų su 256 bitų ilgiu.

99
00:06:03,790 --> 00:06:06,810
Tai 2^256 (2 pakelta 256 laipsniu).

100
00:06:07,350 --> 00:06:09,880
Tai yra durnai didelis skaičius.

101
00:06:09,880 --> 00:06:13,900
Vadinti jį astronomiškai dideliu, būtų per didelis garbės priskyrimas astronomijai.

102
00:06:14,290 --> 00:06:19,880
Iš tiesų, padariau papildinį video skirtą vien tam, kad iliustruočiau, koks milžiniškas šis skaičius yra.

103
00:06:20,360 --> 00:06:21,860
Čia, tiesiog sakykim,

104
00:06:21,860 --> 00:06:25,470
kad kai tu patikrinai ar parašas tam tikrai duotai žinutei yra validus,

105
00:06:25,830 --> 00:06:30,420
tu gali jaustis visiškai tikras, kad vienintelis būdas, kaip kažkas galėjo jį sukurti,

106
00:06:30,420 --> 00:06:35,360
tai yra tik jei jis žinojo slaptą raktą, asocijuotą su viešu raktu, kurį tu naudojai patikrinimui.

107
00:06:37,040 --> 00:06:40,960
Dabar užtikrinti, kad žmonės pasirašo transakcijas apskaitoje yra visai gerai,

108
00:06:40,960 --> 00:06:42,410
bet yra vienas nedidelis apėjimas:

109
00:06:42,850 --> 00:06:46,880
jei Alisa pasirašo transakciją, pavyzdžiui "Alisa sumoka Bobui $100",

110
00:06:46,880 --> 00:06:50,740
nors Bobas ir negali padirbti Alisos parašo naujai žinutei,

111
00:06:50,740 --> 00:06:53,890
jis tiesiog gali nukopijuoti tą pačią eilutę kiek nori kartų.

112
00:06:54,190 --> 00:06:57,400
Turiu galvoje, toji žinutės - parašo kombinacija išlieka validi.

113
00:06:57,970 --> 00:07:01,970
Kad išspręstume tai, padarome taip, kad, kai transakcija pasirašoma,

114
00:07:01,970 --> 00:07:07,310
žinutėje privalo taip pati būti kažkoks unikalus identifikacinis numeris, surištas su ta transakcija.

115
00:07:07,880 --> 00:07:11,710
Tokiu būdu, jei Alisa sumoka Bobui $100 keletą kartų,

116
00:07:11,710 --> 00:07:15,740
kiekviena iš tų eilučių apskaitoje privalo turėti visiškai naują parašą.

117
00:07:16,960 --> 00:07:17,880
Gerai, puiku!

118
00:07:18,160 --> 00:07:22,380
Skaitmeniniai parašai panaikina didelį kiekį pasitikėjimo reikalavimo šiame pradiniame protokole,

119
00:07:22,380 --> 00:07:24,910
bet visgi, jei tu darytum šitai,

120
00:07:24,910 --> 00:07:27,460
tu visvien pasitikėtum tam tikra garbės sistema.

121
00:07:27,720 --> 00:07:30,460
Konkrečiai, tu pasitiki, kad kiekvienas iš tikrųjų dalyvaus

122
00:07:30,470 --> 00:07:33,010
ir susimokės mėnesio gale grynais pinigais.

123
00:07:33,620 --> 00:07:37,590
O kas jei, pavyzdžiui, Čarlis prisirinks tūkstančių dolerių skolą

124
00:07:37,590 --> 00:07:39,410
ir tiesiog atsisakys pasirodyti?

125
00:07:40,240 --> 00:07:43,270
Vienintelė priežastis, grįžti prie grynųjų pinigų atsiskaitymui

126
00:07:43,270 --> 00:07:47,300
yra jei kai kurie žmonės (žiūriu į tave, Čarli) yra skolingi daug pinigų.

127
00:07:48,010 --> 00:07:52,440
Taigi galbūt tu turi gudrią idėją, kad jūs iš tikrųjų niekad neatsiskaitot grynaisiais pinigais,

128
00:07:52,440 --> 00:07:56,740
tol, kol turit kažkokį būdą užkirsti kelią žmonėms išleisti daug daugiau, nei jie pasiima iš kitų žmonių.

129
00:07:57,390 --> 00:08:01,280
Galbūt, ką jūs darot, tai pradedat nuo to, kad kiekvienas sumoka po $100 į bendrą katilą,

130
00:08:01,580 --> 00:08:04,080
ir tada turit pirmas kelias eilutes apskaitoje parašytas

131
00:08:04,080 --> 00:08:08,460
"Alisa gauna $100", "Bobas gauna $100", "Čarlis gauna $100" ir t. t.

132
00:08:09,170 --> 00:08:12,560
Dabar, tiesiog nepriimk jokių transakcijų,

133
00:08:12,560 --> 00:08:16,210
kur kažkas išleidžia daugiau, nei turi toje apskaitoje.

134
00:08:16,850 --> 00:08:20,030
Pavyzdžiui, jei pirmos dvi transakcijos yra

135
00:08:20,030 --> 00:08:24,240
"Čarlis moka Alisai $50" ir "Čarlis moka Bobui $50",

136
00:08:24,480 --> 00:08:29,690
jei jis bandytų pridėti "Čarlis moka tau $20", tai būtų nevalidu,

137
00:08:29,690 --> 00:08:32,100
taip nevalidu, kaip kad lyg jis nepasirašė tos transakcijos.

138
00:08:33,010 --> 00:08:35,940
Pastebėk, kad tai reiškia, kad transakcijos patikrinimui

139
00:08:35,940 --> 00:08:39,600
reikia žinoti pilną transakcijų istoriją iki šio momento.

140
00:08:40,140 --> 00:08:43,970
Ir tai bus daugmaž teisinga ir kriptovaliutose,

141
00:08:43,970 --> 00:08:46,260
nors ten yra truputis vietos optimizavimui.

142
00:08:48,750 --> 00:08:50,120
Kas čia yra įdomu yra tai,

143
00:08:50,120 --> 00:08:55,900
kad šis žingsnis panaikina bet kokį ryšį tarp apskaitos ir tikro fizinio JAV dolerio.

144
00:08:56,310 --> 00:08:59,680
Teoriškai, jei visi pasaulyje naudotų šią apskaitos knygą,

145
00:08:59,680 --> 00:09:03,640
galėtum gyventi savo visą gyvenimą tiesiog siųsdamas ir priimdamas pinigus šioje apskaitoje

146
00:09:03,640 --> 00:09:06,960
nereikiant konvertuoti į tikrus JAV dolerius.

147
00:09:07,430 --> 00:09:08,920
Iš tiesų, kad pabrėžtume šią mintį,

148
00:09:08,920 --> 00:09:14,310
pradėkime vadinti kiekius apskaitoje apskaitos doleriais arba trumpiau "LD".

149
00:09:14,790 --> 00:09:18,900
Žinoma, tu gali laisvai keisti apskaitos dolerius į tikrus JAV dolerius.

150
00:09:19,070 --> 00:09:22,750
Pavyzdžiui, galbūt Alisa duoda Bobui $10 tikrame pasaulyje

151
00:09:22,750 --> 00:09:26,000
už tai, kad jis pridėjo ir pasirašė transakciją

152
00:09:26,000 --> 00:09:29,830
"Bobas moka Alisai 10 LD" į šią bendruomeninią apskaitos knygą.

153
00:09:30,820 --> 00:09:34,490
Bet tokie mainai, jie nebus užtikrinti protokolo.

154
00:09:34,840 --> 00:09:38,510
Dabar tai yra labiau lygintina kaip doleriai iškeičiami į eurus,

155
00:09:38,510 --> 00:09:40,830
arba bet kurią kitą valiutą atviroje biržoje,

156
00:09:41,160 --> 00:09:44,080
tai tiesiog yra savo paties nepriklausomas dalykas.

157
00:09:44,690 --> 00:09:50,380
Tai yra pirmas svarbus dalykas, kurį reikia suprasti apie Bitkoiną arba bet kurią kitą kriptovaliutą:

158
00:09:50,850 --> 00:09:56,320
kas tai yra, tai - apskaita; transakcijų istorija yra valiuta.

159
00:09:57,110 --> 00:09:58,440
Žinoma, Bitkoine,

160
00:09:58,440 --> 00:10:01,970
pinigai neateina į apskaitą žmonėms tiesiog susimokant grynais pinigais.

161
00:10:01,970 --> 00:10:05,040
Aš prieisiu prie to, kaip nauji pinigai įeina į apskaitą po kelių minučių,

162
00:10:05,530 --> 00:10:08,710
bet prieš tai, iš tikro yra dar didesnis skirtumas

163
00:10:08,710 --> 00:10:12,590
tarp mūsų dabartinės apskaitos sistemos dolerių ir kaip kriptovaliutos veikia.

164
00:10:13,000 --> 00:10:16,080
Kolkas, aš sakiau, kad ši apskaita yra kažkokioje viešoje vietoje,

165
00:10:16,080 --> 00:10:18,720
kaip interneto puslapis, kur bet kas gali pridėti naujas eilutes.

166
00:10:19,220 --> 00:10:22,080
Bet tam reiktų pasitikėti centrine vieta,

167
00:10:22,080 --> 00:10:24,240
konkrečiai "kam priklauso interneto puslapis?",

168
00:10:24,240 --> 00:10:27,060
"kas kontroliuoja taisykles, kaip pridėti naujas eilutes?".

169
00:10:27,550 --> 00:10:32,260
Kad pašalintume tą gabaliuką pasitikėjimo, mums reikės, kad visi turėtų savo pačių apskaitos kopiją.

170
00:10:32,760 --> 00:10:37,100
Tada, kai tu nori padaryti transakciją, kaip Alisa sumoka Bobui 100 LD,

171
00:10:37,400 --> 00:10:39,960
ką Tu darai, tai transliuoji šitai į pasaulį,

172
00:10:39,960 --> 00:10:43,740
kad žmonės išgirstų ir įsirašytų į savo asmenines apskaitas.

173
00:10:44,850 --> 00:10:49,460
Bet, nebent padarysi kažką dar, ši sistema yra absurdiškai bloga.

174
00:10:49,800 --> 00:10:53,040
Kaip padarysi, kad visi sutartų, kuri apskaita yra teisinga?

175
00:10:53,400 --> 00:10:57,620
Kai Bobas gauna transakciją, kaip Alisa moka Bobui 10 LD,

176
00:10:57,620 --> 00:11:01,960
kaip jis gali būti tikras, kad visi kiti gavo ir pasitiki ta pačia transakcija,

177
00:11:02,290 --> 00:11:07,550
kad jis galės vėliau nueiti pas Čarlį ir panaudoti tuos pačius 10 LD, kad padarytų naują transakciją?

178
00:11:08,300 --> 00:11:12,480
Rimtai, įsivaizduok save tik besiklausant transakcijų, kurios transliuojamos,

179
00:11:12,950 --> 00:11:18,460
kaip gali būti tikras, kad visi kiti užfiksuoja tas pačias transakcijas tokia pat tvarka?

180
00:11:19,460 --> 00:11:21,540
Šitai iš tikro ir yra problemos esmė.

181
00:11:21,540 --> 00:11:23,000
Tai įdomus galvosūkis.

182
00:11:23,450 --> 00:11:27,910
Ar gali sugalvoti protokolą kaip priimti ar atmesti transakcijas

183
00:11:27,910 --> 00:11:31,160
ir kokia tvarka, taip, kad jaustumeisi tikras, kad

184
00:11:31,160 --> 00:11:34,860
bet kas kitas pasaulyje, kuris laikosi to paties protokolo

185
00:11:34,860 --> 00:11:38,000
turi asmeninę apskaitą, kuri atrodo taip pat kaip tavo?

186
00:11:38,510 --> 00:11:41,800
Tai yra problema, spręsta pirminiame Bitkoino straipsnyje.

187
00:11:44,530 --> 00:11:47,640
Aukštame lygyje, sprendimas, kurį Bitkoinas siūlo yra

188
00:11:47,640 --> 00:11:52,040
pasitikėti ta apskaita, kuri yra įdėjusi daugiausiai skaičiuojamojo darbo.

189
00:11:52,600 --> 00:11:55,240
Aš paskirsiu laiko paaiškinti, ką tai reiškia.

190
00:11:55,240 --> 00:11:58,290
Su tuom susijęs toks dalykas kaip "kriptografinės hešo (smulkinimo ir maišymo) funkcijos".

191
00:11:58,510 --> 00:12:00,540
Bendra idėja, kuria remsimės

192
00:12:00,540 --> 00:12:04,910
yra tai, kad jei naudoji skaičiuojamąjį darbą kaip pagrindu pasitikėjimui,

193
00:12:05,310 --> 00:12:08,810
gali padaryti taip, kad apgaulingoms transakcijoms ir konfliktuojančioms apskaitoms

194
00:12:08,810 --> 00:12:12,400
reiktų atlikti neįmanomai didelius skaičiavimus.

195
00:12:12,990 --> 00:12:15,930
Vėlgi, priminsiu, kad lendame giliai į detales,

196
00:12:15,930 --> 00:12:19,750
kurių tikrai nereiktų žinoti tiesiog norint naudoti tokią valiutą,

197
00:12:20,130 --> 00:12:21,600
bet tai tikrai kieta idėja!

198
00:12:21,600 --> 00:12:26,950
Ir jei supranti ją, supranti Bitkoino ir kitų valiutų esmę.

199
00:12:27,990 --> 00:12:30,230
Taigi, visų pirma, kas yra hešo funkcija?

200
00:12:30,750 --> 00:12:34,300
Įvestys vienai iš šių funkcijų gali būti bet kokio tipo žinutė arba failas,

201
00:12:34,300 --> 00:12:35,540
specifika tikrai nėra svarbi.

202
00:12:35,730 --> 00:12:40,820
O išvestis yra bitų eilutė su fiksuotu ilgiu, pavyzdžiui 256 bitai.

203
00:12:41,420 --> 00:12:45,040
Ši išvestis yra vadinama tos žinutės "hešu" arba "santrauka".

204
00:12:45,380 --> 00:12:47,980
Ir esmė yra ta, kad ši eilutė atrodo atsitiktinė.

205
00:12:48,220 --> 00:12:51,850
Ji nėra atsitiktinė - funkcija visada duos tą pačią išvestį tai pačiai duotai įvesčiai.

206
00:12:52,290 --> 00:12:53,120
Bet idėja yra ta, kad

207
00:12:53,120 --> 00:12:57,640
jei tu truputį pakeisi įvestį, galbūt pakeisdamas tik vieną simbolį,

208
00:12:57,950 --> 00:13:00,420
iš to sekantis hešas visiškai pasikeis.

209
00:13:01,030 --> 00:13:05,680
Iš tiesų, hešo funkcijoje, pavadinimu SHA256, kurią čia rodau,

210
00:13:05,980 --> 00:13:12,010
tai, kaip išvestis keičiasi, kai truputį pakeičiama įvestis, yra visiškai nenuspėjama.

211
00:13:12,490 --> 00:13:15,080
Matai, tai ne bet kokia hešo funkcija,

212
00:13:15,080 --> 00:13:17,360
tai kriptografinė hešo funkcija.

213
00:13:17,360 --> 00:13:20,830
Tai reiškia, yra neįmanoma skaičiuoti atvirkštine kryptimi.

214
00:13:21,320 --> 00:13:23,620
Jei parodysiu tau kažkokią vienetų ir nulių eilutę

215
00:13:23,620 --> 00:13:25,860
ir paprašysiu tavęs surasti įvestį

216
00:13:25,860 --> 00:13:31,320
taip, kad tos įvesties SHA256 hešas  duotų būtent šią bitų eilutę,

217
00:13:31,640 --> 00:13:34,910
tu neturėsi geresnio metodo nei tiesiog spėti ir patikrinti.

218
00:13:35,770 --> 00:13:42,260
Ir vėl, jei nori pajausti kiek skaičiavimo reikėtų, kad praeitum per 2^256 spėjimų,

219
00:13:42,260 --> 00:13:44,060
tiesiog pažiūrėk į papildinį video.

220
00:13:44,320 --> 00:13:46,880
Man iš tiesų buvo tikrai per daug linksma kurti tą dalyką.

221
00:13:48,960 --> 00:13:54,040
Tu gali pagalvoti, kad jei rimtai pasiknisi po detales, kaip tiksliai ši funkcija veikia,

222
00:13:54,040 --> 00:13:57,680
galėsi atbulom suprojektuoti tinkamą įvestį, išvengiant spėjimo ir tikrinimo.

223
00:13:58,270 --> 00:14:00,870
Bet niekas šito dar nesugalvojo.

224
00:14:01,550 --> 00:14:07,270
Kas įdomu, nėra jokio šalto, tvirto įrodymo, kad yra sudėtinga suskaičiuoti atbuline tvarka.

225
00:14:07,600 --> 00:14:10,300
Ir visgi, milžiniškas modernaus saugumo kiekis

226
00:14:10,300 --> 00:14:14,500
priklauso nuo kriptografinių hešo funkcijų ir nuo idėjos, kad jos turi tokią savybę.

227
00:14:15,040 --> 00:14:18,140
Jei pažiūrėtum, kokiais algoritmais grįstas saugus sujungimas, kurį

228
00:14:18,140 --> 00:14:20,580
tavo naršyklė sukuria su YouTube dabar,

229
00:14:20,580 --> 00:14:22,210
arba sukuria su tavo banku,

230
00:14:22,580 --> 00:14:25,990
tu tikriausiai pamatysi SHA256 pavadinimą kažkur.

231
00:14:27,390 --> 00:14:29,360
Dabar, mūsų dėmesys bus sutelktas  tik į tai,

232
00:14:29,360 --> 00:14:33,810
kaip tokia funkcija gali įrodyti, kad tam tikras transakcijų sąrašas

233
00:14:33,810 --> 00:14:37,070
yra susijęs su didelio skaičiavimo kiekio pastangomis.

234
00:14:38,030 --> 00:14:41,240
Įsivaizduok, kažkas parodo tau transakcijų sąrašą ir sako:

235
00:14:41,240 --> 00:14:43,220
"Ei! Atradau specialų skaičių,

236
00:14:43,220 --> 00:14:47,010
kurį pridėjus prie transakcijų sąrašo

237
00:14:47,010 --> 00:14:50,090
ir praleidus visą dalyką per SHA256,

238
00:14:50,090 --> 00:14:53,570
gausi išvestį, kurios pirmi 30 bitų visi nuliai!"

239
00:14:54,080 --> 00:14:57,110
Kaip manai, kaip sunku jam buvo surasti tą skaičių?

240
00:14:58,060 --> 00:14:59,520
Na, atsitiktinei žinutei,

241
00:14:59,520 --> 00:15:05,830
tikimybė, kad hešas prasidės su 30 iš eilės einančių nulių yra 1 iš 2^30,

242
00:15:05,830 --> 00:15:07,650
kas yra apie vienas iš milijardo.

243
00:15:08,150 --> 00:15:12,110
Ir kadangi SHA256 yra kriptografinė hešo funkcija,

244
00:15:12,110 --> 00:15:16,170
vienintelis būdas surasti tokį specialų skaičių yra spėliojimas ir tikrinimas.

245
00:15:16,640 --> 00:15:20,880
Taigi šis asmuo beveik garantuotai turėjo praeiti apie milijardą skirtingų skaičių

246
00:15:20,880 --> 00:15:22,670
prieš atrandant šį specialųjį.

247
00:15:23,360 --> 00:15:24,830
Ir kai žinai tą skaičių,

248
00:15:24,830 --> 00:15:29,110
yra labai greita patikrinti: tiesiog praleidi hešo funkciją ir pamatai, kad yra 30 nulių.

249
00:15:29,800 --> 00:15:33,900
Taigi, kitais žodžiais, gali patikrinti, kad jis praėjo per didelį darbo kiekį,

250
00:15:33,900 --> 00:15:36,720
bet tau pačiam nereikia įdėti tiek pat pastangų patikrinimui.

251
00:15:37,330 --> 00:15:39,040
Tai yra vadinama "darbo įrodymu"

252
00:15:39,430 --> 00:15:44,610
Ir labai svarbiai, visas šis darbas iš esmės susijęs su transakcijų sąrašu.

253
00:15:44,930 --> 00:15:48,080
Jei pakeisi vieną iš transakcijų, netgi vos vos,

254
00:15:48,080 --> 00:15:49,890
tai visiškai pakeistų hešą,

255
00:15:50,150 --> 00:15:54,200
tad tau reiktų praeiti dar vieną milijardą spėjimų, kad atrastum naują darbo įrodymą,

256
00:15:54,200 --> 00:15:55,670
naują skaičių, kuris padaro taip,

257
00:15:55,670 --> 00:16:00,880
kad pakeisto sąrašo ir to naujo skaičiaus hešas prasidėtų 30 nulių.

258
00:16:01,530 --> 00:16:04,400
Taigi dabar pagalvok vėl apie mūsų išplatintą apskaitą:

259
00:16:04,690 --> 00:16:07,240
kiekvienas ten transliuoja transakcijas,

260
00:16:07,240 --> 00:16:11,080
ir norim surasti būdą, kad jie sutartų, kuri apskaita yra teisinga.

261
00:16:11,490 --> 00:16:14,920
Kaip ir sakiau, principinė idėja pirminiame Bitkoino straipsnyje

262
00:16:14,920 --> 00:16:18,700
yra pasikliauti ta apskaita, kuri turi daugiausia įdėta darbo į ją.

263
00:16:19,370 --> 00:16:23,200
Būdas, kaip šitai veikia, yra pirma suorganizuoti duotą apskaitą į blokus,

264
00:16:23,200 --> 00:16:27,410
kur kiekvienas blokas susideda iš transakcijų sąrašo kartu su darbo įrodymu,

265
00:16:27,840 --> 00:16:32,600
tai yra specialiu skaičiumi, tokiu, kad viso bloko hešas prasideda su nulių rinkiniu.

266
00:16:33,190 --> 00:16:37,280
Šiam kartui, sakykim, kad jis turi prasidėti su... 60 nulių,

267
00:16:37,280 --> 00:16:41,040
bet vėliau sugrįšim prie labiau sistematiško būdo, kaip galėtum pasirinkti tą skaičių.

268
00:16:41,840 --> 00:16:46,800
Taip pat, kaip transakcija yra laikoma validžia, tik kai ji yra pasirašyta siuntėjo,

269
00:16:46,800 --> 00:16:50,220
blokas yra laikomas validžiu, tik kai jis turi darbo įrodymą.

270
00:16:51,040 --> 00:16:54,700
Ir taip pat, kad užtikrintume, jog būtų standartinė blokų tvarka,

271
00:16:54,700 --> 00:16:59,760
padarysim taip, kad blokas turėtų savy ankstesnio bloko hešą savo antraštėje.

272
00:17:00,150 --> 00:17:03,550
Tokiu būdu, jei grįžtum atgal ir pakeistum bet kurį iš blokų,

273
00:17:03,550 --> 00:17:05,550
ar pakeistum dviejų blokų eilės tvarką,

274
00:17:05,890 --> 00:17:08,230
tai pakeistų po jo sekantį bloką,

275
00:17:08,230 --> 00:17:10,010
kas pakeistų to bloko hešą,

276
00:17:10,010 --> 00:17:13,070
kas pakeistų bloką, einantį po jo, ir t. t.

277
00:17:14,040 --> 00:17:16,370
Tam reiktų padaryti visą tą darbą:

278
00:17:16,370 --> 00:17:21,660
surasti naują specialų skaičių kiekvienam iš tų blokų, taip, kad hešai prasidėtų 60 nulių.

279
00:17:22,410 --> 00:17:25,040
Kadangi blogai yra šitaip sujungti lyg grandine,

280
00:17:25,040 --> 00:17:28,800
vietoj to, kad visa tai būtų vadinama apskaita, dažnai tai vadinama "blokų grandine" (blockchain).

281
00:17:30,050 --> 00:17:31,920
Mūsų atnaujintame protokole,

282
00:17:31,920 --> 00:17:34,780
dabar leisim bet kam pasaulyje būti blokų kūrėju.

283
00:17:35,230 --> 00:17:38,950
Ką tai reiškia, tai, kad jie gali klausyti transliuojamų transakcijų,

284
00:17:38,950 --> 00:17:40,620
surinkti jas į kažkokį bloką,

285
00:17:40,620 --> 00:17:42,110
ir tada atlikti daugybę darbo,

286
00:17:42,110 --> 00:17:46,400
kad rastų specialų skaičių, kuris to bloko hešą priverčia prasidėti 60 nulių.

287
00:17:46,900 --> 00:17:50,210
Ir kai jie suranda jį, jie transliuoja tą bloką, kurį atrado.

288
00:17:50,970 --> 00:17:53,490
Kad apdovanotume blokų kūrėjus už visą ši darbą,

289
00:17:53,490 --> 00:17:55,270
kai kūrėjas sukuria bloką,

290
00:17:55,270 --> 00:17:59,070
leisim jam pridėti labai specialią transakciją sąrašo viršuje,

291
00:17:59,070 --> 00:18:02,780
kurioje jis gauna, sakykim, 10 LD tiesiog iš oro.

292
00:18:03,470 --> 00:18:05,230
Tai vadinama "bloko atpildu/apdovanojimu" (block reward),

293
00:18:05,230 --> 00:18:09,800
ir tai yra išimtis mūsų įprastoms taisyklėms apie tai ar priimti transakcijas.

294
00:18:10,010 --> 00:18:13,190
Ši transakcija neateina iš niekieno, tad jos nereikia pasirašyti.

295
00:18:13,600 --> 00:18:19,720
Ir tai taip pat reiškia, kad pilnas mūsų apskaitos dolerių kiekis mūsų ekonomikoje didėja sulyg kiekvienu nauju bloku.

296
00:18:20,880 --> 00:18:23,200
Naujų blokų kūrimas dažnai vadinamas "kasimu" (mining),

297
00:18:23,200 --> 00:18:25,220
nes tam reikia atlikti daug darbo

298
00:18:25,220 --> 00:18:28,460
ir tai introdukuoja naujus valiutos kiekius į ekonomiką.

299
00:18:29,070 --> 00:18:31,470
Bet kai išgirsi ar skaitysi apie kasėjus,

300
00:18:31,470 --> 00:18:33,730
turėk galvoje, kad tai, ką jie iš tikro daro, yra

301
00:18:33,730 --> 00:18:36,630
klausosi transakcijų, kuria blokus,

302
00:18:36,630 --> 00:18:40,900
transliuoja tuos blokus, ir būna apdovanojami naujais pinigais už tą darbą.

303
00:18:41,940 --> 00:18:46,230
Iš kasėjo perspektyvos, kiekvienas blokas yra tarsi mažytė loterija,

304
00:18:46,230 --> 00:18:49,140
kur kiekvienas spėlioja skaičius taip greitai, kaip gali

305
00:18:49,140 --> 00:18:52,460
tol, kol vienam laimingam žmogui pavyksta rasti specialų skaičių,

306
00:18:52,460 --> 00:18:55,310
kuris padaro taip, kad bloko hešas prasidėtų daugybe nulių,

307
00:18:55,310 --> 00:18:56,370
ir jie yra apdovanojami.

308
00:18:58,040 --> 00:19:01,200
Bet kam kitam, kas tenori naudotis sistema atlikti mokėjimams,

309
00:19:01,200 --> 00:19:03,430
vietoj transakcijų klausymosi,

310
00:19:03,430 --> 00:19:07,080
jie visi klausosi tik kasėjų transliuojamų blokų,

311
00:19:07,080 --> 00:19:10,010
ir atnaujina savo asmenines blokų grandinės kopijas.

312
00:19:10,510 --> 00:19:13,320
Dabar esminė mūsų protokolo dalis yra tai,

313
00:19:13,320 --> 00:19:17,930
kad jei išgirsti dvi skirtingas blokų grandines su konfliktuojančiomis transakcijų istorijomis,

314
00:19:18,310 --> 00:19:22,350
tu pasirenki ilgiausią - tą, kurioje yra įdėta daugiausiai darbo.

315
00:19:22,900 --> 00:19:27,930
Jei yra lygiosios, tiesiog palauk, kol išgirsi dar vieną bloką, kuris padaro vieną iš grandinių ilgesnę.

316
00:19:28,720 --> 00:19:33,910
Taigi, nors ir nėra centrinio autoriteto ir kiekvienas palaiko savo blokų grnadinės kopiją,

317
00:19:34,180 --> 00:19:39,260
jei visi sutaria duoti pirmumą tai grandinei, kuri turi daugiausia darbo įdėta į ją,

318
00:19:39,660 --> 00:19:42,980
mes turim būdą surasti decentralizuotą konsensusą.

319
00:19:43,640 --> 00:19:45,840
Kad pamatytum, kodėl tai sukuria patikimą sistemą,

320
00:19:45,840 --> 00:19:49,450
ir kad suprastum, kuriuo momentu gali pasitikėti, kad apmokėjimas yra tikras,

321
00:19:49,450 --> 00:19:55,070
yra iš tikro naudinga praeiti per kelią, norint apgauti kažką, kas naudoja šią sistemą.

322
00:19:55,650 --> 00:19:58,690
Galbūt Alisa bando apgauti Bobą su klastotu bloku.

323
00:19:59,030 --> 00:20:04,080
Konkrečiai, ji bando jam išsiųsti bloką, kuriame yra 100 LD mokestis jam iš jos,

324
00:20:04,420 --> 00:20:07,260
bet be to bloko transliavimo likusiam tinklui.

325
00:20:07,620 --> 00:20:11,440
Tokiu būdu, visi kiti galvoja, kad ji vis dar tebeturi tuos 100 LD.

326
00:20:12,150 --> 00:20:17,250
Kad šitai padarytų, jai reikėtų surasti validų darbo įrodymą anksčiau, nei visi kiti kasėjai,

327
00:20:17,250 --> 00:20:18,860
kur kiekvienas kasėjas dirba ties savo bloku.

328
00:20:19,410 --> 00:20:20,990
Ir tai tikrai gali įvykti!

329
00:20:20,990 --> 00:20:24,980
Galbūt Alisai tiesiog pasiseka laimėti šią mini loteriją prieš visus kitus.

330
00:20:25,680 --> 00:20:29,770
Bet Bobas visvien tebegirdės kitų kasėjų transliacijas,

331
00:20:30,080 --> 00:20:32,640
tad, kad priverstų jį tikėti šiuo klastotu bloku,

332
00:20:32,640 --> 00:20:35,440
Alisai reiktų ir vėl daryti visą darbą pačiai,

333
00:20:35,440 --> 00:20:39,440
kad vis pridėtų papildomai blokus ant savo specialios šakos Bobo blokų grandinėje.

334
00:20:39,440 --> 00:20:42,330
Tai skiriasi nuo to, ką jis girdi iš kitų kasėjų.

335
00:20:42,720 --> 00:20:48,400
Prisimink, pagal protokolą, Bobas visada pasitiki ilgiausia, kurią žino, grandine.

336
00:20:49,230 --> 00:20:51,960
Alisa galbūt šitai palaikys kelis blokus,

337
00:20:51,960 --> 00:20:55,140
jei, tiesiog atsitiktinai, jai pasiseks rasti blokus greičiau

338
00:20:55,140 --> 00:20:58,050
negu visiems kitiems tinklo kasėjams, kartu sudėjus.

339
00:20:58,560 --> 00:21:03,710
Bet, nebent ji turi arti 50% visų kasėjų skaičiavimo resursų,

340
00:21:04,080 --> 00:21:06,570
tikimybė tampa nepaprastai didelė,

341
00:21:06,570 --> 00:21:09,650
kad blokų grandinė, prie kurios dirba visi kiti kasėjai,

342
00:21:09,650 --> 00:21:14,190
auga greičiau nei viena suklastota blokų grandinė, kurią Alisa maitina Bobui.

343
00:21:15,200 --> 00:21:19,820
Taigi, po pakankamo laiko tarpo, Bobas tiesiog atmes tai, ką girdi iš Alisos,

344
00:21:19,820 --> 00:21:23,100
rinkdamasis ilgesnę grandinę, prie kurios dirba visi kiti.

345
00:21:24,020 --> 00:21:29,250
Pastebėk, kad tai reiškia, kad tu neturėtum iš karto pasitikėti nauju bloku, kurį kątik išgirdai.

346
00:21:29,620 --> 00:21:33,420
Vietoj to, turėtum laukti, kol keletas naujų blokų bus pridėti ant viršaus.

347
00:21:33,890 --> 00:21:36,610
Jei vis dar negirdėjai jokių ilgesnių blokų grandinių,

348
00:21:36,610 --> 00:21:40,860
gali pasitikėti, kad šis blokas yra dalis grandinės, kuria naudojasi ir visi kiti.

349
00:21:42,250 --> 00:21:45,520
Ir su tuom, aptarėme visas pagrindines idėjas.

350
00:21:45,850 --> 00:21:49,190
Ši išdalinta apskaitos sistema, paremta darbo įrodymu

351
00:21:49,190 --> 00:21:53,810
yra daugiau ar mažiau kaip Bitkoino protokolas veikia ir kaip dauguma kitų kriptovaliutų veikia.

352
00:21:54,260 --> 00:21:56,280
Yra tik keletas dalykų, kuriuos reiktų paaiškinti.

353
00:21:56,280 --> 00:21:59,480
Anksčiau, sakiau, kad darbo įrodymas gali būti specialaus skaičiaus suradimas

354
00:21:59,480 --> 00:22:02,830
taip, kad bloko hešas prasidėtų 60 nulių.

355
00:22:03,210 --> 00:22:08,400
Na, tai, kaip tikrasis Bitkoino protokolas veikia, yra periodiškai pakeisti nulių skaičių taip,

356
00:22:08,400 --> 00:22:12,080
kad vidutiniškai užtruktų dešimt minučių surasti naują bloką.

357
00:22:12,800 --> 00:22:15,730
Taigi, kai prie tinklo prisideda vis daugiau ir daugiau kasėjų,

358
00:22:16,010 --> 00:22:18,230
sudėtingumas darosi vis sunkesnis ir sunkesnis;

359
00:22:18,230 --> 00:22:23,170
tiek, kad ši mini loterija turi maždaug vieną laimėtoją kas dešimt minučių.

360
00:22:23,950 --> 00:22:28,080
Dauguma naujų kriptovaliutų iš tiesų turi daug trumpesnius blokų laikus nei tiek.

361
00:22:28,660 --> 00:22:32,770
Ir visi pinigai Bitkoine galiausiai atsiranda iš kažkurio bloko apdovanojimo.

362
00:22:33,030 --> 00:22:35,890
Pradžioje, šie apdovanojimai buvo 50 bitkoinų už bloką.

363
00:22:36,190 --> 00:22:39,380
Iš tiesų yra geras internetinis puslapis, pavadinimu "Blokų tyrinėtojas",

364
00:22:39,380 --> 00:22:41,760
kuris lengvai padeda peržiūrėti Bitkoino blokų grandinę.

365
00:22:41,990 --> 00:22:45,030
Ir jei pažiūrėsi į pirmuosius kelis blokus grandinėje,

366
00:22:45,030 --> 00:22:49,520
juose nėra jokių transakcijų, išskyrus 50 bitkoinų apdovanojimus kasėjams.

367
00:22:49,970 --> 00:22:54,800
Bet kas 210 000 blokų, kas yra maždaug 4 metai,

368
00:22:54,800 --> 00:22:56,890
tas atlygis sumažinamas per pusę.

369
00:22:56,890 --> 00:23:00,390
Taigi, dabar, atlyginimas yra 12.5 bitkoino už bloką.

370
00:23:00,740 --> 00:23:04,340
Ir kadangi šis atlyginimas mažėja geometriškai su laiku,

371
00:23:04,710 --> 00:23:09,750
tai reiškia, kad niekada nebus daugiau nei 21 000 000 bitkoinų egzistavime.

372
00:23:10,450 --> 00:23:13,520
Visgi, tai nereiškia, kad kasėjai nustos gauti pinigus.

373
00:23:13,950 --> 00:23:18,230
Neskaitant blokų apdovanojimų, kasėjai taip pat gauna transakcijų mokesčius.

374
00:23:18,500 --> 00:23:20,970
Tai veikia taip, kad kiekvieną kartą tau sumokant,

375
00:23:20,970 --> 00:23:24,700
tu gali visiškai savo nuožiūra pasirinkti pridėti mažą transakcijos mokestį kartu su pačia transakcija,

376
00:23:24,700 --> 00:23:28,620
kuris nukeliaus to bloko, kuriame atsiras transakcija, kasėjui.

377
00:23:29,280 --> 00:23:32,100
Priežastis, kodėl tu gali norėti taip padaryti, tai suteikti motyvacijos kasėjams

378
00:23:32,100 --> 00:23:36,080
pridėti tą transakciją, kurią tu transliuoji, į sekantį bloką.

379
00:23:36,430 --> 00:23:42,080
Matai, Bitkoine, kiekvienas blokas yra apribotas iki 2 400 transakcijų,

380
00:23:42,080 --> 00:23:45,380
ką daugelis kritikų vadina nereikalingai ribota.

381
00:23:45,970 --> 00:23:51,740
Palyginimui, VISA apdoroja vidutiniškai apie 1 700 transakcijų per sekundę,

382
00:23:51,740 --> 00:23:55,510
ir jie gali dirbti su daugiau nei 24 000 transakcijų per sekundę.

383
00:23:56,240 --> 00:24:01,390
Šis sąlyginai lėtas apdorojimas Bitkoine sukuria aukštesnius transakcijų mokesčius,

384
00:24:01,390 --> 00:24:06,410
nes tai nulemia, kurias transakcijas kasėjai pasirenka pridėti į naują bloką.

385
00:24:08,160 --> 00:24:12,140
Visa tai toli gražu nėra pilna kriptovaliutų apžvalga.

386
00:24:12,140 --> 00:24:16,400
Tebėra daug niuansų ir alternatyvių dizaino/projektavimo pasirinkimų, kurių aš net nepaliečiau.

387
00:24:16,720 --> 00:24:21,550
Bet mano viltis yra, kad tai suteiks stabilų "palauk, bet kodėl" stiliaus medžio kamieno supratimą

388
00:24:21,550 --> 00:24:24,710
bet kam, kas nori pridėti dar kelias šakas su tolimesniu skaitymu.

389
00:24:25,250 --> 00:24:26,280
Kaip ir sakiau pradžioje,

390
00:24:26,280 --> 00:24:31,170
vienas iš viso šito motyvų yra tai, kad daug pinigų pradėjo judėti link kriptovaliutų.

391
00:24:31,370 --> 00:24:35,090
Ir nors ir nenoriu daryti jokių pareiškimų, ar tai geras ar blogas investavimas,

392
00:24:35,330 --> 00:24:38,210
aš tikrai manau, kad žmonėms, įsitraukiantiems į žaidimą

393
00:24:38,210 --> 00:24:40,720
yra sveika žinoti bent jau technologijos fundamentų pagrindą.

394
00:24:41,550 --> 00:24:45,750
Kaip visada, mano nuoširdžiausia padėka tiems jums, kurie leidžia šiam kanalui egzistuoti per Patreon.

395
00:24:46,170 --> 00:24:49,180
Aš suprantu, kad ne kiekvienas gali prisidėti,

396
00:24:49,180 --> 00:24:51,280
bet jei vis dar esi suinteresuotas padėti,

397
00:24:51,280 --> 00:24:52,700
vienas iš geriausių būdų tai padaryti

398
00:24:52,700 --> 00:24:57,200
yra paprasčiausiai pasidalinti mano video, kurie manai gali būti įdomūs ar naudingi kitiems.

