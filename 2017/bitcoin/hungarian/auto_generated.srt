1
00:00:03,900 --> 00:00:06,480
Mit jelent az, hogy van egy Bitcoin?

2
00:00:07,420 --> 00:00:11,413
Sokan hallottak már a Bitcoinról, arról, hogy ez egy teljesen digitális valuta, 

3
00:00:11,413 --> 00:00:15,456
amelyet nem bocsát ki kormány, hogy nincs szükség bankokra a számlák kezeléséhez 

4
00:00:15,456 --> 00:00:19,100
és a tranzakciók ellenőrzéséhez, és hogy senki sem tudja, ki találta fel.

5
00:00:19,380 --> 00:00:23,280
És mégis sokan nem tudják a választ erre a kérdésre, legalábbis nem teljes egészében.

6
00:00:24,100 --> 00:00:27,967
Hogy eljussunk odáig, és hogy a válasz alapjául szolgáló technikai 

7
00:00:27,967 --> 00:00:32,123
részleteket valóban motiváltnak érezzük, lépésről lépésre végigvesszük, 

8
00:00:32,123 --> 00:00:35,240
hogyan találhatta volna fel a Bitcoin saját verzióját.

9
00:00:36,140 --> 00:00:40,368
Kezdjük azzal, hogy egy közösségi főkönyv segítségével nyomon követed a barátaiddal 

10
00:00:40,368 --> 00:00:44,596
való fizetéseket, majd ahogy egyre kevésbé bízol a barátaidban és a körülötted lévő 

11
00:00:44,596 --> 00:00:48,874
világban, és ha elég okos vagy ahhoz, hogy a kriptográfia néhány ötletével megkerüld 

12
00:00:48,874 --> 00:00:52,700
a bizalom szükségességét, akkor a végén egy úgynevezett kriptovalutát kapsz.

13
00:00:53,840 --> 00:00:57,437
A Bitcoin csak az első megvalósult példa a kriptopénzekre, 

14
00:00:57,437 --> 00:01:02,560
és mostanra már több ezer másik létezik a hagyományos valutákkal együtt a tőzsdéken.

15
00:01:03,300 --> 00:01:08,119
A saját kitalálás útját járva segíthet megalapozni a játék néhány újabb szereplőjének 

16
00:01:08,119 --> 00:01:12,547
megértését, és felismerni, hogy mikor és miért van helye a különböző tervezési 

17
00:01:12,547 --> 00:01:13,220
döntéseknek.

18
00:01:14,100 --> 00:01:17,985
Valójában az egyik ok, amiért ezt a témát választottam, az az, 

19
00:01:17,985 --> 00:01:22,919
hogy az elmúlt évben hatalmas figyelem, befektetés és felhajtás irányult ezekre 

20
00:01:22,919 --> 00:01:23,660
a valutákra.

21
00:01:24,280 --> 00:01:27,904
Nem fogom kommentálni vagy spekulálni a jelenlegi vagy jövőbeli árfolyamokat, 

22
00:01:27,904 --> 00:01:31,854
de azt hiszem, mindannyian egyetértünk abban, hogy aki kriptovalutát akar vásárolni, 

23
00:01:31,854 --> 00:01:33,620
annak tényleg tudnia kell, hogy mi az.

24
00:01:33,920 --> 00:01:38,004
És nem csak az aranybányászattal homályosan összefüggő analógiákra gondolok, 

25
00:01:38,004 --> 00:01:42,196
hanem annak tényleges, közvetlen leírására, hogy mit csinálnak a számítógépek, 

26
00:01:42,196 --> 00:01:45,220
amikor kriptovalutákat küldünk, fogadunk és hozunk létre.

27
00:01:46,300 --> 00:01:48,701
Egy dolgot érdemes hangsúlyozni: annak ellenére, 

28
00:01:48,701 --> 00:01:52,965
hogy mi ketten itt beleássuk magunkat a részletekbe, és ez értelmes időt vesz igénybe, 

29
00:01:52,965 --> 00:01:55,416
valójában nem kell ismerned ezeket a részleteket, 

30
00:01:55,416 --> 00:01:59,680
ha csak használni akarod a kriptovalutát, ahogyan nem kell tudnod a részleteket arról, 

31
00:01:59,680 --> 00:02:03,160
hogy mi történik a motorháztető alatt, amikor lehúzol egy hitelkártyát.

32
00:02:03,720 --> 00:02:06,467
Mint minden digitális fizetésnél, itt is rengeteg olyan felhasználóbarát 

33
00:02:06,467 --> 00:02:09,515
alkalmazás létezik, amelyekkel csak küldheted és fogadhatod a valutákat anélkül, 

34
00:02:09,515 --> 00:02:11,360
hogy gondolkodnod kellene azon, hogy mi történik.

35
00:02:11,660 --> 00:02:16,862
A különbség az, hogy a háttérben nem egy bank áll, amely ellenőrzi a tranzakciókat, 

36
00:02:16,862 --> 00:02:21,197
hanem egy okos, decentralizált, bizalom nélküli ellenőrzési rendszer, 

37
00:02:21,197 --> 00:02:24,480
amely a kriptográfiában született matematikán alapul.

38
00:02:25,900 --> 00:02:28,599
De kezdésként szeretném, ha néhány percre félretennétek 

39
00:02:28,599 --> 00:02:30,480
a kriptovaluták és mindezek gondolatát.

40
00:02:31,080 --> 00:02:33,493
A történetet valami földhözragadtabb dologgal kezdjük, 

41
00:02:33,493 --> 00:02:35,380
a főkönyvekkel és a digitális aláírásokkal.

42
00:02:36,340 --> 00:02:38,957
Ha Ön és barátai elég gyakran cserélnek pénzt, 

43
00:02:38,957 --> 00:02:41,742
kifizetve a vacsoraszámla egy részét és hasonlók, 

44
00:02:41,742 --> 00:02:44,360
kényelmetlen lehet állandóan készpénzt váltani.

45
00:02:44,720 --> 00:02:48,208
Tehát vezethet egy közösségi főkönyvet, amely rögzíti az összes olyan kifizetést, 

46
00:02:48,208 --> 00:02:50,080
amelyet a jövőben valamikor meg kíván tenni.

47
00:02:50,620 --> 00:02:55,100
Alice fizet Bobnak 20 dollárt, Bob fizet Charlie-nak 40 dollárt, ilyesmi.

48
00:02:55,500 --> 00:02:58,522
Ez a főkönyv nyilvános és mindenki számára hozzáférhető lesz, 

49
00:02:58,522 --> 00:03:01,740
mint egy weboldal, ahová bárki beléphet és új sorokat adhat hozzá.

50
00:03:02,480 --> 00:03:05,578
És tegyük fel, hogy minden hónap végén mindannyian összeülnek, 

51
00:03:05,578 --> 00:03:07,940
megnézik a tranzakciók listáját, és elszámolnak.

52
00:03:08,280 --> 00:03:11,378
Ha többet költöttél, mint amennyit kaptál, akkor azt a pénzt a kasszába teszed, 

53
00:03:11,378 --> 00:03:14,400
ha pedig többet kaptál, mint amennyit elköltöttél, akkor azt a pénzt kiveszed.

54
00:03:15,460 --> 00:03:17,371
Tehát az ehhez a nagyon egyszerű rendszerhez való 

55
00:03:17,371 --> 00:03:19,360
csatlakozás protokollja a következőképpen nézhet ki.

56
00:03:20,020 --> 00:03:25,360
A főkönyvbe bárki írhat sorokat, és minden hónap végén összeülnek, és elszámolnak.

57
00:03:26,300 --> 00:03:30,760
Az egyik probléma egy ilyen nyilvános főkönyvvel az, hogy bárki hozzáadhat egy sort.

58
00:03:31,020 --> 00:03:33,947
Tehát mi akadályozza meg Bobot abban, hogy elmenjen, és azt írja, 

59
00:03:33,947 --> 00:03:36,920
hogy Alice 100 dollárt fizet Bobnak anélkül, hogy Alice jóváhagyná?

60
00:03:37,780 --> 00:03:41,568
Hogyan bízzunk abban, hogy ezek a tranzakciók mind azt jelentik, 

61
00:03:41,568 --> 00:03:43,200
amit a feladó gondolt róluk?

62
00:03:44,580 --> 00:03:48,540
Nos, itt jön a képbe a kriptográfia első darabja, a digitális aláírás.

63
00:03:49,480 --> 00:03:52,962
A kézzel írott aláírásokhoz hasonlóan itt is az az elképzelés, 

64
00:03:52,962 --> 00:03:57,275
hogy Alice képes legyen valamit hozzáadni a tranzakció mellé, ami bizonyítja, 

65
00:03:57,275 --> 00:04:01,200
hogy látta és jóváhagyta azt, és hogy másnak lehetetlenné kell tennie, 

66
00:04:01,200 --> 00:04:03,080
hogy meghamisítsa ezt az aláírást.

67
00:04:04,300 --> 00:04:08,580
Elsőre úgy tűnhet, hogy a digitális aláírás nem is lehetséges.

68
00:04:09,220 --> 00:04:11,202
Úgy értem, bármilyen adat alkotja is az aláírást, 

69
00:04:11,202 --> 00:04:13,860
azt egy számítógép egyszerűen el tudja olvasni és le tudja másolni.

70
00:04:14,400 --> 00:04:16,140
Hogyan lehet megelőzni a hamisítást?

71
00:04:17,320 --> 00:04:20,644
Nos, ez úgy működik, hogy mindenki létrehoz egy úgynevezett nyilvános 

72
00:04:20,644 --> 00:04:24,160
kulcs-magán kulcspárt, amelyek mindegyike valamilyen bitsorozatnak néz ki.

73
00:04:24,800 --> 00:04:27,781
A privát kulcsot néha titkos kulcsnak is nevezik, 

74
00:04:27,781 --> 00:04:31,300
ezért rövidíthetjük SK-nak, míg a nyilvános kulcsot PK-nak.

75
00:04:32,340 --> 00:04:36,220
Ahogy a neve is mutatja, ezt a titkos kulcsot szeretné megtartani magának.

76
00:04:37,060 --> 00:04:39,456
A való világban a kézzel írt aláírás ugyanúgy néz ki, 

77
00:04:39,456 --> 00:04:41,720
függetlenül attól, hogy milyen dokumentumot ír alá.

78
00:04:42,280 --> 00:04:44,821
A digitális aláírás azonban valójában sokkal erősebb, 

79
00:04:44,821 --> 00:04:46,940
mivel a különböző üzenetek esetében változik.

80
00:04:47,840 --> 00:04:52,085
Úgy néz ki, mint egy 1 és 0 karakterlánc, általában 256 bit, 

81
00:04:52,085 --> 00:04:57,861
és az üzenet akár csak kis mértékben történő módosítása teljesen megváltoztatja az 

82
00:04:57,861 --> 00:04:59,880
üzenet aláírásának kinézetét.

83
00:05:00,840 --> 00:05:04,848
Kicsit formálisabban fogalmazva, az aláírás előállítása egy olyan függvényt 

84
00:05:04,848 --> 00:05:08,540
foglal magában, amely függ magától az üzenettől és a magánkulcstól is.

85
00:05:09,200 --> 00:05:12,471
A magánkulcs biztosítja, hogy csak Ön tudja az aláírást létrehozni, 

86
00:05:12,471 --> 00:05:15,021
és az a tény, hogy az üzenet függvénye, azt jelenti, 

87
00:05:15,021 --> 00:05:17,908
hogy senki sem tudja csak úgy lemásolni az egyik aláírását, 

88
00:05:17,908 --> 00:05:19,640
és egy másik üzeneten meghamisítani.

89
00:05:21,000 --> 00:05:26,116
Ezzel együtt egy második funkciót is használnak az aláírás érvényességének ellenőrzésére, 

90
00:05:26,116 --> 00:05:28,220
és itt jön a képbe a nyilvános kulcs.

91
00:05:29,200 --> 00:05:32,932
Mindössze annyit tesz, hogy true vagy false értéket ad ki annak jelzésére, 

92
00:05:32,932 --> 00:05:36,963
hogy az aláírást az ellenőrzéshez használt nyilvános kulcshoz tartozó magánkulcs 

93
00:05:36,963 --> 00:05:37,760
állította-e elő.

94
00:05:38,640 --> 00:05:43,214
Nem fogok belemenni a részletekbe, hogy pontosan hogyan működik ez a két funkció, 

95
00:05:43,214 --> 00:05:47,398
de a lényeg az, hogy teljesen lehetetlen legyen érvényes aláírást találni, 

96
00:05:47,398 --> 00:05:49,240
ha nem ismerjük a titkos kulcsot.

97
00:05:50,060 --> 00:05:54,397
Konkrétan nincs jobb stratégia, mint a véletlenszerű aláírások kitalálása és ellenőrzése, 

98
00:05:54,397 --> 00:05:57,820
amit a mindenki által ismert nyilvános kulcs segítségével ellenőrizhet.

99
00:05:58,980 --> 00:06:03,200
Most gondoljon bele, hány 256 bit hosszúságú aláírás létezik.

100
00:06:03,840 --> 00:06:06,180
Ez 2 a 256 hatványán!

101
00:06:07,140 --> 00:06:09,560
Ez egy ostobán nagy szám.

102
00:06:09,860 --> 00:06:13,640
Ha csillagászati méretűnek neveznénk, az túl nagy hitelt adna a csillagászatnak.

103
00:06:14,260 --> 00:06:18,626
Valójában készítettem egy kiegészítő videót, amely csak annak illusztrálására szolgál, 

104
00:06:18,626 --> 00:06:19,680
hogy ez mekkora szám.

105
00:06:20,380 --> 00:06:25,342
Itt csak annyit mondunk, hogy amikor egy adott üzenethez tartozó aláírás érvényességét 

106
00:06:25,342 --> 00:06:29,906
ellenőrzi, rendkívül biztos lehet abban, hogy valaki csak akkor tudta volna azt 

107
00:06:29,906 --> 00:06:35,040
létrehozni, ha ismeri az ellenőrzéshez használt nyilvános kulcshoz tartozó titkos kulcsot.

108
00:06:37,120 --> 00:06:40,413
Az, hogy az emberek aláírják a tranzakciókat a főkönyvben, 

109
00:06:40,413 --> 00:06:42,200
elég jó, de van egy kis kiskapu.

110
00:06:42,720 --> 00:06:46,588
Ha Alice aláír egy tranzakciót, például Alice 100 dollárt fizet Bobnak, 

111
00:06:46,588 --> 00:06:50,456
akkor bár Bob nem tudja meghamisítani Alice aláírását egy új üzenetben, 

112
00:06:50,456 --> 00:06:53,680
annyiszor másolhatja ugyanazt a sort, ahányszor csak akarja.

113
00:06:54,300 --> 00:06:57,220
Ez az üzenet-aláírás kombináció továbbra is érvényes.

114
00:06:57,920 --> 00:07:02,029
Ennek kiküszöbölésére úgy alakítjuk ki, hogy amikor aláírsz egy tranzakciót, 

115
00:07:02,029 --> 00:07:05,285
az üzenetnek tartalmaznia kell valamilyen egyedi azonosítót, 

116
00:07:05,285 --> 00:07:07,100
amely a tranzakcióhoz kapcsolódik.

117
00:07:07,840 --> 00:07:11,325
Így, ha Alice többször fizet Bobnak 100 dollárt, 

118
00:07:11,325 --> 00:07:15,380
a főkönyv minden egyes sora teljesen új aláírást igényel.

119
00:07:16,760 --> 00:07:19,421
Nagyszerű, a digitális aláírások megszüntetik a bizalom 

120
00:07:19,421 --> 00:07:21,940
egy hatalmas aspektusát ebben a kezdeti protokollban.

121
00:07:22,380 --> 00:07:27,280
De még így is, ha tényleg ezt tennéd, akkor egyfajta becsületbeli rendszerre támaszkodnál.

122
00:07:27,720 --> 00:07:30,914
Ön ugyanis bízik abban, hogy mindenki valóban betartja a szabályokat, 

123
00:07:30,914 --> 00:07:32,740
és minden hónap végén készpénzben fizet.

124
00:07:33,560 --> 00:07:37,471
Mi van akkor, ha például Charlie több ezer dolláros adósságot halmoz fel, 

125
00:07:37,471 --> 00:07:39,480
és egyszerűen nem hajlandó megjelenni?

126
00:07:40,120 --> 00:07:44,811
Az egyetlen valódi ok, amiért vissza kell térni a készpénzre a rendezéshez, 

127
00:07:44,811 --> 00:07:47,280
az az, ha egyesek sok pénzzel tartoznak.

128
00:07:47,860 --> 00:07:50,632
Tehát talán van egy olyan okos ötleted, hogy valójában soha nem kell 

129
00:07:50,632 --> 00:07:53,083
készpénzzel elszámolnod, amíg van valamilyen módszered arra, 

130
00:07:53,083 --> 00:07:56,660
hogy megakadályozd az embereket abban, hogy túl sokat költsenek, mint amennyit bevesznek.

131
00:07:57,340 --> 00:08:01,128
Kezdhetnénk azzal, hogy mindenki befizet 100 dollárt a kasszába, 

132
00:08:01,128 --> 00:08:05,266
majd a főkönyv első néhány sorában az áll, hogy Alice 100 dollárt kap, 

133
00:08:05,266 --> 00:08:08,180
Bob 100 dollárt kap, Charlie 100 dollárt kap, stb.

134
00:08:09,020 --> 00:08:13,170
Csak ne fogadjon el olyan tranzakciókat, ahol valaki többet költ, 

135
00:08:13,170 --> 00:08:16,000
mint amennyivel már rendelkezik a főkönyvben.

136
00:08:16,840 --> 00:08:19,668
Például, ha az első két tranzakció a következő: 

137
00:08:19,668 --> 00:08:23,851
Charlie fizet Alice-nek 50 dollárt és Charlie fizet Bobnak 50 dollárt, 

138
00:08:23,851 --> 00:08:28,859
ha megpróbálná hozzáadni, hogy Charlie fizet neked 20 dollárt, az érvénytelen lenne, 

139
00:08:28,859 --> 00:08:32,100
ugyanolyan érvénytelen, mintha soha nem írta volna alá.

140
00:08:32,940 --> 00:08:35,843
Vegye észre, hogy ez azt jelenti, hogy egy tranzakció 

141
00:08:35,843 --> 00:08:39,500
ellenőrzéséhez ismerni kell az addigi tranzakciók teljes történetét.

142
00:08:40,159 --> 00:08:45,960
Ez a kriptovaluták esetében is igaz lesz, bár van egy kis optimalizálási lehetőség.

143
00:08:48,380 --> 00:08:51,581
Ami itt érdekes, hogy ez a lépés megszünteti a 

144
00:08:51,581 --> 00:08:55,600
kapcsolatot a főkönyv és a tényleges fizikai dollár között.

145
00:08:56,200 --> 00:08:59,426
Elméletileg, ha a világon mindenki ezt a főkönyvet használná, 

146
00:08:59,426 --> 00:09:03,537
egész életedben csak ezen a főkönyvön küldhetnél és fogadhatnál pénzt anélkül, 

147
00:09:03,537 --> 00:09:06,660
hogy valaha is át kellene váltanod valódi amerikai dollárra.

148
00:09:07,580 --> 00:09:10,756
Valójában, hogy ezt a pontot hangsúlyozzuk, kezdjük el a főkönyvben 

149
00:09:10,756 --> 00:09:14,260
szereplő mennyiségeket főkönyvi dollárként, vagy röviden LD-ként emlegetni.

150
00:09:14,820 --> 00:09:18,660
Ön természetesen szabadon átválthatja a főkönyvi dollárokat valódi amerikai dollárra.

151
00:09:19,060 --> 00:09:22,682
Például Alice adhat Bobnak egy 10 dolláros bankjegyet a való világban, 

152
00:09:22,682 --> 00:09:26,254
cserébe azért, hogy ő hozzáadja és aláírja a 10 dolláros tranzakciót, 

153
00:09:26,254 --> 00:09:29,520
Bob pedig 10 dollárt fizet Alice-nak ebbe a közösségi főkönyvbe.

154
00:09:30,720 --> 00:09:34,220
Az ilyen cseréket azonban a protokoll nem garantálja.

155
00:09:34,720 --> 00:09:37,744
Ez most már inkább ahhoz hasonlít, ahogyan a nyílt piacon 

156
00:09:37,744 --> 00:09:40,560
dollárt euróra vagy bármely más valutára cserélhetünk.

157
00:09:41,180 --> 00:09:43,800
Ez csak egy saját, független dolog.

158
00:09:44,580 --> 00:09:49,780
Ez az első fontos dolog, amit meg kell érteni a Bitcoinról vagy bármely más kriptopénzről.

159
00:09:49,780 --> 00:09:52,420
Ez egy főkönyv.

160
00:09:53,180 --> 00:09:55,980
A tranzakciók története a valuta.

161
00:09:57,160 --> 00:09:59,941
Természetesen a Bitcoin esetében a pénz nem úgy kerül a főkönyvbe, 

162
00:09:59,941 --> 00:10:01,560
hogy az emberek készpénzzel vásárolnak.

163
00:10:02,000 --> 00:10:04,820
Néhány perc múlva rátérek arra, hogyan kerül új pénz a főkönyvbe.

164
00:10:05,540 --> 00:10:08,786
De előtte van egy még jelentősebb különbség a jelenlegi 

165
00:10:08,786 --> 00:10:12,380
főkönyvi dollárrendszerünk és a kriptovaluták működése között.

166
00:10:13,020 --> 00:10:15,984
Eddig azt mondtam, hogy ez a főkönyv valamilyen nyilvános helyen van, 

167
00:10:15,984 --> 00:10:18,440
például egy weboldalon, ahol bárki új sorokat adhat hozzá.

168
00:10:19,220 --> 00:10:22,704
Ehhez azonban egy központi helyre kellene bízni, nevezetesen arra, 

169
00:10:22,704 --> 00:10:26,760
aki a honlapot üzemelteti, aki az új sorok hozzáadásának szabályait ellenőrzi.

170
00:10:27,340 --> 00:10:29,906
Hogy megszüntessük ezt a bizalmatlanságot, mindenkinek 

171
00:10:29,906 --> 00:10:31,960
meg kell tartania a főkönyv saját példányát.

172
00:10:32,660 --> 00:10:37,772
Aztán amikor tranzakciót akarsz végrehajtani, például Alice 100 dollárt fizet Bobnak, 

173
00:10:37,772 --> 00:10:41,220
akkor ezt a világba küldöd, hogy az emberek hallhassák és 

174
00:10:41,220 --> 00:10:43,420
rögzíthessék a saját magánkönyvükben.

175
00:10:44,840 --> 00:10:49,260
De hacsak nem tesznek valami többet, ez a rendszer abszurdan rossz.

176
00:10:49,820 --> 00:10:52,740
Hogyan lehetne mindenkit rávenni, hogy megegyezzenek abban, hogy mi a helyes főkönyv?

177
00:10:53,440 --> 00:10:57,051
Amikor Bob kap egy tranzakciót, például Alice 10 dollárt fizet Bobnak, 

178
00:10:57,051 --> 00:11:01,069
hogyan lehet biztos abban, hogy mindenki más is megkapta és elhiszi ugyanezt a 

179
00:11:01,069 --> 00:11:01,680
tranzakciót?

180
00:11:02,340 --> 00:11:04,850
Hogy később képes lesz elmenni Charlie-hoz, és 

181
00:11:04,850 --> 00:11:07,200
ugyanazzal a 10 dollárral tranzakciót kötni?

182
00:11:08,240 --> 00:11:12,060
Tényleg, képzelje el, hogy csak hallgatja a tranzakciókat, amelyeket közvetítenek.

183
00:11:12,760 --> 00:11:16,903
Hogyan lehet biztos abban, hogy mindenki más is ugyanazokat a tranzakciókat rögzíti, 

184
00:11:16,903 --> 00:11:18,220
és ugyanabban a sorrendben?

185
00:11:19,420 --> 00:11:21,360
Ez a kérdés lényege.

186
00:11:21,600 --> 00:11:22,740
Ez egy érdekes rejtvény.

187
00:11:23,420 --> 00:11:26,171
Ki tudsz találni egy protokollt arra vonatkozóan, 

188
00:11:26,171 --> 00:11:29,969
hogyan és milyen sorrendben fogadj el vagy utasíts el tranzakciókat, 

189
00:11:29,969 --> 00:11:34,702
hogy biztos lehess abban, hogy bárki más a világon, aki ugyanezt a protokollt követi, 

190
00:11:34,702 --> 00:11:37,620
ugyanolyan személyes főkönyvvel rendelkezik, mint te?

191
00:11:38,300 --> 00:11:41,580
Ez az a probléma, amellyel az eredeti Bitcoin-papír foglalkozik.

192
00:11:44,060 --> 00:11:47,128
Magas szinten a Bitcoin által kínált megoldás az, 

193
00:11:47,128 --> 00:11:52,160
hogy megbízunk abban a főkönyvben, amelyikbe a legtöbb számítási munkát fektették.

194
00:11:52,540 --> 00:11:54,860
Egy pillanatra elmagyarázom, hogy ez pontosan mit is jelent.

195
00:11:55,320 --> 00:11:58,120
Ez egy kriptográfiai hash-függvényt foglal magában.

196
00:11:58,460 --> 00:12:03,048
Az általános elképzelés, amelyre építünk, az, hogy ha a számítási munkát használjuk 

197
00:12:03,048 --> 00:12:05,943
alapként arra, hogy miben bízzunk, akkor elérhetjük, 

198
00:12:05,943 --> 00:12:10,532
hogy a csalárd tranzakciók és az egymásnak ellentmondó főkönyvek megvalósíthatatlan 

199
00:12:10,532 --> 00:12:12,280
mennyiségű számítást igényelnek.

200
00:12:13,040 --> 00:12:16,221
Ismét emlékeztetlek, hogy ez már jóval túlmutat azon, 

201
00:12:16,221 --> 00:12:19,580
amit bárkinek tudnia kell egy ilyen valuta használatához.

202
00:12:20,120 --> 00:12:23,050
De ez egy nagyon jó ötlet, és ha megérted, akkor 

203
00:12:23,050 --> 00:12:26,160
megérted a Bitcoin és más kriptovaluták lényegét is.

204
00:12:28,100 --> 00:12:29,940
Tehát először is, mi az a hash függvény?

205
00:12:30,800 --> 00:12:36,892
Az egyik ilyen függvény bemenete bármilyen üzenet vagy fájl lehet, 

206
00:12:36,892 --> 00:12:40,620
valóban úgy néz ki, mintha 256 bit lenne.

207
00:12:41,180 --> 00:12:45,185
Ezt a kimenetet az üzenet kivonatának vagy kivonatolásának nevezik, 

208
00:12:45,185 --> 00:12:47,660
és a cél az, hogy véletlenszerűnek tűnjön.

209
00:12:48,000 --> 00:12:51,660
Nem véletlenszerű, mindig ugyanazt a kimenetet adja egy adott bemenetre.

210
00:12:52,200 --> 00:12:55,619
De az ötlet az, hogy ha kissé megváltoztatod a bemenetet, 

211
00:12:55,619 --> 00:13:00,100
esetleg csak egy karaktert szerkesztesz, a kapott hash teljesen megváltozik.

212
00:13:00,820 --> 00:13:05,986
Valójában az itt bemutatott SHA256 nevű hash-funkció esetében a kimenet 

213
00:13:05,986 --> 00:13:11,440
változása a bemenet kismértékű megváltoztatásával teljesen kiszámíthatatlan.

214
00:13:12,440 --> 00:13:17,060
Látja, ez nem akármilyen hash-függvény, hanem egy kriptográfiai hash-függvény.

215
00:13:17,340 --> 00:13:20,660
Ez azt jelenti, hogy a fordított irányú számítás kivitelezhetetlen.

216
00:13:21,260 --> 00:13:26,535
Ha mutatok neked egy 1-ekből és 0-kból álló sorozatot, és megkérlek, 

217
00:13:26,535 --> 00:13:31,658
hogy találd meg az SHA256 hash bemenetét, nem lesz jobb módszered, 

218
00:13:31,658 --> 00:13:34,640
minthogy csak találgatsz és ellenőrzöl.

219
00:13:35,700 --> 00:13:39,800
És még egyszer, ha érezni akarod, hogy mennyi számításra lenne 

220
00:13:39,800 --> 00:13:43,900
szükség a 256 találgatáshoz, csak nézd meg a kiegészítő videót.

221
00:13:44,380 --> 00:13:46,660
Túlságosan is jól éreztem magam, amikor megírtam ezt a dolgot.

222
00:13:48,560 --> 00:13:51,615
Azt gondolhatnánk, hogy ha csak igazán beleásnánk magunkat a részletekbe, 

223
00:13:51,615 --> 00:13:54,547
hogy pontosan hogyan működik ez a funkció, akkor a megfelelő bemenetet 

224
00:13:54,547 --> 00:13:57,520
visszafordíthatnánk anélkül, hogy találgatnunk és ellenőriznünk kellene.

225
00:13:58,240 --> 00:14:00,840
De még senki sem találta ki, hogyan lehetne ezt megtenni.

226
00:14:01,600 --> 00:14:04,387
Érdekes módon nincs rideg, szigorú bizonyíték arra, 

227
00:14:04,387 --> 00:14:06,960
hogy fordított irányban is nehéz lenne számolni.

228
00:14:07,620 --> 00:14:10,910
Mégis, a modern biztonság nagy része a kriptográfiai hash-függvényektől és 

229
00:14:10,910 --> 00:14:14,200
attól az elképzeléstől függ, hogy ezek rendelkeznek ezzel a tulajdonsággal.

230
00:14:14,940 --> 00:14:20,326
Ha megnézné, hogy milyen algoritmusok állnak a böngészője által a YouTube-tal vagy a 

231
00:14:20,326 --> 00:14:25,840
bankjával létrehozott biztonságos kapcsolat mögött, valószínűleg az SHA256 nevet látná.

232
00:14:27,340 --> 00:14:32,741
Egyelőre arra fogunk koncentrálni, hogy egy ilyen függvény hogyan tudja bizonyítani, 

233
00:14:32,741 --> 00:14:37,000
hogy egy adott tranzakciós lista nagy számítási erőfeszítéssel jár.

234
00:14:38,040 --> 00:14:42,951
Képzeld el, hogy valaki megmutatja neked a tranzakciók listáját, és azt mondja: "Hé, 

235
00:14:42,951 --> 00:14:47,746
találtam egy speciális számot, így ha ezt a számot a tranzakciók listájának végére 

236
00:14:47,746 --> 00:14:50,462
teszed, és az SHA256-ot alkalmazod az egészre, 

237
00:14:50,462 --> 00:14:53,120
akkor a kimenet első 30 bitje mind nulla lesz.

238
00:14:54,100 --> 00:14:56,700
Mit gondolsz, mennyire volt nehéz nekik megtalálni ezt a számot?

239
00:14:58,060 --> 00:15:01,405
Nos, egy véletlenszerű üzenet esetében annak a valószínűsége, 

240
00:15:01,405 --> 00:15:05,507
hogy a hash történetesen 30 egymást követő nullával kezdődik, 1:2 a 30-hoz, 

241
00:15:05,507 --> 00:15:07,180
ami körülbelül 1:1 milliárdhoz.

242
00:15:08,200 --> 00:15:11,187
És mivel az SHA256 egy kriptográfiai hash-függvény, 

243
00:15:11,187 --> 00:15:15,840
egy ilyen különleges számot csak találgatással és ellenőrzéssel lehet megtalálni.

244
00:15:16,660 --> 00:15:19,640
Tehát ennek a személynek szinte biztosan körülbelül egymilliárd különböző 

245
00:15:19,640 --> 00:15:22,380
számot kellett átnéznie, mielőtt megtalálta ezt a különleges számot.

246
00:15:23,380 --> 00:15:26,065
És ha már tudod ezt a számot, nagyon gyorsan ellenőrizheted, 

247
00:15:26,065 --> 00:15:28,840
csak futtasd le a hash-t, és meglátod, hogy 30 nulla van benne.

248
00:15:29,800 --> 00:15:32,981
Más szóval, ellenőrizheti, hogy nagy mennyiségű munkát végeztek-e, 

249
00:15:32,981 --> 00:15:36,400
de anélkül, hogy magának is át kellene esnie ugyanezen az erőfeszítésen.

250
00:15:37,200 --> 00:15:38,800
Ezt nevezik a munka bizonyításának.

251
00:15:39,460 --> 00:15:44,220
És ami fontos, hogy mindez a munka szorosan kapcsolódik a tranzakciók listájához.

252
00:15:44,900 --> 00:15:48,030
Ha az egyik ilyen tranzakciót akár csak egy kicsit is megváltoztatod, 

253
00:15:48,030 --> 00:15:49,640
az teljesen megváltoztatja a hash-t.

254
00:15:50,080 --> 00:15:53,085
Tehát újabb egymilliárd találgatáson kellene keresztülmenned, 

255
00:15:53,085 --> 00:15:56,673
hogy találj egy új munkabizonylatot, egy új számot, amely lehetővé teszi, 

256
00:15:56,673 --> 00:16:00,600
hogy a módosított lista hash-ja ezzel az új számmal együtt 30 nullával kezdődjön.

257
00:16:01,500 --> 00:16:04,100
Gondoljunk vissza az elosztott főkönyvi helyzetünkre.

258
00:16:04,680 --> 00:16:07,813
Mindenki ott van, és tranzakciókat sugároz, és szeretnénk, 

259
00:16:07,813 --> 00:16:10,840
ha tudnának megállapodni abban, hogy mi a helyes főkönyv.

260
00:16:12,100 --> 00:16:15,247
Mint említettem, az eredeti Bitcoin-papír mögött az az elképzelés áll, 

261
00:16:15,247 --> 00:16:18,660
hogy mindenki abban a főkönyvben bízik, amelyikbe a legtöbb munkát fektették.

262
00:16:19,280 --> 00:16:23,224
Ez úgy működik, hogy egy adott főkönyvet először blokkokba szervezünk, 

263
00:16:23,224 --> 00:16:27,280
ahol minden blokk a tranzakciók listájából és a munka bizonyítékából áll.

264
00:16:27,720 --> 00:16:32,300
Vagyis egy speciális szám, hogy az egész blokk hash-ja egy csomó nullával kezdődjön.

265
00:16:33,140 --> 00:16:37,775
Egyelőre mondjuk, hogy 60 nullával kell kezdődnie, 

266
00:16:37,775 --> 00:16:45,500
de később visszatérünk egy szisztematikusabb módra, amit esetleg módosítani szeretne.

267
00:16:45,900 --> 00:16:50,040
Egy blokk csak akkor tekinthető érvényesnek, ha van munkabizonylata.

268
00:16:50,960 --> 00:16:55,323
Továbbá, hogy biztosítsuk a blokkok szabványos sorrendjét, úgy alakítjuk ki, 

269
00:16:55,323 --> 00:16:59,460
hogy egy blokknak tartalmaznia kell az előző blokk hash-ját a fejlécében.

270
00:17:00,060 --> 00:17:03,418
Így, ha visszamennél és megváltoztatnád bármelyik blokkot, 

271
00:17:03,418 --> 00:17:08,200
vagy felcserélnéd két blokk sorrendjét, akkor a következő blokkot változtatnád meg, 

272
00:17:08,200 --> 00:17:12,583
ami megváltoztatja a blokk hash-ját, ami megváltoztatja az utána következőt, 

273
00:17:12,583 --> 00:17:13,380
és így tovább.

274
00:17:13,980 --> 00:17:17,726
Ehhez újra kellene végezni az egész munkát, és minden egyes blokkhoz új 

275
00:17:17,726 --> 00:17:21,420
speciális számot kellene találni, amely a hash-jukat 60 nullával kezdi.

276
00:17:22,440 --> 00:17:25,035
Mivel a blokkok így láncolódnak össze, ahelyett, 

277
00:17:25,035 --> 00:17:28,319
hogy főkönyvnek neveznénk, inkább blokkláncnak szokás nevezni.

278
00:17:30,080 --> 00:17:34,420
A frissített protokollunk részeként mostantól bárki a világon bárki lehet blokkalkotó.

279
00:17:35,240 --> 00:17:38,610
Ez azt jelenti, hogy figyelik a tranzakciókat, amelyeket továbbítanak, 

280
00:17:38,610 --> 00:17:41,602
összegyűjtik őket egy blokkba, majd egy csomó munkát végeznek, 

281
00:17:41,602 --> 00:17:45,162
hogy megtalálják azt a speciális számot, amelynek hatására a blokk hash-ja 

282
00:17:45,162 --> 00:17:46,160
60 nullával kezdődik.

283
00:17:46,960 --> 00:17:49,900
Amint megtalálják, közvetítik a megtalált blokkot.

284
00:17:50,860 --> 00:17:54,087
Hogy megjutalmazzuk a blokk létrehozóját ezért a sok munkáért, 

285
00:17:54,087 --> 00:17:56,597
amikor összeállít egy blokkot, megengedjük neki, 

286
00:17:56,597 --> 00:17:59,876
hogy a blokk tetejére egy nagyon különleges tranzakciót tegyen, 

287
00:17:59,876 --> 00:18:02,540
amelyben mondjuk 10 főkönyvi dollárt kap a semmiből.

288
00:18:03,080 --> 00:18:07,204
Ezt nevezzük blokkjutalomnak, és ez egy kivétel a szokásos szabályaink alól, 

289
00:18:07,204 --> 00:18:09,400
hogy elfogadunk-e tranzakciókat vagy sem.

290
00:18:10,040 --> 00:18:12,920
Nem származik senkitől, így nem kell aláírni.

291
00:18:13,660 --> 00:18:16,486
Ez azt is jelenti, hogy a gazdaságunkban lévő 

292
00:18:16,486 --> 00:18:19,620
főkönyvi dollárok száma minden egyes új blokkal nő.

293
00:18:20,900 --> 00:18:24,255
A blokkok létrehozását gyakran bányászatnak nevezik, 

294
00:18:24,255 --> 00:18:28,180
mivel sok munkát igényel, és új valutákat hoz be a gazdaságba.

295
00:18:29,020 --> 00:18:32,451
Amikor azonban bányászokról hall vagy olvas, ne feledje, 

296
00:18:32,451 --> 00:18:36,786
hogy valójában ők csak tranzakciókat figyelnek, blokkokat hoznak létre, 

297
00:18:36,786 --> 00:18:40,940
ezeket a blokkokat továbbítják, és ezért új pénzzel jutalmazzák őket.

298
00:18:41,780 --> 00:18:45,854
A bányászok szemszögéből nézve minden egyes blokk olyan, mint egy miniatűr lottó, 

299
00:18:45,854 --> 00:18:49,382
ahol mindenki olyan gyorsan tippel számokat, amilyen gyorsan csak tud, 

300
00:18:49,382 --> 00:18:52,463
amíg egy szerencsés egyén meg nem talál egy speciális számot, 

301
00:18:52,463 --> 00:18:56,140
amely miatt a blokk hash-ja sok nullával kezdődik, és megkapja a jutalmat.

302
00:18:57,620 --> 00:19:01,442
Mindenki más, aki csak fizetésre akarja használni ezt a rendszert, 

303
00:19:01,442 --> 00:19:05,663
ahelyett, hogy a tranzakciókra figyelne, csak a bányászok által sugárzott 

304
00:19:05,663 --> 00:19:09,600
blokkokra figyel, és frissíti a blokklánc saját személyes példányait.

305
00:19:10,560 --> 00:19:15,051
A protokollunk legfontosabb kiegészítése az, hogy ha két különböző blokkláncot hallunk, 

306
00:19:15,051 --> 00:19:18,420
amelyek egymásnak ellentmondó tranzakciótörténettel rendelkeznek, 

307
00:19:18,420 --> 00:19:22,300
akkor a leghosszabbat választjuk, azt, amelyikbe a legtöbb munkát fektettük.

308
00:19:22,860 --> 00:19:26,049
Ha döntetlen, csak várd meg, amíg meghallod a további blokkot, 

309
00:19:26,049 --> 00:19:27,720
amely hosszabbá teszi az egyiket.

310
00:19:28,720 --> 00:19:31,398
Tehát annak ellenére, hogy nincs központi hatóság, 

311
00:19:31,398 --> 00:19:35,601
és mindenki fenntartja a blokklánc saját példányát, ha mindenki egyetért abban, 

312
00:19:35,601 --> 00:19:39,961
hogy azt a blokkláncot részesítsék előnyben, amelyikbe a legtöbb munkát fektették, 

313
00:19:39,961 --> 00:19:42,640
akkor van módunk decentralizált konszenzusra jutni.

314
00:19:43,560 --> 00:19:46,948
Ahhoz, hogy lássuk, miért megbízható ez a rendszer, és hogy megértsük, 

315
00:19:46,948 --> 00:19:50,193
mikor kell bíznunk abban, hogy egy fizetés legális, nagyon hasznos, 

316
00:19:50,193 --> 00:19:52,627
ha végigmegyünk azon, hogy pontosan mi kell ahhoz, 

317
00:19:52,627 --> 00:19:54,680
hogy valakit átverjünk ezzel a rendszerrel.

318
00:19:55,600 --> 00:19:58,827
Lehet, hogy Alice megpróbálja becsapni Bobot egy hamis blokkkal, 

319
00:19:58,827 --> 00:20:02,104
azaz megpróbál neki egy olyan blokkot küldeni, amely tartalmazza, 

320
00:20:02,104 --> 00:20:04,586
hogy ő fizet neki 100 Ledger dollárt, de anélkül, 

321
00:20:04,586 --> 00:20:07,416
hogy ezt a blokkot továbbítaná a hálózat többi részének, 

322
00:20:07,416 --> 00:20:11,240
így mindenki más továbbra is azt hiszi, hogy nála van az a 100 Ledger dollár.

323
00:20:11,960 --> 00:20:16,245
Ehhez az összes többi bányász előtt kell találnia egy érvényes munkabizonylatot, 

324
00:20:16,245 --> 00:20:18,680
akik mindannyian a saját blokkjukon dolgoznak.

325
00:20:19,500 --> 00:20:21,896
És ez határozottan megtörténhet, talán Alice csak 

326
00:20:21,896 --> 00:20:24,820
véletlenül mindenki más előtt megnyeri ezt a miniatűr lottót.

327
00:20:25,680 --> 00:20:29,519
De Bob továbbra is hallani fogja a többi bányász által készített adásokat, 

328
00:20:29,519 --> 00:20:32,130
így ahhoz, hogy ne higgyen ebben a hamis blokkban, 

329
00:20:32,130 --> 00:20:34,792
Alice-nek magának kell elvégeznie az összes munkát, 

330
00:20:34,792 --> 00:20:39,246
hogy folyamatosan blokkokat adjon hozzá Bob blokkláncának ezen a speciális elágazásán, 

331
00:20:39,246 --> 00:20:41,960
amely különbözik attól, amit a többi bányásztól hall.

332
00:20:42,740 --> 00:20:45,651
Ne feledje, hogy a protokoll szerint Bob mindig 

333
00:20:45,651 --> 00:20:48,260
az általa ismert leghosszabb láncban bízik.

334
00:20:49,260 --> 00:20:52,432
Alice képes lehet ezt néhány blokkig fenntartani, 

335
00:20:52,432 --> 00:20:57,700
ha véletlenül gyorsabban talál blokkokat, mint a hálózat többi bányásza együttvéve.

336
00:20:58,480 --> 00:21:03,314
De hacsak nem rendelkezik az összes bányász számítási erőforrásainak közel 50%-ával, 

337
00:21:03,314 --> 00:21:06,499
akkor túl nagy a valószínűsége annak, hogy a blokklánc, 

338
00:21:06,499 --> 00:21:10,139
amelyen az összes többi bányász dolgozik, gyorsabban növekszik, 

339
00:21:10,139 --> 00:21:13,780
mint az egyetlen csalárd blokklánc, amelyet Alice táplál Bobnak.

340
00:21:15,000 --> 00:21:18,798
Így elég idő elteltével Bob egyszerűen el fogja utasítani azt, 

341
00:21:18,798 --> 00:21:23,140
amit Alice-től hall, a hosszabb lánc javára, amin mindenki más dolgozik.

342
00:21:23,960 --> 00:21:27,999
Vegye észre, ez azt jelenti, hogy nem feltétlenül kell bíznia egy új blokkban, 

343
00:21:27,999 --> 00:21:28,920
amit azonnal hall.

344
00:21:29,500 --> 00:21:33,400
Ehelyett meg kell várni, hogy több új blokk kerüljön rá.

345
00:21:33,820 --> 00:21:37,114
Ha még mindig nem hallottál hosszabb blokkláncokról, akkor bízhatsz abban, 

346
00:21:37,114 --> 00:21:40,540
hogy ez a blokk ugyanannak a láncnak a része, amelyet mindenki más is használ.

347
00:21:42,120 --> 00:21:45,220
És ezzel el is találtuk az összes fő gondolatot.

348
00:21:45,780 --> 00:21:49,418
Ez az elosztott főkönyvi rendszer, amely a munka bizonyításán alapul, 

349
00:21:49,418 --> 00:21:53,680
nagyjából így működik a Bitcoin protokoll, és így működik sok más kriptovaluta is.

350
00:21:54,300 --> 00:21:56,160
Csak néhány részletet kell tisztázni.

351
00:21:56,300 --> 00:21:58,775
Korábban azt mondtam, hogy a munka bizonyítéka lehet, 

352
00:21:58,775 --> 00:22:02,580
hogy találni kell egy speciális számot, hogy a blokk hash-ja 60 nullával kezdődjön.

353
00:22:03,220 --> 00:22:08,676
Nos, a Bitcoin protokoll úgy működik, hogy a nullák számát rendszeresen megváltoztatja, 

354
00:22:08,676 --> 00:22:11,900
így egy új blokk megtalálása 10 percet vesz igénybe.

355
00:22:12,780 --> 00:22:16,039
Tehát ahogy egyre több bányász csatlakozik a hálózathoz, 

356
00:22:16,039 --> 00:22:21,187
a kihívás egyre nehezebbé válik oly módon, hogy ennek a miniatűr lottónak csak körülbelül 

357
00:22:21,187 --> 00:22:22,960
10 percenként van egy nyertese.

358
00:22:23,920 --> 00:22:27,880
Sok újabb kriptovaluta ennél sokkal rövidebb blokkolási idővel rendelkezik.

359
00:22:28,580 --> 00:22:32,460
És a Bitcoin összes pénze végső soron valamilyen blokkjutalomból származik.

360
00:22:32,920 --> 00:22:35,740
Kezdetben ezek a jutalmak blokkonként 50 Bitcoin voltak.

361
00:22:36,140 --> 00:22:38,858
Van egy nagyszerű weboldal, a Block Explorer, amely 

362
00:22:38,858 --> 00:22:41,420
megkönnyíti a Bitcoin blokkláncának áttekintését.

363
00:22:41,960 --> 00:22:44,648
És ha megnézzük a lánc legelső néhány blokkját, 

364
00:22:44,648 --> 00:22:49,240
azok nem tartalmaznak más tranzakciót, mint a bányásznak járó 50 Bitcoin jutalmat.

365
00:22:49,860 --> 00:22:56,340
De 210 000 blokkonként, azaz körülbelül 4 évente, ez a jutalom a felére csökken.

366
00:22:56,860 --> 00:23:00,140
Jelenleg tehát a jutalom 12,5 Bitcoin blokkonként.

367
00:23:00,720 --> 00:23:04,575
És mivel ez a jutalom idővel geometrikusan csökken, 

368
00:23:04,575 --> 00:23:09,320
ez azt jelenti, hogy soha nem lesz több, mint 21 millió Bitcoin.

369
00:23:10,280 --> 00:23:13,280
Ez azonban nem jelenti azt, hogy a bányászok nem fognak többé pénzt keresni.

370
00:23:13,820 --> 00:23:17,940
A blokkjutalom mellett a bányászok tranzakciós díjakat is felvehetnek.

371
00:23:18,520 --> 00:23:21,362
Ez úgy működik, hogy amikor fizetést teljesítesz, 

372
00:23:21,362 --> 00:23:25,795
tisztán opcionálisan tranzakciós díjat is fizethetsz, amely a bányásznak jár, 

373
00:23:25,795 --> 00:23:28,240
amelyik blokkban az adott fizetés szerepel.

374
00:23:29,020 --> 00:23:31,864
Azért teheti ezt, hogy ösztönözze a bányászokat arra, 

375
00:23:31,864 --> 00:23:35,920
hogy az Ön által sugárzott tranzakciót valóban beépítsék a következő blokkba.

376
00:23:36,440 --> 00:23:41,794
A Bitcoinban ugyanis minden egyes blokk körülbelül 2400 tranzakcióra korlátozódik, 

377
00:23:41,794 --> 00:23:45,020
ami sok kritikus szerint szükségtelenül korlátozó.

378
00:23:45,860 --> 00:23:50,530
Összehasonlításképpen, a Visa átlagosan körülbelül 1700 tranzakciót dolgoz fel 

379
00:23:50,530 --> 00:23:55,320
másodpercenként, és több mint 24 000 tranzakciót képesek kezelni másodpercenként.

380
00:23:56,020 --> 00:24:00,957
A Bitcoin viszonylag lassú feldolgozása magasabb tranzakciós díjakat eredményez, 

381
00:24:00,957 --> 00:24:06,200
mivel ez határozza meg, hogy a bányászok mely tranzakciókat veszik fel egy új blokkba.

382
00:24:07,820 --> 00:24:11,500
Mindez távolról sem jelenti a kriptovaluták átfogó lefedettségét.

383
00:24:12,160 --> 00:24:15,049
Még mindig sok olyan árnyalat és alternatív tervezési lehetőség van, 

384
00:24:15,049 --> 00:24:16,180
amit még nem is érintettem.

385
00:24:16,640 --> 00:24:21,314
De remélem, hogy ez egy stabil WaitButWhy-stílusú megértési fa törzse lehet mindenkinek, 

386
00:24:21,314 --> 00:24:24,360
aki további olvasással szeretne még néhány ágat hozzáadni.

387
00:24:25,180 --> 00:24:28,941
Ahogy az elején mondtam, az egyik indíték az, hogy rengeteg pénz áramlik 

388
00:24:28,941 --> 00:24:32,290
a kriptovaluták felé, és bár nem akarok állításokat tenni arról, 

389
00:24:32,290 --> 00:24:36,154
hogy ez jó vagy rossz befektetés-e, tényleg úgy gondolom, hogy egészséges, 

390
00:24:36,154 --> 00:24:40,380
ha az emberek, akik beszállnak a játékba, legalább a technológia alapjait ismerik.

391
00:24:41,340 --> 00:24:43,255
Mint mindig, őszinte köszönetem azoknak, akik 

392
00:24:43,255 --> 00:24:45,420
Patreonon keresztül lehetővé teszik ezt a csatornát.

393
00:24:46,080 --> 00:24:49,061
Megértem, hogy nem mindenki van abban a helyzetben, hogy hozzájáruljon, 

394
00:24:49,061 --> 00:24:51,629
de ha mégis szeretnél segíteni, az egyik legjobb módja ennek, 

395
00:24:51,629 --> 00:24:54,445
ha egyszerűen megosztod azokat a videókat, amelyekről úgy gondolod, 

396
00:24:54,445 --> 00:24:56,640
hogy érdekesek vagy hasznosak lehetnek mások számára.

397
00:24:57,280 --> 00:24:59,320
Tudom, hogy tudod, de tényleg segít.

