1
00:00:03,899 --> 00:00:06,480
Що означає мати біткойн?

2
00:00:07,420 --> 00:00:10,969
Багато людей чули про біткойн, що це повністю цифрова валюта, 

3
00:00:10,969 --> 00:00:14,977
яку не випускає уряд, що жодним банкам не потрібно керувати рахунками 

4
00:00:14,977 --> 00:00:19,100
та перевіряти транзакції, і що ніхто насправді не знає, хто її винайшов.

5
00:00:19,380 --> 00:00:23,280
І все ж багато людей не знають відповіді на це запитання, принаймні не повної.

6
00:00:24,100 --> 00:00:27,394
Щоб досягти цього та переконатися, що технічні деталі, 

7
00:00:27,394 --> 00:00:30,927
що лежать в основі відповіді, дійсно відчувають мотивацію, 

8
00:00:30,927 --> 00:00:35,240
ми крок за кроком розповімо, як ви могли винайти власну версію біткойна.

9
00:00:36,140 --> 00:00:40,457
Ми почнемо з того, що ви будете відстежувати платежі з друзями за допомогою спільної 

10
00:00:40,457 --> 00:00:44,775
книги, а потім, коли ви почнете все менше довіряти своїм друзям і світу навколо вас, 

11
00:00:44,775 --> 00:00:48,382
і якщо ви достатньо кмітливі, щоб залучити кілька ідей з криптографії, 

12
00:00:48,382 --> 00:00:52,700
щоб допомогти обійти потребу в довірі, ви отримаєте те, що називається криптовалютою.

13
00:00:53,840 --> 00:00:58,275
Біткойн є лише першим реалізованим прикладом криптовалюти, 

14
00:00:58,275 --> 00:01:02,560
і зараз є тисячі інших на біржах з традиційними валютами.

15
00:01:03,300 --> 00:01:08,086
Пройшовши шлях винайдення власного, ви можете закласти основи для розуміння деяких 

16
00:01:08,086 --> 00:01:13,220
нещодавніх гравців у грі та розпізнати, коли і чому є місце для різних варіантів дизайну.

17
00:01:14,100 --> 00:01:18,415
Насправді, одна з причин, чому я вибрав цю тему, полягає в тому, 

18
00:01:18,415 --> 00:01:23,660
що за останній рік ці валюти привернули величезну увагу, інвестиції та ажіотаж.

19
00:01:24,280 --> 00:01:28,493
Я не збираюся коментувати чи спекулювати щодо поточних або майбутніх курсів валют, 

20
00:01:28,493 --> 00:01:32,300
але я думаю, що ми всі погодимося, що кожен, хто хоче купити криптовалюту, 

21
00:01:32,300 --> 00:01:33,620
повинен знати, що це таке.

22
00:01:33,920 --> 00:01:38,428
І я маю на увазі не лише аналогії з невизначеними зв’язками з видобутком золота, 

23
00:01:38,428 --> 00:01:42,102
я маю на увазі фактичний прямий опис того, що роблять комп’ютери, 

24
00:01:42,102 --> 00:01:45,220
коли ми надсилаємо, отримуємо та створюємо криптовалюти.

25
00:01:46,300 --> 00:01:48,834
Одна річ, яку варто підкреслити, полягає в тому, 

26
00:01:48,834 --> 00:01:52,971
що хоча ми з вами збираємося тут розібратися в деталях, і це займе багато часу, 

27
00:01:52,971 --> 00:01:57,160
вам насправді не потрібно знати ці деталі, якщо ви просто хочете використовувати 

28
00:01:57,160 --> 00:02:01,401
криптовалюту, як і ви не потрібно знати деталі того, що відбувається під капотом, 

29
00:02:01,401 --> 00:02:03,160
коли ви проводите кредитну картку.

30
00:02:03,720 --> 00:02:06,699
Як і будь-який цифровий платіж, існує багато зручних програм, 

31
00:02:06,699 --> 00:02:10,591
які дозволяють вам просто надсилати й отримувати валюту, не замислюючись про те, 

32
00:02:10,591 --> 00:02:11,360
що відбувається.

33
00:02:11,660 --> 00:02:17,020
Різниця полягає в тому, що основою цього є не банк, який перевіряє транзакції.

34
00:02:17,540 --> 00:02:21,010
Натомість це розумна система децентралізованої перевірки без довіри, 

35
00:02:21,010 --> 00:02:24,480
яка базується на певній частині математики, народженої криптографією.

36
00:02:25,900 --> 00:02:28,315
Але для початку я хочу, щоб ви на кілька хвилин 

37
00:02:28,315 --> 00:02:30,480
відкинули думки про криптовалюти та все це.

38
00:02:31,080 --> 00:02:33,710
Ми збираємося розпочати розповідь з чогось більш приземленого, 

39
00:02:33,710 --> 00:02:35,380
бухгалтерських книг і цифрових підписів.

40
00:02:36,340 --> 00:02:39,334
Якщо ви та ваші друзі досить часто обмінюєтеся грошима, 

41
00:02:39,334 --> 00:02:41,847
сплачуючи свою частину рахунку за вечерю тощо, 

42
00:02:41,847 --> 00:02:44,360
може бути незручно постійно обмінювати готівку.

43
00:02:44,720 --> 00:02:48,105
Тож ви можете вести спільну книгу, у якій записуватимуться всі платежі, 

44
00:02:48,105 --> 00:02:50,080
які ви збираєтеся здійснити в майбутньому.

45
00:02:50,620 --> 00:02:55,100
Аліса платить Бобу 20 доларів, Боб платить Чарлі 40 доларів тощо.

46
00:02:55,500 --> 00:02:58,461
Ця книга стане загальнодоступною та доступною для всіх, 

47
00:02:58,461 --> 00:03:01,740
як веб-сайт, куди будь-хто зможе перейти та додати нові рядки.

48
00:03:02,480 --> 00:03:05,756
І, скажімо, наприкінці кожного місяця ви всі збираєтесь разом, 

49
00:03:05,756 --> 00:03:07,940
дивитесь список транзакцій і погоджуєтеся.

50
00:03:08,280 --> 00:03:11,455
Якщо ви витратили більше, ніж отримали, ви кладете ці гроші в котел, 

51
00:03:11,455 --> 00:03:14,400
а якщо ви отримали більше, ніж витратили, ви забираєте ці гроші.

52
00:03:15,460 --> 00:03:19,360
Отже, протокол для того, щоб бути частиною цієї дуже простої системи, може виглядати так.

53
00:03:20,020 --> 00:03:22,373
Будь-хто може додати рядки до бухгалтерської книги, 

54
00:03:22,373 --> 00:03:25,360
і в кінці кожного місяця ви всі збираєтеся разом і розраховуєтеся.

55
00:03:26,300 --> 00:03:30,760
Одна проблема з такою публічною книгою полягає в тому, що кожен може додати рядок.

56
00:03:31,020 --> 00:03:34,456
Отже, що заважає Бобу піти і написати «Аліса платить 

57
00:03:34,456 --> 00:03:36,920
Бобу 100 доларів без схвалення Аліси»?

58
00:03:37,780 --> 00:03:44,940
Як ми можемо вірити, що всі ці транзакції є такими, якими їх мав на увазі відправник?

59
00:03:44,940 --> 00:03:48,540
Ось тут і з’являється перша частина криптографії, цифрові підписи.

60
00:03:49,480 --> 00:03:52,600
Подібно до рукописних підписів, ідея полягає в тому, 

61
00:03:52,600 --> 00:03:56,839
що Аліса повинна мати можливість додати щось поруч із цією транзакцією, 

62
00:03:56,839 --> 00:03:59,606
що доводить, що вона бачила це та схвалила це, 

63
00:03:59,606 --> 00:04:03,080
і будь-кому іншому має бути неможливо підробити цей підпис.

64
00:04:04,300 --> 00:04:08,580
Спочатку може здатися, що цифровий підпис взагалі неможливий.

65
00:04:09,220 --> 00:04:11,560
Я маю на увазі, будь-які дані, які складають цей підпис, 

66
00:04:11,560 --> 00:04:13,860
можуть бути просто прочитані та скопійовані комп’ютером.

67
00:04:14,400 --> 00:04:17,459
Отже, як запобігти підробці?

68
00:04:17,459 --> 00:04:22,144
Це працює таким чином, що кожен генерує так звану пару відкритий ключ-приватний ключ, 

69
00:04:22,144 --> 00:04:24,160
кожна з яких виглядає як рядок бітів.

70
00:04:24,800 --> 00:04:27,714
Приватний ключ іноді також називають секретним ключем, 

71
00:04:27,714 --> 00:04:31,000
тому ми можемо скоротити його як SK, а відкритий ключ – як PK.

72
00:04:31,000 --> 00:04:36,220
Як випливає з назви, цей секретний ключ – це те, що ви хочете зберегти при собі.

73
00:04:37,060 --> 00:04:40,511
У реальному світі ваш власноручний підпис виглядає однаково незалежно від того, 

74
00:04:40,511 --> 00:04:41,720
який документ ви підписуєте.

75
00:04:42,280 --> 00:04:44,682
Але цифровий підпис насправді набагато сильніший, 

76
00:04:44,682 --> 00:04:46,940
оскільки він змінюється для різних повідомлень.

77
00:04:47,840 --> 00:04:52,526
Це виглядає як певний рядок з 1 і 0, зазвичай приблизно 256 біт, 

78
00:04:52,526 --> 00:04:56,635
і навіть незначна зміна повідомлення повністю змінює те, 

79
00:04:56,635 --> 00:04:59,880
як має виглядати підпис у цьому повідомленні.

80
00:05:00,840 --> 00:05:04,583
Говорячи трохи більш формально, створення підпису передбачає функцію, 

81
00:05:04,583 --> 00:05:08,540
яка залежить як від самого повідомлення, так і від вашого закритого ключа.

82
00:05:09,200 --> 00:05:12,841
Закритий ключ гарантує, що лише ви можете створити цей підпис, а той факт, 

83
00:05:12,841 --> 00:05:16,095
що він залежить від повідомлення, означає, що ніхто не може просто 

84
00:05:16,095 --> 00:05:19,640
скопіювати один із ваших підписів і підробити його в іншому повідомленні.

85
00:05:21,000 --> 00:05:26,198
Пліч-о-пліч із цим є друга функція, яка використовується для перевірки дійсності підпису, 

86
00:05:26,198 --> 00:05:28,220
і тут вступає в дію відкритий ключ.

87
00:05:29,200 --> 00:05:33,064
Все, що він робить, це виводить true або false, щоб вказати, чи був це підпис, 

88
00:05:33,064 --> 00:05:35,950
створений закритим ключем, пов’язаним із відкритим ключем, 

89
00:05:35,950 --> 00:05:37,760
який ви використовуєте для перевірки.

90
00:05:38,640 --> 00:05:42,768
Я не буду вдаватися в подробиці того, як саме працюють обидві ці функції, 

91
00:05:42,768 --> 00:05:45,613
але ідея полягає в тому, що знайти дійсний підпис, 

92
00:05:45,613 --> 00:05:49,240
якщо ви не знаєте секретного ключа, має бути абсолютно неможливо.

93
00:05:50,060 --> 00:05:54,790
Зокрема, немає кращої стратегії, ніж просто вгадування та перевірка випадкових підписів, 

94
00:05:54,790 --> 00:05:57,820
які можна перевірити за допомогою загальновідомого ключа.

95
00:05:58,980 --> 00:06:03,200
Тепер подумайте, скільки існує сигнатур довжиною 256 біт.

96
00:06:03,840 --> 00:06:06,180
Це 2 у степені 256!

97
00:06:07,140 --> 00:06:09,560
Це тупо велика кількість.

98
00:06:09,860 --> 00:06:13,640
Назвати його астрономічно великим означало б віддавати занадто багато уваги астрономії.

99
00:06:14,260 --> 00:06:17,372
Фактично, я зробив додаткове відео, присвячене лише тому, 

100
00:06:17,372 --> 00:06:19,680
щоб проілюструвати, яке це величезне число.

101
00:06:20,380 --> 00:06:23,967
Але тут, скажімо так, що коли ви перевіряєте, що підпис проти даного 

102
00:06:23,967 --> 00:06:27,969
повідомлення дійсний, ви можете бути надзвичайно впевнені, що єдиний спосіб, 

103
00:06:27,969 --> 00:06:31,349
яким хтось міг його створити, це якби вони знали секретний ключ, 

104
00:06:31,349 --> 00:06:35,040
пов’язаний із відкритим ключем, який ви використовували для перевірки .

105
00:06:37,120 --> 00:06:40,242
Гарантувати, що люди підписують транзакції в бухгалтерській книзі, 

106
00:06:40,242 --> 00:06:42,200
досить добре, але є одна невелика лазівка.

107
00:06:42,720 --> 00:06:46,426
Якщо Аліса підписує транзакцію, як-от Аліса платить Бобу 100 доларів, 

108
00:06:46,426 --> 00:06:50,185
навіть якщо Боб не може підробити підпис Аліси на новому повідомленні, 

109
00:06:50,185 --> 00:06:53,680
він може просто скопіювати той самий рядок скільки завгодно разів.

110
00:06:54,300 --> 00:06:56,760
Ця комбінація повідомлення-підпис залишається дійсною.

111
00:06:56,760 --> 00:07:01,110
Щоб уникнути цього, ми робимо так, що коли ви підписуєте транзакцію, 

112
00:07:01,110 --> 00:07:05,145
повідомлення має також містити певний унікальний ідентифікатор, 

113
00:07:05,145 --> 00:07:07,100
пов’язаний із цією транзакцією.

114
00:07:07,840 --> 00:07:12,671
Таким чином, якщо Аліса заплатить Бобу 100 доларів кілька разів, 

115
00:07:12,671 --> 00:07:17,280
кожен із цих рядків у книзі потребує абсолютно нового підпису.

116
00:07:18,160 --> 00:07:21,940
Цифрові підписи усувають великий аспект довіри до цього початкового протоколу.

117
00:07:22,380 --> 00:07:27,280
Але навіть якщо б ви дійсно це зробили, ви б покладалися на певну систему честі.

118
00:07:27,720 --> 00:07:30,205
А саме, ви сподіваєтеся, що кожен справді виконає 

119
00:07:30,205 --> 00:07:32,740
та розрахується готівкою наприкінці кожного місяця.

120
00:07:33,560 --> 00:07:39,480
Що якщо, наприклад, Чарлі набере тисячі доларів боргів і просто відмовиться з’явитися?

121
00:07:40,120 --> 00:07:44,594
Єдина реальна причина повернутися до готівки, щоб розрахуватися, 

122
00:07:44,594 --> 00:07:47,280
це якщо деякі люди винні багато грошей.

123
00:07:47,860 --> 00:07:52,440
Тож, можливо, у вас є розумна ідея, що вам ніколи не доведеться розплачуватися готівкою, 

124
00:07:52,440 --> 00:07:56,660
якщо у вас є спосіб запобігти людям витрачати набагато більше, ніж вони отримують.

125
00:07:57,340 --> 00:08:01,023
Можливо, ви почнете з того, що кожен заплатить по 100 доларів у банк, 

126
00:08:01,023 --> 00:08:05,233
а потім у перших кількох рядках книги буде написано: Аліса отримує 100 доларів, 

127
00:08:05,233 --> 00:08:08,180
Боб отримує 100 доларів, Чарлі отримує 100 доларів тощо.

128
00:08:09,020 --> 00:08:14,498
Тепер просто не приймайте жодних транзакцій, коли хтось витрачає більше, 

129
00:08:14,498 --> 00:08:16,000
ніж має на цю книгу.

130
00:08:16,840 --> 00:08:21,240
Наприклад, якщо перші дві транзакції: Чарлі платить Алісі 50 доларів, 

131
00:08:21,240 --> 00:08:25,012
а Чарлі платить Бобу 50 доларів, якби він спробував додати, 

132
00:08:25,012 --> 00:08:29,665
що Чарлі платить вам 20 доларів, це було б недійсним, таким же недійсним, 

133
00:08:29,665 --> 00:08:31,740
якби він ніколи не підписував це.

134
00:08:31,740 --> 00:08:35,366
Зауважте, це означає, що для перевірки транзакції 

135
00:08:35,366 --> 00:08:39,500
потрібно знати повну історію транзакцій до цього моменту.

136
00:08:40,159 --> 00:08:45,960
Це також буде вірно для криптовалют, хоча є невеликий простір для оптимізації.

137
00:08:48,380 --> 00:08:51,701
Тут цікаво те, що цей крок усуває зв’язок між 

138
00:08:51,701 --> 00:08:55,600
обліковою книгою та фактичними фізичними доларами США.

139
00:08:56,200 --> 00:08:59,383
Теоретично, якби всі у світі користувалися цією книгою, 

140
00:08:59,383 --> 00:09:04,386
ви могли б прожити все своє життя, просто надсилаючи та отримуючи гроші за цією книгою, 

141
00:09:04,386 --> 00:09:06,660
не конвертуючи їх у справжні долари США.

142
00:09:07,580 --> 00:09:11,410
Насправді, щоб підкреслити цей момент, давайте почнемо називати кількість 

143
00:09:11,410 --> 00:09:15,240
у бухгалтерській книзі як долари в бухгалтерській книзі, або скорочено LD.

144
00:09:15,240 --> 00:09:18,660
Ви можете вільно обмінювати долари бухгалтерської книги на справжні долари США.

145
00:09:19,060 --> 00:09:23,887
Наприклад, Аліса дає Бобу 10-доларову купюру в реальному світі в обмін на те, 

146
00:09:23,887 --> 00:09:29,148
що він додає та підписує транзакцію, яку Боб сплачує Алісі 10 доларів у цій спільній 

147
00:09:29,148 --> 00:09:29,520
книзі.

148
00:09:30,720 --> 00:09:34,220
Але такі обміни не гарантовані протоколом.

149
00:09:34,720 --> 00:09:37,537
Тепер це більше аналогічно тому, як ви можете обміняти 

150
00:09:37,537 --> 00:09:40,560
долари на євро чи будь-яку іншу валюту на відкритому ринку.

151
00:09:41,180 --> 00:09:43,800
Це просто своя незалежна річ.

152
00:09:44,580 --> 00:09:49,780
Це перше важливе, що потрібно зрозуміти про біткойн або будь-яку іншу криптовалюту.

153
00:09:49,780 --> 00:09:52,420
Це бухгалтерська книга.

154
00:09:53,180 --> 00:09:55,980
Історія транзакцій - валюта.

155
00:09:57,160 --> 00:10:00,296
Звичайно, з біткойнами гроші не потрапляють у бухгалтерську книгу, 

156
00:10:00,296 --> 00:10:01,560
коли люди купують готівкою.

157
00:10:02,000 --> 00:10:04,820
За кілька хвилин я перейду до того, як нові гроші надходять у книгу.

158
00:10:05,540 --> 00:10:08,797
Але перед тим, насправді, існує ще більша різниця між нашою 

159
00:10:08,797 --> 00:10:12,380
поточною системою реєстру доларів і тим, як працюють криптовалюти.

160
00:10:13,020 --> 00:10:16,111
Поки що я казав, що ця книга знаходиться в якомусь загальнодоступному місці, 

161
00:10:16,111 --> 00:10:18,440
наприклад на веб-сайті, де кожен може додавати нові рядки.

162
00:10:19,220 --> 00:10:22,990
Але для цього знадобиться довіряти центральне розташування, а саме, 

163
00:10:22,990 --> 00:10:26,760
хто розміщує веб-сайт, хто контролює правила додавання нових рядків.

164
00:10:27,340 --> 00:10:31,540
Щоб усунути цю частку довіри, ми зробимо, щоб кожен мав свою копію бухгалтерської книги.

165
00:10:31,540 --> 00:10:35,558
Потім, коли ви хочете здійснити транзакцію, як-от Аліса платить Бобу 

166
00:10:35,558 --> 00:10:39,285
100 доларів за реєстраційними книгами, ви транслюєте це у світ, 

167
00:10:39,285 --> 00:10:43,420
щоб люди почули та зафіксували у своїх приватних бухгалтерських книгах.

168
00:10:44,840 --> 00:10:49,260
Але якщо ви не зробите щось більше, ця система буде абсурдно поганою.

169
00:10:49,820 --> 00:10:52,160
Як ви могли змусити всіх погодитися щодо того, що таке правильна книга?

170
00:10:52,160 --> 00:10:56,705
Коли Боб отримує транзакцію, наприклад, як Аліса платить Бобу 10 доларів Леджера, 

171
00:10:56,705 --> 00:11:01,140
як він може бути впевнений, що всі інші отримали та вірять у цю саму транзакцію?

172
00:11:01,140 --> 00:11:05,729
Що він зможе пізніше піти до Чарлі та використати ті самі 10 доларів Леджера, 

173
00:11:05,729 --> 00:11:07,200
щоб здійснити транзакцію?

174
00:11:08,240 --> 00:11:12,060
Справді, уявіть, що ви просто слухаєте трансляцію транзакцій.

175
00:11:12,760 --> 00:11:15,664
Як ви можете бути впевнені, що всі інші записують 

176
00:11:15,664 --> 00:11:18,220
ті самі транзакції та в тому самому порядку?

177
00:11:19,420 --> 00:11:21,360
Це справді суть проблеми.

178
00:11:21,600 --> 00:11:22,740
Це цікава головоломка.

179
00:11:23,420 --> 00:11:28,789
Чи можете ви придумати протокол, як приймати або відхиляти транзакції та в якому порядку, 

180
00:11:28,789 --> 00:11:32,071
щоб ви могли бути впевнені, що будь-хто інший у світі, 

181
00:11:32,071 --> 00:11:37,142
який дотримується цього самого протоколу, має особисту книгу, яка виглядає так само, 

182
00:11:37,142 --> 00:11:37,620
як ваша?

183
00:11:38,300 --> 00:11:41,580
Це проблема, розглянута в оригінальній статті про біткойн.

184
00:11:44,060 --> 00:11:47,413
На високому рівні рішення, яке пропонує біткойн, полягає в тому, 

185
00:11:47,413 --> 00:11:51,798
щоб довіряти будь-якій бухгалтерській книзі, в яку вкладено найбільше обчислювальної 

186
00:11:51,798 --> 00:11:52,160
роботи.

187
00:11:52,540 --> 00:11:54,860
Я витрачу хвилинку, щоб пояснити, що це означає.

188
00:11:55,320 --> 00:11:57,540
Він включає криптографічну хеш-функцію.

189
00:11:57,540 --> 00:12:00,287
Загальна ідея, яку ми будуватимемо, полягає в тому, 

190
00:12:00,287 --> 00:12:03,826
що якщо ви використовуєте обчислювальну роботу як основу для того, 

191
00:12:03,826 --> 00:12:07,525
чому можна довіряти, ви можете зробити так, щоб шахрайські транзакції 

192
00:12:07,525 --> 00:12:12,280
та конфліктні бухгалтерські книги вимагали неймовірної кількості обчислень для здійснення.

193
00:12:13,040 --> 00:12:16,336
Знову ж таки, я нагадаю вам, що це заростає в бур’ян, ніж те, 

194
00:12:16,336 --> 00:12:19,580
що будь-кому потрібно знати, щоб використовувати таку валюту.

195
00:12:20,120 --> 00:12:23,231
Але це дійсно класна ідея, і якщо ви її розумієте, 

196
00:12:23,231 --> 00:12:26,160
ви розумієте суть біткойна та інших криптовалют.

197
00:12:28,100 --> 00:12:29,940
Отже, перш за все, що таке хеш-функція?

198
00:12:30,800 --> 00:12:37,495
Вхідними даними для однієї з цих функцій можуть бути будь-які повідомлення чи файли, 

199
00:12:37,495 --> 00:12:39,780
це насправді не має значення.

200
00:12:39,780 --> 00:12:45,540
А на виході буде рядок бітів певної фіксованої довжини, наприклад 256 бітів.

201
00:12:45,540 --> 00:12:49,680
Цей результат називається хешем або дайджестом повідомлення.

202
00:12:49,680 --> 00:12:50,960
І мета полягає в тому, щоб це виглядало випадковим.

203
00:12:50,960 --> 00:12:53,880
Він не є випадковим, він завжди дає той самий вихід для заданого вхідного сигналу.

204
00:12:53,880 --> 00:12:57,861
Але ідея полягає в тому, що якщо ви трохи зміните введення, можливо, 

205
00:12:57,861 --> 00:13:01,900
відредагувавши лише один із символів, кінцевий хеш зміниться повністю.

206
00:13:01,900 --> 00:13:06,196
Фактично, для хеш-функції, яку я тут показую під назвою SHA256, те, 

207
00:13:06,196 --> 00:13:11,440
як змінюється вихід, коли ви трохи змінюєте цей вхід, є абсолютно непередбачуваним.

208
00:13:12,440 --> 00:13:17,060
Розумієте, це не просто хеш-функція, це криптографічна хеш-функція.

209
00:13:17,340 --> 00:13:20,660
Це означає, що обчислення у зворотному напрямку неможливо.

210
00:13:21,260 --> 00:13:27,092
Якщо я покажу вам якийсь рядок з 1 і 0 і попрошу вас знайти вхідні дані, 

211
00:13:27,092 --> 00:13:31,726
щоб хеш SHA256 цього введення давав саме цей рядок бітів, 

212
00:13:31,726 --> 00:13:36,840
у вас не буде кращого способу, ніж просто вгадати та перевірити.

213
00:13:36,840 --> 00:13:41,120
І знову ж таки, якщо ви хочете відчути, скільки обчислень знадобиться, 

214
00:13:41,120 --> 00:13:45,220
щоб виконати два з 256 припущень, просто подивіться додаткове відео.

215
00:13:45,220 --> 00:13:46,660
Насправді мені було надто весело писати це.

216
00:13:48,560 --> 00:13:51,531
Ви можете подумати, що якщо ви просто заглибитеся в деталі того, 

217
00:13:51,531 --> 00:13:54,640
як саме працює ця функція, ви зможете провести реверсивну інженерію 

218
00:13:54,640 --> 00:13:57,520
відповідного введення без необхідності вгадувати та перевіряти.

219
00:13:58,240 --> 00:14:00,840
Але ніхто ніколи не придумав, як це зробити.

220
00:14:01,600 --> 00:14:04,545
Цікаво, що немає жорстких і суворих доказів того, 

221
00:14:04,545 --> 00:14:06,960
що важко обчислити у зворотному напрямку.

222
00:14:07,620 --> 00:14:10,640
І все ж величезна частина сучасної безпеки залежить від 

223
00:14:10,640 --> 00:14:14,200
криптографічних хеш-функцій та ідеї, що вони мають цю властивість.

224
00:14:14,940 --> 00:14:19,227
Якщо ви подивитеся, які алгоритми лежать в основі безпечного з’єднання, 

225
00:14:19,227 --> 00:14:24,051
яке ваш веб-переглядач зараз створює з YouTube або з вашим банком, ви, ймовірно, 

226
00:14:24,051 --> 00:14:25,540
побачите там ім’я SHA256.

227
00:14:25,540 --> 00:14:30,985
Наразі ми зосередимося лише на тому, як така функція може довести, 

228
00:14:30,985 --> 00:14:37,000
що певний список транзакцій пов’язаний із великим обчислювальним зусиллям.

229
00:14:38,040 --> 00:14:43,840
Уявіть, що хтось показує вам список транзакцій і каже: «Я знайшов спеціальний номер, 

230
00:14:43,840 --> 00:14:48,616
так що коли ви розміщуєте цей номер у кінці цього списку транзакцій і 

231
00:14:48,616 --> 00:14:53,120
застосовуєте SHA256 до всього, перші 30 біт цього виводу всі нулі.

232
00:14:54,100 --> 00:14:58,260
Як ви думаєте, наскільки важко їм було знайти це число?

233
00:14:58,320 --> 00:15:04,015
Для випадкового повідомлення ймовірність того, що хеш починається з 30 послідовних нулів, 

234
00:15:04,015 --> 00:15:07,180
становить 1 до 230, тобто приблизно 1 до мільярда.

235
00:15:08,200 --> 00:15:11,317
А оскільки SHA256 — це криптографічна хеш-функція, 

236
00:15:11,317 --> 00:15:15,840
єдиний спосіб знайти таке спеціальне число — просто вгадати та перевірити.

237
00:15:16,660 --> 00:15:20,834
Тож цій людині майже напевно довелося перебрати близько мільярда різних номерів, 

238
00:15:20,834 --> 00:15:22,380
перш ніж знайти цей особливий.

239
00:15:23,380 --> 00:15:26,451
І як тільки ви дізнаєтеся це число, це дуже швидко перевірити, 

240
00:15:26,451 --> 00:15:28,840
ви просто запускаєте хеш і бачите, що є 30 нулів.

241
00:15:29,800 --> 00:15:33,786
Таким чином, іншими словами, ви можете перевірити, що вони виконали великий обсяг роботи, 

242
00:15:33,786 --> 00:15:36,400
але без необхідності самостійно виконувати ті самі зусилля.

243
00:15:37,200 --> 00:15:38,800
Це називається підтвердженням роботи.

244
00:15:39,460 --> 00:15:44,220
І що важливо, уся ця робота нерозривно пов’язана зі списком транзакцій.

245
00:15:44,900 --> 00:15:49,640
Якщо ви зміните одну з цих транзакцій, навіть трохи, це повністю змінить хеш.

246
00:15:50,080 --> 00:15:52,900
Тож вам доведеться пройти через ще один мільярд здогадок, 

247
00:15:52,900 --> 00:15:56,109
щоб знайти нове підтвердження роботи, нове число, яке робить так, 

248
00:15:56,109 --> 00:15:57,860
щоб хеш списку починався з 30 нулів.

249
00:15:57,860 --> 00:16:02,580
Тож тепер подумайте про нашу ситуацію з розподіленою книгою.

250
00:16:02,580 --> 00:16:10,000
Усі транслюють транзакції, і ми хочемо, щоб вони домовилися про правильну книгу.

251
00:16:10,000 --> 00:16:14,974
Як я вже говорив, основна ідея оригінального паперу про біткойни полягає в тому, 

252
00:16:14,974 --> 00:16:18,660
щоб усі довіряли тому, в яку книгу вкладено найбільше праці.

253
00:16:19,280 --> 00:16:23,069
Це працює так, щоб спочатку організувати дану книгу на блоки, 

254
00:16:23,069 --> 00:16:27,898
де кожен блок складається зі списку транзакцій разом із підтвердженням роботи, 

255
00:16:27,898 --> 00:16:32,300
тобто спеціальним номером, щоб хеш усього блоку починався з купи нулів .

256
00:16:33,140 --> 00:16:39,096
Наразі припустімо, що воно має починатися з 60 нулів, 

257
00:16:39,096 --> 00:16:47,700
але пізніше ми повернемося до більш систематичного способу вибору цього числа.

258
00:16:47,700 --> 00:16:51,643
Подібно до того, як транзакція вважається дійсною лише тоді, 

259
00:16:51,643 --> 00:16:55,458
коли вона підписана відправником, блок вважається дійсним, 

260
00:16:55,458 --> 00:16:57,980
лише якщо він має підтвердження роботи.

261
00:16:57,980 --> 00:17:01,884
Крім того, щоб забезпечити стандартний порядок цих блоків, ми зробимо так, 

262
00:17:01,884 --> 00:17:05,319
що блок повинен містити хеш попереднього блоку в своєму заголовку.

263
00:17:05,839 --> 00:17:09,835
Таким чином, якби ви повернулися назад і змінили будь-який із блоків або 

264
00:17:09,835 --> 00:17:13,721
поміняли порядок двох блоків, це змінило б блок, який йде після нього, 

265
00:17:13,721 --> 00:17:18,099
який змінює хеш цього блоку, який змінює той, який йде після нього , і так далі.

266
00:17:18,099 --> 00:17:22,740
Це вимагало б переробити всю роботу, знайти нове спеціальне число 

267
00:17:22,740 --> 00:17:27,099
для кожного з цих блоків, щоб їхні хеші починалися з 60 нулів.

268
00:17:27,099 --> 00:17:29,941
Оскільки блоки з’єднані разом таким чином, замість того, 

269
00:17:29,941 --> 00:17:33,480
щоб називати це обліковою книгою, прийнято називати це ланцюгом блоків.

270
00:17:33,480 --> 00:17:35,260
У рамках нашого оновленого протоколу тепер ми 

271
00:17:35,260 --> 00:17:37,080
дозволимо будь-кому у світі бути творцем блоку.

272
00:17:37,080 --> 00:17:40,789
Це означає, що вони прослуховуватимуть транзакції, що транслюються, 

273
00:17:40,789 --> 00:17:44,170
зберуть їх у якийсь блок, а потім виконають цілу купу роботи, 

274
00:17:44,170 --> 00:17:48,480
щоб знайти спеціальне число, яке змусить хеш цього блоку починатися з 60 нулів.

275
00:17:48,480 --> 00:17:51,760
Коли вони знаходять його, вони транслюють знайдений блок.

276
00:17:51,760 --> 00:17:55,302
Щоб винагородити творця блоку за всю цю роботу, коли він збирає блок, 

277
00:17:55,302 --> 00:17:58,794
ми дозволимо йому включити дуже особливу транзакцію на його початку, 

278
00:17:58,794 --> 00:18:02,540
у якій вона отримує, скажімо, 10 доларів у бухгалтерській книзі з повітря.

279
00:18:03,080 --> 00:18:06,264
Це називається винагородою за блокування, і це виняток із наших 

280
00:18:06,264 --> 00:18:09,400
звичайних правил щодо того, приймати чи не приймати транзакції.

281
00:18:10,040 --> 00:18:12,920
Він не походить ні від кого, тому його не потрібно підписувати.

282
00:18:13,660 --> 00:18:16,639
Це також означає, що загальна кількість доларів 

283
00:18:16,639 --> 00:18:19,620
у нашій економіці зростає з кожним новим блоком.

284
00:18:20,900 --> 00:18:24,663
Створення блоків часто називають майнінгом, оскільки воно вимагає виконання 

285
00:18:24,663 --> 00:18:28,180
великої кількості роботи та введення нових частинок валюти в економіку.

286
00:18:29,020 --> 00:18:32,652
Але коли ви чуєте або читаєте про майнерів, майте на увазі, 

287
00:18:32,652 --> 00:18:36,345
що насправді вони прослуховують транзакції, створюють блоки, 

288
00:18:36,345 --> 00:18:40,280
транслюють ці блоки та отримують за це винагороду новими грошима.

289
00:18:40,280 --> 00:18:44,831
З точки зору майнерів, кожен блок схожий на мініатюрну лотерею, 

290
00:18:44,831 --> 00:18:50,734
де кожен вгадує числа якнайшвидше, поки один щасливчик не знайде спеціальне число, 

291
00:18:50,734 --> 00:18:56,140
яке змушує хеш блоку починатися з багатьох нулів, і вони отримують нагорода.

292
00:18:57,620 --> 00:19:01,497
Для всіх, хто просто хоче використовувати цю систему для здійснення платежів, 

293
00:19:01,497 --> 00:19:05,424
замість того, щоб прослуховувати транзакції, вони всі починають прослуховувати 

294
00:19:05,424 --> 00:19:09,600
лише блоки, які транслюються майнерами, і оновлюють власні особисті копії блокчейна.

295
00:19:10,560 --> 00:19:13,718
Тепер ключовим доповненням до нашого протоколу є те, 

296
00:19:13,718 --> 00:19:18,009
що якщо ви чуєте два різні блокчейни з конфліктною історією транзакцій, 

297
00:19:18,009 --> 00:19:22,300
ви відкладаєтеся до найдовшого, того, з яким докладено найбільше роботи.

298
00:19:22,860 --> 00:19:26,117
Якщо нічия, просто зачекайте, поки не почуєте додатковий блок, 

299
00:19:26,117 --> 00:19:27,720
який робить один із них довшим.

300
00:19:28,720 --> 00:19:32,031
Тож, незважаючи на те, що немає центрального органу влади, 

301
00:19:32,031 --> 00:19:34,669
і кожен підтримує свою власну копію блокчейну, 

302
00:19:34,669 --> 00:19:39,665
якщо всі погодяться віддати перевагу тому блокчейну, на який докладено найбільше роботи, 

303
00:19:39,665 --> 00:19:42,640
у нас є спосіб досягти децентралізованого консенсусу.

304
00:19:43,560 --> 00:19:46,483
Щоб зрозуміти, чому ця система є надійною, і зрозуміти, 

305
00:19:46,483 --> 00:19:49,407
на якому етапі ви повинні вірити, що платіж є законним, 

306
00:19:49,407 --> 00:19:53,218
було б дуже корисно пройтися через те, що потрібно, щоб обдурити когось, 

307
00:19:53,218 --> 00:19:54,680
хто використовує цю систему.

308
00:19:55,600 --> 00:19:59,439
Можливо, Аліса намагається обдурити Боба шахрайським блокуванням, 

309
00:19:59,439 --> 00:20:02,173
а саме: вона намагається надіслати йому такий, 

310
00:20:02,173 --> 00:20:07,060
у якому вона платить йому 100 доларів Ledger, але не транслює цей блок решті мережі.

311
00:20:07,640 --> 00:20:11,240
Таким чином усі інші досі думають, що у неї є ці 100 доларів Леджера.

312
00:20:11,960 --> 00:20:16,674
Для цього їй доведеться знайти дійсне підтвердження роботи раніше всіх інших майнерів, 

313
00:20:16,674 --> 00:20:18,680
кожен з яких працює над своїм блоком.

314
00:20:19,500 --> 00:20:22,329
І це точно може статися, можливо, Аліса випадково 

315
00:20:22,329 --> 00:20:24,820
виграє цю мініатюрну лотерею раніше за всіх.

316
00:20:25,680 --> 00:20:28,767
Але Боб усе ще чутиме трансляції інших майнерів, тому, 

317
00:20:28,767 --> 00:20:31,574
щоб змусити його повірити в цей шахрайський блок, 

318
00:20:31,574 --> 00:20:34,325
Алісі доведеться виконати всю роботу самостійно, 

319
00:20:34,325 --> 00:20:38,647
щоб продовжувати додавати блоки в цьому спеціальному форку в блокчейні Боба, 

320
00:20:38,647 --> 00:20:41,960
який відрізняється від того, що він чує від решти шахтарів.

321
00:20:42,740 --> 00:20:48,260
Пам’ятайте, згідно з протоколом Боб завжди довіряє найдовшому ланцюжку, про який він знає.

322
00:20:49,260 --> 00:20:52,500
Аліса може зберегти це протягом кількох блоків, 

323
00:20:52,500 --> 00:20:57,700
якщо випадково знайде блоки швидше, ніж решта майнерів у мережі разом узятих.

324
00:20:58,480 --> 00:21:03,918
Але якщо вона не матиме близько 50% обчислювальних ресурсів серед усіх майнерів, 

325
00:21:03,918 --> 00:21:08,417
ймовірність того, що блокчейн, над яким працюють усі інші майнери, 

326
00:21:08,417 --> 00:21:13,520
зростатиме швидше, ніж єдиний шахрайський блокчейн, який Аліса передає Бобу.

327
00:21:13,520 --> 00:21:18,864
Тож через достатньо часу Боб просто відкине те, що він чує від Аліси, 

328
00:21:18,864 --> 00:21:23,140
на користь довшого ланцюжка, над яким працюють усі інші.

329
00:21:23,960 --> 00:21:28,987
Зауважте, це означає, що ви не обов’язково довіряєте новому блоку, який ви чуєте відразу, 

330
00:21:28,987 --> 00:21:33,400
натомість вам слід зачекати, доки кілька нових блоків буде додано поверх нього.

331
00:21:33,820 --> 00:21:36,985
Якщо ви ще не чули про довші блокчейни, ви можете бути впевнені, 

332
00:21:36,985 --> 00:21:40,540
що цей блок є частиною того самого ланцюга, який використовують усі інші.

333
00:21:42,120 --> 00:21:45,220
Таким чином, ми досягли всіх основних ідей.

334
00:21:45,780 --> 00:21:49,181
Ця система розподіленого реєстру, заснована на доказі роботи, 

335
00:21:49,181 --> 00:21:53,680
більш-менш відповідає тому, як працює протокол біткойн і багато інших криптовалют.

336
00:21:54,300 --> 00:21:56,160
Потрібно прояснити лише кілька деталей.

337
00:21:56,300 --> 00:22:00,000
Раніше я говорив, що доказом роботи може бути пошук спеціального числа, 

338
00:22:00,000 --> 00:22:01,800
щоб хеш блоку починався з 60 нулів.

339
00:22:01,800 --> 00:22:07,992
Фактичний протокол біткойн працює так, щоб періодично змінювати цю кількість нулів, 

340
00:22:07,992 --> 00:22:11,900
щоб пошук нового блоку займав у середньому 10 хвилин.

341
00:22:12,780 --> 00:22:15,878
Оскільки в мережу додається все більше майнерів, 

342
00:22:15,878 --> 00:22:20,873
завдання стає все складнішим і складнішим, тому ця мініатюрна лотерея має лише 

343
00:22:20,873 --> 00:22:22,960
одного переможця кожні 10 хвилин.

344
00:22:23,920 --> 00:22:27,880
Багато новіших криптовалют мають набагато коротший час блокування.

345
00:22:28,580 --> 00:22:32,460
І всі гроші в біткойнах зрештою надходять від певної винагороди за блок.

346
00:22:32,920 --> 00:22:34,800
На початку ці винагороди становили 50 біткойнів за блок.

347
00:22:34,800 --> 00:22:38,458
Насправді є чудовий веб-сайт, який називається Block Explorer, 

348
00:22:38,458 --> 00:22:41,420
який дозволяє легко переглядати блокчейн біткойнів.

349
00:22:41,960 --> 00:22:45,498
І якщо ви подивитеся на кілька перших блоків у ланцюжку, ви побачите, 

350
00:22:45,498 --> 00:22:49,240
що вони не містять жодних транзакцій, окрім 50 біткойнів, наданих майнеру.

351
00:22:49,860 --> 00:22:56,340
Але кожні 210 000 блоків, тобто приблизно кожні 4 роки, ця винагорода скорочується вдвічі.

352
00:22:56,860 --> 00:23:00,140
Тож зараз винагорода становить 12.5 Bitcoin за блок.

353
00:23:00,720 --> 00:23:04,678
І оскільки ця винагорода геометрично зменшується з часом, 

354
00:23:04,678 --> 00:23:09,320
це означає, що ніколи не буде існувати більше 21 мільйона біткойнів.

355
00:23:10,280 --> 00:23:13,280
Однак це не означає, що майнери перестануть заробляти гроші.

356
00:23:13,820 --> 00:23:17,940
Окрім винагороди за блок, майнери також можуть отримувати комісію за транзакції.

357
00:23:18,520 --> 00:23:23,216
Це працює так: щоразу, коли ви робите платіж, ви можете за бажанням включити до нього 

358
00:23:23,216 --> 00:23:26,929
комісію за транзакцію, яка буде надходити майнеру будь-якого блоку, 

359
00:23:26,929 --> 00:23:28,240
який включає цей платіж.

360
00:23:29,020 --> 00:23:31,619
Причина, по якій ви можете це зробити, полягає в тому, 

361
00:23:31,619 --> 00:23:35,116
щоб стимулювати майнерів фактично включити трансакцію, яку ви транслюєте, 

362
00:23:35,116 --> 00:23:35,920
у наступний блок.

363
00:23:36,440 --> 00:23:41,242
Розумієте, у біткойнах кожен блок обмежується приблизно 2400 транзакціями, 

364
00:23:41,242 --> 00:23:45,020
що, на думку багатьох критиків, є невиправданим обмеженням.

365
00:23:45,860 --> 00:23:51,744
Для порівняння, Visa обробляє в середньому близько 1700 транзакцій на секунду, 

366
00:23:51,744 --> 00:23:55,320
і вони здатні обробляти понад 24 000 на секунду.

367
00:23:56,020 --> 00:24:01,303
Ця відносно повільна обробка біткойнів призводить до вищих комісій за транзакції, 

368
00:24:01,303 --> 00:24:06,200
оскільки це визначає, які транзакції майнери вирішать включити в новий блок.

369
00:24:07,820 --> 00:24:11,500
Все це далеко не всебічне охоплення криптовалют.

370
00:24:12,160 --> 00:24:16,180
Є ще багато нюансів і варіантів дизайну, яких я навіть не торкався.

371
00:24:16,640 --> 00:24:20,545
Але я сподіваюся, що це може забезпечити стабільний стовбур дерева розуміння у стилі 

372
00:24:20,545 --> 00:24:24,360
«Почекай, але чому» для тих, хто хоче додати ще кілька гілок із подальшим читанням.

373
00:24:25,180 --> 00:24:28,040
Як я вже сказав на початку, одним із мотивів цього є те, 

374
00:24:28,040 --> 00:24:30,500
що багато грошей почали надходити до криптовалют.

375
00:24:31,340 --> 00:24:35,780
І хоча я не хочу робити жодних претензій щодо того, хороша це інвестиція чи погана, 

376
00:24:35,780 --> 00:24:40,380
я справді вважаю, що людям, які починають гру, добре знати принаймні основи технології.

377
00:24:41,340 --> 00:24:45,420
Як завжди, я щиро дякую тим із вас, хто зробив цей канал можливим на Patreon.

378
00:24:46,080 --> 00:24:50,333
Я розумію, що не кожен може зробити внесок, але якщо ви все ще зацікавлені в допомозі, 

379
00:24:50,333 --> 00:24:53,755
один із найкращих способів зробити це – просто поділитися відео, які, 

380
00:24:53,755 --> 00:24:56,640
на вашу думку, можуть бути цікавими чи корисними для інших.

381
00:24:57,280 --> 00:24:59,320
Я знаю, що ти це знаєш, але це дійсно допомагає.

