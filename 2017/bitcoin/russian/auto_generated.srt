1
00:00:03,900 --> 00:00:06,480
Что значит иметь биткоин?

2
00:00:07,420 --> 00:00:11,239
Многие слышали о биткоине, о том, что это полностью цифровая валюта, 

3
00:00:11,239 --> 00:00:14,892
которую не выпускает правительство, что банкам не нужно управлять 

4
00:00:14,892 --> 00:00:19,100
счетами и проверять транзакции, и что никто толком не знает, кто ее изобрел.

5
00:00:19,380 --> 00:00:23,280
И все же многие люди не знают ответа на этот вопрос, по крайней мере, в полной мере.

6
00:00:24,100 --> 00:00:27,351
Чтобы добраться до него и убедиться, что технические детали, 

7
00:00:27,351 --> 00:00:30,069
лежащие в основе ответа, действительно мотивируют, 

8
00:00:30,069 --> 00:00:33,747
мы собираемся шаг за шагом рассказать о том, как ты мог бы изобрести 

9
00:00:33,747 --> 00:00:35,240
собственную версию биткоина.

10
00:00:36,140 --> 00:00:39,809
Начнем с того, что ты будешь отслеживать платежи своих друзей с помощью общей 

11
00:00:39,809 --> 00:00:44,043
бухгалтерской книги, а потом, когда ты начнешь все меньше и меньше доверять своим друзьям 

12
00:00:44,043 --> 00:00:48,136
и окружающему миру, и если у тебя хватит ума привнести несколько идей из криптографии, 

13
00:00:48,136 --> 00:00:51,335
чтобы помочь обойти необходимость доверия, то в итоге получится то, 

14
00:00:51,335 --> 00:00:52,700
что называется криптовалютой.

15
00:00:53,840 --> 00:00:57,559
Биткойн - это лишь первый реализованный пример криптовалюты, 

16
00:00:57,559 --> 00:01:02,560
а сейчас их уже тысячи, и они продаются на биржах вместе с традиционными валютами.

17
00:01:03,300 --> 00:01:06,458
Прохождение пути изобретения собственного может помочь заложить 

18
00:01:06,458 --> 00:01:10,357
основы для понимания некоторых более поздних участников игры и осознания того, 

19
00:01:10,357 --> 00:01:13,220
когда и почему есть место для различных вариантов дизайна.

20
00:01:14,100 --> 00:01:17,321
На самом деле, одна из причин, по которой я выбрал эту тему, 

21
00:01:17,321 --> 00:01:20,490
заключается в том, что за последний год к этим валютам было 

22
00:01:20,490 --> 00:01:23,660
приковано огромное количество внимания, инвестиций и шумихи.

23
00:01:24,280 --> 00:01:28,060
Я не собираюсь комментировать или спекулировать на текущих или будущих курсах валют, 

24
00:01:28,060 --> 00:01:31,173
но, думаю, мы все согласимся, что тот, кто хочет купить криптовалюту, 

25
00:01:31,173 --> 00:01:33,620
должен действительно знать, что она собой представляет.

26
00:01:33,920 --> 00:01:38,452
И я имею в виду не просто аналогии с туманными связями с добычей золота, 

27
00:01:38,452 --> 00:01:41,929
а реальное прямое описание того, что делают компьютеры, 

28
00:01:41,929 --> 00:01:45,220
когда мы отправляем, получаем и создаем криптовалюты.

29
00:01:46,300 --> 00:01:50,216
Стоит подчеркнуть одну вещь: несмотря на то, что мы с тобой собираемся копаться в 

30
00:01:50,216 --> 00:01:54,228
деталях, а это требует значительного времени, на самом деле тебе не нужно знать эти 

31
00:01:54,228 --> 00:01:57,619
детали, если ты просто хочешь использовать криптовалюту, точно так же, 

32
00:01:57,619 --> 00:02:00,962
как тебе не нужно знать подробности того, что происходит под капотом, 

33
00:02:00,962 --> 00:02:03,160
когда ты проводишь пальцем по кредитной карте.

34
00:02:03,720 --> 00:02:07,242
Как и для любых других цифровых платежей, существует множество удобных приложений, 

35
00:02:07,242 --> 00:02:10,723
которые позволяют тебе просто отправлять и получать валюты, не задумываясь о том, 

36
00:02:10,723 --> 00:02:11,360
что происходит.

37
00:02:11,660 --> 00:02:16,327
Разница в том, что в основе этого лежит не банк, который проверяет транзакции, 

38
00:02:16,327 --> 00:02:19,990
а умная система децентрализованной бездоверительной проверки, 

39
00:02:19,990 --> 00:02:24,480
основанная на некоторых математических выкладках, родившихся в криптографии.

40
00:02:25,900 --> 00:02:28,050
Но для начала я хочу, чтобы ты действительно отбросил 

41
00:02:28,050 --> 00:02:30,480
мысли о криптовалютах и всем прочем всего на несколько минут.

42
00:02:31,080 --> 00:02:35,380
Мы начнем рассказ с чего-то более приземленного - бухгалтерских книг и цифровых подписей.

43
00:02:36,340 --> 00:02:39,204
Если ты и твои друзья довольно часто обмениваются деньгами, 

44
00:02:39,204 --> 00:02:41,686
оплачивая свою часть счета за ужин и тому подобное, 

45
00:02:41,686 --> 00:02:44,360
то постоянно обмениваться наличными может быть неудобно.

46
00:02:44,720 --> 00:02:47,744
Так, ты можешь вести коммунальную книгу, в которой будут записаны все платежи, 

47
00:02:47,744 --> 00:02:50,080
которые ты собираешься совершить в какой-то момент в будущем.

48
00:02:50,620 --> 00:02:55,100
Алиса платит Бобу 20 долларов, Боб платит Чарли 40 долларов, и тому подобные вещи.

49
00:02:55,500 --> 00:02:58,812
Эта бухгалтерская книга будет чем-то публичным и доступным для всех, 

50
00:02:58,812 --> 00:03:01,740
вроде сайта, куда каждый может зайти и добавить новые строки.

51
00:03:02,480 --> 00:03:05,694
И, допустим, в конце каждого месяца вы все собираетесь вместе, 

52
00:03:05,694 --> 00:03:07,940
смотрите на список сделок и рассчитываетесь.

53
00:03:08,280 --> 00:03:11,658
Если ты потратил больше, чем получил, то положи эти деньги в горшок, 

54
00:03:11,658 --> 00:03:14,400
а если получил больше, чем потратил, то вынь эти деньги.

55
00:03:15,460 --> 00:03:19,360
Итак, протокол для участия в этой очень простой системе может выглядеть следующим образом.

56
00:03:20,020 --> 00:03:22,403
Каждый может добавлять строчки в бухгалтерскую книгу, 

57
00:03:22,403 --> 00:03:25,360
а в конце каждого месяца вы все собираетесь вместе и сводите счеты.

58
00:03:26,300 --> 00:03:29,468
Теперь одна из проблем с такой публичной бухгалтерской книгой заключается в том, 

59
00:03:29,468 --> 00:03:30,760
что любой может добавить строчку.

60
00:03:31,020 --> 00:03:34,154
Так что же мешает Бобу пойти и написать, что Алиса 

61
00:03:34,154 --> 00:03:36,920
платит Бобу 100 долларов без одобрения Алисы?

62
00:03:37,780 --> 00:03:41,568
Как мы можем доверять тому, что все эти транзакции являются тем, 

63
00:03:41,568 --> 00:03:43,200
что имел в виду отправитель?

64
00:03:44,580 --> 00:03:48,540
Вот тут-то и приходит на помощь первый бит криптографии - цифровые подписи.

65
00:03:49,480 --> 00:03:52,989
Как и в случае с рукописными подписями, идея заключается в том, 

66
00:03:52,989 --> 00:03:57,815
что Алиса должна иметь возможность добавить что-то рядом с транзакцией, что доказывает, 

67
00:03:57,815 --> 00:04:02,257
что она видела ее и одобрила, а подделать эту подпись для кого-то другого должно 

68
00:04:02,257 --> 00:04:03,080
быть нереально.

69
00:04:04,300 --> 00:04:08,580
Поначалу может показаться, что цифровая подпись вообще не должна быть возможной.

70
00:04:09,220 --> 00:04:11,602
Я имею в виду, что все данные, составляющие эту подпись, 

71
00:04:11,602 --> 00:04:13,860
могут быть просто прочитаны и скопированы компьютером.

72
00:04:14,400 --> 00:04:16,140
Так как же предотвратить подделки?

73
00:04:17,320 --> 00:04:21,577
Работает это так: каждый генерирует так называемую пару "открытый ключ - закрытый ключ", 

74
00:04:21,577 --> 00:04:24,160
каждый из которых выглядит как некоторая строка битов.

75
00:04:24,800 --> 00:04:27,552
Закрытый ключ иногда также называют секретным, 

76
00:04:27,552 --> 00:04:31,300
поэтому мы можем сокращать его как SK, а открытый ключ - как PK.

77
00:04:32,340 --> 00:04:36,220
Как следует из названия, этот секретный ключ - то, что ты хочешь держать при себе.

78
00:04:37,060 --> 00:04:39,578
В реальном мире твоя рукописная подпись выглядит одинаково, 

79
00:04:39,578 --> 00:04:41,720
независимо от того, какой документ ты подписываешь.

80
00:04:42,280 --> 00:04:44,755
Но цифровая подпись на самом деле гораздо сильнее, 

81
00:04:44,755 --> 00:04:46,940
потому что она меняется для разных сообщений.

82
00:04:47,840 --> 00:04:52,614
Она выглядит как некая строка из 1 и 0, обычно что-то около 256 бит, 

83
00:04:52,614 --> 00:04:56,627
и даже небольшое изменение сообщения полностью меняет то, 

84
00:04:56,627 --> 00:04:59,880
как должна выглядеть подпись на этом сообщении.

85
00:05:00,840 --> 00:05:04,959
Если говорить немного более формально, то создание подписи включает в себя функцию, 

86
00:05:04,959 --> 00:05:08,540
которая зависит как от самого сообщения, так и от твоего закрытого ключа.

87
00:05:09,200 --> 00:05:12,504
Закрытый ключ гарантирует, что только ты можешь создать эту подпись, 

88
00:05:12,504 --> 00:05:14,994
а тот факт, что она зависит от сообщения, означает, 

89
00:05:14,994 --> 00:05:18,538
что никто не сможет просто скопировать одну из твоих подписей и подделать 

90
00:05:18,538 --> 00:05:19,640
ее на другом сообщении.

91
00:05:21,000 --> 00:05:25,795
Рука об руку с ней идет вторая функция, используемая для проверки достоверности подписи, 

92
00:05:25,795 --> 00:05:28,220
и именно здесь в игру вступает открытый ключ.

93
00:05:29,200 --> 00:05:32,317
Все, что он делает, это выводит true или false, чтобы указать, 

94
00:05:32,317 --> 00:05:35,978
была ли эта подпись создана закрытым ключом, связанным с открытым ключом, 

95
00:05:35,978 --> 00:05:37,760
который ты используешь для проверки.

96
00:05:38,640 --> 00:05:42,660
Я не буду вдаваться в подробности того, как именно работают обе эти функции, 

97
00:05:42,660 --> 00:05:45,689
но идея заключается в том, что найти достоверную подпись, 

98
00:05:45,689 --> 00:05:49,240
если ты не знаешь секретный ключ, должно быть совершенно невозможно.

99
00:05:50,060 --> 00:05:54,279
В частности, нет стратегии лучше, чем просто угадывание и проверка случайных подписей, 

100
00:05:54,279 --> 00:05:57,820
которые ты можешь проверить с помощью открытого ключа, который знают все.

101
00:05:58,980 --> 00:06:03,200
А теперь подумай, сколько существует подписей длиной 256 бит.

102
00:06:03,840 --> 00:06:06,180
Это 2 в степени 256!

103
00:06:07,140 --> 00:06:09,560
Это глупо большое число.

104
00:06:09,860 --> 00:06:13,640
Назвать его астрономически большим было бы слишком большой заслугой астрономии.

105
00:06:14,260 --> 00:06:18,436
На самом деле, я сделал дополнительное видео, посвященное как раз иллюстрации того, 

106
00:06:18,436 --> 00:06:19,680
какое это огромное число.

107
00:06:20,380 --> 00:06:24,098
Здесь же просто скажем, что когда ты проверяешь достоверность подписи 

108
00:06:24,098 --> 00:06:28,400
под данным сообщением, ты можешь быть абсолютно уверен, что единственный способ, 

109
00:06:28,400 --> 00:06:31,587
которым кто-то мог ее создать, - это узнать секретный ключ, 

110
00:06:31,587 --> 00:06:35,040
связанный с открытым ключом, который ты использовал для проверки.

111
00:06:37,120 --> 00:06:40,168
Убедиться в том, что люди подписывают транзакции в бухгалтерской книге, 

112
00:06:40,168 --> 00:06:42,200
довольно хорошо, но есть одна небольшая лазейка.

113
00:06:42,720 --> 00:06:46,609
Если Алиса подписывает транзакцию, например, Алиса платит Бобу 100 долларов, 

114
00:06:46,609 --> 00:06:50,094
то даже если Боб не может подделать подпись Алисы в новом сообщении, 

115
00:06:50,094 --> 00:06:53,680
он может просто скопировать эту же строку столько раз, сколько захочет.

116
00:06:54,300 --> 00:06:57,220
Эта комбинация "сообщение-подпись" остается в силе.

117
00:06:57,920 --> 00:07:01,974
Чтобы обойти это, мы сделали так, что когда ты подписываешь транзакцию, 

118
00:07:01,974 --> 00:07:05,466
сообщение должно содержать какой-то уникальный идентификатор, 

119
00:07:05,466 --> 00:07:07,100
связанный с этой транзакцией.

120
00:07:07,840 --> 00:07:11,351
Таким образом, если Алиса заплатит Бобу 100 долларов несколько раз, 

121
00:07:11,351 --> 00:07:15,380
каждая из этих строк в бухгалтерской книге потребует совершенно новой подписи.

122
00:07:16,760 --> 00:07:21,940
Отлично, цифровые подписи устраняют огромный аспект доверия в этом начальном протоколе.

123
00:07:22,380 --> 00:07:27,280
Но даже если бы ты и вправду так поступил, ты бы полагался на своеобразную систему чести.

124
00:07:27,720 --> 00:07:30,210
А именно, ты веришь в то, что все на самом деле будут выполнять 

125
00:07:30,210 --> 00:07:32,740
все требования и рассчитываться наличными в конце каждого месяца.

126
00:07:33,560 --> 00:07:36,609
Что, если, например, Чарли наберёт тысячи долларов 

127
00:07:36,609 --> 00:07:39,480
долгов и просто откажется появляться на публике?

128
00:07:40,120 --> 00:07:43,665
Единственная реальная причина вернуться к наличным 

129
00:07:43,665 --> 00:07:47,280
для расчетов - это если кто-то задолжал много денег.

130
00:07:47,860 --> 00:07:50,114
Так что, возможно, тебе пришла в голову умная идея, 

131
00:07:50,114 --> 00:07:52,888
что на самом деле никогда не придется рассчитываться наличными, 

132
00:07:52,888 --> 00:07:56,660
пока у тебя есть способ не дать людям потратить слишком много больше, чем они получают.

133
00:07:57,340 --> 00:08:00,795
Может быть, ты начнешь с того, что каждый внесет в банк по 100 долларов, 

134
00:08:00,795 --> 00:08:03,919
а затем первые несколько строк бухгалтерской книги будут гласить: 

135
00:08:03,919 --> 00:08:08,180
Алиса получает 100 долларов, Боб получает 100 долларов, Чарли получает 100 долларов и т.д.

136
00:08:09,020 --> 00:08:13,160
Теперь просто не принимай транзакции, в которых кто-то тратит больше, 

137
00:08:13,160 --> 00:08:16,000
чем у него уже есть на этой бухгалтерской книге.

138
00:08:16,840 --> 00:08:21,969
Например, если первые две транзакции - "Чарли платит Алисе $50" и "Чарли платит 

139
00:08:21,969 --> 00:08:26,265
Бобу $50", то если он попытается добавить "Чарли платит тебе $20", 

140
00:08:26,265 --> 00:08:29,535
это будет недействительно, так же недействительно, 

141
00:08:29,535 --> 00:08:32,100
как если бы он никогда не подписывал ее.

142
00:08:32,940 --> 00:08:36,155
Заметь, это означает, что для проверки транзакции 

143
00:08:36,155 --> 00:08:39,500
нужно знать всю историю транзакций до этого момента.

144
00:08:40,159 --> 00:08:43,091
Это будет справедливо и для криптовалют, хотя 

145
00:08:43,091 --> 00:08:45,960
здесь есть небольшой простор для оптимизации.

146
00:08:48,380 --> 00:08:51,904
Что здесь интересно, так это то, что этот шаг устраняет связь 

147
00:08:51,904 --> 00:08:55,600
между бухгалтерской книгой и реальными физическими долларами США.

148
00:08:56,200 --> 00:08:59,647
Теоретически, если бы все в мире пользовались этой книгой, 

149
00:08:59,647 --> 00:09:03,796
ты мог бы всю жизнь просто отправлять и получать деньги по этой книге, 

150
00:09:03,796 --> 00:09:06,660
никогда не конвертируя их в реальные доллары США.

151
00:09:07,580 --> 00:09:10,712
На самом деле, чтобы подчеркнуть этот момент, давай начнем называть 

152
00:09:10,712 --> 00:09:14,260
количества в бухгалтерской книге бухгалтерскими долларами, или сокращенно LD.

153
00:09:14,820 --> 00:09:18,660
Разумеется, ты можешь свободно обменять леджерские доллары на настоящие доллары США.

154
00:09:19,060 --> 00:09:23,607
Например, может быть, Алиса дает Бобу купюру в 10 долларов в реальном мире в обмен на то, 

155
00:09:23,607 --> 00:09:27,094
что он добавит и подпишет транзакцию 10 долларов Боб платит Алисе 10 

156
00:09:27,094 --> 00:09:29,520
долларов в эту коммунальную бухгалтерскую книгу.

157
00:09:30,720 --> 00:09:34,220
Но подобные обмены не гарантируются протоколом.

158
00:09:34,720 --> 00:09:37,562
Теперь это больше похоже на то, как ты можешь обменять 

159
00:09:37,562 --> 00:09:40,560
доллары на евро или любую другую валюту на открытом рынке.

160
00:09:41,180 --> 00:09:43,800
Это просто своя независимая вещь.

161
00:09:44,580 --> 00:09:49,780
Это первая важная вещь, которую нужно понять о биткоине или любой другой криптовалюте.

162
00:09:49,780 --> 00:09:52,420
Что это такое, так это бухгалтерская книга.

163
00:09:53,180 --> 00:09:55,980
История транзакций - это и есть валюта.

164
00:09:57,160 --> 00:09:59,914
Конечно, в случае с биткойном деньги не попадают в бухгалтерскую книгу, 

165
00:09:59,914 --> 00:10:01,560
когда люди покупают их, используя наличные.

166
00:10:02,000 --> 00:10:03,908
Я перейду к тому, как новые деньги попадают в бухгалтерскую книгу, 

167
00:10:03,908 --> 00:10:04,820
буквально через несколько минут.

168
00:10:05,540 --> 00:10:09,005
Но перед этим на самом деле есть еще более существенная разница между нашей 

169
00:10:09,005 --> 00:10:12,380
нынешней системой бухгалтерских долларов и тем, как работают криптовалюты.

170
00:10:13,020 --> 00:10:16,264
До сих пор я говорил, что эта бухгалтерская книга находится в каком-то публичном месте, 

171
00:10:16,264 --> 00:10:18,440
например на сайте, где каждый может добавлять новые строки.

172
00:10:19,220 --> 00:10:23,102
Но для этого придется довериться центральному пункту, а именно тому, 

173
00:10:23,102 --> 00:10:26,760
кто хостит сайт, кто контролирует правила добавления новых линий.

174
00:10:27,340 --> 00:10:29,694
Чтобы убрать эту толику доверия, мы заставим каждого 

175
00:10:29,694 --> 00:10:31,960
хранить свою собственную копию бухгалтерской книги.

176
00:10:32,660 --> 00:10:37,889
Затем, когда ты хочешь совершить транзакцию, например, Алиса платит Бобу 100 долларов, 

177
00:10:37,889 --> 00:10:43,059
ты транслируешь это в мир, чтобы люди услышали и записали в свои личные бухгалтерские 

178
00:10:43,059 --> 00:10:43,420
книги.

179
00:10:44,840 --> 00:10:49,260
Но если ты не сделаешь чего-то большего, эта система абсурдно плоха.

180
00:10:49,820 --> 00:10:52,740
Как ты можешь заставить всех договориться о том, что такое правильная бухгалтерская книга?

181
00:10:53,440 --> 00:10:57,317
Когда Боб получает транзакцию, например, Алиса платит Бобу 10 долларов, 

182
00:10:57,317 --> 00:11:01,680
как он может быть уверен, что все остальные получили и считают эту же транзакцию?

183
00:11:02,340 --> 00:11:07,200
Что позже он сможет пойти к Чарли и использовать те же 10 долларов для совершения сделки?

184
00:11:08,240 --> 00:11:12,060
Действительно, представь себя просто слушающим транслируемые сделки.

185
00:11:12,760 --> 00:11:18,220
Как ты можешь быть уверен, что все остальные записывают те же операции и в том же порядке?

186
00:11:19,420 --> 00:11:21,360
Это действительно сердцевина проблемы.

187
00:11:21,600 --> 00:11:22,740
Это интересная головоломка.

188
00:11:23,420 --> 00:11:28,059
Можешь ли ты придумать протокол, как принимать или отклонять транзакции и в каком 

189
00:11:28,059 --> 00:11:31,623
порядке, чтобы ты был уверен, что любой другой человек в мире, 

190
00:11:31,623 --> 00:11:35,583
который следует этому же протоколу, имеет личную бухгалтерскую книгу, 

191
00:11:35,583 --> 00:11:37,620
которая выглядит так же, как и твоя?

192
00:11:38,300 --> 00:11:41,580
Именно эта проблема рассматривалась в оригинальной статье о биткойнах.

193
00:11:44,060 --> 00:11:47,649
На высоком уровне решение, которое предлагает Биткойн, заключается в том, 

194
00:11:47,649 --> 00:11:51,820
чтобы доверять той бухгалтерской книге, в которую вложено больше всего вычислительной 

195
00:11:51,820 --> 00:11:52,160
работы.

196
00:11:52,540 --> 00:11:54,860
Я потрачу немного времени, чтобы объяснить, что именно это значит.

197
00:11:55,320 --> 00:11:58,120
В ней задействована криптографическая хэш-функция.

198
00:11:58,460 --> 00:12:01,474
Общая идея, на которой мы будем основываться, заключается в том, 

199
00:12:01,474 --> 00:12:04,813
что если использовать вычислительную работу в качестве основы для того, 

200
00:12:04,813 --> 00:12:08,245
чему можно доверять, то можно сделать так, что мошеннические транзакции и 

201
00:12:08,245 --> 00:12:12,280
противоречивые бухгалтерские книги будут требовать невыполнимого количества вычислений.

202
00:12:13,040 --> 00:12:16,509
Опять же, напомню, что это уже выходит далеко за рамки того, 

203
00:12:16,509 --> 00:12:19,580
что нужно знать просто для использования такой валюты.

204
00:12:20,120 --> 00:12:23,310
Но это действительно крутая идея, и если ты поймешь ее, 

205
00:12:23,310 --> 00:12:26,160
то поймешь и сердце биткоина и других криптовалют.

206
00:12:28,100 --> 00:12:29,940
Итак, начнем с того, что такое хэш-функция?

207
00:12:30,800 --> 00:12:37,106
Входом для одной из этих функций может быть любое сообщение или файл, 

208
00:12:37,106 --> 00:12:40,620
на самом деле это выглядит как 256 бит.

209
00:12:41,180 --> 00:12:44,544
Этот вывод называется хэшем или дайджестом сообщения, 

210
00:12:44,544 --> 00:12:47,660
и цель состоит в том, чтобы он выглядел случайным.

211
00:12:48,000 --> 00:12:51,660
Она не случайна, она всегда дает один и тот же результат при заданных входных данных.

212
00:12:52,200 --> 00:12:56,174
Но идея заключается в том, что если ты немного изменишь входные данные, возможно, 

213
00:12:56,174 --> 00:13:00,100
отредактировав всего один из символов, то результирующий хэш полностью изменится.

214
00:13:00,820 --> 00:13:05,814
На самом деле, для хэш-функции, которую я здесь показываю и которая называется SHA256, 

215
00:13:05,814 --> 00:13:09,947
то, как меняется выходной сигнал при незначительном изменении входного, 

216
00:13:09,947 --> 00:13:11,440
совершенно непредсказуемо.

217
00:13:12,440 --> 00:13:17,060
Видишь ли, это не просто хэш-функция, это криптографическая хэш-функция.

218
00:13:17,340 --> 00:13:20,660
Это значит, что вычисления в обратном направлении неосуществимы.

219
00:13:21,260 --> 00:13:28,654
Если я покажу тебе какую-нибудь строку из 1 и 0 и попрошу найти входной хэш SHA256, 

220
00:13:28,654 --> 00:13:34,640
то у тебя не будет лучшего метода, чем просто угадывать и проверять.

221
00:13:35,700 --> 00:13:40,065
И опять же, если ты хочешь почувствовать, сколько вычислений потребуется, 

222
00:13:40,065 --> 00:13:43,900
чтобы перебрать 256 догадок, просто посмотри видео с дополнением.

223
00:13:44,380 --> 00:13:46,660
На самом деле я получил слишком много удовольствия от написания этой вещи.

224
00:13:48,560 --> 00:13:52,153
Тебе может показаться, что если ты действительно покопаешься в деталях того, 

225
00:13:52,153 --> 00:13:55,886
как именно работает эта функция, то сможешь реверсировать соответствующий ввод, 

226
00:13:55,886 --> 00:13:57,520
не прибегая к догадкам и проверкам.

227
00:13:58,240 --> 00:14:00,840
Но никто так и не придумал, как это сделать.

228
00:14:01,600 --> 00:14:04,776
Интересно, что нет никаких холодных строгих доказательств того, 

229
00:14:04,776 --> 00:14:06,960
что сложно вычислить в обратном направлении.

230
00:14:07,620 --> 00:14:10,956
И тем не менее, огромное количество современной безопасности зависит от 

231
00:14:10,956 --> 00:14:14,200
криптографических хэш-функций и идеи, что они обладают этим свойством.

232
00:14:14,940 --> 00:14:19,048
Если ты посмотришь, какие алгоритмы лежат в основе безопасного соединения, 

233
00:14:19,048 --> 00:14:23,320
которое твой браузер прямо сейчас устанавливает с YouTube или с твоим банком, 

234
00:14:23,320 --> 00:14:25,840
то, скорее всего, увидишь там название SHA256.

235
00:14:27,340 --> 00:14:31,640
Пока что мы сосредоточимся на том, как такая функция может доказать, 

236
00:14:31,640 --> 00:14:37,000
что определенный список транзакций связан с большим количеством вычислительных усилий.

237
00:14:38,040 --> 00:14:42,489
Представь, что кто-то показывает тебе список транзакций и говорит: "Эй, 

238
00:14:42,489 --> 00:14:47,310
я нашел особое число, так что когда ты ставишь это число в конец этого списка 

239
00:14:47,310 --> 00:14:50,215
транзакций и применяешь SHA256 ко всему этому, 

240
00:14:50,215 --> 00:14:53,120
то первые 30 бит этого вывода - сплошные нули".

241
00:14:54,100 --> 00:14:56,700
Как ты думаешь, насколько сложно им было найти это число?

242
00:14:58,060 --> 00:15:00,898
Ну, для случайного сообщения вероятность того, 

243
00:15:00,898 --> 00:15:05,307
что хэш будет начинаться с 30 последовательных нулей, равна 1 к 2 из 30, 

244
00:15:05,307 --> 00:15:07,180
то есть примерно 1 к миллиарду.

245
00:15:08,200 --> 00:15:11,212
А поскольку SHA256 - это криптографическая хэш-функция, 

246
00:15:11,212 --> 00:15:15,840
то единственный способ найти такое специальное число - это просто угадать и проверить.

247
00:15:16,660 --> 00:15:20,778
Так что этому человеку почти наверняка пришлось перебрать около миллиарда разных номеров, 

248
00:15:20,778 --> 00:15:22,380
прежде чем он нашел этот особенный.

249
00:15:23,380 --> 00:15:26,572
И как только ты узнаешь это число, его можно очень быстро проверить: 

250
00:15:26,572 --> 00:15:28,840
просто прогони хэш и увидишь, что в нем 30 нулей.

251
00:15:29,800 --> 00:15:33,436
Другими словами, ты можешь убедиться, что они прошли через большой объем работы, 

252
00:15:33,436 --> 00:15:36,400
но при этом тебе не придется проходить через эти же усилия самому.

253
00:15:37,200 --> 00:15:38,800
Это называется доказательством работы.

254
00:15:39,460 --> 00:15:44,220
И что немаловажно, вся эта работа неразрывно связана со списком транзакций.

255
00:15:44,900 --> 00:15:49,640
Если ты изменишь одну из этих транзакций, даже незначительно, это полностью изменит хэш.

256
00:15:50,080 --> 00:15:52,864
Так что тебе придется перебрать еще миллиард догадок, 

257
00:15:52,864 --> 00:15:56,680
чтобы найти новое доказательство работы, новое число, которое делает так, 

258
00:15:56,680 --> 00:16:00,600
что хэш измененного списка вместе с этим новым числом начинается с 30 нулей.

259
00:16:01,500 --> 00:16:04,100
А теперь вспомни нашу ситуацию с распределенной книгой.

260
00:16:04,680 --> 00:16:08,591
Там все транслируют транзакции, и мы хотим, чтобы они могли договориться о том, 

261
00:16:08,591 --> 00:16:10,840
какая бухгалтерская книга является правильной.

262
00:16:12,100 --> 00:16:15,278
Как я уже говорил, идея оригинального документа о биткоине заключается в том, 

263
00:16:15,278 --> 00:16:18,660
чтобы каждый доверял той бухгалтерской книге, в которую вложено больше всего труда.

264
00:16:19,280 --> 00:16:23,280
Работает это следующим образом: сначала заданная бухгалтерская книга организуется в 

265
00:16:23,280 --> 00:16:27,280
блоки, где каждый блок состоит из списка транзакций вместе с доказательством работы.

266
00:16:27,720 --> 00:16:32,300
То есть специальное число, чтобы хэш всего блока начинался с кучки нулей.

267
00:16:33,140 --> 00:16:37,899
На данный момент скажем, что он должен начинаться с 60 нулей, 

268
00:16:37,899 --> 00:16:44,118
но позже мы вернемся к более систематизированному способу, который ты, возможно, 

269
00:16:44,118 --> 00:16:45,500
захочешь изменить.

270
00:16:45,900 --> 00:16:50,040
Блок считается действительным только в том случае, если у него есть подтверждение работы.

271
00:16:50,960 --> 00:16:55,481
Также, чтобы обеспечить стандартный порядок в этих блоках, мы сделаем так, 

272
00:16:55,481 --> 00:16:59,460
что блок должен содержать хэш предыдущего блока в своем заголовке.

273
00:17:00,060 --> 00:17:04,594
Таким образом, если ты вернешься назад и изменишь любой из блоков или поменяешь 

274
00:17:04,594 --> 00:17:08,675
местами порядок двух блоков, это изменит блок, который идет после него, 

275
00:17:08,675 --> 00:17:13,380
что изменит хэш этого блока, что изменит тот, который идет после него, и так далее.

276
00:17:13,980 --> 00:17:17,590
Для этого придется переделать всю работу, найти новое специальное 

277
00:17:17,590 --> 00:17:21,420
число для каждого из этих блоков, чтобы их хэши начинались с 60 нулей.

278
00:17:22,440 --> 00:17:24,775
Поскольку блоки соединяются в цепочку подобным образом, 

279
00:17:24,775 --> 00:17:28,319
вместо того чтобы называть это бухгалтерской книгой, принято называть это блокчейном.

280
00:17:30,080 --> 00:17:32,144
В рамках нашего обновленного протокола мы теперь 

281
00:17:32,144 --> 00:17:34,420
позволим любому человеку в мире быть создателем блока.

282
00:17:35,240 --> 00:17:38,828
Это значит, что они будут слушать транзакции, которые транслируются, 

283
00:17:38,828 --> 00:17:41,792
собирать их в блок, а затем выполнять целую кучу работы, 

284
00:17:41,792 --> 00:17:46,160
чтобы найти специальное число, из-за которого хэш этого блока начинается с 60 нулей.

285
00:17:46,960 --> 00:17:49,900
Найдя его, они передают в эфир найденный блок.

286
00:17:50,860 --> 00:17:54,085
Чтобы вознаградить создательницу блока за всю эту работу, 

287
00:17:54,085 --> 00:17:58,924
когда она соберет блок, мы позволим ей включить в его верхнюю часть особую транзакцию, 

288
00:17:58,924 --> 00:18:02,540
в которой она получит, скажем, 10 леджерских долларов из воздуха.

289
00:18:03,080 --> 00:18:07,493
Это называется вознаграждением за блок, и это исключение из наших обычных правил о том, 

290
00:18:07,493 --> 00:18:09,400
принимать или не принимать транзакции.

291
00:18:10,040 --> 00:18:12,920
Он ни от кого не исходит, поэтому его не нужно подписывать.

292
00:18:13,660 --> 00:18:16,720
Это также означает, что общее количество леджер-долларов 

293
00:18:16,720 --> 00:18:19,620
в нашей экономике увеличивается с каждым новым блоком.

294
00:18:20,900 --> 00:18:25,826
Создание блоков часто называют майнингом, так как для этого нужно выполнить много работы, 

295
00:18:25,826 --> 00:18:28,180
и это вводит новые биты валюты в экономику.

296
00:18:29,020 --> 00:18:32,417
Но когда ты слышишь или читаешь о майнерах, имей в виду, 

297
00:18:32,417 --> 00:18:36,410
что на самом деле они занимаются тем, что прослушивают транзакции, 

298
00:18:36,410 --> 00:18:40,940
создают блоки, транслируют эти блоки и получают за это новое вознаграждение.

299
00:18:41,780 --> 00:18:45,659
С точки зрения майнеров, каждый блок похож на миниатюрную лотерею, 

300
00:18:45,659 --> 00:18:48,786
где все угадывают числа так быстро, как только могут, 

301
00:18:48,786 --> 00:18:53,534
пока один счастливчик не найдет особое число, из-за которого хэш блока начинается 

302
00:18:53,534 --> 00:18:56,140
со многих нулей, и он получит вознаграждение.

303
00:18:57,620 --> 00:19:02,171
Для всех остальных, кто просто хочет использовать эту систему для совершения платежей, 

304
00:19:02,171 --> 00:19:06,199
вместо того чтобы слушать транзакции, они все начинают слушать только блоки, 

305
00:19:06,199 --> 00:19:09,600
транслируемые майнерами, и обновлять свои личные копии блокчейна.

306
00:19:10,560 --> 00:19:13,613
Ключевое дополнение к нашему протоколу заключается в том, 

307
00:19:13,613 --> 00:19:17,877
что если ты слышишь два разных блокчейна с противоречивыми историями транзакций, 

308
00:19:17,877 --> 00:19:22,300
ты отдаешь предпочтение самому длинному, тому, в который вложено больше всего труда.

309
00:19:22,860 --> 00:19:26,041
Если будет ничья, просто подожди, пока не услышишь дополнительный блок, 

310
00:19:26,041 --> 00:19:27,720
который сделает одного из них длиннее.

311
00:19:28,720 --> 00:19:31,567
Поэтому, несмотря на то, что центрального органа нет, 

312
00:19:31,567 --> 00:19:34,520
и каждый поддерживает свою собственную копию блокчейна, 

313
00:19:34,520 --> 00:19:37,578
если все согласятся отдавать предпочтение тому блокчейну, 

314
00:19:37,578 --> 00:19:42,060
в который вложено больше всего труда, у нас есть способ прийти к децентрализованному 

315
00:19:42,060 --> 00:19:42,640
консенсусу.

316
00:19:43,560 --> 00:19:46,654
Чтобы понять, почему эта система заслуживает доверия, и понять, 

317
00:19:46,654 --> 00:19:49,361
в какой момент ты должен поверить, что платеж законный, 

318
00:19:49,361 --> 00:19:52,456
будет очень полезно пройтись по тому, что именно нужно сделать, 

319
00:19:52,456 --> 00:19:54,680
чтобы обмануть кого-то, используя эту систему.

320
00:19:55,600 --> 00:19:59,282
Может быть, Алиса пытается обмануть Боба с помощью мошеннического блока, 

321
00:19:59,282 --> 00:20:02,360
а именно она пытается отправить ему блок, в котором указано, 

322
00:20:02,360 --> 00:20:06,295
что она платит ему 100 Ledger-долларов, но не транслирует этот блок остальным 

323
00:20:06,295 --> 00:20:09,272
участникам сети, так что все остальные по-прежнему думают, 

324
00:20:09,272 --> 00:20:11,240
что у нее есть эти 100 Ledger-долларов.

325
00:20:11,960 --> 00:20:15,320
Для этого ей придется найти достоверное доказательство работы раньше 

326
00:20:15,320 --> 00:20:18,680
всех остальных майнеров, каждый из которых работает над своим блоком.

327
00:20:19,500 --> 00:20:22,206
И это определенно может случиться, возможно, Алиса просто 

328
00:20:22,206 --> 00:20:24,820
случайно выиграет в эту миниатюрную лотерею раньше всех.

329
00:20:25,680 --> 00:20:29,600
Но Боб все равно будет слышать трансляции, сделанные другими майнерами, 

330
00:20:29,600 --> 00:20:32,649
поэтому, чтобы он не поверил в этот мошеннический блок, 

331
00:20:32,649 --> 00:20:36,515
Алисе придется самой выполнять всю работу по добавлению блоков на этой 

332
00:20:36,515 --> 00:20:39,999
специальной вилке в блокчейне Боба, которая отличается от того, 

333
00:20:39,999 --> 00:20:41,960
что он слышит от остальных майнеров.

334
00:20:42,740 --> 00:20:46,964
Помни, что, согласно протоколу, Боб всегда доверяет самой длинной цепочке, 

335
00:20:46,964 --> 00:20:48,260
о которой ему известно.

336
00:20:49,260 --> 00:20:51,887
Алиса может продержаться так несколько блоков, 

337
00:20:51,887 --> 00:20:55,072
если по чистой случайности будет находить блоки быстрее, 

338
00:20:55,072 --> 00:20:57,700
чем все остальные майнеры в сети вместе взятые.

339
00:20:58,480 --> 00:21:03,638
Но если у нее нет почти 50% вычислительных ресурсов всех майнеров, то вероятность того, 

340
00:21:03,638 --> 00:21:07,976
что блокчейн, над которым работают все остальные майнеры, растет быстрее, 

341
00:21:07,976 --> 00:21:12,314
чем тот единственный мошеннический блокчейн, который Алиса передает Бобу, 

342
00:21:12,314 --> 00:21:13,780
становится непреодолимой.

343
00:21:15,000 --> 00:21:18,782
Поэтому по прошествии достаточного количества времени Боб просто отвергнет то, 

344
00:21:18,782 --> 00:21:21,464
что он слышит от Алисы, в пользу более длинной цепочки, 

345
00:21:21,464 --> 00:21:23,140
над которой работают все остальные.

346
00:21:23,960 --> 00:21:27,458
Заметь, это значит, что тебе не обязательно доверять новому блоку, 

347
00:21:27,458 --> 00:21:28,920
который ты сразу же слышишь.

348
00:21:29,500 --> 00:21:31,490
Вместо этого тебе следует подождать, пока поверх 

349
00:21:31,490 --> 00:21:33,400
него не будет добавлено несколько новых блоков.

350
00:21:33,820 --> 00:21:37,092
Если ты до сих пор не слышал о более длинных блокчейнах, то можешь верить, 

351
00:21:37,092 --> 00:21:40,540
что этот блок является частью той же цепочки, которую используют все остальные.

352
00:21:42,120 --> 00:21:45,220
И на этом мы затронули все основные идеи.

353
00:21:45,780 --> 00:21:48,886
Эта система распределенных книг, основанная на доказательстве работы, 

354
00:21:48,886 --> 00:21:52,792
более или менее соответствует тому, как работает протокол Bitcoin и как работают многие 

355
00:21:52,792 --> 00:21:53,680
другие криптовалюты.

356
00:21:54,300 --> 00:21:56,160
Осталось прояснить несколько деталей.

357
00:21:56,300 --> 00:22:00,690
Ранее я говорил, что доказательством работы может быть нахождение специального числа, 

358
00:22:00,690 --> 00:22:02,580
чтобы хэш блока начинался с 60 нулей.

359
00:22:03,220 --> 00:22:06,153
Ну, на самом деле протокол Bitcoin работает так: 

360
00:22:06,153 --> 00:22:10,463
периодически изменяется количество нулей, так что на поиск нового блока 

361
00:22:10,463 --> 00:22:11,900
должно уходить 10 минут.

362
00:22:12,780 --> 00:22:16,401
Поэтому по мере того, как в сети появляется все больше и больше майнеров, 

363
00:22:16,401 --> 00:22:19,093
задача становится все сложнее и сложнее таким образом, 

364
00:22:19,093 --> 00:22:22,960
что в этой миниатюрной лотерее каждые 10 минут появляется лишь один победитель.

365
00:22:23,920 --> 00:22:27,880
У многих новых криптовалют время блокировки намного короче, чем это.

366
00:22:28,580 --> 00:22:30,749
И все деньги в биткоине в конечном итоге получаются 

367
00:22:30,749 --> 00:22:32,460
из некоторого вознаграждения за блокчейн.

368
00:22:32,920 --> 00:22:35,740
Вначале эти вознаграждения составляли 50 биткойнов за блок.

369
00:22:36,140 --> 00:22:38,604
Есть отличный сайт под названием Block Explorer, 

370
00:22:38,604 --> 00:22:41,420
который позволяет легко просматривать блокчейн Биткойна.

371
00:22:41,960 --> 00:22:44,969
И если ты посмотришь на самые первые несколько блоков в цепи, 

372
00:22:44,969 --> 00:22:49,240
то они не содержат никаких транзакций, кроме того вознаграждения в 50 биткоинов майнеру.

373
00:22:49,860 --> 00:22:53,789
Но каждые 210 000 блоков, то есть примерно раз в 4 года, 

374
00:22:53,789 --> 00:22:56,340
это вознаграждение сокращается вдвое.

375
00:22:56,860 --> 00:23:00,140
Так что прямо сейчас вознаграждение составляет 12,5 биткоина за блок.

376
00:23:00,720 --> 00:23:05,045
А поскольку это вознаграждение со временем уменьшается в геометрической прогрессии, 

377
00:23:05,045 --> 00:23:09,320
это означает, что в мире никогда не будет существовать более 21 миллиона биткоинов.

378
00:23:10,280 --> 00:23:13,280
Однако это не значит, что майнеры перестанут зарабатывать деньги.

379
00:23:13,820 --> 00:23:17,940
Помимо вознаграждения за блок, майнеры могут забирать комиссионные за транзакции.

380
00:23:18,520 --> 00:23:21,600
Работает это так: всякий раз, когда ты совершаешь платеж, 

381
00:23:21,600 --> 00:23:24,840
ты можешь по желанию включить в него комиссию за транзакцию, 

382
00:23:24,840 --> 00:23:28,240
которая пойдет майнеру того блока, в который входит этот платеж.

383
00:23:29,020 --> 00:23:31,566
Причина, по которой ты можешь это сделать, заключается в том, 

384
00:23:31,566 --> 00:23:35,221
чтобы стимулировать майнеров действительно включать транзакцию, которую ты транслируешь, 

385
00:23:35,221 --> 00:23:35,920
в следующий блок.

386
00:23:36,440 --> 00:23:40,852
Видишь ли, в Биткойне каждый блок ограничен примерно 2400 транзакциями, 

387
00:23:40,852 --> 00:23:45,020
что, по мнению многих критиков, является неоправданным ограничением.

388
00:23:45,860 --> 00:23:51,521
Для сравнения, Visa обрабатывает в среднем около 1700 транзакций в секунду, 

389
00:23:51,521 --> 00:23:55,320
а они способны обрабатывать более 24 000 в секунду.

390
00:23:56,020 --> 00:23:59,612
Такая сравнительно медленная обработка данных в Биткойне приводит 

391
00:23:59,612 --> 00:24:03,260
к увеличению платы за транзакции, поскольку именно она определяет, 

392
00:24:03,260 --> 00:24:06,200
какие транзакции майнеры решают включить в новый блок.

393
00:24:07,820 --> 00:24:11,500
Все это далеко не полный охват криптовалют.

394
00:24:12,160 --> 00:24:15,049
Существует еще множество нюансов и альтернативных вариантов дизайна, 

395
00:24:15,049 --> 00:24:16,180
которых я даже не коснулся.

396
00:24:16,640 --> 00:24:21,181
Но я надеюсь, что это может стать стабильным древом понимания в стиле WaitButWhy для тех, 

397
00:24:21,181 --> 00:24:24,360
кто захочет добавить еще несколько веток при дальнейшем чтении.

398
00:24:25,180 --> 00:24:28,355
Как я уже сказал в самом начале, один из мотивов этого - то, 

399
00:24:28,355 --> 00:24:30,853
что в криптовалюты стало стекаться много денег, 

400
00:24:30,853 --> 00:24:35,226
и хотя я не хочу делать никаких заявлений о том, хорошие это или плохие инвестиции, 

401
00:24:35,226 --> 00:24:38,037
я действительно считаю, что людям, вступающим в игру, 

402
00:24:38,037 --> 00:24:40,380
полезно хотя бы знать основы этой технологии.

403
00:24:41,340 --> 00:24:43,682
Как всегда, моя самая искренняя благодарность тем из вас, 

404
00:24:43,682 --> 00:24:45,420
кто делает этот канал возможным на Patreon.

405
00:24:46,080 --> 00:24:48,745
Я понимаю, что не все в состоянии внести свой вклад, 

406
00:24:48,745 --> 00:24:53,270
но если тебе все же интересно помочь, то один из лучших способов - просто делиться видео, 

407
00:24:53,270 --> 00:24:56,640
которые, по твоему мнению, могут быть интересны или полезны другим.

408
00:24:57,280 --> 00:24:59,320
Я знаю, что ты и сам это знаешь, но это действительно помогает.

