1
00:00:03,900 --> 00:00:06,480
Bitcoin sahibi olmak ne anlama geliyor?

2
00:00:07,420 --> 00:00:11,449
Pek çok kişi Bitcoin'i duymuştur; tamamen dijital bir para birimidir ve devlet 

3
00:00:11,449 --> 00:00:15,325
tarafından çıkarılmamaktadır, bankaların hesapları yönetmesine ve işlemleri 

4
00:00:15,325 --> 00:00:19,100
doğrulamasına gerek yoktur ve kimse onu kimin icat ettiğini bilmemektedir.

5
00:00:19,380 --> 00:00:23,280
Yine de pek çok insan bu sorunun cevabını bilmiyor, en azından tam olarak bilmiyor.

6
00:00:24,100 --> 00:00:27,495
Oraya ulaşmak ve cevabın altında yatan teknik detayların 

7
00:00:27,495 --> 00:00:30,533
gerçekten motive edici olduğundan emin olmak için, 

8
00:00:30,533 --> 00:00:35,240
kendi Bitcoin versiyonunuzu nasıl icat edebileceğinizi adım adım inceleyeceğiz.

9
00:00:36,140 --> 00:00:39,328
Ortak bir defter kullanarak arkadaşlarınızla yaptığınız ödemeleri takip 

10
00:00:39,328 --> 00:00:42,737
etmenizle başlayacağız ve daha sonra arkadaşlarınıza ve çevrenizdeki dünyaya 

11
00:00:42,737 --> 00:00:45,792
giderek daha az güvenmeye başladığınızda ve güven ihtiyacını ortadan 

12
00:00:45,792 --> 00:00:49,644
kaldırmaya yardımcı olmak için kriptografiden birkaç fikir getirecek kadar zekiyseniz, 

13
00:00:49,644 --> 00:00:52,700
sonuçta kripto para birimi olarak adlandırılan şeyle karşılaşırsınız.

14
00:00:53,840 --> 00:00:58,233
Bitcoin bir kripto para biriminin sadece ilk uygulanan örneği ve 

15
00:00:58,233 --> 00:01:02,560
şimdi geleneksel para birimleriyle borsalarda binlerce daha var.

16
00:01:03,300 --> 00:01:06,821
Kendi icadınızı yapma yolunda yürümek, oyundaki daha yeni oyunculardan 

17
00:01:06,821 --> 00:01:10,144
bazılarını anlamak ve farklı tasarım seçimlerine ne zaman ve neden 

18
00:01:10,144 --> 00:01:13,220
yer olduğunu anlamak için temel oluşturmaya yardımcı olabilir.

19
00:01:14,100 --> 00:01:17,403
Aslında bu konuyu seçmemin nedenlerinden biri, 

20
00:01:17,403 --> 00:01:23,660
geçtiğimiz yıl bu para birimlerine yönelik büyük miktarda ilgi, yatırım ve abartı olması.

21
00:01:24,280 --> 00:01:27,576
Mevcut veya gelecekteki döviz kurları hakkında yorum veya spekülasyon yapmayacağım, 

22
00:01:27,576 --> 00:01:30,558
ancak bir kripto para birimi satın almak isteyen herkesin bunun ne olduğunu 

23
00:01:30,558 --> 00:01:33,620
gerçekten bilmesi gerektiği konusunda hepimizin hemfikir olduğunu düşünüyorum.

24
00:01:33,920 --> 00:01:38,723
Ve sadece altın madenciliği ile belirsiz bağlantıları olan benzetmeler açısından değil, 

25
00:01:38,723 --> 00:01:42,326
kripto para gönderirken, alırken ve yaratırken bilgisayarların ne 

26
00:01:42,326 --> 00:01:45,220
yaptığının gerçek bir doğrudan tanımını kastediyorum.

27
00:01:46,300 --> 00:01:50,440
Vurgulanması gereken bir husus, her ne kadar siz ve ben burada ayrıntılara girecek 

28
00:01:50,440 --> 00:01:54,430
olsak da ve bu anlamlı bir zaman alsa da, sadece kripto para birimini kullanmak 

29
00:01:54,430 --> 00:01:57,423
istiyorsanız aslında bu ayrıntıları bilmenize gerek yoktur, 

30
00:01:57,423 --> 00:02:01,663
tıpkı bir kredi kartını kaydırdığınızda kaputun altında ne olduğuna dair ayrıntıları 

31
00:02:01,663 --> 00:02:03,160
bilmenize gerek olmadığı gibi.

32
00:02:03,720 --> 00:02:07,516
Herhangi bir dijital ödeme gibi, neler olup bittiğini düşünmeden para birimlerini 

33
00:02:07,516 --> 00:02:11,360
göndermenize ve almanıza olanak tanıyan çok sayıda kullanıcı dostu uygulama vardır.

34
00:02:11,660 --> 00:02:16,949
Aradaki fark, bunun altında yatan omurganın işlemleri doğrulayan bir banka olmaması, 

35
00:02:16,949 --> 00:02:21,181
bunun yerine kriptografide doğan bazı matematiğe dayanan akıllı bir 

36
00:02:21,181 --> 00:02:24,480
merkezi olmayan güvensiz doğrulama sistemi olmasıdır.

37
00:02:25,900 --> 00:02:28,065
Ancak başlamak için kripto para birimleri düşüncesini ve tüm 

38
00:02:28,065 --> 00:02:30,480
bunları sadece birkaç dakikalığına bir kenara bırakmanızı istiyorum.

39
00:02:31,080 --> 00:02:35,380
Hikayeye daha ayakları yere basan bir şeyle, defterler ve dijital imzalarla başlayacağız.

40
00:02:36,340 --> 00:02:39,518
Siz ve arkadaşlarınız sık sık para alışverişinde bulunuyorsanız, 

41
00:02:39,518 --> 00:02:41,914
akşam yemeği faturasındaki payınızı ödüyorsanız, 

42
00:02:41,914 --> 00:02:44,360
her zaman nakit para bozdurmak sakıncalı olabilir.

43
00:02:44,720 --> 00:02:47,447
Dolayısıyla, gelecekte bir noktada yapmayı planladığınız 

44
00:02:47,447 --> 00:02:50,080
tüm ödemeleri kaydeden ortak bir defter tutabilirsiniz.

45
00:02:50,620 --> 00:02:55,100
Alice Bob'a 20 dolar öder, Bob Charlie'ye 40 dolar öder, bunun gibi şeyler.

46
00:02:55,500 --> 00:02:58,571
Bu defter, herkesin gidip yeni satırlar ekleyebileceği bir web 

47
00:02:58,571 --> 00:03:01,740
sitesi gibi kamuya açık ve herkesin erişebileceği bir şey olacak.

48
00:03:02,480 --> 00:03:05,519
Ve diyelim ki her ayın sonunda hepiniz bir araya geldiniz, 

49
00:03:05,519 --> 00:03:07,940
işlemlerin listesine baktınız ve hesaplaştınız.

50
00:03:08,280 --> 00:03:11,387
Aldığınızdan fazlasını harcadıysanız, o parayı potaya koyarsınız 

51
00:03:11,387 --> 00:03:14,400
ve harcadığınızdan fazlasını aldıysanız, o parayı çıkarırsınız.

52
00:03:15,460 --> 00:03:19,360
Yani bu çok basit sistemin bir parçası olmak için protokol şöyle görünebilir.

53
00:03:20,020 --> 00:03:23,063
Herkes deftere satır ekleyebilir ve her ayın sonunda 

54
00:03:23,063 --> 00:03:25,360
hepiniz bir araya gelip hesaplaşırsınız.

55
00:03:26,300 --> 00:03:29,069
Şimdi bunun gibi halka açık bir defterle ilgili bir sorun, 

56
00:03:29,069 --> 00:03:30,760
herkesin bir satır ekleyebilmesidir.

57
00:03:31,020 --> 00:03:34,031
Peki Bob'un gidip Alice'in onayını almadan Bob'a 

58
00:03:34,031 --> 00:03:36,920
100 dolar ödediğini yazmasını engelleyen nedir?

59
00:03:37,780 --> 00:03:43,200
Tüm bu işlemlerin göndericinin istediği gibi olduğuna nasıl güveneceğiz?

60
00:03:44,580 --> 00:03:48,540
İşte bu noktada kriptografinin ilk parçası olan dijital imzalar devreye giriyor.

61
00:03:49,480 --> 00:03:53,264
Buradaki fikir, el yazısıyla atılan imzalarda olduğu gibi, 

62
00:03:53,264 --> 00:03:57,627
Alice'in bu işlemin yanına onu gördüğünü ve onayladığını kanıtlayan 

63
00:03:57,627 --> 00:04:03,080
bir şey ekleyebilmesi ve başka birinin bu imzayı taklit etmesinin mümkün olmamasıdır.

64
00:04:04,300 --> 00:04:08,580
İlk başta dijital imzanın mümkün olmaması gerekiyormuş gibi görünebilir.

65
00:04:09,220 --> 00:04:11,926
Yani, bu imzayı oluşturan her türlü veri bir bilgisayar 

66
00:04:11,926 --> 00:04:13,860
tarafından okunabilir ve kopyalanabilir.

67
00:04:14,400 --> 00:04:16,140
Peki sahteciliği nasıl önlersiniz?

68
00:04:17,320 --> 00:04:20,691
Bunun çalışma şekli, herkesin açık anahtar-özel anahtar çifti olarak 

69
00:04:20,691 --> 00:04:24,160
adlandırılan ve her biri bir dizi bit gibi görünen bir şey üretmesidir.

70
00:04:24,800 --> 00:04:27,564
Özel anahtar bazen gizli anahtar olarak da adlandırılır, 

71
00:04:27,564 --> 00:04:31,300
bu nedenle açık anahtarı PK olarak kısaltırken bunu SK olarak kısaltabiliriz.

72
00:04:32,340 --> 00:04:36,220
Adından da anlaşılacağı gibi, bu gizli anahtar kendinize saklamak istediğiniz bir şeydir.

73
00:04:37,060 --> 00:04:39,487
Gerçek dünyada, hangi belgeyi imzalıyor olursanız 

74
00:04:39,487 --> 00:04:41,720
olun el yazısıyla attığınız imza aynı görünür.

75
00:04:42,280 --> 00:04:46,940
Ancak dijital imza aslında çok daha güçlüdür, çünkü farklı mesajlar için değişir.

76
00:04:47,840 --> 00:04:53,969
Genellikle 256 bit gibi bir 1'ler ve 0'lar dizisi gibi görünür ve mesajı biraz bile 

77
00:04:53,969 --> 00:04:59,880
değiştirmek, bu mesajdaki imzanın nasıl görünmesi gerektiğini tamamen değiştirir.

78
00:05:00,840 --> 00:05:04,749
Biraz daha resmi konuşmak gerekirse, bir imza üretmek hem mesajın 

79
00:05:04,749 --> 00:05:08,540
kendisine hem de özel anahtarınıza bağlı olan bir işlevi içerir.

80
00:05:09,200 --> 00:05:13,870
Özel anahtar, bu imzayı yalnızca sizin üretebilmenizi sağlar ve mesaja bağlı olması, 

81
00:05:13,870 --> 00:05:17,277
hiç kimsenin imzalarınızdan birini kopyalayıp başka bir mesaj 

82
00:05:17,277 --> 00:05:19,640
üzerinde taklit edemeyeceği anlamına gelir.

83
00:05:21,000 --> 00:05:24,684
Bununla birlikte, bir imzanın geçerli olduğunu doğrulamak için kullanılan 

84
00:05:24,684 --> 00:05:28,220
ikinci bir işlev vardır ve bu da açık anahtarın devreye girdiği yerdir.

85
00:05:29,200 --> 00:05:33,264
Tek yaptığı, bunun doğrulama için kullandığınız açık anahtarla ilişkili özel anahtar 

86
00:05:33,264 --> 00:05:37,281
tarafından üretilen bir imza olup olmadığını belirtmek için true veya false çıktısı 

87
00:05:37,281 --> 00:05:37,760
vermektir.

88
00:05:38,640 --> 00:05:42,891
Bu iki işlevin tam olarak nasıl çalıştığının ayrıntılarına girmeyeceğim, 

89
00:05:42,891 --> 00:05:46,269
ancak ana fikir, gizli anahtarı bilmiyorsanız geçerli bir 

90
00:05:46,269 --> 00:05:49,240
imza bulmanın tamamen imkansız olması gerektiğidir.

91
00:05:50,060 --> 00:05:53,840
Özellikle, herkesin bildiği açık anahtarı kullanarak kontrol edebileceğiniz 

92
00:05:53,840 --> 00:05:57,820
rastgele imzaları tahmin etmek ve kontrol etmekten daha iyi bir strateji yoktur.

93
00:05:58,980 --> 00:06:03,200
Şimdi 256 bit uzunluğunda kaç tane imza olduğunu düşünün.

94
00:06:03,840 --> 00:06:06,180
Bu 256'nın 2 katı!

95
00:06:07,140 --> 00:06:09,560
Bu aptalca büyük bir sayı.

96
00:06:09,860 --> 00:06:13,640
Buna astronomik olarak büyük demek astronomiye gereğinden fazla itibar etmek olur.

97
00:06:14,260 --> 00:06:16,833
Aslında, sadece bunun ne kadar büyük bir rakam 

98
00:06:16,833 --> 00:06:19,680
olduğunu göstermeye adanmış ek bir video hazırladım.

99
00:06:20,380 --> 00:06:25,285
Tam burada, belirli bir mesaja karşı atılan imzanın geçerli olduğunu doğruladığınızda, 

100
00:06:25,285 --> 00:06:30,190
birisinin bunu üretebilmesinin tek yolunun doğrulama için kullandığınız açık anahtarla 

101
00:06:30,190 --> 00:06:35,040
ilişkili gizli anahtarı bilmesi olduğundan son derece emin olabileceğinizi söyleyelim.

102
00:06:37,120 --> 00:06:40,800
İnsanların defterdeki işlemleri imzaladığından emin olmak oldukça iyi, 

103
00:06:40,800 --> 00:06:42,200
ancak küçük bir boşluk var.

104
00:06:42,720 --> 00:06:46,604
Alice, Bob'a 100 dolar ödüyor gibi bir işlem imzalarsa, 

105
00:06:46,604 --> 00:06:50,766
Bob yeni bir mesajda Alice'in imzasını taklit edemese bile, 

106
00:06:50,766 --> 00:06:53,680
aynı satırı istediği kadar kopyalayabilir.

107
00:06:54,300 --> 00:06:57,220
Bu mesaj-imza kombinasyonu geçerliliğini korumaktadır.

108
00:06:57,920 --> 00:07:02,162
Bunu aşmak için, bir işlemi imzaladığınızda, mesajın o 

109
00:07:02,162 --> 00:07:07,100
işlemle ilişkili bir tür benzersiz kimlik içermesini sağlıyoruz.

110
00:07:07,840 --> 00:07:11,370
Bu şekilde, Alice Bob'a birden fazla kez 100 dolar öderse, 

111
00:07:11,370 --> 00:07:15,380
defterdeki bu satırların her biri tamamen yeni bir imza gerektirir.

112
00:07:16,760 --> 00:07:21,940
Harika, dijital imzalar bu ilk protokoldeki büyük bir güven unsurunu ortadan kaldırıyor.

113
00:07:22,380 --> 00:07:25,014
Ancak yine de, bunu gerçekten yapacak olsaydınız, 

114
00:07:25,014 --> 00:07:27,280
bir tür onur sistemine güveniyor olurdunuz.

115
00:07:27,720 --> 00:07:30,116
Yani, herkesin gerçekten bunu takip edeceğine ve her 

116
00:07:30,116 --> 00:07:32,740
ayın sonunda nakit olarak ödeme yapacağına güveniyorsunuz.

117
00:07:33,560 --> 00:07:39,480
Örneğin, Charlie binlerce dolar borçlanırsa ve gelmeyi reddederse ne olacak?

118
00:07:40,120 --> 00:07:44,157
Uzlaşmak için nakde geri dönmenin tek gerçek nedeni, 

119
00:07:44,157 --> 00:07:47,280
bazı kişilerin çok fazla borcu olmasıdır.

120
00:07:47,860 --> 00:07:50,682
Belki de, insanların aldıklarından çok daha fazlasını harcamalarını 

121
00:07:50,682 --> 00:07:53,463
engelleyecek bir yolunuz olduğu sürece, aslında hiçbir zaman nakit 

122
00:07:53,463 --> 00:07:56,660
olarak ödeme yapmak zorunda kalmayacağınız gibi akıllıca bir fikriniz vardır.

123
00:07:57,340 --> 00:08:02,636
Belki de herkesin potaya 100 dolar ödemesini sağlayarak başlarsınız ve sonra defterin 

124
00:08:02,636 --> 00:08:08,180
ilk birkaç satırında Alice 100 dolar alır, Bob 100 dolar alır, Charlie 100 dolar alır, vb.

125
00:08:09,020 --> 00:08:12,544
Şimdi, birisinin bu defterde sahip olduğundan daha 

126
00:08:12,544 --> 00:08:16,000
fazla harcama yaptığı hiçbir işlemi kabul etmeyin.

127
00:08:16,840 --> 00:08:23,988
Örneğin, ilk iki işlem Charlie Alice'e 50 $ öder ve Charlie Bob'a 50 $ öder şeklindeyse, 

128
00:08:23,988 --> 00:08:29,288
Charlie size 20 $ öder diye eklemeye çalışırsa, bu geçersiz olur, 

129
00:08:29,288 --> 00:08:32,100
hiç imzalamamış gibi geçersiz olur.

130
00:08:32,940 --> 00:08:36,246
Dikkat edin, bu bir işlemin doğrulanması için o noktaya kadar 

131
00:08:36,246 --> 00:08:39,500
olan tüm işlem geçmişinin bilinmesi gerektiği anlamına gelir.

132
00:08:40,159 --> 00:08:45,960
Optimizasyon için biraz yer olsa da, bu kripto para birimleri için de geçerli olacaktır.

133
00:08:48,380 --> 00:08:52,054
Burada ilginç olan, bu adımın defter ile gerçek fiziksel 

134
00:08:52,054 --> 00:08:55,600
ABD doları arasındaki bağlantıyı ortadan kaldırmasıdır.

135
00:08:56,200 --> 00:08:59,686
Teorik olarak, dünyadaki herkes bu defteri kullanıyor olsaydı, 

136
00:08:59,686 --> 00:09:03,062
tüm hayatınızı gerçek ABD dolarına çevirmek zorunda kalmadan 

137
00:09:03,062 --> 00:09:06,660
sadece bu defter üzerinden para gönderip alarak yaşayabilirdiniz.

138
00:09:07,580 --> 00:09:11,004
Aslında, bu noktayı vurgulamak için, defterdeki miktarlardan 

139
00:09:11,004 --> 00:09:14,260
defter doları veya kısaca LD olarak bahsetmeye başlayalım.

140
00:09:14,820 --> 00:09:18,660
Elbette defter dolarlarını gerçek ABD doları ile değiştirmekte özgürsünüz.

141
00:09:19,060 --> 00:09:24,351
Örneğin, Alice Bob'a gerçek dünyada 10 dolarlık bir banknot verir ve karşılığında Bob 

142
00:09:24,351 --> 00:09:29,520
da bu ortak deftere 10 dolarlık işlemi ekler ve imzalarsa Bob Alice'e 10 dolar öder.

143
00:09:30,720 --> 00:09:34,220
Ancak bu tür alışverişler protokol tarafından garanti edilmez.

144
00:09:34,720 --> 00:09:37,669
Bu artık açık piyasada dolar ile Euro ya da başka 

145
00:09:37,669 --> 00:09:40,560
bir para birimini takas etmeye daha çok benziyor.

146
00:09:41,180 --> 00:09:43,800
Bu sadece kendi başına bağımsız bir şey.

147
00:09:44,580 --> 00:09:47,535
Bitcoin ya da başka herhangi bir kripto para hakkında 

148
00:09:47,535 --> 00:09:49,780
anlaşılması gereken ilk önemli şey budur.

149
00:09:49,780 --> 00:09:52,420
Bu bir defter.

150
00:09:53,180 --> 00:09:55,980
İşlemlerin geçmişi para birimidir.

151
00:09:57,160 --> 00:10:01,560
Elbette Bitcoin'de para, insanların nakit kullanarak satın almasıyla deftere girmiyor.

152
00:10:02,000 --> 00:10:04,820
Yeni paranın deftere nasıl girdiğine birkaç dakika içinde değineceğim.

153
00:10:05,540 --> 00:10:08,811
Ancak bundan önce, mevcut defter dolar sistemimiz ile kripto para 

154
00:10:08,811 --> 00:10:12,380
birimlerinin çalışma şekli arasında aslında daha da önemli bir fark var.

155
00:10:13,020 --> 00:10:15,861
Şimdiye kadar, bu defterin herkesin yeni satırlar ekleyebileceği 

156
00:10:15,861 --> 00:10:18,440
bir web sitesi gibi halka açık bir yerde olduğunu söyledim.

157
00:10:19,220 --> 00:10:23,223
Ancak bunun için merkezi bir konuma, yani web sitesini kimin barındırdığına, 

158
00:10:23,223 --> 00:10:26,760
yeni hat ekleme kurallarını kimin kontrol ettiğine güvenmek gerekir.

159
00:10:27,340 --> 00:10:31,960
Bu güveni ortadan kaldırmak için herkesin defterin kendi kopyasını tutmasını sağlayacağız.

160
00:10:32,660 --> 00:10:37,916
Daha sonra bir işlem yapmak istediğinizde, örneğin Alice Bob'a 100 dolar ödediğinde, 

161
00:10:37,916 --> 00:10:43,420
bunu insanların duyması ve kendi özel defterlerine kaydetmesi için dünyaya yayınlarsınız.

162
00:10:44,840 --> 00:10:49,260
Ancak daha fazlasını yapmadığınız sürece, bu sistem saçma bir şekilde kötüdür.

163
00:10:49,820 --> 00:10:52,740
Doğru defterin ne olduğu konusunda herkesin hemfikir olmasını nasıl sağlayabilirsiniz?

164
00:10:53,440 --> 00:10:57,190
Bob bir işlem aldığında, örneğin Alice Bob'a 10 dolar ödediğinde, 

165
00:10:57,190 --> 00:11:01,680
diğer herkesin aynı işlemi aldığından ve buna inandığından nasıl emin olabilir?

166
00:11:02,340 --> 00:11:07,200
Daha sonra Charlie'ye gidip işlem yapmak için aynı 10 doları kullanabilecek mi?

167
00:11:08,240 --> 00:11:12,060
Gerçekten, kendinizi sadece yayınlanan işlemleri dinlerken hayal edin.

168
00:11:12,760 --> 00:11:18,220
Diğer herkesin aynı işlemleri ve aynı sırayla kaydettiğinden nasıl emin olabilirsiniz?

169
00:11:19,420 --> 00:11:21,360
Bu gerçekten de meselenin özüdür.

170
00:11:21,600 --> 00:11:22,740
Bu ilginç bir bulmaca.

171
00:11:23,420 --> 00:11:27,992
İşlemlerin nasıl ve hangi sırayla kabul edileceği veya reddedileceğine dair 

172
00:11:27,992 --> 00:11:32,866
bir protokol oluşturabilir misiniz ki dünyada aynı protokolü takip eden herkesin 

173
00:11:32,866 --> 00:11:37,620
sizinkiyle aynı görünen bir kişisel deftere sahip olduğundan emin olabilesiniz?

174
00:11:38,300 --> 00:11:41,580
Orijinal Bitcoin makalesinde ele alınan sorun budur.

175
00:11:44,060 --> 00:11:48,339
Yüksek düzeyde, Bitcoin'in sunduğu çözüm, hangi deftere 

176
00:11:48,339 --> 00:11:52,160
en fazla hesaplama işi yapılmışsa ona güvenmektir.

177
00:11:52,540 --> 00:11:54,860
Bunun tam olarak ne anlama geldiğini açıklamak için bir dakikanızı ayıracağım.

178
00:11:55,320 --> 00:11:58,120
Kriptografik bir hash fonksiyonu içerir.

179
00:11:58,460 --> 00:12:02,927
Geliştireceğimiz genel fikir, hesaplama işini neye güvenileceğine dair bir 

180
00:12:02,927 --> 00:12:07,574
temel olarak kullanırsanız, hileli işlemlerin ve çelişkili defterlerin ortaya 

181
00:12:07,574 --> 00:12:12,280
çıkması için makul olmayan miktarda hesaplama gerektirmesini sağlayabilirsiniz.

182
00:12:13,040 --> 00:12:16,361
Tekrar hatırlatmak isterim ki, bu konu, böyle bir para birimini 

183
00:12:16,361 --> 00:12:19,580
kullanmak için herkesin bilmesi gerekenin çok ötesine geçiyor.

184
00:12:20,120 --> 00:12:22,962
Ancak bu gerçekten harika bir fikir ve bunu anlarsanız, 

185
00:12:22,962 --> 00:12:26,160
Bitcoin ve diğer kripto paraların kalbini de anlamış olursunuz.

186
00:12:28,100 --> 00:12:29,940
İlk olarak, hash fonksiyonu nedir?

187
00:12:30,800 --> 00:12:37,901
Bu fonksiyonlardan birinin girdileri herhangi bir tür mesaj veya dosya olabilir, 

188
00:12:37,901 --> 00:12:40,620
gerçekten 256 bit gibi görünür.

189
00:12:41,180 --> 00:12:47,660
Bu çıktıya mesajın hash'i veya özeti denir ve amaç rastgele görünmesidir.

190
00:12:48,000 --> 00:12:51,660
Rastgele değildir, belirli bir girdi için her zaman aynı çıktıyı verir.

191
00:12:52,200 --> 00:12:55,334
Ancak fikir şu ki, girdiyi biraz değiştirirseniz, 

192
00:12:55,334 --> 00:13:00,100
belki sadece bir karakteri düzenlerseniz, ortaya çıkan hash tamamen değişir.

193
00:13:00,820 --> 00:13:05,556
Aslında, burada gösterdiğim SHA256 adlı hash fonksiyonu için, 

194
00:13:05,556 --> 00:13:11,440
girdiyi biraz değiştirdiğinizde çıktının nasıl değiştiği tamamen öngörülemez.

195
00:13:12,440 --> 00:13:17,060
Gördüğünüz gibi, bu herhangi bir hash fonksiyonu değil, kriptografik bir hash fonksiyonu.

196
00:13:17,340 --> 00:13:20,660
Bu da ters yönde hesaplama yapmanın mümkün olmadığı anlamına gelir.

197
00:13:21,260 --> 00:13:28,979
Size 1 ve 0'lardan oluşan bir dizi gösterip SHA256 hash'ine bir girdi bulmanızı istersem, 

198
00:13:28,979 --> 00:13:34,640
tahmin edip kontrol etmekten daha iyi bir yönteminiz olmayacaktır.

199
00:13:35,700 --> 00:13:39,932
Ve yine, 256 tahminden geçmek için ne kadar hesaplama yapılması 

200
00:13:39,932 --> 00:13:43,900
gerektiğini hissetmek istiyorsanız, ek videoya bir göz atın.

201
00:13:44,380 --> 00:13:46,660
Aslında o şeyi yazarken çok eğlendim.

202
00:13:48,560 --> 00:13:52,152
Bu işlevin tam olarak nasıl çalıştığının ayrıntılarını gerçekten araştırırsanız, 

203
00:13:52,152 --> 00:13:55,213
tahmin etmek ve kontrol etmek zorunda kalmadan uygun girdiyi tersine 

204
00:13:55,213 --> 00:13:57,520
mühendislikle elde edebileceğinizi düşünebilirsiniz.

205
00:13:58,240 --> 00:14:00,840
Ama hiç kimse bunu yapmanın bir yolunu bulamadı.

206
00:14:01,600 --> 00:14:04,366
İlginçtir ki, ters yönde hesaplama yapmanın zor 

207
00:14:04,366 --> 00:14:06,960
olduğuna dair kesin ve katı bir kanıt yoktur.

208
00:14:07,620 --> 00:14:10,831
Yine de, modern güvenliğin büyük bir kısmı kriptografik hash 

209
00:14:10,831 --> 00:14:14,200
fonksiyonlarına ve bu özelliğe sahip oldukları fikrine bağlıdır.

210
00:14:14,940 --> 00:14:20,222
Tarayıcınızın şu anda YouTube ile ya da bankanızla yaptığı güvenli bağlantının 

211
00:14:20,222 --> 00:14:25,840
altında yatan algoritmalara bakacak olursanız, muhtemelen SHA256 adını göreceksiniz.

212
00:14:27,340 --> 00:14:32,109
Şu an için odak noktamız, böyle bir işlevin belirli bir işlem listesinin büyük 

213
00:14:32,109 --> 00:14:37,000
miktarda hesaplama çabasıyla ilişkili olduğunu nasıl kanıtlayabileceği olacaktır.

214
00:14:38,040 --> 00:14:42,661
Birinin size bir işlem listesi gösterdiğini ve şöyle dediğini düşünün: Hey, 

215
00:14:42,661 --> 00:14:47,708
özel bir sayı buldum, öyle ki bu sayıyı bu işlem listesinin sonuna koyduğunuzda ve 

216
00:14:47,708 --> 00:14:53,120
SHA256'yı tüm listeye uyguladığınızda, bu çıktının ilk 30 bitinin tamamı sıfır olacaktır.

217
00:14:54,100 --> 00:14:56,700
Sizce bu sayıyı bulmak onlar için ne kadar zor olmuştur?

218
00:14:58,060 --> 00:15:02,356
Rastgele bir mesaj için, bir hash'in art arda 30 sıfırla 

219
00:15:02,356 --> 00:15:07,180
başlama olasılığı 30'a 2'de 1'dir, yani yaklaşık milyarda 1'dir.

220
00:15:08,200 --> 00:15:11,209
SHA256 kriptografik bir hash fonksiyonu olduğundan, 

221
00:15:11,209 --> 00:15:15,840
böyle özel bir sayıyı bulmanın tek yolu sadece tahmin etmek ve kontrol etmektir.

222
00:15:16,660 --> 00:15:19,322
Yani bu kişi bu özel numarayı bulmadan önce neredeyse 

223
00:15:19,322 --> 00:15:22,380
milyarlarca farklı numarayı gözden geçirmek zorunda kalmıştır.

224
00:15:23,380 --> 00:15:26,131
Ve bu sayıyı öğrendikten sonra, doğrulamak gerçekten hızlıdır, 

225
00:15:26,131 --> 00:15:28,840
sadece hash'i çalıştırırsınız ve 30 sıfır olduğunu görürsünüz.

226
00:15:29,800 --> 00:15:33,688
Başka bir deyişle, büyük miktarda çalışma yaptıklarını doğrulayabilirsiniz, 

227
00:15:33,688 --> 00:15:36,400
ancak aynı çabayı kendiniz harcamak zorunda kalmadan.

228
00:15:37,200 --> 00:15:38,800
Buna çalışma kanıtı denir.

229
00:15:39,460 --> 00:15:44,220
Ve daha da önemlisi, tüm bu çalışmalar özünde işlem listesine bağlıdır.

230
00:15:44,900 --> 00:15:49,640
Bu işlemlerden birini çok az bile değiştirseniz, hash tamamen değişecektir.

231
00:15:50,080 --> 00:15:54,935
Dolayısıyla, yeni bir çalışma kanıtı bulmak için bir milyar tahmin daha yapmanız gerekir; 

232
00:15:54,935 --> 00:15:58,280
bu yeni sayı ile birlikte değiştirilmiş listenin hash'inin 30 

233
00:15:58,280 --> 00:16:00,600
sıfırla başlamasını sağlayan yeni bir sayı.

234
00:16:01,500 --> 00:16:04,100
Şimdi dağıtılmış defter durumumuza geri dönelim.

235
00:16:04,680 --> 00:16:07,673
Herkes orada işlemleri yayınlıyor ve doğru defterin 

236
00:16:07,673 --> 00:16:10,840
ne olduğu konusunda anlaşmaları için bir yol istiyoruz.

237
00:16:12,100 --> 00:16:15,337
Daha önce de belirttiğim gibi, orijinal Bitcoin makalesinin ardındaki fikir, 

238
00:16:15,337 --> 00:16:18,660
herkesin hangi deftere daha fazla emek harcanmışsa ona güvenmesini sağlamaktır.

239
00:16:19,280 --> 00:16:23,512
Bunun çalışma şekli, öncelikle belirli bir defteri bloklar halinde düzenlemektir; 

240
00:16:23,512 --> 00:16:27,280
burada her blok, bir iş kanıtı ile birlikte bir işlem listesinden oluşur.

241
00:16:27,720 --> 00:16:32,300
Yani, tüm bloğun hash'inin bir grup sıfırla başlaması için özel bir sayı.

242
00:16:33,140 --> 00:16:37,873
Şimdilik 60 sıfırla başlaması gerektiğini söyleyelim, 

243
00:16:37,873 --> 00:16:45,500
ancak daha sonra değiştirmek isteyebileceğiniz daha sistematik bir yola geri döneceğiz.

244
00:16:45,900 --> 00:16:50,040
Bir blok yalnızca bir çalışma kanıtına sahipse geçerli kabul edilir.

245
00:16:50,960 --> 00:16:54,779
Ayrıca, bu bloklar için standart bir düzen olduğundan emin olmak için, 

246
00:16:54,779 --> 00:16:59,460
bir bloğun başlığında bir önceki bloğun karmasını içermesi gerekecek şekilde yapacağız.

247
00:17:00,060 --> 00:17:04,360
Bu şekilde, geri dönüp bloklardan herhangi birini değiştirirseniz veya iki bloğun 

248
00:17:04,360 --> 00:17:07,926
sırasını değiştirirseniz, kendisinden sonra gelen bloğu değiştirir, 

249
00:17:07,926 --> 00:17:12,331
bu da bloğun hash'ini değiştirir, bu da kendisinden sonra gelen bloğu değiştirir ve 

250
00:17:12,331 --> 00:17:13,380
bu böyle devam eder.

251
00:17:13,980 --> 00:17:16,193
Bunun için tüm çalışmaların yeniden yapılması, 

252
00:17:16,193 --> 00:17:19,913
bu blokların her biri için hash'lerinin 60 sıfırla başlamasını sağlayacak yeni 

253
00:17:19,913 --> 00:17:21,420
bir özel sayı bulunması gerekir.

254
00:17:22,440 --> 00:17:25,522
Bloklar bu şekilde zincirleme olarak bir araya getirildiği için, 

255
00:17:25,522 --> 00:17:28,319
buna defter demek yerine blok zinciri demek daha yaygındır.

256
00:17:30,080 --> 00:17:31,901
Güncellenen protokolümüzün bir parçası olarak, 

257
00:17:31,901 --> 00:17:34,420
artık dünyadaki herkesin blok oluşturucu olmasına izin vereceğiz.

258
00:17:35,240 --> 00:17:37,983
Bunun anlamı, yayınlanan işlemleri dinleyecekleri, 

259
00:17:37,983 --> 00:17:41,587
bunları bir blokta toplayacakları ve daha sonra bu bloğun hashinin 

260
00:17:41,587 --> 00:17:46,160
60 sıfırla başlamasını sağlayan özel bir sayı bulmak için bir sürü iş yapacaklarıdır.

261
00:17:46,960 --> 00:17:49,900
Bulduklarında, buldukları bloğu yayınlarlar.

262
00:17:50,860 --> 00:17:54,716
Bir blok yaratıcısını tüm bu çalışmaları için ödüllendirmek amacıyla, 

263
00:17:54,716 --> 00:17:59,509
bir blok oluşturduğunda, bloğun tepesine çok özel bir işlem eklemesine izin vereceğiz; 

264
00:17:59,509 --> 00:18:02,540
bu işlemde, diyelim ki havadan 10 defter doları alacak.

265
00:18:03,080 --> 00:18:06,396
Buna blok ödülü denir ve işlemleri kabul edip etmeme 

266
00:18:06,396 --> 00:18:09,400
konusundaki olağan kurallarımıza bir istisnadır.

267
00:18:10,040 --> 00:18:12,920
Kimseden gelmiyor, bu yüzden imzalanması gerekmiyor.

268
00:18:13,660 --> 00:18:16,477
Bu aynı zamanda ekonomimizdeki toplam defter doları 

269
00:18:16,477 --> 00:18:19,620
sayısının her yeni blokla birlikte arttığı anlamına gelir.

270
00:18:20,900 --> 00:18:23,946
Blok oluşturmak genellikle madencilik olarak adlandırılır, 

271
00:18:23,946 --> 00:18:28,180
çünkü çok fazla iş yapmayı gerektirir ve ekonomiye yeni para birimleri kazandırır.

272
00:18:29,020 --> 00:18:32,596
Ancak madenciler hakkında bir şeyler duyduğunuzda veya okuduğunuzda, 

273
00:18:32,596 --> 00:18:36,016
gerçekte yaptıkları şeyin işlemleri dinlemek, bloklar oluşturmak, 

274
00:18:36,016 --> 00:18:39,955
bu blokları yayınlamak ve bunu yaptıkları için yeni parayla ödüllendirilmek 

275
00:18:39,955 --> 00:18:40,940
olduğunu unutmayın.

276
00:18:41,780 --> 00:18:46,070
Madencilerin bakış açısına göre, her blok minyatür bir piyango gibidir; 

277
00:18:46,070 --> 00:18:48,989
herkes sayıları olabildiğince hızlı tahmin eder, 

278
00:18:48,989 --> 00:18:53,637
ta ki şanslı bir kişi bloğun hashinin çok sayıda sıfırla başlamasını sağlayan 

279
00:18:53,637 --> 00:18:56,140
özel bir sayı bulana ve ödülü alana kadar.

280
00:18:57,620 --> 00:19:01,339
Bu sistemi sadece ödeme yapmak için kullanmak isteyen diğer herkes, 

281
00:19:01,339 --> 00:19:05,497
işlemleri dinlemek yerine, sadece madenciler tarafından yayınlanan blokları 

282
00:19:05,497 --> 00:19:09,600
dinlemeye ve blok zincirinin kendi kişisel kopyalarını güncellemeye başlar.

283
00:19:10,560 --> 00:19:14,493
Şimdi protokolümüze yapılan en önemli ekleme, birbiriyle çelişen 

284
00:19:14,493 --> 00:19:18,184
işlem geçmişlerine sahip iki farklı blok zinciri duyarsanız, 

285
00:19:18,184 --> 00:19:22,300
en uzun olana, üzerinde en çok çalışılmış olana öncelik vermenizdir.

286
00:19:22,860 --> 00:19:27,720
Eğer eşitlik varsa, birini daha uzun yapan ek bir blok duyana kadar bekleyin.

287
00:19:28,720 --> 00:19:33,520
Yani merkezi bir otorite olmamasına ve herkesin blok zincirinin kendi kopyasını tutmasına 

288
00:19:33,520 --> 00:19:38,160
rağmen, eğer herkes hangi blok zincirine daha fazla emek harcanmışsa onu tercih etmeyi 

289
00:19:38,160 --> 00:19:42,640
kabul ederse, merkezi olmayan bir fikir birliğine varmanın bir yolunu bulmuş oluruz.

290
00:19:43,560 --> 00:19:47,313
Bunun neden güvenilir bir sistem olduğunu görmek ve bir ödemenin yasal olduğuna 

291
00:19:47,313 --> 00:19:49,706
hangi noktada güvenmeniz gerektiğini anlamak için, 

292
00:19:49,706 --> 00:19:53,272
bu sistemi kullanan birini kandırmak için tam olarak ne gerekeceğini gözden 

293
00:19:53,272 --> 00:19:54,680
geçirmek gerçekten yararlıdır.

294
00:19:55,600 --> 00:19:59,338
Belki de Alice Bob'u sahte bir blokla kandırmaya çalışıyor, 

295
00:19:59,338 --> 00:20:04,011
yani ona 100 Ledger doları ödemesini içeren bir blok göndermeye çalışıyor, 

296
00:20:04,011 --> 00:20:07,002
ancak bu bloğu ağın geri kalanına yayınlamıyor, 

297
00:20:07,002 --> 00:20:11,240
bu şekilde herkes hala 100 Ledger dolarının onda olduğunu düşünüyor.

298
00:20:11,960 --> 00:20:15,215
Bunu yapmak için, her biri kendi bloğu üzerinde çalışan diğer 

299
00:20:15,215 --> 00:20:18,680
tüm madencilerden önce geçerli bir çalışma kanıtı bulması gerekir.

300
00:20:19,500 --> 00:20:24,820
Ve bu kesinlikle olabilir, belki Alice bu minyatür piyangoyu herkesten önce kazanır.

301
00:20:25,680 --> 00:20:30,346
Ancak Bob hala diğer madenciler tarafından yapılan yayınları duymaya devam edecektir, 

302
00:20:30,346 --> 00:20:34,308
dolayısıyla bu sahte bloğa inanmasını sağlamak için Alice'in Bob'un blok 

303
00:20:34,308 --> 00:20:38,378
zincirindeki bu özel çatala diğer madencilerden duyduğundan farklı bloklar 

304
00:20:38,378 --> 00:20:41,960
eklemeye devam etmek için tüm işi kendisinin yapması gerekecektir.

305
00:20:42,740 --> 00:20:48,260
Unutmayın, protokol gereği Bob her zaman bildiği en uzun zincire güvenir.

306
00:20:49,260 --> 00:20:53,480
Alice, şans eseri ağdaki diğer madencilerin toplamından daha 

307
00:20:53,480 --> 00:20:57,700
hızlı blok bulabilirse bunu birkaç blok boyunca sürdürebilir.

308
00:20:58,480 --> 00:21:03,337
Ancak tüm madenciler arasındaki hesaplama kaynaklarının %50'sine yakınına sahip 

309
00:21:03,337 --> 00:21:08,437
olmadığı sürece, diğer tüm madencilerin üzerinde çalıştığı blok zincirinin Alice'in 

310
00:21:08,437 --> 00:21:13,780
Bob'a aktardığı tek hileli blok zincirinden daha hızlı büyümesi olasılığı çok yüksektir.

311
00:21:15,000 --> 00:21:18,842
Yeterli zaman geçtikten sonra Bob, Alice'ten duyduklarını, 

312
00:21:18,842 --> 00:21:23,140
herkesin üzerinde çalıştığı daha uzun zincir lehine reddedecektir.

313
00:21:23,960 --> 00:21:28,920
Dikkat edin, bu, duyduğunuz yeni bir bloğa hemen güvenmemeniz gerektiği anlamına gelir.

314
00:21:29,500 --> 00:21:33,400
Bunun yerine, üzerine birkaç yeni blok eklenmesini beklemelisiniz.

315
00:21:33,820 --> 00:21:36,301
Daha uzun blok zincirlerini hala duymadıysanız, 

316
00:21:36,301 --> 00:21:40,540
bu bloğun herkesin kullandığı aynı zincirin bir parçası olduğuna güvenebilirsiniz.

317
00:21:42,120 --> 00:21:45,220
Böylece tüm ana fikirlere ulaşmış olduk.

318
00:21:45,780 --> 00:21:48,395
İş kanıtına dayalı bu dağıtılmış defter sistemi, 

319
00:21:48,395 --> 00:21:52,238
Bitcoin protokolünün ve diğer birçok kripto para biriminin aşağı yukarı 

320
00:21:52,238 --> 00:21:53,680
nasıl çalıştığını gösterir.

321
00:21:54,300 --> 00:21:56,160
Açıklığa kavuşturulması gereken birkaç ayrıntı var.

322
00:21:56,300 --> 00:21:59,223
Daha önce işin kanıtının, bloğun hash'inin 60 sıfırla 

323
00:21:59,223 --> 00:22:02,580
başlaması için özel bir sayı bulmak olabileceğini söylemiştim.

324
00:22:03,220 --> 00:22:07,528
Gerçek Bitcoin protokolünün çalışma şekli, yeni bir blok bulmanın 10 

325
00:22:07,528 --> 00:22:11,900
dakika sürmesi için bu sıfır sayısını periyodik olarak değiştirmektir.

326
00:22:12,780 --> 00:22:16,016
Dolayısıyla, ağa daha fazla madenci eklendikçe, 

327
00:22:16,016 --> 00:22:21,004
bu minyatür piyangonun her 10 dakikada sadece bir kazananı olacak şekilde 

328
00:22:21,004 --> 00:22:22,960
mücadele gittikçe zorlaşıyor.

329
00:22:23,920 --> 00:22:27,880
Birçok yeni kripto para birimi bundan çok daha kısa blok sürelerine sahiptir.

330
00:22:28,580 --> 00:22:32,460
Ve Bitcoin'deki tüm para nihayetinde bazı blok ödüllerinden gelir.

331
00:22:32,920 --> 00:22:35,740
Başlangıçta bu ödüller blok başına 50 Bitcoin idi.

332
00:22:36,140 --> 00:22:39,099
Bitcoin blok zincirine bakmayı kolaylaştıran Block 

333
00:22:39,099 --> 00:22:41,420
Explorer adlı harika bir web sitesi var.

334
00:22:41,960 --> 00:22:45,600
Ve zincirdeki ilk birkaç bloğa bakarsanız, madenciye verilen 50 

335
00:22:45,600 --> 00:22:49,240
Bitcoin ödülünden başka hiçbir işlem içermediklerini görürsünüz.

336
00:22:49,860 --> 00:22:56,340
Ancak her 210.000 blokta bir, yani yaklaşık her 4 yılda bir, bu ödül yarı yarıya azalır.

337
00:22:56,860 --> 00:23:00,140
Yani şu anda ödül blok başına 12,5 Bitcoin'dir.

338
00:23:00,720 --> 00:23:04,453
Ve bu ödül zaman içinde geometrik olarak azaldığı için, 

339
00:23:04,453 --> 00:23:09,320
hiçbir zaman 21 milyondan fazla Bitcoin'in var olmayacağı anlamına gelir.

340
00:23:10,280 --> 00:23:13,280
Ancak bu, madencilerin para kazanmayı bırakacağı anlamına gelmiyor.

341
00:23:13,820 --> 00:23:17,940
Blok ödülüne ek olarak, madenciler işlem ücretlerini de alabilirler.

342
00:23:18,520 --> 00:23:23,190
Bunun çalışma şekli, bir ödeme yaptığınızda, tamamen isteğe bağlı olarak, 

343
00:23:23,190 --> 00:23:28,240
bu ödemeyi içeren bloğun madencisine gidecek bir işlem ücreti ekleyebilmenizdir.

344
00:23:29,020 --> 00:23:32,501
Bunu yapabilmenizin nedeni, madencileri yayınladığınız 

345
00:23:32,501 --> 00:23:35,920
işlemi bir sonraki bloğa dahil etmeye teşvik etmektir.

346
00:23:36,440 --> 00:23:40,630
Bitcoin'de her blok yaklaşık 2400 işlemle sınırlıdır ve birçok 

347
00:23:40,630 --> 00:23:45,020
eleştirmen bunun gereksiz yere kısıtlayıcı olduğunu savunmaktadır.

348
00:23:45,860 --> 00:23:50,226
Karşılaştırma yapmak gerekirse, Visa saniyede ortalama 1700 işlem 

349
00:23:50,226 --> 00:23:55,320
gerçekleştiriyor ve saniyede 24.000'den fazla işlem yapma kapasitesine sahip.

350
00:23:56,020 --> 00:24:01,168
Bitcoin'deki bu nispeten yavaş işlem, madencilerin hangi işlemleri yeni bir bloğa dahil 

351
00:24:01,168 --> 00:24:06,200
etmeyi seçeceğini belirleyen şey olduğundan, daha yüksek işlem ücretlerine neden olur.

352
00:24:07,820 --> 00:24:11,500
Tüm bunlar kripto para birimlerini kapsamlı bir şekilde ele almaktan uzaktır.

353
00:24:12,160 --> 00:24:16,180
Daha dokunmadığım pek çok nüans ve alternatif tasarım seçeneği var.

354
00:24:16,640 --> 00:24:20,549
Ancak umudum, bunun daha fazla okumayla birkaç dal daha eklemek isteyen herkes 

355
00:24:20,549 --> 00:24:24,360
için istikrarlı bir WaitButWhy tarzı anlayış ağacı gövdesi sağlayabilmesidir.

356
00:24:25,180 --> 00:24:29,083
Başta da söylediğim gibi, bunun arkasındaki nedenlerden biri kripto para birimlerine 

357
00:24:29,083 --> 00:24:32,848
çok fazla para akmaya başlaması ve bunun iyi ya da kötü bir yatırım olup olmadığı 

358
00:24:32,848 --> 00:24:35,328
konusunda herhangi bir iddiada bulunmak istemesem de, 

359
00:24:35,328 --> 00:24:39,002
oyuna giren insanların en azından teknolojinin temellerini bilmesinin gerçekten 

360
00:24:39,002 --> 00:24:40,380
sağlıklı olduğunu düşünüyorum.

361
00:24:41,340 --> 00:24:43,485
Her zaman olduğu gibi, Patreon'da bu kanalı mümkün 

362
00:24:43,485 --> 00:24:45,420
kılan sizlere en içten teşekkürlerimi sunarım.

363
00:24:46,080 --> 00:24:48,856
Herkesin katkıda bulunabilecek durumda olmadığını anlıyorum, 

364
00:24:48,856 --> 00:24:52,771
ancak yine de yardım etmekle ilgileniyorsanız, bunu yapmanın en iyi yollarından biri, 

365
00:24:52,771 --> 00:24:56,640
başkaları için ilginç veya yararlı olabileceğini düşündüğünüz videoları paylaşmaktır.

366
00:24:57,280 --> 00:24:59,320
Bunu bildiğini biliyorum, ama gerçekten yardımı oluyor.

