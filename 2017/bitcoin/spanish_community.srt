1
00:00:04,220 --> 00:00:06,780
¿Qúe significa tener un Bitcoin?

2
00:00:07,440 --> 00:00:09,410
Mucha gente ha oido del Bitcoin que

3
00:00:09,410 --> 00:00:12,560
es una moneda completamente digital sin ningun gobierno que la emite

4
00:00:12,680 --> 00:00:16,120
y que no necesita de bancos que administren las cuentas y verifiquen transacciones

5
00:00:16,340 --> 00:00:19,080
y también que nadie sabe de verdad quien la inventó

6
00:00:19,440 --> 00:00:23,570
Aun así mucha gente no conoce la respuesta a esta pregunta, al menos no en su totalidad

7
00:00:24,340 --> 00:00:25,120
Para llegar ahí,

8
00:00:25,120 --> 00:00:29,780
y para asegurarnos de que los detalles técnicos subyacentes son entendidos

9
00:00:29,780 --> 00:00:32,340
lo que vamos a hacer es hacer un paso

10
00:00:32,340 --> 00:00:35,600
de como podrías haber inventado tu propia versión de Bitcoin

11
00:00:36,120 --> 00:00:40,050
Empezaremos controlando los pagos con tus amigos usando un libro de cuentas comunitario

12
00:00:40,370 --> 00:00:44,690
Y entonces, a medida que empiezas a desconfiar de tus amigos y tu entorno mas y mas,

13
00:00:44,910 --> 00:00:48,130
y si eres lo suficientemente listo como  para introducir algunos de conceptos de criptografía

14
00:00:48,130 --> 00:00:50,260
para ayudar a evitar tener que confiar en ellos

15
00:00:50,260 --> 00:00:53,310
terminas con lo que es conocido como una criptomoneda

16
00:00:53,700 --> 00:00:58,040
Verás. Bitcoin es solo el primer ejemplo de la implemetación de una criptomoneda

17
00:00:58,340 --> 00:01:02,840
Y ahora, hay miles más en intercambio con monedas tradicionales

18
00:01:03,040 --> 00:01:06,120
Seguir el camino para inventar la tuya propia puede ayudar a establecer las bases

19
00:01:06,360 --> 00:01:09,400
para entender algunas de las incorporaciones más recientes

20
00:01:09,440 --> 00:01:13,600
y reconocer por qué y cuando hay mas espacio para diferentes elecciones de diseño

21
00:01:14,050 --> 00:01:16,300
De hecho, una de las razones por las que elegí este tema es que

22
00:01:16,300 --> 00:01:20,060
en los ultimos años, ha habido una enorme cantidad de atención e inversión

23
00:01:20,060 --> 00:01:23,600
y, sinceramente, exageración dirigida a estas monedas

24
00:01:23,980 --> 00:01:27,720
Y no voy a comentar o especular con las actuales o futuras tasas de cambio

25
00:01:27,860 --> 00:01:29,160
pero creo que todos podemos estar de acuerdo en que

26
00:01:29,350 --> 00:01:33,640
cualquiera que quiera comprar una criptomonetad debería saber lo que es

27
00:01:33,920 --> 00:01:38,080
Y no lo digo solamente en el sentido de analogías con poca relación con la mineria de oro

28
00:01:38,080 --> 00:01:42,510
Quiero decir una descripción real de lo que hacen los ordenadores

29
00:01:42,510 --> 00:01:45,660
cuando enviamos, recibimos y creamos criptomonedas

30
00:01:46,800 --> 00:01:48,870
Por cierto, una cosa que vale la pena remarcar es que

31
00:01:48,870 --> 00:01:51,930
aunque tu y yo vamos a profundizar en los detalles aquí,

32
00:01:52,120 --> 00:01:53,830
y esto conlleva un tiempo significativo,

33
00:01:54,110 --> 00:01:58,770
en realidad no necesitas saber los detalles si solo quieres usar la criptomoneda

34
00:01:59,070 --> 00:02:03,290
al igual que no necesitas saber los detalles de lo que ocurre internamente cuando pasas una tarjeta de credito

35
00:02:03,680 --> 00:02:07,190
Como con cualquier pago digital, hay infinidad de aplicaciones

36
00:02:07,190 --> 00:02:11,260
que te permiten enviar y recibir las monedas sin pensar en lo que pasa

37
00:02:11,560 --> 00:02:14,720
La diferencia está en que la estructura subyacente

38
00:02:14,940 --> 00:02:17,300
no es un banco que verifica transacciones.

39
00:02:17,620 --> 00:02:21,970
Por contra es un sistema, muy bien pensado, de verificación sin confianza descentralizada

40
00:02:22,180 --> 00:02:24,850
basada en algunas de las matmáticas nacidas de la criptografia

41
00:02:25,910 --> 00:02:26,460
Pero para empezar,

42
00:02:26,460 --> 00:02:30,730
Quiero que dejeis de lado la idea de las criptomonedas y derivados por unos minutos

43
00:02:31,040 --> 00:02:35,810
Vamos a  comenzarla historia con los pies en la tierra: libros de cuentas y firmas digitales

44
00:02:36,400 --> 00:02:38,980
Si tu y tus amigos intercambiais dinero con bastante frecuencia

45
00:02:38,980 --> 00:02:41,660
ya sabes, pagar tu parte de la cuenta y así,

46
00:02:41,660 --> 00:02:44,250
puede ser molesto intercambiar dinero todo el rato.

47
00:02:44,700 --> 00:02:46,300
Así que podeis llevar un libro de cuentas

48
00:02:46,300 --> 00:02:50,190
que registra todos los pagos que tienes pensado hacer en un futuro

49
00:02:50,500 --> 00:02:52,470
Ya sabes, Alice paga a Bob 20$

50
00:02:52,470 --> 00:02:54,940
Bob paga a Charli 40$, cosas por el estilo

51
00:02:55,580 --> 00:02:58,920
Este libro de cuentas va a ser algo público y accesible a los demas,

52
00:02:58,920 --> 00:03:01,980
como una página web, donde cualquiera puede ir y añadir nuevas lineas

53
00:03:02,530 --> 00:03:04,320
Y digamos que al final de cada mes

54
00:03:04,320 --> 00:03:07,930
os reunís todos, mirais la lista de transacciones y saldais cuentas.

55
00:03:08,290 --> 00:03:11,450
Si has gastado más dinero del que has recibido, metes ese dinero en el bote

56
00:03:11,450 --> 00:03:14,560
y si recibes mas dinero del que has gastado, sacas ese dinero

57
00:03:15,390 --> 00:03:19,530
Así que el protocolo para ser parte de este sistema tan simple podría tener este aspecto:

58
00:03:19,950 --> 00:03:22,000
cualquiera puede añadir lineas al libro de cuentas

59
00:03:22,000 --> 00:03:25,340
y al final de cada mes todos reunís y saldaís cuentas.

60
00:03:26,240 --> 00:03:31,010
Un problema con un libro de cuentas público como este, es que cualquiera puede añadir una linea

61
00:03:31,010 --> 00:03:37,240
asi que ¿qué puede evitar que Bob escriba "Alice paga a Bob 100$" sin que Alice lo apruebe?

62
00:03:37,750 --> 00:03:41,260
¿Cómo podemos saber que todas estas transacciones

63
00:03:41,260 --> 00:03:43,400
son lo que el emisor queria que fuesen?

64
00:03:44,810 --> 00:03:48,850
Bueno, es aquí cuando llega el primer concepto sacado de la criptografia; firmas digitales.

65
00:03:49,460 --> 00:03:50,960
Como con las firmas en papel

66
00:03:50,960 --> 00:03:55,840
la idea es que Alice pueda añadir algo después de esa transacción

67
00:03:56,000 --> 00:03:58,900
que demuestre que ella lo ha visto y lo ha aprobado.

68
00:03:59,220 --> 00:04:03,500
Y debería ser inviable para los demas falsificar esa firma.

69
00:04:04,360 --> 00:04:08,790
Al principio, podría parecer que una firma digital no debería ser siquiera posible

70
00:04:09,130 --> 00:04:14,160
Quiero decir, cualesquiera que fuesen los datos que componen la firma podrian ser leidos y copiados por un ordenador,

71
00:04:14,390 --> 00:04:16,580
Asi que cómo evitas falsificaciones?

72
00:04:17,300 --> 00:04:22,200
Bueno, la forma en que funciona es que todos generan lo que se conoce como un "par clave pública - clave privada"

73
00:04:22,200 --> 00:04:24,410
cada uno de los cuales parece una cadena de bits

74
00:04:24,810 --> 00:04:27,280
La "clave privada" a veces también se la llama "clave secreta"

75
00:04:27,280 --> 00:04:31,670
y la podemos abreviar como "sk" y la clave pública como "pk". (ambas abreviaciones en inglés)

76
00:04:32,400 --> 00:04:36,480
Como el nombre sugiere, esta clave privada es algo que te quieres guardar para tí.

77
00:04:37,080 --> 00:04:41,950
En el mundo real, tu firma tiene el mismo aspecto sin importar que documento firmes

78
00:04:42,480 --> 00:04:45,080
Pero una firma digital es en realidad mucho mas fuerte,

79
00:04:45,080 --> 00:04:47,320
porque cambia para cada mensaje

80
00:04:47,880 --> 00:04:52,900
Parece una cadena de unos y ceros, comunmente de 256 bits;

81
00:04:53,310 --> 00:04:55,840
y alterando el mensaje lo mas mínimo

82
00:04:55,840 --> 00:04:59,760
cambia por completo el aspecto que la firma de ese mensaje tendría que tener

83
00:05:00,910 --> 00:05:02,720
Formalmente dicho

84
00:05:02,720 --> 00:05:08,720
producir una firma conlleva una función que depende tanto del mensaje en si como de tu clave privada.

85
00:05:09,260 --> 00:05:12,590
La clave privada asegura que solo tú puedes producir la firma

86
00:05:12,900 --> 00:05:15,180
y el hecho de que depende del mensaje

87
00:05:15,180 --> 00:05:19,870
significa que nadie puede simplemente copiar una de tus firmas y pegarla en otro mensaje.

88
00:05:21,120 --> 00:05:25,850
Junto con esto hay una segunda función que sirve para verificar que una firma es válida.

89
00:05:26,280 --> 00:05:28,420
Y es aquí donde entra en juego la clave pública.

90
00:05:29,170 --> 00:05:31,470
Todo lo que hace es devolver "verdadero" o "falso"

91
00:05:31,470 --> 00:05:34,740
para indicar que es una firma producida por la clave privada

92
00:05:34,740 --> 00:05:38,080
asociada con la clave pública que estas usando para la verificación.

93
00:05:38,610 --> 00:05:42,240
No entraré en los detalles de cómo funcionan estas funciones exactamente,

94
00:05:42,240 --> 00:05:47,590
pero la idea es que debería ser completamente inasquible encontrar una firma válida

95
00:05:47,590 --> 00:05:49,390
si no conoces la clave privada.

96
00:05:50,040 --> 00:05:54,970
Especificamente, no hay mejor estrategia que intentar adivinarla probando firmas aleatorias

97
00:05:54,970 --> 00:05:58,080
que puedes comprobar utilizando la clave pública que todo el mundo conoce

98
00:05:59,020 --> 00:06:03,370
Ahora piensa cuantas firmas hay con una longitud de 256 bits,

99
00:06:03,790 --> 00:06:06,810
eso es 2^256

100
00:06:07,350 --> 00:06:09,880
Este es un numero ridiculamente largo.

101
00:06:09,880 --> 00:06:13,900
LLamarlo astronomicamente largo sería dar demasiado crédito a la astronomía.

102
00:06:14,290 --> 00:06:19,880
De hecho, hice un video como suplemento solo para ilustrar lo enorme que es este número.

103
00:06:20,360 --> 00:06:21,860
Aquí, solamente digamos que

104
00:06:21,860 --> 00:06:25,470
cuando verificas que una firma para un mensaje dado es válido,

105
00:06:25,830 --> 00:06:30,420
puedes sentirte extremadamente confiado de que la única forma en que alguien pudiese haberlo producido

106
00:06:30,420 --> 00:06:35,360
es conociendo la clave secreta asociada con la clave publica que usaste para la verificación.

107
00:06:37,040 --> 00:06:40,960
Asegurarse de que la gente firma las transacciones en el libro de cuentas está bastante bien

108
00:06:40,960 --> 00:06:42,410
pero hay una pequeña laguna:

109
00:06:42,850 --> 00:06:46,880
si Alice firma una transaccion, como "Alice paga a Bob 100$",

110
00:06:46,880 --> 00:06:50,740
aunque Bob no puede falsificar la firma de Alice en un nuevo mensaje,

111
00:06:50,740 --> 00:06:53,890
el podría simplemente copiar la misma linea tantas veces como quisiera.

112
00:06:54,190 --> 00:06:57,400
Quiero decir, la combinación mensaje-firma sigue siendo válida.

113
00:06:57,970 --> 00:07:01,970
Para evitar esto, lo que hacemos es hacer que cuando firmas una transacción,

114
00:07:01,970 --> 00:07:07,310
el mensaje también tiene que incluir algun tipo de identificador único asociado a esa transacción.

115
00:07:07,880 --> 00:07:11,710
De esa forma, si Alice paga a Bob 100$ multiples veces,

116
00:07:11,710 --> 00:07:15,740
cada una de esas lineas en el libro de cuentas requiere de una firma completamente nueva.

117
00:07:16,960 --> 00:07:17,880
Muy bien, genial!

118
00:07:18,160 --> 00:07:22,380
Las firmas digitales eliminan en gran parte la confianza en este protocolo inicial

119
00:07:22,380 --> 00:07:24,910
pero si aun así, si quisieses realmente hacer esto,

120
00:07:24,910 --> 00:07:27,460
estarias dependiendo de un codigo de honor, por decirlo así.

121
00:07:27,720 --> 00:07:30,460
Es decir, estas confiando en que todos seguiran adelante

122
00:07:30,470 --> 00:07:33,010
y saldarán sus cuentas en métalico al final de cada mes.

123
00:07:33,620 --> 00:07:37,590
Qué pasaría si por ejemplo. Charlie acumulase miles de dolares en deudas

124
00:07:37,590 --> 00:07:39,410
y se niega a aparecer

125
00:07:40,240 --> 00:07:43,270
El único motivo real para volver al dinero en efectivo para saldar las cuentas

126
00:07:43,270 --> 00:07:47,300
es si algunas personas(te estoy mirando a ti Charlie) deben mucho dinero.

127
00:07:48,010 --> 00:07:52,440
Asi que quizás, tienes la brillante idea de que nunca tienes que saldar cuentas en efectivo

128
00:07:52,440 --> 00:07:56,740
mientras que tengas una forma de evitar que la gente gaste mucho más de lo que recibe.

129
00:07:57,390 --> 00:08:01,280
Quizás lo que haces es empezar por hacer que todo el mundo meta en el bote 100$,

130
00:08:01,580 --> 00:08:04,080
y entonces haces que las primeras lineas del libro de cuentas sean

131
00:08:04,080 --> 00:08:08,460
"Alice recibe 100$", "Bob recibe 100$", "Charlie recibe 100$", etc.

132
00:08:09,170 --> 00:08:12,560
Ahora, simplemente no aceptes ninguna transacción

133
00:08:12,560 --> 00:08:16,210
en la que alguien esta gastando mas de lo que ya tiene en el libro de cuentas.

134
00:08:16,850 --> 00:08:20,030
Por ejemplo si las primeras dos transacciones son

135
00:08:20,030 --> 00:08:24,240
"Charlie paga a Alice $50" y "Charlie paga a Bob $50",

136
00:08:24,480 --> 00:08:29,690
Si intentase añadir "Charlie te paga 20$" ,eso sería inválido,

137
00:08:29,690 --> 00:08:32,100
tan inválido como si nunca lo hubiese firmado

138
00:08:33,010 --> 00:08:35,940
Date cuenta, que esto significa que para verificar una transacción

139
00:08:35,940 --> 00:08:39,600
necesitas saber el historial completo de transacciones hasta ese punto.

140
00:08:40,140 --> 00:08:43,970
Y esto también va a ser más o menos cierto para las criptomonedas

141
00:08:43,970 --> 00:08:46,260
aunque todavía hay espacio para mejoras.

142
00:08:48,750 --> 00:08:50,120
Lo que es interesante aquí es que

143
00:08:50,120 --> 00:08:55,900
este paso elimina la conexión entre el libro de contabilidad y dolares reales.

144
00:08:56,310 --> 00:08:59,680
En teorría, si todas las personas del mundo utilizasen este libro de cuentas,

145
00:08:59,680 --> 00:09:03,640
podrías vivir toda tu vida mandando y recibiendo dinero en este libro de cuentas

146
00:09:03,640 --> 00:09:06,960
sin tener que convertir a dolares reales.

147
00:09:07,430 --> 00:09:08,920
De hecho, para enfatizar este punto,

148
00:09:08,920 --> 00:09:14,310
vamos a empezar a llamr a las cantidades en este libro de cuentas como "dolares de cuenta", o "LD" para abreviar

149
00:09:14,790 --> 00:09:18,900
Por supuesto eres libre de intercambiar dolares de cuenta por dolares reales.

150
00:09:19,070 --> 00:09:22,750
Por ejemplo, quizas Alice da a Bob un billete de 10$ en el mundo real

151
00:09:22,750 --> 00:09:26,000
a cambio de que el añada y firme la transacción

152
00:09:26,000 --> 00:09:29,830
"Bob paga a Alice 10LD" a el libro de cuentas.

153
00:09:30,820 --> 00:09:34,490
Pero intercambios como ese, no van a estar garantizados por el protocolo.

154
00:09:34,840 --> 00:09:38,510
Ahora esto es análogo a como podrías cambiar dolares por euros,

155
00:09:38,510 --> 00:09:40,830
o a cualquier otra moneda en el mercado,

156
00:09:41,160 --> 00:09:44,080
es ahora una cosa independiente.

157
00:09:44,690 --> 00:09:50,380
Este es el primer punto importante a entender sobre Bitcoin o cualquier criptomoneda:

158
00:09:50,850 --> 00:09:56,320
Lo que es, es un libro de cuentas, el historial de transacciones es la moneda

159
00:09:57,110 --> 00:09:58,440
Por supuesto, con Bitcoin,

160
00:09:58,440 --> 00:10:01,970
el dinero no entra al libro de cuentas cuando la gente compra usando dinero real para entrar

161
00:10:01,970 --> 00:10:05,040
ya llegaré a como nuevo dinero entra al libro de cuentas en unos minutos,

162
00:10:05,530 --> 00:10:08,710
pero antes de eso, hay en realidad una diferencia aun más importante

163
00:10:08,710 --> 00:10:12,590
entre nuestro sistema actual de dolares de cuenta y cómo las criptomonedas funcionan--

164
00:10:13,000 --> 00:10:16,080
Hasta el momento, he dicho que el libro de cuentas esta en algún espacio público,

165
00:10:16,080 --> 00:10:18,720
como una página web. donde cualquiera puede añadir nuevas líneas.

166
00:10:19,220 --> 00:10:22,080
Pero eso requeriría confiar en una ubicación central,

167
00:10:22,080 --> 00:10:24,240
a saber "quién aloja la página"?

168
00:10:24,240 --> 00:10:27,060
"quién controla las reglas para añadir nuevas líneas"?

169
00:10:27,550 --> 00:10:32,260
Para eliminar la confianza de la ecuación, haremos que todo el mundo guarde su propia copia del libro de cuentas.

170
00:10:32,760 --> 00:10:37,100
Entonces cuando quieres hacer una transacción, como Alice paga a Bob 100 LD.

171
00:10:37,400 --> 00:10:39,960
lo que haces es emitirla al resto de participantes

172
00:10:39,960 --> 00:10:43,740
para que la reciban y almacenen en su copia privada del libro de cuentas.

173
00:10:44,850 --> 00:10:49,460
Pero, a no ser que hagas algo más este sistema es ridiculamente malo.

174
00:10:49,800 --> 00:10:53,040
¿Cómo podrías conseguir que todos estén de acuerdo en cual es el libro de cuentas correcto?

175
00:10:53,400 --> 00:10:57,620
Cuando Bob recibe una transacción, como Alice paga a Bob 10 LD,

176
00:10:57,620 --> 00:11:01,960
cómo puede estar seguro de que todos los demás han recibido y se creen esa transacción

177
00:11:02,290 --> 00:11:07,550
para que más tarde pueda ir a Charlie y usar esos mismos 10 LD para hacer una transacción?

178
00:11:08,300 --> 00:11:12,480
De verdad, imaginate recibiendo transacciones emitidas

179
00:11:12,950 --> 00:11:18,460
cómo puedes estar seguro de que todos los demás están anotando las mismas transacciones y en el mismo orden?

180
00:11:19,460 --> 00:11:21,540
Este es realmente el meollo del asunto.

181
00:11:21,540 --> 00:11:23,000
Es un problema interesante.

182
00:11:23,450 --> 00:11:27,910
¿Puedes pensar en un protocolo para aceptar o rechazar transacciones

183
00:11:27,910 --> 00:11:31,160
y en qué orden, para que puedas estar seguro de que

184
00:11:31,160 --> 00:11:34,860
todos los demás que están utilizando ese protocolo

185
00:11:34,860 --> 00:11:38,000
tengan un libro de cuentas personal idéntico al tuyo?

186
00:11:38,510 --> 00:11:41,800
Este es el problema abordado en el artículo original de Bitcoin.

187
00:11:44,530 --> 00:11:47,640
A un alto nivel, la solución que ofrece Bitcoin es

188
00:11:47,640 --> 00:11:52,040
confiar en el libro de cuentas que ha llevado el mayor trabajo computacional.

189
00:11:52,600 --> 00:11:55,240
Haré un pequeño inciso para explicar exactamente lo que siginifica esto,

190
00:11:55,240 --> 00:11:58,290
tiene que ver con una cosa llamada "función criptográfica hash".

191
00:11:58,510 --> 00:12:00,540
La noción general a la que queremos llegar

192
00:12:00,540 --> 00:12:04,910
es que si usas trabajo computacional como base para decidir en queéconfiar,

193
00:12:05,310 --> 00:12:08,810
puedes hacerlo de tal forma que las transacciones fraudulentas y los libros de cuentas distintos

194
00:12:08,810 --> 00:12:12,400
requeririan una cantidad inviable de computaciones para llevar a cabo.

195
00:12:12,990 --> 00:12:15,930
De nuevo, te recuerdo que estamos entrando en la maleza

196
00:12:15,930 --> 00:12:19,750
mas allá de lo que cualquiera necesita saber para usar una moneda como esta,

197
00:12:20,130 --> 00:12:21,600
pero es una idea muy interesante!

198
00:12:21,600 --> 00:12:26,950
Y si la entiendes, entiendes el núcleo de Bitcoin y todas las demas criptomonedas.

199
00:12:27,990 --> 00:12:30,230
Pero lo primero es lo primero, qué es una función hash?

200
00:12:30,750 --> 00:12:34,300
La entrada para una de estas funciones puede ser cualquier tipo de mensaje o archivo

201
00:12:34,300 --> 00:12:35,540
no importa en realidad.

202
00:12:35,730 --> 00:12:40,820
Y la salida es una cadena de bits de longitud fija, como 256 bits.

203
00:12:41,420 --> 00:12:45,040
Esta salida se llama el "hash" o la "digestion" del mensaje.

204
00:12:45,380 --> 00:12:47,980
Y la intención es que parezca aleatorio.

205
00:12:48,220 --> 00:12:51,850
No es aleatorio- siempre da la misma salida para una entrada dada.

206
00:12:52,290 --> 00:12:53,120
Pero la idea es que

207
00:12:53,120 --> 00:12:57,640
si cambiases lo más mínimo la entrada, quizás editando uno de los carácteres

208
00:12:57,940 --> 00:13:00,420
el hash resultante cambia por completo.

209
00:13:00,800 --> 00:13:05,460
De hecho, para el hash que estoy enseñando aquí, llamado SHA256,

210
00:13:05,980 --> 00:13:12,020
La forma en que la salida cambia a medida que alteras un poco la entrada es completamente impredecible.

211
00:13:12,490 --> 00:13:15,080
Verás, esta no es cualquier función hash,

212
00:13:15,080 --> 00:13:17,360
es una función criptográfica hash.

213
00:13:17,360 --> 00:13:20,830
Esto significa que es inviable calcularla en el sentido contrario.

214
00:13:21,320 --> 00:13:23,620
Si yo te enseño una cadena de unos y ceros

215
00:13:23,620 --> 00:13:25,860
y te pido que encuentres una entrada

216
00:13:25,860 --> 00:13:31,320
tal que el hash SHA256 de esa entrada devuelva exactamente esta cadena de bits,

217
00:13:31,640 --> 00:13:34,910
no tendrás mejor método que adivinar y comprobar.

218
00:13:35,770 --> 00:13:42,260
Y de nuevo, si quieres hacerte una idea de cuanta computación seria necesaria para recorrer 2^256 intentos,

219
00:13:42,260 --> 00:13:44,060
echale un vistazo al video extra.

220
00:13:44,320 --> 00:13:46,880
De hecho, me lo pasé demasiado bien escribiéndolo.

221
00:13:48,960 --> 00:13:54,040
Podrías pensar que si simplemente profundizases en los detalles de cómo funciona exactamente esta función,

222
00:13:54,040 --> 00:13:57,680
podrías mediante ingeniería inversa encontrar la entrada correcta sin tener que adivinar y comprobar.

223
00:13:58,270 --> 00:14:00,870
Pero nadie ha encontrado una forma de hacerlo.

224
00:14:01,550 --> 00:14:07,270
Es interesante mencionar, que no hay una prueba dura y rigurosa de que es difícil de computar en sentido contrario.

225
00:14:07,600 --> 00:14:10,300
Y aun asi, una enorme cantidad de la seguridad moderna

226
00:14:10,300 --> 00:14:14,500
depende de funciones criptográficas hash y de la idea de que tienen esta propiedad.

227
00:14:15,040 --> 00:14:18,140
Si buscases que algoritmos subyacen bajo la conexión segura

228
00:14:18,140 --> 00:14:20,580
que tu navegador está realizando con YouTube ahora mismo,

229
00:14:20,580 --> 00:14:22,210
o que realiza con tu banco,

230
00:14:22,580 --> 00:14:25,990
lo más seguro es que vieses aparecer el nombre SHA256.

231
00:14:27,390 --> 00:14:29,360
De momento, nuestra atención estará en

232
00:14:29,360 --> 00:14:33,810
cómo dicha función puede probar que una lista de transacciones en particular

233
00:14:33,810 --> 00:14:37,070
está asociado con un gran esfuerzo computacional.

234
00:14:38,030 --> 00:14:41,240
Imagina que alguien te enseña una lista de transacciones, y te dicen

235
00:14:41,240 --> 00:14:43,220
"Eh! He encontrado un número especial

236
00:14:43,220 --> 00:14:47,010
tal que cuando lo pones al final de esta lista transacciones

237
00:14:47,010 --> 00:14:50,090
y le aplicas SHA256 al archivo entero

238
00:14:50,090 --> 00:14:53,570
los primeros 30 bits de la salida son ceros!

239
00:14:54,080 --> 00:14:57,110
¿Cómo de dificil piensas que fue para ellos encontrar ese número?

240
00:14:58,060 --> 00:14:59,520
Bien, para un mensaje aleatorio,

241
00:14:59,520 --> 00:15:05,830
la probabilidad de que un hash empiece con 30 ceros sucesivos es 1 de cada 2^30,

242
00:15:05,830 --> 00:15:07,650
aproximadamente 1 en 1000 millones.

243
00:15:08,150 --> 00:15:12,110
Y como SHA256 es una función criptográfica,

244
00:15:12,110 --> 00:15:16,170
la única forma de encontrar un número especial como ese es adivinando y comprobando.

245
00:15:16,640 --> 00:15:20,880
Asi que esta persona casi seguro que ha tenido que comprobar 1000 millones de números distintos

246
00:15:20,880 --> 00:15:22,670
antes de encontrar este número especial.

247
00:15:23,360 --> 00:15:24,830
Y una vez que concoes este número,

248
00:15:24,830 --> 00:15:29,110
se puede verificar bastante rápido, simplemente aplicas y compruebas que tiene 30 ceros.

249
00:15:29,800 --> 00:15:33,900
Así que en otras palabras, puedes verificar que les ha llevado una gran cantidad de trabajo,

250
00:15:33,900 --> 00:15:36,720
pero sin tener que realizar ese mismo esfuerzo tu mismo.

251
00:15:37,330 --> 00:15:39,040
Esto se conoce como una "prueba de trabajo".

252
00:15:39,430 --> 00:15:44,610
Y lo más importane, todo este trabajo esta intrinsecamente conectado a la lista de transacciones.

253
00:15:44,930 --> 00:15:48,080
Si modificas ligeramente una de esas transacciones,

254
00:15:48,080 --> 00:15:49,890
alteraría por completo el hash,

255
00:15:50,150 --> 00:15:54,200
asi que tendrías que comprobar otros 1000 millones de números para encontrar una nueva "prueba de trabajo"

256
00:15:54,200 --> 00:15:55,670
un nuevo número

257
00:15:55,670 --> 00:16:00,880
tal que el hash de la lista alterada junto con este nuevo número comienza con 30 ceros.

258
00:16:01,530 --> 00:16:04,400
Ahora volvamos a nuestro problema con los libros de cuentas distribuidos:

259
00:16:04,690 --> 00:16:07,240
todo el mundo esta emitiendo transacciones,

260
00:16:07,240 --> 00:16:11,080
y queremos una forma para que todos esten de acuerdo en cual es libro de cuentas correcto.

261
00:16:11,490 --> 00:16:14,920
Como he dicho, la idea principal tras el artículo de Bitcoin

262
00:16:14,920 --> 00:16:18,700
es hacer que todos confien en el libro de cuentas que tenga el mayor trabajo detrás.

263
00:16:19,370 --> 00:16:23,200
La forma en que esto funciona es primero organizar un libro de cuentas dado en bloques,

264
00:16:23,200 --> 00:16:27,410
donde cada bloque consiste de una lista de transacciones junto con una prueba de trabajo,

265
00:16:27,840 --> 00:16:32,600
este es un numero especial tal que el hash de todo el bloque comienza con unos cuantos ceros.

266
00:16:33,190 --> 00:16:37,280
Por el momento, digamos que tiene que empezar con... 60 ceros,

267
00:16:37,280 --> 00:16:41,040
pero más tarde volveremos con una forma más sistemática que podrías querer utilizar para elegir ese numero.

268
00:16:41,840 --> 00:16:46,800
De la misma forma que una transaccion solo es considerada válida cuando está firmada por el emisor,

269
00:16:46,800 --> 00:16:50,220
un bloque solo es considerado válido si contiene una prueba de trabajo.

270
00:16:51,040 --> 00:16:54,700
Y también, para asegurarnos que estos bloques siguen un orden estandar,

271
00:16:54,700 --> 00:16:59,760
lo haremos de tal forma que un bloque tiene que contener el hash del bloque anterior como encabezamiento.

272
00:17:00,150 --> 00:17:03,550
De esa forma si quisieses retorceder y cambiar cualquiera de esos bloques

273
00:17:03,550 --> 00:17:05,550
o intercambiar el orden de dos bloques,

274
00:17:05,890 --> 00:17:08,230
cambiaría el bloque que viene despues de él,

275
00:17:08,230 --> 00:17:10,010
lo que cambiaría el hash de ese bloque,

276
00:17:10,010 --> 00:17:13,070
lo que cambiaria el hash del que viene a continuación así sucesivamente.

277
00:17:14,040 --> 00:17:16,370
Eso requeriría rehacer todo el trabajo,

278
00:17:16,370 --> 00:17:21,660
encontrar un nuevo numero especial para cada uno de esos bloques que hace que su hash empiece por 60 ceros.

279
00:17:22,410 --> 00:17:25,040
Debido a que los bloques estan encadenados de esta forma,

280
00:17:25,040 --> 00:17:28,800
en vez de llamarlo libro de cuentas, es comúnmente llamado "cadena de bloques"

281
00:17:30,050 --> 00:17:31,920
Como parte de nuestro protocolo actualizado,

282
00:17:31,920 --> 00:17:34,780
permitiremos a cualquier persona del mundo ser un creador de bloques.

283
00:17:35,230 --> 00:17:38,950
Lo que eso significa es que van a estar escuchando transacciones siendo emitidas,

284
00:17:38,950 --> 00:17:40,620
las recogeran en un bloque,

285
00:17:40,620 --> 00:17:42,110
y a continuación llevar a cabo una gran cantidad de trabajo

286
00:17:42,110 --> 00:17:46,400
para encontrar un número especial que haga que el hash de ese bloque empiece por 60 ceros.

287
00:17:46,900 --> 00:17:50,210
Y una vez que lo han encontrado, emiten el bloque que han encontrado.

288
00:17:50,970 --> 00:17:53,490
Para recompensar a un creador de bloques por todo este trabajo,

289
00:17:53,490 --> 00:17:55,270
cuando elabora un bloque,

290
00:17:55,270 --> 00:17:59,070
le permitieremos incluir una transaccion muy especial al principio de este,

291
00:17:59,070 --> 00:18:02,780
en la que recibe, digamos 10 LD, de la nada.

292
00:18:03,470 --> 00:18:05,230
Esto se llama  "recompensa por bloque",

293
00:18:05,230 --> 00:18:09,800
y es una excepción a nuestras reglas habituales sobre si aceptar o rechazar transacciones.

294
00:18:10,010 --> 00:18:13,190
No viene de nadie, así que no tiene que estar firmada.

295
00:18:13,600 --> 00:18:19,720
Y también significa que el número total de dolares de cuenta en nuestra economía aumenta con cada nuevo bloque.

296
00:18:20,880 --> 00:18:23,200
Crear bloques se conoce comunmente como "minear",

297
00:18:23,200 --> 00:18:25,220
dado que requiere realizar un montón de trabajo

298
00:18:25,220 --> 00:18:28,460
e introduce nuevos fragmentos de moneda en la economía.

299
00:18:29,070 --> 00:18:31,470
Pero cuando oyes o lees sobre los "mineros",

300
00:18:31,470 --> 00:18:33,730
ten en cuenta que lo que están haciendo en realidad es

301
00:18:33,730 --> 00:18:36,630
recibiendo transacciones, creando bloques,

302
00:18:36,630 --> 00:18:40,900
emitiendo esos bloques, y siendo recompensados con dinero nuevo por hacerlo.

303
00:18:41,940 --> 00:18:46,230
Desde la perspectiva de los mmineros, cada bloque es como una loteria en miniatura,

304
00:18:46,230 --> 00:18:49,140
donde todo el mundo esta adivinando numeros lo más rápido que pueden

305
00:18:49,140 --> 00:18:52,460
hasta que un afortunado encuentra un número especial

306
00:18:52,460 --> 00:18:55,310
que hace que el hash del bloque comience con tantos ceros

307
00:18:55,310 --> 00:18:56,370
y son recompensados.

308
00:18:58,040 --> 00:19:01,200
Para los demás que solo quieren usar el sistema para hacer pagos,

309
00:19:01,200 --> 00:19:03,430
en vez de recibir transacciones,

310
00:19:03,430 --> 00:19:07,080
lo que hacen es recibir bloques emitidos por los mineros,

311
00:19:07,080 --> 00:19:10,010
y actualizar sus propias copias personales de la cadena de bloques.

312
00:19:10,510 --> 00:19:13,320
Ahora el añadido clave a nuestro protocolo es que

313
00:19:13,320 --> 00:19:17,930
si recibes dos cadenas de bloques con historiales de transacciones que difieren

314
00:19:18,310 --> 00:19:22,350
eliges el más largo, el que más trabajo halla conllevado.

315
00:19:22,900 --> 00:19:27,930
Si hay un empate, simplemente espera hasta que recibas un bloque adicional que haga uno de los dos más largo.

316
00:19:28,720 --> 00:19:33,910
Así que, aunque no haya una autoridad central y todos poseen su propia copia de la cadena de bloques,

317
00:19:34,180 --> 00:19:39,260
si todo el mundo se pone de acuerdo en dar preferencia a la cadena que tenga más trabajo dedicado,

318
00:19:39,660 --> 00:19:42,980
tenemos una forma de llegar a un consenso descentralizado.

319
00:19:43,640 --> 00:19:45,840
Para ver por que esto es un sistema digno de confianza,

320
00:19:45,840 --> 00:19:49,450
y para entender en que momento deberías confiar en que un pago es legal,

321
00:19:49,450 --> 00:19:55,070
ayuda bastante seguir paso a paso exactamente lo que haría falta hacer para engañar a alguien utilizando este sistema.

322
00:19:55,650 --> 00:19:58,690
Quizás Alice esta intentando engañar a Bob con un bloque fraudulento,

323
00:19:59,030 --> 00:20:04,080
digamos que intenta enviarle un bloque que incluye un pago en el que le paga 100 LD

324
00:20:04,420 --> 00:20:07,260
pero sin enviar ese bloque al resto de la red.

325
00:20:07,620 --> 00:20:11,440
De esa forma, el resto piensa que todavía tiene esos 100 LD.

326
00:20:12,150 --> 00:20:17,250
Para hacer esto, tendría que encontrar una prueba de trabajo válida antes que el resto de mineros,

327
00:20:17,250 --> 00:20:18,860
cada uno trabajando en su propio bloque.

328
00:20:19,410 --> 00:20:20,990
Y realmente, eso podría pasar!

329
00:20:20,990 --> 00:20:24,980
Quizás Alice tiene la suerte de ganar esta mini loteria antes que todos los demas.

330
00:20:25,680 --> 00:20:29,770
Pero Bob va a seguir escuchando las emisiones del resto de mineros,

331
00:20:30,080 --> 00:20:32,640
así que para que siga creyendo en este bloque fraudulento,

332
00:20:32,640 --> 00:20:35,440
Alice tendría que hacer todo el trabajo sola,

333
00:20:35,440 --> 00:20:39,440
y seguir añadiendo bloques en esta segunda cadena que Bob iba a tener.

334
00:20:39,440 --> 00:20:42,330
Esta es differente de lo que esta recibiendo del resto de mineros.

335
00:20:42,720 --> 00:20:48,400
Recuerda que, debido al protocolo, Bob siempre confia en la cadena más larga que reciba.

336
00:20:49,230 --> 00:20:51,960
Alice podría continuar manteniendo el engaño durante unos pocos bloques

337
00:20:51,960 --> 00:20:55,140
si, por casualidad, encontrase los bloques mas rápido

338
00:20:55,140 --> 00:20:58,050
que el resto de mineros de la red combinados.

339
00:20:58,560 --> 00:21:03,710
Pero a no ser que tenga cerca de el 50% de los recursos computacionales de toda la red,

340
00:21:04,080 --> 00:21:06,570
la probabilidad de que

341
00:21:06,570 --> 00:21:09,650
la cadena de bloques en que están trabajando el resto de mineros

342
00:21:09,650 --> 00:21:14,190
crezca más rapido, que la otra cadena que Alice esta enviando a Bob, juega en su contra.

343
00:21:15,200 --> 00:21:19,820
Así que despues de un tiempo, Bob empezará a rechazar lo que esta recibiendo de Alice

344
00:21:19,820 --> 00:21:23,100
en favor de la cadena más larga en que está trabajando el resto.A

345
00:21:24,020 --> 00:21:29,250
Date cuenta, de que esto siginifica que, no es necesario que confies en un bloque nuevo al momento;

346
00:21:29,620 --> 00:21:33,420
en cambio, puedes esperar a que lleguen nuevos bloques conectados con este.

347
00:21:33,890 --> 00:21:36,610
Si todavía no has recibido ninguna cadena más larga,

348
00:21:36,610 --> 00:21:40,860
puedes estar seguro de que ese bloque es parte de la misma cadena que la que usan los demás.

349
00:21:42,250 --> 00:21:45,520
Y con esto, ya hemos atacado todas las ideas principales.

350
00:21:45,850 --> 00:21:49,190
Este sistema de libro de cuentas distribuido basado en una prueba de trabajo

351
00:21:49,190 --> 00:21:53,810
es más o menos como el protocolo Bitcoin funciona y como muchas otras criptomonedas funcionan.

352
00:21:54,260 --> 00:21:56,280
Quedan todavía unos pocos detalles que cerrar.

353
00:21:56,280 --> 00:21:59,480
Antes dije que la prueba de trabajo  podría ser encontrar un número especial

354
00:21:59,480 --> 00:22:02,830
tal que el hash del bloque empiece con 60 ceros.

355
00:22:03,210 --> 00:22:08,400
Bueno, la manera en que funciona con Bitcoin es cambiando periodicamente el numero de ceros

356
00:22:08,400 --> 00:22:12,080
de tal forma que debería llevar de media 10 minutos  encontrar un bloque nuevo.

357
00:22:12,800 --> 00:22:15,730
Entonces a medida que más y más mineros entran a la red,

358
00:22:16,010 --> 00:22:18,230
el reto se vuelve más y más dificil,

359
00:22:18,230 --> 00:22:23,170
de tal forma que la mini loteria solo tiene un ganador cada 10 minutos.

360
00:22:23,950 --> 00:22:28,080
Muchas criptomonedas más modernas tienen de media tiempos más cortos que este.

361
00:22:28,660 --> 00:22:32,770
Y todo el dinero en Bitcoin en un comienzo viene de la recompensa por bloque.

362
00:22:33,030 --> 00:22:35,890
Al principio, estas recompensas eran 50 Bitcoins por bloque.

363
00:22:36,190 --> 00:22:39,380
De hecho hay una muy buena página a la que puedes ir llamada "Block Explorer"

364
00:22:39,380 --> 00:22:41,760
que facilita visualizar la cadena de Bitcoin.

365
00:22:41,990 --> 00:22:45,030
Y si miras a los primeros bloques en la cadena,

366
00:22:45,030 --> 00:22:49,520
no contienen otra transacción que los 50 Bitcoin de recompensa al minero.

367
00:22:49,970 --> 00:22:54,800
Pero cada 210.000 bloques, cada 4 años aproximadamente,

368
00:22:54,800 --> 00:22:56,890
esa recompensa se reduce a la mitad.

369
00:22:56,890 --> 00:23:00,390
De tal forma que, ahora mismo la recompensa por bloque es 12,5.

370
00:23:00,740 --> 00:23:04,340
Y debido a que esta recompensa desciende geometricamente en el tiempo,

371
00:23:04,710 --> 00:23:09,750
significa que nunca habrá más de 21.000.000 de BItcoins.

372
00:23:10,450 --> 00:23:13,520
En cualquier caso, esto no significa que los mineros dejarán de recibir dinero.

373
00:23:13,950 --> 00:23:18,230
Aparte de las recompensas por bloque, los mineros también pueden recibir cuotas por transacciones.

374
00:23:18,500 --> 00:23:20,970
Esto funciona asi, cuando realizas un pago,

375
00:23:20,970 --> 00:23:24,700
si quieres puedes añadir un pequeño extra a la transacción

376
00:23:24,700 --> 00:23:28,620
que va a recibir el minero que haya descubierto el bloque en que vaya esa trasacción.

377
00:23:29,280 --> 00:23:32,100
La razón por la que podrías hacerlo es para incentivar a los mineros

378
00:23:32,100 --> 00:23:36,080
a incluir la transaccion que estas emitiendo en el siguiente bloque.

379
00:23:36,430 --> 00:23:42,080
Verás, en Bitcoin, el limite por bloque es de unas 2400 por bloque,

380
00:23:42,080 --> 00:23:45,380
algo quemuchos críticos argumentan que es demasiado restrictivo.

381
00:23:45,970 --> 00:23:51,740
Como comparación, VISA procesa una media de 1.700 transacciones por segundo,

382
00:23:51,740 --> 00:23:55,510
y son capaces de manejar mas de 24.000 por segundo.

383
00:23:56,240 --> 00:24:01,390
Este proceso , lento en comparación de Bitcoin, hace que las cuotas por transacción aumenten,

384
00:24:01,390 --> 00:24:06,410
dado que estas determinan que transacciones los mineros eligen incluir.

385
00:24:08,160 --> 00:24:12,140
Todo esto esta lejos de ser una cobertura extensa de las criptomonedas;

386
00:24:12,140 --> 00:24:16,400
todavia quedan muchos matices y decisiones de diseño alternativas que ni siquiera he tocado.

387
00:24:16,720 --> 00:24:21,550
Pero espero que este video provea de un tronco estable de conocimiento

388
00:24:21,550 --> 00:24:24,710
para todo el mundo que quiera añadir más ramas profundizando en el tema.

389
00:24:25,250 --> 00:24:26,280
Como he dicho al comienzo,

390
00:24:26,280 --> 00:24:31,170
uno de los motivos tras este video es que una gran cantidad de dinero ha empezado a fluir hacia las criptomonedas.

391
00:24:31,370 --> 00:24:35,090
Y aunque no quiero hacer declaraciones sobre si son una buena o mala inversión,

392
00:24:35,330 --> 00:24:38,210
realmente creo que es bueno que la gente que quiera entrar al juego

393
00:24:38,210 --> 00:24:40,720
al menos sepa los fundamentos de la tecnología.

394
00:24:41,550 --> 00:24:45,750
Como siempre, mis más sinceros agradecimientos van a todos aquellos que haceis este canal posible en Patron.

395
00:24:46,170 --> 00:24:49,180
Entiendo que no todo el mundo tiene la posibilidad de contribuir,

396
00:24:49,180 --> 00:24:51,280
pero si aun estas interesado en ayudar,

397
00:24:51,280 --> 00:24:52,700
una de las mejores formas de hacerlo

398
00:24:52,700 --> 00:24:57,200
es simplemente compartir los videos que creas que pueden ayudar o ser interesantes para otros.

