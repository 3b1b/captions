1
00:00:04,220 --> 00:00:06,780
Was bedeutet es einen Bitcoin zu *haben*?

2
00:00:07,440 --> 00:00:09,410
Viele Leute haben von Bitcoins gehört.

3
00:00:09,410 --> 00:00:12,570
Dass sie eine komplett digitale Währung sind, ohne Regierung, die sie herausgibt.

4
00:00:12,690 --> 00:00:16,130
Dass keine Banken sie verwalten und Transaktionen verifizieren müssen.

5
00:00:16,350 --> 00:00:19,080
Und dass niemand so richtig weiß, wer sie erfunden hat.

6
00:00:19,440 --> 00:00:23,570
Und dennoch können viele Leute diese Frage nicht beantworten, zumindest nicht vollständig.

7
00:00:24,340 --> 00:00:25,120
Um das zu können,

8
00:00:25,120 --> 00:00:29,780
und um sicher zu gehen, dass die technischen Details, die der Antwort zugrunde liegen, einleuchtend sind,

9
00:00:29,780 --> 00:00:32,340
werden wir Schritt für Schritt durchgehen

10
00:00:32,340 --> 00:00:35,600
wie du deine eigene Version der Bitcoins hättest erfinden können.

11
00:00:36,120 --> 00:00:40,050
Wir beginnen mit dir und ein paar Freunden. Ihr haltet alle Zahlungen auf einem gemeinschaftlichen Bestandsbuch fest.

12
00:00:40,370 --> 00:00:44,690
Wenn du dann deinen Freunden und der Welt um euch herum weniger und weniger vertraust

13
00:00:44,910 --> 00:00:48,130
und wenn du clever genug bist ein paar Ideen aus der Kryptografie einzubringen

14
00:00:48,130 --> 00:00:50,260
um die Notwendigkeit von Vertrauen zu umgehen

15
00:00:50,260 --> 00:00:53,320
dann wirst du bald etwas haben, das man "Kryptowährung" nennt.

16
00:00:53,700 --> 00:00:58,040
Bitcoin ist das erste Beispiel einer implementierten Kryptowährung.

17
00:00:58,340 --> 00:01:02,830
Mittlerweile gibt es tausende anderer Kryptowährungen im Austausch mit traditionellen Währungen.

18
00:01:03,280 --> 00:01:06,410
Zu erleben eine eigene Kryptowährung zu erfinden kann eine Basis bilden

19
00:01:06,410 --> 00:01:09,440
um einige der neueren Kandidaten zu verstehen

20
00:01:09,440 --> 00:01:13,600
und zu erkennen wann und warum es Spielraum für verschiedene Umsetzungen gibt.

21
00:01:14,050 --> 00:01:16,300
Einer der Gründe, weshalb ich dieses Thema ausgewählt habe

22
00:01:16,300 --> 00:01:20,060
ist, dass diese Währungen im letzten Jahr eine unglaubliche Menge an Aufmerksamkeit bekommen haben.

23
00:01:20,060 --> 00:01:23,600
Es gab unglaublich viele Investitionen und, naja, es war ein ziemlicher Hype.

24
00:01:24,320 --> 00:01:28,060
Ich werde nichts zu den derzeitigen oder zukünftigen Wechselkursen sagen.

25
00:01:28,060 --> 00:01:29,350
Aber ich glaube wir sind uns alle einig, dass jeder

26
00:01:29,350 --> 00:01:33,640
der in Kryptowährungen investieren möchte, wissen sollte, was das wirklich ist.

27
00:01:33,920 --> 00:01:38,080
Und ich meine keine Analogien mit vagen Anspielungen auf Goldabbau.

28
00:01:38,080 --> 00:01:42,510
Ich meine eine tatsächliche Beschreibung dessen, was Computer tun,

29
00:01:42,510 --> 00:01:45,660
wenn wir Kryptowährungen senden, erhalten und kreieren.

30
00:01:46,800 --> 00:01:48,870
Eine wichtige Sache vorab:

31
00:01:48,870 --> 00:01:51,930
Obwohl wir hier in die Details gehen werden

32
00:01:52,120 --> 00:01:53,830
und das einiges an Zeit braucht

33
00:01:54,110 --> 00:01:58,770
musst du all das nicht wissen um die Kryptowährung zu benutzen.

34
00:01:59,070 --> 00:02:03,290
Genau so wie du nicht wissen musst, was hinter den Kulissen passiert, wenn du deine Kreditkarte benutzt.

35
00:02:03,680 --> 00:02:07,190
Wie bei allen digitalen Bezahlungsarten gibt es eine Reihe benutzerfreundlicher Apps,

36
00:02:07,190 --> 00:02:11,260
die dich Währungen senden und empfangen lassen, ohne darüber nachzudenken was da gerade vor sich geht.

37
00:02:11,780 --> 00:02:14,940
Der Unterschied ist,

38
00:02:14,940 --> 00:02:17,300
dass hier keine Bank die Transaktionen verifiziert.

39
00:02:17,620 --> 00:02:21,970
Stattdessen handelt es sich um ein cleveres System dezentralisierter, vertrauensloser Verifizierung,

40
00:02:22,180 --> 00:02:24,850
basierend auf Mathematik aus der Kryptografie.

41
00:02:25,910 --> 00:02:26,460
Aber erstmal

42
00:02:26,460 --> 00:02:30,730
möchte ich Kryptowährungen und all das noch kurz beiseite legen.

43
00:02:31,040 --> 00:02:35,810
Wir beginnen unsere Geschichte mit etwas bodenständigerem: Bestandsbücher und digitale Unterschriften

44
00:02:36,400 --> 00:02:38,980
Wenn du und deine Freunde häufig Transaktionen ausführen,

45
00:02:38,980 --> 00:02:41,660
also zum Beispiel jeder seinen Teil der Restaurantrechnung zahlt,

46
00:02:41,660 --> 00:02:44,250
kann es umständlich werden, ständig Bargeld auszutauschen.

47
00:02:44,700 --> 00:02:46,300
Also könntet ihr ein gemeinschaftliches Bestandsbuch führen,

48
00:02:46,300 --> 00:02:50,190
in dem alle Zahlungen die ihr in Zukunft tätigen möchtet festgehalten werden.

49
00:02:50,500 --> 00:02:52,470
So was wie: Alice zahlt 20$ an Bob,

50
00:02:52,470 --> 00:02:54,940
Bob zahlt 40$ an Charlie, so in der Art.

51
00:02:55,580 --> 00:02:58,920
Das Bestandsbuch ist öffentlich und für jeden zugänglich.

52
00:02:58,920 --> 00:03:01,980
Wie eine Website auf der jeder neue Einträge vornehmen kann.

53
00:03:02,530 --> 00:03:04,320
Und an jedem Ende eines Monats

54
00:03:04,320 --> 00:03:07,930
trefft ihr euch, seht die Liste der Transaktionen an, und rechnet ab.

55
00:03:08,290 --> 00:03:11,450
Wenn du mehr ausgegeben hast als du bekommen hast, dann legst du entsprechend viel Geld in den Topf.

56
00:03:11,450 --> 00:03:14,560
Und wenn du mehr bekommen als ausgegeben hast, dann nimmst du dir entsprechend viel Geld aus dem Topf.

57
00:03:15,390 --> 00:03:19,530
Die Regeln um Teil dieses sehr simplen Systems zu sein könnten in etwa so aussehen:

58
00:03:19,950 --> 00:03:22,000
Jeder kann Beiträge zum Bestandsbuch hinzufügen

59
00:03:22,000 --> 00:03:25,340
und am Ende des Monats trefft ihr alle und rechnet ab.

60
00:03:26,240 --> 00:03:31,010
Ein Problem von so einem öffentlichen Bestandsbuch ist allerdings, dass jeder neue Beiträge hinzufügen kann.

61
00:03:31,010 --> 00:03:37,240
Was würde zum Beispiel Bob daran hindern zu schreiben "Alice zahlt 100$ an Bob", ohne dass Alice zustimmt?

62
00:03:37,750 --> 00:03:41,260
Wie können wir sichergehen, dass all diese Transaktionen

63
00:03:41,260 --> 00:03:43,400
auch wirklich das sind, was der Sender im Kopf hatte?

64
00:03:44,810 --> 00:03:48,850
Hier kommt der erste Teil Kryptografie ins Spiel: digitale Unterschriften

65
00:03:49,460 --> 00:03:50,960
Genau wie bei handschriftlichen Unterschriften

66
00:03:50,960 --> 00:03:55,830
ist die Grundidee, dass Alice etwas neben der Transaktion platziert,

67
00:03:55,830 --> 00:03:58,720
das bestätigt, dass sie die Transaktion gesehen hat und mit ihr einverstanden ist.

68
00:03:59,220 --> 00:04:03,490
Und natürlich sollte es unmöglich sein, dass jemand anderes diese Unterschrift fälscht.

69
00:04:04,360 --> 00:04:08,790
Auf den ersten Blick wirkt es so, als sind digitale Unterschriften überhaupt nicht möglich.

70
00:04:09,130 --> 00:04:14,160
Ich meine – völlig egal aus welchen Daten diese Unterschrift besteht, sie kann von einem Computer einfach eingelesen und kopiert werden.

71
00:04:14,390 --> 00:04:16,580
Wie verhindern wir also Fälschungen?

72
00:04:17,300 --> 00:04:22,200
Das funktioniert, indem jeder ein Paar aus einem sogenannten "öffentlichen Schlüssel" und einem "privaten Schlüssel" generiert,

73
00:04:22,200 --> 00:04:24,410
von denen beide aussehen wie eine Bitfolge.

74
00:04:24,810 --> 00:04:27,280
Der "private Schlüssel" wird manchmal auch "Geheimschlüssel" genannt,

75
00:04:27,280 --> 00:04:31,670
so dass wir ihn mit "sk" abkürzen können. Den öffentlichen Schlüssel kürzen wir mit "pk" ab. [englische Abkürzungen wie im Video verwendet]

76
00:04:32,400 --> 00:04:36,480
Wie der Name schon sagt, ist der geheime Schlüssel etwas, was du für dich behalten solltest.

77
00:04:37,080 --> 00:04:41,950
In der realen Welt sieht deine manuelle Unterschrift gleich aus, egal welches Dokument du unterschreibst.

78
00:04:42,480 --> 00:04:45,080
Aber digitale Unterschriften sind eigentlich noch viel stärker,

79
00:04:45,080 --> 00:04:47,320
denn sie verändern sich je nach unterschriebener Nachricht.

80
00:04:47,880 --> 00:04:52,900
Sie sehen aus wie eine Folge aus Nullen und Einsen, meist etwas wie 256 Bits.

81
00:04:53,310 --> 00:04:55,840
Eine kleine Veränderung der Nachricht

82
00:04:55,840 --> 00:04:59,760
verändert das Aussehen der Unterschrift komplett.

83
00:05:00,910 --> 00:05:02,720
Etwas formaler:

84
00:05:02,720 --> 00:05:08,720
Die Unterschrift wird mit Hilfe einer Funktion erstellt, die von der Nachricht selbst und deinem privaten Schlüssel abhängig ist.

85
00:05:09,260 --> 00:05:12,590
Der private Schlüssel stellt sicher, dass nur du die Unterschrift erstellen kannst.

86
00:05:12,900 --> 00:05:15,180
Und da die Unterschrift auch von der Nachricht abhängig ist,

87
00:05:15,180 --> 00:05:19,870
kann niemand einfach deine Unterschrift kopieren und unter einer anderen Nachricht einfügen.

88
00:05:21,120 --> 00:05:25,850
Dieser Prozess läuft Hand in Hand mit einer zweiten Funktion, die prüft ob die Unterschrift gültig ist.

89
00:05:26,280 --> 00:05:28,420
Und hier kommt der öffentliche Schlüssel ins Spiel:

90
00:05:29,170 --> 00:05:31,470
Alles was er ausgibt, ist ein "Wahr" oder "Falsch",

91
00:05:31,470 --> 00:05:34,740
das aussagt ob die Unterschrift mit dem privaten Schlüssel erstellt wurde,

92
00:05:34,740 --> 00:05:38,080
der zu dem öffentlichen Schlüssel gehört mit dem du die Gültigkeit der Unterschrift prüfst.

93
00:05:38,610 --> 00:05:42,240
Ich werde nicht in die Details dieser beiden Funktionen gehen,

94
00:05:42,240 --> 00:05:47,590
aber die Grundidee ist, dass es absolut unmöglich sein sollte, eine gültige Unterschrift zu finden

95
00:05:47,590 --> 00:05:49,390
ohne den privaten Schlüssel zu besitzen.

96
00:05:50,040 --> 00:05:54,970
Insbesondere gibt es keine bessere Strategie als einfach zufällige Kombinationen auszuprobieren,

97
00:05:54,970 --> 00:05:58,080
die man mit dem allen bekannten öffentlichen Schlüssel testen kann.

98
00:05:59,020 --> 00:06:03,370
Versuch dir einmal vorzustellen, wieviele Unterschriften es gibt, die eine Länge von 256 Bits haben.

99
00:06:03,790 --> 00:06:06,810
Das sind 2 hoch 256.

100
00:06:07,350 --> 00:06:09,880
Das ist eine bizarr große Nummer.

101
00:06:09,880 --> 00:06:13,900
Sie "astronomisch" zu nennen würde die Astronomie hoffnungslos überschätzen.

102
00:06:14,290 --> 00:06:19,880
Ich habe tatsächlich sogar ein Zusatzvideo gemacht, nur um die Größe dieser Zahl darzustellen.

103
00:06:20,360 --> 00:06:21,860
Wichtig für uns hier ist erstmal:

104
00:06:21,860 --> 00:06:25,470
Wenn du überprüft hast, dass eine Unterschrift für eine Nachricht gültig ist,

105
00:06:25,830 --> 00:06:30,420
dann kannst du dir extrem sicher sein, dass sie nur erstellt werden konnte, wenn der Verfasser den privaten Schlüssel besaß,

106
00:06:30,420 --> 00:06:35,360
der zu dem öffentlichen Schlüssel gehört, mit dem du die Unterschrift gerade überprüft hast.

107
00:06:37,040 --> 00:06:40,960
Sicherzustellen, dass alle Transaktionen im Bestandsbuch unterzeichnet werden it schonmal ziemlich gut.

108
00:06:40,960 --> 00:06:42,410
Es gibt allerdings ein kleines Schlupfloch:

109
00:06:42,850 --> 00:06:46,880
Wenn Alice eine Transaktion unterzeichnet, etwa "Alice zahlt Bob 100$.",

110
00:06:46,880 --> 00:06:50,740
dann kann Bob zwar nicht Alice' Unterschrift auf eine neue Nachricht kopieren,

111
00:06:50,740 --> 00:06:53,890
er könnte aber einfach Nachricht und Unterschrift gemeinsam kopieren, so oft er möchte.

112
00:06:54,190 --> 00:06:57,400
Denn diese Nachricht-Unterschrift-Kombination bleibt gültig.

113
00:06:57,970 --> 00:07:01,970
Um das zu vermeiden richten wir ein, dass wenn du eine Transaktion unterschreiben möchtest

114
00:07:01,970 --> 00:07:07,310
die Nachricht außerdem noch eine einmalige ID enthalten muss, die mit dieser Transaktion verbunden ist.

115
00:07:07,880 --> 00:07:11,710
Wenn Alice auf diesem Weg mehrere Male 100$ an Bob zahlt,

116
00:07:11,710 --> 00:07:15,740
dann benötigt jede einzelne Zeile im Bestandsbuch eine komplett neue Unterschrift.

117
00:07:16,960 --> 00:07:17,880
So weit, so gut!

118
00:07:18,160 --> 00:07:22,380
Digitale Unterschriften senken die Relevanz von Vertrauen in diesem ersten Plan.

119
00:07:22,380 --> 00:07:24,910
Dennoch, wenn du das wirklich machen wolltest

120
00:07:24,910 --> 00:07:27,460
würdest du dich immer noch auf eine Art Ehrenkodex verlassen.

121
00:07:27,720 --> 00:07:30,460
Du würdest dich nämlich darauf verlassen, dass alle Teilnehmer

122
00:07:30,470 --> 00:07:33,010
wirklich am Ende des Monats die Rechnungen begleichen.

123
00:07:33,620 --> 00:07:37,590
Was passiert, wenn Charlie beispielsweise ein paar tausend Dollar Schulden anhäuft,

124
00:07:37,590 --> 00:07:39,410
und dann einfach nicht auftaucht?

125
00:07:40,240 --> 00:07:43,270
Der einzig wirkliche Grund am Ende des Monats auf Bargeld zurückzugreifen

126
00:07:43,270 --> 00:07:47,300
ist der Fall, dass jemand (ja Charlie, du bist gemeint) viele Schulden anhäuft.

127
00:07:48,010 --> 00:07:52,440
Vielleicht hast du also die clevere Idee, dass es gar nicht nötig ist auf Bargeld zurückzugreifen,

128
00:07:52,440 --> 00:07:56,740
solange es eine Möglichkeit gibt Leute davon abzuhalten mehr auszugeben als sie einnehmen.

129
00:07:57,390 --> 00:08:01,280
Vielleicht beginnt du indem du jeden bittest 100$ einzuzahlen

130
00:08:01,580 --> 00:08:04,080
und dann die ersten paar Zeilen des Bestandsbuchs vorliest.

131
00:08:04,080 --> 00:08:08,460
"Alice kriegt 100$.", "Bob kriegt 100$.", "Charlie kriegt 100$.", etc.

132
00:08:09,170 --> 00:08:12,560
Und jetzt akzeptiere einfach keine Transaktionen

133
00:08:12,560 --> 00:08:16,210
bei denen jemand mehr ausgibt als er bereits laut dem Bestandsbuch hat.

134
00:08:16,850 --> 00:08:20,030
Wenn zum Beispiel die ersten beiden Transaktionen lauten

135
00:08:20,030 --> 00:08:24,240
"Charlie zahlt 50$ an Alice." und "Charlie zahlt 50$ and Bob."

136
00:08:24,480 --> 00:08:29,690
und Charlie dann versucht "Charlie zahlt dir 20$." hinzuzufügen, dann wäre das ungültig.

137
00:08:29,690 --> 00:08:32,100
Genauso ungültig, wie wenn er die Transaktion nie unterschrieben hätte.

138
00:08:33,010 --> 00:08:35,940
Wichtig ist, dass man, um eine Transaktion auf diese Art und Weise zu verifizieren,

139
00:08:35,940 --> 00:08:39,600
die komplette Geschichte aller Transaktionen kennen muss.

140
00:08:40,140 --> 00:08:43,970
Und das ist mehr oder weniger der Fall bei Kryptowährungen,

141
00:08:43,970 --> 00:08:46,260
obwohl noch ein bisschen Spielraum für Optimierung da ist.

142
00:08:48,750 --> 00:08:50,120
Das interessante hieran ist,

143
00:08:50,120 --> 00:08:55,900
dass dieser Schritt die Verbindung zwischen dem Bestandsbuch und tatsächlichen, anfassbaren US-Dollar aufhebt.

144
00:08:56,310 --> 00:08:59,680
Theoretisch, wenn jeder Mensch auf der Welt dieses Bestandsbuch verwendet,

145
00:08:59,680 --> 00:09:03,640
dann könntest du dein ganzes Leben leben und Geld nur auf diesem Bestandsbuch senden und empfangen,

146
00:09:03,640 --> 00:09:06,960
ohne es jemals in echte US Dollar umtauschen zu müssen.

147
00:09:07,430 --> 00:09:08,920
Und um das nochmal zu betonen,

148
00:09:08,920 --> 00:09:14,310
lass uns ab jetzt die Mengen auf dem Bestandsbuch als "Ledger Dollars", oder kurz "LD" bezeichnen. [englische, im Video verwendete Abkürzung]

149
00:09:14,790 --> 00:09:18,900
Du kannst natürlich jeder Zeit Ledger Dollars in echte US Dollar umtauschen.

150
00:09:19,070 --> 00:09:22,750
Vielleicht gibt zum Beispiel Alice Bob in der echten Welt eine 10$-Note

151
00:09:22,750 --> 00:09:26,000
und er fügt im Ausgleich die Transaktion "Bob zahlt Alice 10 LD." hinzu

152
00:09:26,000 --> 00:09:29,830
und unterzeichnet sie.

153
00:09:30,820 --> 00:09:34,490
Aber ein Tausch wie dieser hier wird nicht garantiert sein.

154
00:09:34,840 --> 00:09:38,510
Das ist jetzt mehr so als ob man Dollars in Euros

155
00:09:38,510 --> 00:09:40,830
oder irgendeine andere Währung auf dem offenen Markt umtauschen würde.

156
00:09:41,160 --> 00:09:44,080
Es ist eine eigene, unabhängige Sache.

157
00:09:44,690 --> 00:09:50,380
Das ist die erste wichtige Sache, die man über Bitcoins und andere Kryptowährungen wissen und verstehen muss:

158
00:09:50,850 --> 00:09:56,320
Sie sind im Endeffekt ein Bestandsbuch. Der Verlauf aller Transaktionen in dieser speziellen Währung.

159
00:09:57,110 --> 00:09:58,440
Bei Bitcoins kommt Geld natürlich nicht auf das Bestandsbuch

160
00:09:58,440 --> 00:10:01,970
indem Leute Bitcoins mit Bargeld kaufen.

161
00:10:01,970 --> 00:10:05,040
Wie das Geld auf das Bestandsbuch kommt erkläre ich in ein paar Minuten.

162
00:10:05,530 --> 00:10:08,710
Aber vorher gibt es noch einen anderen, eigentlich noch wichtigeren Unterschied

163
00:10:08,710 --> 00:10:12,590
zwischen unserem Währungssystem, den Ledger Dollars, und der Funktionsweise von Kryptowährungen.

164
00:10:13,000 --> 00:10:16,080
Bisher habe ich gesagt, dass dieses Bestandsbuch ein öffentlicher Ort ist.

165
00:10:16,080 --> 00:10:18,720
Wie eine Website auf der jeder neue Zeilen eintragen kann.

166
00:10:19,220 --> 00:10:22,080
Aber das würde voraussetzen einem zentralen Ort zu vertrauen.

167
00:10:22,080 --> 00:10:24,240
Nämlich: "Wer hostet die Website?"

168
00:10:24,240 --> 00:10:27,060
"Wer bestimmt die Regeln für das Hinzufügen neuer Zeilen?"

169
00:10:27,550 --> 00:10:32,260
Um dieses Stück Vertrauen zu entfernen lassen wir jeden seine eigene Kopie des Bestandsbuchs haben.

170
00:10:32,760 --> 00:10:37,100
Wenn du dann eine Transaktion durchführen möchtest, beispielsweise "Alice zahlt Bob 100 LD.",

171
00:10:37,400 --> 00:10:39,960
dann sendest du diese Nachricht in die Welt hinaus,

172
00:10:39,960 --> 00:10:43,740
damit die Leute sie hören und auf ihren eigenen, privaten Bestandsbüchern vermerken.

173
00:10:44,850 --> 00:10:49,460
Aber, solange du nicht noch einen Schritt weiter gehst ist dieses System grauenhaft schlecht.

174
00:10:49,800 --> 00:10:53,040
Wie kriegst du die Leute dazu zu entscheiden, welches das richtige Bestandsbuch ist?

175
00:10:53,400 --> 00:10:57,620
Wenn Bob eine Zahlung empfängt, "Alice zahlt Bob 10 LD.",

176
00:10:57,620 --> 00:11:01,960
wie kann er dann sicher sein, dass alle anderen diese Transaktion empfangen haben und sie für glaubwürdig halten?

177
00:11:02,290 --> 00:11:07,550
Woher weiß er sicher, dass er später zu Charlie gehen kann, und genau diese 10 LD in einer Transaktion verwenden kann?

178
00:11:08,300 --> 00:11:12,480
Stell dir wirklich mal vor einfach nur zuzuhören wie Transaktionen gesendet werden.

179
00:11:12,950 --> 00:11:18,460
Wie kannst du sicher sein, dass alle anderen dieselben Transaktionen in derselben Reihenfolge aufzeichnen?

180
00:11:19,460 --> 00:11:21,540
Das ist das Kernstück des Problems

181
00:11:21,540 --> 00:11:23,000
und ein interessantes Puzzle.

182
00:11:23,450 --> 00:11:27,910
Hast du eine Idee wie man Transaktionen akzeptiert oder ablehnt?

183
00:11:27,910 --> 00:11:31,160
Und in welcher Reihenfolge?

184
00:11:31,160 --> 00:11:34,860
Kannst du sichergehen, dass jeder, der derselben Regel folgt,

185
00:11:34,860 --> 00:11:38,000
ein persönliches Bestandsbuch hat, dass genau so aussieht wie deins?

186
00:11:38,510 --> 00:11:41,800
Das ist das Problem um das es im original Bitcoin-Paper geht.

187
00:11:44,530 --> 00:11:47,640
Grob gesagt, die Lösung, die Bitcoin bietet,

188
00:11:47,640 --> 00:11:52,040
ist immer dem Bestandsbuch zu trauen, in das am meisten rechnerische Arbeit investiert wurde.

189
00:11:52,600 --> 00:11:55,240
Lass mich kurz erklären, was das genau bedeutet.

190
00:11:55,240 --> 00:11:58,290
Es hat mit etwas zu tun, dass sich "kryptografische Hash-Funktion" nennt.

191
00:11:58,510 --> 00:12:00,540
Die generelle Idee ist,

192
00:12:00,540 --> 00:12:04,910
dass wenn du rechnerische Arbeit als Basis dafür benutzt, wem du vertrauen kannst,

193
00:12:05,310 --> 00:12:08,810
dann kannst du das System so einrichten, dass betrügerische Transaktionen und widersprüchliche Bestandsbücher

194
00:12:08,810 --> 00:12:12,400
mit einem nicht zu bewältigendem Aufwand verbunden wären.

195
00:12:12,990 --> 00:12:15,930
Nochmal der Hinweis, dass das hier weit mehr ist,

196
00:12:15,930 --> 00:12:19,750
als man bräuchte um Kryptowährungen einfach nur zu benutzen.

197
00:12:20,130 --> 00:12:21,600
Aber es ist eine echt coole Idee!

198
00:12:21,600 --> 00:12:26,950
Und wenn du sie verstehst, dann verstehst du das Herzstück von Bitcoins und all den anderen Kryptowährungen.

199
00:12:27,990 --> 00:12:30,230
Also eins nach dem anderen – was ist eine Hashfunktion?

200
00:12:30,750 --> 00:12:34,300
Die Eingabe für eine dieser Funktionen kann irgendeine Art Nachricht oder Datei sein,

201
00:12:34,300 --> 00:12:35,540
das spielt wirklich keine große Rolle.

202
00:12:35,730 --> 00:12:40,820
Die Ausgabe ist eine Bitfolge mit einer bestimmten Länge, zum Beispiel 256 Bits.

203
00:12:41,420 --> 00:12:45,040
Diese Ausgabe wird der "Hashwert" der Nachricht genannt.

204
00:12:45,380 --> 00:12:47,980
Und die Absicht ist, dass es vollkommen willkürlich aussieht.

205
00:12:48,220 --> 00:12:51,850
Aber es ist nicht willkürlich – die Ausgabe für eine bestimmte Eingabe ist immer dieselbe.

206
00:12:52,290 --> 00:12:53,120
Aber die Grundidee ist,

207
00:12:53,120 --> 00:12:57,640
dass wenn du die Eingabe leicht verändert, also vielleicht nur einen Buchstaben änderst,

208
00:12:57,950 --> 00:13:00,420
dann verändert sich der ausgegebene Hashwert vollkommen.

209
00:13:01,030 --> 00:13:05,680
Bei der Hashfunktion die ich dir hier zeige, genannt SHA256,

210
00:13:05,980 --> 00:13:12,010
ist die Veränderung der Ausgabe, bei einer minimalen Veränderung der Eingabe, vollkommen unvorhersagbar.

211
00:13:12,490 --> 00:13:15,080
Denn das hier ist nicht einfach irgendeine Hashfunktion,

212
00:13:15,080 --> 00:13:17,360
sondern eine kryptografische Hashfunktion.

213
00:13:17,360 --> 00:13:20,830
Das bedeutet es ist unmöglich in die andere Richtung zu rechnen.

214
00:13:21,320 --> 00:13:23,620
Wenn ich dir eine Folge Nullen und Einsen zeige,

215
00:13:23,620 --> 00:13:25,860
und dich auffordere, eine Eingabe zu finden,

216
00:13:25,860 --> 00:13:31,320
mit der SHA256 genau diese Folge Nullen und Einsen ausgibt.

217
00:13:31,640 --> 00:13:34,910
Dann hast du keine bessere Möglichkeit als einfach zu raten und zu überprüfen.

218
00:13:35,770 --> 00:13:42,260
Und wie gesagt, wenn du ein Gefühl dafür entwickeln möchtest, wieviel rechnerische Arbeit vonnöten ist um 2 hoch 256 Vermutungen zu überprüfen,

219
00:13:42,260 --> 00:13:44,060
dann schau dir einfach das Zusatzvideo an.

220
00:13:44,320 --> 00:13:46,880
Dessen Erstellung mir übrigens einen Wahnsinnsspaß bereitet hat.

221
00:13:48,960 --> 00:13:54,040
Vielleicht denkst du, dass wenn du dich wirklich durch die Details dieser Funktion wühlst,

222
00:13:54,040 --> 00:13:57,680
du einen Weg finden könntest von einer Ausgabe auf die entsprechende Eingabe zu schließen.

223
00:13:58,270 --> 00:14:00,870
Aber bisher hat niemand einen Weg gefunden, das zu schaffen.

224
00:14:01,550 --> 00:14:07,270
Interessanterweise gibt es keinen rigorosen Beweis dafür, dass es schwierig ist in die andere Richtung zu rechnen.

225
00:14:07,600 --> 00:14:10,300
Und dennoch basiert ein gewaltiger Teil moderner Sicherheitstechnologien  auf diesen kryptographischen Hashfunktionen

226
00:14:10,300 --> 00:14:14,500
und darauf, dass sie diese Eigenschaft haben.

227
00:14:15,040 --> 00:14:18,140
Wenn du dir anschauen würdest mit welchen Algorithmen

228
00:14:18,140 --> 00:14:20,580
dein Browser gerade die sichere Verbindung zu YouTube

229
00:14:20,580 --> 00:14:22,210
oder zu deiner Bank aufbaut,

230
00:14:22,580 --> 00:14:25,990
dann wirst du ziemlich wahrscheinlich auf den Namen SHA256 stoßen.

231
00:14:27,390 --> 00:14:29,360
Für jetzt konzentrieren wir uns erstmal darauf

232
00:14:29,360 --> 00:14:33,810
wie eine solche Funktion beweisen kann, dass eine bestimme Liste Transaktionen

233
00:14:33,810 --> 00:14:37,070
mit einer hohen Menge an rechnerischer Arbeit verbunden ist.

234
00:14:38,030 --> 00:14:41,240
Stell dir vor jemand zeigt dir eine Liste an Transaktionen und sagt:

235
00:14:41,240 --> 00:14:43,220
"Hey, ich habe eine besondere Zahl gefunden.

236
00:14:43,220 --> 00:14:47,010
Wenn du diese Zahl ans Ende der Liste an Transaktionen schreibst,

237
00:14:47,010 --> 00:14:50,090
und SHA256 auf die Liste anwendest,

238
00:14:50,090 --> 00:14:53,570
dann sind die ersten 30 Bits der Ausgabe alles Nullen!"

239
00:14:54,080 --> 00:14:57,110
Wie schwer glaubst du war es für diese Person, eine solche Nummer zu finden?

240
00:14:58,060 --> 00:14:59,520
Für irgendeine zufällige Nachricht ist die Wahrscheinlichkeit,

241
00:14:59,520 --> 00:15:05,830
dass der Hashwert mit 30 Nullen beginnt 1 zu 2^30.

242
00:15:05,830 --> 00:15:07,650
Also in etwa eins zu einer Milliarde.

243
00:15:08,150 --> 00:15:12,110
Und weil SHA256 eine kryptografische Hashfunktion ist,

244
00:15:12,110 --> 00:15:16,170
ist die einzige Möglichkeit eine solche Nummer zu finden schlicht und ergreifend immer wieder zu raten.

245
00:15:16,640 --> 00:15:20,880
Das heißt diese Person musste ziemlich sicher ungefähr eine Milliarde Zahlen ausprobieren,

246
00:15:20,880 --> 00:15:22,670
bevor sie diese besondere gefunden hat.

247
00:15:23,360 --> 00:15:24,830
Sobald du die Zahl weißt, ist es leicht sie zu überprüfen.

248
00:15:24,830 --> 00:15:29,110
Du wendest einfach die Hashfunktion an und siehst die 30 Nullen.

249
00:15:29,800 --> 00:15:33,900
Mit anderen Worten: Du kannst überprüfen, dass jemand eine ganze Menge Arbeit geleistet hat,

250
00:15:33,900 --> 00:15:36,720
ohne dir selbst den Aufwand zu machen.

251
00:15:37,330 --> 00:15:39,040
Das nennt man den "Ausführungsnachweis".

252
00:15:39,430 --> 00:15:44,610
Wichtig ist, dass all diese Arbeit intrinsisch mit der Liste an Transaktionen verbunden ist.

253
00:15:44,930 --> 00:15:48,080
Wenn du nur eine der Transaktionen ein kleines bisschen veränderst,

254
00:15:48,080 --> 00:15:49,890
würde sich der Hashwert komplett verändern.

255
00:15:50,150 --> 00:15:54,200
Du müsstest also nochmal eine Milliarde Zahlen ausprobieren um dienen Ausführungsnachweis zu finden.

256
00:15:54,200 --> 00:15:55,670
Eine neue Zahl mit der der Hashwert der veränderten Liste

257
00:15:55,670 --> 00:16:00,880
wieder mit 30 Nullen beginnt.

258
00:16:01,530 --> 00:16:04,400
Erinnre dich an unsere Situation mit dem Bestandsbuch:

259
00:16:04,690 --> 00:16:07,240
Alle senden Transaktionen in die Welt

260
00:16:07,240 --> 00:16:11,080
und wir wollen eine Möglichkeit finden uns einig zu sein welches Bestandsbuch das richtige ist.

261
00:16:11,490 --> 00:16:14,920
Wie gesagt, die Grundidee hinter dem ursprünglichen Bitcoin-Paper ist

262
00:16:14,920 --> 00:16:18,700
dass alle dem Bestandsbuch vertrauen, in dem die meiste rechnerische Arbeit steckt.

263
00:16:19,370 --> 00:16:23,200
Das funktioniert indem man zuerst ein bestimmtes Bestandsbuch in Blöcke unterteilt.

264
00:16:23,200 --> 00:16:27,410
Jeder dieser Blöcke besteht aus einer Liste an Transaktionen zusammen mit einem Ausführungsnachweis,

265
00:16:27,840 --> 00:16:32,600
der eine besondere Zahl ist, durch die der Hashwert des Blocks mit einer Anzahl Nullen beginnt.

266
00:16:33,190 --> 00:16:37,280
Lass uns einfach mal festlegen, dass der Hashwert mit…60 Nullen beginnen muss.

267
00:16:37,280 --> 00:16:41,040
Wir kommen später nochmal zu einem  systematischeren Weg die Anzahl der Nullen auszuwählen.

268
00:16:41,840 --> 00:16:46,800
Genau so wie eine Transaktion nur gültig ist, wenn sie vom Sender unterzeichnet wurde,

269
00:16:46,800 --> 00:16:50,220
so ist auch ein Block nur gültig, wenn er einen  Ausführungsnachweis hat.

270
00:16:51,040 --> 00:16:54,700
Und um sicherzugehen, dass die Blöcke eine vorgegebene Reihenfolge haben,

271
00:16:54,700 --> 00:16:59,760
legen wir fest, dass ein Block den Hashwert des vorhergehenden Blocks an seinem Beginn stehen haben muss.

272
00:17:00,150 --> 00:17:03,550
Wenn du jetzt etwas an einem der früheren Blöcke verändern

273
00:17:03,550 --> 00:17:05,550
oder die Reihenfolge zweier Blöcke tauschen würdest,

274
00:17:05,890 --> 00:17:08,230
dann würde das den Block, der als nächstes kommt, verändern,

275
00:17:08,230 --> 00:17:10,010
was den Hashwert dieses Blocks verändert,

276
00:17:10,010 --> 00:17:13,070
was wiederum den Block danach verändert, und so weiter.

277
00:17:14,040 --> 00:17:16,370
Die ganze Arbeit müsste nochmal erledigt werden.

278
00:17:16,370 --> 00:17:21,660
Man müsste für jeden Block eine neue Nummer finden, mit der sein Hashwert mit 60 Nullen beginnt.

279
00:17:22,410 --> 00:17:25,040
Weil die Blöcke so aneinander gekettet sind,

280
00:17:25,040 --> 00:17:28,800
nennt man das ganze nicht Bestandsbuch, sondern "Blockkette".

281
00:17:30,050 --> 00:17:31,920
Im Rahmen unserer erweiterten Regeln

282
00:17:31,920 --> 00:17:34,780
erlauben wir jetzt allen Menschen auf der Welt Urheber eines Blocks zu sein.

283
00:17:35,230 --> 00:17:38,950
Das bedeutet, dass sie auf versendete Transaktionen achten,

284
00:17:38,950 --> 00:17:40,620
sie in einem Block sammeln,

285
00:17:40,620 --> 00:17:42,110
und dann eine ganze Menge Arbeit verrichten,

286
00:17:42,110 --> 00:17:46,400
um eine spezielle Zahl zu finden, mit der der Hashwert ihres Blocks mit 60 Nullen beginnt.

287
00:17:46,900 --> 00:17:50,210
Und sobald sie sie finden, senden sie den gesamten Block in die Welt hinaus.

288
00:17:50,970 --> 00:17:53,490
Um solche Blockerschaffer für ihre Arbeit zu belohnen

289
00:17:53,490 --> 00:17:55,270
erlauben wir ihnen

290
00:17:55,270 --> 00:17:59,070
eine ganz besondere Transaktion am Anfang ihres Block hinzuzufügen.

291
00:17:59,070 --> 00:18:02,780
In der sie beispielsweise 10 LD einfach so aus dem Nichts bekommen.

292
00:18:03,470 --> 00:18:05,230
Das nennt man die "Blockbelohnung".

293
00:18:05,230 --> 00:18:09,800
Sie ist eine Ausnahme was unsere Regeln für das Akzeptieren oder Ablehnen von Transaktionen angeht.

294
00:18:10,010 --> 00:18:13,190
Sie hat keinen Urheber, muss also auch nicht unterzeichnet werden.

295
00:18:13,600 --> 00:18:19,720
Und sie bedeutet auch, dass die absolute Anzahl an Ledger Dollars in unserer Wirtschaft mit jedem neuen Block steigt.

296
00:18:20,880 --> 00:18:23,200
Blocks zu kreieren wird oft als "Mining" bezeichnet [dt.: "abbauen" im Bergbau],

297
00:18:23,200 --> 00:18:25,220
da es sehr viel Arbeit erfordert

298
00:18:25,220 --> 00:18:28,460
und neues Geld in die Wirtschaft einbringt.

299
00:18:29,070 --> 00:18:31,470
Aber wenn du etwas über Miner hörst oder liest,

300
00:18:31,470 --> 00:18:33,730
für dir immer vor Augen, dass sie letztendlich

301
00:18:33,730 --> 00:18:36,630
nur auf Transaktionen achten, Blocks kreieren,

302
00:18:36,630 --> 00:18:40,900
diese Blocks senden, und dafür mit neuem Geld belohnt werden.

303
00:18:41,940 --> 00:18:46,230
Aus der Sicht eines Miners ist jeder Block wie eine Art Minilotto,

304
00:18:46,230 --> 00:18:49,140
bei dem jeder so schnell wie er kann Zahlen rät,

305
00:18:49,140 --> 00:18:52,460
bis jemand Glück hat und eine besondere Nummer findet,

306
00:18:52,460 --> 00:18:55,310
mit der der Hashwert des Blocks mit vielen Nullen beginnt.

307
00:18:55,310 --> 00:18:56,370
Und der bekommt dann die Belohnung.

308
00:18:58,040 --> 00:19:01,200
Alle anderen, die das System einfach nur für Zahlungen benutzen wollen,

309
00:19:01,200 --> 00:19:03,430
achten nicht auf Transaktionen,

310
00:19:03,430 --> 00:19:07,080
sondern auf Blöcke, die von Minern versendet werden,

311
00:19:07,080 --> 00:19:10,010
und aktualisieren ihre eigene, persönliche Kopie der Blockkette.

312
00:19:10,510 --> 00:19:13,320
Ein wichtiger Zusatz für unsere Regelung ist,

313
00:19:13,320 --> 00:19:17,930
dass wenn du zwei verschiedene Blockketten aufschnappst, deren Transaktionsverlauf sich widerspricht,

314
00:19:18,310 --> 00:19:22,350
dann hörst du auf die längere der beiden. Die, in der die meiste rechnerische Arbeit steckt.

315
00:19:22,900 --> 00:19:27,930
Wenn beide gleich lang sind, dann warte einfach bis du einen weiteren Block hörst, der eine der beiden länger macht.

316
00:19:28,720 --> 00:19:33,910
Das heißt obwohl es keine zentrale Autorität gibt, und jeder seine eigene Kopie der Blockkette aktuell hält,

317
00:19:34,180 --> 00:19:39,260
haben wir einen Weg uns alle einig zu sein, indem wir abmachen die Blockkette anzuerkennen,

318
00:19:39,660 --> 00:19:42,980
in der die meiste rechnerische Arbeit steckt.

319
00:19:43,640 --> 00:19:45,840
Um zu sehen, warum man diesem System vertrauen kann

320
00:19:45,840 --> 00:19:49,450
und um zu verstehen, wann man davon ausgehen kann, dass eine Zahlung authentisch ist,

321
00:19:49,450 --> 00:19:55,070
ist es am besten einmal zu überlegen was genau jemand tun müsste um dieses System zu überlisten.

322
00:19:55,650 --> 00:19:58,690
Vielleicht versucht Alice Bob zu betrügen,

323
00:19:59,030 --> 00:20:04,080
indem sie ihm einen Block schickt in dem sie ihm 100 LD zahlt,

324
00:20:04,420 --> 00:20:07,260
ohne aber diesen Block an den Rest des Netzwerks zu schicken.

325
00:20:07,620 --> 00:20:11,440
Auf diese Weise denken alle anderen, dass sie diese 100 LD noch selbst besitzt.

326
00:20:12,150 --> 00:20:17,250
Um das zu tun, müsste sie einen gültigen Ausführungsnachweis vor allen anderen Minern finden,

327
00:20:17,250 --> 00:20:18,860
die alle an ihrem eigenen Block arbeiten.

328
00:20:19,410 --> 00:20:20,990
Und das könnte definitiv passieren!

329
00:20:20,990 --> 00:20:24,980
Vielleicht gewinnt Alice diese Minilotterie einfach vor allen anderen.

330
00:20:25,680 --> 00:20:29,770
Aber Bob hört dennoch die Nachrichten aller anderen Miner.

331
00:20:30,080 --> 00:20:32,640
Damit er also Alice fehlerhaftem Block glaubt,

332
00:20:32,640 --> 00:20:35,440
müsste Alice die ganze Arbeit also selbst machen.

333
00:20:35,440 --> 00:20:39,440
Immer mehr Blocks an Bobs spezielle Blockkette hängen,

334
00:20:39,440 --> 00:20:42,330
die anders ist als das, was er von den anderen Minern hört.

335
00:20:42,720 --> 00:20:48,400
Denk dran, laut unserer Regelung vertraut Bob immer der längsten Kette, von der er weiß.

336
00:20:49,230 --> 00:20:51,960
Alice mag das vielleicht ein paar Blöcke lang schaffen.

337
00:20:51,960 --> 00:20:55,140
Solange sie durch Zufall Blöcke schneller findet

338
00:20:55,140 --> 00:20:58,050
als alle anderen Miner im Netzwerk zusammen.

339
00:20:58,560 --> 00:21:03,710
Aber solange sie nicht fast 50% aller Rechenressourcen im Netzwerk hat

340
00:21:04,080 --> 00:21:06,570
ist die Wahrscheinlichkeit unglaublich hoch,

341
00:21:06,570 --> 00:21:09,650
dass die Blockkette an der alle anderen Miner arbeiten,

342
00:21:09,650 --> 00:21:14,190
schneller wächst als die gefälschte Blockkette, die Alice an Bob weitergibt.

343
00:21:15,200 --> 00:21:19,820
Das heißt nach einer gewissen Zeit wird Bob ablehnen, was er von Alice hört

344
00:21:19,820 --> 00:21:23,100
und stattdessen der längeren Kette vertrauen, an der alle anderen arbeiten.

345
00:21:24,020 --> 00:21:29,250
Das bedeutet, dass du einem neuen Block, den du hörst, nicht sofort vertrauen solltest.

346
00:21:29,620 --> 00:21:33,420
Du solltest warten bis ein paar Blöcke an ihn hinzugefügt wurden.

347
00:21:33,890 --> 00:21:36,610
Wenn du dann noch immer von keiner längeren Blockkette gehört hast,

348
00:21:36,610 --> 00:21:40,860
dann kannst du davon ausgehen, dass dieser Block Teil der Kette ist, die alle anderen auch nutzen.

349
00:21:42,250 --> 00:21:45,520
Und damit hätten wir die wichtigsten Punkte geklärt.

350
00:21:45,850 --> 00:21:49,190
Dieses auf Ausführungsnachweisen basierende Bestandsbuchsystem

351
00:21:49,190 --> 00:21:53,810
ist mehr oder weniger die Funktionsweise von Bitcoins und anderen Kryptowährungen.

352
00:21:54,260 --> 00:21:56,280
Es gibt nur noch ein paar Details zu klären.

353
00:21:56,280 --> 00:21:59,480
Ich habe zum Beispiel gesagt, dass der Ausführungsnachweis eine spezielle Zahl sein kann,

354
00:21:59,480 --> 00:22:02,830
mit der der Hashwert eines Blocks mit 60 Nullen beginnt.

355
00:22:03,210 --> 00:22:08,400
Eigentlich funktioniert es so, dass die Anzahl dieser Nullen regelmäßig geändert wird,

356
00:22:08,400 --> 00:22:12,080
so dass im Durchschnitt alle 10 Minuten ein neuer Block gefunden wird.

357
00:22:12,800 --> 00:22:15,730
Das heißt wenn mehr und mehr Miner mitmachen

358
00:22:16,010 --> 00:22:18,230
wird die Herausforderung schwerer und schwerer.

359
00:22:18,230 --> 00:22:23,170
So dass die Minilotterie nur einen Gewinner alle 10 Minuten hat.

360
00:22:23,950 --> 00:22:28,080
Viele neue Kryptowährungen haben deutlich kürzere Blockzeiten als 10 Minuten.

361
00:22:28,660 --> 00:22:32,770
Und all das Geld in Bitcoins kommt letztendlich von Blockbelohnungen.

362
00:22:33,030 --> 00:22:35,890
Am Anfang lag diese Belohnung bei 50 Bitcoin pro Block.

363
00:22:36,190 --> 00:22:39,380
Es gibt eine gute Website auf die du gehen kannst, der "Block Explorer",

364
00:22:39,380 --> 00:22:41,760
auf der du dir die Bitcoin-Blockkette ansehen kannst.

365
00:22:41,990 --> 00:22:45,030
Und wenn du dir die ersten paar Blocks in der Kette anschaust,

366
00:22:45,030 --> 00:22:49,520
dann siehst du, dass sie keine Transaktionen enthalten, außer den 50 Bitcoins Belohnung für die Miner.

367
00:22:49,970 --> 00:22:54,800
Aber alle 210.000 Blocks, also in etwa alle vier Jahre,

368
00:22:54,800 --> 00:22:56,890
wird diese Belohnung halbiert.

369
00:22:56,890 --> 00:23:00,390
Im Moment liegt diese Belohnung bei 12,5 Bitcoins pro Block.

370
00:23:00,740 --> 00:23:04,340
Und weil diese Belohnung geometrisch verringert wird,

371
00:23:04,710 --> 00:23:09,750
bedeutet das, dass es nie mehr als 21 Millionen Bitcoins geben wird.

372
00:23:10,450 --> 00:23:13,520
Das bedeutet aber nicht, dass Miner kein Geld mehr verdienen.

373
00:23:13,950 --> 00:23:18,230
Zusätzlich zu den Blockbelohnung können Miner auch Transaktionsgebühren einnehmen.

374
00:23:18,500 --> 00:23:20,970
Das funktioniert indem du, jedes Mal wenn du eine Zahlung vornimmst,

375
00:23:20,970 --> 00:23:24,700
freiwillig eine kleine Transaktionsgebühr mitschickst

376
00:23:24,700 --> 00:23:28,620
die an den Miner geht, dessen Block deine Zahlung beinhaltet.

377
00:23:29,280 --> 00:23:32,100
Deine Motivation dahinter könnte sein, Miner dazu zu bringen,

378
00:23:32,100 --> 00:23:36,080
deine Zahlung im nächsten Block mitaufzunehmen.

379
00:23:36,430 --> 00:23:42,080
Bei Bitcoins ist jeder Block auf circa 2400 Transaktionen beschränkt,

380
00:23:42,080 --> 00:23:45,380
laut vieler Kritiker unnötig einschränkend.

381
00:23:45,970 --> 00:23:51,740
Zum Vergleich: Visa bearbeitet circa 1700 Transaktionen pro Sekunde

382
00:23:51,740 --> 00:23:55,510
und kommt theoretisch mit mehr als 24000 pro Sekunde klar.

383
00:23:56,240 --> 00:24:01,390
Diese verhältnismäßig langsame Verarbeitung bei Bitcoins zeiht höhere Transaktionsgebühren mit sich.

384
00:24:01,390 --> 00:24:06,410
Denn die entscheiden letztendlich welche Transaktionen die Miner in ihre Blöcke aufnehmen.

385
00:24:08,160 --> 00:24:12,140
All das ist bei weitem keine allumfassende Erklärung von Kryptowährungen.

386
00:24:12,140 --> 00:24:16,400
Es gibt noch viele Nuancen und andere Funktionsweisen, die ich nicht erwähnt habe.

387
00:24:16,720 --> 00:24:21,550
Aber ich hoffe, dass ich eine Art "Aber warum...?"-Basis geschaffen habe

388
00:24:21,550 --> 00:24:24,710
auf der man weiter aufbauen kann.

389
00:24:25,250 --> 00:24:26,280
Wie ich bereits am Anfang gesagt habe,

390
00:24:26,280 --> 00:24:31,170
ein Hauptmotiv für dieses Video ist, dass viel Geld begonnen hat in Kryptowährungen zu fließen.

391
00:24:31,370 --> 00:24:35,090
Und obwohl ich keine Aussage dazu machen möchte, ob das eine gute oder schlechte Investition ist,

392
00:24:35,330 --> 00:24:38,210
glaube ich, dass es eine gute Startvoraussetzung für Leute ist

393
00:24:38,210 --> 00:24:40,720
zumindest die Grundlagen der Technologie zu kennen.

394
00:24:41,550 --> 00:24:45,750
Wie jedes Mal geht mein außerordentlicher Dank an diejenigen von euch, die diesen Kanal über Patreon möglich machen.

395
00:24:46,170 --> 00:24:49,180
Ich verstehe, dass nicht jeder in der Lage ist, etwas beisteuern zu können.

396
00:24:49,180 --> 00:24:51,280
Aber wenn du dennoch mithelfen möchtest,

397
00:24:51,280 --> 00:24:52,700
dann ist einer der besten Wege das zu tun,

398
00:24:52,700 --> 00:24:57,200
einfach die Videos, von denen du glaubst, das sie für andere nützlich sein könnten, zu teilen.

