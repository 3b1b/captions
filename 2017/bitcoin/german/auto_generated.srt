1
00:00:03,900 --> 00:00:06,480
Was bedeutet es, einen Bitcoin zu haben?

2
00:00:07,420 --> 00:00:11,007
Viele haben von Bitcoin gehört, dass es sich um eine vollständig digitale Währung 

3
00:00:11,007 --> 00:00:13,588
handelt, die nicht von einer Regierung herausgegeben wird, 

4
00:00:13,588 --> 00:00:17,525
dass keine Banken Konten verwalten und Transaktionen verifizieren müssen und dass niemand 

5
00:00:17,525 --> 00:00:19,100
wirklich weiß, wer sie erfunden hat.

6
00:00:19,380 --> 00:00:22,118
Und doch kennen viele Menschen die Antwort auf diese Frage nicht, 

7
00:00:22,118 --> 00:00:23,280
zumindest nicht vollständig.

8
00:00:24,100 --> 00:00:27,513
Um das Ziel zu erreichen und sicherzustellen, dass die technischen Details, 

9
00:00:27,513 --> 00:00:30,433
die der Antwort zugrunde liegen, tatsächlich motivierend wirken, 

10
00:00:30,433 --> 00:00:34,161
werden wir Schritt für Schritt durchgehen, wie du deine eigene Version von Bitcoin 

11
00:00:34,161 --> 00:00:35,240
erfunden haben könntest.

12
00:00:36,140 --> 00:00:39,312
Wir fangen damit an, dass du die Zahlungen mit deinen Freunden mit Hilfe 

13
00:00:39,312 --> 00:00:42,051
eines gemeinsamen Hauptbuchs verfolgst. Wenn du dann anfängst, 

14
00:00:42,051 --> 00:00:45,137
deinen Freunden und der Welt um dich herum immer weniger zu vertrauen, 

15
00:00:45,137 --> 00:00:48,657
und wenn du schlau genug bist, ein paar Ideen aus der Kryptografie einzubringen, 

16
00:00:48,657 --> 00:00:50,700
um die Notwendigkeit von Vertrauen zu umgehen, 

17
00:00:50,700 --> 00:00:52,700
hast du am Ende eine sogenannte Kryptowährung.

18
00:00:53,840 --> 00:00:57,841
Bitcoin ist nur das erste umgesetzte Beispiel einer Kryptowährung, 

19
00:00:57,841 --> 00:01:02,560
und inzwischen gibt es Tausende weitere an Börsen mit traditionellen Währungen.

20
00:01:03,300 --> 00:01:06,191
Wenn du dich auf den Weg machst, dein eigenes Spiel zu erfinden, 

21
00:01:06,191 --> 00:01:09,349
kannst du die Grundlagen dafür schaffen, einige der neueren Spieler zu 

22
00:01:09,349 --> 00:01:13,220
verstehen und zu erkennen, wann und warum es Raum für andere Designentscheidungen gibt.

23
00:01:14,100 --> 00:01:17,454
Einer der Gründe, warum ich dieses Thema gewählt habe, ist, 

24
00:01:17,454 --> 00:01:20,305
dass es im letzten Jahr eine Menge Aufmerksamkeit, 

25
00:01:20,305 --> 00:01:23,660
Investitionen und einen Hype um diese Währungen gegeben hat.

26
00:01:24,280 --> 00:01:27,457
Ich werde keine Kommentare oder Spekulationen über die aktuellen oder zukünftigen 

27
00:01:27,457 --> 00:01:30,364
Wechselkurse abgeben, aber ich denke, wir sind uns alle einig, dass jeder, 

28
00:01:30,364 --> 00:01:33,620
der eine Kryptowährung kaufen möchte, wirklich wissen sollte, worum es sich handelt.

29
00:01:33,920 --> 00:01:38,157
Und damit meine ich nicht nur Analogien mit vagen Verbindungen zum Goldschürfen, 

30
00:01:38,157 --> 00:01:42,238
sondern eine tatsächliche, direkte Beschreibung dessen, was die Computer tun, 

31
00:01:42,238 --> 00:01:45,220
wenn wir Kryptowährungen senden, empfangen und erstellen.

32
00:01:46,300 --> 00:01:48,694
Eine Sache, die es zu betonen gilt, ist, dass, 

33
00:01:48,694 --> 00:01:53,278
auch wenn du und ich uns hier in die Details vertiefen werden, und das braucht viel Zeit, 

34
00:01:53,278 --> 00:01:57,556
du diese Details nicht kennen musst, wenn du die Kryptowährung einfach nur benutzen 

35
00:01:57,556 --> 00:02:01,275
willst, genauso wie du nicht wissen musst, was unter der Haube passiert, 

36
00:02:01,275 --> 00:02:03,160
wenn du eine Kreditkarte durchziehst.

37
00:02:03,720 --> 00:02:06,847
Wie bei jeder digitalen Zahlung gibt es viele benutzerfreundliche Anwendungen, 

38
00:02:06,847 --> 00:02:09,380
mit denen du die Währungen einfach senden und empfangen kannst, 

39
00:02:09,380 --> 00:02:11,360
ohne darüber nachzudenken, was eigentlich los ist.

40
00:02:11,660 --> 00:02:15,237
Der Unterschied ist, dass das Rückgrat nicht eine Bank ist, 

41
00:02:15,237 --> 00:02:19,769
die Transaktionen verifiziert, sondern ein cleveres System der dezentralen, 

42
00:02:19,769 --> 00:02:24,480
vertrauenslosen Verifizierung, das auf der Mathematik der Kryptografie basiert.

43
00:02:25,900 --> 00:02:27,931
Aber zu Beginn möchte ich, dass du den Gedanken an 

44
00:02:27,931 --> 00:02:30,480
Kryptowährungen und all das für ein paar Minuten beiseite lässt.

45
00:02:31,080 --> 00:02:33,351
Wir beginnen die Geschichte mit etwas Bodenständigerem, 

46
00:02:33,351 --> 00:02:35,380
nämlich mit Hauptbüchern und digitalen Signaturen.

47
00:02:36,340 --> 00:02:38,997
Wenn du und deine Freunde ziemlich häufig Geld tauschen, 

48
00:02:38,997 --> 00:02:43,054
weil ihr euren Anteil an der Rechnung für das Abendessen bezahlt, kann es lästig sein, 

49
00:02:43,054 --> 00:02:44,360
ständig Bargeld zu tauschen.

50
00:02:44,720 --> 00:02:48,116
Du könntest also ein gemeinsames Buch führen, in dem du alle Zahlungen festhältst, 

51
00:02:48,116 --> 00:02:50,080
die du irgendwann in der Zukunft leisten willst.

52
00:02:50,620 --> 00:02:55,100
Alice zahlt Bob 20 Dollar, Bob zahlt Charlie 40 Dollar und so weiter.

53
00:02:55,500 --> 00:02:58,881
Dieses Hauptbuch wird etwas Öffentliches und für alle zugänglich sein, 

54
00:02:58,881 --> 00:03:01,740
wie eine Website, auf der jeder neue Zeilen hinzufügen kann.

55
00:03:02,480 --> 00:03:05,162
Angenommen, am Ende des Monats kommt ihr alle zusammen, 

56
00:03:05,162 --> 00:03:07,940
schaut euch die Liste der Transaktionen an und rechnet ab.

57
00:03:08,280 --> 00:03:11,360
Wenn du mehr ausgibst als du einnimmst, legst du dieses Geld in den Topf, 

58
00:03:11,360 --> 00:03:14,400
und wenn du mehr einnimmst als du ausgibst, nimmst du dieses Geld heraus.

59
00:03:15,460 --> 00:03:19,360
Das Protokoll, um Teil dieses sehr einfachen Systems zu sein, könnte also so aussehen.

60
00:03:20,020 --> 00:03:22,615
Jeder kann Zeilen in das Hauptbuch eintragen und am 

61
00:03:22,615 --> 00:03:25,360
Ende des Monats kommt ihr alle zusammen und rechnet ab.

62
00:03:26,300 --> 00:03:29,048
Ein Problem bei einem öffentlichen Hauptbuch wie diesem ist, 

63
00:03:29,048 --> 00:03:30,760
dass jeder eine Zeile hinzufügen kann.

64
00:03:31,020 --> 00:03:35,445
Was hindert Bob also daran, zu schreiben, dass Alice Bob 100 Dollar zahlt, 

65
00:03:35,445 --> 00:03:36,920
ohne dass Alice zustimmt?

66
00:03:37,780 --> 00:03:41,461
Wie sollen wir darauf vertrauen, dass all diese Transaktionen das sind, 

67
00:03:41,461 --> 00:03:43,200
was der Absender beabsichtigt hat?

68
00:03:44,580 --> 00:03:48,540
Hier kommt der erste Teil der Kryptografie ins Spiel: die digitale Unterschrift.

69
00:03:49,480 --> 00:03:53,841
Wie bei einer handschriftlichen Unterschrift sollte Alice in der Lage sein, 

70
00:03:53,841 --> 00:03:58,948
der Transaktion etwas hinzuzufügen, das beweist, dass sie sie gesehen und genehmigt hat, 

71
00:03:58,948 --> 00:04:03,080
und es sollte für andere unmöglich sein, diese Unterschrift zu fälschen.

72
00:04:04,300 --> 00:04:06,460
Auf den ersten Blick mag es so aussehen, als ob eine 

73
00:04:06,460 --> 00:04:08,580
digitale Unterschrift gar nicht möglich sein sollte.

74
00:04:09,220 --> 00:04:11,481
Ich meine, die Daten, aus denen die Unterschrift besteht, 

75
00:04:11,481 --> 00:04:13,860
können einfach von einem Computer gelesen und kopiert werden.

76
00:04:14,400 --> 00:04:16,140
Wie kann man also Fälschungen verhindern?

77
00:04:17,320 --> 00:04:22,363
Das funktioniert so, dass jeder ein so genanntes Public-Key-Private-Key-Paar erstellt, 

78
00:04:22,363 --> 00:04:24,160
das wie eine Bitfolge aussieht.

79
00:04:24,800 --> 00:04:27,723
Der private Schlüssel wird manchmal auch als geheimer Schlüssel bezeichnet, 

80
00:04:27,723 --> 00:04:30,953
daher können wir ihn mit SK abkürzen, während wir den öffentlichen Schlüssel mit PK 

81
00:04:30,953 --> 00:04:31,300
abkürzen.

82
00:04:32,340 --> 00:04:34,884
Wie der Name schon sagt, ist dieser geheime Schlüssel etwas, 

83
00:04:34,884 --> 00:04:36,220
das du für dich behalten willst.

84
00:04:37,060 --> 00:04:40,153
In der realen Welt sieht deine handschriftliche Unterschrift immer gleich aus, 

85
00:04:40,153 --> 00:04:41,720
egal welches Dokument du unterschreibst.

86
00:04:42,280 --> 00:04:44,762
Aber eine digitale Signatur ist eigentlich viel stärker, 

87
00:04:44,762 --> 00:04:46,940
weil sie sich für verschiedene Nachrichten ändert.

88
00:04:47,840 --> 00:04:52,432
Sie sieht aus wie eine Reihe von 1en und 0en, in der Regel etwa 256 Bits, 

89
00:04:52,432 --> 00:04:55,908
und wenn du die Nachricht auch nur geringfügig änderst, 

90
00:04:55,908 --> 00:04:59,880
ändert sich das Aussehen der Signatur dieser Nachricht komplett.

91
00:05:00,840 --> 00:05:04,713
Etwas formeller ausgedrückt: Die Erstellung einer Signatur erfordert eine Funktion, 

92
00:05:04,713 --> 00:05:08,540
die sowohl von der Nachricht selbst als auch von deinem privaten Schlüssel abhängt.

93
00:05:09,200 --> 00:05:12,638
Der private Schlüssel stellt sicher, dass nur du diese Signatur erstellen kannst, 

94
00:05:12,638 --> 00:05:15,321
und die Tatsache, dass sie von der Nachricht abhängt, bedeutet, 

95
00:05:15,321 --> 00:05:18,633
dass niemand einfach eine deiner Signaturen kopieren und sie auf einer anderen 

96
00:05:18,633 --> 00:05:19,640
Nachricht fälschen kann.

97
00:05:21,000 --> 00:05:24,317
Parallel dazu gibt es eine zweite Funktion, mit der überprüft wird, 

98
00:05:24,317 --> 00:05:28,220
ob eine Signatur gültig ist, und hier kommt der öffentliche Schlüssel ins Spiel.

99
00:05:29,200 --> 00:05:31,577
Sie gibt lediglich true oder false aus, um anzuzeigen, 

100
00:05:31,577 --> 00:05:34,128
ob die Signatur mit dem privaten Schlüssel erstellt wurde, 

101
00:05:34,128 --> 00:05:37,760
der mit dem öffentlichen Schlüssel verknüpft ist, den du zur Überprüfung verwendest.

102
00:05:38,640 --> 00:05:42,694
Ich werde nicht ins Detail gehen, wie genau diese beiden Funktionen funktionieren, 

103
00:05:42,694 --> 00:05:45,478
aber die Idee ist, dass es völlig unmöglich sein sollte, 

104
00:05:45,478 --> 00:05:49,240
eine gültige Signatur zu finden, wenn du den geheimen Schlüssel nicht kennst.

105
00:05:50,060 --> 00:05:53,847
Konkret gibt es keine bessere Strategie als das Erraten und Überprüfen zufälliger 

106
00:05:53,847 --> 00:05:57,820
Signaturen, die du mit dem öffentlichen Schlüssel, den jeder kennt, überprüfen kannst.

107
00:05:58,980 --> 00:06:03,200
Überlege nun, wie viele Unterschriften es mit einer Länge von 256 Bit gibt.

108
00:06:03,840 --> 00:06:06,180
Das ist 2 hoch 256!

109
00:06:07,140 --> 00:06:09,560
Das ist eine verdammt große Zahl.

110
00:06:09,860 --> 00:06:11,812
Ihn als astronomisch groß zu bezeichnen, würde 

111
00:06:11,812 --> 00:06:13,640
der Astronomie viel zu viel Ehre einbringen.

112
00:06:14,260 --> 00:06:16,999
Ich habe sogar ein zusätzliches Video gedreht, 

113
00:06:16,999 --> 00:06:19,680
um zu zeigen, was für eine große Zahl das ist.

114
00:06:20,380 --> 00:06:24,212
An dieser Stelle sei nur gesagt, dass du bei der Überprüfung einer Unterschrift 

115
00:06:24,212 --> 00:06:26,799
für eine bestimmte Nachricht sehr sicher sein kannst, 

116
00:06:26,799 --> 00:06:30,824
dass jemand sie nur dann erstellt haben kann, wenn er den geheimen Schlüssel kennt, 

117
00:06:30,824 --> 00:06:35,040
der mit dem öffentlichen Schlüssel verbunden ist, den du zur Überprüfung verwendet hast.

118
00:06:37,120 --> 00:06:40,050
Sicherzustellen, dass die Leute Transaktionen im Hauptbuch unterschreiben, 

119
00:06:40,050 --> 00:06:42,200
ist ziemlich gut, aber es gibt ein kleines Schlupfloch.

120
00:06:42,720 --> 00:06:46,738
Wenn Alice eine Transaktion unterschreibt, z. B. Alice zahlt Bob 100 Dollar, 

121
00:06:46,738 --> 00:06:50,705
kann Bob zwar Alices Unterschrift auf einer neuen Nachricht nicht fälschen, 

122
00:06:50,705 --> 00:06:53,680
aber er kann dieselbe Zeile so oft kopieren, wie er will.

123
00:06:54,300 --> 00:06:57,220
Diese Kombination aus Nachricht und Unterschrift bleibt gültig.

124
00:06:57,920 --> 00:07:01,310
Um dies zu umgehen, müssen wir dafür sorgen, dass die Nachricht, 

125
00:07:01,310 --> 00:07:05,117
wenn du eine Transaktion unterschreibst, eine Art eindeutige ID enthält, 

126
00:07:05,117 --> 00:07:07,100
die mit der Transaktion verknüpft ist.

127
00:07:07,840 --> 00:07:10,817
Wenn Alice also Bob mehrmals 100 Dollar zahlt, 

128
00:07:10,817 --> 00:07:15,380
erfordert jede dieser Zeilen im Hauptbuch eine völlig neue Unterschrift.

129
00:07:16,760 --> 00:07:19,373
Großartig, digitale Signaturen beseitigen einen großen 

130
00:07:19,373 --> 00:07:21,940
Teil des Vertrauens in dieses ursprüngliche Protokoll.

131
00:07:22,380 --> 00:07:24,703
Aber selbst wenn du das wirklich tun würdest, 

132
00:07:24,703 --> 00:07:27,280
würdest du dich auf eine Art Ehrensystem verlassen.

133
00:07:27,720 --> 00:07:30,307
Du vertraust nämlich darauf, dass sich alle daran 

134
00:07:30,307 --> 00:07:32,740
halten und am Ende des Monats in bar abrechnen.

135
00:07:33,560 --> 00:07:36,467
Was ist, wenn Charlie zum Beispiel Tausende von Dollar 

136
00:07:36,467 --> 00:07:39,480
Schulden anhäuft und sich einfach weigert, zu erscheinen?

137
00:07:40,120 --> 00:07:44,037
Der einzige wirkliche Grund, auf Bargeld zurückzugreifen, 

138
00:07:44,037 --> 00:07:47,280
ist, wenn einige Leute eine Menge Geld schulden.

139
00:07:47,860 --> 00:07:52,093
Vielleicht hast du die schlaue Idee, dass du eigentlich nie mit Bargeld abrechnen musst, 

140
00:07:52,093 --> 00:07:55,803
solange du irgendwie verhindern kannst, dass die Leute zu viel mehr ausgeben, 

141
00:07:55,803 --> 00:07:56,660
als sie einnehmen.

142
00:07:57,340 --> 00:08:00,863
Vielleicht fängst du damit an, dass jeder 100 Dollar in den Topf 

143
00:08:00,863 --> 00:08:03,789
einzahlt und die ersten Zeilen des Hauptbuchs lauten: 

144
00:08:03,789 --> 00:08:08,180
Alice bekommt 100 Dollar, Bob bekommt 100 Dollar, Charlie bekommt 100 Dollar usw.

145
00:08:09,020 --> 00:08:13,651
Akzeptiere einfach keine Transaktionen, bei denen jemand mehr ausgibt, 

146
00:08:13,651 --> 00:08:16,000
als er bereits in diesem Ledger hat.

147
00:08:16,840 --> 00:08:20,402
Wenn die ersten beiden Transaktionen beispielsweise lauten: 

148
00:08:20,402 --> 00:08:25,627
Charlie zahlt Alice 50 Dollar und Charlie zahlt Bob 50 Dollar. Wenn er versuchen würde, 

149
00:08:25,627 --> 00:08:29,724
Charlie zahlt dir 20 Dollar hinzuzufügen, wäre das genauso ungültig, 

150
00:08:29,724 --> 00:08:32,100
wie wenn er es nie unterschrieben hätte.

151
00:08:32,940 --> 00:08:36,193
Das bedeutet, dass man für die Überprüfung einer Transaktion 

152
00:08:36,193 --> 00:08:39,500
die gesamte Historie der bisherigen Transaktionen kennen muss.

153
00:08:40,159 --> 00:08:43,219
Das gilt auch für Kryptowährungen, auch wenn es 

154
00:08:43,219 --> 00:08:45,960
noch ein wenig Raum für Optimierungen gibt.

155
00:08:48,380 --> 00:08:52,129
Interessant dabei ist, dass dieser Schritt die Verbindung zwischen 

156
00:08:52,129 --> 00:08:55,600
dem Ledger und den tatsächlichen physischen US-Dollar aufhebt.

157
00:08:56,200 --> 00:09:00,202
Theoretisch könntest du, wenn alle Menschen auf der Welt diesen Ledger benutzen würden, 

158
00:09:00,202 --> 00:09:04,204
dein ganzes Leben damit verbringen, Geld über diesen Ledger zu senden und zu empfangen, 

159
00:09:04,204 --> 00:09:06,660
ohne es jemals in echte US-Dollar umrechnen zu müssen.

160
00:09:07,580 --> 00:09:11,124
Um dies zu verdeutlichen, bezeichnen wir die Mengen 

161
00:09:11,124 --> 00:09:14,260
im Hauptbuch als Hauptbuchdollar oder kurz LD.

162
00:09:14,820 --> 00:09:18,660
Es steht dir natürlich frei, Ledger-Dollar in echte US-Dollar zu tauschen.

163
00:09:19,060 --> 00:09:22,612
Ein Beispiel: Alice gibt Bob in der realen Welt einen 10-Dollar-Schein, 

164
00:09:22,612 --> 00:09:26,510
und im Gegenzug fügt er die Transaktion 10 Dollar hinzu und unterschreibt sie, 

165
00:09:26,510 --> 00:09:29,520
und Bob zahlt Alice 10 Dollar in dieses gemeinsame Hauptbuch.

166
00:09:30,720 --> 00:09:34,220
Aber ein solcher Austausch wird durch das Protokoll nicht garantiert.

167
00:09:34,720 --> 00:09:37,589
Es ist jetzt eher vergleichbar mit dem Tausch von Dollar 

168
00:09:37,589 --> 00:09:40,560
gegen Euro oder einer anderen Währung auf dem freien Markt.

169
00:09:41,180 --> 00:09:43,800
Es ist einfach eine eigenständige Sache.

170
00:09:44,580 --> 00:09:46,948
Das ist die erste wichtige Sache, die du über 

171
00:09:46,948 --> 00:09:49,780
Bitcoin oder jede andere Kryptowährung verstehen musst.

172
00:09:49,780 --> 00:09:52,420
Was es ist, ist ein Hauptbuch.

173
00:09:53,180 --> 00:09:55,980
Die Geschichte der Transaktionen ist die Währung.

174
00:09:57,160 --> 00:09:59,985
Bei Bitcoin kommt das Geld natürlich nicht in das Hauptbuch, 

175
00:09:59,985 --> 00:10:01,560
wenn die Leute mit Bargeld kaufen.

176
00:10:02,000 --> 00:10:04,820
Wie neues Geld in das Hauptbuch kommt, erkläre ich dir in ein paar Minuten.

177
00:10:05,540 --> 00:10:08,661
Aber davor gibt es einen noch größeren Unterschied zwischen unserem 

178
00:10:08,661 --> 00:10:12,380
derzeitigen System der Ledger-Dollars und der Funktionsweise von Kryptowährungen.

179
00:10:13,020 --> 00:10:16,106
Bisher habe ich gesagt, dass sich dieses Buch an einem öffentlichen Ort befindet, 

180
00:10:16,106 --> 00:10:18,440
z. B. auf einer Website, wo jeder neue Zeilen hinzufügen kann.

181
00:10:19,220 --> 00:10:22,710
Aber dazu müsste man einer zentralen Stelle vertrauen, nämlich demjenigen, 

182
00:10:22,710 --> 00:10:26,760
der die Website hostet und der die Regeln für das Hinzufügen neuer Zeilen kontrolliert.

183
00:10:27,340 --> 00:10:31,960
Um dieses Misstrauen zu beseitigen, muss jeder seine eigene Kopie des Hauptbuchs behalten.

184
00:10:32,660 --> 00:10:36,897
Wenn du dann eine Transaktion durchführst, z.B. Alice zahlt Bob 100 Dollar, 

185
00:10:36,897 --> 00:10:40,465
sendest du das in die Welt hinaus, damit die Leute es hören und 

186
00:10:40,465 --> 00:10:43,420
in ihren eigenen privaten Ledgern aufzeichnen können.

187
00:10:44,840 --> 00:10:49,260
Aber wenn du nicht mehr tust, ist dieses System absurd schlecht.

188
00:10:49,820 --> 00:10:52,740
Wie kannst du erreichen, dass sich alle einig sind, was das richtige Buch ist?

189
00:10:53,440 --> 00:10:56,849
Wenn Bob eine Transaktion erhält, z. B. wenn Alice ihm 10 Dollar zahlt, 

190
00:10:56,849 --> 00:11:01,017
wie kann er dann sicher sein, dass alle anderen dieselbe Transaktion erhalten haben und 

191
00:11:01,017 --> 00:11:01,680
daran glauben?

192
00:11:02,340 --> 00:11:04,846
Dass er später zu Charlie gehen und die gleichen 

193
00:11:04,846 --> 00:11:07,200
10 Dollar für eine Transaktion verwenden kann?

194
00:11:08,240 --> 00:11:12,060
Stell dir wirklich vor, du hörst nur zu, wie Transaktionen gesendet werden.

195
00:11:12,760 --> 00:11:15,260
Wie kannst du sicher sein, dass alle anderen die 

196
00:11:15,260 --> 00:11:18,220
gleichen Vorgänge in der gleichen Reihenfolge aufzeichnen?

197
00:11:19,420 --> 00:11:21,360
Das ist wirklich der Kern des Problems.

198
00:11:21,600 --> 00:11:22,740
Das ist ein interessantes Rätsel.

199
00:11:23,420 --> 00:11:27,074
Kannst du dir ein Protokoll ausdenken, wie und in welcher Reihenfolge 

200
00:11:27,074 --> 00:11:30,989
du Transaktionen akzeptierst oder ablehnst, so dass du sicher sein kannst, 

201
00:11:30,989 --> 00:11:34,331
dass jeder andere auf der Welt, der dasselbe Protokoll befolgt, 

202
00:11:34,331 --> 00:11:37,620
ein persönliches Hauptbuch hat, das genauso aussieht wie deins?

203
00:11:38,300 --> 00:11:41,580
Das ist das Problem, das in dem ursprünglichen Bitcoin-Papier angesprochen wurde.

204
00:11:44,060 --> 00:11:47,057
Die Lösung, die Bitcoin bietet, besteht darin, 

205
00:11:47,057 --> 00:11:52,160
demjenigen Ledger zu vertrauen, in den die meiste Rechenarbeit investiert wurde.

206
00:11:52,540 --> 00:11:54,860
Ich nehme mir einen Moment Zeit, um zu erklären, was das genau bedeutet.

207
00:11:55,320 --> 00:11:58,120
Es handelt sich um eine kryptografische Hash-Funktion.

208
00:11:58,460 --> 00:12:03,104
Der Grundgedanke, auf den wir aufbauen, ist, dass man betrügerische Transaktionen 

209
00:12:03,104 --> 00:12:07,409
und widersprüchliche Hauptbücher nur mit einem unzureichenden Rechenaufwand 

210
00:12:07,409 --> 00:12:12,280
bewerkstelligen kann, wenn man die Rechenarbeit als Grundlage für das Vertrauen nutzt.

211
00:12:13,040 --> 00:12:16,804
Ich möchte dich noch einmal daran erinnern, dass dies weit über das hinausgeht, 

212
00:12:16,804 --> 00:12:19,580
was man wissen muss, um eine Währung wie diese zu benutzen.

213
00:12:20,120 --> 00:12:23,094
Aber es ist eine wirklich coole Idee, und wenn du sie verstehst, 

214
00:12:23,094 --> 00:12:26,160
verstehst du auch das Herz von Bitcoin und anderen Kryptowährungen.

215
00:12:28,100 --> 00:12:29,940
Das Wichtigste zuerst: Was ist eine Hash-Funktion?

216
00:12:30,800 --> 00:12:37,802
Die Eingaben für eine dieser Funktionen können jede Art von Nachricht oder Datei sein, 

217
00:12:37,802 --> 00:12:40,620
es sieht wirklich nach 256 Bit aus.

218
00:12:41,180 --> 00:12:44,983
Diese Ausgabe wird als Hash oder Digest der Nachricht 

219
00:12:44,983 --> 00:12:47,660
bezeichnet und soll zufällig aussehen.

220
00:12:48,000 --> 00:12:51,660
Es ist nicht zufällig, es gibt immer die gleiche Ausgabe für eine bestimmte Eingabe.

221
00:12:52,200 --> 00:12:55,360
Aber die Idee ist, dass wenn du die Eingabe leicht änderst, 

222
00:12:55,360 --> 00:13:00,100
vielleicht nur eines der Zeichen bearbeitest, sich der resultierende Hash komplett ändert.

223
00:13:00,820 --> 00:13:05,540
Bei der Hashfunktion SHA256, die ich hier zeige, ist die Art und Weise, 

224
00:13:05,540 --> 00:13:11,440
wie sich die Ausgabe ändert, wenn du die Eingabe leicht veränderst, völlig unvorhersehbar.

225
00:13:12,440 --> 00:13:17,060
Das ist nicht irgendeine Hash-Funktion, sondern eine kryptografische Hash-Funktion.

226
00:13:17,340 --> 00:13:20,660
Das bedeutet, dass es nicht möglich ist, in umgekehrter Richtung zu rechnen.

227
00:13:21,260 --> 00:13:25,894
Wenn ich dir eine Reihe von 1en und 0en zeige und dich bitte, 

228
00:13:25,894 --> 00:13:32,023
eine Eingabe für den SHA256-Hash zu finden, wirst du keine bessere Methode haben, 

229
00:13:32,023 --> 00:13:34,640
als einfach zu raten und zu prüfen.

230
00:13:35,700 --> 00:13:40,162
Und wenn du ein Gefühl dafür bekommen willst, wie viel Rechenarbeit nötig wäre, 

231
00:13:40,162 --> 00:13:43,900
um 256 Vermutungen durchzugehen, dann schau dir das Zusatzvideo an.

232
00:13:44,380 --> 00:13:46,660
Ich hatte eigentlich viel zu viel Spaß beim Schreiben dieses Artikels.

233
00:13:48,560 --> 00:13:51,295
Du könntest denken, dass du, wenn du dich mit der genauen 

234
00:13:51,295 --> 00:13:54,313
Funktionsweise dieser Funktion beschäftigst, die entsprechenden 

235
00:13:54,313 --> 00:13:57,520
Eingaben zurückentwickeln könntest, ohne raten und prüfen zu müssen.

236
00:13:58,240 --> 00:14:00,840
Aber niemand hat je einen Weg gefunden, das zu tun.

237
00:14:01,600 --> 00:14:04,523
Interessanterweise gibt es keinen harten, rigorosen Beweis dafür, 

238
00:14:04,523 --> 00:14:06,960
dass es schwer ist, in umgekehrter Richtung zu rechnen.

239
00:14:07,620 --> 00:14:10,976
Und doch hängt ein großer Teil der modernen Sicherheit von kryptografischen 

240
00:14:10,976 --> 00:14:14,200
Hash-Funktionen und der Vorstellung ab, dass sie diese Eigenschaft haben.

241
00:14:14,940 --> 00:14:19,364
Wenn du dir ansiehst, welche Algorithmen der sicheren Verbindung zugrunde liegen, 

242
00:14:19,364 --> 00:14:23,034
die dein Browser gerade mit YouTube oder mit deiner Bank herstellt, 

243
00:14:23,034 --> 00:14:25,840
wirst du dort wahrscheinlich den Namen SHA256 sehen.

244
00:14:27,340 --> 00:14:31,940
Im Moment konzentrieren wir uns darauf, wie eine solche Funktion beweisen kann, 

245
00:14:31,940 --> 00:14:37,000
dass eine bestimmte Liste von Transaktionen mit einem hohen Rechenaufwand verbunden ist.

246
00:14:38,040 --> 00:14:42,455
Stell dir vor, jemand zeigt dir eine Liste von Transaktionen und sagt: "Hey, 

247
00:14:42,455 --> 00:14:47,156
ich habe eine spezielle Zahl gefunden, die, wenn du sie ans Ende dieser Liste von 

248
00:14:47,156 --> 00:14:50,367
Transaktionen setzt und SHA256 auf das Ganze anwendest, 

249
00:14:50,367 --> 00:14:53,120
die ersten 30 Bits der Ausgabe alle Nullen sind.

250
00:14:54,100 --> 00:14:56,700
Was glaubst du, wie schwer es für sie war, diese Zahl zu finden?

251
00:14:58,060 --> 00:15:01,381
Bei einer zufälligen Nachricht ist die Wahrscheinlichkeit, 

252
00:15:01,381 --> 00:15:05,434
dass ein Hash mit 30 aufeinanderfolgenden Nullen beginnt, 1 zu 2 zu 30, 

253
00:15:05,434 --> 00:15:07,180
also etwa 1 zu einer Milliarde.

254
00:15:08,200 --> 00:15:12,336
Und weil SHA256 eine kryptografische Hash-Funktion ist, ist die einzige Möglichkeit, 

255
00:15:12,336 --> 00:15:15,840
eine spezielle Zahl wie diese zu finden, einfaches Raten und Überprüfen.

256
00:15:16,660 --> 00:15:19,520
Diese Person musste also mit ziemlicher Sicherheit etwa eine Milliarde 

257
00:15:19,520 --> 00:15:22,380
verschiedene Nummern durchgehen, bevor sie diese spezielle Nummer fand.

258
00:15:23,380 --> 00:15:26,068
Und wenn du diese Zahl kennst, kannst du sie schnell überprüfen. 

259
00:15:26,068 --> 00:15:28,840
Du musst nur den Hash ausführen und siehst, dass es 30 Nullen sind.

260
00:15:29,800 --> 00:15:33,789
Mit anderen Worten: Du kannst nachweisen, dass sie sich viel Mühe gegeben haben, 

261
00:15:33,789 --> 00:15:36,400
ohne dass du selbst diese Mühe auf dich nehmen musst.

262
00:15:37,200 --> 00:15:38,800
Das nennt man einen Arbeitsnachweis.

263
00:15:39,460 --> 00:15:42,046
Und ganz wichtig: All diese Arbeit ist untrennbar 

264
00:15:42,046 --> 00:15:44,220
mit der Liste der Transaktionen verbunden.

265
00:15:44,900 --> 00:15:47,874
Wenn du eine dieser Transaktionen auch nur geringfügig änderst, 

266
00:15:47,874 --> 00:15:49,640
würde das den Hash komplett verändern.

267
00:15:50,080 --> 00:15:52,587
Du müsstest also eine weitere Milliarde Mal raten, 

268
00:15:52,587 --> 00:15:56,274
um einen neuen Arbeitsnachweis zu finden, eine neue Zahl, die dafür sorgt, 

269
00:15:56,274 --> 00:16:00,600
dass der Hash der geänderten Liste zusammen mit dieser neuen Zahl mit 30 Nullen beginnt.

270
00:16:01,500 --> 00:16:04,100
Denke also zurück an unsere Situation mit dem verteilten Hauptbuch.

271
00:16:04,680 --> 00:16:07,989
Alle sind dabei, um Transaktionen zu übertragen, und wir wollen, 

272
00:16:07,989 --> 00:16:10,840
dass sie sich auf das richtige Hauptbuch einigen können.

273
00:16:12,100 --> 00:16:15,380
Wie ich bereits erwähnt habe, besteht die Idee hinter dem ursprünglichen Bitcoin-Papier 

274
00:16:15,380 --> 00:16:18,660
darin, dass jeder demjenigen Ledger vertraut, in den die meiste Arbeit investiert wurde.

275
00:16:19,280 --> 00:16:23,280
Das funktioniert so, dass ein bestimmter Ledger zunächst in Blöcken organisiert wird, 

276
00:16:23,280 --> 00:16:27,280
wobei jeder Block aus einer Liste von Transaktionen und einem Arbeitsnachweis besteht.

277
00:16:27,720 --> 00:16:30,010
Das heißt, eine spezielle Zahl, damit der Hash des 

278
00:16:30,010 --> 00:16:32,300
gesamten Blocks mit einer Reihe von Nullen beginnt.

279
00:16:33,140 --> 00:16:37,861
Für den Moment nehmen wir an, dass sie mit 60 Nullen beginnen muss, 

280
00:16:37,861 --> 00:16:43,139
aber später werden wir auf eine systematischere Art und Weise zurückkommen, 

281
00:16:43,139 --> 00:16:45,500
die du vielleicht ändern möchtest.

282
00:16:45,900 --> 00:16:50,040
Ein Block wird nur dann als gültig angesehen, wenn er einen Arbeitsnachweis hat.

283
00:16:50,960 --> 00:16:55,149
Um sicherzustellen, dass die Reihenfolge der Blöcke einheitlich ist, 

284
00:16:55,149 --> 00:16:59,460
muss ein Block den Hash des vorherigen Blocks in seinem Kopf enthalten.

285
00:17:00,060 --> 00:17:04,355
Wenn du also zurückgehst und einen der Blöcke änderst oder die Reihenfolge von 

286
00:17:04,355 --> 00:17:07,725
zwei Blöcken vertauschst, ändert sich der nachfolgende Block, 

287
00:17:07,725 --> 00:17:12,238
was wiederum den Hash des Blocks ändert, der wiederum den des nachfolgenden Blocks 

288
00:17:12,238 --> 00:17:13,380
ändert und so weiter.

289
00:17:13,980 --> 00:17:17,594
Das würde bedeuten, dass wir die ganze Arbeit noch einmal machen und für jeden dieser 

290
00:17:17,594 --> 00:17:19,696
Blöcke eine neue spezielle Nummer finden müssten, 

291
00:17:19,696 --> 00:17:21,420
damit ihre Hashes mit 60 Nullen beginnen.

292
00:17:22,440 --> 00:17:27,156
Weil die Blöcke so aneinandergereiht werden, nennt man es nicht mehr Ledger, 

293
00:17:27,156 --> 00:17:28,319
sondern Blockchain.

294
00:17:30,080 --> 00:17:33,324
Als Teil unseres aktualisierten Protokolls erlauben wir nun jedem auf der Welt, 

295
00:17:33,324 --> 00:17:34,420
ein Blockersteller zu sein.

296
00:17:35,240 --> 00:17:38,703
Das bedeutet, dass sie auf Transaktionen lauschen, die gesendet werden, 

297
00:17:38,703 --> 00:17:41,830
diese in einem Block sammeln und dann eine Menge Arbeit leisten, 

298
00:17:41,830 --> 00:17:46,160
um eine spezielle Zahl zu finden, die den Hash dieses Blocks mit 60 Nullen beginnen lässt.

299
00:17:46,960 --> 00:17:49,900
Sobald sie ihn gefunden haben, senden sie den gefundenen Block aus.

300
00:17:50,860 --> 00:17:54,736
Um einen Blockersteller für all diese Arbeit zu belohnen, erlauben wir ihm, 

301
00:17:54,736 --> 00:17:58,612
wenn er einen Block erstellt, eine ganz besondere Transaktion am Anfang des 

302
00:17:58,612 --> 00:18:02,540
Blocks durchzuführen, bei der er z.B. 10 Ledger-Dollar aus dem Nichts erhält.

303
00:18:03,080 --> 00:18:06,169
Dies wird als Blockbelohnung bezeichnet und ist eine Ausnahme von 

304
00:18:06,169 --> 00:18:09,400
unseren üblichen Regeln, ob wir Transaktionen akzeptieren oder nicht.

305
00:18:10,040 --> 00:18:12,920
Sie kommt von niemandem, also muss sie auch nicht unterschrieben werden.

306
00:18:13,660 --> 00:18:16,856
Das bedeutet auch, dass die Gesamtzahl der Hauptbuchdollar 

307
00:18:16,856 --> 00:18:19,620
in unserer Wirtschaft mit jedem neuen Block steigt.

308
00:18:20,900 --> 00:18:23,801
Das Erzeugen von Blöcken wird oft als Mining bezeichnet, 

309
00:18:23,801 --> 00:18:28,180
da es eine Menge Arbeit erfordert und neue Währungsstücke in die Wirtschaft einbringt.

310
00:18:29,020 --> 00:18:32,834
Aber wenn du von Minern hörst oder liest, solltest du bedenken, 

311
00:18:32,834 --> 00:18:37,006
dass sie in Wirklichkeit nach Transaktionen suchen, Blöcke erstellen, 

312
00:18:37,006 --> 00:18:40,940
diese Blöcke weiterleiten und dafür mit neuem Geld belohnt werden.

313
00:18:41,780 --> 00:18:45,511
Aus der Sicht der Miner ist jeder Block wie eine kleine Lotterie, 

314
00:18:45,511 --> 00:18:48,338
bei der alle so schnell wie möglich Zahlen raten, 

315
00:18:48,338 --> 00:18:51,447
bis eine glückliche Person eine spezielle Zahl findet, 

316
00:18:51,447 --> 00:18:56,140
die den Hash des Blocks mit vielen Nullen beginnen lässt, und die Belohnung erhält.

317
00:18:57,620 --> 00:19:01,241
Alle anderen, die dieses System nur für Zahlungen nutzen wollen, 

318
00:19:01,241 --> 00:19:04,863
hören nicht mehr auf Transaktionen, sondern nur noch auf Blöcke, 

319
00:19:04,863 --> 00:19:09,600
die von Minern gesendet werden, und aktualisieren ihre eigenen Kopien der Blockchain.

320
00:19:10,560 --> 00:19:13,053
Die wichtigste Neuerung unseres Protokolls ist, 

321
00:19:13,053 --> 00:19:16,637
dass du bei zwei unterschiedlichen Blockchains mit widersprüchlichen 

322
00:19:16,637 --> 00:19:20,118
Transaktionshistorien die längste Blockchain bevorzugst, also die, 

323
00:19:20,118 --> 00:19:22,300
in die am meisten Arbeit investiert wurde.

324
00:19:22,860 --> 00:19:26,337
Wenn es unentschieden steht, warte einfach, bis du einen zusätzlichen Block hörst, 

325
00:19:26,337 --> 00:19:27,720
der einen von ihnen länger macht.

326
00:19:28,720 --> 00:19:33,642
Auch wenn es keine zentrale Autorität gibt und jeder seine eigene Kopie der Blockchain 

327
00:19:33,642 --> 00:19:38,565
pflegt, können wir einen dezentralen Konsens erreichen, wenn sich alle darauf einigen, 

328
00:19:38,565 --> 00:19:42,640
die Blockchain zu bevorzugen, in die die meiste Arbeit investiert wurde.

329
00:19:43,560 --> 00:19:47,172
Um zu verstehen, warum dies ein vertrauenswürdiges System ist und ab wann du 

330
00:19:47,172 --> 00:19:51,020
darauf vertrauen solltest, dass eine Zahlung echt ist, ist es wirklich hilfreich, 

331
00:19:51,020 --> 00:19:54,680
genau durchzugehen, was nötig wäre, um jemanden mit diesem System zu täuschen.

332
00:19:55,600 --> 00:19:59,584
Vielleicht versucht Alice, Bob mit einem betrügerischen Block zu täuschen, d.h. 

333
00:19:59,584 --> 00:20:02,423
sie versucht, ihm einen Block zu schicken, in dem steht, 

334
00:20:02,423 --> 00:20:06,308
dass sie ihm 100 Ledger-Dollars zahlt, aber ohne diesen Block an den Rest des 

335
00:20:06,308 --> 00:20:09,347
Netzwerks zu senden, so dass alle anderen immer noch denken, 

336
00:20:09,347 --> 00:20:11,240
dass sie diese 100 Ledger-Dollars hat.

337
00:20:11,960 --> 00:20:16,637
Dazu müsste sie vor allen anderen Minern, die jeweils an ihrem eigenen Block arbeiten, 

338
00:20:16,637 --> 00:20:18,680
einen gültigen Arbeitsnachweis finden.

339
00:20:19,500 --> 00:20:22,251
Und das könnte durchaus passieren. Vielleicht gewinnt Alice 

340
00:20:22,251 --> 00:20:24,820
ja einfach vor allen anderen in dieser Miniaturlotterie.

341
00:20:25,680 --> 00:20:29,547
Um ihn davon abzuhalten, diesen gefälschten Block zu glauben, 

342
00:20:29,547 --> 00:20:35,161
müsste Alice selbst die ganze Arbeit machen und immer wieder Blöcke auf dieser speziellen 

343
00:20:35,161 --> 00:20:39,776
Abzweigung in Bobs Blockchain hinzufügen, die sich von dem unterscheidet, 

344
00:20:39,776 --> 00:20:41,960
was er von den anderen Minern hört.

345
00:20:42,740 --> 00:20:48,260
Denke daran, dass Bob gemäß dem Protokoll immer der längsten Kette vertraut, die er kennt.

346
00:20:49,260 --> 00:20:52,728
Alice kann das vielleicht ein paar Blöcke lang durchhalten, 

347
00:20:52,728 --> 00:20:57,700
wenn sie zufällig schneller Blöcke findet als der Rest der Miner im Netzwerk zusammen.

348
00:20:58,480 --> 00:21:02,733
Aber wenn sie nicht annähernd 50% der Rechenressourcen aller Miner hat, 

349
00:21:02,733 --> 00:21:06,454
ist die Wahrscheinlichkeit überwältigend, dass die Blockchain, 

350
00:21:06,454 --> 00:21:11,417
an der alle anderen Miner arbeiten, schneller wächst als die einzelne betrügerische 

351
00:21:11,417 --> 00:21:13,780
Blockchain, die Alice an Bob weitergibt.

352
00:21:15,000 --> 00:21:19,010
Nach einer gewissen Zeit wird Bob also das, was er von Alice hört, 

353
00:21:19,010 --> 00:21:23,140
zugunsten der längeren Kette, an der alle anderen arbeiten, ablehnen.

354
00:21:23,960 --> 00:21:26,772
Das bedeutet, dass du einem neuen Block, den du hörst, 

355
00:21:26,772 --> 00:21:28,920
nicht unbedingt sofort vertrauen solltest.

356
00:21:29,500 --> 00:21:33,400
Stattdessen solltest du warten, bis mehrere neue Blöcke dazukommen.

357
00:21:33,820 --> 00:21:37,343
Wenn du noch nichts von längeren Blockchains gehört hast, kannst du darauf vertrauen, 

358
00:21:37,343 --> 00:21:40,540
dass dieser Block Teil der gleichen Kette ist, die alle anderen auch benutzen.

359
00:21:42,120 --> 00:21:45,220
Und damit haben wir alle wichtigen Ideen getroffen.

360
00:21:45,780 --> 00:21:49,024
Dieses verteilte Ledger-System, das auf einem Proof of Work basiert, 

361
00:21:49,024 --> 00:21:52,927
ist mehr oder weniger die Funktionsweise des Bitcoin-Protokolls und vieler anderer 

362
00:21:52,927 --> 00:21:53,680
Kryptowährungen.

363
00:21:54,300 --> 00:21:56,160
Es gibt nur noch ein paar Details zu klären.

364
00:21:56,300 --> 00:21:59,294
Vorhin habe ich gesagt, dass der Arbeitsnachweis darin bestehen könnte, 

365
00:21:59,294 --> 00:22:02,580
eine spezielle Zahl zu finden, damit der Hash des Blocks mit 60 Nullen beginnt.

366
00:22:03,220 --> 00:22:07,675
Das Bitcoin-Protokoll funktioniert so, dass die Anzahl der Nullen regelmäßig 

367
00:22:07,675 --> 00:22:11,900
geändert wird, so dass es 10 Minuten dauert, einen neuen Block zu finden.

368
00:22:12,780 --> 00:22:15,662
Je mehr Miner dem Netzwerk hinzugefügt werden, 

369
00:22:15,662 --> 00:22:20,813
desto schwieriger wird die Herausforderung, so dass diese Miniaturlotterie nur etwa 

370
00:22:20,813 --> 00:22:22,960
alle 10 Minuten einen Gewinner hat.

371
00:22:23,920 --> 00:22:27,880
Viele neuere Kryptowährungen haben viel kürzere Blockzeiten als diese.

372
00:22:28,580 --> 00:22:32,460
Und das ganze Geld in Bitcoin stammt letztendlich aus einer Blockbelohnung.

373
00:22:32,920 --> 00:22:35,740
Zu Beginn betrugen diese Belohnungen 50 Bitcoin pro Block.

374
00:22:36,140 --> 00:22:38,665
Es gibt eine großartige Website namens Block Explorer, 

375
00:22:38,665 --> 00:22:41,420
die es einfach macht, die Bitcoin-Blockchain zu durchsuchen.

376
00:22:41,960 --> 00:22:45,058
Und wenn du dir die allerersten Blöcke auf der Kette ansiehst, 

377
00:22:45,058 --> 00:22:49,240
enthalten sie keine anderen Transaktionen als die 50 Bitcoin Belohnung für den Miner.

378
00:22:49,860 --> 00:22:53,343
Aber alle 210.000 Blöcke, also etwa alle 4 Jahre, 

379
00:22:53,343 --> 00:22:56,340
wird diese Belohnung um die Hälfte gekürzt.

380
00:22:56,860 --> 00:23:00,140
Im Moment beträgt die Belohnung also 12,5 Bitcoin pro Block.

381
00:23:00,720 --> 00:23:04,746
Und weil diese Belohnung mit der Zeit geometrisch abnimmt, 

382
00:23:04,746 --> 00:23:09,320
bedeutet das, dass es nie mehr als 21 Millionen Bitcoin geben wird.

383
00:23:10,280 --> 00:23:13,280
Das bedeutet aber nicht, dass die Bergleute kein Geld mehr verdienen werden.

384
00:23:13,820 --> 00:23:17,940
Zusätzlich zur Blockbelohnung können die Miner auch Transaktionsgebühren kassieren.

385
00:23:18,520 --> 00:23:24,325
Wenn du eine Zahlung leistest, kannst du optional eine Transaktionsgebühr hinzufügen, 

386
00:23:24,325 --> 00:23:28,240
die an den Miner des Blocks geht, der die Zahlung enthält.

387
00:23:29,020 --> 00:23:32,592
Der Grund dafür ist, dass du einen Anreiz für die Miner schaffen willst, 

388
00:23:32,592 --> 00:23:35,920
die von dir gesendete Transaktion in den nächsten Block aufzunehmen.

389
00:23:36,440 --> 00:23:41,332
In Bitcoin ist jeder Block auf etwa 2400 Transaktionen begrenzt, 

390
00:23:41,332 --> 00:23:45,020
was viele Kritiker für unnötig restriktiv halten.

391
00:23:45,860 --> 00:23:50,765
Zum Vergleich: Visa verarbeitet im Durchschnitt etwa 1700 Transaktionen pro Sekunde 

392
00:23:50,765 --> 00:23:55,320
und ist in der Lage, mehr als 24.000 Transaktionen pro Sekunde zu verarbeiten.

393
00:23:56,020 --> 00:24:00,194
Diese vergleichsweise langsame Verarbeitung von Bitcoin führt zu höheren 

394
00:24:00,194 --> 00:24:05,284
Transaktionsgebühren, denn davon hängt ab, welche Transaktionen die Miner in einen neuen 

395
00:24:05,284 --> 00:24:06,200
Block aufnehmen.

396
00:24:07,820 --> 00:24:09,716
All dies ist weit davon entfernt, eine umfassende 

397
00:24:09,716 --> 00:24:11,500
Berichterstattung über Kryptowährungen zu sein.

398
00:24:12,160 --> 00:24:14,840
Es gibt noch viele Feinheiten und alternative Gestaltungsmöglichkeiten, 

399
00:24:14,840 --> 00:24:16,180
die ich noch gar nicht erwähnt habe.

400
00:24:16,640 --> 00:24:20,051
Aber ich hoffe, dass dies einen stabilen WaitButWhy-ähnlichen Baumstamm des 

401
00:24:20,051 --> 00:24:24,000
Verständnisses für alle bietet, die mit weiterem Lesen ein paar weitere Äste hinzufügen 

402
00:24:24,000 --> 00:24:24,360
möchten.

403
00:24:25,180 --> 00:24:27,582
Wie ich eingangs sagte, ist einer der Gründe dafür, 

404
00:24:27,582 --> 00:24:29,846
dass viel Geld in Kryptowährungen geflossen ist, 

405
00:24:29,846 --> 00:24:32,479
und auch wenn ich keine Aussagen darüber treffen möchte, 

406
00:24:32,479 --> 00:24:36,129
ob das eine gute oder schlechte Investition ist, denke ich, dass es für Leute, 

407
00:24:36,129 --> 00:24:39,917
die in das Spiel einsteigen, gesund ist, zumindest die Grundlagen der Technologie 

408
00:24:39,917 --> 00:24:40,380
zu kennen.

409
00:24:41,340 --> 00:24:43,747
Wie immer gilt mein aufrichtiger Dank denjenigen von euch, 

410
00:24:43,747 --> 00:24:45,420
die diesen Kanal auf Patreon ermöglichen.

411
00:24:46,080 --> 00:24:48,963
Ich verstehe, dass nicht jeder in der Lage ist, einen Beitrag zu leisten, 

412
00:24:48,963 --> 00:24:51,963
aber wenn du trotzdem mithelfen möchtest, ist eine der besten Möglichkeiten, 

413
00:24:51,963 --> 00:24:54,301
dies zu tun, einfach Videos zu teilen, von denen du denkst, 

414
00:24:54,301 --> 00:24:56,640
dass sie für andere interessant oder hilfreich sein könnten.

415
00:24:57,280 --> 00:24:59,320
Ich weiß, dass du das weißt, aber es hilft wirklich.

