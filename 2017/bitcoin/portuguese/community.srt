1
00:00:04,020 --> 00:00:06,860
O que significa "ter" um Bitcoin?

2
00:00:07,160 --> 00:00:10,600
Muitos já ouviram falar que é uma moeda completamente virtual

3
00:00:10,600 --> 00:00:12,640
sem governo que a controle

4
00:00:12,740 --> 00:00:15,980
e que nenhum banco precisa gerenciar contas e verificar transações.

5
00:00:16,040 --> 00:00:18,040
e também que ninguém realmente sabe quem a inventou.

6
00:00:18,040 --> 00:00:18,880
'QUEM É ESSE?'

7
00:00:19,140 --> 00:00:22,175
e ainda, ninguém sabe a resposta para essa pergunta,

8
00:00:22,175 --> 00:00:23,465
pelo menos, não totalmente.

9
00:00:24,135 --> 00:00:27,095
Para chegar lá, e ter certeza que os detalhes técnicos

10
00:00:27,095 --> 00:00:29,975
por baixo da resposta sejam interessantes

11
00:00:29,975 --> 00:00:33,045
O que faremos será ir passo a passo, como você,

12
00:00:33,045 --> 00:00:35,420
poderia ter inventado sua própria versão do Bitcoin.

13
00:00:35,840 --> 00:00:38,640
Vamos iniciar com você mantendo registro de pagamentos junto de seus amigos

14
00:00:38,645 --> 00:00:40,620
usando um registro (livro-caixa) comum, e então,

15
00:00:40,820 --> 00:00:44,780
conforme você passa a confiar nos seus amigos e no mundo ao redor cada vez menos,

16
00:00:44,905 --> 00:00:47,785
E se você é esperto o bastante para usar algumas ideias da criptografia

17
00:00:47,785 --> 00:00:49,795
para tentar contornar a necessidade de confiança

18
00:00:50,200 --> 00:00:53,240
você chegará ao que é chamado de Cripto moeda.

19
00:00:53,440 --> 00:00:57,880
Bitcoin é apenas o primeiro exemplo implementado de uma cripto moeda

20
00:00:58,180 --> 00:01:02,920
e agora há milhares outras em trocas com moedas tradicionais.

21
00:01:02,980 --> 00:01:05,915
Tentar criar a sua própria vai ajudar a mostrar o básico

22
00:01:05,920 --> 00:01:09,180
para entender um pouco das moedas mais recentes,

23
00:01:09,180 --> 00:01:13,560
e reconhecer quando e por quê há mais espaço para diferentes escolhas.

24
00:01:14,120 --> 00:01:17,095
Na verdade, um dos motivos para ter escolhido este tópico foi que no último ano

25
00:01:17,095 --> 00:01:20,465
houve uma enorme quantidade de atenção e investimento e,

26
00:01:20,465 --> 00:01:23,520
bem, honestamente, 'hype", direcionado às cripto moedas

27
00:01:23,520 --> 00:01:25,820
e não vou comentar ou especular

28
00:01:26,040 --> 00:01:29,300
no presente ou futuro valor de troca, mas eu acho que todos concordamos

29
00:01:29,300 --> 00:01:32,300
que qualquer pessoa querendo comprar cripto moedas

30
00:01:32,300 --> 00:01:35,060
deveria realmente saber o que são, e não digo apenas

31
00:01:35,060 --> 00:01:38,040
por analogias e vagas conexões a mineração de ouro

32
00:01:38,040 --> 00:01:40,800
digo uma descrição real e direta

33
00:01:40,800 --> 00:01:45,420
do que os computadores estão fazendo quando nós enviamos, recebemos e criamos cripto moedas.

34
00:01:46,520 --> 00:01:49,220
É importante reforçar aliás, que apesar

35
00:01:49,300 --> 00:01:52,320
de nós entrarmos nos detalhes aqui

36
00:01:52,320 --> 00:01:54,160
e isso requerer tempo significativo

37
00:01:54,160 --> 00:01:58,775
você não precisa saber desses detalhes se você só quer usar as cripto moedas

38
00:01:58,775 --> 00:02:01,725
assim como você não precisa saber os detalhes do que ocorre por trás

39
00:02:01,725 --> 00:02:03,260
quando você utiliza seu cartão de crédito

40
00:02:03,600 --> 00:02:07,260
como qualquer pagamento virtual, há vários aplicativos amigáveis

41
00:02:07,320 --> 00:02:10,715
que deixam você enviar e receber cripto moedas sem pensar no que está havendo

42
00:02:11,440 --> 00:02:13,960
a diferença é que o centro e base de tudo

43
00:02:13,960 --> 00:02:16,780
não é um banco que verifica transações.

44
00:02:17,480 --> 00:02:21,460
ao invés, é um sistema inteligente, não centralizado de listas de confiança

45
00:02:22,140 --> 00:02:24,940
baseado na matemática nascida da criptografia

46
00:02:25,620 --> 00:02:30,460
Mas para começar, quero que você esqueça sobre criptomoedas e tudo isso, só por alguns minutos.

47
00:02:30,940 --> 00:02:33,520
vamos começar com algo mais fácil de entender.

48
00:02:33,580 --> 00:02:35,880
Registros (caixa-livro) e assinatura virtual

49
00:02:36,080 --> 00:02:38,860
Se você e seu amigo trocam dinheiro com frequência

50
00:02:38,865 --> 00:02:41,415
como dividir a conta do jantar e afins

51
00:02:41,415 --> 00:02:44,325
pode ser inconveniente ficar trocando dinheiro o tempo todo

52
00:02:44,360 --> 00:02:46,580
então você pode manter um registro comum

53
00:02:46,580 --> 00:02:50,440
que grava todos os pagamentos que você pretende fazer em algum momento no futuro.

54
00:02:50,440 --> 00:02:54,700
sabe, Alice paga 20USD para Bob, Bob para 40USD para Charlie, coisas assim

55
00:02:55,500 --> 00:02:58,520
Esse registro vai ser algo público e acessível para todos,

56
00:02:58,620 --> 00:03:02,540
Como um website que qualquer um pode ir e adicionar novas linhas

57
00:03:02,540 --> 00:03:07,740
e vamos dizer que no fim do mês, todos se juntam, olham a lista de transações e ajustam as contas.

58
00:03:07,740 --> 00:03:11,000
Se gastou mais do que recebeu, coloca dinheiro no pote

59
00:03:11,160 --> 00:03:14,560
e se você recebeu mais do que gastou, você pega o dinheiro do pote.

60
00:03:15,080 --> 00:03:19,520
Então o protocolo para participar desse sistema simples se parece assim:

61
00:03:20,000 --> 00:03:23,680
qualquer um pode adicionar linhas ao registro, e no fim de cada mês

62
00:03:23,680 --> 00:03:25,440
vocês se juntam e acertam as contas.

63
00:03:25,940 --> 00:03:28,980
Agora, um problema de um registro público como esse

64
00:03:28,980 --> 00:03:32,300
é que qualquer um pode adicionar linhas, então, o que previne Bob

65
00:03:32,300 --> 00:03:37,140
de escrever 'Alice paga 100USD para Bob', sem a aprovação de Alice?

66
00:03:37,660 --> 00:03:40,920
Como podemos confiar que todas as transações

67
00:03:40,965 --> 00:03:43,345
são o que o expedidor queria que elas fossem?

68
00:03:44,505 --> 00:03:47,265
Bem, aqui é onde a primeira parte da criptografia entra,

69
00:03:47,265 --> 00:03:48,735
Assinaturas Digitais

70
00:03:49,195 --> 00:03:51,905
Como assinaturas escritas à mão, a ideia aqui é que

71
00:03:51,905 --> 00:03:55,320
Alice deveria ser capaz de adicionar algo a essa transação

72
00:03:55,320 --> 00:03:58,500
que prove que ela viu, e que ela aprovou

73
00:03:59,220 --> 00:04:03,460
e deve ser inviável que alguém falsifique essa assinatura

74
00:04:04,040 --> 00:04:08,860
Logo de cara, pode parecer que uma assinatura digital nem mesmo deveria ser possível

75
00:04:09,080 --> 00:04:13,420
quero dizer, qualquer dado que faz parte dessa assinatura pode simplesmente ser lido e copiado

76
00:04:13,420 --> 00:04:16,680
por um computador, então como evitar falsificações?

77
00:04:17,120 --> 00:04:19,720
O jeito que isso funciona é que todo mundo gera

78
00:04:19,720 --> 00:04:22,680
o que é chamado de um Par Chave Pública e Chave Privada

79
00:04:22,680 --> 00:04:24,340
onde cada um se parece com uma sequência de bits.

80
00:04:24,500 --> 00:04:29,420
A chave privada é também chamada de Chave Secreta para que possa ser abreviada 'SK',

81
00:04:29,540 --> 00:04:31,760
enquanto se abrevia a Chave Pública como 'PK'

82
00:04:32,100 --> 00:04:36,140
Como o nome sugere, essa chave secreta é algo que você deve manter para si só.

83
00:04:36,760 --> 00:04:41,620
No mundo real, sua assinatura se parece a mesma não importa o documento que você assine

84
00:04:42,340 --> 00:04:44,880
mas uma assinatura digital é na verdade muito mais forte

85
00:04:44,880 --> 00:04:47,440
pois ela muda com mensagens dferentes

86
00:04:47,580 --> 00:04:50,020
se parece com uma sequência de 1 e 0

87
00:04:50,240 --> 00:04:53,420
normalmente algo como 256 bits

88
00:04:53,420 --> 00:04:55,760
e mudando a mensagem mesmo que minimamente

89
00:04:55,760 --> 00:04:59,540
completamente muda o que a assinatura daquela mensagem deveria ser

90
00:05:00,640 --> 00:05:02,740
falando um pouco mais formalmente

91
00:05:02,740 --> 00:05:05,320
produzir uma assinatura envolve uma função,

92
00:05:05,320 --> 00:05:08,600
que depende da mensagem e da chave privada 'SK'

93
00:05:09,060 --> 00:05:12,560
A chave privada garante que apenas você possa produzir aquela assinatura

94
00:05:12,620 --> 00:05:15,260
e o fato de depender da mensagem

95
00:05:15,260 --> 00:05:18,160
significa que ninguém pode simplesmente copiar uma de suas assinaturas

96
00:05:18,160 --> 00:05:19,960
e falsificá-la em outra mensagem

97
00:05:20,820 --> 00:05:25,480
Junto com isso existe uma segunda função usada para  verificar que a assinatura é valida

98
00:05:25,960 --> 00:05:28,200
e é aí que a chave pública entra em jogo

99
00:05:28,855 --> 00:05:31,195
Tudo que ela faz é resultar em Verdadeiro ou Falso

100
00:05:31,195 --> 00:05:34,145
para indicar se a assinatura criada pela chave privada

101
00:05:34,145 --> 00:05:37,720
associada com a chave pública que você está usando para verificação.

102
00:05:38,400 --> 00:05:40,760
Não vou entrar em detalhes de como exatamente

103
00:05:40,945 --> 00:05:43,945
ambas as funções funcionam, mas a ideia é que elas deveriam ser

104
00:05:43,945 --> 00:05:46,960
completamente inviável achar uma assinatura válida

105
00:05:47,060 --> 00:05:49,480
se você não sabe qual a chave secreta

106
00:05:49,745 --> 00:05:52,755
Especificamente, não há estratégia melhor do que

107
00:05:52,755 --> 00:05:55,625
simplesmente adivinhar e testar assinaturas aleatórias, que você pode testar

108
00:05:55,625 --> 00:05:58,175
usando a chave pública que todos conhecem.

109
00:05:58,760 --> 00:06:01,360
Agora pense em quantas assinaturas existem

110
00:06:01,360 --> 00:06:03,660
com um tamanho de 256 bits.

111
00:06:03,660 --> 00:06:07,615
Isso é 2 elevado a 256

112
00:06:07,620 --> 00:06:10,200
é um número estupidamente enorme

113
00:06:10,200 --> 00:06:13,840
chamá-lo de astronomicamente enorme seria dar muito crédito para a astronomia

114
00:06:13,980 --> 00:06:16,660
Na verdade, eu fiz um vídeo complementar

115
00:06:16,660 --> 00:06:20,000
dedicado só para ilustrar quão enorme ele é

116
00:06:20,440 --> 00:06:23,260
aqui vamos só dizer que quando você verifica

117
00:06:23,260 --> 00:06:26,020
que uma assinatura de uma certa mensagem é valida

118
00:06:26,020 --> 00:06:29,860
você pode ficar extremamente confiante de que a única forma que alguém poderia ter feito ela

119
00:06:29,860 --> 00:06:32,205
é se eles soubessem a chave secreta

120
00:06:32,205 --> 00:06:35,295
associada com a chave pública usada para a verificação.

121
00:06:36,725 --> 00:06:39,705
Agora ter certeza de que as pessoas assinem transações no registro

122
00:06:39,705 --> 00:06:42,760
é muito bom, mas há um pequeno problema.

123
00:06:42,760 --> 00:06:44,920
Se Alice assinar uma transação como

124
00:06:44,940 --> 00:06:46,620
Alice paga 100USD para Bob

125
00:06:46,800 --> 00:06:50,720
mesmo que Bob não possa falsificar a assinatura de Alice em uma nova mensagem

126
00:06:50,720 --> 00:06:53,920
ele poderia simplesmente copiar aquela linha quantas vezes quisesse

127
00:06:54,260 --> 00:06:57,040
afinal a combinação mensagem-assinatura continua válida

128
00:06:57,680 --> 00:07:01,480
Para evitar isso, fazemos com que quando você assine uma transação

129
00:07:01,480 --> 00:07:04,980
a mensagem tem também que incluir uma espécie de ID único

130
00:07:04,980 --> 00:07:07,300
associada com aquela transação

131
00:07:07,660 --> 00:07:08,620
Dessa forma,

132
00:07:08,620 --> 00:07:12,100
Se Alice pagar 100USD para Bob várias vezes

133
00:07:12,100 --> 00:07:15,820
Cada uma dessas linhas no registro requer uma assinatura completamente nova.

134
00:07:16,740 --> 00:07:22,160
Certo, ótimo, assinaturas digitais removem um grande aspecto de confiança neste protocolo inicial

135
00:07:22,160 --> 00:07:23,140
mas mesmo assim

136
00:07:23,180 --> 00:07:27,120
se você fosse realmente fazer isso, iria depender de um sistema de honra ou parecido

137
00:07:27,680 --> 00:07:32,960
Isto é, você está confiando que todos irão ajustar as contas e pagar o que deve no final de cada mês.

138
00:07:33,300 --> 00:07:39,440
Mas e se, por exemplo, Charlie contrair milhares de dólares em dívida e se recusar a pagar o que deve

139
00:07:39,940 --> 00:07:43,280
a única razão real para reverter em dólares para acerto de contas

140
00:07:43,280 --> 00:07:47,440
é se alguma pessoa - estou olhando para você Charlie - dever muito dinheiro

141
00:07:47,720 --> 00:07:50,340
então talvez você tenha a inteligente ideia

142
00:07:50,340 --> 00:07:52,960
de que você nunca tem que realmente acertar as contas em dólares

143
00:07:52,960 --> 00:07:56,660
desde que você tenha uma forma de prevenir pessoas de gastar mais do que elas recebem

144
00:07:57,100 --> 00:07:58,240
talvez o que você faça,

145
00:07:58,240 --> 00:08:01,500
seja todos começarem colocando 100 dólares no pote

146
00:08:01,500 --> 00:08:03,940
e ter as primeiras linhas do registro escritas

147
00:08:03,940 --> 00:08:08,300
Alice recebe 100 USD, Bob Recebe 100 USD, etc.

148
00:08:08,860 --> 00:08:09,860
Agora,

149
00:08:09,940 --> 00:08:16,120
apenas não aceite transações onde a pessoa gaste mais do que ela tem naquele registro

150
00:08:16,960 --> 00:08:20,095
Por exemplo, se as duas primeiras transações são

151
00:08:20,100 --> 00:08:23,880
Charlie paga 50 USD para Alice, e Charlie paga 50 USD para Bob

152
00:08:24,560 --> 00:08:29,400
Se ele fosse tentar adicionar Charlie paga 20 USD para Você, isso seria inválido

153
00:08:29,400 --> 00:08:32,240
tão inválido como se ele nunca tivesse assinado

154
00:08:32,695 --> 00:08:35,635
Perceba, isso significa que verificar uma transação

155
00:08:35,640 --> 00:08:39,260
requer conhecimento de todo o histórico de transações até aquele ponto

156
00:08:40,180 --> 00:08:44,060
e isso será, mais ou menos, também verdade para as cripto moedas

157
00:08:44,060 --> 00:08:46,180
embora haja espaço para otimização

158
00:08:48,440 --> 00:08:51,100
O que é interessante aqui é que este passo,

159
00:08:51,100 --> 00:08:55,540
remove a conexão entre registro e dinheiro físico real

160
00:08:56,260 --> 00:08:59,420
Na teoria, se todo o mundo estivesse usando esse registro,

161
00:08:59,420 --> 00:09:03,520
você poderia viver a sua vida toda só enviando e recebendo dinheiro nesse registro

162
00:09:03,520 --> 00:09:06,580
sem precisar converter para dinheiro físico real

163
00:09:07,120 --> 00:09:09,060
De fato, para enfatizar esse argumento,

164
00:09:09,060 --> 00:09:13,120
vamos passar a chamar as quantidades desse registro como 'Ledger Dollars' (Dólares do Registro)

165
00:09:13,220 --> 00:09:14,720
ou 'LD' abreviado

166
00:09:14,720 --> 00:09:18,540
Você é claro livre para trocar LDs por dinheiro físico real

167
00:09:19,060 --> 00:09:22,640
Por exemplo, talvez Alice dê uma nota de 10 USD para Bob no mundo real

168
00:09:22,640 --> 00:09:29,920
em troca por ele adicionar e assinar a transação Bob paga 10 LD para Alice, neste registro comum

169
00:09:30,540 --> 00:09:34,680
mas trocas como essa não serão garantidas pelo protocolo

170
00:09:34,680 --> 00:09:38,580
agora é mais análogo a como você pode trocar Dólares por Euros

171
00:09:38,580 --> 00:09:40,880
ou qualquer outra moeda no mercado regular

172
00:09:41,180 --> 00:09:43,980
é apenas a sua própria coisa independente

173
00:09:44,460 --> 00:09:48,180
essa é a primeira coisa importante a entender sobre Bitcoin

174
00:09:48,180 --> 00:09:50,260
ou qualquer outra criptomoeda

175
00:09:50,540 --> 00:09:53,120
O que ela é, é um registro,

176
00:09:53,120 --> 00:09:56,260
o histórico de transações é a moeda

177
00:09:57,000 --> 00:10:01,860
Claro, com Bitcoin dinheiro não entra no histórico com pessoas comprando por meio de dinheiro físico real

178
00:10:01,980 --> 00:10:05,280
Vou explicar como o dinheiro entra em alguns minutos

179
00:10:05,480 --> 00:10:09,000
Mas antes disso, há na verdade uma diferença ainda mais significativa

180
00:10:09,000 --> 00:10:12,460
entre nosso sistema de Ledger Dollars, e como cripto moedas funcionam

181
00:10:12,880 --> 00:10:15,940
Até então, eu disse que esse registro está em um local público

182
00:10:16,080 --> 00:10:18,780
como um website que qualquer um pode adicionar novas linhas

183
00:10:19,175 --> 00:10:21,975
mas para isso seria preciso confiar em um local centralizado

184
00:10:21,980 --> 00:10:24,500
como, quem hospeda o website,

185
00:10:24,500 --> 00:10:27,580
quem controla as regras para adicionar novas linhas

186
00:10:27,580 --> 00:10:29,100
para remover essa parte de confiança,

187
00:10:29,100 --> 00:10:32,100
vamos fazer com que cada um mantenha sua própria cópia do registro

188
00:10:32,780 --> 00:10:36,960
Então quando quiser fazer uma transação, como Alice paga 100 LD para Bob

189
00:10:37,080 --> 00:10:39,820
o que você faz é transmitir isso para o resto do mundo

190
00:10:39,820 --> 00:10:43,600
para as pessoas ouvirem e gravarem no seu próprio registro privado

191
00:10:44,700 --> 00:10:47,400
Mas, a menos que faça algo a mais

192
00:10:47,400 --> 00:10:49,680
este sistema é absurdamente ruim

193
00:10:49,680 --> 00:10:53,380
como você poderia fazer com que todos concordassem sobre qual o registro correto é?

194
00:10:53,480 --> 00:10:57,200
Quando Bob recebe uma transação como, Alice paga 10 LD para Bob

195
00:10:57,200 --> 00:11:01,680
Como ele pode ter certeza de que todos receberam e acreditam nessa transação?

196
00:11:02,220 --> 00:11:07,460
que ele vai poder, depois, ir até o Charlie e usar os mesmo 10 LD para fazer uma transação?

197
00:11:08,180 --> 00:11:12,360
Sério, imagine você mesmo ouvindo transações sendo transmitidas

198
00:11:12,980 --> 00:11:18,780
como você pode ter certeza de que todos estão gravando as mesmas transações, e na mesma ordem?

199
00:11:19,660 --> 00:11:22,960
Este é realmente o coração do problema, um quebra-cabeça interessante

200
00:11:23,200 --> 00:11:25,380
Você consegue criar um protocolo

201
00:11:25,380 --> 00:11:27,980
para como aceitar ou rejeitar transações

202
00:11:27,980 --> 00:11:29,500
e em que ordem

203
00:11:29,500 --> 00:11:32,760
para que você possa estar seguro de que qualquer outra pessoa no mundo

204
00:11:32,760 --> 00:11:38,495
que está seguindo o mesmo protocolo tem um registro pessoal igual ao seu?

205
00:11:38,500 --> 00:11:41,780
Este é o problema tratado no ensaio original do Bitcoin.

206
00:11:44,220 --> 00:11:47,315
No alto nível, a solução que Bitcoin oferece

207
00:11:47,320 --> 00:11:52,180
é confiar no registro que possui o maior trabalho computacional utilizado

208
00:11:52,620 --> 00:11:55,060
Vou usar um momento para explicar exatamente o que isso significa,

209
00:11:55,260 --> 00:11:58,420
envolve essa coisa chamada Função Hash Criptográfica

210
00:11:58,520 --> 00:12:00,840
a ideia geral que vamos construir

211
00:12:00,840 --> 00:12:04,960
é que se você usar trabalho computacional como base para o que confiar

212
00:12:05,000 --> 00:12:08,640
você pode fazer com que transações fraudulentas e registros conflitantes

213
00:12:08,900 --> 00:12:12,400
requiram uma quantidade de trabalho computacional inviável para surgirem.

214
00:12:12,780 --> 00:12:15,780
Novamente, lembre-se que estamos chegando nos pequenos detalhes

215
00:12:15,780 --> 00:12:19,580
bem além do que alguém precisa saber só para usar uma moeda como essa.

216
00:12:20,120 --> 00:12:21,355
Mas é uma ideia muito legal

217
00:12:21,360 --> 00:12:23,160
e se você a entende

218
00:12:23,200 --> 00:12:26,940
você entende o núcleo do Bitcoin e de outras cripto moedas

219
00:12:27,685 --> 00:12:30,695
Então, antes de tudo, o que é uma função Hash?

220
00:12:30,700 --> 00:12:34,300
O valor de entrada dessas funções pode ser qualquer tipo de mensagem ou arquivo,

221
00:12:34,300 --> 00:12:35,860
realmente não importa

222
00:12:35,860 --> 00:12:39,300
e o resultado é uma sequência de bits com algum tipo de comprimento fixo

223
00:12:39,300 --> 00:12:40,580
como 256 bits

224
00:12:41,400 --> 00:12:44,760
Esse resultado é chamado de Hash ou resumo da mensagem

225
00:12:45,160 --> 00:12:47,860
e o objetivo é que ele pareça aleatório.

226
00:12:47,900 --> 00:12:51,880
Não é aleatório, sempre gera o mesmo resultado para uma certa entrada (mensagem ou arquivo).

227
00:12:52,340 --> 00:12:55,260
Mas a ideia é que se você levemente mudar a entrada

228
00:12:55,260 --> 00:12:57,640
talvez alterando apenas um dos caracteres

229
00:12:57,640 --> 00:13:00,640
O Hash resultante muda completamente.

230
00:13:01,040 --> 00:13:03,640
Na verdade, para a função Hash que estou mostrando aqui

231
00:13:03,740 --> 00:13:05,620
chamada de SHA256

232
00:13:05,900 --> 00:13:09,460
a forma que o resultado muda conforme você levemente altera a entrada

233
00:13:09,660 --> 00:13:11,720
é completamente imprevisível

234
00:13:12,180 --> 00:13:14,940
Veja, ela não é só uma função Hash qualquer

235
00:13:15,040 --> 00:13:17,140
é uma função Hash criptográfica

236
00:13:17,440 --> 00:13:20,900
significa que é inviável calcular na direção inversa

237
00:13:21,020 --> 00:13:23,540
se eu te mostrar uma sequência de 1 e 0

238
00:13:23,680 --> 00:13:25,540
e pedir para achar o valor de entrada,

239
00:13:25,800 --> 00:13:30,960
para que o Hash SHA256 dessa entrada resulte nesta exata sequência de bits

240
00:13:31,700 --> 00:13:34,740
você não terá método melhor do que adivinhar e testar

241
00:13:35,480 --> 00:13:38,220
E novamente, se você quer imaginar quanto trabalho computacional

242
00:13:38,260 --> 00:13:42,060
seria necessário para verificar 2 elevado a 256 tentativas

243
00:13:42,060 --> 00:13:44,280
apenas assista ao vídeo complementar

244
00:13:44,280 --> 00:13:46,780
eu me diverti demais fazendo ele.

245
00:13:48,645 --> 00:13:51,835
Você pode imaginar que se pesquisar os detalhes

246
00:13:51,840 --> 00:13:53,960
de como exatamente essa função funciona

247
00:13:54,100 --> 00:13:57,760
você poderia através da engenharia reversa descobrir a entrada sem ter que adivinhar e testar

248
00:13:57,985 --> 00:14:00,965
mas ninguém descobriu uma forma de fazer isso

249
00:14:01,245 --> 00:14:04,425
curiosamente, não há prova de que seja difícil

250
00:14:04,425 --> 00:14:07,415
fazer esse cálculo inverso

251
00:14:07,415 --> 00:14:10,265
e ainda assim, uma enorme quantidade de segurança moderna

252
00:14:10,265 --> 00:14:12,540
depende das funções Hash criptográficas

253
00:14:12,540 --> 00:14:14,420
e a ideia de que elas têm essa propriedade

254
00:14:14,740 --> 00:14:20,560
Se você fosse olhar quais algoritmos são a base para a conexão segura que seu navegador está utilizando

255
00:14:20,580 --> 00:14:22,320
ou que ele faz com o seu banco

256
00:14:22,560 --> 00:14:25,920
provavelmente você vai ver o nome SHA256 em algum local

257
00:14:27,105 --> 00:14:30,315
Neste momento, nosso foco será em como essa função

258
00:14:30,315 --> 00:14:33,485
pode provar que uma certa lista particular de transações

259
00:14:33,485 --> 00:14:37,220
está associada com uma enorme quantidade de trabalho computacional

260
00:14:37,720 --> 00:14:40,700
imagine que alguém lhe mostre uma lista de transações e diz

261
00:14:40,700 --> 00:14:46,600
"Ei, eu encontrei um número especial que quando você coloca ele no fim da lista de transações

262
00:14:46,700 --> 00:14:53,380
e aplica SHA256 em tudo, os primeiros 30 bits do resultado serão todos zeros.

263
00:14:53,760 --> 00:14:57,020
Quão difícil você acha que foi para eles acharem esse número?

264
00:14:58,080 --> 00:15:01,140
Bem, para uma mensagem aleatória, a probabilidade que um Hash

265
00:15:01,140 --> 00:15:03,980
ocorre de iniciar com 30 bits 0 consecutivos

266
00:15:04,000 --> 00:15:07,420
é 1 em 2 elevado a 30, o que dá aproximadamente 1 em 1 bilhão.

267
00:15:07,860 --> 00:15:11,740
e por SHA256 ser uma função Hash criptográfica,

268
00:15:12,120 --> 00:15:15,980
a única forma de achar um número como aquele é adivinhar e testar

269
00:15:16,660 --> 00:15:21,060
então essa pessoa quase certamente teve que passar por cerca de 1 bilhão de números diferentes

270
00:15:21,060 --> 00:15:22,460
antes de achar aquele especial

271
00:15:23,220 --> 00:15:26,000
E quando você sabe qual esse número, é muito rápido verificar

272
00:15:26,000 --> 00:15:28,840
você só executa o Hash, e procura pelos 30 zeros

273
00:15:29,500 --> 00:15:31,640
Em outras palavras, você pode verificar

274
00:15:31,660 --> 00:15:33,780
que eles passaram por um trabalho enorme

275
00:15:33,980 --> 00:15:36,480
mas sem precisar fazer o mesmo trabalho você mesmo

276
00:15:37,040 --> 00:15:39,020
isso é chamado Prova de Trabalho

277
00:15:39,020 --> 00:15:44,360
E importante, todo esse trabalho é intrinsecamente ligado à lista de transações

278
00:15:44,980 --> 00:15:48,020
se você mudar uma dessas transações, mesmo minimamente

279
00:15:48,020 --> 00:15:51,020
você mudaria o Hash completamente, então teria que fazer

280
00:15:51,020 --> 00:15:54,220
mais um bilhão de tentativas para achar uma nova Prova de Trabalho

281
00:15:54,220 --> 00:15:59,000
um novo número, para o qual o resultado Hash da lista alterada junto com esse novo número

282
00:15:59,080 --> 00:16:00,920
comece com 30 zeros

283
00:16:01,245 --> 00:16:04,295
Agora voltando para nossa situação de registros distribuídos

284
00:16:04,375 --> 00:16:07,395
todos estão transmitindo transações

285
00:16:07,400 --> 00:16:11,320
e procuramos uma forma para que todos concordem sobre qual é o registro correto

286
00:16:11,320 --> 00:16:14,660
como eu disse, a ideia principal do ensaio original do Bitcoin

287
00:16:14,880 --> 00:16:18,720
é para confiarmos no registro com maior trabalho computacional

288
00:16:19,100 --> 00:16:22,920
A forma que isso funciona é primeiro organizar um certo registro em blocos

289
00:16:22,920 --> 00:16:27,620
Em que cada bloco corresponde a uma lista de transações junto com uma Prova de Trabalho

290
00:16:27,920 --> 00:16:32,460
Isto é, um número especial no qual o Hash do bloco comece com vários zeros

291
00:16:32,920 --> 00:16:37,100
Por enquanto, vamos dizer que deve começar com 60 zeros

292
00:16:37,260 --> 00:16:39,520
mas depois vamos retornar a uma forma mais sistemática

293
00:16:39,520 --> 00:16:41,520
que você possa querer escolher esse número

294
00:16:41,560 --> 00:16:44,820
Da mesma forma que uma transação só é considerada válida

295
00:16:44,820 --> 00:16:46,440
quando ela está assinada pelo expedidor

296
00:16:46,755 --> 00:16:49,995
um bloco só é considerado válido se possuir uma Prova de Trabalho

297
00:16:50,720 --> 00:16:54,280
E também, para garantir que haja uma ordem padrão nesses blocos

298
00:16:54,400 --> 00:16:59,540
faremos com que o bloco precise conter o Hash do bloco anterior no seu cabeçalho

299
00:17:00,040 --> 00:17:03,100
dessa forma, se você voltasse e mudasse qualquer um dos blocos

300
00:17:03,100 --> 00:17:05,580
ou trocasse a ordem de dois blocos

301
00:17:05,580 --> 00:17:08,120
você mudaria o bloco que vem depois

302
00:17:08,120 --> 00:17:10,160
o que muda o Hash daquele bloco

303
00:17:10,160 --> 00:17:12,060
o que muda aquele que vem depois desse

304
00:17:12,060 --> 00:17:13,140
e assim por diante

305
00:17:14,120 --> 00:17:18,960
Para isso seria preciso refazer todo o trabalho, achando o número especial para cada um dos blocos

306
00:17:18,960 --> 00:17:21,700
que faz seu Hash iniciar com 60 zeros

307
00:17:22,100 --> 00:17:25,060
Pelos blocos serem encadeados juntos dessa forma

308
00:17:25,060 --> 00:17:28,660
ao invés de chamá-los de registro, é comum chamá-los de Cadeia de Blocos.

309
00:17:29,740 --> 00:17:31,920
como parte do nosso protocolo atualizado,

310
00:17:32,020 --> 00:17:35,100
vamos agora permitir que qualquer pessoa do mundo seja um criador de blocos

311
00:17:35,100 --> 00:17:38,620
Isso quer dizer que eles irão ouvir transações sendo transmitidas

312
00:17:38,620 --> 00:17:40,335
juntá-las em um bloco

313
00:17:40,335 --> 00:17:43,335
e então fazer todo o trabalho de achar o número especial

314
00:17:43,335 --> 00:17:46,475
que faz o Hash daquele bloco iniciar com 60 zeros

315
00:17:46,920 --> 00:17:49,860
e assim que acharem, eles vão transmitir o bloco que acharam

316
00:17:50,700 --> 00:17:53,455
Para recompensar um criador de blocos por todo esse trabalho,

317
00:17:53,460 --> 00:17:54,900
quando eles completarem um bloco,

318
00:17:54,900 --> 00:17:59,160
vamos permitir que incluam uma transação muito especial no topo

319
00:17:59,160 --> 00:18:02,600
no qual eles ganhem, digamos, 10 LD do nada

320
00:18:03,160 --> 00:18:04,840
isso é chamado de recompensa do bloco

321
00:18:04,920 --> 00:18:09,480
e é uma exceção para nossas regras regulares sobre aceitar ou não transações

322
00:18:10,120 --> 00:18:13,560
Não vem de ninguém, então não precisa ser assinado

323
00:18:13,620 --> 00:18:19,720
e também quer dizer que o número total de LD na nossa economia cresce com cada novo bloco

324
00:18:20,600 --> 00:18:23,360
Criar blocos é comumente chamado "mineirar",

325
00:18:23,360 --> 00:18:28,440
já que requer muito trabalho e introduz pequenas quantidades de moeda na economia

326
00:18:28,780 --> 00:18:31,360
Mas quando você ouve ou lê sobre mineradores,

327
00:18:31,360 --> 00:18:33,740
tenha em mente que o que eles estão realmente fazendo

328
00:18:33,740 --> 00:18:38,120
é escutar por transações, criar blocos, transmitir esses blocos

329
00:18:38,120 --> 00:18:40,240
e sendo recompensados com novas moedas por isso.

330
00:18:41,720 --> 00:18:43,700
Pela perspectiva dos mineradores,

331
00:18:43,700 --> 00:18:46,220
cada bloco é como uma loteria em miniatura

332
00:18:46,220 --> 00:18:49,180
onde cada um está adivinhando números o mais rápido que podem,

333
00:18:49,180 --> 00:18:52,280
até um indivíduo sortudo encontrar o número especial

334
00:18:52,280 --> 00:18:56,360
que faz o Hash do bloco iniciar com muitos zeros, e ganham a recompensa.

335
00:18:57,755 --> 00:19:00,895
Para todo mundo que só quer usar o sistema para fazer pagamentos

336
00:19:00,900 --> 00:19:03,220
ao invés de ouvir transações

337
00:19:03,220 --> 00:19:06,915
eles passam a ouvir os blocos sendo transmitidos pelos mineradores

338
00:19:06,915 --> 00:19:09,905
e atualizando sua cópia pessoal da cadeia de blocos.

339
00:19:10,200 --> 00:19:13,040
Agora a adição chave do nosso protocolo

340
00:19:13,040 --> 00:19:16,000
é que se você ouvir 2 cadeias de blocos distintas

341
00:19:16,000 --> 00:19:18,220
com histórico de transações conflitantes

342
00:19:18,440 --> 00:19:22,320
você inclina para o maior, com maior trabalho computacional presente

343
00:19:22,600 --> 00:19:24,980
se houver empate, apenas, espere

344
00:19:24,980 --> 00:19:28,220
até você ouvir um bloco adicional que faz um deles maior

345
00:19:28,420 --> 00:19:31,120
então mesmo que não haja autoridade central

346
00:19:31,120 --> 00:19:33,960
e todo mundo mantém sua própria cópia da cadeia de blocos

347
00:19:34,260 --> 00:19:36,460
se todo mundo concordar em dar preferência

348
00:19:36,460 --> 00:19:39,820
para a cadeia de blocos que possuir maior trabalho presente

349
00:19:39,820 --> 00:19:43,140
nós temos uma forma de chegar a um consenso decentralizado

350
00:19:43,560 --> 00:19:46,220
para ver como isso gera um sistema confiável

351
00:19:46,220 --> 00:19:49,380
e entender em qual ponto você deve confiar que um pagamento é legítimo

352
00:19:49,620 --> 00:19:54,840
é útil vermos exatamente o que seria necessário para enganar alguém usando esse sistema

353
00:19:55,340 --> 00:19:58,620
Talvez Alice queira enganar Bob com um bloco fraudulento

354
00:19:58,620 --> 00:20:04,220
como tentar enviar um bloco que inclui Alice paga 100 LD para Bob

355
00:20:04,240 --> 00:20:07,020
mas sem transmitir esse bloco para o resto do mundo

356
00:20:07,320 --> 00:20:11,240
dessa forma, todo o resto acha que ela ainda tem esses 100 LD

357
00:20:12,260 --> 00:20:13,080
Para fazer isso,

358
00:20:13,080 --> 00:20:17,300
ela teria que achar uma Prova de Trabalho válida antes dos outros mineradores

359
00:20:17,300 --> 00:20:19,100
cada um trabalhando no seu próprio bloco

360
00:20:19,100 --> 00:20:21,100
e isso poderia acontecer

361
00:20:21,100 --> 00:20:25,040
talvez Alice simplesmente ganhe essa loteria em miniatura antes de todo mundo

362
00:20:25,380 --> 00:20:29,340
Mas Bob ainda vai estar ouvindo transmissões dos outros mineradores

363
00:20:30,060 --> 00:20:32,560
então para que ele continue acreditando nesse bloco fraudulento

364
00:20:32,560 --> 00:20:35,100
Alice teria que fazer todo esse trabalho ela mesma,

365
00:20:35,100 --> 00:20:39,300
para continuar adicionando blocos nessa cadeia especifica do Bob

366
00:20:39,440 --> 00:20:42,480
que é diferente do que ele está ouvindo do resto dos mineradores

367
00:20:42,680 --> 00:20:48,300
Lembre-se, pelo protocolo, Bob sempre confia na cadeia de blocos mais longa que ele conhece

368
00:20:48,940 --> 00:20:52,020
Alice pode manter isso por alguns blocos,

369
00:20:52,025 --> 00:20:55,025
mesmo que por pura sorte ela consiga os blocos

370
00:20:55,025 --> 00:20:57,985
de forma mais rápida do que todos os mineradores combinados

371
00:20:58,260 --> 00:21:03,820
mas a menos que ela tenha cerca de 50% do poder computacional de todos os mineradores combinados

372
00:21:04,040 --> 00:21:06,540
a probabilidade fica esmagadora

373
00:21:06,540 --> 00:21:09,820
de que a cadeia de blocos que todos os outros mineradores estão trabalhando

374
00:21:09,860 --> 00:21:13,800
cresça mais rápido do que a cadeia de blocos fraudulenta que Alice está enviando ao Bob

375
00:21:14,900 --> 00:21:17,000
Então, depois de um certo tempo,

376
00:21:17,120 --> 00:21:19,820
Bob vai passar a rejeitar o que está recebendo de Alice

377
00:21:19,920 --> 00:21:22,840
em favor da cadeia de blocos mais longa que todo o resto do mundo está trabalhando

378
00:21:23,700 --> 00:21:27,100
Note, isso significa que você não deve necessariamente confiar

379
00:21:27,100 --> 00:21:29,640
em um novo bloco que você ouve imediatamente,

380
00:21:29,640 --> 00:21:33,700
ao invés você deve esperar que vários outros blocos sejam adicionados a esse

381
00:21:33,700 --> 00:21:36,480
Se você ainda não ouviu outras cadeias de blocos maiores

382
00:21:36,480 --> 00:21:38,200
você pode confiar que este bloco

383
00:21:38,200 --> 00:21:40,740
faz parte da mesma cadeia que todo mundo está usando

384
00:21:42,035 --> 00:21:43,035
E com isso,

385
00:21:43,265 --> 00:21:46,045
falamos sobre todas as ideias principais

386
00:21:46,045 --> 00:21:47,520
Esse sistema de registros distribuídos

387
00:21:47,520 --> 00:21:49,040
baseado na Prova de Trabalho

388
00:21:49,040 --> 00:21:51,720
é mais ou menos como o protocolo Bitcoin funciona

389
00:21:51,820 --> 00:21:54,280
e como muitas outras cripto moedas funcionam

390
00:21:54,280 --> 00:21:56,360
só há alguns detalhes para esclarecer

391
00:21:56,360 --> 00:22:00,020
Antes, eu disse que a Prova de Trabalho poderia ser achar o número especial

392
00:22:00,020 --> 00:22:03,060
para que o Hash do bloco comece com 60 zeros,

393
00:22:03,060 --> 00:22:05,500
Bem, a forma que o verdadeiro protocolo Bitcoin funciona

394
00:22:05,500 --> 00:22:08,140
é periodicamente mudar esse número de zeros

395
00:22:08,140 --> 00:22:12,080
para que demore, em média, 10 minutos para achar um novo bloco.

396
00:22:12,465 --> 00:22:15,715
Então, quanto mais e mais mineradores são adicionados na rede,

397
00:22:15,720 --> 00:22:18,360
o desafio fica mais e mais difícil

398
00:22:18,360 --> 00:22:20,260
de forma que essa loteria em miniatura

399
00:22:20,540 --> 00:22:23,220
só tenha um vencedor a cada 10 minutos

400
00:22:23,640 --> 00:22:27,700
Muitas novas cripto moedas possuem tempos de bloco bem menores que esse

401
00:22:28,360 --> 00:22:32,740
E todo o dinheiro do Bitcoin, no fim vem de alguma recompensa de bloco

402
00:22:33,000 --> 00:22:36,280
No início, essa recompensa eram 50 Bitcoin por bloco

403
00:22:36,280 --> 00:22:39,400
há um ótimo website chamado Block Explorer

404
00:22:39,400 --> 00:22:42,100
que deixa fácil olhar a cadeia de blocos do Bitcoin

405
00:22:42,100 --> 00:22:45,080
e se você olhar os primeiros blocos da cadeia de blocos

406
00:22:45,080 --> 00:22:49,320
não há transação alguma além dos 50 Bitcoin de recompensa para o minerador

407
00:22:50,020 --> 00:22:54,520
mas a cada 210 blocos, o que demora cerca de 4 anos

408
00:22:54,580 --> 00:22:56,880
essa recompensa é cortada pela metade

409
00:22:56,880 --> 00:23:00,220
então agora, a recompensa são 12,5 Bitcoin por bloco

410
00:23:00,520 --> 00:23:04,040
Por essa recompensa diminuir geometricamente pelo tempo,

411
00:23:04,720 --> 00:23:09,680
significa que não existirão mais do que 21 milhões de Bitcoin

412
00:23:10,175 --> 00:23:13,375
Entretanto, isso não significa que mineradores deixarão de ganhar recompensas

413
00:23:13,640 --> 00:23:15,720
Além da recompensa de bloco,

414
00:23:15,720 --> 00:23:18,260
mineradores também podem receber taxas de transações

415
00:23:18,620 --> 00:23:21,180
O jeito que funciona é, quando você faz um pagamento,

416
00:23:21,180 --> 00:23:26,180
você pode puramente opcional incluir uma taxa de transação que vai para o minerador

417
00:23:26,180 --> 00:23:28,940
responsável pelo bloco que inclua aquela transação

418
00:23:29,240 --> 00:23:32,300
a razão que você pode querer fazer isso é para incentivar os mineradores

419
00:23:32,300 --> 00:23:36,140
a incluir a transação que você transmitiu já no próximo bloco

420
00:23:36,500 --> 00:23:42,020
Entenda, no Bitcoin, cada bloco é limitado a cerca de 2400 transações

421
00:23:42,020 --> 00:23:45,300
o que muitos críticos consideram ser desnecessariamente restritivo

422
00:23:46,040 --> 00:23:51,820
Para comparação, Visa processa uma média de 1700 transações por segundo

423
00:23:51,820 --> 00:23:55,520
e são capazes de suportar mais do que 24000 por segundo

424
00:23:56,295 --> 00:23:59,355
Este comparativamente lerdo processamento de Bitcoin

425
00:23:59,360 --> 00:24:01,560
gera custos maiores de transações

426
00:24:01,560 --> 00:24:04,040
já que isso determina quais transações

427
00:24:04,040 --> 00:24:06,260
mineradores preferem colocar nos novos blocos

428
00:24:07,860 --> 00:24:12,400
Tudo isso é longe der ser uma cobertura completa sobre cripto moedas

429
00:24:12,400 --> 00:24:16,420
há ainda muitos nuances, e escolhas de design alternativos que nem mencionei

430
00:24:16,560 --> 00:24:20,780
mas eu espero que este vídeo sirva como uma base estável, simples, como uma árvore

431
00:24:20,780 --> 00:24:24,920
para quem quiser adicionar mais galhos com leitura subsequente

432
00:24:25,240 --> 00:24:26,300
como disse no início

433
00:24:26,300 --> 00:24:29,780
um dos motivos por trás disto é que muito dinheiro passou a fluir

434
00:24:29,780 --> 00:24:35,420
para as cripto moedas, e mesmo que eu não queira dizer se é um investimento bom ou ruim,

435
00:24:35,420 --> 00:24:38,040
eu realmente acho que seja saudável para pessoas interessadas em entrar no jogo

436
00:24:38,040 --> 00:24:40,700
pelo menos conheceram o fundamental da tecnologia.

437
00:24:41,400 --> 00:24:45,700
Como sempre, meu sincero obrigado a todos que fazem este canal possível via Patreon

438
00:24:46,120 --> 00:24:49,420
Eu entendo que nem todos estão em uma posição favorável para contribuir

439
00:24:49,580 --> 00:24:53,840
mas se você ainda estiver interessado em ajudar, uma das melhores formas de fazer isso é simplesmente

440
00:24:54,080 --> 00:24:57,260
compartilhar os vídeos que você considera interessantes ou úteis a outras pessoas

