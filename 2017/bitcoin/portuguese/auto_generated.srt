1
00:00:03,900 --> 00:00:06,480
O que significa ter um Bitcoin?

2
00:00:07,420 --> 00:00:11,591
Muitas pessoas já ouviram falar do Bitcoin, que é uma moeda totalmente digital, 

3
00:00:11,591 --> 00:00:15,554
sem nenhum governo para emiti-la, que nenhum banco precisa gerenciar contas 

4
00:00:15,554 --> 00:00:19,100
e verificar transações e que ninguém sabe realmente quem o inventou.

5
00:00:19,380 --> 00:00:22,189
E ainda assim muitas pessoas não sabem a resposta a esta pergunta, 

6
00:00:22,189 --> 00:00:23,280
pelo menos não na íntegra.

7
00:00:24,100 --> 00:00:27,495
Para chegar lá e ter certeza de que os detalhes técnicos 

8
00:00:27,495 --> 00:00:31,248
subjacentes à resposta realmente motivam, vamos explicar passo 

9
00:00:31,248 --> 00:00:35,240
a passo como você pode ter inventado sua própria versão do Bitcoin.

10
00:00:36,140 --> 00:00:39,355
Começaremos com você acompanhando os pagamentos de seus amigos usando um 

11
00:00:39,355 --> 00:00:42,658
livro-razão comunitário e, então, à medida que você começar a confiar cada 

12
00:00:42,658 --> 00:00:44,860
vez menos em seus amigos e no mundo ao seu redor, 

13
00:00:44,860 --> 00:00:47,899
e se você for inteligente o suficiente para trazer algumas ideias de 

14
00:00:47,899 --> 00:00:50,762
criptografia para ajudar a contornar a necessidade de confiança, 

15
00:00:50,762 --> 00:00:52,700
o resultado é o que chamamos de criptomoeda.

16
00:00:53,840 --> 00:00:58,167
Bitcoin é apenas o primeiro exemplo implementado de criptomoeda e 

17
00:00:58,167 --> 00:01:02,560
agora existem milhares de outras em trocas com moedas tradicionais.

18
00:01:03,300 --> 00:01:06,543
Seguir o caminho de inventar o seu próprio pode ajudar a estabelecer 

19
00:01:06,543 --> 00:01:09,787
as bases para compreender alguns dos jogadores mais recentes no jogo 

20
00:01:09,787 --> 00:01:13,220
e reconhecer quando e por que há espaço para diferentes opções de design.

21
00:01:14,100 --> 00:01:18,880
Na verdade, uma das razões pelas quais escolhi este tópico é que no último ano 

22
00:01:18,880 --> 00:01:23,660
houve uma enorme atenção, investimento e entusiasmo direcionado a estas moedas.

23
00:01:24,280 --> 00:01:27,898
Não vou comentar ou especular sobre as taxas de câmbio atuais ou futuras, 

24
00:01:27,898 --> 00:01:31,028
mas acho que todos concordamos que qualquer pessoa que pretenda 

25
00:01:31,028 --> 00:01:33,620
comprar uma criptomoeda deve realmente saber o que é.

26
00:01:33,920 --> 00:01:38,606
E não me refiro apenas em termos de analogias com conexões vagas com a mineração de ouro, 

27
00:01:38,606 --> 00:01:42,199
quero dizer uma descrição real e direta do que os computadores estão 

28
00:01:42,199 --> 00:01:45,220
fazendo quando enviamos, recebemos e criamos criptomoedas.

29
00:01:46,300 --> 00:01:50,281
Uma coisa que vale a pena enfatizar é que, embora você e eu nos aprofundemos nos 

30
00:01:50,281 --> 00:01:52,788
detalhes aqui, e isso leva um tempo significativo, 

31
00:01:52,788 --> 00:01:57,015
na verdade você não precisa saber esses detalhes se quiser apenas usar a criptomoeda, 

32
00:01:57,015 --> 00:02:01,242
assim como você não faz. Não preciso saber os detalhes do que acontece nos bastidores 

33
00:02:01,242 --> 00:02:03,160
quando você passa um cartão de crédito.

34
00:02:03,720 --> 00:02:07,617
Como qualquer pagamento digital, existem muitos aplicativos fáceis de usar 

35
00:02:07,617 --> 00:02:11,360
que permitem enviar e receber moedas sem pensar no que está acontecendo.

36
00:02:11,660 --> 00:02:16,078
A diferença é que a espinha dorsal subjacente a isto não é um banco que verifica 

37
00:02:16,078 --> 00:02:20,279
as transações, mas sim um sistema inteligente de verificação descentralizada 

38
00:02:20,279 --> 00:02:24,480
e sem confiança, baseado em algumas das matemáticas nascidas na criptografia.

39
00:02:25,900 --> 00:02:28,231
Mas, para começar, quero que você deixe de lado a ideia 

40
00:02:28,231 --> 00:02:30,480
de criptomoedas e tudo mais por apenas alguns minutos.

41
00:02:31,080 --> 00:02:35,380
Vamos começar a história com algo mais realista, livros contábeis e assinaturas digitais.

42
00:02:36,340 --> 00:02:39,347
Se você e seus amigos trocam dinheiro com bastante frequência, 

43
00:02:39,347 --> 00:02:41,877
pagando sua parte na conta do jantar e coisas assim, 

44
00:02:41,877 --> 00:02:44,360
pode ser inconveniente trocar dinheiro o tempo todo.

45
00:02:44,720 --> 00:02:47,420
Portanto, você pode manter um livro-razão comunitário que registre 

46
00:02:47,420 --> 00:02:50,080
todos os pagamentos que pretende fazer em algum momento no futuro.

47
00:02:50,620 --> 00:02:55,100
Alice paga a Bob US$ 20, Bob paga a Charlie US$ 40, coisas assim.

48
00:02:55,500 --> 00:02:58,230
Este livro-razão será algo público e acessível a todos, 

49
00:02:58,230 --> 00:03:01,740
como um site onde qualquer pessoa pode acessar e adicionar novas linhas.

50
00:03:02,480 --> 00:03:05,467
E digamos que no final de cada mês todos vocês se reúnem, 

51
00:03:05,467 --> 00:03:07,940
olham a lista de transações e acertam as contas.

52
00:03:08,280 --> 00:03:11,669
Se você gastou mais do que recebeu, você colocou esse dinheiro no pote, 

53
00:03:11,669 --> 00:03:14,400
e se recebeu mais do que gastou, você tirou esse dinheiro.

54
00:03:15,460 --> 00:03:19,360
Portanto, o protocolo para fazer parte deste sistema muito simples pode ser assim.

55
00:03:20,020 --> 00:03:22,413
Qualquer um pode adicionar linhas ao livro-razão e, 

56
00:03:22,413 --> 00:03:25,360
no final de cada mês, todos vocês se reúnem e acertam as contas.

57
00:03:26,300 --> 00:03:28,508
Agora, um problema com um livro-razão público como 

58
00:03:28,508 --> 00:03:30,760
este é que qualquer pessoa pode adicionar uma linha.

59
00:03:31,020 --> 00:03:36,920
Então, o que impede Bob de escrever que Alice paga US$ 100 a Bob sem a aprovação de Alice?

60
00:03:37,780 --> 00:03:40,638
Como podemos confiar que todas essas transações 

61
00:03:40,638 --> 00:03:43,200
são o que o remetente pretendia que fossem?

62
00:03:44,580 --> 00:03:48,540
Bem, é aqui que entra a primeira parte da criptografia, as assinaturas digitais.

63
00:03:49,480 --> 00:03:53,934
Assim como as assinaturas manuscritas, a ideia aqui é que Alice seja capaz 

64
00:03:53,934 --> 00:03:58,625
de adicionar algo próximo à transação que prove que ela a viu e que a aprovou, 

65
00:03:58,625 --> 00:04:03,080
e que seria inviável para qualquer outra pessoa falsificar essa assinatura.

66
00:04:04,300 --> 00:04:08,580
À primeira vista, pode parecer que uma assinatura digital nem deveria ser possível.

67
00:04:09,220 --> 00:04:11,312
Quero dizer, quaisquer dados que compõem essa 

68
00:04:11,312 --> 00:04:13,860
assinatura podem ser lidos e copiados por um computador.

69
00:04:14,400 --> 00:04:16,140
Então, como você evita falsificações?

70
00:04:17,320 --> 00:04:20,785
Bem, a maneira como isso funciona é que todos geram o que chamamos de par de 

71
00:04:20,785 --> 00:04:24,160
chave pública-chave privada, cada um deles parecendo uma sequência de bits.

72
00:04:24,800 --> 00:04:27,777
A chave privada às vezes também é chamada de chave secreta, 

73
00:04:27,777 --> 00:04:31,300
portanto podemos abreviá-la como SK e abreviar a chave pública como PK.

74
00:04:32,340 --> 00:04:36,220
Como o nome sugere, essa chave secreta é algo que você deseja guardar para si.

75
00:04:37,060 --> 00:04:39,614
No mundo real, sua assinatura manuscrita parece a mesma, 

76
00:04:39,614 --> 00:04:41,720
independentemente do documento que você assina.

77
00:04:42,280 --> 00:04:45,095
Mas uma assinatura digital é na verdade muito mais forte, 

78
00:04:45,095 --> 00:04:46,940
porque muda para mensagens diferentes.

79
00:04:47,840 --> 00:04:52,615
Parece uma sequência de 1s e 0s, geralmente algo em torno de 256 bits, 

80
00:04:52,615 --> 00:04:58,131
e alterar a mensagem, mesmo que ligeiramente, altera completamente a aparência da 

81
00:04:58,131 --> 00:04:59,880
assinatura dessa mensagem.

82
00:05:00,840 --> 00:05:04,690
Falando um pouco mais formalmente, produzir uma assinatura envolve uma 

83
00:05:04,690 --> 00:05:08,540
função que depende tanto da mensagem em si quanto da sua chave privada.

84
00:05:09,200 --> 00:05:12,829
A chave privada garante que somente você possa produzir essa assinatura, 

85
00:05:12,829 --> 00:05:16,458
e o fato de depender da mensagem significa que ninguém pode simplesmente 

86
00:05:16,458 --> 00:05:19,640
copiar uma de suas assinaturas e falsificá-la em outra mensagem.

87
00:05:21,000 --> 00:05:25,850
Junto com isso está uma segunda função usada para verificar se uma assinatura é válida, 

88
00:05:25,850 --> 00:05:28,220
e é aqui que a chave pública entra em ação.

89
00:05:29,200 --> 00:05:33,337
Tudo o que ele faz é gerar verdadeiro ou falso para indicar se esta foi uma assinatura 

90
00:05:33,337 --> 00:05:37,189
produzida pela chave privada associada à chave pública que você está usando para 

91
00:05:37,189 --> 00:05:37,760
verificação.

92
00:05:38,640 --> 00:05:42,725
Não entrarei em detalhes de como exatamente essas duas funções funcionam, 

93
00:05:42,725 --> 00:05:46,093
mas a ideia é que seria completamente inviável encontrar uma 

94
00:05:46,093 --> 00:05:49,240
assinatura válida se você não conhecesse a chave secreta.

95
00:05:50,060 --> 00:05:53,662
Especificamente, não há estratégia melhor do que apenas adivinhar e verificar 

96
00:05:53,662 --> 00:05:57,820
assinaturas aleatórias, que você pode verificar usando a chave pública que todos conhecem.

97
00:05:58,980 --> 00:06:03,200
Agora pense em quantas assinaturas existem com comprimento de 256 bits.

98
00:06:03,840 --> 00:06:06,180
Isso é 2 elevado a 256!

99
00:06:07,140 --> 00:06:09,560
Este é um número estupidamente grande.

100
00:06:09,860 --> 00:06:13,640
Chamá-lo de astronomicamente grande seria dar muito crédito à astronomia.

101
00:06:14,260 --> 00:06:19,680
Na verdade, fiz um vídeo suplementar dedicado apenas a ilustrar como esse número é enorme.

102
00:06:20,380 --> 00:06:23,994
Aqui, digamos apenas que quando você verifica se uma assinatura em uma 

103
00:06:23,994 --> 00:06:27,760
determinada mensagem é válida, você pode se sentir extremamente confiante 

104
00:06:27,760 --> 00:06:31,375
de que a única maneira de alguém tê-la produzido seria se conhecesse a 

105
00:06:31,375 --> 00:06:35,040
chave secreta associada à chave pública que você usou para verificação .

106
00:06:37,120 --> 00:06:40,879
Garantir que as pessoas assinem as transações no livro-razão é muito bom, 

107
00:06:40,879 --> 00:06:42,200
mas há uma pequena lacuna.

108
00:06:42,720 --> 00:06:46,068
Se Alice assinar uma transação como se Alice pagasse $ 100 a Bob, 

109
00:06:46,068 --> 00:06:50,178
mesmo que Bob não pudesse falsificar a assinatura de Alice em uma nova mensagem, 

110
00:06:50,178 --> 00:06:53,680
ele poderia simplesmente copiar a mesma linha quantas vezes quisesse.

111
00:06:54,300 --> 00:06:57,220
Essa combinação de assinatura de mensagem permanece válida.

112
00:06:57,920 --> 00:07:02,541
Para contornar isso, fazemos com que, quando você assinar uma transação, 

113
00:07:02,541 --> 00:07:07,100
a mensagem inclua algum tipo de ID exclusivo associado a essa transação.

114
00:07:07,840 --> 00:07:10,944
Dessa forma, se Alice pagar US$ 100 a Bob várias vezes, 

115
00:07:10,944 --> 00:07:15,380
cada uma dessas linhas do livro-razão exigirá uma assinatura completamente nova.

116
00:07:16,760 --> 00:07:19,191
Excelente, as assinaturas digitais removem um 

117
00:07:19,191 --> 00:07:21,940
grande aspecto da confiança neste protocolo inicial.

118
00:07:22,380 --> 00:07:24,733
Mas mesmo assim, se você realmente fizesse isso, 

119
00:07:24,733 --> 00:07:27,280
estaria contando com uma espécie de sistema de honra.

120
00:07:27,720 --> 00:07:30,250
Ou seja, você está confiando que todos realmente seguirão em 

121
00:07:30,250 --> 00:07:32,740
frente e farão o pagamento em dinheiro no final de cada mês.

122
00:07:33,560 --> 00:07:36,747
E se, por exemplo, Charlie acumular dívidas de milhares 

123
00:07:36,747 --> 00:07:39,480
de dólares e simplesmente se recusar a aparecer?

124
00:07:40,120 --> 00:07:43,700
A única razão real para voltar ao dinheiro para fazer 

125
00:07:43,700 --> 00:07:47,280
o pagamento é se algumas pessoas devem muito dinheiro.

126
00:07:47,860 --> 00:07:50,840
Então, talvez você tenha a ideia inteligente de que nunca terá 

127
00:07:50,840 --> 00:07:53,915
que fazer pagamentos em dinheiro, desde que tenha alguma maneira 

128
00:07:53,915 --> 00:07:56,660
de evitar que as pessoas gastem muito mais do que recebem.

129
00:07:57,340 --> 00:08:00,990
Talvez você comece fazendo com que todos paguem $ 100 no pote e, 

130
00:08:00,990 --> 00:08:04,753
em seguida, faça com que as primeiras linhas do livro sejam lidas: 

131
00:08:04,753 --> 00:08:08,180
Alice ganha $ 100, Bob ganha $ 100, Charlie ganha $ 100, etc.

132
00:08:09,020 --> 00:08:12,332
Agora, simplesmente não aceite nenhuma transação em que 

133
00:08:12,332 --> 00:08:16,000
alguém esteja gastando mais do que já tem naquele livro-razão.

134
00:08:16,840 --> 00:08:21,972
Por exemplo, se as duas primeiras transações são Charlie paga $ 50 a Alice 

135
00:08:21,972 --> 00:08:27,378
e Charlie paga $ 50 a Bob, se ele tentasse adicionar Charlie paga $ 20 a você, 

136
00:08:27,378 --> 00:08:32,100
isso seria inválido, tão inválido como se ele nunca tivesse assinado.

137
00:08:32,940 --> 00:08:36,220
Observe que isso significa que a verificação de uma transação requer 

138
00:08:36,220 --> 00:08:39,500
o conhecimento do histórico completo das transações até aquele ponto.

139
00:08:40,159 --> 00:08:45,960
Isso também será verdade em criptomoedas, embora haja um pouco de espaço para otimização.

140
00:08:48,380 --> 00:08:51,732
O que é interessante aqui é que esta etapa remove a 

141
00:08:51,732 --> 00:08:55,600
conexão entre o razão e os dólares americanos físicos reais.

142
00:08:56,200 --> 00:08:59,396
Em teoria, se todas as pessoas no mundo usassem esse livro-razão, 

143
00:08:59,396 --> 00:09:03,754
você poderia viver a vida inteira apenas enviando e recebendo dinheiro nesse livro-razão, 

144
00:09:03,754 --> 00:09:06,660
sem nunca ter que convertê-lo para dólares americanos reais.

145
00:09:07,580 --> 00:09:10,870
Na verdade, para enfatizar esse ponto, vamos começar a nos referir 

146
00:09:10,870 --> 00:09:14,260
às quantidades no razão como dólares contábeis, ou LD, para abreviar.

147
00:09:14,820 --> 00:09:18,660
É claro que você é livre para trocar dólares contábeis por dólares americanos reais.

148
00:09:19,060 --> 00:09:23,961
Por exemplo, talvez Alice dê a Bob uma nota de $ 10 no mundo real em troca de ele 

149
00:09:23,961 --> 00:09:28,802
adicionar e assinar a transação de $ 10. Bob paga a Alice $ 10 neste livro-razão 

150
00:09:28,802 --> 00:09:29,520
comunitário.

151
00:09:30,720 --> 00:09:34,220
Mas trocas como essa não são garantidas pelo protocolo.

152
00:09:34,720 --> 00:09:37,667
Agora é mais análogo a como você pode trocar dólares 

153
00:09:37,667 --> 00:09:40,560
por euros ou qualquer outra moeda no mercado aberto.

154
00:09:41,180 --> 00:09:43,800
É apenas uma coisa independente.

155
00:09:44,580 --> 00:09:47,180
Esta é a primeira coisa importante a entender 

156
00:09:47,180 --> 00:09:49,780
sobre o Bitcoin ou qualquer outra criptomoeda.

157
00:09:49,780 --> 00:09:52,420
O que é isso é um livro-razão.

158
00:09:53,180 --> 00:09:55,980
O histórico das transações é a moeda.

159
00:09:57,160 --> 00:09:59,403
É claro que, com o Bitcoin, o dinheiro não entra no 

160
00:09:59,403 --> 00:10:01,560
livro-razão com as pessoas comprando com dinheiro.

161
00:10:02,000 --> 00:10:04,820
Verei como o dinheiro novo entra no livro-razão em apenas alguns minutos.

162
00:10:05,540 --> 00:10:09,005
Mas antes disso, há na verdade uma diferença ainda mais significativa entre 

163
00:10:09,005 --> 00:10:12,380
nosso sistema atual de dólares contábeis e como funcionam as criptomoedas.

164
00:10:13,020 --> 00:10:15,894
Até agora, eu disse que esse livro-razão está em algum lugar público, 

165
00:10:15,894 --> 00:10:18,440
como um site onde qualquer pessoa pode adicionar novas linhas.

166
00:10:19,220 --> 00:10:22,544
Mas isso exigiria confiar em um local central, ou seja, 

167
00:10:22,544 --> 00:10:26,760
quem hospeda o site, quem controla as regras de adição de novas linhas.

168
00:10:27,340 --> 00:10:29,582
Para remover esse pouco de confiança, faremos com 

169
00:10:29,582 --> 00:10:31,960
que todos mantenham sua própria cópia do livro-razão.

170
00:10:32,660 --> 00:10:35,393
Então, quando você quiser fazer uma transação, 

171
00:10:35,393 --> 00:10:38,767
como Alice paga a Bob US$ 100, você transmite isso para o 

172
00:10:38,767 --> 00:10:43,420
mundo para que as pessoas ouçam e registrem em seus próprios registros privados.

173
00:10:44,840 --> 00:10:49,260
Mas a menos que você faça algo mais, este sistema é absurdamente ruim.

174
00:10:49,820 --> 00:10:52,740
Como você poderia fazer com que todos concordassem sobre qual é o razão certo?

175
00:10:53,440 --> 00:10:56,832
Quando Bob recebe uma transação, como Alice paga a Bob US$ 10, 

176
00:10:56,832 --> 00:11:01,680
como ele pode ter certeza de que todos os outros receberam e acreditam na mesma transação?

177
00:11:02,340 --> 00:11:07,200
Que mais tarde ele poderá ir até Charlie e usar os mesmos US$ 10 para fazer uma transação?

178
00:11:08,240 --> 00:11:12,060
Na verdade, imagine-se apenas ouvindo as transações sendo transmitidas.

179
00:11:12,760 --> 00:11:15,335
Como você pode ter certeza de que todos os demais 

180
00:11:15,335 --> 00:11:18,220
estão registrando as mesmas transações e na mesma ordem?

181
00:11:19,420 --> 00:11:21,360
Este é realmente o cerne da questão.

182
00:11:21,600 --> 00:11:22,740
Este é um quebra-cabeça interessante.

183
00:11:23,420 --> 00:11:28,303
Você consegue criar um protocolo sobre como aceitar ou rejeitar transações, 

184
00:11:28,303 --> 00:11:32,865
e em que ordem, para ter certeza de que qualquer outra pessoa no mundo 

185
00:11:32,865 --> 00:11:37,620
que segue o mesmo protocolo tem um livro-razão pessoal parecido com o seu?

186
00:11:38,300 --> 00:11:41,580
Este é o problema abordado no artigo original do Bitcoin.

187
00:11:44,060 --> 00:11:48,230
Em alto nível, a solução que o Bitcoin oferece é confiar em qualquer 

188
00:11:48,230 --> 00:11:52,160
livro-razão que tenha mais trabalho computacional investido nele.

189
00:11:52,540 --> 00:11:54,860
Vou reservar um momento para explicar exatamente o que isso significa.

190
00:11:55,320 --> 00:11:58,120
Envolve uma função hash criptográfica.

191
00:11:58,460 --> 00:12:03,011
A ideia geral que desenvolveremos é que se você usar o trabalho computacional como 

192
00:12:03,011 --> 00:12:07,344
base para saber em que confiar, poderá fazer com que transações fraudulentas e 

193
00:12:07,344 --> 00:12:12,280
registros conflitantes exijam uma quantidade inviável de computação para serem realizados.

194
00:12:13,040 --> 00:12:16,284
Mais uma vez, vou lembrá-lo de que isso está indo muito além do 

195
00:12:16,284 --> 00:12:19,580
que alguém precisaria saber apenas para usar uma moeda como essa.

196
00:12:20,120 --> 00:12:22,998
Mas é uma ideia muito legal e, se você a entender, 

197
00:12:22,998 --> 00:12:26,160
entenderá o coração do Bitcoin e de outras criptomoedas.

198
00:12:28,100 --> 00:12:29,940
Então, comecemos pelo princípio: o que é uma função hash?

199
00:12:30,800 --> 00:12:38,165
As entradas para uma dessas funções podem ser qualquer tipo de mensagem ou arquivo, 

200
00:12:38,165 --> 00:12:40,620
na verdade parecem 256 bits.

201
00:12:41,180 --> 00:12:47,660
Essa saída é chamada de hash ou resumo da mensagem, e a intenção é que pareça aleatória.

202
00:12:48,000 --> 00:12:51,660
Não é aleatório, sempre fornece a mesma saída para uma determinada entrada.

203
00:12:52,200 --> 00:12:55,407
Mas a ideia é que se você alterar um pouco a entrada, 

204
00:12:55,407 --> 00:13:00,100
talvez editando apenas um dos caracteres, o hash resultante mude completamente.

205
00:13:00,820 --> 00:13:05,327
Na verdade, para a função hash que estou mostrando aqui, chamada SHA256, 

206
00:13:05,327 --> 00:13:10,637
a forma como a saída muda conforme você altera ligeiramente essa entrada é totalmente 

207
00:13:10,637 --> 00:13:11,440
imprevisível.

208
00:13:12,440 --> 00:13:17,060
Veja, esta não é apenas uma função hash qualquer, é uma função hash criptográfica.

209
00:13:17,340 --> 00:13:20,660
Isso significa que é inviável calcular na direção inversa.

210
00:13:21,260 --> 00:13:28,074
Se eu mostrar uma sequência de 1s e 0s e pedir que você encontre uma entrada para 

211
00:13:28,074 --> 00:13:34,640
o hash SHA256, você não terá método melhor do que apenas adivinhar e verificar.

212
00:13:35,700 --> 00:13:39,917
E, novamente, se você quiser saber quanto cálculo seria necessário para 

213
00:13:39,917 --> 00:13:43,900
realizar 256 suposições, basta dar uma olhada no vídeo complementar.

214
00:13:44,380 --> 00:13:46,660
Na verdade, eu me diverti muito escrevendo aquilo.

215
00:13:48,560 --> 00:13:51,578
Você pode pensar que se realmente se aprofundar nos detalhes de 

216
00:13:51,578 --> 00:13:54,501
como exatamente essa função funciona, poderá fazer engenharia 

217
00:13:54,501 --> 00:13:57,520
reversa da entrada apropriada sem ter que adivinhar e verificar.

218
00:13:58,240 --> 00:14:00,840
Mas ninguém jamais descobriu uma maneira de fazer isso.

219
00:14:01,600 --> 00:14:04,338
Curiosamente, não há nenhuma prova rigorosa de 

220
00:14:04,338 --> 00:14:06,960
que seja difícil calcular na direção inversa.

221
00:14:07,620 --> 00:14:10,751
E, no entanto, uma grande quantidade de segurança moderna depende de 

222
00:14:10,751 --> 00:14:14,200
funções hash criptográficas e da ideia de que elas possuem essa propriedade.

223
00:14:14,940 --> 00:14:18,382
Se você observar quais algoritmos estão por trás da conexão 

224
00:14:18,382 --> 00:14:21,766
segura que seu navegador está fazendo com o YouTube agora, 

225
00:14:21,766 --> 00:14:25,840
ou que faz com seu banco, provavelmente verá o nome SHA256 aparecer lá.

226
00:14:27,340 --> 00:14:32,202
Por enquanto, nosso foco será em como tal função pode provar que uma lista 

227
00:14:32,202 --> 00:14:37,000
específica de transações está associada a um grande esforço computacional.

228
00:14:38,040 --> 00:14:42,085
Imagine que alguém lhe mostre uma lista de transações e diga: ei, 

229
00:14:42,085 --> 00:14:46,989
encontrei um número especial para que, quando você colocar esse número no final 

230
00:14:46,989 --> 00:14:50,116
desta lista de transações e aplicar SHA256 a tudo, 

231
00:14:50,116 --> 00:14:53,120
os primeiros 30 bits disso saída são todos zeros.

232
00:14:54,100 --> 00:14:56,700
Você acha que foi difícil para eles encontrar esse número?

233
00:14:58,060 --> 00:15:02,650
Bem, para uma mensagem aleatória, a probabilidade de um hash começar com 30 

234
00:15:02,650 --> 00:15:07,180
zeros sucessivos é de 1 em 2 elevado a 30, o que é cerca de 1 em um bilhão.

235
00:15:08,200 --> 00:15:10,840
E como SHA256 é uma função hash criptográfica, 

236
00:15:10,840 --> 00:15:15,840
a única maneira de encontrar um número especial como esse é apenas adivinhar e verificar.

237
00:15:16,660 --> 00:15:19,459
Portanto, é quase certo que essa pessoa teve que passar por cerca de 

238
00:15:19,459 --> 00:15:22,380
um bilhão de números diferentes antes de encontrar esse número especial.

239
00:15:23,380 --> 00:15:26,451
E uma vez que você sabe esse número, é muito rápido verificar, 

240
00:15:26,451 --> 00:15:28,840
basta executar o hash e ver que existem 30 zeros.

241
00:15:29,800 --> 00:15:33,515
Ou seja, você pode verificar que eles passaram por muito trabalho, 

242
00:15:33,515 --> 00:15:36,400
mas sem ter que fazer esse mesmo esforço você mesmo.

243
00:15:37,200 --> 00:15:38,800
Isso é chamado de prova de trabalho.

244
00:15:39,460 --> 00:15:44,220
E o mais importante: todo esse trabalho está intrinsecamente ligado à lista de transações.

245
00:15:44,900 --> 00:15:48,181
Se você alterar uma dessas transações, mesmo que ligeiramente, 

246
00:15:48,181 --> 00:15:49,640
o hash mudará completamente.

247
00:15:50,080 --> 00:15:53,324
Então você teria que passar por mais um bilhão de tentativas para 

248
00:15:53,324 --> 00:15:56,716
encontrar uma nova prova de trabalho, um novo número que fizesse com 

249
00:15:56,716 --> 00:16:00,600
que o hash da lista alterada junto com esse novo número começasse com 30 zeros.

250
00:16:01,500 --> 00:16:04,100
Então agora pense na nossa situação de razão distribuída.

251
00:16:04,680 --> 00:16:07,785
Todos estão lá transmitindo transações e queremos uma maneira 

252
00:16:07,785 --> 00:16:10,840
de eles chegarem a um acordo sobre qual é o registro correto.

253
00:16:12,100 --> 00:16:15,318
Como mencionei, a ideia por trás do documento original do Bitcoin é fazer com 

254
00:16:15,318 --> 00:16:18,660
que todos confiem em qualquer livro-razão que tenha mais trabalho investido nele.

255
00:16:19,280 --> 00:16:23,211
A forma como isso funciona é primeiro organizar um determinado livro-razão em blocos, 

256
00:16:23,211 --> 00:16:27,280
onde cada bloco consiste em uma lista de transações juntamente com uma prova de trabalho.

257
00:16:27,720 --> 00:16:32,300
Ou seja, um número especial para que o hash de todo o bloco comece com vários zeros.

258
00:16:33,140 --> 00:16:38,229
No momento, digamos que tenha que começar com 60 zeros, 

259
00:16:38,229 --> 00:16:45,500
mas depois voltaremos a uma forma mais sistemática que você pode querer alterar.

260
00:16:45,900 --> 00:16:50,040
Um bloco só é considerado válido se possuir uma prova de trabalho.

261
00:16:50,960 --> 00:16:55,065
Além disso, para garantir que haja uma ordem padrão para esses blocos, 

262
00:16:55,065 --> 00:16:59,460
faremos com que um bloco contenha o hash do bloco anterior em seu cabeçalho.

263
00:17:00,060 --> 00:17:03,988
Dessa forma, se você voltasse e mudasse qualquer um dos blocos, 

264
00:17:03,988 --> 00:17:08,469
ou trocasse a ordem de dois blocos, mudaria o bloco que vem depois dele, 

265
00:17:08,469 --> 00:17:13,380
o que muda o hash do bloco, que muda o que vem depois dele , e assim por diante.

266
00:17:13,980 --> 00:17:17,724
Isso exigiria refazer todo o trabalho, encontrando um novo número especial 

267
00:17:17,724 --> 00:17:21,420
para cada um desses blocos que fizesse seus hashes começarem com 60 zeros.

268
00:17:22,440 --> 00:17:26,624
Como os blocos são encadeados dessa forma, em vez de chamá-los de livro-razão, 

269
00:17:26,624 --> 00:17:28,319
é comum chamá-los de blockchain.

270
00:17:30,080 --> 00:17:32,402
Como parte do nosso protocolo atualizado, agora permitiremos 

271
00:17:32,402 --> 00:17:34,420
que qualquer pessoa no mundo seja criadora de blocos.

272
00:17:35,240 --> 00:17:39,210
O que isso significa é que eles vão ouvir as transações sendo transmitidas, 

273
00:17:39,210 --> 00:17:42,763
coletá-las em algum bloco e então trabalhar muito para encontrar um 

274
00:17:42,763 --> 00:17:46,160
número especial que faça o hash desse bloco começar com 60 zeros.

275
00:17:46,960 --> 00:17:49,900
Assim que o encontrarem, eles transmitirão o bloco que encontraram.

276
00:17:50,860 --> 00:17:54,143
Para recompensar um criador de bloco por todo esse trabalho, 

277
00:17:54,143 --> 00:17:57,857
quando ele monta um bloco, permitiremos que ele inclua uma transação 

278
00:17:57,857 --> 00:18:02,540
muito especial no topo dele, na qual ele recebe, digamos, 10 dólares contábeis do nada.

279
00:18:03,080 --> 00:18:06,182
Isso é chamado de recompensa em bloco e é uma exceção 

280
00:18:06,182 --> 00:18:09,400
às nossas regras usuais sobre aceitar ou não transações.

281
00:18:10,040 --> 00:18:12,920
Não vem de ninguém, então não precisa ser assinado.

282
00:18:13,660 --> 00:18:16,583
Isso também significa que o número total de dólares 

283
00:18:16,583 --> 00:18:19,620
contábeis em nossa economia aumenta a cada novo bloco.

284
00:18:20,900 --> 00:18:24,288
A criação de blocos costuma ser chamada de mineração, 

285
00:18:24,288 --> 00:18:28,180
pois exige muito trabalho e introduz novas moedas na economia.

286
00:18:29,020 --> 00:18:31,718
Mas quando você ouvir ou ler sobre mineradores, 

287
00:18:31,718 --> 00:18:36,048
tenha em mente que o que eles realmente estão fazendo é ouvir as transações, 

288
00:18:36,048 --> 00:18:40,940
criar blocos, transmitir esses blocos e serem recompensados com dinheiro novo por isso.

289
00:18:41,780 --> 00:18:46,076
Do ponto de vista dos mineiros, cada bloco é como uma loteria em miniatura, 

290
00:18:46,076 --> 00:18:49,299
onde todos adivinham os números o mais rápido que podem, 

291
00:18:49,299 --> 00:18:54,048
até que um sortudo encontre um número especial que faça o hash do bloco começar com 

292
00:18:54,048 --> 00:18:56,140
muitos zeros e receba a recompensa. .

293
00:18:57,620 --> 00:19:01,646
Para qualquer pessoa que queira usar esse sistema apenas para fazer pagamentos, 

294
00:19:01,646 --> 00:19:05,774
em vez de ouvir as transações, todos passam a ouvir apenas os blocos transmitidos 

295
00:19:05,774 --> 00:19:09,600
pelos mineradores e a atualizar suas próprias cópias pessoais do blockchain.

296
00:19:10,560 --> 00:19:14,356
Agora, a principal adição ao nosso protocolo é que se você ouvir 

297
00:19:14,356 --> 00:19:18,445
dois blockchains distintos com históricos de transações conflitantes, 

298
00:19:18,445 --> 00:19:22,300
você adiará para o mais longo, aquele com mais trabalho investido.

299
00:19:22,860 --> 00:19:27,720
Se houver empate, espere até ouvir um bloco adicional que torne um deles mais longo.

300
00:19:28,720 --> 00:19:33,534
Portanto, embora não exista uma autoridade central e todos mantenham a sua própria 

301
00:19:33,534 --> 00:19:38,058
cópia da blockchain, se todos concordarem em dar preferência à blockchain que 

302
00:19:38,058 --> 00:19:42,640
tiver mais trabalho, teremos uma forma de chegar a um consenso descentralizado.

303
00:19:43,560 --> 00:19:47,102
Para ver por que isso torna o sistema confiável e para entender até que 

304
00:19:47,102 --> 00:19:49,710
ponto você deve confiar que um pagamento é legítimo, 

305
00:19:49,710 --> 00:19:53,302
é realmente útil analisar exatamente o que seria necessário para enganar 

306
00:19:53,302 --> 00:19:54,680
alguém que usa esse sistema.

307
00:19:55,600 --> 00:19:59,698
Talvez Alice esteja tentando enganar Bob com um bloco fraudulento, ou seja, 

308
00:19:59,698 --> 00:20:03,581
ela tenta enviar a ele um que inclui o pagamento de 100 dólares Ledger, 

309
00:20:03,581 --> 00:20:06,386
mas sem transmitir esse bloco para o resto da rede, 

310
00:20:06,386 --> 00:20:11,240
dessa forma todos os outros ainda pensam que ela tem esses 100 dólares. Dólares contábeis.

311
00:20:11,960 --> 00:20:15,387
Para fazer isso, ela teria que encontrar uma prova de trabalho válida antes 

312
00:20:15,387 --> 00:20:18,680
de todos os outros mineradores, cada um trabalhando em seu próprio bloco.

313
00:20:19,500 --> 00:20:22,159
E isso definitivamente pode acontecer, talvez Alice 

314
00:20:22,159 --> 00:20:24,820
ganhe essa loteria em miniatura antes de todo mundo.

315
00:20:25,680 --> 00:20:29,531
Mas Bob ainda ouvirá as transmissões feitas por outros mineradores, então, 

316
00:20:29,531 --> 00:20:32,150
para mantê-lo acreditando nesse bloco fraudulento, 

317
00:20:32,150 --> 00:20:36,259
Alice teria que fazer todo o trabalho sozinha para continuar adicionando blocos 

318
00:20:36,259 --> 00:20:40,830
nessa bifurcação especial na blockchain de Bob, que é diferente do que ele está ouvindo. 

319
00:20:40,830 --> 00:20:41,960
do resto dos mineiros.

320
00:20:42,740 --> 00:20:48,260
Lembre-se, de acordo com o protocolo, Bob sempre confia na cadeia mais longa que conhece.

321
00:20:49,260 --> 00:20:53,597
Alice pode conseguir manter isso por alguns blocos se por acaso encontrar 

322
00:20:53,597 --> 00:20:57,700
blocos mais rapidamente do que o resto dos mineradores da rede juntos.

323
00:20:58,480 --> 00:21:02,253
Mas, a menos que ela tenha perto de 50% dos recursos de computação entre 

324
00:21:02,253 --> 00:21:06,285
todos os mineradores, a probabilidade torna-se esmagadora de que o blockchain 

325
00:21:06,285 --> 00:21:10,161
em que todos os outros mineradores estão trabalhando cresça mais rápido do 

326
00:21:10,161 --> 00:21:13,780
que o único blockchain fraudulento que Alice está alimentando com Bob.

327
00:21:15,000 --> 00:21:19,019
Então, depois de bastante tempo, Bob simplesmente rejeitará o que está ouvindo 

328
00:21:19,019 --> 00:21:23,140
de Alice em favor da cadeia mais longa na qual todos os outros estão trabalhando.

329
00:21:23,960 --> 00:21:26,710
Observe que isso significa que você não deve necessariamente 

330
00:21:26,710 --> 00:21:28,920
confiar em um novo bloco que ouvir imediatamente.

331
00:21:29,500 --> 00:21:33,400
Em vez disso, você deve esperar que vários novos blocos sejam adicionados a ele.

332
00:21:33,820 --> 00:21:36,507
Se você ainda não ouviu falar de blockchains mais longos, 

333
00:21:36,507 --> 00:21:40,540
pode confiar que esse bloco faz parte da mesma cadeia que todos os outros estão usando.

334
00:21:42,120 --> 00:21:45,220
E com isso acertamos todas as ideias principais.

335
00:21:45,780 --> 00:21:49,753
Este sistema de contabilidade distribuído baseado em uma prova de trabalho é mais ou 

336
00:21:49,753 --> 00:21:53,680
menos como funciona o protocolo Bitcoin e como funcionam muitas outras criptomoedas.

337
00:21:54,300 --> 00:21:56,160
Faltam apenas alguns detalhes para esclarecer.

338
00:21:56,300 --> 00:21:59,558
Anteriormente eu disse que a prova de trabalho poderia ser encontrar 

339
00:21:59,558 --> 00:22:02,580
um número especial para que o hash do bloco comece com 60 zeros.

340
00:22:03,220 --> 00:22:07,560
Bem, a forma como o protocolo Bitcoin real funciona é alterar periodicamente 

341
00:22:07,560 --> 00:22:11,900
esse número de zeros para que demore 10 minutos para encontrar um novo bloco.

342
00:22:12,780 --> 00:22:16,122
Assim, à medida que há cada vez mais mineiros adicionados à rede, 

343
00:22:16,122 --> 00:22:19,364
o desafio torna-se cada vez mais difícil, de tal forma que esta 

344
00:22:19,364 --> 00:22:22,960
lotaria em miniatura tem apenas cerca de um vencedor a cada 10 minutos.

345
00:22:23,920 --> 00:22:27,880
Muitas criptomoedas mais recentes têm tempos de bloqueio muito mais curtos do que isso.

346
00:22:28,580 --> 00:22:32,460
E todo o dinheiro em Bitcoin vem, em última análise, de alguma recompensa em bloco.

347
00:22:32,920 --> 00:22:35,740
No início, essas recompensas eram de 50 Bitcoins por bloco.

348
00:22:36,140 --> 00:22:38,836
Existe um ótimo site chamado Block Explorer que 

349
00:22:38,836 --> 00:22:41,420
facilita a visualização do blockchain Bitcoin.

350
00:22:41,960 --> 00:22:44,656
E se você observar os primeiros blocos da cadeia, 

351
00:22:44,656 --> 00:22:49,240
eles não contêm nenhuma transação além da recompensa de 50 Bitcoins para o minerador.

352
00:22:49,860 --> 00:22:56,340
Mas a cada 210.000 blocos, ou seja, a cada 4 anos, essa recompensa é reduzida pela metade.

353
00:22:56,860 --> 00:23:00,140
Então, neste momento, a recompensa é de 12,5 Bitcoin por bloco.

354
00:23:00,720 --> 00:23:05,020
E como essa recompensa diminui geometricamente ao longo do tempo, 

355
00:23:05,020 --> 00:23:09,320
isso significa que nunca existirão mais de 21 milhões de Bitcoins.

356
00:23:10,280 --> 00:23:13,280
No entanto, isso não significa que os mineiros deixarão de ganhar dinheiro.

357
00:23:13,820 --> 00:23:17,940
Além da recompensa do bloco, os mineradores também podem cobrar taxas de transação.

358
00:23:18,520 --> 00:23:22,077
A maneira como isso funciona é que sempre que você fizer um pagamento, 

359
00:23:22,077 --> 00:23:25,183
você pode incluir opcionalmente uma taxa de transação que irá 

360
00:23:25,183 --> 00:23:28,240
para o minerador de qualquer bloco que inclua esse pagamento.

361
00:23:29,020 --> 00:23:32,444
A razão pela qual você pode fazer isso é incentivar os mineradores 

362
00:23:32,444 --> 00:23:35,920
a realmente incluir a transação que você transmite no próximo bloco.

363
00:23:36,440 --> 00:23:40,793
Veja, no Bitcoin, cada bloco é limitado a cerca de 2.400 transações, 

364
00:23:40,793 --> 00:23:45,020
o que muitos críticos argumentam ser desnecessariamente restritivo.

365
00:23:45,860 --> 00:23:50,387
Para efeito de comparação, a Visa processa em média cerca de 1.700 

366
00:23:50,387 --> 00:23:55,320
transações por segundo e é capaz de lidar com mais de 24.000 por segundo.

367
00:23:56,020 --> 00:23:59,431
Esse processamento comparativamente lento no Bitcoin acarreta 

368
00:23:59,431 --> 00:24:02,898
taxas de transação mais altas, pois é isso que determina quais 

369
00:24:02,898 --> 00:24:06,200
transações os mineradores escolhem incluir em um novo bloco.

370
00:24:07,820 --> 00:24:11,500
Tudo isso está longe de ser uma cobertura abrangente de criptomoedas.

371
00:24:12,160 --> 00:24:16,180
Ainda existem muitas nuances e opções alternativas de design que eu nem toquei.

372
00:24:16,640 --> 00:24:20,478
Mas minha esperança é que isso possa fornecer um tronco de árvore estável de compreensão 

373
00:24:20,478 --> 00:24:24,360
no estilo WaitButWhy para quem deseja adicionar mais alguns ramos com leituras adicionais.

374
00:24:25,180 --> 00:24:28,812
Como eu disse no início, um dos motivos por trás disso é que muito dinheiro 

375
00:24:28,812 --> 00:24:32,397
começou a fluir para criptomoedas, e mesmo que eu não queira fazer nenhuma 

376
00:24:32,397 --> 00:24:35,026
afirmação sobre se esse é um investimento bom ou ruim, 

377
00:24:35,026 --> 00:24:38,707
eu realmente acho é saudável que as pessoas que entram no jogo conheçam pelo 

378
00:24:38,707 --> 00:24:40,380
menos os fundamentos da tecnologia.

379
00:24:41,340 --> 00:24:43,244
Como sempre, meus mais sinceros agradecimentos a 

380
00:24:43,244 --> 00:24:45,420
todos vocês que tornaram este canal possível no Patreon.

381
00:24:46,080 --> 00:24:48,436
Entendo que nem todos estão em condições de contribuir, 

382
00:24:48,436 --> 00:24:50,497
mas se você ainda estiver interessado em ajudar, 

383
00:24:50,497 --> 00:24:54,031
uma das melhores maneiras de fazer isso é simplesmente compartilhar vídeos que você 

384
00:24:54,031 --> 00:24:56,640
acha que podem ser interessantes ou úteis para outras pessoas.

385
00:24:57,280 --> 00:24:59,320
Eu sei que você sabe disso, mas realmente ajuda.

