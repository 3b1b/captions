1
00:00:14,545 --> 00:00:18,160
ここ数回のビデオは導関数の考え方についてのものでした

2
00:00:18,160 --> 00:00:21,680
。積分に進む前に、制限についてお話したいと思います。

3
00:00:21,680 --> 00:00:25,320
正直に言うと、制限という考え方はそれほど新しいものではありません。

4
00:00:25,320 --> 00:00:29,220
アプローチという言葉の意味を知っていれば、制限が何であるかはすでにわかっています。

5
00:00:29,220 --> 00:00:33,660
これは、ある値が別の値に近づくという直感的なアイデ

6
00:00:33,660 --> 00:00:36,620
アに派手な表記法を割り当てる問題であると言えます。

7
00:00:36,620 --> 00:00:40,300
ただし、このトピックに完全なビデオを費やす理由はいくつかあります。

8
00:00:40,300 --> 00:00:44,020
まず、これまで私がデリバティブを説明してきた方法が、ほとん

9
00:00:44,020 --> 00:00:48,880
どのコースや教科書で通常提示されているデリバティブの正式な

10
00:00:48,880 --> 00:00:50,380
定義とどのように一致しているかを示すことは価値があります。

11
00:00:50,380 --> 00:00:55,060
dx と df を具体的な非ゼロ ナッジとして考えることは、直感を構築する

12
00:00:55,060 --> 00:00:59,860
ための単なるトリックではなく、厳密なデリバティブの正式な定義によって実際に

13
00:00:59,860 --> 00:01:04,140
裏付けられているということを、少しだけ自信を持ってお伝えしたいと思います。

14
00:01:04,140 --> 00:01:08,640
また、数学者が限界のイプシロンデルタ定義の観点からアプローチすると言っ

15
00:01:08,640 --> 00:01:12,600
ているとき、正確に何を意味するのかについても明らかにしたいと思います。

16
00:01:12,600 --> 00:01:16,460
次に、ロピタルのルールと呼ばれる、制限を

17
00:01:16,460 --> 00:01:17,460
計算するための賢いトリックで終わります。

18
00:01:17,460 --> 00:01:22,540
そこで、まず最初に、導関数の正式な定義を見てみましょう。

19
00:01:22,540 --> 00:01:26,820
思い出してください、x の関数 f がある場合、特定の入力 (おそらく x

20
00:01:26,820 --> 00:01:32,580
が 2 に等しい) での導関数を考えるには、その入力を少し dx から

21
00:01:32,580 --> 00:01:37,960
遠ざけて、結果として生じる出力の変化を観察することから始めます。 DF。

22
00:01:37,960 --> 00:01:44,040
比率 df を dx で割ったものは、グラフの開始点とナッジされた点

23
00:01:44,040 --> 00:01:49,340
の間の上昇対実行勾配と考えるのが適切であり、ほぼ微分値となります。

24
00:01:49,340 --> 00:01:55,140
実際の導関数は、dx が 0 に近づくにつれてこの比率が近づくものになります。

25
00:01:55,140 --> 00:02:00,720
ここでの意味を詳しく説明すると、出力 df へのナッジは、

26
00:02:00,720 --> 00:02:06,460
開始入力 + dx での f と、開始入力での f の差

27
00:02:06,460 --> 00:02:08,680
、つまり dx によって引き起こされる出力への変化です。

28
00:02:08,680 --> 00:02:13,540
dx が 0 に近づくとこの比率が何に近づくかを知りたいことを表現するには、

29
00:02:13,540 --> 00:02:18,300
limit を表す LIM を書き、その下に dx 矢印 0 を付けます。

30
00:02:18,300 --> 00:02:25,060
このような制限式内で、dx のような小文字の d を含む項はほとんど見られません。

31
00:02:25,060 --> 00:02:29,760
代わりに、何らかの理由で、デルタ x や通常は

32
00:02:29,760 --> 00:02:31,820
h などの別の変数を使用するのが標準です。

33
00:02:31,820 --> 00:02:36,220
私がよく考えているのは、典型的な導関数式でこの小文字の d

34
00:02:36,220 --> 00:02:41,660
を含む項には、この限界の概念、つまり dx は最終的に 0

35
00:02:41,660 --> 00:02:45,020
になるはずであるという概念が組み込まれているということです。

36
00:02:45,020 --> 00:02:49,900
ある意味、この左側、過去数回のビデオで考えてきた df 対

37
00:02:49,900 --> 00:02:54,620
dx の比率は、ここの右側がより詳細に説明していることの単な

38
00:02:54,620 --> 00:03:00,140
る省略形であり、正確に何を書いているかを表しています。 df

39
00:03:00,140 --> 00:03:01,800
とは、この制限プロセスを明示的に書き出すことを意味します。

40
00:03:01,800 --> 00:03:06,680
この右辺は、微積分の教科書で一般的に見

41
00:03:06,680 --> 00:03:09,000
られるような、導関数の正式な定義です。

42
00:03:09,000 --> 00:03:12,860
ここで少し暴言を吐くことを許していただければ、この右辺については、無限に小さな変

43
00:03:12,860 --> 00:03:18,280
化という逆説的な考え方を参照しているものは何もないことを強調したいと思います。

44
00:03:18,280 --> 00:03:20,680
制限のポイントはそれを避けることです。

45
00:03:20,680 --> 00:03:25,980
この値 h は、シリーズ全体で参照してきた dx とまったく同じです。

46
00:03:25,980 --> 00:03:33,320
これは、0 のようなゼロ以外の有限の小さいサイズを使用して f の入力をナッジします。001.

47
00:03:33,320 --> 00:03:38,460
h の任意の小さな選択に対して何が起こるかを分析しているだけです。

48
00:03:38,460 --> 00:03:43,800
実際、単に dx を使用するのではなく、この正式な定義に新しい変数

49
00:03:43,800 --> 00:03:49,620
名を導入する唯一の理由は、入力に対するこれらの変更が無限小とは何の

50
00:03:49,620 --> 00:03:55,320
関係もない単なる普通の数値であることを非常に明確にするためです。

51
00:03:55,320 --> 00:04:01,460
この dx を限りなく小さな変化として解釈したり、dx と df はあま

52
00:04:01,460 --> 00:04:06,280
り真剣に受け止めるべきではない単なる記号にすぎないと言いたい人もいます。

53
00:04:06,280 --> 00:04:09,940
しかし、このシリーズのここまでくると、私がどちらの意見もあまり好きではないことがわかります。

54
00:04:09,940 --> 00:04:15,180
dx を具体的で有限の小さなナッジとして解釈することはできるし、そうすべきだと思い

55
00:04:15,180 --> 00:04:19,460
ます。ただし、それが 0 に近づいたときに何が起こるかを尋ねることを忘れない限り。

56
00:04:19,460 --> 00:04:23,240
まず、これまでのいくつかのビデオがこのことを理解していただければ幸いですが、微

57
00:04:23,240 --> 00:04:27,780
積分の規則が実際にどこから来たのかについて、より強い直観を築くのに役立ちます。

58
00:04:27,780 --> 00:04:30,680
しかし、これは直感を鍛えるための単なるトリックではありません。

59
00:04:30,680 --> 00:04:35,620
この具体的で有限で小さなナッジの哲学に基づいてデリバティブについて私が述べて

60
00:04:35,620 --> 00:04:41,400
きたことはすべて、私たちが今見つめているこの正式な定義の翻訳にすぎません。

61
00:04:41,400 --> 00:04:45,880
簡単に言えば、制限に関する大騒ぎは、変数に対する小さな変更のサ

62
00:04:45,880 --> 00:04:51,440
イズが 0 に近づくと何が起こるかを尋ねることによって、無限

63
00:04:51,440 --> 00:04:53,700
に小さな変更について話すことを回避できるようにすることです。

64
00:04:53,700 --> 00:04:58,880
これにより、ある値が別の値に近づくことが何を意味す

65
00:04:58,880 --> 00:05:00,420
るかを正確に理解するという目標 2 に到達します。

66
00:05:00,420 --> 00:05:08,520
たとえば、2 プラス h の 3 乗マイナス 2 の 3 乗をすべて h で割った関数を考えてみましょう。

67
00:05:08,520 --> 00:05:13,180
これは、x が 2 に等しいときに評価される x の

68
00:05:13,180 --> 00:05:18,900
導関数の定義を解明するときに出てくる式です。ただし、

69
00:05:18,900 --> 00:05:20,720
これを入力 h を持つ古い関数と考えてみましょう。

70
00:05:20,720 --> 00:05:25,120
そのグラフは、連続して見える放物線です。これは、三次項を

71
00:05:25,120 --> 00:05:28,200
線形項で割ったものであるため、これは理にかなっています。

72
00:05:28,200 --> 00:05:33,000
しかし、実際には、h が 0 に等しいときに何が起こっているかを考えると、それ

73
00:05:33,000 --> 00:05:37,440
を代入すると、0 を 0 で割った値が得られますが、これは定義されていません。

74
00:05:37,440 --> 00:05:43,300
実際、このグラフにはその点に穴があり、その穴を誇張して描く

75
00:05:43,300 --> 00:05:45,640
必要があり、多くの場合、このように空の円が描かれています。

76
00:05:45,640 --> 00:05:49,860
ただし、関数は必要に応じて 0 に近い入力に対して

77
00:05:49,860 --> 00:05:50,860
完全に適切に定義されていることに留意してください。

78
00:05:50,860 --> 00:05:56,380
h が 0 に近づくと、対応する出力、つまりこのグ

79
00:05:56,380 --> 00:05:59,260
ラフの高さが 12 に近づくことに同意しませんか?

80
00:05:59,260 --> 00:06:03,980
どちらの側から来るかは関係ありません。

81
00:06:03,980 --> 00:06:09,400
h が 0 に近づくときのこの比率の限界は 12 に等しくなります。

82
00:06:09,400 --> 00:06:15,320
しかし、あなたが微積分を発明した数学者で、誰かがあなたに「アプロ

83
00:06:15,320 --> 00:06:18,460
ーチとは正確には何を意味しますか?」と尋ねたと想像してください。

84
00:06:18,460 --> 00:06:21,420
それはちょっと迷惑な質問でしょう。

85
00:06:21,420 --> 00:06:24,420
ある値が別の値に近づくことが何を意味するかは誰もが知っています。

86
00:06:24,460 --> 00:06:28,700
しかし、その人に完全に明確に答えるこ

87
00:06:28,700 --> 00:06:30,980
とができる方法を考え始めましょう。

88
00:06:30,980 --> 00:06:36,900
禁止点 0 自体を除いて、0 から一定の距離内にある

89
00:06:36,900 --> 00:06:41,540
入力の指定範囲について、対応するすべての出力、その範

90
00:06:41,540 --> 00:06:43,100
囲より上のグラフの考えられるすべての高さを調べます。

91
00:06:43,100 --> 00:06:48,540
入力値の範囲が 0 付近にどんどん近づくにつれて、

92
00:06:48,540 --> 00:06:52,020
出力値の範囲は 12 付近にますます近くなります。

93
00:06:52,020 --> 00:06:59,140
重要なのは、出力値の範囲のサイズは必要に応じて小さくできることです。

94
00:06:59,140 --> 00:07:03,740
反例として、次のような関数を考えてみましょう。これも 0 では定

95
00:07:03,740 --> 00:07:07,180
義されていませんが、その時点でジャンプアップするようなものです。

96
00:07:07,180 --> 00:07:12,380
h = 0 に右から近づくと関数は値 2 に近づき

97
00:07:12,380 --> 00:07:15,660
ますが、左から h に近づくと 1 に近づきます。

98
00:07:15,660 --> 00:07:20,660
この関数が h が 0 に近づくにつれて近づく明確で曖昧さのない値は

99
00:07:20,700 --> 00:07:25,220
1 つも存在しないため、その時点では制限は単純に定義されていません。

100
00:07:25,220 --> 00:07:30,060
これを考える 1 つの方法は、0 付近の入力範囲を見て、

101
00:07:30,060 --> 00:07:35,860
対応する出力範囲を考慮すると、その入力範囲を縮小しても、

102
00:07:35,860 --> 00:07:39,540
対応する出力は特定の値に絞り込まれないということです。

103
00:07:39,540 --> 00:07:44,900
代わりに、これらの出力は、入力範囲を想像できるほど小さく

104
00:07:44,900 --> 00:07:48,580
しても、1 より小さくなることがない範囲にまたがります。

105
00:07:48,620 --> 00:07:53,300
限界点付近で入力範囲を縮小し、それによって出力範囲がどれだけ

106
00:07:53,300 --> 00:07:57,760
縮小されるかが制限されているかどうかを確認するというこの観点

107
00:07:57,760 --> 00:08:01,980
は、限界のイプシロンデルタ定義と呼ばれるものにつながります。

108
00:08:01,980 --> 00:08:06,580
これは微積分の入門としては不必要に負担が大きいと言えるでしょう。

109
00:08:06,580 --> 00:08:10,060
アプローチという言葉の意味を知っていれば、制限が何を意味するかすでに

110
00:08:10,060 --> 00:08:12,480
知っているでしょう。ここでは概念レベルで新しいことは何もありません。

111
00:08:12,480 --> 00:08:17,300
しかし、これは実際の分析の分野を垣間見る興味深いものであり、数学者が微積分の直観的

112
00:08:17,340 --> 00:08:22,860
なアイデアをどのようにしてより密閉して厳密なものにするのかを知ることができます。

113
00:08:22,860 --> 00:08:25,900
主なアイデアはすでにここで見ました。

114
00:08:25,900 --> 00:08:30,500
制限が存在する場合は、出力範囲を好きなだけ小さくできますが、制限

115
00:08:30,500 --> 00:08:35,340
が存在しない場合は、制限入力の周囲で入力範囲をどれだけ縮小して

116
00:08:35,340 --> 00:08:39,260
も、その出力範囲は特定の値より小さくなることはできません。 。

117
00:08:39,260 --> 00:08:44,340
おそらく、制限値が 12 であるこの例のコンテキスト

118
00:08:44,340 --> 00:08:46,940
で、同じアイデアをもう少し正確に凍結してみましょう。

119
00:08:47,460 --> 00:08:51,080
12 から離れた距離について考えてみましょう。何らかの理由で、その距

120
00:08:51,080 --> 00:08:56,780
離を表すためにギリシャ文字のイプシロンを使用するのが一般的です。こ

121
00:08:56,780 --> 00:08:59,340
こでの意図は、この距離イプシロンが必要なだけ小さいということです。

122
00:08:59,340 --> 00:09:04,260
制限が存在するということは、常に制限点の周囲の入力範囲、つまり 0

123
00:09:04,260 --> 00:09:11,800
を中心とした距離デルタを見つけることができるため、デルタ 0 内の

124
00:09:11,800 --> 00:09:18,520
入力は距離イプシロン 12 内の出力に対応するということです。 。

125
00:09:18,520 --> 00:09:22,800
ここで重要な点は、これはどのイプシロンにも当てはまり、どんなに小さ

126
00:09:22,800 --> 00:09:25,800
くても、対応するデルタを常に見つけることができるということです。

127
00:09:25,800 --> 00:09:31,620
対照的に、この例のように制限が存在しない場合は、0 などの十分に小さいイプシロンを見つ

128
00:09:31,620 --> 00:09:37,240
けることができます。したがって、0 付近の範囲をどれほど小さくしても、

129
00:09:37,240 --> 00:09:43,780
デルタがどれほど小さくても、対応する出力範囲は常に大きすぎます。

130
00:09:43,780 --> 00:09:49,060
すべてがその出力の距離イプシロン内にある場合、出力を制限することはありません。

131
00:09:54,600 --> 00:09:57,960
ここまではかなり理論的な話だと思いませんか?

132
00:09:57,960 --> 00:10:02,320
微分を正式に定義するために限界が使用され、次に限界自体を

133
00:10:02,320 --> 00:10:04,860
厳密に定義するためにイプシロンとデルタが使用されます。

134
00:10:04,860 --> 00:10:09,100
それでは、ここで実際に制限を計算するためのトリックを使って話を終えましょう。

135
00:10:09,100 --> 00:10:13,340
たとえば、何らかの理由で、円周率 x x 除算 x 2

136
00:10:13,340 --> 00:10:16,540
乗マイナス 1 の関数 sin を研究していたとします。

137
00:10:16,540 --> 00:10:20,280
おそらくこれは、ある種の減衰振動をモデル化しているのでしょう。

138
00:10:20,280 --> 00:10:24,300
これをグラフ化するために多数の点をプロットすると、かなり連続的に見えます。

139
00:10:24,300 --> 00:10:30,000
しかし、x が 1 に等しい値には問題があります。

140
00:10:30,000 --> 00:10:37,160
これを接続すると、円周率の sin は 0 になり、分母も 0 になるため、関

141
00:10:37,160 --> 00:10:42,680
数は実際にはその入力では定義されておらず、グラフには穴が空いているはずです。

142
00:10:42,680 --> 00:10:47,180
これは x がマイナス 1 に等しい場合にも発生しますが、

143
00:10:47,180 --> 00:10:50,040
ここではこれらの穴のうちの 1 つに注目してみましょう。

144
00:10:50,040 --> 00:10:53,720
確かに、グラフはその時点で明確な値

145
00:10:53,720 --> 00:10:54,560
に近づいているように見えますね。

146
00:10:54,560 --> 00:11:02,720
そこで、単に 1 を代入することはできないのに、x が 1 に近づくにつれてこれがどのよ

147
00:11:02,720 --> 00:11:08,920
うな出力に近づくかを正確にどのように見つけることができるのかと疑問に思うかもしれません。

148
00:11:08,920 --> 00:11:12,960
これを近似する 1 つの方法は、1 など、1 に非

149
00:11:12,960 --> 00:11:16,200
常に近い数値を代入することです。00001。

150
00:11:16,200 --> 00:11:21,260
そうすることで、これがマイナス 1 付近の数値になることがわかります。57.

151
00:11:21,260 --> 00:11:24,180
しかし、それが何であるかを正確に知る方法はあるのでしょうか?

152
00:11:24,180 --> 00:11:28,620
このような式 (入力で 0 を 0 で割ったように見える) を取得し、x

153
00:11:28,620 --> 00:11:36,660
がその入力に近づくとその限界はいくらになるかを尋ねる体系的なプロセスです。

154
00:11:36,660 --> 00:11:40,880
制限の後で、デリバティブの定義を書いてみましょう。デリバティブは実際

155
00:11:40,880 --> 00:11:45,200
にここに戻ってきて、制限の評価に役立つ恩返しをすることができます。

156
00:11:45,200 --> 00:11:46,500
私の言いたいことを教えてください。

157
00:11:47,020 --> 00:11:51,620
円周率 x x の sin のグラフは次のとおりであり、

158
00:11:51,620 --> 00:11:54,020
x の 2 乗マイナス 1 のグラフは次のとおりです。

159
00:11:54,020 --> 00:11:58,740
画面上に表示する内容はたくさんありますが、x が 1

160
00:11:58,740 --> 00:12:00,220
に等しい付近で何が起こっているかに注目してください。

161
00:12:00,220 --> 00:12:06,740
ここで重要なのは、その時点では、pi に x を掛けた sin と x の 2 乗から

162
00:12:06,740 --> 00:12:09,500
1 を引いた値が両方とも 0 であり、どちらも x 軸と交差しているということです。

163
00:12:09,500 --> 00:12:15,960
1 など、1 に近い特定の値を代入するのと同じ精神です。00001、その点に

164
00:12:15,960 --> 00:12:21,760
ズームインして、dx をそこから少し遠ざけると何が起こるかを考えてみましょう。

165
00:12:21,760 --> 00:12:27,480
pi に x を掛けた値 sin はバンプダウンされ、入力への dx のナッジによ

166
00:12:27,480 --> 00:12:33,020
って引き起こされたそのナッジの値は、pi x の d sin と呼ばれるものです。

167
00:12:33,020 --> 00:12:37,800
そして、導関数に関する知識から、連鎖則を使用すると、それは pi 掛

168
00:12:37,800 --> 00:12:42,920
ける x 掛ける pi 掛ける dx のコサイン付近になるはずです。

169
00:12:42,920 --> 00:12:51,800
開始値は x = 1 だったので、その式に x = 1 を代入します。

170
00:12:51,800 --> 00:12:57,480
言い換えれば、この pi に x を掛けたサインのグラフの変化量は dx に

171
00:12:57,480 --> 00:13:03,520
ほぼ比例し、比例定数は pi に pi を掛けたコサインに等しくなります。

172
00:13:03,520 --> 00:13:08,200
そして、三角関数の知識を思い出してみると、円周率の余弦はまさに負の 1

173
00:13:08,200 --> 00:13:11,840
なので、この全体を負の円周率と dx の積として書くことができます。

174
00:13:11,880 --> 00:13:18,760
同様に、x の 2 乗マイナス 1 グラフの値は、dx の 2 乗マイナス 1 だけ変化します。

175
00:13:18,760 --> 00:13:24,040
そして導関数を考慮すると、そのナッジのサイズは 2x x dx になるはずです。

176
00:13:24,040 --> 00:13:29,440
繰り返しますが、x = 1 から開始していたので、x = 1 をその式に代入します

177
00:13:29,440 --> 00:13:34,960
。これは、出力ナッジのサイズが約 2 倍 1 倍 dx であることを意味します。

178
00:13:34,960 --> 00:13:40,280
これが意味するのは、1 からわずか dx だけ離れた x の値の場合、

179
00:13:40,320 --> 00:13:48,120
pi x を x の 2 乗から 1 を引いて割った比率 sin は、

180
00:13:48,120 --> 00:13:50,920
およそ負の pi 倍 dx 割る 2 倍 dx であるということです。

181
00:13:50,920 --> 00:13:55,800
dx は相殺されるので、残るのは 2 を超える負の pi です。

182
00:13:55,800 --> 00:13:59,880
そして重要なことは、dx の選択肢がますます小さくなる

183
00:13:59,880 --> 00:14:02,600
につれて、それらの近似値がますます正確になることです。

184
00:14:02,600 --> 00:14:08,920
この比率、つまり 2 に対する負の pi は、実際には

185
00:14:08,920 --> 00:14:09,920
、x が 1 に近づくときの正確な制限値を示します。

186
00:14:09,960 --> 00:14:15,280
これが意味するのは、元のグラフの制限高さは明らかに 2 を超

187
00:14:15,280 --> 00:14:18,600
えるまさに負の pi であるということを思い出してください。

188
00:14:18,600 --> 00:14:22,320
そこで何が起こったのかは少し微妙なので、もう一度見てい

189
00:14:22,320 --> 00:14:24,400
きたいと思いますが、今回はもう少し一般的に説明します。

190
00:14:24,400 --> 00:14:29,480
x が 1 に等しいときに両方とも 0 に等しいこれら 2 つの特定の関数

191
00:14:29,480 --> 00:14:35,320
の代わりに、ある共通の値 (x が a に等しい) において両方とも 0

192
00:14:35,320 --> 00:14:36,480
になる、x の f と x の g という 2 つの関数を考えてください。

193
00:14:36,480 --> 00:14:39,320
唯一の制約は、これらが x が a に等しいときの導関数を取得でき

194
00:14:39,320 --> 00:14:44,680
る関数でなければならないということです。つまり、その値に十分近くま

195
00:14:44,680 --> 00:14:48,120
でズームインすると、基本的にそれぞれの関数が線のように見えます。

196
00:14:48,120 --> 00:14:52,280
この高音点で f を g で割った値を計算することはできませんが、ど

197
00:14:52,280 --> 00:14:59,200
ちらも 0 に等しいため、a に実際に近い x の値、つまり x が

198
00:14:59,200 --> 00:15:01,240
a に近づくときの限界に近いこの比率について尋ねることができます。

199
00:15:01,240 --> 00:15:05,880
そして、それらの近くの入力は、a から遠ざける、ほん

200
00:15:05,880 --> 00:15:06,880
の小さな微調整、dx であると考えると役に立ちます。

201
00:15:06,960 --> 00:15:14,120
その微調整された点における f の値は、dx 倍で評価

202
00:15:14,120 --> 00:15:15,560
された、dx に対する df の近似的な導関数です。

203
00:15:15,560 --> 00:15:21,920
同様に、その微調整された点での g の値は、a と

204
00:15:21,920 --> 00:15:25,160
dx の積で評価された g の導関数に近似します。

205
00:15:25,160 --> 00:15:30,440
したがって、その高音点付近では、f と g の出力間の

206
00:15:30,440 --> 00:15:36,560
比率は、実際には、f の dx 倍の微分値を g の

207
00:15:36,560 --> 00:15:38,040
dx 倍の微分値で割ったものとほぼ同じになります。

208
00:15:38,040 --> 00:15:43,480
これらの dx は相殺されるため、a 付近の f と

209
00:15:43,480 --> 00:15:46,120
g の比は、それらの導関数間の比とほぼ同じになります。

210
00:15:46,120 --> 00:15:49,800
これらの各近似は、ナッジが小さくなるほど正確になるため

211
00:15:49,800 --> 00:15:55,800
、導関数のこの比によって、制限の正確な値が得られます。

212
00:15:55,800 --> 00:15:59,100
これは、多くの制限を計算する場合に非常に便利なトリックです。

213
00:15:59,220 --> 00:16:03,340
特定の入力を接続したときに、0 を 0 で割った値に

214
00:16:03,340 --> 00:16:08,700
等しいと思われる式に遭遇した場合は、上部と下部の式の

215
00:16:08,700 --> 00:16:14,100
導関数を取得し、同じ高音入力を接続してみてください。

216
00:16:14,100 --> 00:16:17,020
この巧妙なトリックはロピタルの法則と呼ばれます。

217
00:16:17,020 --> 00:16:21,360
興味深いことに、それは実際にヨハン・ベルヌーイによって発見

218
00:16:21,360 --> 00:16:25,380
されましたが、ロピタルはこの裕福な男であり、ベルヌーイに

219
00:16:25,380 --> 00:16:26,900
彼の数学的発見のいくつかの権利を実質的に支払ったのです。

220
00:16:26,900 --> 00:16:31,940
当時の学術界は奇妙でしたが、非常に文字通りの意味で

221
00:16:31,940 --> 00:16:35,180
、これらの小さなナッジを理解することは有益です。

222
00:16:35,180 --> 00:16:39,820
今、あなたは、与えられた関数の導関数の定義は、0 を 0 で割っ

223
00:16:39,820 --> 00:16:45,340
たような特定の分数の極限を計算することになることを思い出している

224
00:16:45,340 --> 00:16:48,620
かもしれません。そのため、ロピタルの規則が便利な方法を提供してく

225
00:16:48,620 --> 00:16:51,000
れるのではないかと思うかもしれません。新しい微分公式を発見する。

226
00:16:51,000 --> 00:16:55,100
しかし、おそらく分子の導関数が何であるかわから

227
00:16:55,100 --> 00:16:57,260
ないので、それは実際には不正行為になります。

228
00:16:57,260 --> 00:17:00,980
このシリーズで私たちがかなりの量を行ってきた微分公式の発見

229
00:17:00,980 --> 00:17:04,620
に関しては、体系的なプラグアンドチャグ手法はありません。

230
00:17:04,620 --> 00:17:06,460
でも、それは良いことなのです！

231
00:17:06,460 --> 00:17:10,620
このような問題を解決するために創造性が必要なときは、あなたが何か現実的なことをやってい

232
00:17:10,620 --> 00:17:18,300
るという良い兆候であり、将来の問題を解決するための強力なツールとなる可能性があります。

233
00:17:18,300 --> 00:17:22,100
強力なツールについて言えば、次回は積分定理とは何か、また微積分の基本

234
00:17:22,100 --> 00:17:27,220
定理についてもお話します。これは、非常にデリケートなアイデアに明確な

235
00:17:27,220 --> 00:17:33,700
意味を与えるために制限を使用できる別の例です。無限といちゃつきます。

236
00:17:33,700 --> 00:17:37,720
ご存知のとおり、このチャンネルのサポートのほとんどは Patreon を

237
00:17:37,720 --> 00:17:42,240
通じて提供されており、パトロンにとっての主な特典は、このシリーズのような

238
00:17:42,240 --> 00:17:44,500
将来のシリーズへの早期アクセスであり、次のシリーズは確率で配信されます。

239
00:17:44,500 --> 00:17:49,380
しかし、自分がコミュニティの一員であることをもっと明確に示す方法が必要な方のために

240
00:17:49,380 --> 00:17:54,700
、小さな 3blue1brown ストアもあり、画面上と説明にリンクがあります。

241
00:17:54,700 --> 00:17:59,460
ぬいぐるみパイの生き物の予備バッチを作成するかどうかはまだ議論中です。それ

242
00:17:59,460 --> 00:18:04,180
は、ストア全体に興味があると思われる視聴者の数によって異なりますが、他に

243
00:18:04,180 --> 00:18:06,740
どのような種類のものを見てみたいかをコメントで教えてください。そこには。

244
00:18:19,380 --> 00:18:21,380
見てくれてありがとう！

