1
00:00:14,320 --> 00:00:17,817
ここ数回のビデオは導関数の考え方についてのものでした 。

2
00:00:17,817 --> 00:00:20,940
積分に進む前に、制限についてお話したいと思います。

3
00:00:21,660 --> 00:00:23,192
正直に言うと、制限という考え方は

4
00:00:23,192 --> 00:00:24,820
それほど新しいものではありません。

5
00:00:25,160 --> 00:00:26,886
アプローチという言葉の意味を知っていれば

6
00:00:26,886 --> 00:00:28,700
、制限が何であるかはすでにわかっています。

7
00:00:29,040 --> 00:00:32,394
これは、ある値が別の値に近づくという直感的なアイデ 

8
00:00:32,394 --> 00:00:35,620
アに派手な表記法を割り当てる問題であると言えます。

9
00:00:36,440 --> 00:00:38,001
ただし、このトピックに完全なビデ

10
00:00:38,001 --> 00:00:39,660
オを費やす理由はいくつかあります。

11
00:00:40,280 --> 00:00:43,502
まず、これまで私がデリバティブを説明してきた方法が、ほとん 

12
00:00:43,502 --> 00:00:46,724
どのコースや教科書で通常提示されているデリバティブの正式な 

13
00:00:46,724 --> 00:00:49,840
定義とどのように一致しているかを示すことは価値があります。

14
00:00:49,840 --> 00:00:51,873
dx と df を具体的な非ゼロ 

15
00:00:51,873 --> 00:00:54,386
ナッジとして考えることは、直感を構築する 

16
00:00:54,386 --> 00:00:57,736
ための単なるトリックではなく、厳密なデリバティブの正式な

17
00:00:57,736 --> 00:01:01,086
定義によって実際に 裏付けられているということを、少しだ

18
00:01:01,086 --> 00:01:03,360
け自信を持ってお伝えしたいと思います。

19
00:01:04,260 --> 00:01:06,741
また、数学者が限界のイプシロンデルタ定義の観点

20
00:01:06,741 --> 00:01:09,222
からアプローチすると言っ ているとき、正確に何

21
00:01:09,222 --> 00:01:11,920
を意味するのかについても明らかにしたいと思います。

22
00:01:12,520 --> 00:01:14,599
次に、ロピタルのルールと呼ばれる、制限を 

23
00:01:14,599 --> 00:01:16,580
計算するための賢いトリックで終わります。

24
00:01:17,800 --> 00:01:21,700
そこで、まず最初に、導関数の正式な定義を見てみましょう。

25
00:01:22,320 --> 00:01:26,332
思い出してください、x の関数 f がある場合、特定の入力 

26
00:01:26,332 --> 00:01:28,740
(おそらく x が 2 に等しい) 

27
00:01:28,740 --> 00:01:32,218
での導関数を考えるには、その入力を少し dx から 

28
00:01:32,218 --> 00:01:35,829
遠ざけて、結果として生じる出力の変化を観察することから

29
00:01:35,829 --> 00:01:36,900
始めます。DF。

30
00:01:37,960 --> 00:01:41,441
比率 df を dx で割ったものは、グラフ

31
00:01:41,441 --> 00:01:44,922
の開始点とナッジされた点 の間の上昇対実行勾

32
00:01:44,922 --> 00:01:48,720
配と考えるのが適切であり、ほぼ微分値となります。

33
00:01:49,100 --> 00:01:51,467
実際の導関数は、dx が 0 に近づく

34
00:01:51,467 --> 00:01:53,960
につれてこの比率が近づくものになります。

35
00:01:55,000 --> 00:01:59,310
ここでの意味を詳しく説明すると、出力 df へのナッジは、 

36
00:01:59,310 --> 00:02:03,477
開始入力 + dx での f と、開始入力での f の差 

37
00:02:03,477 --> 00:02:07,500
、つまり dx によって引き起こされる出力への変化です。

38
00:02:08,680 --> 00:02:11,706
dx が 0 に近づくとこの比率が何に近づくかを知

39
00:02:11,706 --> 00:02:14,611
りたいことを表現するには、 limit を表す 

40
00:02:14,611 --> 00:02:17,880
LIM を書き、その下に dx 矢印 0 を付けます。

41
00:02:18,960 --> 00:02:22,213
このような制限式内で、dx のような小文字の 

42
00:02:22,213 --> 00:02:24,760
d を含む項はほとんど見られません。

43
00:02:25,320 --> 00:02:28,370
代わりに、何らかの理由で、デルタ x や通常は 

44
00:02:28,370 --> 00:02:31,040
h などの別の変数を使用するのが標準です。

45
00:02:31,860 --> 00:02:35,600
私がよく考えているのは、典型的な導関数式でこの小文字の d 

46
00:02:35,600 --> 00:02:39,340
を含む項には、この限界の概念、つまり dx は最終的に 0 

47
00:02:39,340 --> 00:02:43,080
になるはずであるという概念が組み込まれているということです。

48
00:02:44,660 --> 00:02:48,730
ある意味、この左側、過去数回のビデオで考えてきた df 対 

49
00:02:48,730 --> 00:02:52,800
dx の比率は、ここの右側がより詳細に説明していることの単な

50
00:02:52,800 --> 00:02:56,598
 る省略形であり、正確に何を書いているかを表しています。

51
00:02:56,598 --> 00:03:00,668
df とは、この制限プロセスを明示的に書き出すことを意味しま

52
00:03:00,668 --> 00:03:00,940
す。

53
00:03:01,620 --> 00:03:04,973
この右辺は、微積分の教科書で一般的に見 

54
00:03:04,973 --> 00:03:08,160
られるような、導関数の正式な定義です。

55
00:03:08,760 --> 00:03:11,646
ここで少し暴言を吐くことを許していただければ、この右

56
00:03:11,646 --> 00:03:14,531
辺については、無限に小さな変 化という逆説的な考え方

57
00:03:14,531 --> 00:03:17,640
を参照しているものは何もないことを強調したいと思います。

58
00:03:18,260 --> 00:03:19,960
制限のポイントはそれを避けることです。

59
00:03:20,620 --> 00:03:23,549
この値 h は、シリーズ全体で参照してきた 

60
00:03:23,549 --> 00:03:25,280
dx とまったく同じです。

61
00:03:25,900 --> 00:03:29,887
これは、0 のようなゼロ以外の有限の小さいサイズを使用して 

62
00:03:29,887 --> 00:03:32,280
f の入力をナッジします。001. 

63
00:03:33,100 --> 00:03:35,000
h の任意の小さな選択に対して何

64
00:03:35,000 --> 00:03:37,020
が起こるかを分析しているだけです。

65
00:03:37,020 --> 00:03:41,115
実際、単に dx を使用するのではなく、この正式な

66
00:03:41,115 --> 00:03:45,210
定義に新しい変数 名を導入する唯一の理由は、入力に

67
00:03:45,210 --> 00:03:48,158
対するこれらの変更が無限小とは何の 

68
00:03:48,158 --> 00:03:52,253
関係もない単なる普通の数値であることを非常に明確に

69
00:03:52,253 --> 00:03:53,400
するためです。

70
00:03:54,380 --> 00:03:58,614
この dx を限りなく小さな変化として解釈したり、dx 

71
00:03:58,614 --> 00:04:02,244
と df はあま り真剣に受け止めるべきではない

72
00:04:02,244 --> 00:04:05,420
単なる記号にすぎないと言いたい人もいます。

73
00:04:06,220 --> 00:04:07,850
しかし、このシリーズのここまでくると、私がどち

74
00:04:07,850 --> 00:04:09,480
らの意見もあまり好きではないことがわかります。

75
00:04:10,020 --> 00:04:12,778
dx を具体的で有限の小さなナッジとして解釈することは

76
00:04:12,778 --> 00:04:14,617
できるし、そうすべきだと思い ます。

77
00:04:14,617 --> 00:04:17,376
ただし、それが 0 に近づいたときに何が起こるかを尋ね

78
00:04:17,376 --> 00:04:18,500
ることを忘れない限り。

79
00:04:19,420 --> 00:04:21,973
まず、これまでのいくつかのビデオがこのことを理解して

80
00:04:21,973 --> 00:04:24,527
いただければ幸いですが、微 積分の規則が実際にどこか

81
00:04:24,527 --> 00:04:27,180
ら来たのかについて、より強い直観を築くのに役立ちます。

82
00:04:27,180 --> 00:04:28,496
しかし、これは直感を鍛えるため

83
00:04:28,496 --> 00:04:29,900
の単なるトリックではありません。

84
00:04:30,460 --> 00:04:33,624
この具体的で有限で小さなナッジの哲学に基づいてデリ

85
00:04:33,624 --> 00:04:36,788
バティブについて私が述べて きたことはすべて、私た

86
00:04:36,788 --> 00:04:40,080
ちが今見つめているこの正式な定義の翻訳にすぎません。

87
00:04:41,040 --> 00:04:44,141
簡単に言えば、制限に関する大騒ぎは、変数に対す

88
00:04:44,141 --> 00:04:47,242
る小さな変更のサ イズが 0 に近づくと何が起

89
00:04:47,242 --> 00:04:49,534
こるかを尋ねることによって、無限 

90
00:04:49,534 --> 00:04:53,580
に小さな変更について話すことを回避できるようにすることです。

91
00:04:53,580 --> 00:04:56,475
これにより、ある値が別の値に近づくことが何を意味す 

92
00:04:56,475 --> 00:04:59,260
るかを正確に理解するという目標 2 に到達します。

93
00:05:00,440 --> 00:05:03,600
たとえば、2 プラス h の 3 乗マイナス 2 

94
00:05:03,600 --> 00:05:07,140
の 3 乗をすべて h で割った関数を考えてみましょう。

95
00:05:08,480 --> 00:05:12,081
これは、x が 2 に等しいときに評価される x 

96
00:05:12,081 --> 00:05:15,538
の 導関数の定義を解明するときに出てくる式です。

97
00:05:15,538 --> 00:05:19,860
ただし、 これを入力 h を持つ古い関数と考えてみましょう。

98
00:05:20,440 --> 00:05:22,875
そのグラフは、連続して見える放物線です。

99
00:05:22,875 --> 00:05:26,284
これは、三次項を 線形項で割ったものであるため、これは理

100
00:05:26,284 --> 00:05:27,380
にかなっています。

101
00:05:28,200 --> 00:05:30,918
しかし、実際には、h が 0 に等しいときに何が起こ

102
00:05:30,918 --> 00:05:33,532
っているかを考えると、それ を代入すると、0 を 

103
00:05:33,532 --> 00:05:36,460
0 で割った値が得られますが、これは定義されていません。

104
00:05:37,420 --> 00:05:41,345
実際、このグラフにはその点に穴があり、その穴を誇張して描く 

105
00:05:41,345 --> 00:05:45,140
必要があり、多くの場合、このように空の円が描かれています。

106
00:05:45,140 --> 00:05:47,780
ただし、関数は必要に応じて 0 に近い入力に対して 

107
00:05:47,780 --> 00:05:50,320
完全に適切に定義されていることに留意してください。

108
00:05:51,260 --> 00:05:54,770
h が 0 に近づくと、対応する出力、つまりこのグ 

109
00:05:54,770 --> 00:05:58,280
ラフの高さが 12 に近づくことに同意しませんか? 

110
00:05:59,160 --> 00:06:01,580
どちらの側から来るかは関係ありません。

111
00:06:03,740 --> 00:06:06,625
h が 0 に近づくときのこの比率の限界は 

112
00:06:06,625 --> 00:06:08,200
12 に等しくなります。

113
00:06:09,360 --> 00:06:11,983
しかし、あなたが微積分を発明した数学者で、

114
00:06:11,983 --> 00:06:14,606
誰かがあなたに「アプロ ーチとは正確には何

115
00:06:14,606 --> 00:06:17,480
を意味しますか?」と尋ねたと想像してください。

116
00:06:18,440 --> 00:06:21,140
それはちょっと迷惑な質問でしょう。

117
00:06:21,400 --> 00:06:22,789
ある値が別の値に近づくことが何を

118
00:06:22,789 --> 00:06:24,180
意味するかは誰もが知っています。

119
00:06:24,940 --> 00:06:27,452
しかし、その人に完全に明確に答えるこ 

120
00:06:27,452 --> 00:06:29,700
とができる方法を考え始めましょう。

121
00:06:30,940 --> 00:06:34,686
禁止点 0 自体を除いて、0 から一定の距離内にある 

122
00:06:34,686 --> 00:06:38,432
入力の指定範囲について、対応するすべての出力、その範 

123
00:06:38,432 --> 00:06:42,040
囲より上のグラフの考えられるすべての高さを調べます。

124
00:06:42,860 --> 00:06:47,754
入力値の範囲が 0 付近にどんどん近づくにつれて、 

125
00:06:47,754 --> 00:06:52,460
出力値の範囲は 12 付近にますます近くなります。

126
00:06:52,460 --> 00:06:54,870
重要なのは、出力値の範囲のサイズは

127
00:06:54,870 --> 00:06:57,280
必要に応じて小さくできることです。

128
00:06:59,020 --> 00:07:01,560
反例として、次のような関数を考えてみましょう。

129
00:07:01,560 --> 00:07:03,880
これも 0 では定 義されていませんが、そ

130
00:07:03,880 --> 00:07:06,200
の時点でジャンプアップするようなものです。

131
00:07:06,960 --> 00:07:10,620
h = 0 に右から近づくと関数は値 2 に近づき 

132
00:07:10,620 --> 00:07:14,140
ますが、左から h に近づくと 1 に近づきます。

133
00:07:14,140 --> 00:07:17,566
この関数が h が 0 に近づくにつれて近づく

134
00:07:17,566 --> 00:07:20,993
明確で曖昧さのない値は 1 つも存在しないため

135
00:07:20,993 --> 00:07:24,420
、その時点では制限は単純に定義されていません。

136
00:07:25,160 --> 00:07:29,868
これを考える 1 つの方法は、0 付近の入力範囲を見て、 

137
00:07:29,868 --> 00:07:34,576
対応する出力範囲を考慮すると、その入力範囲を縮小しても、 

138
00:07:34,576 --> 00:07:38,960
対応する出力は特定の値に絞り込まれないということです。

139
00:07:39,780 --> 00:07:43,646
代わりに、これらの出力は、入力範囲を想像できるほど小さく 

140
00:07:43,646 --> 00:07:47,380
しても、1 より小さくなることがない範囲にまたがります。

141
00:07:48,520 --> 00:07:51,810
限界点付近で入力範囲を縮小し、それによって出力

142
00:07:51,810 --> 00:07:55,100
範囲がどれだけ 縮小されるかが制限されているか

143
00:07:55,100 --> 00:07:57,388
どうかを確認するというこの観点 

144
00:07:57,388 --> 00:08:01,680
は、限界のイプシロンデルタ定義と呼ばれるものにつながります。

145
00:08:01,680 --> 00:08:04,030
これは微積分の入門としては不必要

146
00:08:04,030 --> 00:08:06,380
に負担が大きいと言えるでしょう。

147
00:08:06,520 --> 00:08:08,326
アプローチという言葉の意味を知っていれば、制限

148
00:08:08,326 --> 00:08:10,054
が何を意味するかすでに 知っているでしょう。

149
00:08:10,054 --> 00:08:11,940
ここでは概念レベルで新しいことは何もありません。

150
00:08:12,320 --> 00:08:15,718
しかし、これは実際の分析の分野を垣間見る興味深いもので

151
00:08:15,718 --> 00:08:19,116
あり、数学者が微積分の直観的 なアイデアをどのようにし

152
00:08:19,116 --> 00:08:22,640
てより密閉して厳密なものにするのかを知ることができます。

153
00:08:23,700 --> 00:08:25,340
主なアイデアはすでにここで見ました。

154
00:08:25,660 --> 00:08:28,836
制限が存在する場合は、出力範囲を好きなだけ小さ

155
00:08:28,836 --> 00:08:32,012
くできますが、制限 が存在しない場合は、制限入

156
00:08:32,012 --> 00:08:34,636
力の周囲で入力範囲をどれだけ縮小して 

157
00:08:34,636 --> 00:08:38,780
も、その出力範囲は特定の値より小さくなることはできません。。

158
00:08:39,679 --> 00:08:42,665
おそらく、制限値が 12 であるこの例のコンテキスト 

159
00:08:42,665 --> 00:08:45,540
で、同じアイデアをもう少し正確に凍結してみましょう。

160
00:08:45,540 --> 00:08:48,358
12 から離れた距離について考えてみましょう。

161
00:08:48,358 --> 00:08:51,422
何らかの理由で、その距 離を表すためにギリシャ文字

162
00:08:51,422 --> 00:08:53,750
のイプシロンを使用するのが一般的です。

163
00:08:53,750 --> 00:08:56,814
こ こでの意図は、この距離イプシロンが必要なだけ小

164
00:08:56,814 --> 00:08:58,040
さいということです。

165
00:08:58,820 --> 00:09:03,380
制限が存在するということは、常に制限点の周囲の入力

166
00:09:03,380 --> 00:09:07,940
範囲、つまり 0 を中心とした距離デルタを見つける

167
00:09:07,940 --> 00:09:13,229
ことができるため、デルタ 0 内の 入力は距離イプシロン 

168
00:09:13,229 --> 00:09:17,060
12 内の出力に対応するということです。。

169
00:09:18,420 --> 00:09:20,553
ここで重要な点は、これはどのイプシロンにも当

170
00:09:20,553 --> 00:09:22,686
てはまり、どんなに小さ くても、対応するデル

171
00:09:22,686 --> 00:09:24,820
タを常に見つけることができるということです。

172
00:09:25,580 --> 00:09:29,637
対照的に、この例のように制限が存在しない場合は、0 

173
00:09:29,637 --> 00:09:34,007
などの十分に小さいイプシロンを見つ けることができます。

174
00:09:34,007 --> 00:09:38,065
したがって、0 付近の範囲をどれほど小さくしても、 

175
00:09:38,065 --> 00:09:42,435
デルタがどれほど小さくても、対応する出力範囲は常に大きす

176
00:09:42,435 --> 00:09:43,060
ぎます。

177
00:09:43,700 --> 00:09:46,106
すべてがその出力の距離イプシロン内にあ

178
00:09:46,106 --> 00:09:48,640
る場合、出力を制限することはありません。

179
00:09:54,100 --> 00:09:56,960
ここまではかなり理論的な話だと思いませんか? 

180
00:09:56,960 --> 00:10:00,667
微分を正式に定義するために限界が使用され、次に限界自体を 

181
00:10:00,667 --> 00:10:04,120
厳密に定義するためにイプシロンとデルタが使用されます。

182
00:10:04,900 --> 00:10:06,579
それでは、ここで実際に制限を計算するた

183
00:10:06,579 --> 00:10:08,260
めのトリックを使って話を終えましょう。

184
00:10:09,100 --> 00:10:12,420
たとえば、何らかの理由で、円周率 x x 除算 x 2 

185
00:10:12,420 --> 00:10:15,740
乗マイナス 1 の関数 sin を研究していたとします。

186
00:10:16,220 --> 00:10:17,681
おそらくこれは、ある種の減衰振

187
00:10:17,681 --> 00:10:19,240
動をモデル化しているのでしょう。

188
00:10:20,240 --> 00:10:21,806
これをグラフ化するために多数の点をプ

189
00:10:21,806 --> 00:10:23,460
ロットすると、かなり連続的に見えます。

190
00:10:27,280 --> 00:10:29,480
しかし、x が 1 に等しい値には問題があります。

191
00:10:30,000 --> 00:10:33,277
これを接続すると、円周率の sin は 0 

192
00:10:33,277 --> 00:10:35,958
になり、分母も 0 になるため、関 

193
00:10:35,958 --> 00:10:39,832
数は実際にはその入力では定義されておらず、グラフには

194
00:10:39,832 --> 00:10:41,620
穴が空いているはずです。

195
00:10:42,200 --> 00:10:45,686
これは x がマイナス 1 に等しい場合にも発生しますが、 

196
00:10:45,686 --> 00:10:48,940
ここではこれらの穴のうちの 1 つに注目してみましょう。

197
00:10:50,020 --> 00:10:52,465
確かに、グラフはその時点で明確な値 

198
00:10:52,465 --> 00:10:54,640
に近づいているように見えますね。

199
00:10:57,280 --> 00:11:00,778
そこで、単に 1 を代入することはできないのに、x が 

200
00:11:00,778 --> 00:11:02,902
1 に近づくにつれてこれがどのよ 

201
00:11:02,902 --> 00:11:06,525
うな出力に近づくかを正確にどのように見つけることができるの

202
00:11:06,525 --> 00:11:08,400
かと疑問に思うかもしれません。

203
00:11:08,840 --> 00:11:11,964
これを近似する 1 つの方法は、1 など、1 

204
00:11:11,964 --> 00:11:15,360
に非 常に近い数値を代入することです。00001。

205
00:11:16,120 --> 00:11:17,947
そうすることで、これがマイナス 1 

206
00:11:17,947 --> 00:11:20,080
付近の数値になることがわかります。57. 

207
00:11:21,160 --> 00:11:22,001
しかし、それが何であるかを正確

208
00:11:22,001 --> 00:11:22,900
に知る方法はあるのでしょうか? 

209
00:11:22,900 --> 00:11:25,478
このような式 (入力で 0 を 0 

210
00:11:25,478 --> 00:11:28,200
で割ったように見える) を取得し、x 

211
00:11:28,200 --> 00:11:31,637
がその入力に近づくとその限界はいくらになるかを尋

212
00:11:31,637 --> 00:11:33,500
ねる体系的なプロセスです。

213
00:11:36,440 --> 00:11:39,476
制限の後で、デリバティブの定義を書いてみましょう。

214
00:11:39,476 --> 00:11:42,149
デリバティブは実際 にここに戻ってきて、制限

215
00:11:42,149 --> 00:11:44,700
の評価に役立つ恩返しをすることができます。

216
00:11:45,200 --> 00:11:46,020
私の言いたいことを教えてください。

217
00:11:47,020 --> 00:11:50,582
円周率 x x の sin のグラフは次のとおりであり、 

218
00:11:50,582 --> 00:11:53,900
x の 2 乗マイナス 1 のグラフは次のとおりです。

219
00:11:53,900 --> 00:11:56,503
画面上に表示する内容はたくさんありますが、x が 

220
00:11:56,503 --> 00:11:59,420
1 に等しい付近で何が起こっているかに注目してください。

221
00:12:00,180 --> 00:12:02,778
ここで重要なのは、その時点では、pi に x を掛けた 

222
00:12:02,778 --> 00:12:05,469
sin と x の 2 乗から 1 を引いた値が両方とも 

223
00:12:05,469 --> 00:12:08,160
0 であり、どちらも x 軸と交差しているということです。

224
00:12:09,000 --> 00:12:13,178
1 など、1 に近い特定の値を代入するのと同じ精神です。

225
00:12:13,178 --> 00:12:16,461
00001、その点に ズームインして、dx 

226
00:12:16,461 --> 00:12:20,640
をそこから少し遠ざけると何が起こるかを考えてみましょう。

227
00:12:21,300 --> 00:12:23,524
pi に x を掛けた値 sin 

228
00:12:23,524 --> 00:12:26,795
はバンプダウンされ、入力への dx のナッジによ 

229
00:12:26,795 --> 00:12:30,328
って引き起こされたそのナッジの値は、pi x の d 

230
00:12:30,328 --> 00:12:32,160
sin と呼ばれるものです。

231
00:12:33,040 --> 00:12:36,709
そして、導関数に関する知識から、連鎖則を使用すると、それは 

232
00:12:36,709 --> 00:12:39,645
pi 掛 ける x 掛ける pi 掛ける dx 

233
00:12:39,645 --> 00:12:41,480
のコサイン付近になるはずです。

234
00:12:42,700 --> 00:12:45,842
開始値は x = 1 だったので、その式に 

235
00:12:45,842 --> 00:12:47,700
x = 1 を代入します。

236
00:12:51,260 --> 00:12:53,742
言い換えれば、この pi に x 

237
00:12:53,742 --> 00:12:56,956
を掛けたサインのグラフの変化量は dx に 

238
00:12:56,956 --> 00:12:59,877
ほぼ比例し、比例定数は pi に pi 

239
00:12:59,877 --> 00:13:02,360
を掛けたコサインに等しくなります。

240
00:13:03,360 --> 00:13:05,929
そして、三角関数の知識を思い出してみると、円周

241
00:13:05,929 --> 00:13:09,169
率の余弦はまさに負の 1 なので、この全体を負の円周率と 

242
00:13:09,169 --> 00:13:11,180
dx の積として書くことができます。

243
00:13:12,220 --> 00:13:15,626
同様に、x の 2 乗マイナス 1 グラフの値は、dx 

244
00:13:15,626 --> 00:13:18,060
の 2 乗マイナス 1 だけ変化します。

245
00:13:18,520 --> 00:13:21,531
そして導関数を考慮すると、そのナッジのサイズは 

246
00:13:21,531 --> 00:13:23,540
2x x dx になるはずです。

247
00:13:24,480 --> 00:13:27,377
繰り返しますが、x = 1 から開始していたので、x 

248
00:13:27,377 --> 00:13:29,094
= 1 をその式に代入します 。

249
00:13:29,094 --> 00:13:31,992
これは、出力ナッジのサイズが約 2 倍 1 倍 dx 

250
00:13:31,992 --> 00:13:33,280
であることを意味します。

251
00:13:34,920 --> 00:13:38,644
これが意味するのは、1 からわずか dx だけ離れた 

252
00:13:38,644 --> 00:13:42,231
x の値の場合、 pi x を x の 2 乗から 

253
00:13:42,231 --> 00:13:45,679
1 を引いて割った比率 sin は、 およそ負の 

254
00:13:45,679 --> 00:13:49,680
pi 倍 dx 割る 2 倍 dx であるということです。

255
00:13:50,900 --> 00:13:52,940
dx は相殺されるので、残るのは 

256
00:13:52,940 --> 00:13:54,740
2 を超える負の pi です。

257
00:13:55,720 --> 00:13:58,591
そして重要なことは、dx の選択肢がますます小さくなる 

258
00:13:58,591 --> 00:14:01,360
につれて、それらの近似値がますます正確になることです。

259
00:14:02,310 --> 00:14:05,778
この比率、つまり 2 に対する負の pi は、実際には 

260
00:14:05,778 --> 00:14:09,000
、x が 1 に近づくときの正確な制限値を示します。

261
00:14:09,540 --> 00:14:12,634
これが意味するのは、元のグラフの制限高さは明らかに 

262
00:14:12,634 --> 00:14:14,538
2 を超 えるまさに負の pi 

263
00:14:14,538 --> 00:14:16,800
であるということを思い出してください。

264
00:14:18,220 --> 00:14:20,826
そこで何が起こったのかは少し微妙なので、もう一度見てい 

265
00:14:20,826 --> 00:14:23,340
きたいと思いますが、今回はもう少し一般的に説明します。

266
00:14:24,120 --> 00:14:26,995
x が 1 に等しいときに両方とも 0 に等しいこれら 

267
00:14:26,995 --> 00:14:29,870
2 つの特定の関数 の代わりに、ある共通の値 (x が 

268
00:14:29,870 --> 00:14:32,642
a に等しい) において両方とも 0 になる、x の 

269
00:14:32,642 --> 00:14:35,620
f と x の g という 2 つの関数を考えてください。

270
00:14:36,280 --> 00:14:38,105
唯一の制約は、これらが x が a 

271
00:14:38,105 --> 00:14:39,727
に等しいときの導関数を取得でき 

272
00:14:39,727 --> 00:14:41,755
る関数でなければならないということです。

273
00:14:41,755 --> 00:14:44,290
つまり、その値に十分近くま でズームインすると、基

274
00:14:44,290 --> 00:14:46,420
本的にそれぞれの関数が線のように見えます。

275
00:14:47,800 --> 00:14:50,761
この高音点で f を g で割った値を計算すること

276
00:14:50,761 --> 00:14:53,722
はできませんが、ど ちらも 0 に等しいため、a 

277
00:14:53,722 --> 00:14:56,328
に実際に近い x の値、つまり x が a 

278
00:14:56,328 --> 00:14:59,289
に近づくときの限界に近いこの比率について尋ねること

279
00:14:59,289 --> 00:15:00,000
ができます。

280
00:15:00,000 --> 00:15:03,158
そして、それらの近くの入力は、a から遠ざける、ほん 

281
00:15:03,158 --> 00:15:06,200
の小さな微調整、dx であると考えると役に立ちます。

282
00:15:06,760 --> 00:15:11,022
その微調整された点における f の値は、dx 倍で評価 

283
00:15:11,022 --> 00:15:14,980
された、dx に対する df の近似的な導関数です。

284
00:15:15,980 --> 00:15:19,697
同様に、その微調整された点での g の値は、a 

285
00:15:19,697 --> 00:15:23,880
と dx の積で評価された g の導関数に近似します。

286
00:15:25,060 --> 00:15:29,260
したがって、その高音点付近では、f と g の出力間の 

287
00:15:29,260 --> 00:15:33,010
比率は、実際には、f の dx 倍の微分値を g 

288
00:15:33,010 --> 00:15:37,060
の dx 倍の微分値で割ったものとほぼ同じになります。

289
00:15:37,880 --> 00:15:41,210
これらの dx は相殺されるため、a 付近の f と 

290
00:15:41,210 --> 00:15:44,540
g の比は、それらの導関数間の比とほぼ同じになります。

291
00:15:45,860 --> 00:15:50,360
これらの各近似は、ナッジが小さくなるほど正確になるため 

292
00:15:50,360 --> 00:15:54,700
、導関数のこの比によって、制限の正確な値が得られます。

293
00:15:55,540 --> 00:15:58,500
これは、多くの制限を計算する場合に非常に便利なトリックです。

294
00:15:58,920 --> 00:16:02,970
特定の入力を接続したときに、0 を 0 で割った値に 

295
00:16:02,970 --> 00:16:07,020
等しいと思われる式に遭遇した場合は、上部と下部の式の 

296
00:16:07,020 --> 00:16:10,920
導関数を取得し、同じ高音入力を接続してみてください。

297
00:16:13,980 --> 00:16:16,300
この巧妙なトリックはロピタルの法則と呼ばれます。

298
00:16:17,240 --> 00:16:20,219
興味深いことに、それは実際にヨハン・ベルヌーイによって発見 

299
00:16:20,219 --> 00:16:23,099
されましたが、ロピタルはこの裕福な男であり、ベルヌーイに 

300
00:16:23,099 --> 00:16:25,880
彼の数学的発見のいくつかの権利を実質的に支払ったのです。

301
00:16:26,740 --> 00:16:29,714
当時の学術界は奇妙でしたが、非常に文字通りの意味で 

302
00:16:29,714 --> 00:16:32,460
、これらの小さなナッジを理解することは有益です。

303
00:16:34,960 --> 00:16:37,788
今、あなたは、与えられた関数の導関数の定義は、0 

304
00:16:37,788 --> 00:16:40,729
を 0 で割っ たような特定の分数の極限を計算するこ

305
00:16:40,729 --> 00:16:43,331
とになることを思い出している かもしれません。

306
00:16:43,331 --> 00:16:46,159
そのため、ロピタルの規則が便利な方法を提供してく 

307
00:16:46,159 --> 00:16:48,309
れるのではないかと思うかもしれません。

308
00:16:48,309 --> 00:16:49,780
新しい微分公式を発見する。

309
00:16:50,680 --> 00:16:53,622
しかし、おそらく分子の導関数が何であるかわから 

310
00:16:53,622 --> 00:16:56,320
ないので、それは実際には不正行為になります。

311
00:16:57,020 --> 00:17:00,961
このシリーズで私たちがかなりの量を行ってきた微分公式の発見 

312
00:17:00,961 --> 00:17:04,640
に関しては、体系的なプラグアンドチャグ手法はありません。

313
00:17:05,119 --> 00:17:05,960
でも、それは良いことなのです！

314
00:17:06,400 --> 00:17:09,200
このような問題を解決するために創造性が必要なときは、あなた

315
00:17:09,200 --> 00:17:12,000
が何か現実的なことをやってい るという良い兆候であり、将来

316
00:17:12,000 --> 00:17:14,800
の問題を解決するための強力なツールとなる可能性があります。

317
00:17:14,800 --> 00:17:19,125
強力なツールについて言えば、次回は積分定理とは何か、

318
00:17:19,125 --> 00:17:22,784
また微積分の基本 定理についてもお話します。

319
00:17:22,784 --> 00:17:26,444
これは、非常にデリケートなアイデアに明確な 

320
00:17:26,444 --> 00:17:30,270
意味を与えるために制限を使用できる別の例です。

321
00:17:30,270 --> 00:17:32,100
無限といちゃつきます。

322
00:17:33,580 --> 00:17:35,941
ご存知のとおり、このチャンネルのサポートのほとんどは 

323
00:17:35,941 --> 00:17:38,302
Patreon を 通じて提供されており、パトロンにと

324
00:17:38,302 --> 00:17:40,051
っての主な特典は、このシリーズのような 

325
00:17:40,051 --> 00:17:42,412
将来のシリーズへの早期アクセスであり、次のシリーズは確

326
00:17:42,412 --> 00:17:43,200
率で配信されます。

327
00:17:44,260 --> 00:17:47,453
しかし、自分がコミュニティの一員であることをもっと明確

328
00:17:47,453 --> 00:17:49,819
に示す方法が必要な方のために 、小さな 

329
00:17:49,819 --> 00:17:53,013
3blue1brown ストアもあり、画面上と説明にリ

330
00:17:53,013 --> 00:17:53,960
ンクがあります。

331
00:17:54,680 --> 00:17:57,628
ぬいぐるみパイの生き物の予備バッチを作成するかどうかは

332
00:17:57,628 --> 00:18:00,576
まだ議論中です。それ は、ストア全体に興味があると思わ

333
00:18:00,576 --> 00:18:02,869
れる視聴者の数によって異なりますが、他に 

334
00:18:02,869 --> 00:18:05,817
どのような種類のものを見てみたいかをコメントで教えてく

335
00:18:05,817 --> 00:18:06,800
ださい。そこには。

336
00:18:18,680 --> 00:18:26,240
見てくれてありがとう！

