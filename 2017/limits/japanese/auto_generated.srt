1
00:00:14,545 --> 00:00:18,179
ここ数回のビデオは導関数の考え方についてのものでした

2
00:00:18,179 --> 00:00:21,680
。積分に進む前に、制限についてお話したいと思います。

3
00:00:21,680 --> 00:00:23,444
正直に言うと、制限という考え方は

4
00:00:23,444 --> 00:00:25,320
それほど新しいものではありません。

5
00:00:25,320 --> 00:00:27,222
アプローチという言葉の意味を知っていれば

6
00:00:27,222 --> 00:00:29,220
、制限が何であるかはすでにわかっています。

7
00:00:29,220 --> 00:00:32,992
これは、ある値が別の値に近づくという直感的なアイデ

8
00:00:32,992 --> 00:00:36,620
アに派手な表記法を割り当てる問題であると言えます。

9
00:00:36,620 --> 00:00:38,404
ただし、このトピックに完全なビデ

10
00:00:38,404 --> 00:00:40,300
オを費やす理由はいくつかあります。

11
00:00:40,300 --> 00:00:43,697
まず、これまで私がデリバティブを説明してきた方法が、ほとん

12
00:00:43,697 --> 00:00:47,095
どのコースや教科書で通常提示されているデリバティブの正式な

13
00:00:47,095 --> 00:00:50,380
定義とどのように一致しているかを示すことは価値があります。

14
00:00:50,380 --> 00:00:52,450
dx と df を具体的な非ゼロ

15
00:00:52,450 --> 00:00:55,007
ナッジとして考えることは、直感を構築する

16
00:00:55,007 --> 00:00:58,416
ための単なるトリックではなく、厳密なデリバティブの正式な

17
00:00:58,416 --> 00:01:01,826
定義によって実際に 裏付けられているということを、少しだ

18
00:01:01,826 --> 00:01:04,140
け自信を持ってお伝えしたいと思います。

19
00:01:04,140 --> 00:01:06,880
また、数学者が限界のイプシロンデルタ定義の観点

20
00:01:06,880 --> 00:01:09,621
からアプローチすると言っ ているとき、正確に何

21
00:01:09,621 --> 00:01:12,600
を意味するのかについても明らかにしたいと思います。

22
00:01:12,600 --> 00:01:15,089
次に、ロピタルのルールと呼ばれる、制限を

23
00:01:15,089 --> 00:01:17,460
計算するための賢いトリックで終わります。

24
00:01:17,460 --> 00:01:22,540
そこで、まず最初に、導関数の正式な定義を見てみましょう。

25
00:01:22,540 --> 00:01:26,784
思い出してください、x の関数 f がある場合、特定の入力

26
00:01:26,784 --> 00:01:29,330
(おそらく x が 2 に等しい)

27
00:01:29,330 --> 00:01:33,008
での導関数を考えるには、その入力を少し dx から

28
00:01:33,008 --> 00:01:36,828
遠ざけて、結果として生じる出力の変化を観察することから

29
00:01:36,828 --> 00:01:37,960
始めます。DF。

30
00:01:37,960 --> 00:01:41,641
比率 df を dx で割ったものは、グラフ

31
00:01:41,641 --> 00:01:45,323
の開始点とナッジされた点 の間の上昇対実行勾

32
00:01:45,323 --> 00:01:49,340
配と考えるのが適切であり、ほぼ微分値となります。

33
00:01:49,340 --> 00:01:52,165
実際の導関数は、dx が 0 に近づく

34
00:01:52,165 --> 00:01:55,140
につれてこの比率が近づくものになります。

35
00:01:55,140 --> 00:01:59,808
ここでの意味を詳しく説明すると、出力 df へのナッジは、

36
00:01:59,808 --> 00:02:04,322
開始入力 + dx での f と、開始入力での f の差

37
00:02:04,322 --> 00:02:08,680
、つまり dx によって引き起こされる出力への変化です。

38
00:02:08,680 --> 00:02:11,844
dx が 0 に近づくとこの比率が何に近づくかを知

39
00:02:11,844 --> 00:02:14,882
りたいことを表現するには、 limit を表す

40
00:02:14,882 --> 00:02:18,300
LIM を書き、その下に dx 矢印 0 を付けます。

41
00:02:18,300 --> 00:02:22,092
このような制限式内で、dx のような小文字の

42
00:02:22,092 --> 00:02:25,060
d を含む項はほとんど見られません。

43
00:02:25,060 --> 00:02:28,665
代わりに、何らかの理由で、デルタ x や通常は

44
00:02:28,665 --> 00:02:31,820
h などの別の変数を使用するのが標準です。

45
00:02:31,820 --> 00:02:36,220
私がよく考えているのは、典型的な導関数式でこの小文字の d

46
00:02:36,220 --> 00:02:40,620
を含む項には、この限界の概念、つまり dx は最終的に 0

47
00:02:40,620 --> 00:02:45,020
になるはずであるという概念が組み込まれているということです。

48
00:02:45,020 --> 00:02:49,215
ある意味、この左側、過去数回のビデオで考えてきた df 対

49
00:02:49,215 --> 00:02:53,410
dx の比率は、ここの右側がより詳細に説明していることの単な

50
00:02:53,410 --> 00:02:57,605
る省略形であり、正確に何を書いているかを表しています。df

51
00:02:57,605 --> 00:03:01,800
とは、この制限プロセスを明示的に書き出すことを意味します。

52
00:03:01,800 --> 00:03:05,492
この右辺は、微積分の教科書で一般的に見

53
00:03:05,492 --> 00:03:09,000
られるような、導関数の正式な定義です。

54
00:03:09,000 --> 00:03:12,016
ここで少し暴言を吐くことを許していただければ、この右

55
00:03:12,016 --> 00:03:15,032
辺については、無限に小さな変 化という逆説的な考え方

56
00:03:15,032 --> 00:03:18,280
を参照しているものは何もないことを強調したいと思います。

57
00:03:18,280 --> 00:03:20,680
制限のポイントはそれを避けることです。

58
00:03:20,680 --> 00:03:24,011
この値 h は、シリーズ全体で参照してきた

59
00:03:24,011 --> 00:03:25,980
dx とまったく同じです。

60
00:03:25,980 --> 00:03:30,567
これは、0 のようなゼロ以外の有限の小さいサイズを使用して

61
00:03:30,567 --> 00:03:33,320
f の入力をナッジします。001.

62
00:03:33,320 --> 00:03:35,812
h の任意の小さな選択に対して何

63
00:03:35,812 --> 00:03:38,460
が起こるかを分析しているだけです。

64
00:03:38,460 --> 00:03:42,675
実際、単に dx を使用するのではなく、この正式な

65
00:03:42,675 --> 00:03:46,890
定義に新しい変数 名を導入する唯一の理由は、入力に

66
00:03:46,890 --> 00:03:49,924
対するこれらの変更が無限小とは何の

67
00:03:49,924 --> 00:03:54,139
関係もない単なる普通の数値であることを非常に明確に

68
00:03:54,139 --> 00:03:55,320
するためです。

69
00:03:55,320 --> 00:03:59,523
この dx を限りなく小さな変化として解釈したり、dx

70
00:03:59,523 --> 00:04:03,127
と df はあま り真剣に受け止めるべきではない

71
00:04:03,127 --> 00:04:06,280
単なる記号にすぎないと言いたい人もいます。

72
00:04:06,280 --> 00:04:08,110
しかし、このシリーズのここまでくると、私がどち

73
00:04:08,110 --> 00:04:09,940
らの意見もあまり好きではないことがわかります。

74
00:04:09,940 --> 00:04:13,036
dx を具体的で有限の小さなナッジとして解釈することは

75
00:04:13,036 --> 00:04:16,019
できるし、そうすべきだと思い ます。ただし、それが

76
00:04:16,019 --> 00:04:19,460
0 に近づいたときに何が起こるかを尋ねることを忘れない限り。

77
00:04:19,460 --> 00:04:22,198
まず、これまでのいくつかのビデオがこのことを理解して

78
00:04:22,198 --> 00:04:24,936
いただければ幸いですが、微 積分の規則が実際にどこか

79
00:04:24,936 --> 00:04:27,780
ら来たのかについて、より強い直観を築くのに役立ちます。

80
00:04:27,780 --> 00:04:29,183
しかし、これは直感を鍛えるため

81
00:04:29,183 --> 00:04:30,680
の単なるトリックではありません。

82
00:04:30,680 --> 00:04:34,206
この具体的で有限で小さなナッジの哲学に基づいてデリ

83
00:04:34,206 --> 00:04:37,732
バティブについて私が述べて きたことはすべて、私た

84
00:04:37,732 --> 00:04:41,400
ちが今見つめているこの正式な定義の翻訳にすぎません。

85
00:04:41,400 --> 00:04:44,441
簡単に言えば、制限に関する大騒ぎは、変数に対す

86
00:04:44,441 --> 00:04:47,483
る小さな変更のサ イズが 0 に近づくと何が起

87
00:04:47,483 --> 00:04:49,732
こるかを尋ねることによって、無限

88
00:04:49,732 --> 00:04:53,700
に小さな変更について話すことを回避できるようにすることです。

89
00:04:53,700 --> 00:04:57,125
これにより、ある値が別の値に近づくことが何を意味す

90
00:04:57,125 --> 00:05:00,420
るかを正確に理解するという目標 2 に到達します。

91
00:05:00,420 --> 00:05:04,240
たとえば、2 プラス h の 3 乗マイナス 2

92
00:05:04,240 --> 00:05:08,520
の 3 乗をすべて h で割った関数を考えてみましょう。

93
00:05:08,520 --> 00:05:12,380
これは、x が 2 に等しいときに評価される x

94
00:05:12,380 --> 00:05:16,859
の 導関数の定義を解明するときに出てくる式です。ただし、

95
00:05:16,859 --> 00:05:20,720
これを入力 h を持つ古い関数と考えてみましょう。

96
00:05:20,720 --> 00:05:24,525
そのグラフは、連続して見える放物線です。これは、三次項を

97
00:05:24,525 --> 00:05:28,200
線形項で割ったものであるため、これは理にかなっています。

98
00:05:28,200 --> 00:05:31,241
しかし、実際には、h が 0 に等しいときに何が起こ

99
00:05:31,241 --> 00:05:34,165
っているかを考えると、それ を代入すると、0 を

100
00:05:34,165 --> 00:05:37,440
0 で割った値が得られますが、これは定義されていません。

101
00:05:37,440 --> 00:05:41,609
実際、このグラフにはその点に穴があり、その穴を誇張して描く

102
00:05:41,609 --> 00:05:45,640
必要があり、多くの場合、このように空の円が描かれています。

103
00:05:45,640 --> 00:05:48,301
ただし、関数は必要に応じて 0 に近い入力に対して

104
00:05:48,301 --> 00:05:50,860
完全に適切に定義されていることに留意してください。

105
00:05:50,860 --> 00:05:55,060
h が 0 に近づくと、対応する出力、つまりこのグ

106
00:05:55,060 --> 00:05:59,260
ラフの高さが 12 に近づくことに同意しませんか?

107
00:05:59,260 --> 00:06:03,980
どちらの側から来るかは関係ありません。

108
00:06:03,980 --> 00:06:07,487
h が 0 に近づくときのこの比率の限界は

109
00:06:07,487 --> 00:06:09,400
12 に等しくなります。

110
00:06:09,400 --> 00:06:12,327
しかし、あなたが微積分を発明した数学者で、

111
00:06:12,327 --> 00:06:15,254
誰かがあなたに「アプロ ーチとは正確には何

112
00:06:15,254 --> 00:06:18,460
を意味しますか?」と尋ねたと想像してください。

113
00:06:18,460 --> 00:06:21,420
それはちょっと迷惑な質問でしょう。

114
00:06:21,420 --> 00:06:22,920
ある値が別の値に近づくことが何を

115
00:06:22,920 --> 00:06:24,420
意味するかは誰もが知っています。

116
00:06:24,420 --> 00:06:27,882
しかし、その人に完全に明確に答えるこ

117
00:06:27,882 --> 00:06:30,980
とができる方法を考え始めましょう。

118
00:06:30,980 --> 00:06:35,070
禁止点 0 自体を除いて、0 から一定の距離内にある

119
00:06:35,070 --> 00:06:39,161
入力の指定範囲について、対応するすべての出力、その範

120
00:06:39,161 --> 00:06:43,100
囲より上のグラフの考えられるすべての高さを調べます。

121
00:06:43,100 --> 00:06:47,647
入力値の範囲が 0 付近にどんどん近づくにつれて、

122
00:06:47,647 --> 00:06:52,020
出力値の範囲は 12 付近にますます近くなります。

123
00:06:52,020 --> 00:06:55,580
重要なのは、出力値の範囲のサイズは

124
00:06:55,580 --> 00:06:59,140
必要に応じて小さくできることです。

125
00:06:59,140 --> 00:07:02,479
反例として、次のような関数を考えてみましょう。これも

126
00:07:02,479 --> 00:07:05,077
0 では定 義されていませんが、その時点で

127
00:07:05,077 --> 00:07:07,180
ジャンプアップするようなものです。

128
00:07:07,180 --> 00:07:11,503
h = 0 に右から近づくと関数は値 2 に近づき

129
00:07:11,503 --> 00:07:15,660
ますが、左から h に近づくと 1 に近づきます。

130
00:07:15,660 --> 00:07:18,846
この関数が h が 0 に近づくにつれて近づく

131
00:07:18,846 --> 00:07:22,033
明確で曖昧さのない値は 1 つも存在しないため

132
00:07:22,033 --> 00:07:25,220
、その時点では制限は単純に定義されていません。

133
00:07:25,220 --> 00:07:30,105
これを考える 1 つの方法は、0 付近の入力範囲を見て、

134
00:07:30,105 --> 00:07:34,991
対応する出力範囲を考慮すると、その入力範囲を縮小しても、

135
00:07:34,991 --> 00:07:39,540
対応する出力は特定の値に絞り込まれないということです。

136
00:07:39,540 --> 00:07:44,139
代わりに、これらの出力は、入力範囲を想像できるほど小さく

137
00:07:44,139 --> 00:07:48,580
しても、1 より小さくなることがない範囲にまたがります。

138
00:07:48,580 --> 00:07:51,930
限界点付近で入力範囲を縮小し、それによって出力

139
00:07:51,930 --> 00:07:55,280
範囲がどれだけ 縮小されるかが制限されているか

140
00:07:55,280 --> 00:07:57,610
どうかを確認するというこの観点

141
00:07:57,610 --> 00:08:01,980
は、限界のイプシロンデルタ定義と呼ばれるものにつながります。

142
00:08:01,980 --> 00:08:04,280
これは微積分の入門としては不必要

143
00:08:04,280 --> 00:08:06,580
に負担が大きいと言えるでしょう。

144
00:08:06,580 --> 00:08:08,546
アプローチという言葉の意味を知っていれば、制限

145
00:08:08,546 --> 00:08:10,513
が何を意味するかすでに 知っているでしょう。こ

146
00:08:10,513 --> 00:08:12,480
こでは概念レベルで新しいことは何もありません。

147
00:08:12,480 --> 00:08:15,897
しかし、これは実際の分析の分野を垣間見る興味深いもので

148
00:08:15,897 --> 00:08:19,315
あり、数学者が微積分の直観的 なアイデアをどのようにし

149
00:08:19,315 --> 00:08:22,860
てより密閉して厳密なものにするのかを知ることができます。

150
00:08:22,860 --> 00:08:25,900
主なアイデアはすでにここで見ました。

151
00:08:25,900 --> 00:08:29,134
制限が存在する場合は、出力範囲を好きなだけ小さ

152
00:08:29,134 --> 00:08:32,369
くできますが、制限 が存在しない場合は、制限入

153
00:08:32,369 --> 00:08:35,041
力の周囲で入力範囲をどれだけ縮小して

154
00:08:35,041 --> 00:08:39,260
も、その出力範囲は特定の値より小さくなることはできません。。

155
00:08:39,260 --> 00:08:43,172
おそらく、制限値が 12 であるこの例のコンテキスト

156
00:08:43,172 --> 00:08:46,940
で、同じアイデアをもう少し正確に凍結してみましょう。

157
00:08:46,940 --> 00:08:49,979
12 から離れた距離について考えてみましょう。何ら

158
00:08:49,979 --> 00:08:53,018
かの理由で、その距 離を表すためにギリシャ文字のイ

159
00:08:53,018 --> 00:08:55,328
プシロンを使用するのが一般的です。こ

160
00:08:55,328 --> 00:08:58,367
こでの意図は、この距離イプシロンが必要なだけ小さい

161
00:08:58,367 --> 00:08:59,340
ということです。

162
00:08:59,340 --> 00:09:04,135
制限が存在するということは、常に制限点の周囲の入力

163
00:09:04,135 --> 00:09:08,930
範囲、つまり 0 を中心とした距離デルタを見つける

164
00:09:08,930 --> 00:09:14,492
ことができるため、デルタ 0 内の 入力は距離イプシロン

165
00:09:14,492 --> 00:09:18,520
12 内の出力に対応するということです。。

166
00:09:18,520 --> 00:09:20,946
ここで重要な点は、これはどのイプシロンにも当

167
00:09:20,946 --> 00:09:23,373
てはまり、どんなに小さ くても、対応するデル

168
00:09:23,373 --> 00:09:25,800
タを常に見つけることができるということです。

169
00:09:25,800 --> 00:09:29,973
対照的に、この例のように制限が存在しない場合は、0

170
00:09:29,973 --> 00:09:32,863
などの十分に小さいイプシロンを見つ

171
00:09:32,863 --> 00:09:35,753
けることができます。したがって、0

172
00:09:35,753 --> 00:09:38,642
付近の範囲をどれほど小さくしても、

173
00:09:38,642 --> 00:09:43,137
デルタがどれほど小さくても、対応する出力範囲は常に大きす

174
00:09:43,137 --> 00:09:43,780
ぎます。

175
00:09:43,780 --> 00:09:46,352
すべてがその出力の距離イプシロン内にあ

176
00:09:46,352 --> 00:09:49,060
る場合、出力を制限することはありません。

177
00:09:49,060 --> 00:09:57,960
ここまではかなり理論的な話だと思いませんか?

178
00:09:57,960 --> 00:10:01,533
微分を正式に定義するために限界が使用され、次に限界自体を

179
00:10:01,533 --> 00:10:04,860
厳密に定義するためにイプシロンとデルタが使用されます。

180
00:10:04,860 --> 00:10:06,980
それでは、ここで実際に制限を計算するた

181
00:10:06,980 --> 00:10:09,100
めのトリックを使って話を終えましょう。

182
00:10:09,100 --> 00:10:12,820
たとえば、何らかの理由で、円周率 x x 除算 x 2

183
00:10:12,820 --> 00:10:16,540
乗マイナス 1 の関数 sin を研究していたとします。

184
00:10:16,540 --> 00:10:18,349
おそらくこれは、ある種の減衰振

185
00:10:18,349 --> 00:10:20,280
動をモデル化しているのでしょう。

186
00:10:20,280 --> 00:10:22,235
これをグラフ化するために多数の点をプ

187
00:10:22,235 --> 00:10:24,300
ロットすると、かなり連続的に見えます。

188
00:10:24,300 --> 00:10:30,000
しかし、x が 1 に等しい値には問題があります。

189
00:10:30,000 --> 00:10:33,576
これを接続すると、円周率の sin は 0

190
00:10:33,576 --> 00:10:36,502
になり、分母も 0 になるため、関

191
00:10:36,502 --> 00:10:40,729
数は実際にはその入力では定義されておらず、グラフには

192
00:10:40,729 --> 00:10:42,680
穴が空いているはずです。

193
00:10:42,680 --> 00:10:46,486
これは x がマイナス 1 に等しい場合にも発生しますが、

194
00:10:46,486 --> 00:10:50,040
ここではこれらの穴のうちの 1 つに注目してみましょう。

195
00:10:50,040 --> 00:10:52,432
確かに、グラフはその時点で明確な値

196
00:10:52,432 --> 00:10:54,560
に近づいているように見えますね。

197
00:10:54,560 --> 00:10:59,077
そこで、単に 1 を代入することはできないのに、x が

198
00:10:59,077 --> 00:11:01,820
1 に近づくにつれてこれがどのよ

199
00:11:01,820 --> 00:11:06,499
うな出力に近づくかを正確にどのように見つけることができるの

200
00:11:06,499 --> 00:11:08,920
かと疑問に思うかもしれません。

201
00:11:08,920 --> 00:11:12,408
これを近似する 1 つの方法は、1 など、1

202
00:11:12,408 --> 00:11:16,200
に非 常に近い数値を代入することです。00001。

203
00:11:16,200 --> 00:11:18,535
そうすることで、これがマイナス 1

204
00:11:18,535 --> 00:11:21,260
付近の数値になることがわかります。57.

205
00:11:21,260 --> 00:11:22,672
しかし、それが何であるかを正確

206
00:11:22,672 --> 00:11:24,180
に知る方法はあるのでしょうか?

207
00:11:24,180 --> 00:11:27,215
このような式 (入力で 0 を 0

208
00:11:27,215 --> 00:11:30,420
で割ったように見える) を取得し、x

209
00:11:30,420 --> 00:11:34,467
がその入力に近づくとその限界はいくらになるかを尋

210
00:11:34,467 --> 00:11:36,660
ねる体系的なプロセスです。

211
00:11:36,660 --> 00:11:39,422
制限の後で、デリバティブの定義を書いてみまし

212
00:11:39,422 --> 00:11:42,185
ょう。デリバティブは実際 にここに戻ってきて

213
00:11:42,185 --> 00:11:45,200
、制限の評価に役立つ恩返しをすることができます。

214
00:11:45,200 --> 00:11:46,500
私の言いたいことを教えてください。

215
00:11:46,500 --> 00:11:50,394
円周率 x x の sin のグラフは次のとおりであり、

216
00:11:50,394 --> 00:11:54,020
x の 2 乗マイナス 1 のグラフは次のとおりです。

217
00:11:54,020 --> 00:11:56,944
画面上に表示する内容はたくさんありますが、x が

218
00:11:56,944 --> 00:12:00,220
1 に等しい付近で何が起こっているかに注目してください。

219
00:12:00,220 --> 00:12:03,241
ここで重要なのは、その時点では、pi に x を掛けた

220
00:12:03,241 --> 00:12:06,370
sin と x の 2 乗から 1 を引いた値が両方とも

221
00:12:06,370 --> 00:12:09,500
0 であり、どちらも x 軸と交差しているということです。

222
00:12:09,500 --> 00:12:13,586
1 など、1 に近い特定の値を代入するのと同じ精神で

223
00:12:13,586 --> 00:12:17,358
す。00001、その点に ズームインして、dx

224
00:12:17,358 --> 00:12:21,760
をそこから少し遠ざけると何が起こるかを考えてみましょう。

225
00:12:21,760 --> 00:12:24,066
pi に x を掛けた値 sin

226
00:12:24,066 --> 00:12:27,457
はバンプダウンされ、入力への dx のナッジによ

227
00:12:27,457 --> 00:12:31,120
って引き起こされたそのナッジの値は、pi x の d

228
00:12:31,120 --> 00:12:33,020
sin と呼ばれるものです。

229
00:12:33,020 --> 00:12:37,324
そして、導関数に関する知識から、連鎖則を使用すると、それは

230
00:12:37,324 --> 00:12:40,767
pi 掛 ける x 掛ける pi 掛ける dx

231
00:12:40,767 --> 00:12:42,920
のコサイン付近になるはずです。

232
00:12:42,920 --> 00:12:48,501
開始値は x = 1 だったので、その式に

233
00:12:48,501 --> 00:12:51,800
x = 1 を代入します。

234
00:12:51,800 --> 00:12:54,421
言い換えれば、この pi に x

235
00:12:54,421 --> 00:12:57,814
を掛けたサインのグラフの変化量は dx に

236
00:12:57,814 --> 00:13:00,898
ほぼ比例し、比例定数は pi に pi

237
00:13:00,898 --> 00:13:03,520
を掛けたコサインに等しくなります。

238
00:13:03,520 --> 00:13:06,253
そして、三角関数の知識を思い出してみると、円周

239
00:13:06,253 --> 00:13:09,700
率の余弦はまさに負の 1 なので、この全体を負の円周率と

240
00:13:09,700 --> 00:13:11,840
dx の積として書くことができます。

241
00:13:11,840 --> 00:13:15,876
同様に、x の 2 乗マイナス 1 グラフの値は、dx

242
00:13:15,876 --> 00:13:18,760
の 2 乗マイナス 1 だけ変化します。

243
00:13:18,760 --> 00:13:21,928
そして導関数を考慮すると、そのナッジのサイズは

244
00:13:21,928 --> 00:13:24,040
2x x dx になるはずです。

245
00:13:24,040 --> 00:13:27,635
繰り返しますが、x = 1 から開始していたので、x

246
00:13:27,635 --> 00:13:31,231
= 1 をその式に代入します 。これは、出力ナッジのサ

247
00:13:31,231 --> 00:13:34,960
イズが約 2 倍 1 倍 dx であることを意味します。

248
00:13:34,960 --> 00:13:38,987
これが意味するのは、1 からわずか dx だけ離れた

249
00:13:38,987 --> 00:13:42,865
x の値の場合、 pi x を x の 2 乗から

250
00:13:42,865 --> 00:13:46,594
1 を引いて割った比率 sin は、 およそ負の

251
00:13:46,594 --> 00:13:50,920
pi 倍 dx 割る 2 倍 dx であるということです。

252
00:13:50,920 --> 00:13:53,512
dx は相殺されるので、残るのは

253
00:13:53,512 --> 00:13:55,800
2 を超える負の pi です。

254
00:13:55,800 --> 00:13:59,261
そして重要なことは、dx の選択肢がますます小さくなる

255
00:13:59,261 --> 00:14:02,600
につれて、それらの近似値がますます正確になることです。

256
00:14:02,600 --> 00:14:06,395
この比率、つまり 2 に対する負の pi は、実際には

257
00:14:06,395 --> 00:14:09,920
、x が 1 に近づくときの正確な制限値を示します。

258
00:14:09,920 --> 00:14:13,619
これが意味するのは、元のグラフの制限高さは明らかに

259
00:14:13,619 --> 00:14:15,896
2 を超 えるまさに負の pi

260
00:14:15,896 --> 00:14:18,600
であるということを思い出してください。

261
00:14:18,600 --> 00:14:21,552
そこで何が起こったのかは少し微妙なので、もう一度見てい

262
00:14:21,552 --> 00:14:24,400
きたいと思いますが、今回はもう少し一般的に説明します。

263
00:14:24,400 --> 00:14:27,420
x が 1 に等しいときに両方とも 0 に等しいこれら

264
00:14:27,420 --> 00:14:30,440
2 つの特定の関数 の代わりに、ある共通の値 (x が

265
00:14:30,440 --> 00:14:33,352
a に等しい) において両方とも 0 になる、x の

266
00:14:33,352 --> 00:14:36,480
f と x の g という 2 つの関数を考えてください。

267
00:14:36,480 --> 00:14:38,575
唯一の制約は、これらが x が a

268
00:14:38,575 --> 00:14:40,437
に等しいときの導関数を取得でき

269
00:14:40,437 --> 00:14:43,347
る関数でなければならないということです。つまり、そ

270
00:14:43,347 --> 00:14:46,257
の値に十分近くま でズームインすると、基本的にそれ

271
00:14:46,257 --> 00:14:48,120
ぞれの関数が線のように見えます。

272
00:14:48,120 --> 00:14:51,304
この高音点で f を g で割った値を計算すること

273
00:14:51,304 --> 00:14:54,488
はできませんが、ど ちらも 0 に等しいため、a

274
00:14:54,488 --> 00:14:57,291
に実際に近い x の値、つまり x が a

275
00:14:57,291 --> 00:15:00,475
に近づくときの限界に近いこの比率について尋ねること

276
00:15:00,475 --> 00:15:01,240
ができます。

277
00:15:01,240 --> 00:15:04,113
そして、それらの近くの入力は、a から遠ざける、ほん

278
00:15:04,113 --> 00:15:06,880
の小さな微調整、dx であると考えると役に立ちます。

279
00:15:06,880 --> 00:15:11,380
その微調整された点における f の値は、dx 倍で評価

280
00:15:11,380 --> 00:15:15,560
された、dx に対する df の近似的な導関数です。

281
00:15:15,560 --> 00:15:20,077
同様に、その微調整された点での g の値は、a

282
00:15:20,077 --> 00:15:25,160
と dx の積で評価された g の導関数に近似します。

283
00:15:25,160 --> 00:15:29,668
したがって、その高音点付近では、f と g の出力間の

284
00:15:29,668 --> 00:15:33,693
比率は、実際には、f の dx 倍の微分値を g

285
00:15:33,693 --> 00:15:38,040
の dx 倍の微分値で割ったものとほぼ同じになります。

286
00:15:38,040 --> 00:15:42,080
これらの dx は相殺されるため、a 付近の f と

287
00:15:42,080 --> 00:15:46,120
g の比は、それらの導関数間の比とほぼ同じになります。

288
00:15:46,120 --> 00:15:51,048
これらの各近似は、ナッジが小さくなるほど正確になるため

289
00:15:51,048 --> 00:15:55,800
、導関数のこの比によって、制限の正確な値が得られます。

290
00:15:55,800 --> 00:15:59,100
これは、多くの制限を計算する場合に非常に便利なトリックです。

291
00:15:59,100 --> 00:16:04,162
特定の入力を接続したときに、0 を 0 で割った値に

292
00:16:04,162 --> 00:16:09,225
等しいと思われる式に遭遇した場合は、上部と下部の式の

293
00:16:09,225 --> 00:16:14,100
導関数を取得し、同じ高音入力を接続してみてください。

294
00:16:14,100 --> 00:16:17,020
この巧妙なトリックはロピタルの法則と呼ばれます。

295
00:16:17,020 --> 00:16:20,426
興味深いことに、それは実際にヨハン・ベルヌーイによって発見

296
00:16:20,426 --> 00:16:23,720
されましたが、ロピタルはこの裕福な男であり、ベルヌーイに

297
00:16:23,720 --> 00:16:26,900
彼の数学的発見のいくつかの権利を実質的に支払ったのです。

298
00:16:26,900 --> 00:16:31,205
当時の学術界は奇妙でしたが、非常に文字通りの意味で

299
00:16:31,205 --> 00:16:35,180
、これらの小さなナッジを理解することは有益です。

300
00:16:35,180 --> 00:16:38,199
今、あなたは、与えられた関数の導関数の定義は、0

301
00:16:38,199 --> 00:16:41,338
を 0 で割っ たような特定の分数の極限を計算するこ

302
00:16:41,338 --> 00:16:44,478
とになることを思い出している かもしれません。そのた

303
00:16:44,478 --> 00:16:47,135
め、ロピタルの規則が便利な方法を提供してく

304
00:16:47,135 --> 00:16:50,275
れるのではないかと思うかもしれません。新しい微分公式

305
00:16:50,275 --> 00:16:51,000
を発見する。

306
00:16:51,000 --> 00:16:54,266
しかし、おそらく分子の導関数が何であるかわから

307
00:16:54,266 --> 00:16:57,260
ないので、それは実際には不正行為になります。

308
00:16:57,260 --> 00:17:01,066
このシリーズで私たちがかなりの量を行ってきた微分公式の発見

309
00:17:01,066 --> 00:17:04,620
に関しては、体系的なプラグアンドチャグ手法はありません。

310
00:17:04,620 --> 00:17:06,460
でも、それは良いことなのです！

311
00:17:06,460 --> 00:17:10,406
このような問題を解決するために創造性が必要なときは、あなた

312
00:17:10,406 --> 00:17:14,353
が何か現実的なことをやってい るという良い兆候であり、将来

313
00:17:14,353 --> 00:17:18,300
の問題を解決するための強力なツールとなる可能性があります。

314
00:17:18,300 --> 00:17:22,150
強力なツールについて言えば、次回は積分定理とは何か、

315
00:17:22,150 --> 00:17:26,000
また微積分の基本 定理についてもお話します。これは、

316
00:17:26,000 --> 00:17:28,665
非常にデリケートなアイデアに明確な

317
00:17:28,665 --> 00:17:32,515
意味を与えるために制限を使用できる別の例です。無限と

318
00:17:32,515 --> 00:17:33,700
いちゃつきます。

319
00:17:33,700 --> 00:17:36,350
ご存知のとおり、このチャンネルのサポートのほとんどは

320
00:17:36,350 --> 00:17:39,001
Patreon を 通じて提供されており、パトロンにと

321
00:17:39,001 --> 00:17:40,965
っての主な特典は、このシリーズのような

322
00:17:40,965 --> 00:17:43,616
将来のシリーズへの早期アクセスであり、次のシリーズは確

323
00:17:43,616 --> 00:17:44,500
率で配信されます。

324
00:17:44,500 --> 00:17:47,858
しかし、自分がコミュニティの一員であることをもっと明確

325
00:17:47,858 --> 00:17:50,346
に示す方法が必要な方のために 、小さな

326
00:17:50,346 --> 00:17:53,704
3blue1brown ストアもあり、画面上と説明にリ

327
00:17:53,704 --> 00:17:54,700
ンクがあります。

328
00:17:54,700 --> 00:17:57,628
ぬいぐるみパイの生き物の予備バッチを作成するかどうかは

329
00:17:57,628 --> 00:18:00,557
まだ議論中です。それ は、ストア全体に興味があると思わ

330
00:18:00,557 --> 00:18:02,835
れる視聴者の数によって異なりますが、他に

331
00:18:02,835 --> 00:18:05,763
どのような種類のものを見てみたいかをコメントで教えてく

332
00:18:05,763 --> 00:18:06,740
ださい。そこには。

333
00:18:06,740 --> 00:18:21,380
見てくれてありがとう！

