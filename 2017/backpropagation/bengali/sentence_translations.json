[
 {
  "input": "Here, we tackle backpropagation, the core algorithm behind how neural networks learn. ",
  "translatedText": "এখানে, আমরা ব্যাকপ্রোপগেশন মোকাবেলা করি, নিউরাল নেটওয়ার্কগুলি কীভাবে শেখার পিছনে মূল অ্যালগরিদম।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 4.06,
  "end": 8.88
 },
 {
  "input": "After a quick recap for where we are, the first thing I'll do is an intuitive walkthrough for what the algorithm is actually doing, without any reference to the formulas. ",
  "translatedText": "আমরা কোথায় আছি তার একটি দ্রুত সংক্ষিপ্ত বিবরণের পরে, আমি প্রথমে যা করব তা হল অ্যালগরিদম আসলে কী করছে তার জন্য একটি স্বজ্ঞাত ওয়াকথ্রু, সূত্রের কোনো উল্লেখ ছাড়াই।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 9.4,
  "end": 17.0
 },
 {
  "input": "Then, for those of you who do want to dive into the math, the next video goes into the calculus underlying all this. ",
  "translatedText": "তারপর, আপনি যারা গণিতে ডুব দিতে চান তাদের জন্য, পরবর্তী ভিডিওটি এই সমস্তের অন্তর্নিহিত ক্যালকুলাসে যায়।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 17.66,
  "end": 23.02
 },
 {
  "input": "If you watched the last two videos, or if you're just jumping in with the appropriate background, you know what a neural network is, and how it feeds forward information. ",
  "translatedText": "আপনি যদি শেষ দুটি ভিডিও দেখে থাকেন, অথবা আপনি যদি উপযুক্ত ব্যাকগ্রাউন্ড নিয়ে ঝাঁপিয়ে পড়েন, তাহলে আপনি জানেন একটি নিউরাল নেটওয়ার্ক কী এবং এটি কীভাবে তথ্য ফরোয়ার্ড করে।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 23.82,
  "end": 31.0
 },
 {
  "input": "Here, we're doing the classic example of recognizing handwritten digits whose pixel values get fed into the first layer of the network with 784 neurons, and I've been showing a network with two hidden layers having just 16 neurons each, and an output layer of 10 neurons, indicating which digit the network is choosing as its answer. ",
  "translatedText": "এখানে, আমরা হস্তলিখিত অঙ্কগুলি সনাক্ত করার ক্লাসিক উদাহরণ করছি যার পিক্সেল মানগুলি 784 নিউরন সহ নেটওয়ার্কের প্রথম স্তরে খাওয়ানো হয়, এবং আমি একটি নেটওয়ার্ক দেখাচ্ছি যেখানে দুটি লুকানো স্তর রয়েছে যার প্রতিটিতে মাত্র 16টি নিউরন রয়েছে এবং একটি আউটপুট রয়েছে 10টি নিউরনের স্তর, যা নির্দেশ করে যে নেটওয়ার্কটি তার উত্তর হিসাবে কোন সংখ্যাটি বেছে নিচ্ছে।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 31.68,
  "end": 49.04
 },
 {
  "input": "I'm also expecting you to understand gradient descent, as described in the last video, and how what we mean by learning is that we want to find which weights and biases minimize a certain cost function. ",
  "translatedText": "আমি আশা করছি আপনি গ্রেডিয়েন্ট ডিসেন্ট বুঝতে পারবেন, যেমনটি শেষ ভিডিওতে বর্ণনা করা হয়েছে, এবং শেখার দ্বারা আমরা কী বোঝাতে চাই তা হল আমরা খুঁজে পেতে চাই কোন ওজন এবং পক্ষপাতগুলি একটি নির্দিষ্ট খরচ ফাংশনকে কম করে।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 50.04,
  "end": 61.26
 },
 {
  "input": "As a quick reminder, for the cost of a single training example, you take the output the network gives, along with the output you wanted it to give, and add up the squares of the differences between each component. ",
  "translatedText": "একটি দ্রুত অনুস্মারক হিসাবে, একটি একক প্রশিক্ষণের উদাহরণের খরচের জন্য, আপনি নেটওয়ার্ক যে আউটপুট দিতে চেয়েছিলেন তার সাথে আপনি যে আউটপুটটি দিতে চেয়েছিলেন তা নিয়ে যান এবং প্রতিটি উপাদানের মধ্যে পার্থক্যের স্কোয়ার যোগ করুন।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 62.04,
  "end": 74.6
 },
 {
  "input": "Doing this for all of your tens of thousands of training examples and averaging the results, this gives you the total cost of the network. ",
  "translatedText": "আপনার হাজার হাজার প্রশিক্ষণের উদাহরণগুলির জন্য এটি করা এবং ফলাফলের গড়, এটি আপনাকে নেটওয়ার্কের মোট খরচ দেয়।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 75.38,
  "end": 82.2
 },
 {
  "input": "As if that's not enough to think about, as described in the last video, the thing that we're looking for is the negative gradient of this cost function, which tells you how you need to change all of the weights and biases, all of these connections, so as to most efficiently decrease the cost. ",
  "translatedText": "শেষ ভিডিওতে বর্ণিত হিসাবে এটি চিন্তা করার জন্য যথেষ্ট নয়, আমরা যে জিনিসটি খুঁজছি তা হল এই খরচ ফাংশনের নেতিবাচক গ্রেডিয়েন্ট, যা আপনাকে বলে যে কীভাবে আপনাকে সমস্ত ওজন এবং পক্ষপাতগুলি পরিবর্তন করতে হবে, সমস্ত এই সংযোগগুলি, যাতে সবচেয়ে দক্ষতার সাথে খরচ কমাতে পারে।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 82.2,
  "end": 98.32
 },
 {
  "input": "Backpropagation, the topic of this video, is an algorithm for computing that crazy complicated gradient. ",
  "translatedText": "Backpropagation, এই ভিডিওর বিষয়, সেই পাগল জটিল গ্রেডিয়েন্ট গণনার জন্য একটি অ্যালগরিদম।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 103.26,
  "end": 108.58
 },
 {
  "input": "The one idea from the last video that I really want you to hold firmly in your mind right now is that because thinking of the gradient vector as a direction in 13,000 dimensions is, to put it lightly, beyond the scope of our imaginations, there's another way you can think about it. ",
  "translatedText": "শেষ ভিডিও থেকে একটি ধারণা যা আমি সত্যিই চাই যে আপনি এখনই আপনার মনে দৃঢ়ভাবে ধরে রাখুন তা হল কারণ 13,000 মাত্রায় একটি দিক হিসাবে গ্রেডিয়েন্ট ভেক্টরকে চিন্তা করা হল, এটিকে হালকাভাবে বলা, আমাদের কল্পনার সুযোগের বাইরে, আরেকটি আছে যেভাবে আপনি এটি সম্পর্কে চিন্তা করতে পারেন।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 109.14,
  "end": 123.58
 },
 {
  "input": "The magnitude of each component here is telling you how sensitive the cost function is to each weight and bias. ",
  "translatedText": "এখানে প্রতিটি উপাদানের মাত্রা আপনাকে বলছে যে খরচ ফাংশন প্রতিটি ওজন এবং পক্ষপাতের জন্য কতটা সংবেদনশীল।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 124.6,
  "end": 130.94
 },
 {
  "input": "For example, let's say you go through the process I'm about to describe, and compute the negative gradient, and the component associated with the weight on this edge here comes out to be 3.2, while the component associated with this edge here comes out as 0.1. ",
  "translatedText": "উদাহরণ স্বরূপ, ধরা যাক আমি যে প্রক্রিয়াটি বর্ণনা করতে যাচ্ছি আপনি তার মধ্য দিয়ে যান এবং নেতিবাচক গ্রেডিয়েন্ট গণনা করেন এবং এই প্রান্তে ওজনের সাথে যুক্ত উপাদানটি এখানে 3 হবে।2, এখানে এই প্রান্তের সাথে যুক্ত উপাদানটি 0 হিসাবে বেরিয়ে আসে।1. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 131.8,
  "end": 146.26
 },
 {
  "input": "The way you would interpret that is that the cost of the function is 32 times more sensitive to changes in that first weight, so if you were to wiggle that value a little bit, it's going to cause some change to the cost, and that change is 32 times greater than what the same wiggle to that second weight would give. ",
  "translatedText": "আপনি যেভাবে ব্যাখ্যা করবেন তা হল যে ফাংশনের খরচ সেই প্রথম ওজনের পরিবর্তনের জন্য 32 গুণ বেশি সংবেদনশীল, তাই আপনি যদি সেই মানটিকে কিছুটা নড়াচড়া করেন তবে এটি খরচে কিছুটা পরিবর্তন ঘটাবে এবং সেই পরিবর্তনটি 32 গুণ বড় যে দ্বিতীয় ওজন একই wiggle কি দিতে হবে. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 146.82,
  "end": 163.06
 },
 {
  "input": "Personally, when I was first learning about backpropagation, I think the most confusing aspect was just the notation and index chasing of it all. ",
  "translatedText": "ব্যক্তিগতভাবে, যখন আমি প্রথম ব্যাকপ্রোপাগেশন সম্পর্কে শিখছিলাম, আমি মনে করি সবচেয়ে বিভ্রান্তিকর দিকটি ছিল কেবলমাত্র স্বরলিপি এবং সূচকের পিছনে থাকা।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 168.42,
  "end": 175.74
 },
 {
  "input": "But once you unwrap what each part of this algorithm is really doing, each individual effect it's having is actually pretty intuitive, it's just that there's a lot of little adjustments getting layered on top of each other. ",
  "translatedText": "কিন্তু একবার আপনি এই অ্যালগরিদমের প্রতিটি অংশ আসলে কী করছে তা খুলে ফেললে, এটির প্রতিটি স্বতন্ত্র প্রভাব আসলে বেশ স্বজ্ঞাত, এটি ঠিক যে একে অপরের উপরে স্তরে স্তরে অনেকগুলি সামান্য সমন্বয় রয়েছে।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 176.22,
  "end": 186.64
 },
 {
  "input": "So I'm going to start things off here with a complete disregard for the notation, and just step through the effects each training example has on the weights and biases. ",
  "translatedText": "তাই আমি স্বরলিপির জন্য সম্পূর্ণ উপেক্ষা করে এখানে জিনিসগুলি শুরু করতে যাচ্ছি, এবং প্রতিটি প্রশিক্ষণের উদাহরণের ওজন এবং পক্ষপাতের উপর যে প্রভাব রয়েছে তার মধ্য দিয়ে কেবল ধাপে ধাপে।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 187.74,
  "end": 196.12
 },
 {
  "input": "Because the cost function involves averaging a certain cost per example over all the tens of thousands of training examples, the way we adjust the weights and biases for a single gradient descent step also depends on every single example. ",
  "translatedText": "যেহেতু খরচ ফাংশনে সমস্ত হাজার হাজার প্রশিক্ষণ উদাহরণের উপর উদাহরণ প্রতি একটি নির্দিষ্ট খরচ গড় জড়িত থাকে, তাই আমরা যেভাবে একটি গ্রেডিয়েন্ট ডিসেন্ট ধাপের জন্য ওজন এবং পক্ষপাতগুলি সামঞ্জস্য করি তাও প্রতিটি একক উদাহরণের উপর নির্ভর করে।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 197.02,
  "end": 211.04
 },
 {
  "input": "Or rather, in principle it should, but for computational efficiency we'll do a little trick later to keep you from needing to hit every single example for every step. ",
  "translatedText": "অথবা বরং, নীতিগতভাবে এটি করা উচিত, কিন্তু গণনাগত দক্ষতার জন্য আমরা আপনাকে প্রতিটি পদক্ষেপের জন্য প্রতিটি একক উদাহরণ আঘাত করার প্রয়োজন থেকে বিরত রাখতে পরে একটু কৌশল করব।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 211.68,
  "end": 219.2
 },
 {
  "input": "In other cases, right now, all we're going to do is focus our attention on one single example, this image of a 2. ",
  "translatedText": "অন্যান্য ক্ষেত্রে, এই মুহুর্তে, আমরা যা করতে যাচ্ছি তা হল একটি একক উদাহরণে আমাদের মনোযোগ কেন্দ্রীভূত করা, এই 2-এর চিত্র।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 219.2,
  "end": 225.96
 },
 {
  "input": "What effect should this one training example have on how the weights and biases get adjusted? ",
  "translatedText": "ওজন এবং পক্ষপাতগুলি কীভাবে সামঞ্জস্য করা যায় তার উপর এই একটি প্রশিক্ষণ উদাহরণের কী প্রভাব থাকা উচিত? ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 226.72,
  "end": 231.48
 },
 {
  "input": "Let's say we're at a point where the network is not well trained yet, so the activations in the output are going to look pretty random, maybe something like 0.5, 0.8, 0.2, on and on. ",
  "translatedText": "ধরা যাক আমরা এমন এক বিন্দুতে আছি যেখানে নেটওয়ার্ক এখনও ভালভাবে প্রশিক্ষিত নয়, তাই আউটপুটে অ্যাক্টিভেশনগুলি বেশ র্যান্ডম দেখা যাচ্ছে, হয়তো 0 এর মতো কিছু।5, 0।8, 0।2, অন এবং অন।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 232.68,
  "end": 242.0
 },
 {
  "input": "We can't directly change those activations, we only have influence on the weights and biases, but it's helpful to keep track of which adjustments we wish should take place to that output layer. ",
  "translatedText": "আমরা সরাসরি এই অ্যাক্টিভেশনগুলি পরিবর্তন করতে পারি না, আমাদের শুধুমাত্র ওজন এবং পক্ষপাতের উপর প্রভাব আছে, কিন্তু সেই আউটপুট স্তরে আমরা কোন সমন্বয় করতে চাই তা ট্র্যাক রাখা সহায়ক।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 242.52,
  "end": 252.58
 },
 {
  "input": "And since we want it to classify the image as a 2, we want that third value to get nudged up while all the others get nudged down. ",
  "translatedText": "এবং যেহেতু আমরা ইমেজটিকে 2 হিসাবে শ্রেণীবদ্ধ করতে চাই, তাই আমরা চাই যে তৃতীয় মানটি নাজ করা হোক যখন অন্য সবগুলি নিচে নামানো হোক।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 253.36,
  "end": 261.26
 },
 {
  "input": "Moreover, the sizes of these nudges should be proportional to how far away each current value is from its target value. ",
  "translatedText": "তদুপরি, প্রতিটি বর্তমান মান তার লক্ষ্য মান থেকে কতটা দূরে এই নজগুলির আকার সমানুপাতিক হওয়া উচিত।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 262.06,
  "end": 269.52
 },
 {
  "input": "For example, the increase to that number 2 neuron's activation is in a sense more important than the decrease to the number 8 neuron, which is already pretty close to where it should be. ",
  "translatedText": "উদাহরণস্বরূপ, সংখ্যা 2 নিউরনের সক্রিয়তা বৃদ্ধি একটি অর্থে 8 নম্বর নিউরনের হ্রাসের চেয়ে বেশি গুরুত্বপূর্ণ, যা ইতিমধ্যেই যেখানে এটি হওয়া উচিত তার কাছাকাছি।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 270.22,
  "end": 280.9
 },
 {
  "input": "So zooming in further, let's focus just on this one neuron, the one whose activation we wish to increase. ",
  "translatedText": "তাই আরও জুম করে, আসুন শুধুমাত্র এই একটি নিউরনের উপর ফোকাস করি, যার সক্রিয়তা আমরা বাড়াতে চাই।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 282.04,
  "end": 287.28
 },
 {
  "input": "Remember, that activation is defined as a certain weighted sum of all the activations in the previous layer, plus a bias, which is all then plugged into something like the sigmoid squishification function, or a ReLU. ",
  "translatedText": "মনে রাখবেন, সেই অ্যাক্টিভেশনকে পূর্ববর্তী স্তরের সমস্ত অ্যাক্টিভেশনের একটি নির্দিষ্ট ওজনযুক্ত সমষ্টি হিসাবে সংজ্ঞায়িত করা হয়, এবং একটি পক্ষপাত, যা সব পরে সিগময়েড স্কুইশিফিকেশন ফাংশন, বা একটি ReLU-এর মতো কিছুতে প্লাগ করা হয়।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 288.18,
  "end": 301.04
 },
 {
  "input": "So there are three different avenues that can team up together to help increase that activation. ",
  "translatedText": "তাই এই অ্যাক্টিভেশন বাড়ানোর জন্য তিনটি ভিন্ন উপায় রয়েছে যা একসাথে দলবদ্ধ হতে পারে।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 301.64,
  "end": 307.02
 },
 {
  "input": "You can increase the bias, you can increase the weights, and you can change the activations from the previous layer. ",
  "translatedText": "আপনি পক্ষপাত বাড়াতে পারেন, ওজন বাড়াতে পারেন এবং আগের স্তর থেকে অ্যাক্টিভেশন পরিবর্তন করতে পারেন।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 307.44,
  "end": 314.04
 },
 {
  "input": "Focusing on how the weights should be adjusted, notice how the weights actually have differing levels of influence. ",
  "translatedText": "কীভাবে ওজনগুলি সামঞ্জস্য করা উচিত তার উপর ফোকাস করে, লক্ষ্য করুন কীভাবে ওজনের প্রভাবের বিভিন্ন স্তর রয়েছে।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 314.94,
  "end": 320.86
 },
 {
  "input": "The connections with the brightest neurons from the preceding layer have the biggest effect since those weights are multiplied by larger activation values. ",
  "translatedText": "পূর্ববর্তী স্তর থেকে উজ্জ্বল নিউরনের সাথে সংযোগগুলি সবচেয়ে বড় প্রভাব ফেলে কারণ সেই ওজনগুলিকে বৃহত্তর সক্রিয়করণ মান দ্বারা গুণ করা হয়।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 321.44,
  "end": 329.1
 },
 {
  "input": "So if you were to increase one of those weights, it actually has a stronger influence on the ultimate cost function than increasing the weights of connections with dimmer neurons, at least as far as this one training example is concerned. ",
  "translatedText": "সুতরাং আপনি যদি সেই ওজনগুলির মধ্যে একটি বাড়াতে চান, তবে এটি প্রকৃতপক্ষে ম্লান নিউরনের সাথে সংযোগের ওজন বাড়ানোর চেয়ে চূড়ান্ত ব্যয় ফাংশনের উপর একটি শক্তিশালী প্রভাব ফেলে, অন্তত যতদূর এই একটি প্রশিক্ষণ উদাহরণটি উদ্বিগ্ন।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 331.46,
  "end": 343.48
 },
 {
  "input": "Remember, when we talk about gradient descent, we don't just care about whether each component should get nudged up or down, we care about which ones give you the most bang for your buck. ",
  "translatedText": "মনে রাখবেন, যখন আমরা গ্রেডিয়েন্ট ডিসেন্টের কথা বলি, তখন প্রতিটি উপাদান উপরে বা নিচে নামানো উচিত কিনা তা নিয়েই আমরা চিন্তা করি না, আমরা খেয়াল করি কোনটি আপনাকে আপনার অর্থের জন্য সবচেয়ে বেশি ধাক্কা দেয়।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 344.42,
  "end": 353.22
 },
 {
  "input": "This, by the way, is at least somewhat reminiscent of a theory in neuroscience for how biological networks of neurons learn, Hebbian theory, often summed up in the phrase, neurons that fire together wire together. ",
  "translatedText": "যাইহোক, এটি অন্তত কিছুটা স্নায়ুবিজ্ঞানের একটি তত্ত্বের স্মরণ করিয়ে দেয় যে কীভাবে নিউরনের জৈবিক নেটওয়ার্কগুলি শেখে, হেবিয়ান তত্ত্ব, প্রায়শই এই বাক্যাংশে সংক্ষিপ্ত হয়, নিউরন যেগুলি একসাথে তারে আগুন দেয়।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 355.02,
  "end": 366.46
 },
 {
  "input": "Here, the biggest increases to weights, the biggest strengthening of connections, happens between neurons which are the most active and the ones which we wish to become more active. ",
  "translatedText": "এখানে, ওজনের সবচেয়ে বড় বৃদ্ধি, সংযোগের সবচেয়ে বড় বৃদ্ধি, নিউরনগুলির মধ্যে ঘটে যা সবচেয়ে সক্রিয় এবং যেগুলিকে আমরা আরও সক্রিয় হতে চাই৷ এক অর্থে, একটি 2 দেখার সময় যে নিউরনগুলি ফায়ার করছে সেগুলি সম্পর্কে চিন্তা করার সময় গুলি চালানোর সাথে আরও দৃঢ়ভাবে যুক্ত হয়ে যায়।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 367.26,
  "end": 377.28
 },
 {
  "input": "In a sense, the neurons that are firing while seeing a 2 get more strongly linked to those firing when thinking about it. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 377.94,
  "end": 384.48
 },
 {
  "input": "To be clear, I'm not in a position to make statements one way or another about whether artificial networks of neurons behave anything like biological brains, and this fires together wire together idea comes with a couple meaningful asterisks, but taken as a very loose analogy, I find it interesting to note. ",
  "translatedText": "স্পষ্ট করে বলতে গেলে, নিউরনের কৃত্রিম নেটওয়ার্কগুলি জৈবিক মস্তিষ্কের মতো কিছু আচরণ করে কিনা সে সম্পর্কে আমি এক বা অন্যভাবে বিবৃতি দেওয়ার অবস্থানে নই, এবং এই অগ্নিসংযোগ একত্রিতভাবে কিছু অর্থপূর্ণ তারকাচিহ্নের সাথে আসে, তবে এটি খুব শিথিল হিসাবে নেওয়া হয়।সাদৃশ্য, আমি এটা নোট আকর্ষণীয় খুঁজে. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 385.4,
  "end": 401.02
 },
 {
  "input": "Anyway, the third way we can help increase this neuron's activation is by changing all the activations in the previous layer. ",
  "translatedText": "যাই হোক, তৃতীয় যেভাবে আমরা এই নিউরনের অ্যাক্টিভেশন বাড়াতে সাহায্য করতে পারি তা হল আগের লেয়ারের সমস্ত অ্যাক্টিভেশন পরিবর্তন করে।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 401.94,
  "end": 409.04
 },
 {
  "input": "Namely, if everything connected to that digit 2 neuron with a positive weight got brighter, and if everything connected with a negative weight got dimmer, then that digit 2 neuron would become more active. ",
  "translatedText": "যথা, যদি ধনাত্মক ওজনের সাথে সেই সংখ্যা 2 নিউরনের সাথে সংযুক্ত সবকিছু উজ্জ্বল হয়ে যায় এবং যদি নেতিবাচক ওজনের সাথে সংযুক্ত সমস্ত কিছু ম্লান হয়ে যায়, তবে সেই সংখ্যা 2 নিউরন আরও সক্রিয় হয়ে উঠবে।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 409.04,
  "end": 420.68
 },
 {
  "input": "And similar to the weight changes, you're going to get the most bang for your buck by seeking changes that are proportional to the size of the corresponding weights. ",
  "translatedText": "এবং ওজন পরিবর্তনের অনুরূপ, আপনি সংশ্লিষ্ট ওজনের আকারের সমানুপাতিক পরিবর্তনগুলি খোঁজার মাধ্যমে আপনার অর্থের জন্য সর্বাধিক ধাক্কা পেতে চলেছেন।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 422.54,
  "end": 430.28
 },
 {
  "input": "Now of course, we cannot directly influence those activations, we only have control over the weights and biases. ",
  "translatedText": "এখন অবশ্যই, আমরা সেই সক্রিয়করণগুলিকে সরাসরি প্রভাবিত করতে পারি না, আমাদের কেবল ওজন এবং পক্ষপাতের উপর নিয়ন্ত্রণ আছে।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 432.14,
  "end": 437.48
 },
 {
  "input": "But just as with the last layer, it's helpful to keep a note of what those desired changes are. ",
  "translatedText": "কিন্তু শেষ স্তরের মতোই, সেই পছন্দসই পরিবর্তনগুলি কী তা নোট করে রাখা সহায়ক।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 437.48,
  "end": 444.12
 },
 {
  "input": "But keep in mind, zooming out one step here, this is only what that digit 2 output neuron wants. ",
  "translatedText": "কিন্তু মনে রাখবেন, এখানে এক ধাপ জুম আউট করুন, এটি শুধুমাত্র সেই ডিজিট 2 আউটপুট নিউরন চায়।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 444.58,
  "end": 449.2
 },
 {
  "input": "Remember, we also want all the other neurons in the last layer to become less active, and each of those other output neurons has its own thoughts about what should happen to that second to last layer. ",
  "translatedText": "মনে রাখবেন, আমরাও চাই যে শেষ স্তরের অন্যান্য সমস্ত নিউরন কম সক্রিয় হয়ে উঠুক, এবং সেই দ্বিতীয় থেকে শেষ স্তরে কী ঘটবে সে সম্পর্কে অন্যান্য আউটপুট নিউরনের প্রত্যেকটির নিজস্ব চিন্তাভাবনা রয়েছে।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 449.76,
  "end": 459.6
 },
 {
  "input": "So the desire of this digit 2 neuron is added together with the desires of all the other output neurons for what should happen to this second to last layer, again in proportion to the corresponding weights, and in proportion to how much each of those neurons needs to change. ",
  "translatedText": "তাই এই দ্বিতীয় থেকে শেষ স্তরে কী ঘটতে হবে তার জন্য অন্যান্য সমস্ত আউটপুট নিউরনের ইচ্ছার সাথে এই সংখ্যা 2 নিউরনের ইচ্ছা একত্রে যোগ করা হয়েছে, আবার সংশ্লিষ্ট ওজনের অনুপাতে, এবং সেই অনুপাতে প্রতিটি নিউরনের প্রয়োজন কতটুকু।পরিবর্তন করতে. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 462.7,
  "end": 480.72
 },
 {
  "input": "This right here is where the idea of propagating backwards comes in. ",
  "translatedText": "এটি এখানেই যেখানে পিছনে প্রচারের ধারণাটি আসে।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 481.6,
  "end": 485.48
 },
 {
  "input": "By adding together all these desired effects, you basically get a list of nudges that you want to happen to this second to last layer. ",
  "translatedText": "এই সমস্ত কাঙ্খিত প্রভাবগুলিকে একত্রে যুক্ত করার মাধ্যমে, আপনি মূলত এই দ্বিতীয় থেকে শেষ স্তরে ঘটতে চান এমন নজগুলির একটি তালিকা পাবেন।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 485.82,
  "end": 493.36
 },
 {
  "input": "And once you have those, you can recursively apply the same process to the relevant weights and biases that determine those values, repeating the same process I just walked through and moving backwards through the network. ",
  "translatedText": "এবং একবার আপনার কাছে সেগুলি হয়ে গেলে, আপনি প্রাসঙ্গিক ওজন এবং পক্ষপাতগুলিতে একই প্রক্রিয়াটি পুনরাবৃত্তিমূলকভাবে প্রয়োগ করতে পারেন যা সেই মানগুলি নির্ধারণ করে, একই প্রক্রিয়াটি পুনরাবৃত্তি করে যা আমি এইমাত্র হেঁটেছি এবং নেটওয়ার্কের মাধ্যমে পিছনের দিকে চলেছি।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 494.22,
  "end": 505.1
 },
 {
  "input": "And zooming out a bit further, remember that this is all just how a single training example wishes to nudge each one of those weights and biases. ",
  "translatedText": "এবং আরও একটু জুম আউট করে, মনে রাখবেন যে এটিই ঠিক যেভাবে একটি একক প্রশিক্ষণ উদাহরণ সেই ওজন এবং পক্ষপাতগুলির প্রতিটিকে নাজ করতে চায়।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 508.96,
  "end": 517.0
 },
 {
  "input": "If we only listened to what that 2 wanted, the network would ultimately be incentivized just to classify all images as a 2. ",
  "translatedText": "যদি আমরা কেবলমাত্র সেই 2টি যা চায় তা শুনি, তবে নেটওয়ার্কটি শেষ পর্যন্ত সমস্ত চিত্রকে 2 হিসাবে শ্রেণীবদ্ধ করতে উত্সাহিত করা হবে।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 517.48,
  "end": 523.22
 },
 {
  "input": "So what you do is go through this same backprop routine for every other training example, recording how each of them would like to change the weights and biases, and average together those desired changes. ",
  "translatedText": "সুতরাং আপনি যা করবেন তা হল প্রতিটি অন্যান্য প্রশিক্ষণের উদাহরণের জন্য এই একই ব্যাকপ্রপ রুটিনের মধ্য দিয়ে যাওয়া, তাদের প্রত্যেকে কীভাবে ওজন এবং পক্ষপাতগুলি পরিবর্তন করতে চায় এবং সেই পছন্দসই পরিবর্তনগুলিকে একত্রে গড় করে।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 524.06,
  "end": 536.0
 },
 {
  "input": "This collection here of the averaged nudges to each weight and bias is, loosely speaking, the negative gradient of the cost function referenced in the last video, or at least something proportional to it. ",
  "translatedText": "এখানে প্রতিটি ওজন এবং পক্ষপাতের গড় নাজগুলির এই সংগ্রহটি হল, আলগাভাবে বলতে গেলে, শেষ ভিডিওতে উল্লেখ করা খরচ ফাংশনের নেতিবাচক গ্রেডিয়েন্ট, বা অন্তত এটির সমানুপাতিক কিছু।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 541.72,
  "end": 553.68
 },
 {
  "input": "I say loosely speaking only because I have yet to get quantitatively precise about those nudges, but if you understood every change I just referenced, why some are proportionally bigger than others, and how they all need to be added together, you understand the mechanics for what backpropagation is actually doing. ",
  "translatedText": "আমি ঢিলেঢালাভাবে বলছি শুধুমাত্র এই কারণে যে আমি এখনও সেই ধাক্কাগুলি সম্পর্কে পরিমাণগতভাবে সুনির্দিষ্ট করতে পারিনি, কিন্তু আপনি যদি এইমাত্র উল্লেখ করা প্রতিটি পরিবর্তন বুঝতে পারেন, কেন কিছু আনুপাতিকভাবে অন্যদের চেয়ে বড়, এবং কীভাবে সেগুলিকে একসাথে যুক্ত করা দরকার, আপনি এর যান্ত্রিকতা বোঝেন backpropagation আসলে কি করছে. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 554.38,
  "end": 571.0
 },
 {
  "input": "By the way, in practice, it takes computers an extremely long time to add up the influence of every training example every gradient descent step. ",
  "translatedText": "যাইহোক, অনুশীলনে, প্রতিটি গ্রেডিয়েন্ট ডিসেন্ট ধাপে প্রতিটি প্রশিক্ষণ উদাহরণের প্রভাব যোগ করতে কম্পিউটারগুলিকে অত্যন্ত দীর্ঘ সময় লাগে।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 573.96,
  "end": 582.44
 },
 {
  "input": "So here's what's commonly done instead. ",
  "translatedText": "তাই এখানে এর পরিবর্তে সাধারণত কি করা হয়।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 583.14,
  "end": 584.82
 },
 {
  "input": "You randomly shuffle your training data and divide it into a whole bunch of mini-batches, let's say each one having 100 training examples. ",
  "translatedText": "আপনি এলোমেলোভাবে আপনার প্রশিক্ষণের ডেটা এলোমেলো করেন এবং এটিকে মিনি-ব্যাচের পুরো গুচ্ছে ভাগ করেন, ধরা যাক প্রতিটিতে 100টি প্রশিক্ষণের উদাহরণ রয়েছে।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 585.48,
  "end": 592.42
 },
 {
  "input": "Then you compute a step according to the mini-batch. ",
  "translatedText": "তারপর আপনি মিনি-ব্যাচ অনুযায়ী একটি ধাপ গণনা করুন।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 592.94,
  "end": 596.2
 },
 {
  "input": "It's not the actual gradient of the cost function, which depends on all of the training data, not this tiny subset, so it's not the most efficient step downhill, but each mini-batch does give you a pretty good approximation, and more importantly it gives you a significant computational speedup. ",
  "translatedText": "এটি খরচ ফাংশনের প্রকৃত গ্রেডিয়েন্ট নয়, যা প্রশিক্ষণের সমস্ত ডেটার উপর নির্ভর করে, এই ক্ষুদ্র উপসেট নয়, তাই এটি সবচেয়ে কার্যকর পদক্ষেপ নয়, তবে প্রতিটি মিনি-ব্যাচ আপনাকে একটি সুন্দর অনুমান দেয় এবং আরও গুরুত্বপূর্ণভাবে এটি আপনাকে একটি উল্লেখযোগ্য গণনাগত গতি দেয়।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 596.96,
  "end": 612.12
 },
 {
  "input": "If you were to plot the trajectory of your network under the relevant cost surface, it would be a little more like a drunk man stumbling aimlessly down a hill but taking quick steps, rather than a carefully calculating man determining the exact downhill direction of each step before taking a very slow and careful step in that direction. ",
  "translatedText": "আপনি যদি প্রাসঙ্গিক খরচের পৃষ্ঠের নীচে আপনার নেটওয়ার্কের ট্র্যাজেক্টোরি প্লট করতে চান, তবে এটি একটি মাতাল লোকের মতো হবে যেটি লক্ষ্যহীনভাবে একটি পাহাড়ের নিচে হোঁচট খাচ্ছে কিন্তু দ্রুত পদক্ষেপ নিচ্ছে, বরং একজন সাবধানে গণনা করা লোক প্রতিটি পদক্ষেপের সঠিক উতরাইয়ের দিকটি নির্ধারণ করছে।সেই দিকে খুব ধীর এবং সতর্ক পদক্ষেপ নেওয়ার আগে।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 612.82,
  "end": 630.16
 },
 {
  "input": "This technique is referred to as stochastic gradient descent. ",
  "translatedText": "এই কৌশলটিকে স্টোকাস্টিক গ্রেডিয়েন্ট ডিসেন্ট হিসাবে উল্লেখ করা হয়।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 631.54,
  "end": 634.66
 },
 {
  "input": "There's a lot going on here, so let's just sum it up for ourselves, shall we? ",
  "translatedText": "এখানে অনেক কিছু চলছে, তাই আসুন নিজের জন্য এটিকে সংক্ষিপ্ত করা যাক, আমরা কি করব? ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 635.96,
  "end": 639.62
 },
 {
  "input": "Backpropagation is the algorithm for determining how a single training example would like to nudge the weights and biases, not just in terms of whether they should go up or down, but in terms of what relative proportions to those changes cause the most rapid decrease to the cost. ",
  "translatedText": "ব্যাকপ্রোপগেশন হল অ্যালগরিদম যা নির্ধারণ করার জন্য একটি একক প্রশিক্ষণের উদাহরণ কীভাবে ওজন এবং পক্ষপাতগুলিকে ঠেলে দিতে চায়, কেবলমাত্র সেগুলি উপরে বা নীচে যাওয়া উচিত কিনা তা নয়, তবে সেই পরিবর্তনগুলির সাথে কোন আপেক্ষিক অনুপাত সবচেয়ে দ্রুত হ্রাস ঘটায় তার পরিপ্রেক্ষিতে।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 640.44,
  "end": 655.56
 },
 {
  "input": "A true gradient descent step would involve doing this for all your tens and thousands of training examples and averaging the desired changes you get, but that's computationally slow, so instead you randomly subdivide the data into mini-batches and compute each step with respect to a mini-batch. ",
  "translatedText": "খরচ একটি সত্যিকারের গ্রেডিয়েন্ট ডিসেন্ট ধাপে আপনার সমস্ত দশ এবং হাজার হাজার প্রশিক্ষণের উদাহরণের জন্য এটি করা এবং আপনি যে কাঙ্খিত পরিবর্তনগুলি পান তা গড় করা জড়িত, তবে এটি গণনাগতভাবে ধীর, তাই এর পরিবর্তে আপনি এলোমেলোভাবে ডেটাকে মিনি-ব্যাচগুলিতে উপবিভক্ত করুন এবং প্রতিটি ধাপ গণনা করুন মিনি-ব্যাচ বারবার সমস্ত মিনি-ব্যাচের মধ্য দিয়ে যাওয়া এবং এই সমন্বয়গুলি করা, আপনি স্থানীয় ন্যূনতম খরচ ফাংশনের দিকে একত্রিত হবেন, যার অর্থ হল আপনার নেটওয়ার্ক প্রশিক্ষণের উদাহরণগুলিতে সত্যিই একটি ভাল কাজ করবে।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 656.26,
  "end": 673.24
 },
 {
  "input": "Repeatedly going through all the mini-batches and making these adjustments, you will converge towards a local minimum of the cost function, which is to say your network will end up doing a really good job on the training examples. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 674.0,
  "end": 685.54
 },
 {
  "input": "So with all of that said, every line of code that would go into implementing backprop actually corresponds with something you have now seen, at least in informal terms. ",
  "translatedText": "তাই যে সব বলেন সঙ্গে, কোড প্রতিটি লাইন যে ব্যাকপ্রপ বাস্তবায়নে যেতে হবে আসলে কিছু সঙ্গে মিলে যায় আপনি এখন দেখা হয়েছে, অন্তত অনানুষ্ঠানিক পদে. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 687.24,
  "end": 696.72
 },
 {
  "input": "But sometimes knowing what the math does is only half the battle, and just representing the damn thing is where it gets all muddled and confusing. ",
  "translatedText": "কিন্তু কখনও কখনও গণিত কী করে তা জানা মাত্র অর্ধেক যুদ্ধ, এবং শুধুমাত্র জঘন্য জিনিসটির প্রতিনিধিত্ব করা যেখানে এটি সমস্ত গোলমাল এবং বিভ্রান্তিকর হয়ে যায়।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 697.56,
  "end": 704.12
 },
 {
  "input": "So, for those of you who do want to go deeper, the next video goes through the same ideas that were just presented here, but in terms of the underlying calculus, which should hopefully make it a little more familiar as you see the topic in other resources. ",
  "translatedText": "সুতরাং, আপনারা যারা আরও গভীরে যেতে চান তাদের জন্য, পরবর্তী ভিডিওটি একই ধারণার মধ্য দিয়ে যায় যা এইমাত্র এখানে উপস্থাপিত হয়েছিল, কিন্তু অন্তর্নিহিত ক্যালকুলাসের পরিপ্রেক্ষিতে, যা আশা করি এটিকে আরও একটু পরিচিত করে তুলবে যেহেতু আপনি বিষয়টি দেখতে পাবেন অন্যান্য উৎস. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 704.86,
  "end": 716.42
 },
 {
  "input": "Before that, one thing worth emphasizing is that for this algorithm to work, and this goes for all sorts of machine learning beyond just neural networks, you need a lot of training data. ",
  "translatedText": "তার আগে, একটি বিষয়ের উপর জোর দেওয়া উচিত যে এই অ্যালগরিদমটি কাজ করার জন্য, এবং এটি কেবলমাত্র নিউরাল নেটওয়ার্কের বাইরে সমস্ত ধরণের মেশিন লার্নিংয়ের জন্য যায়, আপনার প্রচুর প্রশিক্ষণ ডেটার প্রয়োজন।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 717.34,
  "end": 725.9
 },
 {
  "input": "In our case, one thing that makes handwritten digits such a nice example is that there exists the MNIST database, with so many examples that have been labeled by humans. ",
  "translatedText": "আমাদের ক্ষেত্রে, একটি জিনিস যা হস্তলিখিত অঙ্কগুলিকে এত সুন্দর উদাহরণ তৈরি করে তা হল MNIST ডাটাবেস রয়েছে, যেখানে অনেক উদাহরণ রয়েছে যা মানুষের দ্বারা লেবেল করা হয়েছে।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 726.42,
  "end": 734.74
 },
 {
  "input": "So a common challenge that those of you working in machine learning will be familiar with is just getting the labeled training data you actually need, whether that's having people label tens of thousands of images, or whatever other data type you might be dealing with. ",
  "translatedText": "তাই একটি সাধারণ চ্যালেঞ্জ যেটির সাথে আপনারা যারা মেশিন লার্নিংয়ে কাজ করছেন তাদের সাথে পরিচিত হবেন শুধুমাত্র আপনার আসলে প্রয়োজনীয় লেবেলযুক্ত প্রশিক্ষণ ডেটা পাওয়া, তাতে মানুষ হাজার হাজার ইমেজ লেবেল করুক বা অন্য যেকোন ডেটা টাইপের সাথে আপনি ডিল করছেন।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 735.3,
  "end": 747.1
 }
]