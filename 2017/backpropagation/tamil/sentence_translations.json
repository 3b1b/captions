[
 {
  "input": "Here, we tackle backpropagation, the core algorithm behind how neural networks learn. ",
  "translatedText": "இங்கே, நரம்பியல் நெட்வொர்க்குகள் எவ்வாறு கற்றுக்கொள்கின்றன என்பதற்குப் பின்னால் உள்ள முக்கிய வழிமுறையான பேக் ப்ரோபேகேஷனைச் சமாளிக்கிறோம். ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 4.06,
  "end": 8.88
 },
 {
  "input": "After a quick recap for where we are, the first thing I'll do is an intuitive walkthrough for what the algorithm is actually doing, without any reference to the formulas. ",
  "translatedText": "நாம் எங்கே இருக்கிறோம் என்பதை விரைவாக மறுபரிசீலனை செய்த பிறகு, நான் முதலில் செய்வேன், அல்காரிதம் உண்மையில் என்ன செய்கிறது என்பதற்கான உள்ளுணர்வு ஒத்திகை, சூத்திரங்களைப் பற்றிய குறிப்பு எதுவுமில்லை. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 9.4,
  "end": 17.0
 },
 {
  "input": "Then, for those of you who do want to dive into the math, the next video goes into the calculus underlying all this. ",
  "translatedText": "பின்னர், உங்களில் கணிதத்தில் முழுக்கு போட விரும்புவோருக்கு, அடுத்த வீடியோ இவை அனைத்திற்கும் அடிப்படையான கால்குலஸில் செல்கிறது. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 17.66,
  "end": 23.02
 },
 {
  "input": "If you watched the last two videos, or if you're just jumping in with the appropriate background, you know what a neural network is, and how it feeds forward information. ",
  "translatedText": "நீங்கள் கடைசி இரண்டு வீடியோக்களைப் பார்த்திருந்தால் அல்லது பொருத்தமான பின்னணியுடன் நீங்கள் குதித்திருந்தால், நரம்பியல் நெட்வொர்க் என்றால் என்ன, அது எவ்வாறு முன்னோக்கி தகவல்களை வழங்குகிறது என்பது உங்களுக்குத் தெரியும். ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 23.82,
  "end": 31.0
 },
 {
  "input": "Here, we're doing the classic example of recognizing handwritten digits whose pixel values get fed into the first layer of the network with 784 neurons, and I've been showing a network with two hidden layers having just 16 neurons each, and an output layer of 10 neurons, indicating which digit the network is choosing as its answer. ",
  "translatedText": "784 நியூரான்கள் கொண்ட நெட்வொர்க்கின் முதல் அடுக்கில் பிக்சல் மதிப்புகள் கொடுக்கப்படும் கையால் எழுதப்பட்ட இலக்கங்களை அங்கீகரிப்பதற்கான சிறந்த உதாரணத்தை நாங்கள் செய்கிறோம், மேலும் இரண்டு மறைக்கப்பட்ட அடுக்குகள் ஒவ்வொன்றும் 16 நியூரான்கள் மற்றும் வெளியீட்டைக் கொண்ட நெட்வொர்க்கைக் காட்டுகிறேன். 10 நியூரான்களின் அடுக்கு, நெட்வொர்க் எந்த இலக்கத்தை அதன் விடையாகத் தேர்ந்தெடுக்கிறது என்பதைக் குறிக்கிறது. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 31.68,
  "end": 49.04
 },
 {
  "input": "I'm also expecting you to understand gradient descent, as described in the last video, and how what we mean by learning is that we want to find which weights and biases minimize a certain cost function. ",
  "translatedText": "கடந்த வீடியோவில் விவரிக்கப்பட்டுள்ளபடி, சாய்வு வம்சாவளியை நீங்கள் புரிந்துகொள்வீர்கள் என்று நான் எதிர்பார்க்கிறேன், மேலும் கற்றல் என்பதன் அர்த்தம் என்னவென்றால், எந்த எடைகள் மற்றும் சார்புகள் ஒரு குறிப்பிட்ட செலவுச் செயல்பாட்டைக் குறைக்கின்றன என்பதைக் கண்டறிய விரும்புகிறோம். ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 50.04,
  "end": 61.26
 },
 {
  "input": "As a quick reminder, for the cost of a single training example, you take the output the network gives, along with the output you wanted it to give, and add up the squares of the differences between each component. ",
  "translatedText": "ஒரு விரைவான நினைவூட்டலாக, ஒற்றைப் பயிற்சியின் விலைக்கு, நெட்வொர்க் தரும் வெளியீட்டையும், நீங்கள் கொடுக்க விரும்பிய வெளியீட்டையும் எடுத்து, ஒவ்வொரு கூறுக்கும் இடையே உள்ள வேறுபாடுகளின் சதுரங்களைக் கூட்டவும். ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 62.04,
  "end": 74.6
 },
 {
  "input": "Doing this for all of your tens of thousands of training examples and averaging the results, this gives you the total cost of the network. ",
  "translatedText": "உங்களின் பல்லாயிரக்கணக்கான பயிற்சி எடுத்துக்காட்டுகள் மற்றும் முடிவுகளைச் சராசரியாகக் கொண்டு இதைச் செய்தால், இது நெட்வொர்க்கின் மொத்தச் செலவை உங்களுக்கு வழங்குகிறது. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 75.38,
  "end": 82.2
 },
 {
  "input": "As if that's not enough to think about, as described in the last video, the thing that we're looking for is the negative gradient of this cost function, which tells you how you need to change all of the weights and biases, all of these connections, so as to most efficiently decrease the cost. ",
  "translatedText": "கடந்த வீடியோவில் விவரிக்கப்பட்டுள்ளதைப் பற்றி சிந்திக்க இது போதாது என்பது போல், இந்த செலவு செயல்பாட்டின் எதிர்மறை சாய்வு, எடைகள் மற்றும் சார்புகள் அனைத்தையும் நீங்கள் எவ்வாறு மாற்ற வேண்டும் என்று உங்களுக்குச் சொல்கிறது. இந்த இணைப்புகள், மிகவும் திறமையாக செலவைக் குறைக்கும். ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 82.2,
  "end": 98.32
 },
 {
  "input": "Backpropagation, the topic of this video, is an algorithm for computing that crazy complicated gradient. ",
  "translatedText": "இந்த வீடியோவின் தலைப்பு Backpropagation, அந்த பைத்தியக்காரத்தனமான சிக்கலான சாய்வைக் கணக்கிடுவதற்கான அல்காரிதம் ஆகும். ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 103.26,
  "end": 108.58
 },
 {
  "input": "The one idea from the last video that I really want you to hold firmly in your mind right now is that because thinking of the gradient vector as a direction in 13,000 dimensions is, to put it lightly, beyond the scope of our imaginations, there's another way you can think about it. ",
  "translatedText": "கடைசி வீடியோவின் ஒரு யோசனை என்னவென்றால், நீங்கள் இப்போது உங்கள் மனதில் உறுதியாக இருக்க வேண்டும் என்று நான் விரும்புகிறேன், ஏனெனில் சாய்வு திசையன் 13,000 பரிமாணங்களில் ஒரு திசையாக நினைப்பது, அதை லேசாகச் சொன்னால், நம் கற்பனைகளுக்கு அப்பாற்பட்டது, இன்னொன்று உள்ளது. நீங்கள் அதைப் பற்றி சிந்திக்கும் விதம். ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 109.14,
  "end": 123.58
 },
 {
  "input": "The magnitude of each component here is telling you how sensitive the cost function is to each weight and bias. ",
  "translatedText": "இங்குள்ள ஒவ்வொரு கூறுகளின் அளவும், ஒவ்வொரு எடை மற்றும் சார்புக்கும் செலவு செயல்பாடு எவ்வளவு உணர்திறன் கொண்டது என்பதை உங்களுக்குச் சொல்கிறது. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 124.6,
  "end": 130.94
 },
 {
  "input": "For example, let's say you go through the process I'm about to describe, and compute the negative gradient, and the component associated with the weight on this edge here comes out to be 3.2, while the component associated with this edge here comes out as 0.1. ",
  "translatedText": "எடுத்துக்காட்டாக, நான் விவரிக்கவிருக்கும் செயல்முறையை நீங்கள் கடந்து, எதிர்மறை சாய்வைக் கணக்கிடுங்கள், மேலும் இந்த விளிம்பில் உள்ள எடையுடன் தொடர்புடைய கூறு 3 ஆக இருக்கும். 2, இந்த விளிம்புடன் தொடர்புடைய கூறு 0 ஆக வெளிவருகிறது. 1. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 131.8,
  "end": 146.26
 },
 {
  "input": "The way you would interpret that is that the cost of the function is 32 times more sensitive to changes in that first weight, so if you were to wiggle that value a little bit, it's going to cause some change to the cost, and that change is 32 times greater than what the same wiggle to that second weight would give. ",
  "translatedText": "நீங்கள் அதை விளக்கும் விதம் என்னவென்றால், செயல்பாட்டின் விலை அந்த முதல் எடையில் ஏற்படும் மாற்றங்களுக்கு 32 மடங்கு அதிக உணர்திறன் கொண்டது, எனவே நீங்கள் அந்த மதிப்பை சிறிது அசைத்தால், அது செலவில் சில மாற்றங்களை ஏற்படுத்தும், மேலும் அந்த மாற்றத்தை ஏற்படுத்தும். அந்த இரண்டாவது எடைக்கு அதே அசைவு தரும் அளவை விட 32 மடங்கு அதிகம். ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 146.82,
  "end": 163.06
 },
 {
  "input": "Personally, when I was first learning about backpropagation, I think the most confusing aspect was just the notation and index chasing of it all. ",
  "translatedText": "தனிப்பட்ட முறையில், நான் முதன்முதலில் backpropagation பற்றி கற்றுக்கொண்டபோது, மிகவும் குழப்பமான அம்சம் எல்லாவற்றின் குறிப்பீடு மற்றும் குறியீட்டு துரத்தல் மட்டுமே என்று நினைக்கிறேன். ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 168.42,
  "end": 175.74
 },
 {
  "input": "But once you unwrap what each part of this algorithm is really doing, each individual effect it's having is actually pretty intuitive, it's just that there's a lot of little adjustments getting layered on top of each other. ",
  "translatedText": "ஆனால் இந்த அல்காரிதத்தின் ஒவ்வொரு பகுதியும் உண்மையில் என்ன செய்கிறது என்பதை நீங்கள் அவிழ்த்துவிட்டால், அது கொண்டிருக்கும் ஒவ்வொரு தனிப்பட்ட விளைவும் உண்மையில் மிகவும் உள்ளுணர்வுடன் இருக்கும், அது ஒன்றுக்கொன்று மேல் அடுக்கி வைக்கப்படும் சிறிய மாற்றங்கள் நிறைய உள்ளன. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 176.22,
  "end": 186.64
 },
 {
  "input": "So I'm going to start things off here with a complete disregard for the notation, and just step through the effects each training example has on the weights and biases. ",
  "translatedText": "எனவே, குறிப்பீட்டை முற்றிலும் புறக்கணித்துவிட்டு, ஒவ்வொரு பயிற்சி எடுத்துக்காட்டும் எடைகள் மற்றும் சார்புகளில் ஏற்படுத்தும் விளைவுகளைப் பற்றி நான் இங்கே தொடங்கப் போகிறேன். ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 187.74,
  "end": 196.12
 },
 {
  "input": "Because the cost function involves averaging a certain cost per example over all the tens of thousands of training examples, the way we adjust the weights and biases for a single gradient descent step also depends on every single example. ",
  "translatedText": "பல்லாயிரக்கணக்கான பயிற்சி எடுத்துக்காட்டுகளை விட ஒரு எடுத்துக்காட்டுக்கு ஒரு குறிப்பிட்ட செலவை செலவுச் செயல்பாடு உள்ளடக்கியிருப்பதால், ஒரு சாய்வு இறங்கு படிக்கான எடைகள் மற்றும் சார்புகளை நாம் சரிசெய்யும் விதம் ஒவ்வொரு உதாரணத்தையும் சார்ந்துள்ளது. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 197.02,
  "end": 211.04
 },
 {
  "input": "Or rather, in principle it should, but for computational efficiency we'll do a little trick later to keep you from needing to hit every single example for every step. ",
  "translatedText": "அல்லது மாறாக, கொள்கையளவில் அது இருக்க வேண்டும், ஆனால் கணக்கீட்டு செயல்திறனுக்காக, ஒவ்வொரு அடியிலும் ஒவ்வொரு உதாரணத்தையும் நீங்கள் அடிக்க வேண்டிய அவசியமில்லை. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 211.68,
  "end": 219.2
 },
 {
  "input": "In other cases, right now, all we're going to do is focus our attention on one single example, this image of a 2. ",
  "translatedText": "மற்ற சந்தர்ப்பங்களில், இப்போது, நாம் செய்யப் போவது ஒரே ஒரு உதாரணம், 2-ன் இந்த படத்தில் கவனம் செலுத்துவதுதான். ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 219.2,
  "end": 225.96
 },
 {
  "input": "What effect should this one training example have on how the weights and biases get adjusted? ",
  "translatedText": "எடைகள் மற்றும் சார்புகள் எவ்வாறு சரிசெய்யப்படுகின்றன என்பதில் இந்த ஒரு பயிற்சி உதாரணம் என்ன விளைவை ஏற்படுத்த வேண்டும்? ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 226.72,
  "end": 231.48
 },
 {
  "input": "Let's say we're at a point where the network is not well trained yet, so the activations in the output are going to look pretty random, maybe something like 0.5, 0.8, 0.2, on and on. ",
  "translatedText": "நெட்வொர்க் இன்னும் நன்கு பயிற்சி பெறாத ஒரு கட்டத்தில் நாங்கள் இருக்கிறோம் என்று வைத்துக்கொள்வோம், எனவே வெளியீட்டில் உள்ள செயல்பாடுகள் மிகவும் சீரற்றதாக இருக்கும், ஒருவேளை 0 போன்றது. 5, 0.8, 0.2, மற்றும் மேலும். ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 232.68,
  "end": 242.0
 },
 {
  "input": "We can't directly change those activations, we only have influence on the weights and biases, but it's helpful to keep track of which adjustments we wish should take place to that output layer. ",
  "translatedText": "அந்தச் செயல்பாடுகளை எங்களால் நேரடியாக மாற்ற முடியாது, எடைகள் மற்றும் சார்புகளில் மட்டுமே எங்களிடம் செல்வாக்கு உள்ளது, ஆனால் அந்த வெளியீட்டு அடுக்கில் எந்த மாற்றங்களைச் செய்ய விரும்புகிறோம் என்பதைக் கண்காணிப்பது உதவியாக இருக்கும். ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 242.52,
  "end": 252.58
 },
 {
  "input": "And since we want it to classify the image as a 2, we want that third value to get nudged up while all the others get nudged down. ",
  "translatedText": "படத்தை 2 ஆக வகைப்படுத்த வேண்டும் என்பதால், மற்ற அனைத்தும் கீழே தள்ளப்படும் போது அந்த மூன்றாவது மதிப்பு உயர்த்தப்பட வேண்டும் என்று நாங்கள் விரும்புகிறோம். ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 253.36,
  "end": 261.26
 },
 {
  "input": "Moreover, the sizes of these nudges should be proportional to how far away each current value is from its target value. ",
  "translatedText": "மேலும், இந்த நட்ஜ்களின் அளவுகள் ஒவ்வொரு தற்போதைய மதிப்பும் அதன் இலக்கு மதிப்பிலிருந்து எவ்வளவு தொலைவில் உள்ளது என்பதற்கு விகிதாசாரமாக இருக்க வேண்டும். ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 262.06,
  "end": 269.52
 },
 {
  "input": "For example, the increase to that number 2 neuron's activation is in a sense more important than the decrease to the number 8 neuron, which is already pretty close to where it should be. ",
  "translatedText": "எடுத்துக்காட்டாக, அந்த எண் 2 நியூரானின் செயல்பாட்டின் அதிகரிப்பு ஒரு வகையில் எண் 8 நியூரானின் குறைவை விட முக்கியமானது, இது ஏற்கனவே இருக்கும் இடத்திற்கு மிக அருகில் உள்ளது. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 270.22,
  "end": 280.9
 },
 {
  "input": "So zooming in further, let's focus just on this one neuron, the one whose activation we wish to increase. ",
  "translatedText": "எனவே மேலும் பெரிதாக்குவதன் மூலம், இந்த ஒரு நியூரானில் கவனம் செலுத்துவோம், அதன் செயல்பாட்டை அதிகரிக்க விரும்புகிறோம். ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 282.04,
  "end": 287.28
 },
 {
  "input": "Remember, that activation is defined as a certain weighted sum of all the activations in the previous layer, plus a bias, which is all then plugged into something like the sigmoid squishification function, or a ReLU. ",
  "translatedText": "நினைவில் கொள்ளுங்கள், அந்தச் செயல்படுத்தல் என்பது முந்தைய லேயரில் உள்ள அனைத்து செயல்பாடுகளின் ஒரு குறிப்பிட்ட எடையுள்ள தொகையாக வரையறுக்கப்படுகிறது, மேலும் ஒரு சார்பு, இவை அனைத்தும் சிக்மாய்டு ஸ்க்விஷிஃபிகேஷன் செயல்பாடு அல்லது ReLU போன்றவற்றில் செருகப்படுகின்றன. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 288.18,
  "end": 301.04
 },
 {
  "input": "So there are three different avenues that can team up together to help increase that activation. ",
  "translatedText": "எனவே, அந்தச் செயல்பாட்டை அதிகரிக்க உதவும் வகையில் மூன்று வெவ்வேறு வழிகள் ஒன்றுசேரலாம். ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 301.64,
  "end": 307.02
 },
 {
  "input": "You can increase the bias, you can increase the weights, and you can change the activations from the previous layer. ",
  "translatedText": "நீங்கள் சார்புகளை அதிகரிக்கலாம், எடையை அதிகரிக்கலாம் மற்றும் முந்தைய லேயரில் இருந்து செயல்படுத்தல்களை மாற்றலாம். ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 307.44,
  "end": 314.04
 },
 {
  "input": "Focusing on how the weights should be adjusted, notice how the weights actually have differing levels of influence. ",
  "translatedText": "எடைகள் எவ்வாறு சரிசெய்யப்பட வேண்டும் என்பதில் கவனம் செலுத்துவதன் மூலம், எடைகள் உண்மையில் எவ்வாறு வெவ்வேறு அளவிலான செல்வாக்கைக் கொண்டுள்ளன என்பதைக் கவனியுங்கள். ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 314.94,
  "end": 320.86
 },
 {
  "input": "The connections with the brightest neurons from the preceding layer have the biggest effect since those weights are multiplied by larger activation values. ",
  "translatedText": "முந்தைய அடுக்கில் இருந்து பிரகாசமான நியூரான்களுடனான இணைப்புகள் மிகப்பெரிய விளைவைக் கொண்டுள்ளன, ஏனெனில் அந்த எடைகள் பெரிய செயல்படுத்தும் மதிப்புகளால் பெருக்கப்படுகின்றன. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 321.44,
  "end": 329.1
 },
 {
  "input": "So if you were to increase one of those weights, it actually has a stronger influence on the ultimate cost function than increasing the weights of connections with dimmer neurons, at least as far as this one training example is concerned. ",
  "translatedText": "ஆகவே, அந்த எடைகளில் ஒன்றை நீங்கள் அதிகரிக்க விரும்பினால், அது உண்மையில் மங்கலான நியூரான்களுடன் இணைப்புகளின் எடையை அதிகரிப்பதை விட இறுதி செலவு செயல்பாட்டில் வலுவான தாக்கத்தை ஏற்படுத்துகிறது, குறைந்தபட்சம் இந்த ஒரு பயிற்சி உதாரணத்தைப் பொருத்தவரை. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 331.46,
  "end": 343.48
 },
 {
  "input": "Remember, when we talk about gradient descent, we don't just care about whether each component should get nudged up or down, we care about which ones give you the most bang for your buck. ",
  "translatedText": "நாம் சாய்வு வம்சாவளியைப் பற்றி பேசும்போது, ஒவ்வொரு கூறுகளும் மேலே அல்லது கீழே தள்ளப்பட வேண்டுமா என்பதைப் பற்றி மட்டும் நாங்கள் கவலைப்படுவதில்லை, எது உங்கள் பணத்திற்கு அதிக வெற்றியைத் தருகிறது என்பதில் நாங்கள் அக்கறை கொள்கிறோம். ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 344.42,
  "end": 353.22
 },
 {
  "input": "This, by the way, is at least somewhat reminiscent of a theory in neuroscience for how biological networks of neurons learn, Hebbian theory, often summed up in the phrase, neurons that fire together wire together. ",
  "translatedText": "இது, நியூரான்களின் உயிரியல் நெட்வொர்க்குகள் எவ்வாறு கற்றுக்கொள்கின்றன என்பதற்கான நரம்பியல் அறிவியலில் உள்ள ஒரு கோட்பாட்டை ஓரளவு நினைவூட்டுகிறது, ஹெபியன் கோட்பாடு, பெரும்பாலும் சொற்றொடரில் சுருக்கப்பட்டுள்ளது, நியூரான்கள் ஒன்றாக இணைக்கப்படுகின்றன. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 355.02,
  "end": 366.46
 },
 {
  "input": "Here, the biggest increases to weights, the biggest strengthening of connections, happens between neurons which are the most active and the ones which we wish to become more active. ",
  "translatedText": "இங்கே, எடையில் மிகப்பெரிய அதிகரிப்பு, இணைப்புகளின் மிகப்பெரிய வலுவூட்டல், மிகவும் சுறுசுறுப்பாக இருக்கும் நியூரான்களுக்கு இடையில் நிகழ்கிறது மற்றும் நாம் அதிக சுறுசுறுப்பாக இருக்க விரும்புகிறோம். ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 367.26,
  "end": 377.28
 },
 {
  "input": "In a sense, the neurons that are firing while seeing a 2 get more strongly linked to those firing when thinking about it. ",
  "translatedText": "ஒரு வகையில், 2 ஐப் பார்க்கும்போது சுடும் நியூரான்கள் அதைப் பற்றி சிந்திக்கும்போது சுடுபவர்களுடன் மிகவும் வலுவாக இணைக்கப்படுகின்றன. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 377.94,
  "end": 384.48
 },
 {
  "input": "To be clear, I'm not in a position to make statements one way or another about whether artificial networks of neurons behave anything like biological brains, and this fires together wire together idea comes with a couple meaningful asterisks, but taken as a very loose analogy, I find it interesting to note. ",
  "translatedText": "தெளிவாகச் சொல்வதென்றால், நியூரான்களின் செயற்கை வலையமைப்புகள் உயிரியல் மூளைகளைப் போன்று செயல்படுகின்றனவா என்பதைப் பற்றி ஏதாவது ஒரு வகையில் அறிக்கைகளை வெளியிட நான் இல்லை ஒப்புமை, நான் அதை கவனிக்க சுவாரஸ்யமாக உணர்கிறேன். ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 385.4,
  "end": 401.02
 },
 {
  "input": "Anyway, the third way we can help increase this neuron's activation is by changing all the activations in the previous layer. ",
  "translatedText": "எப்படியிருந்தாலும், இந்த நியூரானின் செயல்பாட்டை அதிகரிக்க உதவும் மூன்றாவது வழி, முந்தைய அடுக்கில் உள்ள அனைத்து செயல்பாடுகளையும் மாற்றுவதாகும். ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 401.94,
  "end": 409.04
 },
 {
  "input": "Namely, if everything connected to that digit 2 neuron with a positive weight got brighter, and if everything connected with a negative weight got dimmer, then that digit 2 neuron would become more active. ",
  "translatedText": "அதாவது, அந்த இலக்க 2 நியூரானுடன் நேர்மறை எடையுடன் இணைக்கப்பட்ட அனைத்தும் பிரகாசமாகி, எதிர்மறை எடையுடன் இணைக்கப்பட்ட அனைத்தும் மங்கலாக இருந்தால், அந்த இலக்க 2 நியூரான் மிகவும் செயலில் இருக்கும். ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 409.04,
  "end": 420.68
 },
 {
  "input": "And similar to the weight changes, you're going to get the most bang for your buck by seeking changes that are proportional to the size of the corresponding weights. ",
  "translatedText": "மற்றும் எடை மாற்றங்களைப் போலவே, தொடர்புடைய எடைகளின் அளவிற்கு விகிதாசாரமாக மாற்றங்களைத் தேடுவதன் மூலம் உங்கள் பணத்திற்காக நீங்கள் அதிக வெற்றியைப் பெறப் போகிறீர்கள். ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 422.54,
  "end": 430.28
 },
 {
  "input": "Now of course, we cannot directly influence those activations, we only have control over the weights and biases. ",
  "translatedText": "இப்போது நிச்சயமாக, அந்த செயல்பாடுகளை நாம் நேரடியாக பாதிக்க முடியாது, எடைகள் மற்றும் சார்புகளின் மீது மட்டுமே எங்களிடம் கட்டுப்பாடு உள்ளது. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 432.14,
  "end": 437.48
 },
 {
  "input": "But just as with the last layer, it's helpful to keep a note of what those desired changes are. ",
  "translatedText": "ஆனால் கடைசி லேயரைப் போலவே, விரும்பிய மாற்றங்கள் என்ன என்பதைக் குறித்து வைத்துக் கொள்வது உதவியாக இருக்கும். ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 437.48,
  "end": 444.12
 },
 {
  "input": "But keep in mind, zooming out one step here, this is only what that digit 2 output neuron wants. ",
  "translatedText": "ஆனால் நினைவில் கொள்ளுங்கள், இங்கே ஒரு படியை பெரிதாக்கினால், அந்த இலக்க 2 வெளியீட்டு நியூரான் விரும்புவது இதுதான். ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 444.58,
  "end": 449.2
 },
 {
  "input": "Remember, we also want all the other neurons in the last layer to become less active, and each of those other output neurons has its own thoughts about what should happen to that second to last layer. ",
  "translatedText": "நினைவில் வைத்து கொள்ளுங்கள், கடைசி அடுக்கில் உள்ள மற்ற அனைத்து நியூரான்களும் குறைவான செயலில் இருக்க வேண்டும் என்று நாங்கள் விரும்புகிறோம், மேலும் அந்த மற்ற வெளியீடு நியூரான்கள் ஒவ்வொன்றும் அந்த இரண்டாவது முதல் கடைசி அடுக்குக்கு என்ன நடக்க வேண்டும் என்பதைப் பற்றி அதன் சொந்த எண்ணங்களைக் கொண்டுள்ளன. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 449.76,
  "end": 459.6
 },
 {
  "input": "So the desire of this digit 2 neuron is added together with the desires of all the other output neurons for what should happen to this second to last layer, again in proportion to the corresponding weights, and in proportion to how much each of those neurons needs to change. ",
  "translatedText": "எனவே, இந்த இலக்கம் 2 நியூரானின் ஆசை, இந்த வினாடி முதல் கடைசி அடுக்கு வரை என்ன நடக்க வேண்டும் என்பதற்கான மற்ற அனைத்து வெளியீட்டு நியூரான்களின் ஆசைகளுடன், மீண்டும் தொடர்புடைய எடைகளின் விகிதத்தில், மேலும் அந்த நியூரான்கள் ஒவ்வொன்றும் எவ்வளவு தேவை என்ற விகிதத்தில் சேர்க்கப்படுகிறது. மாற்ற. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 462.7,
  "end": 480.72
 },
 {
  "input": "This right here is where the idea of propagating backwards comes in. ",
  "translatedText": "இங்குதான் பின்னோக்கி பிரச்சாரம் செய்யும் எண்ணம் வருகிறது. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 481.6,
  "end": 485.48
 },
 {
  "input": "By adding together all these desired effects, you basically get a list of nudges that you want to happen to this second to last layer. ",
  "translatedText": "இந்த விரும்பிய விளைவுகள் அனைத்தையும் ஒன்றாகச் சேர்ப்பதன் மூலம், இந்த வினாடி முதல் கடைசி அடுக்கு வரை நீங்கள் நடக்க விரும்பும் நட்ஜ்களின் பட்டியலைப் பெறுவீர்கள். ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 485.82,
  "end": 493.36
 },
 {
  "input": "And once you have those, you can recursively apply the same process to the relevant weights and biases that determine those values, repeating the same process I just walked through and moving backwards through the network. ",
  "translatedText": "நீங்கள் அவற்றைப் பெற்றவுடன், அந்த மதிப்புகளைத் தீர்மானிக்கும் தொடர்புடைய எடைகள் மற்றும் சார்புகளுக்கு அதே செயல்முறையை மீண்டும் மீண்டும் பயன்படுத்தலாம், நான் நடந்துகொண்ட அதே செயல்முறையை மீண்டும் செய்து பிணையத்தின் மூலம் பின்னோக்கி நகர்த்தலாம். ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 494.22,
  "end": 505.1
 },
 {
  "input": "And zooming out a bit further, remember that this is all just how a single training example wishes to nudge each one of those weights and biases. ",
  "translatedText": "மேலும் சிறிது சிறிதாக பெரிதாக்கினால், ஒரு பயிற்சி உதாரணம் அந்த எடைகள் மற்றும் சார்புகளில் ஒவ்வொன்றையும் எப்படித் தூண்ட விரும்புகிறது என்பதை நினைவில் கொள்ளுங்கள். ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 508.96,
  "end": 517.0
 },
 {
  "input": "If we only listened to what that 2 wanted, the network would ultimately be incentivized just to classify all images as a 2. ",
  "translatedText": "அந்த 2 விரும்புவதை மட்டும் நாம் செவிமடுத்தால், எல்லாப் படங்களையும் 2 என வகைப்படுத்த நெட்வொர்க் இறுதியில் ஊக்குவிக்கப்படும். ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 517.48,
  "end": 523.22
 },
 {
  "input": "So what you do is go through this same backprop routine for every other training example, recording how each of them would like to change the weights and biases, and average together those desired changes. ",
  "translatedText": "எனவே, நீங்கள் செய்வது என்னவென்றால், ஒவ்வொரு மற்ற பயிற்சி உதாரணத்திற்கும் இதே பேக்ப்ராப் வழக்கத்தை கடைப்பிடித்து, அவை ஒவ்வொன்றும் எடைகள் மற்றும் சார்புகளை எவ்வாறு மாற்ற விரும்புகின்றன என்பதைப் பதிவுசெய்து, விரும்பிய மாற்றங்களை ஒன்றாகச் சேர்த்து சராசரியாகச் செய்யலாம். ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 524.06,
  "end": 536.0
 },
 {
  "input": "This collection here of the averaged nudges to each weight and bias is, loosely speaking, the negative gradient of the cost function referenced in the last video, or at least something proportional to it. ",
  "translatedText": "ஒவ்வொரு எடை மற்றும் சார்புக்குமான சராசரி நட்ஜ்களின் இந்தத் தொகுப்பு, கடந்த வீடியோவில் குறிப்பிடப்பட்ட செலவுச் செயல்பாட்டின் எதிர்மறை சாய்வு அல்லது குறைந்தபட்சம் அதற்கு விகிதாசாரமாகும். ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 541.72,
  "end": 553.68
 },
 {
  "input": "I say loosely speaking only because I have yet to get quantitatively precise about those nudges, but if you understood every change I just referenced, why some are proportionally bigger than others, and how they all need to be added together, you understand the mechanics for what backpropagation is actually doing. ",
  "translatedText": "நான் தளர்வாகப் பேசுகிறேன், ஏனென்றால் நான் அந்த நுணுக்கங்களைப் பற்றி இன்னும் துல்லியமாகப் பெறவில்லை, ஆனால் நான் குறிப்பிட்ட ஒவ்வொரு மாற்றத்தையும் நீங்கள் புரிந்து கொண்டால், சில ஏன் மற்றவர்களை விட விகிதாசார அளவில் பெரியவை, மற்றும் அவை அனைத்தையும் எவ்வாறு ஒன்றாகச் சேர்க்க வேண்டும், அதற்கான இயக்கவியல் உங்களுக்குப் புரியும். Backpropagation உண்மையில் என்ன செய்கிறது. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 554.38,
  "end": 571.0
 },
 {
  "input": "By the way, in practice, it takes computers an extremely long time to add up the influence of every training example every gradient descent step. ",
  "translatedText": "மூலம், நடைமுறையில், ஒவ்வொரு பயிற்சி உதாரணத்தின் ஒவ்வொரு சாய்வு வம்சாவளியின் செல்வாக்கைச் சேர்க்க கணினிகள் மிக நீண்ட நேரம் எடுக்கும். ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 573.96,
  "end": 582.44
 },
 {
  "input": "So here's what's commonly done instead. ",
  "translatedText": "அதற்கு பதிலாக பொதுவாக செய்யப்படுவது இங்கே. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 583.14,
  "end": 584.82
 },
 {
  "input": "You randomly shuffle your training data and divide it into a whole bunch of mini-batches, let's say each one having 100 training examples. ",
  "translatedText": "நீங்கள் உங்கள் பயிற்சித் தரவைத் தோராயமாக மாற்றி, மினி-பேட்ச்களாகப் பிரிக்கிறீர்கள், ஒவ்வொன்றும் 100 பயிற்சி உதாரணங்களைக் கொண்டிருப்பதாக வைத்துக்கொள்வோம். ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 585.48,
  "end": 592.42
 },
 {
  "input": "Then you compute a step according to the mini-batch. ",
  "translatedText": "பின்னர் நீங்கள் மினி-தொகுப்பு படி ஒரு படி கணக்கிட. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 592.94,
  "end": 596.2
 },
 {
  "input": "It's not the actual gradient of the cost function, which depends on all of the training data, not this tiny subset, so it's not the most efficient step downhill, but each mini-batch does give you a pretty good approximation, and more importantly it gives you a significant computational speedup. ",
  "translatedText": "இது செலவு செயல்பாட்டின் உண்மையான சாய்வு அல்ல, இது அனைத்து பயிற்சி தரவையும் சார்ந்துள்ளது, இந்த சிறிய துணைக்குழு அல்ல, எனவே இது மிகவும் திறமையான கீழ்நோக்கிய படி அல்ல, ஆனால் ஒவ்வொரு சிறு தொகுதியும் உங்களுக்கு ஒரு நல்ல தோராயத்தை தருகிறது, மேலும் முக்கியமாக இது குறிப்பிடத்தக்க கணக்கீட்டு வேகத்தை உங்களுக்கு வழங்குகிறது. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 596.96,
  "end": 612.12
 },
 {
  "input": "If you were to plot the trajectory of your network under the relevant cost surface, it would be a little more like a drunk man stumbling aimlessly down a hill but taking quick steps, rather than a carefully calculating man determining the exact downhill direction of each step before taking a very slow and careful step in that direction. ",
  "translatedText": "உங்கள் நெட்வொர்க்கின் பாதையை தொடர்புடைய செலவின் மேற்பரப்பின் கீழ் நீங்கள் திட்டமிடினால், அது ஒரு குடிகாரன் ஒரு குன்றின் மீது இலக்கில்லாமல் தடுமாறித் தடுமாறி விரைவாக அடியெடுத்து வைப்பது போலாகும் அந்த திசையில் மிகவும் மெதுவாகவும் கவனமாகவும் அடியெடுத்து வைப்பதற்கு முன். ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 612.82,
  "end": 630.16
 },
 {
  "input": "This technique is referred to as stochastic gradient descent. ",
  "translatedText": "இந்த நுட்பம் சீரற்ற சாய்வு வம்சாவளி என்று குறிப்பிடப்படுகிறது. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 631.54,
  "end": 634.66
 },
 {
  "input": "There's a lot going on here, so let's just sum it up for ourselves, shall we? ",
  "translatedText": "இங்கே நிறைய நடக்கிறது, எனவே அதை நமக்காக சுருக்கமாகக் கூறுவோம், இல்லையா? ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 635.96,
  "end": 639.62
 },
 {
  "input": "Backpropagation is the algorithm for determining how a single training example would like to nudge the weights and biases, not just in terms of whether they should go up or down, but in terms of what relative proportions to those changes cause the most rapid decrease to the cost. ",
  "translatedText": "Backpropagation என்பது ஒரு ஒற்றை பயிற்சி உதாரணம் எடைகள் மற்றும் சார்புகளை எவ்வாறு தூண்டுகிறது என்பதை தீர்மானிப்பதற்கான வழிமுறையாகும், ஆனால் அவை மேலே செல்ல வேண்டுமா அல்லது கீழே செல்ல வேண்டுமா என்பதன் அடிப்படையில் மட்டும் அல்ல, ஆனால் அந்த மாற்றங்களுக்கான தொடர்புடைய விகிதாச்சாரத்தின் அடிப்படையில் மிக விரைவான குறைவு ஏற்படுகிறது. செலவு. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 640.44,
  "end": 655.56
 },
 {
  "input": "A true gradient descent step would involve doing this for all your tens and thousands of training examples and averaging the desired changes you get, but that's computationally slow, so instead you randomly subdivide the data into mini-batches and compute each step with respect to a mini-batch. ",
  "translatedText": "ஒரு உண்மையான சாய்வு வம்சாவளி படி உங்கள் பல்லாயிரக்கணக்கான பயிற்சி எடுத்துக்காட்டுகளுக்கு இதைச் செய்வதையும், நீங்கள் பெறும் விரும்பிய மாற்றங்களைச் சராசரியாகக் கணக்கிடுவதையும் உள்ளடக்கியிருக்கும், ஆனால் இது கணக்கீட்டில் மெதுவாக உள்ளது, எனவே நீங்கள் தோராயமாகத் தரவை சிறு தொகுதிகளாகப் பிரித்து ஒவ்வொரு அடியையும் கணக்கிட்டுப் பார்க்கவும். சிறு தொகுதி. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 656.26,
  "end": 673.24
 },
 {
  "input": "Repeatedly going through all the mini-batches and making these adjustments, you will converge towards a local minimum of the cost function, which is to say your network will end up doing a really good job on the training examples. ",
  "translatedText": "மீண்டும் மீண்டும் அனைத்து மினி-பேட்சுகளையும் கடந்து, இந்த மாற்றங்களைச் செய்தால், உள்ளூர் குறைந்தபட்ச செலவுச் செயல்பாட்டை நோக்கி நீங்கள் ஒன்றிணைவீர்கள், அதாவது பயிற்சி எடுத்துக்காட்டுகளில் உங்கள் நெட்வொர்க் ஒரு நல்ல வேலையைச் செய்து முடிக்கும். ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 674.0,
  "end": 685.54
 },
 {
  "input": "So with all of that said, every line of code that would go into implementing backprop actually corresponds with something you have now seen, at least in informal terms. ",
  "translatedText": "எனவே அனைத்து என்று கூறினார், என்று குறியீடு ஒவ்வொரு வரி உண்மையில் பேக்ப்ராப் செயல்படுத்த செல்லும் என்று நீங்கள் இப்போது பார்த்த ஏதாவது ஒத்துள்ளது, குறைந்தபட்சம் முறைசாரா வகையில். ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 687.24,
  "end": 696.72
 },
 {
  "input": "But sometimes knowing what the math does is only half the battle, and just representing the damn thing is where it gets all muddled and confusing. ",
  "translatedText": "ஆனால் சில சமயங்களில் கணிதம் என்ன செய்கிறது என்பதை அறிவது பாதிப் போராகும், மேலும் மோசமான விஷயத்தைப் பிரதிநிதித்துவப்படுத்துவது என்பது குழப்பமாகவும் குழப்பமாகவும் இருக்கும். ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 697.56,
  "end": 704.12
 },
 {
  "input": "So, for those of you who do want to go deeper, the next video goes through the same ideas that were just presented here, but in terms of the underlying calculus, which should hopefully make it a little more familiar as you see the topic in other resources. ",
  "translatedText": "எனவே, உங்களில் ஆழமாகச் செல்ல விரும்புவோருக்கு, அடுத்த வீடியோ இங்கே வழங்கப்பட்ட அதே யோசனைகளின் வழியாக செல்கிறது, ஆனால் அடிப்படை கால்குலஸின் அடிப்படையில், நீங்கள் தலைப்பைப் பார்க்கும்போது அதை இன்னும் கொஞ்சம் நன்கு அறிந்திருக்க வேண்டும். மற்ற வளங்கள். ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 704.86,
  "end": 716.42
 },
 {
  "input": "Before that, one thing worth emphasizing is that for this algorithm to work, and this goes for all sorts of machine learning beyond just neural networks, you need a lot of training data. ",
  "translatedText": "அதற்கு முன், வலியுறுத்த வேண்டிய ஒரு விஷயம் என்னவென்றால், இந்த அல்காரிதம் வேலை செய்ய, இது நரம்பியல் நெட்வொர்க்குகளைத் தாண்டி அனைத்து வகையான இயந்திர கற்றலுக்கும் செல்கிறது, உங்களுக்கு நிறைய பயிற்சி தரவு தேவை. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 717.34,
  "end": 725.9
 },
 {
  "input": "In our case, one thing that makes handwritten digits such a nice example is that there exists the MNIST database, with so many examples that have been labeled by humans. ",
  "translatedText": "எங்கள் விஷயத்தில், கையால் எழுதப்பட்ட இலக்கங்களை ஒரு நல்ல உதாரணமாக்கும் ஒரு விஷயம் என்னவென்றால், மனிதர்களால் பெயரிடப்பட்ட பல எடுத்துக்காட்டுகளுடன் MNIST தரவுத்தளம் உள்ளது. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 726.42,
  "end": 734.74
 },
 {
  "input": "So a common challenge that those of you working in machine learning will be familiar with is just getting the labeled training data you actually need, whether that's having people label tens of thousands of images, or whatever other data type you might be dealing with. ",
  "translatedText": "இயந்திரக் கற்றலில் பணிபுரிபவர்களுக்குத் தெரிந்திருக்கும் ஒரு பொதுவான சவாலானது, உங்களுக்குத் தேவையான லேபிளிடப்பட்ட பயிற்சித் தரவைப் பெறுவதுதான். ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 735.3,
  "end": 747.1
 }
]