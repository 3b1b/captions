1
00:00:03,900 --> 00:00:09,040
In the main video on cryptocurrencies, I made two references to situations where in order

2
00:00:09,040 --> 00:00:14,760
to break a given piece of security, you would have to guess a specific string of 256 bits.

3
00:00:15,440 --> 00:00:19,040
One of these was in the context of digital signatures, and the other in the context of

4
00:00:19,040 --> 00:00:20,560
a cryptographic hash function.

5
00:00:21,200 --> 00:00:26,740
For example, if you want to find a message whose SHA-256 hash is some specific string

6
00:00:26,740 --> 00:00:32,980
of 256 bits, you have no better method than to just guess and check random messages.

7
00:00:33,680 --> 00:00:37,600
This would require, on average, 2 to the 256 guesses.

8
00:00:38,380 --> 00:00:44,180
This is a number so far removed from anything we ever deal with that it can be hard to appreciate

9
00:00:44,180 --> 00:00:46,300
its size, but let's give it a try.

10
00:00:46,780 --> 00:00:52,020
Two to the 256 is the same as 2 to the 32 multiplied by itself 8 times.

11
00:00:52,560 --> 00:00:57,820
What's nice about that split is that 2 to the 32 is 4 billion, which is at least a number

12
00:00:57,820 --> 00:00:58,680
we can think about.

13
00:01:00,800 --> 00:01:07,400
All we need to do is appreciate what multiplying 4 billion times itself 8 successive times

14
00:01:07,400 --> 00:01:08,780
really feels like.

15
00:01:09,740 --> 00:01:14,140
As many of you know, the GPU on your computer can let you run a bunch of computations in

16
00:01:14,140 --> 00:01:15,800
parallel incredibly quickly.

17
00:01:15,800 --> 00:01:21,300
If you were to specially program a GPU to run a cryptographic hash function over and

18
00:01:21,300 --> 00:01:26,440
over, a really good one might be able to do a little less than a billion hashes per second.

19
00:01:27,200 --> 00:01:31,140
Let's say you just take a bunch of those and cram your computer full of extra GPUs

20
00:01:31,500 --> 00:01:34,740
so that your computer can run 4 billion hashes per second.

21
00:01:35,420 --> 00:01:40,320
The first 4 billion here represents the number of hashes per second per computer.

22
00:01:41,160 --> 00:01:45,360
Now, picture 4 billion of these GPU-packed computers.

23
00:01:46,240 --> 00:01:50,200
For comparison, even though Google does not at all make their number of servers public,

24
00:01:50,900 --> 00:01:53,760
estimates have it somewhere in the single-digit millions.

25
00:01:54,600 --> 00:01:58,720
In reality, most of those servers are going to be much less powerful than our imagined

26
00:01:58,720 --> 00:02:00,040
GPU-packed machine.

27
00:02:00,580 --> 00:02:04,560
But let's say that Google replaced all of its millions of servers with a machine like

28
00:02:04,560 --> 00:02:10,220
this, then 4 billion machines would mean about 1,000 copies of this souped-up Google.

29
00:02:10,800 --> 00:02:13,360
Let's call that 1 kilo-Google worth of computing power.

30
00:02:14,940 --> 00:02:17,500
There's about 7.3 billion people on Earth.

31
00:02:18,060 --> 00:02:23,460
So next, imagine giving a little over half of every individual on Earth their own personal

32
00:02:23,460 --> 00:02:24,220
kilo-Google.

33
00:02:25,460 --> 00:02:28,820
Now, imagine 4 billion copies of this Earth.

34
00:02:29,900 --> 00:02:34,820
For comparison, the Milky Way has somewhere between 100 and 400 billion stars.

35
00:02:35,280 --> 00:02:37,540
We don't really know, but the estimates tend to be in that range.

36
00:02:38,400 --> 00:02:44,920
This would be akin to a full 1% of every star in the galaxy having a copy of Earth where

37
00:02:44,920 --> 00:02:47,980
half the people on Earth have their own personal kilo-Google.

38
00:02:49,140 --> 00:02:53,680
Next, try to imagine 4 billion copies of the Milky Way.

39
00:02:53,680 --> 00:02:59,520
And we're going to call this your giga-galactic supercomputer, running about 2 to the 160

40
00:02:59,520 --> 00:03:01,060
guesses every second.

41
00:03:03,200 --> 00:03:07,140
Now, 4 billion seconds, that's about 126.8 years.

42
00:03:07,800 --> 00:03:13,400
Four billion of those, well that's 507 billion years, which is about 37 times the age of

43
00:03:13,400 --> 00:03:13,920
the universe.

44
00:03:14,960 --> 00:03:20,500
So even if you were to have your GPU-packed kilo-Google-per-person multiplanetary giga-galactic

45
00:03:20,500 --> 00:03:26,360
computer guessing numbers for 37 times the age of the universe, it would still only have

46
00:03:26,360 --> 00:03:29,980
a 1 in 4 billion chance of finding the correct guess.

47
00:03:32,280 --> 00:03:37,440
By the way, the state of Bitcoin hashing these days is that all of the miners put together

48
00:03:37,440 --> 00:03:41,960
guess and check at a rate of about 5 billion billion hashes per second.

49
00:03:42,600 --> 00:03:45,960
That corresponds to one third of what I just described as a kilo-Google.

50
00:03:46,520 --> 00:03:51,500
This is not because there are billions of GPU-packed machines out there, but because

51
00:03:51,500 --> 00:03:57,000
miners actually use something that's about 1000 times better than a GPU, application-specific

52
00:03:57,000 --> 00:03:58,140
integrated circuits.

53
00:03:58,920 --> 00:04:03,660
These are pieces of hardware specifically designed for Bitcoin mining, for running a

54
00:04:03,660 --> 00:04:06,720
bunch of SHA-256 hashes, and nothing else.

55
00:04:07,500 --> 00:04:11,300
Turns out, there's a lot of efficiency gains to be had when you throw out the need for

56
00:04:11,300 --> 00:04:16,060
general computation and design your integrated circuits for one and only one task.

57
00:04:17,940 --> 00:04:22,280
Also, on the topic of large powers of two that I personally find it hard to get my mind

58
00:04:22,280 --> 00:04:26,160
around, this channel recently surpassed 2 to the 18th subscribers.

59
00:04:26,940 --> 00:04:31,360
And to engage a little more with some sub-portion of those 2 to the 18 people, I'm going to

60
00:04:31,360 --> 00:04:32,400
do a Q&A session.

61
00:04:33,000 --> 00:04:36,240
I've left a link in the description to a Reddit thread where you can post questions

62
00:04:36,240 --> 00:04:41,020
and upvote the ones you want to hear answers to, and probably in the next video or on Twitter

63
00:04:41,720 --> 00:04:44,140
I'll announce the format in which I'd like to give answers.

64
00:04:44,620 --> 00:04:45,460
See you then!

