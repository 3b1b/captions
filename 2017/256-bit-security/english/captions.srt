1
00:00:03,900 --> 00:00:09,330
In the main video on cryptocurrencies, I made two references to situations where in order 

2
00:00:09,330 --> 00:00:14,760
to break a given piece of security, you would have to guess a specific string of 256 bits.

3
00:00:15,440 --> 00:00:17,846
One of these was in the context of digital signatures, 

4
00:00:17,846 --> 00:00:20,560
and the other in the context of a cryptographic hash function.

5
00:00:21,200 --> 00:00:27,159
For example, if you want to find a message whose SHA-256 hash is some specific string 

6
00:00:27,159 --> 00:00:32,980
of 256 bits, you have no better method than to just guess and check random messages.

7
00:00:33,680 --> 00:00:37,600
This would require, on average, 2 to the 256 guesses.

8
00:00:38,380 --> 00:00:42,220
This is a number so far removed from anything we ever deal with 

9
00:00:42,220 --> 00:00:46,300
that it can be hard to appreciate its size, but let's give it a try.

10
00:00:46,780 --> 00:00:52,020
Two to the 256 is the same as 2 to the 32 multiplied by itself 8 times.

11
00:00:52,560 --> 00:00:56,097
What's nice about that split is that 2 to the 32 is 4 billion, 

12
00:00:56,097 --> 00:00:58,680
which is at least a number we can think about.

13
00:01:00,800 --> 00:01:04,533
All we need to do is appreciate what multiplying 4 

14
00:01:04,533 --> 00:01:08,780
billion times itself 8 successive times really feels like.

15
00:01:09,740 --> 00:01:12,744
As many of you know, the GPU on your computer can let you 

16
00:01:12,744 --> 00:01:15,800
run a bunch of computations in parallel incredibly quickly.

17
00:01:15,800 --> 00:01:20,938
If you were to specially program a GPU to run a cryptographic hash function over and 

18
00:01:20,938 --> 00:01:26,016
over, a really good one might be able to do a little less than a billion hashes per 

19
00:01:26,016 --> 00:01:26,440
second.

20
00:01:27,200 --> 00:01:30,889
Let's say you just take a bunch of those and cram your computer full 

21
00:01:30,889 --> 00:01:34,740
of extra GPUs so that your computer can run 4 billion hashes per second.

22
00:01:35,420 --> 00:01:37,998
So the first 4 billion here is going to represent 

23
00:01:37,998 --> 00:01:40,320
the number of hashes per second per computer.

24
00:01:41,160 --> 00:01:45,360
Now, picture 4 billion of these GPU-packed computers.

25
00:01:46,240 --> 00:01:50,803
For comparison, even though Google does not at all make their number of servers public, 

26
00:01:50,803 --> 00:01:53,760
estimates have it somewhere in the single-digit millions.

27
00:01:54,600 --> 00:01:57,422
In reality, most of those servers are going to be much 

28
00:01:57,422 --> 00:02:00,040
less powerful than our imagined GPU-packed machine.

29
00:02:00,580 --> 00:02:05,428
But let's say that Google replaced all of its millions of servers with a machine like 

30
00:02:05,428 --> 00:02:10,220
this, then 4 billion machines would mean about 1,000 copies of this souped-up Google.

31
00:02:10,800 --> 00:02:13,360
Let's call that 1 kilo-Google worth of computing power.

32
00:02:14,940 --> 00:02:17,500
There's about 7.3 billion people on Earth.

33
00:02:18,060 --> 00:02:21,169
So next, imagine giving a little over half of every 

34
00:02:21,169 --> 00:02:24,220
individual on Earth their own personal kilo-Google.

35
00:02:25,460 --> 00:02:28,820
Now, imagine 4 billion copies of this Earth.

36
00:02:29,900 --> 00:02:34,820
For comparison, the Milky Way has somewhere between 100 and 400 billion stars.

37
00:02:35,280 --> 00:02:37,540
We don't really know, but the estimates tend to be in that range.

38
00:02:38,400 --> 00:02:43,126
This would be akin to a full 1% of every star in the galaxy having a copy 

39
00:02:43,126 --> 00:02:47,980
of Earth where half the people on Earth have their own personal kilo-Google.

40
00:02:49,140 --> 00:02:53,680
Next, try to imagine 4 billion copies of the Milky Way.

41
00:02:53,680 --> 00:02:57,868
And we're going to call this your giga-galactic supercomputer, 

42
00:02:57,868 --> 00:03:01,060
running about 2 to the 160 guesses every second.

43
00:03:03,200 --> 00:03:07,140
Now, 4 billion seconds, that's about 126.8 years.

44
00:03:07,800 --> 00:03:11,040
Four billion of those, well that's 507 billion years, 

45
00:03:11,040 --> 00:03:13,920
which is about 37 times the age of the universe.

46
00:03:14,960 --> 00:03:20,134
So even if you were to have your GPU-packed kilo-Google-per-person multiplanetary 

47
00:03:20,134 --> 00:03:25,057
giga-galactic computer guessing numbers for 37 times the age of the universe, 

48
00:03:25,057 --> 00:03:29,980
it would still only have a 1 in 4 billion chance of finding the correct guess.

49
00:03:32,280 --> 00:03:37,179
By the way, the state of Bitcoin hashing these days is that all of the miners put 

50
00:03:37,179 --> 00:03:41,960
together guess and check at a rate of about 5 billion billion hashes per second.

51
00:03:42,600 --> 00:03:45,960
That corresponds to one third of what I just described as a kilo-Google.

52
00:03:46,520 --> 00:03:50,782
This is not because there are billions of GPU-packed machines out there, 

53
00:03:50,782 --> 00:03:55,745
but because miners actually use something that's about 1000 times better than a GPU, 

54
00:03:55,745 --> 00:03:58,140
application-specific integrated circuits.

55
00:03:58,920 --> 00:04:03,280
These are pieces of hardware specifically designed for Bitcoin mining, 

56
00:04:03,280 --> 00:04:06,720
for running a bunch of SHA-256 hashes, and nothing else.

57
00:04:07,500 --> 00:04:11,704
Turns out, there's a lot of efficiency gains to be had when you throw out the need 

58
00:04:11,704 --> 00:04:16,060
for general computation and design your integrated circuits for one and only one task.

59
00:04:17,940 --> 00:04:21,996
Also, on the topic of large powers of two that I personally find it hard to 

60
00:04:21,996 --> 00:04:26,160
get my mind around, this channel recently surpassed 2 to the 18th subscribers.

61
00:04:26,940 --> 00:04:30,897
And to engage a little more with some sub-portion of those 2 to the 18 people, 

62
00:04:30,897 --> 00:04:32,400
I'm going to do a Q&A session.

63
00:04:33,000 --> 00:04:35,976
I've left a link in the description to a Reddit thread where you can 

64
00:04:35,976 --> 00:04:38,737
post questions and upvote the ones you want to hear answers to. 

65
00:04:38,737 --> 00:04:41,670
And probably in the next video or on Twitter or something like that 

66
00:04:41,670 --> 00:04:44,820
I'll announce the format in which I'd like to give answers. See you then!

