1
00:00:03,900 --> 00:00:07,329
암호화폐에 관한 메인 동영상에서 저는 특정 

2
00:00:07,329 --> 00:00:10,901
보안을 뚫기 위해 256비트로 이루어진 특정 

3
00:00:10,901 --> 00:00:14,760
문자열을 맞춰야 하는 상황을 두 번 언급했습니다.

4
00:00:15,440 --> 00:00:17,901
그 중 하나는 디지털 서명과 관련된 것이고, 

5
00:00:17,901 --> 00:00:20,560
다른 하나는 암호화 해시 함수와 관련된 것입니다.

6
00:00:21,200 --> 00:00:25,173
예를 들어 SHA-256 해시가 256비트의 특정 

7
00:00:25,173 --> 00:00:28,722
문자열인 메시지를 찾으려면 무작위로 메시지를 

8
00:00:28,722 --> 00:00:32,980
추측하여 확인하는 것 외에는 더 좋은 방법이 없습니다.

9
00:00:33,680 --> 00:00:35,936
이렇게 하려면 평균적으로 256개 

10
00:00:35,936 --> 00:00:37,600
중 2개를 맞혀야 합니다.

11
00:00:38,380 --> 00:00:41,095
이 숫자는 우리가 지금까지 다뤄왔던 것과는 

12
00:00:41,095 --> 00:00:43,584
너무 거리가 멀어서 그 크기를 가늠하기 

13
00:00:43,584 --> 00:00:46,300
어려울 수 있지만 한 번 시도해 보겠습니다.

14
00:00:46,780 --> 00:00:49,329
256에 2를 곱하는 것은 2에 

15
00:00:49,329 --> 00:00:52,020
32를 8번 곱하는 것과 같습니다.

16
00:00:52,560 --> 00:00:55,620
이 분할의 좋은 점은 2에서 32는 40억으로, 

17
00:00:55,620 --> 00:00:58,680
적어도 우리가 생각할 수 있는 숫자라는 점입니다.

18
00:01:00,800 --> 00:01:04,535
40억 배를 8번 연속으로 곱하는 것이 

19
00:01:04,535 --> 00:01:08,780
어떤 느낌인지 알아보는 것만으로도 충분합니다.

20
00:01:09,740 --> 00:01:11,627
많은 분들이 아시다시피, 컴퓨터의 

21
00:01:11,627 --> 00:01:13,614
GPU는 여러 연산을 놀라울 정도로 

22
00:01:13,614 --> 00:01:15,800
빠르게 병렬로 실행할 수 있게 해줍니다.

23
00:01:15,800 --> 00:01:19,179
암호화 해시 함수를 반복해서 실행하도록 GPU를 

24
00:01:19,179 --> 00:01:22,684
특별히 프로그래밍한다면, 정말 좋은 GPU는 초당 

25
00:01:22,684 --> 00:01:26,440
10억 개 미만의 해시를 처리할 수 있을지도 모릅니다.

26
00:01:27,200 --> 00:01:29,548
컴퓨터가 초당 40억 개의 해시를 

27
00:01:29,548 --> 00:01:31,897
실행할 수 있도록 여분의 GPU를 

28
00:01:31,897 --> 00:01:34,740
컴퓨터에 가득 채운다고 가정해 보겠습니다.

29
00:01:35,420 --> 00:01:38,158
여기서 처음 40억 개는 컴퓨터당 

30
00:01:38,158 --> 00:01:40,320
초당 해시 수를 나타냅니다.

31
00:01:41,160 --> 00:01:43,323
이제 GPU로 가득 찬 40억 

32
00:01:43,323 --> 00:01:45,360
대의 컴퓨터를 상상해 보세요.

33
00:01:46,240 --> 00:01:48,787
비교를 위해 Google은 서버 수를 

34
00:01:48,787 --> 00:01:50,970
전혀 공개하지 않지만, 추정치에 

35
00:01:50,970 --> 00:01:53,760
따르면 한 자릿수인 수백만 대에 달합니다.

36
00:01:54,600 --> 00:01:57,171
실제로 이러한 서버의 대부분은 우리가 상상하는 

37
00:01:57,171 --> 00:02:00,040
GPU로 가득 찬 머신보다 훨씬 덜 강력할 것입니다.

38
00:02:00,580 --> 00:02:03,592
하지만 구글이 수백만 대의 서버를 모두 이와 

39
00:02:03,592 --> 00:02:05,882
같은 기계로 교체했다고 가정하면, 

40
00:02:05,882 --> 00:02:09,014
40억 대의 기계는 약 1,000개의 수프화된 

41
00:02:09,014 --> 00:02:10,220
구글을 의미합니다.

42
00:02:10,800 --> 00:02:13,360
이를 1킬로그램의 구글 컴퓨팅 파워라고 부르겠습니다.

43
00:02:14,940 --> 00:02:17,500
지구상에는 약 73억 명의 인구가 살고 있습니다.

44
00:02:18,060 --> 00:02:21,037
다음으로, 지구상의 모든 개인 중 절반이 조금 넘는 

45
00:02:21,037 --> 00:02:23,809
사람들에게 개인용 구글 계정을 제공한다고 상상해 

46
00:02:23,809 --> 00:02:24,220
보세요.

47
00:02:25,460 --> 00:02:28,820
이제 지구가 40억 개라고 상상해 보세요.

48
00:02:29,900 --> 00:02:32,618
비교를 위해 은하수에는 1000억에서 

49
00:02:32,618 --> 00:02:34,820
4000억 개의 별이 있습니다.

50
00:02:35,280 --> 00:02:36,350
정확히 알 수는 없지만 추정치는 

51
00:02:36,350 --> 00:02:37,540
그 범위 내에 있는 경향이 있습니다.

52
00:02:38,400 --> 00:02:41,315
이는 은하계 모든 별의 1%가 지구의 

53
00:02:41,315 --> 00:02:44,647
복사본을 가지고 있고, 지구 인구의 절반이 

54
00:02:44,647 --> 00:02:47,980
개인용 구글을 가지고 있는 것과 비슷합니다.

55
00:02:49,140 --> 00:02:53,680
다음으로, 은하수가 40억 개라고 상상해 보세요.

56
00:02:53,680 --> 00:02:57,134
초당 약 2~160개의 추측을 실행하는 

57
00:02:57,134 --> 00:03:01,060
기가 은하계 슈퍼컴퓨터라고 부를 수 있습니다.

58
00:03:03,200 --> 00:03:07,140
이제 40억 초는 약 126.8년에 해당합니다.

59
00:03:07,800 --> 00:03:10,785
그 중 40억 년은 우주 나이의 약 

60
00:03:10,785 --> 00:03:13,920
37배에 해당하는 5070억 년입니다.

61
00:03:14,960 --> 00:03:18,638
따라서 GPU로 가득 찬 1인당 킬로그램의 

62
00:03:18,638 --> 00:03:22,316
구글 컴퓨터로 우주 나이의 37배에 달하는 

63
00:03:22,316 --> 00:03:25,841
다행성 기가 은하계 숫자를 맞힌다고 해도 

64
00:03:25,841 --> 00:03:29,980
정답을 맞힐 확률은 40억 분의 1에 불과합니다.

65
00:03:32,280 --> 00:03:36,797
그런데 요즘 비트코인 해싱의 상태는 모든 채굴자가 

66
00:03:36,797 --> 00:03:40,992
초당 약 50억 개의 해시를 추측하고 확인하는 

67
00:03:40,992 --> 00:03:41,960
속도입니다.

68
00:03:42,600 --> 00:03:44,334
이는 방금 설명한 킬로그램의 

69
00:03:44,334 --> 00:03:45,960
1/3에 해당하는 양입니다.

70
00:03:46,520 --> 00:03:50,005
이는 수십억 대의 GPU가 탑재된 컴퓨터가 있기 

71
00:03:50,005 --> 00:03:53,362
때문이 아니라 채굴자들이 실제로 GPU보다 약 

72
00:03:53,362 --> 00:03:56,719
1000배 더 나은 애플리케이션별 집적 회로를 

73
00:03:56,719 --> 00:03:58,140
사용하기 때문입니다.

74
00:03:58,920 --> 00:04:02,262
이들은 비트코인 채굴을 위해 특별히 설계된 

75
00:04:02,262 --> 00:04:06,023
하드웨어로, SHA-256 해시를 실행하기 위한 

76
00:04:06,023 --> 00:04:06,720
것입니다.

77
00:04:07,500 --> 00:04:11,780
일반적인 계산의 필요성을 버리고 단 하나의 작업만을 

78
00:04:11,780 --> 00:04:16,060
위해 집적 회로를 설계하면 효율성이 크게 향상됩니다.

79
00:04:17,940 --> 00:04:20,810
또한, 개인적으로 이해하기 어려운 2의 

80
00:04:20,810 --> 00:04:23,420
큰 힘을 주제로 한 이 채널은 최근 

81
00:04:23,420 --> 00:04:26,160
구독자 수가 18만 명을 돌파했습니다.

82
00:04:26,940 --> 00:04:29,442
그리고 2~18명 중 일부분과 조금 더 

83
00:04:29,442 --> 00:04:32,400
소통하기 위해 Q&A 세션을 진행하려고 합니다.

84
00:04:33,000 --> 00:04:36,068
설명에 질문을 게시하고 답변을 듣고 싶은 질문에 

85
00:04:36,068 --> 00:04:38,909
업보팅할 수 있는 Reddit 스레드 링크를 

86
00:04:38,909 --> 00:04:41,865
남겨두었으며, 다음 동영상이나 트위터에서 제가 

87
00:04:41,865 --> 00:04:44,820
어떤 형식으로 답변을 드릴지 발표할 예정입니다.

