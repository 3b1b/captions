[
 {
  "input": "This is a 3.",
  "translatedText": "Bu bir 3.",
  "model": "DeepL",
  "time_range": [
   4.22,
   5.4
  ]
 },
 {
  "input": "It's sloppily written and rendered at an extremely low resolution of 28x28 pixels, but your brain has no trouble recognizing it as a 3.",
  "translatedText": "Özensiz bir şekilde yazılmış ve 28x28 piksel gibi son derece düşük bir çözünürlükte işlenmiş, ancak beyniniz bunu 3 olarak tanımakta zorlanmıyor.",
  "model": "DeepL",
  "time_range": [
   6.06,
   13.72
  ]
 },
 {
  "input": "And I want you to take a moment to appreciate how crazy it is that brains can do this so effortlessly.",
  "translatedText": "Ve bir an durup beyinlerin bunu bu kadar zahmetsizce yapabilmesinin ne kadar çılgınca olduğunu takdir etmenizi istiyorum.",
  "model": "DeepL",
  "time_range": [
   14.34,
   18.96
  ]
 },
 {
  "input": "I mean, this, this and this are also recognizable as 3s, even though the specific values of each pixel is very different from one image to the next.",
  "translatedText": "Yani, bu, bu ve bu da 3'ler olarak tanınabilir, her bir pikselin belirli değerleri bir görüntüden diğerine çok farklı olsa bile.",
  "model": "DeepL",
  "time_range": [
   19.7,
   28.32
  ]
 },
 {
  "input": "The particular light-sensitive cells in your eye that are firing when you see this 3 are very different from the ones firing when you see this 3.",
  "translatedText": "Gözünüzde bu 3'ü gördüğünüzde ateşlenen ışığa duyarlı hücreler, bu 3'ü gördüğünüzde ateşlenenlerden çok farklıdır.",
  "model": "DeepL",
  "time_range": [
   28.9,
   36.94
  ]
 },
 {
  "input": "But something in that crazy-smart visual cortex of yours resolves these as representing the same idea, while at the same time recognizing other images as their own distinct ideas.",
  "translatedText": "Ancak o çılgın zekalı görsel korteksinizdeki bir şey, bunları aynı fikri temsil ediyor olarak çözümlerken, aynı zamanda diğer görüntüleri kendi farklı fikirleri olarak tanır.",
  "model": "DeepL",
  "time_range": [
   37.52,
   48.26
  ]
 },
 {
  "input": "But if I told you, hey, sit down and write for me a program that takes in a grid of 28x28 pixels like this and outputs a single number between 0 and 10, telling you what it thinks the digit is, well the task goes from comically trivial to dauntingly difficult.",
  "translatedText": "Ama size desem ki, hey, oturun ve benim için 28x28 piksellik bir ızgarayı bu şekilde alan ve 0 ile 10 arasında tek bir sayı çıktısı veren ve size rakamın ne olduğunu düşündüğünü söyleyen bir program yazın, görev komik derecede önemsizden ürkütücü derecede zora dönüşür.",
  "model": "DeepL",
  "time_range": [
   49.22,
   66.18
  ]
 },
 {
  "input": "Unless you've been living under a rock, I think I hardly need to motivate the relevance and importance of machine learning and neural networks to the present and to the future.",
  "translatedText": "Bir kayanın altında yaşamıyorsanız, makine öğrenimi ve sinir ağlarının günümüzle ve gelecekle olan ilgisini ve önemini motive etmeme gerek olmadığını düşünüyorum.",
  "model": "DeepL",
  "time_range": [
   67.16,
   74.64
  ]
 },
 {
  "input": "But what I want to do here is show you what a neural network actually is, assuming no background, and to help visualize what it's doing, not as a buzzword but as a piece of math.",
  "translatedText": "Ancak burada yapmak istediğim şey, hiçbir arka plan olmadığını varsayarak size bir sinir ağının gerçekte ne olduğunu göstermek ve ne yaptığını bir moda sözcük olarak değil, bir matematik parçası olarak görselleştirmeye yardımcı olmaktır.",
  "model": "DeepL",
  "time_range": [
   75.12,
   84.46
  ]
 },
 {
  "input": "My hope is that you come away feeling like the structure itself is motivated, and to feel like you know what it means when you read, or you hear about a neural network quote-unquote learning.",
  "translatedText": "Umudum, yapının kendisinin motive edici olduğunu hissederek ayrılmanız ve okuduğunuzda ya da bir sinir ağından alıntı yaparak öğrenme hakkında bir şeyler duyduğunuzda bunun ne anlama geldiğini bildiğinizi hissetmenizdir.",
  "model": "DeepL",
  "time_range": [
   85.02,
   94.34
  ]
 },
 {
  "input": "This video is just going to be devoted to the structure component of that, and the following one is going to tackle learning.",
  "translatedText": "Bu video sadece bunun yapı bileşenine ayrılacak ve bir sonraki video öğrenmeyi ele alacak.",
  "model": "DeepL",
  "time_range": [
   95.36,
   100.26
  ]
 },
 {
  "input": "What we're going to do is put together a neural network that can learn to recognize handwritten digits.",
  "translatedText": "Yapacağımız şey, el yazısı rakamları tanımayı öğrenebilen bir sinir ağını bir araya getirmek.",
  "model": "DeepL",
  "time_range": [
   100.96,
   106.04
  ]
 },
 {
  "input": "This is a somewhat classic example for introducing the topic, and I'm happy to stick with the status quo here, because at the end of the two videos I want to point you to a couple good resources where you can learn more, and where you can download the code that does this and play with it on your own computer.",
  "translatedText": "Bu, konuyu tanıtmak için biraz klasik bir örnek ve burada statükoya bağlı kalmaktan mutluyum, çünkü iki videonun sonunda sizi daha fazla bilgi edinebileceğiniz ve bunu yapan kodu indirip kendi bilgisayarınızda oynayabileceğiniz birkaç iyi kaynağa yönlendirmek istiyorum.",
  "model": "DeepL",
  "time_range": [
   109.36,
   123.08
  ]
 },
 {
  "input": "There are many many variants of neural networks, and in recent years there's been sort of a boom in research towards these variants, but in these two introductory videos you and I are just going to look at the simplest plain vanilla form with no added frills.",
  "translatedText": "Sinir ağlarının pek çok çeşidi vardır ve son yıllarda bu çeşitlere yönelik araştırmalarda bir tür patlama yaşanmıştır, ancak bu iki tanıtım videosunda siz ve ben sadece en basit, sade ve gösterişsiz forma bakacağız.",
  "model": "DeepL",
  "time_range": [
   125.04,
   139.18
  ]
 },
 {
  "input": "This is kind of a necessary prerequisite for understanding any of the more powerful modern variants, and trust me it still has plenty of complexity for us to wrap our minds around.",
  "translatedText": "Bu, daha güçlü modern varyantlardan herhangi birini anlamak için gerekli bir ön koşuldur ve inanın bana hala zihnimizi sarmamız için çok fazla karmaşıklığa sahiptir.",
  "model": "DeepL",
  "time_range": [
   139.86,
   148.6
  ]
 },
 {
  "input": "But even in this simplest form it can learn to recognize handwritten digits, which is a pretty cool thing for a computer to be able to do.",
  "translatedText": "Ancak bu en basit haliyle bile el yazısıyla yazılmış rakamları tanımayı öğrenebilir ki bu bir bilgisayar için oldukça harika bir şeydir.",
  "model": "DeepL",
  "time_range": [
   149.12,
   156.52
  ]
 },
 {
  "input": "And at the same time you'll see how it does fall short of a couple hopes that we might have for it.",
  "translatedText": "Ve aynı zamanda, onun için sahip olabileceğimiz birkaç umudun nasıl yetersiz kaldığını göreceksiniz.",
  "model": "DeepL",
  "time_range": [
   157.48,
   162.28
  ]
 },
 {
  "input": "As the name suggests neural networks are inspired by the brain, but let's break that down.",
  "translatedText": "Adından da anlaşılacağı gibi sinir ağları beyinden ilham alır, ancak bunu biraz açalım.",
  "model": "DeepL",
  "time_range": [
   163.38,
   168.5
  ]
 },
 {
  "input": "What are the neurons, and in what sense are they linked together?",
  "translatedText": "Nöronlar nelerdir ve hangi anlamda birbirleriyle bağlantılıdırlar?",
  "model": "DeepL",
  "time_range": [
   168.52,
   171.66
  ]
 },
 {
  "input": "Right now when I say neuron all I want you to think about is a thing that holds a number, specifically a number between 0 and 1.",
  "translatedText": "Şu anda nöron dediğimde düşünmenizi istediğim tek şey bir sayıyı, özellikle de 0 ile 1 arasında bir sayıyı tutan bir şey.",
  "model": "DeepL",
  "time_range": [
   172.5,
   180.44
  ]
 },
 {
  "input": "It's really not more than that.",
  "translatedText": "Bundan daha fazlası değil.",
  "model": "DeepL",
  "time_range": [
   180.68,
   182.56
  ]
 },
 {
  "input": "For example the network starts with a bunch of neurons corresponding to each of the 28x28 pixels of the input image, which is 784 neurons in total.",
  "translatedText": "Örneğin ağ, giriş görüntüsünün 28x28 pikselinin her birine karşılık gelen bir grup nöronla başlar, bu da toplamda 784 nöron eder.",
  "model": "DeepL",
  "time_range": [
   183.78,
   194.22
  ]
 },
 {
  "input": "Each one of these holds a number that represents the grayscale value of the corresponding pixel, ranging from 0 for black pixels up to 1 for white pixels.",
  "translatedText": "Bunların her biri, ilgili pikselin gri tonlama değerini temsil eden ve siyah pikseller için 0'dan beyaz pikseller için 1'e kadar değişen bir sayı tutar.",
  "model": "DeepL",
  "time_range": [
   194.7,
   204.38
  ]
 },
 {
  "input": "This number inside the neuron is called its activation, and the image you might have in mind here is that each neuron is lit up when its activation is a high number.",
  "translatedText": "Nöronun içindeki bu sayıya aktivasyon denir ve burada aklınıza gelebilecek görüntü, aktivasyonu yüksek bir sayı olduğunda her nöronun aydınlandığıdır.",
  "model": "DeepL",
  "time_range": [
   205.3,
   214.16
  ]
 },
 {
  "input": "So all of these 784 neurons make up the first layer of our network.",
  "translatedText": "Yani bu 784 nöronun tamamı ağımızın ilk katmanını oluşturuyor.",
  "model": "DeepL",
  "time_range": [
   216.72,
   221.86
  ]
 },
 {
  "input": "Now jumping over to the last layer, this has 10 neurons, each representing one of the digits.",
  "translatedText": "Şimdi son katmana geçiyoruz, bu katmanda her biri rakamlardan birini temsil eden 10 nöron var.",
  "model": "DeepL",
  "time_range": [
   226.5,
   231.36
  ]
 },
 {
  "input": "The activation in these neurons, again some number that's between 0 and 1, represents how much the system thinks that a given image corresponds with a given digit.",
  "translatedText": "Bu nöronlardaki aktivasyon, yine 0 ile 1 arasında bir sayı, sistemin belirli bir görüntünün belirli bir rakama ne kadar karşılık geldiğini düşündüğünü temsil eder.",
  "model": "DeepL",
  "time_range": [
   232.04,
   242.12
  ]
 },
 {
  "input": "There's also a couple layers in between called the hidden layers, which for the time being should just be a giant question mark for how on earth this process of recognizing digits is going to be handled.",
  "translatedText": "Arada gizli katmanlar olarak adlandırılan birkaç katman daha var ki bunlar şimdilik rakamları tanıma işleminin nasıl yapılacağına dair dev bir soru işareti.",
  "model": "DeepL",
  "time_range": [
   243.04,
   253.6
  ]
 },
 {
  "input": "In this network I chose two hidden layers, each one with 16 neurons, and admittedly that's kind of an arbitrary choice.",
  "translatedText": "Bu ağda, her biri 16 nörondan oluşan iki gizli katman seçtim ve kuşkusuz bu biraz keyfi bir seçim.",
  "model": "DeepL",
  "time_range": [
   254.26,
   260.56
  ]
 },
 {
  "input": "To be honest I chose two layers based on how I want to motivate the structure in just a moment, and 16, well that was just a nice number to fit on the screen.",
  "translatedText": "Dürüst olmak gerekirse, birazdan yapıyı nasıl motive etmek istediğime bağlı olarak iki katman seçtim ve 16, ekrana sığdırmak için güzel bir rakamdı.",
  "model": "DeepL",
  "time_range": [
   261.02,
   268.2
  ]
 },
 {
  "input": "In practice there is a lot of room for experiment with a specific structure here.",
  "translatedText": "Pratikte, burada belirli bir yapı ile deney yapmak için çok fazla alan vardır.",
  "model": "DeepL",
  "time_range": [
   268.78,
   272.34
  ]
 },
 {
  "input": "The way the network operates, activations in one layer determine the activations of the next layer.",
  "translatedText": "Ağın çalışma şekline göre, bir katmandaki aktivasyonlar bir sonraki katmanın aktivasyonlarını belirler.",
  "model": "DeepL",
  "time_range": [
   273.02,
   278.48
  ]
 },
 {
  "input": "And of course the heart of the network as an information processing mechanism comes down to exactly how those activations from one layer bring about activations in the next layer.",
  "translatedText": "Ve elbette bir bilgi işleme mekanizması olarak ağın kalbi, bir katmandaki bu aktivasyonların bir sonraki katmanda tam olarak nasıl aktivasyonlara yol açtığına bağlıdır.",
  "model": "DeepL",
  "time_range": [
   279.2,
   288.58
  ]
 },
 {
  "input": "It's meant to be loosely analogous to how in biological networks of neurons, some groups of neurons firing cause certain others to fire.",
  "translatedText": "Bu, biyolojik nöron ağlarında bazı nöron gruplarının ateşlenmesinin diğerlerinin de ateşlenmesine neden olmasıyla benzerlik gösteriyor.",
  "model": "DeepL",
  "time_range": [
   289.14,
   297.18
  ]
 },
 {
  "input": "Now the network I'm showing here has already been trained to recognize digits, and let me show you what I mean by that.",
  "translatedText": "Şimdi burada gösterdiğim ağ zaten rakamları tanımak için eğitildi ve bununla ne demek istediğimi size göstereyim.",
  "model": "DeepL",
  "time_range": [
   298.12,
   303.4
  ]
 },
 {
  "input": "It means if you feed in an image, lighting up all 784 neurons of the input layer according to the brightness of each pixel in the image, that pattern of activations causes some very specific pattern in the next layer which causes some pattern in the one after it, which finally gives some pattern in the output layer.",
  "translatedText": "Bu, bir görüntüyü beslerseniz, görüntüdeki her pikselin parlaklığına göre giriş katmanındaki 784 nöronun tamamını aydınlatırsanız, bu aktivasyon modeli bir sonraki katmanda çok özel bir modele neden olur, bu da bir sonrakinde bir modele neden olur ve sonunda çıktı katmanında bir model verir.",
  "model": "DeepL",
  "time_range": [
   303.64,
   322.08
  ]
 },
 {
  "input": "And the brightest neuron of that output layer is the network's choice, so to speak, for what digit this image represents.",
  "translatedText": "Ve bu çıktı katmanının en parlak nöronu, tabiri caizse, bu görüntünün hangi rakamı temsil ettiğine dair ağın seçimidir.",
  "model": "DeepL",
  "time_range": [
   322.56,
   329.4
  ]
 },
 {
  "input": "And before jumping into the math for how one layer influences the next, or how training works, let's just talk about why it's even reasonable to expect a layered structure like this to behave intelligently.",
  "translatedText": "Bir katmanın diğerini nasıl etkilediğine veya eğitimin nasıl işlediğine dair matematiğe geçmeden önce, bunun gibi katmanlı bir yapının akıllıca davranmasını beklemenin neden makul olduğundan bahsedelim.",
  "model": "DeepL",
  "time_range": [
   332.56,
   343.52
  ]
 },
 {
  "input": "What are we expecting here?",
  "translatedText": "Burada ne bekliyoruz?",
  "model": "DeepL",
  "time_range": [
   344.06,
   345.22
  ]
 },
 {
  "input": "What is the best hope for those middle layers?",
  "translatedText": "Bu orta katmanlar için en iyi umut nedir?",
  "model": "DeepL",
  "time_range": [
   345.4,
   347.6
  ]
 },
 {
  "input": "Well, when you or I recognize digits, we piece together various components.",
  "translatedText": "Siz veya ben rakamları fark ettiğimizde, çeşitli bileşenleri bir araya getiririz.",
  "model": "DeepL",
  "time_range": [
   348.92,
   353.52
  ]
 },
 {
  "input": "A 9 has a loop up top and a line on the right.",
  "translatedText": "9'un üstte bir halkası ve sağda bir çizgisi vardır.",
  "model": "DeepL",
  "time_range": [
   354.2,
   356.82
  ]
 },
 {
  "input": "An 8 also has a loop up top, but it's paired with another loop down low.",
  "translatedText": "8'de de üstte bir halka vardır, ancak altta başka bir halka ile eşleştirilmiştir.",
  "model": "DeepL",
  "time_range": [
   357.38,
   361.18
  ]
 },
 {
  "input": "A 4 basically breaks down into three specific lines, and things like that.",
  "translatedText": "Bir 4 temel olarak üç özel çizgiye ve bunun gibi şeylere ayrılır.",
  "model": "DeepL",
  "time_range": [
   361.98,
   366.82
  ]
 },
 {
  "input": "Now in a perfect world, we might hope that each neuron in the second to last layer corresponds with one of these subcomponents, that anytime you feed in an image with, say, a loop up top, like a 9 or an 8, there's some specific neuron whose activation is going to be close to 1.",
  "translatedText": "Şimdi mükemmel bir dünyada, ikinci katmandan son katmana kadar her bir nöronun bu alt bileşenlerden birine karşılık gelmesini umabiliriz, örneğin 9 veya 8 gibi üstte bir döngü olan bir görüntüyü beslediğinizde, aktivasyonu 1'e yakın olacak belirli bir nöron vardır.",
  "model": "DeepL",
  "time_range": [
   367.6,
   383.78
  ]
 },
 {
  "input": "And I don't mean this specific loop of pixels, the hope would be that any generally loopy pattern towards the top sets off this neuron.",
  "translatedText": "Bu özel piksel döngüsünü kastetmiyorum, umudum tepeye doğru olan herhangi bir genel döngüsel desenin bu nöronu harekete geçirmesi.",
  "model": "DeepL",
  "time_range": [
   384.5,
   391.56
  ]
 },
 {
  "input": "That way, going from the third layer to the last one just requires learning which combination of subcomponents corresponds to which digits.",
  "translatedText": "Bu şekilde, üçüncü katmandan son katmana geçmek sadece hangi alt bileşen kombinasyonunun hangi rakamlara karşılık geldiğini öğrenmeyi gerektirir.",
  "model": "DeepL",
  "time_range": [
   392.44,
   400.04
  ]
 },
 {
  "input": "Of course, that just kicks the problem down the road, because how would you recognize these subcomponents, or even learn what the right subcomponents should be?",
  "translatedText": "Tabii ki bu da sorunu daha da derinleştiriyor, çünkü bu alt bileşenleri nasıl tanıyacaksınız, hatta doğru alt bileşenlerin ne olması gerektiğini nasıl öğreneceksiniz?",
  "model": "DeepL",
  "time_range": [
   401.0,
   407.64
  ]
 },
 {
  "input": "And I still haven't even talked about how one layer influences the next, but run with me on this one for a moment.",
  "translatedText": "Ve daha bir katmanın diğerini nasıl etkilediğinden bahsetmedim bile, ama bir an için bu konuda benimle gelin.",
  "model": "DeepL",
  "time_range": [
   408.06,
   413.06
  ]
 },
 {
  "input": "Recognizing a loop can also break down into subproblems.",
  "translatedText": "Bir döngünün tanınması da alt problemlere ayrılabilir.",
  "model": "DeepL",
  "time_range": [
   413.68,
   416.68
  ]
 },
 {
  "input": "One reasonable way to do this would be to first recognize the various little edges that make it up.",
  "translatedText": "Bunu yapmanın makul bir yolu, öncelikle onu oluşturan çeşitli küçük kenarları tanımak olacaktır.",
  "model": "DeepL",
  "time_range": [
   417.28,
   422.78
  ]
 },
 {
  "input": "Similarly, a long line, like the kind you might see in the digits 1 or 4 or 7, is really just a long edge, or maybe you think of it as a certain pattern of several smaller edges.",
  "translatedText": "Benzer şekilde, 1, 4 veya 7 rakamlarında görebileceğiniz türden uzun bir çizgi, aslında sadece uzun bir kenardır veya belki de bunu birkaç küçük kenardan oluşan belirli bir desen olarak düşünebilirsiniz.",
  "model": "DeepL",
  "time_range": [
   423.78,
   434.32
  ]
 },
 {
  "input": "So maybe our hope is that each neuron in the second layer of the network corresponds with the various relevant little edges.",
  "translatedText": "Belki de umudumuz, ağın ikinci katmanındaki her bir nöronun çeşitli ilgili küçük kenarlara karşılık gelmesidir.",
  "model": "DeepL",
  "time_range": [
   435.14,
   442.72
  ]
 },
 {
  "input": "Maybe when an image like this one comes in, it lights up all of the neurons associated with around 8 to 10 specific little edges, which in turn lights up the neurons associated with the upper loop and a long vertical line, and those light up the neuron associated with a 9.",
  "translatedText": "Belki de bunun gibi bir görüntü geldiğinde, yaklaşık 8 ila 10 belirli küçük kenarla ilişkili tüm nöronları aydınlatır, bu da üst döngü ve uzun bir dikey çizgi ile ilişkili nöronları aydınlatır ve bunlar da 9 ile ilişkili nöronu aydınlatır.",
  "model": "DeepL",
  "time_range": [
   443.54,
   459.72
  ]
 },
 {
  "input": "Whether or not this is what our final network actually does is another question, one that I'll come back to once we see how to train the network, but this is a hope that we might have, a sort of goal with the layered structure like this.",
  "translatedText": "Nihai ağımızın gerçekte yaptığı şeyin bu olup olmadığı, ağı nasıl eğiteceğimizi gördüğümüzde geri döneceğim başka bir sorudur, ancak bu, sahip olabileceğimiz bir umut, bunun gibi katmanlı bir yapı ile bir tür hedeftir.",
  "model": "DeepL",
  "time_range": [
   460.68,
   472.54
  ]
 },
 {
  "input": "Moreover, you can imagine how being able to detect edges and patterns like this would be really useful for other image recognition tasks.",
  "translatedText": "Dahası, bunun gibi kenarları ve desenleri tespit edebilmenin diğer görüntü tanıma görevleri için nasıl gerçekten yararlı olacağını hayal edebilirsiniz.",
  "model": "DeepL",
  "time_range": [
   473.16,
   480.3
  ]
 },
 {
  "input": "And even beyond image recognition, there are all sorts of intelligent things you might want to do that break down into layers of abstraction.",
  "translatedText": "Ve hatta görüntü tanımanın ötesinde, soyutlama katmanlarına ayrılan yapmak isteyebileceğiniz her türlü akıllı şey vardır.",
  "model": "DeepL",
  "time_range": [
   480.88,
   487.28
  ]
 },
 {
  "input": "Parsing speech, for example, involves taking raw audio and picking out distinct sounds, which combine to make certain syllables, which combine to form words, which combine to make up phrases and more abstract thoughts, etc.",
  "translatedText": "Örneğin, konuşmanın ayrıştırılması, ham sesin alınmasını ve belirli heceleri oluşturmak için birleşen, kelimeleri oluşturmak için birleşen, cümleleri ve daha soyut düşünceleri oluşturmak için birleşen vb. farklı seslerin seçilmesini içerir.",
  "model": "DeepL",
  "time_range": [
   488.04,
   500.06
  ]
 },
 {
  "input": "But getting back to how any of this actually works, picture yourself right now designing how exactly the activations in one layer might determine the next.",
  "translatedText": "Ancak bunların gerçekte nasıl çalıştığına geri dönersek, şu anda kendinizi bir katmandaki aktivasyonların bir sonrakini tam olarak nasıl belirleyebileceğini tasarlarken hayal edin.",
  "model": "DeepL",
  "time_range": [
   501.1,
   509.92
  ]
 },
 {
  "input": "The goal is to have some mechanism that could conceivably combine pixels into edges, or edges into patterns, or patterns into digits.",
  "translatedText": "Amaç, pikselleri kenarlara, kenarları desenlere ya da desenleri rakamlara dönüştürebilecek bir mekanizmaya sahip olmaktır.",
  "model": "DeepL",
  "time_range": [
   510.86,
   518.98
  ]
 },
 {
  "input": "And to zoom in on one very specific example, let's say the hope is for one particular neuron in the second layer to pick up on whether or not the image has an edge in this region here.",
  "translatedText": "Çok spesifik bir örneği yakınlaştırmak gerekirse, diyelim ki ikinci katmandaki belirli bir nöronun görüntünün bu bölgede bir kenarı olup olmadığını anlaması umuluyor.",
  "model": "DeepL",
  "time_range": [
   519.44,
   530.62
  ]
 },
 {
  "input": "The question at hand is what parameters should the network have?",
  "translatedText": "Asıl soru, ağın hangi parametrelere sahip olması gerektiğidir?",
  "model": "DeepL",
  "time_range": [
   531.44,
   535.1
  ]
 },
 {
  "input": "What dials and knobs should you be able to tweak so that it's expressive enough to potentially capture this pattern, or any other pixel pattern, or the pattern that several edges can make a loop, and other such things?",
  "translatedText": "Bu deseni veya başka herhangi bir piksel desenini veya birkaç kenarın bir döngü oluşturabileceği deseni ve benzeri şeyleri potansiyel olarak yakalayacak kadar etkileyici olması için hangi kadranları ve düğmeleri ayarlayabilmelisiniz?",
  "model": "DeepL",
  "time_range": [
   535.64,
   547.78
  ]
 },
 {
  "input": "Well, what we'll do is assign a weight to each one of the connections between our neuron and the neurons from the first layer.",
  "translatedText": "Yapacağımız şey, nöronumuz ile ilk katmandaki nöronlar arasındaki bağlantıların her birine bir ağırlık atamaktır.",
  "model": "DeepL",
  "time_range": [
   548.72,
   555.56
  ]
 },
 {
  "input": "These weights are just numbers.",
  "translatedText": "Bu ağırlıklar sadece rakamlardan ibarettir.",
  "model": "DeepL",
  "time_range": [
   556.32,
   557.7
  ]
 },
 {
  "input": "Then take all of those activations from the first layer and compute their weighted sum according to these weights.",
  "translatedText": "Daha sonra ilk katmandan tüm bu aktivasyonları alın ve bu ağırlıklara göre ağırlıklı toplamlarını hesaplayın.",
  "model": "DeepL",
  "time_range": [
   558.54,
   565.5
  ]
 },
 {
  "input": "I find it helpful to think of these weights as being organized into a little grid of their own, and I'm going to use green pixels to indicate positive weights, and red pixels to indicate negative weights, where the brightness of that pixel is some loose depiction of the weight's value.",
  "translatedText": "Bu ağırlıkları kendi başlarına küçük bir ızgarada düzenlenmiş olarak düşünmeyi yararlı buluyorum ve pozitif ağırlıkları belirtmek için yeşil pikselleri ve negatif ağırlıkları belirtmek için kırmızı pikselleri kullanacağım, burada pikselin parlaklığı ağırlığın değerinin gevşek bir tasviridir.",
  "model": "DeepL",
  "time_range": [
   567.7,
   581.78
  ]
 },
 {
  "input": "Now if we made the weights associated with almost all of the pixels zero except for some positive weights in this region that we care about, then taking the weighted sum of all the pixel values really just amounts to adding up the values of the pixel just in the region that we care about.",
  "translatedText": "Şimdi, önemsediğimiz bu bölgedeki bazı pozitif ağırlıklar dışında neredeyse tüm piksellerle ilişkili ağırlıkları sıfır yaparsak, tüm piksel değerlerinin ağırlıklı toplamını almak gerçekten sadece önemsediğimiz bölgedeki piksel değerlerini toplamak anlamına gelir.",
  "model": "DeepL",
  "time_range": [
   582.78,
   597.82
  ]
 },
 {
  "input": "And if you really wanted to pick up on whether there's an edge here, what you might do is have some negative weights associated with the surrounding pixels.",
  "translatedText": "Ve burada gerçekten bir kenar olup olmadığını anlamak istiyorsanız, yapabileceğiniz şey çevredeki piksellerle ilişkili bazı negatif ağırlıklara sahip olmaktır.",
  "model": "DeepL",
  "time_range": [
   599.14,
   606.6
  ]
 },
 {
  "input": "Then the sum is largest when those middle pixels are bright but the surrounding pixels are darker.",
  "translatedText": "Bu durumda, ortadaki pikseller parlak ancak çevredeki pikseller daha koyu olduğunda toplam en büyüktür.",
  "model": "DeepL",
  "time_range": [
   607.48,
   612.7
  ]
 },
 {
  "input": "When you compute a weighted sum like this, you might come out with any number, but for this network what we want is for activations to be some value between 0 and 1.",
  "translatedText": "Bunun gibi ağırlıklı bir toplam hesapladığınızda, herhangi bir sayı elde edebilirsiniz, ancak bu ağ için istediğimiz şey aktivasyonların 0 ile 1 arasında bir değer olmasıdır.",
  "model": "DeepL",
  "time_range": [
   614.26,
   623.54
  ]
 },
 {
  "input": "So a common thing to do is to pump this weighted sum into some function that squishes the real number line into the range between 0 and 1.",
  "translatedText": "Bu nedenle, bu ağırlıklı toplamı, gerçek sayı doğrusunu 0 ile 1 arasındaki aralığa sıkıştıran bir fonksiyona pompalamak yaygın olarak yapılan bir şeydir.",
  "model": "DeepL",
  "time_range": [
   624.12,
   632.14
  ]
 },
 {
  "input": "And a common function that does this is called the sigmoid function, also known as a logistic curve.",
  "translatedText": "Ve bunu yapan yaygın bir fonksiyon, lojistik eğri olarak da bilinen sigmoid fonksiyon olarak adlandırılır.",
  "model": "DeepL",
  "time_range": [
   632.46,
   637.42
  ]
 },
 {
  "input": "Basically very negative inputs end up close to 0, positive inputs end up close to 1, and it just steadily increases around the input 0.",
  "translatedText": "Temel olarak çok negatif girişler 0'a yakın, pozitif girişler 1'e yakın olur ve 0 girişi etrafında sürekli olarak artar.",
  "model": "DeepL",
  "time_range": [
   638.0,
   646.6
  ]
 },
 {
  "input": "So the activation of the neuron here is basically a measure of how positive the relevant weighted sum is.",
  "translatedText": "Yani buradaki nöronun aktivasyonu temelde ilgili ağırlıklı toplamın ne kadar pozitif olduğunun bir ölçüsüdür.",
  "model": "DeepL",
  "time_range": [
   649.12,
   656.36
  ]
 },
 {
  "input": "But maybe it's not that you want the neuron to light up when the weighted sum is bigger than 0.",
  "translatedText": "Ancak belki de nöronun ağırlıklı toplam 0'dan büyük olduğunda yanmasını istemiyorsunuzdur.",
  "model": "DeepL",
  "time_range": [
   657.54,
   661.88
  ]
 },
 {
  "input": "Maybe you only want it to be active when the sum is bigger than say 10.",
  "translatedText": "Belki de sadece toplam 10'dan büyük olduğunda aktif olmasını istiyorsunuz.",
  "model": "DeepL",
  "time_range": [
   662.28,
   666.36
  ]
 },
 {
  "input": "That is, you want some bias for it to be inactive.",
  "translatedText": "Yani, etkin olmaması için bir miktar önyargı istiyorsunuz.",
  "model": "DeepL",
  "time_range": [
   666.84,
   670.26
  ]
 },
 {
  "input": "What we'll do then is just add in some other number like negative 10 to this weighted sum before plugging it through the sigmoid squishification function.",
  "translatedText": "O zaman yapacağımız şey, sigmoid squishification fonksiyonundan geçirmeden önce bu ağırlıklı toplama negatif 10 gibi başka bir sayı eklemek olacaktır.",
  "model": "DeepL",
  "time_range": [
   671.38,
   679.66
  ]
 },
 {
  "input": "That additional number is called the bias.",
  "translatedText": "Bu ek sayıya önyargı adı verilir.",
  "model": "DeepL",
  "time_range": [
   680.58,
   682.44
  ]
 },
 {
  "input": "So the weights tell you what pixel pattern this neuron in the second layer is picking up on, and the bias tells you how high the weighted sum needs to be before the neuron starts getting meaningfully active.",
  "translatedText": "Yani ağırlıklar size ikinci katmandaki bu nöronun hangi piksel desenini algıladığını söyler ve önyargı size nöronun anlamlı bir şekilde aktif hale gelmeye başlamadan önce ağırlıklı toplamın ne kadar yüksek olması gerektiğini söyler.",
  "model": "DeepL",
  "time_range": [
   683.46,
   695.18
  ]
 },
 {
  "input": "And that is just one neuron.",
  "translatedText": "Ve bu sadece bir nöron.",
  "model": "DeepL",
  "time_range": [
   696.12,
   697.68
  ]
 },
 {
  "input": "Every other neuron in this layer is going to be connected to all 784 pixel neurons from the first layer, and each one of those 784 connections has its own weight associated with it.",
  "translatedText": "Bu katmandaki diğer her nöron, ilk katmandaki 784 piksel nöronuna bağlanacaktır ve bu 784 bağlantının her birinin kendisiyle ilişkili kendi ağırlığı vardır.",
  "model": "DeepL",
  "time_range": [
   698.28,
   710.94
  ]
 },
 {
  "input": "Also, each one has some bias, some other number that you add on to the weighted sum before squishing it with the sigmoid.",
  "translatedText": "Ayrıca, her birinin sigmoid ile ezmeden önce ağırlıklı toplama eklediğiniz başka bir sayı gibi bir önyargısı vardır.",
  "model": "DeepL",
  "time_range": [
   711.6,
   717.6
  ]
 },
 {
  "input": "And that's a lot to think about!",
  "translatedText": "Ve düşünecek çok şey var!",
  "model": "DeepL",
  "time_range": [
   718.11,
   719.54
  ]
 },
 {
  "input": "With this hidden layer of 16 neurons, that's a total of 784 times 16 weights, along with 16 biases.",
  "translatedText": "Bu 16 nöronlu gizli katman, 16 önyargı ile birlikte toplam 784 çarpı 16 ağırlık anlamına gelir.",
  "model": "DeepL",
  "time_range": [
   719.96,
   727.98
  ]
 },
 {
  "input": "And all of that is just the connections from the first layer to the second.",
  "translatedText": "Ve tüm bunlar sadece birinci katmandan ikinciye olan bağlantılardır.",
  "model": "DeepL",
  "time_range": [
   728.84,
   731.94
  ]
 },
 {
  "input": "The connections between the other layers also have a bunch of weights and biases associated with them.",
  "translatedText": "Diğer katmanlar arasındaki bağlantılar da kendileriyle ilişkili bir dizi ağırlığa ve önyargıya sahiptir.",
  "model": "DeepL",
  "time_range": [
   732.52,
   737.34
  ]
 },
 {
  "input": "All said and done, this network has almost exactly 13,000 total weights and biases.",
  "translatedText": "Tüm söylenenler ve yapılanlar, bu ağın neredeyse tam olarak 13.000 toplam ağırlığa ve önyargıya sahip olduğunu göstermektedir.",
  "model": "DeepL",
  "time_range": [
   738.34,
   743.8
  ]
 },
 {
  "input": "13,000 knobs and dials that can be tweaked and turned to make this network behave in different ways.",
  "translatedText": "13.000 düğme ve kadran, bu ağın farklı şekillerde davranmasını sağlamak için ayarlanıp çevrilebilir.",
  "model": "DeepL",
  "time_range": [
   743.8,
   749.96
  ]
 },
 {
  "input": "So when we talk about learning, what that's referring to is getting the computer to find a valid setting for all of these many many numbers so that it'll actually solve the problem at hand.",
  "translatedText": "Yani öğrenmeden bahsettiğimizde, bilgisayarın tüm bu çok sayıdaki sayı için geçerli bir ayar bulmasını ve böylece eldeki sorunu gerçekten çözmesini sağlamaktan bahsediyoruz.",
  "model": "DeepL",
  "time_range": [
   751.04,
   761.36
  ]
 },
 {
  "input": "One thought experiment that is at once fun and kind of horrifying is to imagine sitting down and setting all of these weights and biases by hand, purposefully tweaking the numbers so that the second layer picks up on edges, the third layer picks up on patterns, etc.",
  "translatedText": "Hem eğlenceli hem de dehşet verici bir düşünce deneyi, oturup tüm bu ağırlıkları ve önyargıları elle ayarladığınızı, ikinci katmanın kenarları, üçüncü katmanın desenleri vb. seçmesi için sayıları kasıtlı olarak değiştirdiğinizi hayal etmektir.",
  "model": "DeepL",
  "time_range": [
   762.62,
   776.58
  ]
 },
 {
  "input": "I personally find this satisfying rather than just treating the network as a total black box, because when the network doesn't perform the way you anticipate, if you've built up a little bit of a relationship with what those weights and biases actually mean, you have a starting place for experimenting with how to change the structure to improve.",
  "translatedText": "Ben şahsen bunu, ağa tamamen kara kutu muamelesi yapmaktan daha tatmin edici buluyorum, çünkü ağ beklediğiniz şekilde çalışmadığında, bu ağırlıkların ve önyargıların gerçekte ne anlama geldiğiyle biraz ilişki kurduysanız, yapıyı iyileştirmek için nasıl değiştireceğinizi denemek için bir başlangıç noktanız olur.",
  "model": "DeepL",
  "time_range": [
   776.98,
   794.18
  ]
 },
 {
  "input": "Or when the network does work but not for the reasons you might expect, digging into what the weights and biases are doing is a good way to challenge your assumptions and really expose the full space of possible solutions.",
  "translatedText": "Ya da ağ çalıştığında ancak beklediğiniz nedenlerle çalışmadığında, ağırlıkların ve önyargıların ne yaptığını araştırmak, varsayımlarınıza meydan okumak ve olası çözümlerin tüm alanını gerçekten ortaya çıkarmak için iyi bir yoldur.",
  "model": "DeepL",
  "time_range": [
   794.96,
   805.82
  ]
 },
 {
  "input": "By the way, the actual function here is a little cumbersome to write down, don't you think?",
  "translatedText": "Bu arada, buradaki asıl işlevi yazmak biraz zahmetli, sizce de öyle değil mi?",
  "model": "DeepL",
  "time_range": [
   806.84,
   810.68
  ]
 },
 {
  "input": "So let me show you a more notationally compact way that these connections are represented.",
  "translatedText": "Şimdi size bu bağlantıların notasyonel olarak daha derli toplu bir şekilde nasıl temsil edildiğini göstereyim.",
  "model": "DeepL",
  "time_range": [
   812.5,
   817.14
  ]
 },
 {
  "input": "This is how you'd see it if you choose to read up more about neural networks.",
  "translatedText": "Sinir ağları hakkında daha fazla okumayı seçerseniz bunu bu şekilde görürsünüz.",
  "model": "DeepL",
  "time_range": [
   817.66,
   820.52
  ]
 },
 {
  "input": "Organize all of the activations from one layer into a column as a matrix corresponds to the connections between one layer and a particular neuron in the next layer.",
  "translatedText": "Bir katmandaki tüm aktivasyonları, bir katman ile bir sonraki katmandaki belirli bir nöron arasındaki bağlantılara karşılık gelen bir matris olarak bir sütunda düzenleyin.",
  "model": "DeepL",
  "time_range": [
   821.38,
   838.0
  ]
 },
 {
  "input": "What that means is that taking the weighted sum of the activations in the first layer according to these weights corresponds to one of the terms in the matrix vector product of everything we have on the left here.",
  "translatedText": "Bunun anlamı, bu ağırlıklara göre ilk katmandaki aktivasyonların ağırlıklı toplamının alınması, burada solda sahip olduğumuz her şeyin matris vektör çarpımındaki terimlerden birine karşılık gelir.",
  "model": "DeepL",
  "time_range": [
   838.54,
   849.88
  ]
 },
 {
  "input": "By the way, so much of machine learning just comes down to having a good grasp of linear algebra, so for any of you who want a nice visual understanding for matrices and what matrix vector multiplication means, take a look at the series I did on linear algebra, especially chapter 3.",
  "translatedText": "Bu arada, makine öğreniminin büyük bir kısmı lineer cebiri iyi kavramaktan geçiyor, bu nedenle matrisler ve matris vektör çarpımının ne anlama geldiğini görsel olarak anlamak isteyenler lineer cebir üzerine yaptığım seriye, özellikle de 3. bölüme bir göz atabilir.",
  "model": "DeepL",
  "time_range": [
   854.0,
   868.6
  ]
 },
 {
  "input": "Back to our expression, instead of talking about adding the bias to each one of these values independently, we represent it by organizing all those biases into a vector, and adding the entire vector to the previous matrix vector product.",
  "translatedText": "İfademize geri dönersek, bu değerlerin her birine bağımsız olarak önyargı eklemekten bahsetmek yerine, tüm bu önyargıları bir vektör halinde düzenleyerek ve tüm vektörü önceki matris vektör çarpımına ekleyerek temsil ediyoruz.",
  "model": "DeepL",
  "time_range": [
   869.24,
   882.3
  ]
 },
 {
  "input": "Then as a final step, I'll wrap a sigmoid around the outside here, and what that's supposed to represent is that you're going to apply the sigmoid function to each specific component of the resulting vector inside.",
  "translatedText": "Son adım olarak, burada dış tarafın etrafına bir sigmoid saracağım ve bunun temsil etmesi gereken şey, sigmoid fonksiyonunu içeride ortaya çıkan vektörün her bir özel bileşenine uygulayacağınızdır.",
  "model": "DeepL",
  "time_range": [
   883.28,
   894.74
  ]
 },
 {
  "input": "So once you write down this weight matrix and these vectors as their own symbols, you can communicate the full transition of activations from one layer to the next in an extremely tight and neat little expression, and this makes the relevant code both a lot simpler and a lot faster, since many libraries optimize the heck out of matrix multiplication.",
  "translatedText": "Dolayısıyla, bu ağırlık matrisini ve bu vektörleri kendi sembolleri olarak yazdığınızda, aktivasyonların bir katmandan diğerine tam geçişini son derece sıkı ve düzgün küçük bir ifadeyle iletebilirsiniz ve bu, ilgili kodu hem çok daha basit hem de çok daha hızlı hale getirir, çünkü birçok kütüphane matris çarpımını optimize eder.",
  "model": "DeepL",
  "time_range": [
   895.94,
   915.66
  ]
 },
 {
  "input": "Remember how earlier I said these neurons are simply things that hold numbers?",
  "translatedText": "Daha önce bu nöronların sadece sayıları tutan şeyler olduğunu söylediğimi hatırlıyor musunuz?",
  "model": "DeepL",
  "time_range": [
   917.82,
   921.46
  ]
 },
 {
  "input": "Well of course the specific numbers that they hold depends on the image you feed in, so it's actually more accurate to think of each neuron as a function, one that takes in the outputs of all the neurons in the previous layer and spits out a number between 0 and 1.",
  "translatedText": "Elbette tuttukları belirli sayılar beslediğiniz görüntüye bağlıdır, bu nedenle aslında her nöronu bir önceki katmandaki tüm nöronların çıktılarını alan ve 0 ile 1 arasında bir sayı veren bir fonksiyon olarak düşünmek daha doğrudur.",
  "model": "DeepL",
  "time_range": [
   922.22,
   938.34
  ]
 },
 {
  "input": "Really the entire network is just a function, one that takes in 784 numbers as an input and spits out 10 numbers as an output.",
  "translatedText": "Aslında tüm ağ, 784 sayıyı girdi olarak alan ve 10 sayıyı çıktı olarak veren bir fonksiyondan ibarettir.",
  "model": "DeepL",
  "time_range": [
   939.2,
   947.06
  ]
 },
 {
  "input": "It's an absurdly complicated function, one that involves 13,000 parameters in the forms of these weights and biases that pick up on certain patterns, and which involves iterating many matrix vector products and the sigmoid squishification function, but it's just a function nonetheless, and in a way it's kind of reassuring that it looks complicated.",
  "translatedText": "Bu, belirli örüntüleri yakalayan bu ağırlıklar ve önyargılar biçiminde 13.000 parametre içeren ve birçok matris vektör çarpımını ve sigmoid squishification işlevini yinelemeyi içeren saçma bir şekilde karmaşık bir işlevdir, ancak yine de sadece bir işlevdir ve bir şekilde karmaşık görünmesi bir tür güven vericidir.",
  "model": "DeepL",
  "time_range": [
   947.56,
   966.66
  ]
 },
 {
  "input": "I mean if it were any simpler, what hope would we have that it could take on the challenge of recognizing digits?",
  "translatedText": "Demek istediğim, daha basit olsaydı, rakamları tanıma zorluğunun üstesinden gelebileceğine dair ne umudumuz olurdu?",
  "model": "DeepL",
  "time_range": [
   967.34,
   972.28
  ]
 },
 {
  "input": "And how does it take on that challenge?",
  "translatedText": "Peki bu zorluğun üstesinden nasıl geliyor?",
  "model": "DeepL",
  "time_range": [
   973.34,
   974.7
  ]
 },
 {
  "input": "How does this network learn the appropriate weights and biases just by looking at data?",
  "translatedText": "Bu ağ sadece verilere bakarak uygun ağırlıkları ve önyargıları nasıl öğreniyor?",
  "model": "DeepL",
  "time_range": [
   975.08,
   979.36
  ]
 },
 {
  "input": "Well that's what I'll show in the next video, and I'll also dig a little more into what this particular network we're seeing is really doing.",
  "translatedText": "Bir sonraki videoda bunu göstereceğim ve ayrıca gördüğümüz bu özel ağın gerçekte ne yaptığını biraz daha inceleyeceğim.",
  "model": "DeepL",
  "time_range": [
   980.14,
   986.12
  ]
 },
 {
  "input": "Now is the point I suppose I should say subscribe to stay notified about when video or any new videos come out, but realistically most of you don't actually receive notifications from YouTube, do you?",
  "translatedText": "Şimdi, sanırım video veya yeni videolar çıktığında haberdar olmak için abone olun demem gerekiyor, ancak gerçekçi olmak gerekirse çoğunuz YouTube'dan bildirim almıyorsunuz, değil mi?",
  "model": "DeepL",
  "time_range": [
   987.58,
   997.42
  ]
 },
 {
  "input": "Maybe more honestly I should say subscribe so that the neural networks that underlie YouTube's recommendation algorithm are primed to believe that you want to see content from this channel get recommended to you.",
  "translatedText": "Belki de daha dürüstçe abone olun demeliyim ki YouTube'un öneri algoritmasının temelini oluşturan sinir ağları, bu kanaldaki içeriğin size önerilmesini istediğinize inanmaya hazır hale gelsin.",
  "model": "DeepL",
  "time_range": [
   998.02,
   1007.88
  ]
 },
 {
  "input": "Anyway stay posted for more.",
  "translatedText": "Her neyse, daha fazlası için haberdar olun.",
  "model": "DeepL",
  "time_range": [
   1008.56,
   1009.94
  ]
 },
 {
  "input": "Thank you very much to everyone supporting these videos on Patreon.",
  "translatedText": "Bu videoları Patreon'da destekleyen herkese çok teşekkür ederim.",
  "model": "DeepL",
  "time_range": [
   1010.76,
   1013.5
  ]
 },
 {
  "input": "I've been a little slow to progress in the probability series this summer, but I'm jumping back into it after this project, so patrons you can look out for updates there.",
  "translatedText": "Bu yaz olasılık serisinde biraz yavaş ilerledim, ancak bu projeden sonra tekrar başlıyorum, bu yüzden güncellemeleri orada bulabilirsiniz.",
  "model": "DeepL",
  "time_range": [
   1014.0,
   1021.9
  ]
 },
 {
  "input": "To close things off here I have with me Leisha Lee who did her PhD work on the theoretical side of deep learning and who currently works at a venture capital firm called Amplify Partners who kindly provided some of the funding for this video.",
  "translatedText": "Kapanışı yapmak üzere, derin öğrenmenin teorik yönü üzerine doktora çalışması yapan ve şu anda bu videonun finansmanının bir kısmını sağlayan Amplify Partners adlı bir girişim sermayesi şirketinde çalışan Leisha Lee ile birlikteyim.",
  "model": "DeepL",
  "time_range": [
   1023.6,
   1034.62
  ]
 },
 {
  "input": "So Leisha one thing I think we should quickly bring up is this sigmoid function.",
  "translatedText": "Bu yüzden Leisha, bu sigmoid fonksiyonundan hızlıca bahsetmemiz gerektiğini düşünüyorum.",
  "model": "DeepL",
  "time_range": [
   1035.46,
   1039.12
  ]
 },
 {
  "input": "As I understand it early networks use this to squish the relevant weighted sum into that interval between zero and one, you know kind of motivated by this biological analogy of neurons either being inactive or active.",
  "translatedText": "Anladığım kadarıyla ilk ağlar bunu, ilgili ağırlıklı toplamı sıfır ile bir arasındaki aralığa sıkıştırmak için kullanıyor, bilirsiniz, nöronların inaktif ya da aktif olduğu bu biyolojik analojiyle motive edilmiş bir tür.",
  "model": "DeepL",
  "time_range": [
   1039.7,
   1049.84
  ]
 },
 {
  "input": "Exactly.",
  "translatedText": "Aynen öyle.",
  "model": "DeepL",
  "time_range": [
   1050.28,
   1050.3
  ]
 },
 {
  "input": "But relatively few modern networks actually use sigmoid anymore.",
  "translatedText": "Ancak nispeten az sayıda modern ağ artık sigmoid kullanmaktadır.",
  "model": "DeepL",
  "time_range": [
   1050.56,
   1054.04
  ]
 },
 {
  "input": "Yeah.",
  "translatedText": "Evet.",
  "model": "DeepL",
  "time_range": [
   1054.32,
   1054.32
  ]
 },
 {
  "input": "It's kind of old school right?",
  "translatedText": "Biraz eski moda değil mi?",
  "model": "DeepL",
  "time_range": [
   1054.44,
   1055.54
  ]
 },
 {
  "input": "Yeah or rather relu seems to be much easier to train.",
  "translatedText": "Evet, daha doğrusu Relu'yu eğitmek çok daha kolay görünüyor.",
  "model": "DeepL",
  "time_range": [
   1055.76,
   1058.98
  ]
 },
 {
  "input": "And relu stands for rectified linear unit?",
  "translatedText": "Ve relu, rektifiye edilmiş doğrusal birim anlamına mı geliyor?",
  "model": "DeepL",
  "time_range": [
   1059.4,
   1062.34
  ]
 },
 {
  "input": "Yes it's this kind of function where you're just taking a max of zero and a where a is given by what you were explaining in the video and what this was sort of motivated from I think was a partially by a biological analogy with how neurons would either be activated or not and so if it passes a certain threshold it would be the identity function but if it did not then it would just not be activated so it'd be zero so it's kind of a simplification.",
  "translatedText": "Evet, bu sadece sıfır ve a'nın maksimumunu aldığınız ve a'nın videoda açıkladığınız şey tarafından verildiği bir tür işlevdir ve bunun bir tür motivasyonunun kısmen nöronların nasıl aktive edileceği veya edilmeyeceği ile ilgili biyolojik bir analoji olduğunu düşünüyorum ve bu nedenle belirli bir eşiği geçerse kimlik işlevi olur, ancak geçmezse o zaman aktive olmaz, bu yüzden sıfır olur, bu yüzden bir tür basitleştirme.",
  "model": "DeepL",
  "time_range": [
   1062.68,
   1090.84
  ]
 },
 {
  "input": "Using sigmoids didn't help training or it was very difficult to train at some point and people just tried relu and it happened to work very well for these incredibly deep neural networks.",
  "translatedText": "Sigmoid kullanmak eğitime yardımcı olmadı ya da bir noktada eğitmek çok zordu ve insanlar sadece relu'yu denediler ve bu inanılmaz derecede derin sinir ağları için çok iyi çalıştı.",
  "model": "DeepL",
  "time_range": [
   1091.16,
   1104.62
  ]
 },
 {
  "input": "All right thank you Alicia.",
  "translatedText": "Pekâlâ, teşekkürler Alicia.",
  "model": "DeepL",
  "time_range": [
   1105.1,
   1105.64
  ]
 }
]