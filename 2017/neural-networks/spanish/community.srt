1
00:00:03,300 --> 00:00:07,565
Este es un tres, que esta escrito de manera descuidada

2
00:00:07,565 --> 00:00:10,835
y renderisado en una resolución extremadamente pequeña de 28X28 pixeles,

3
00:00:10,835 --> 00:00:13,975
pero tu cerebro no tiene problemas reconociéndolo como un 3,

4
00:00:13,975 --> 00:00:16,835
quiero  tomes un momento para pensar en que loco es que

5
00:00:16,835 --> 00:00:19,895
el cerebro pueda hacer esto sin esfuerzo ,

6
00:00:19,895 --> 00:00:22,975
lo que digo es que , este, este y este son también reconocibles como 3

7
00:00:22,975 --> 00:00:26,325
Incluso si el valor de cada pixel es

8
00:00:26,325 --> 00:00:29,125
muy diferente de una imagen a la siguiente

9
00:00:29,125 --> 00:00:31,975
Las celulas foto- sensibles en particular en tu ojo

10
00:00:31,975 --> 00:00:33,815
que se están disparando cuando

11
00:00:34,205 --> 00:00:37,115
ves este tres es muy diferente de las que disparan cuando ves este 3

12
00:00:37,265 --> 00:00:40,025
, pero algo en esa loca visión de la  corteza cerebral tuya

13
00:00:40,025 --> 00:00:42,895
resuelve que estas 2 representan la misma idea.

14
00:00:42,895 --> 00:00:45,755
mientras que al mismo tiempo,

15
00:00:45,755 --> 00:00:48,615
reconoce otras imágenes como sus propias ideas distintas.

16
00:00:49,065 --> 00:00:51,795
Pero si te dijo, ey ,siéntate y escribe para mi

17
00:00:51,795 --> 00:00:54,785
un programa que tome un rejilla de 28 X 28 pixeles

18
00:00:54,785 --> 00:00:57,855
como esta

19
00:00:57,855 --> 00:01:00,925
Y devuelva un numero en particular  entre 0 y 10

20
00:01:00,925 --> 00:01:03,955
diciendo cual número piensa que es,

21
00:01:03,955 --> 00:01:06,275
bueno la tarea empieza desde lo comicamente fácil hasta lo desalentadoramente difícil

22
00:01:06,855 --> 00:01:09,785
A menos de que vivas debajo de una piedra, pienso  que difícilmente necesito

23
00:01:09,785 --> 00:01:12,795
motivar la relevancia e importancia de la maquina de aprendizaje

24
00:01:12,795 --> 00:01:15,805
y redes neuronales en el presente y en el futuro

25
00:01:15,805 --> 00:01:18,600
pero lo que quiero hacer aquí es mostrarte que realmente es una red neuronal.

26
00:01:18,920 --> 00:01:22,100
asumiendo  que no hay conocimiento previo y ayudar a visualizar

27
00:01:22,105 --> 00:01:25,285
qué está haciendo , no como una palabra pegadiza ,si no como una pieza matemática.

28
00:01:25,285 --> 00:01:28,355
Mi  esperanza es que  sientas que esta estructura en sí

29
00:01:28,355 --> 00:01:31,365
motiva , y la sensación de que sabes que significa

30
00:01:31,365 --> 00:01:34,685
cuando lees o escuchas  "Red neuronal "

31
00:01:35,045 --> 00:01:37,045
, este video será dedicado a la componente - estructura  de eso,

32
00:01:37,045 --> 00:01:41,115
y el siguiente abordará "El aprendizaje"

33
00:01:41,115 --> 00:01:44,155
Lo que vamos a hacer es poner junta una red neuronal

34
00:01:44,155 --> 00:01:46,385
que puede aprender a reconocer dígitos escritos a mano

35
00:01:49,365 --> 00:01:52,585
Esto un tipo de ejemplo clásico

36
00:01:52,585 --> 00:01:55,115
para introducir el temas y estoy feliz por apegarme al estatuto

37
00:01:55,115 --> 00:01:58,035
porque al final de los dos videos,  quiero que veas una par de buenas fuentes

38
00:01:58,035 --> 00:02:00,035
donde puedes aprender más  y descargar el código que hace esto

39
00:02:00,040 --> 00:02:03,060
,y jugar con el en tu computadora.

40
00:02:04,800 --> 00:02:09,680
Hay, muchas, muchas variantes de una red neuronal y en años recientes

41
00:02:09,940 --> 00:02:12,645
han un tipo de boom! en las investigaciones futuras,

42
00:02:12,645 --> 00:02:15,285
pero en estos dos vídeos introductorios

43
00:02:15,285 --> 00:02:18,125
tú y yo solo vamos a ver la forma simple " Plain vanilla"

44
00:02:18,125 --> 00:02:21,175
sin adornos  añadidos , este tipo de pre-requisito

45
00:02:21,175 --> 00:02:24,115
necesario , para entender cualquiera de las poderosas variantes modernas

46
00:02:24,115 --> 00:02:25,115
y créeme,

47
00:02:25,195 --> 00:02:28,635
todavía esta llena de complejidad para nosotros, como para envolverla en nuestras mentes,

48
00:02:28,860 --> 00:02:31,540
pero incluso en esta forma simple , puede aprender a reconocer dígitos

49
00:02:31,740 --> 00:02:34,605
escritos a mano, lo cual es una cosa muy genial

50
00:02:34,605 --> 00:02:36,635
que una computadora sea capaz de realizar

51
00:02:37,220 --> 00:02:41,980
Y al mismo tiempo verás cómo decente  el par de esperanzas que teníamos para esta.

52
00:02:43,260 --> 00:02:45,260
Como el nombre sugiere , las redes neuronales están

53
00:02:45,260 --> 00:02:46,000
inspiradas por el cerebro

54
00:02:46,005 --> 00:02:49,215
pero descompongamos eso en partes mas pequeñas,

55
00:02:49,215 --> 00:02:51,560
Qué son las neuronas y en que sentido están conectadas

56
00:02:52,235 --> 00:02:55,165
Cuando digo, "Neurona"

57
00:02:55,165 --> 00:02:57,165
todo en lo que me gustaría pensar, es una cosa que alberga un número

58
00:02:57,165 --> 00:03:00,440
Específicamente,

59
00:03:00,440 --> 00:03:01,625
un número entre 0 y 1

60
00:03:01,625 --> 00:03:02,625
nada mas que eso,

61
00:03:04,035 --> 00:03:06,555
por ejemplo , red empieza con un montón

62
00:03:06,555 --> 00:03:09,575
de neuronas correspondientes cada uno

63
00:03:09,575 --> 00:03:12,265
de los 28*28 pixeles de la imagen,

64
00:03:12,265 --> 00:03:14,265
lo cual es 784 neuronas en total,

65
00:03:14,265 --> 00:03:15,115
cada una de estas,

66
00:03:15,115 --> 00:03:18,075
alberga el número que representa la escala de gris

67
00:03:18,095 --> 00:03:20,805
del correspondiente pixel

68
00:03:20,805 --> 00:03:23,635
Oscilando en un rango de 0 para pixeles negros

69
00:03:23,640 --> 00:03:24,440
hasta 1 para pixeles blancos .

70
00:03:25,300 --> 00:03:28,780
Este número dentro de la neurona

71
00:03:28,795 --> 00:03:31,895
es llamado "Activación", y la imagen que debes de tener es que

72
00:03:31,895 --> 00:03:34,335
cada neurona es iluminada cuando su "Activación" es número mas alto (1)

73
00:03:36,365 --> 00:03:39,375
Asi que todas estas 784 neuronas ,

74
00:03:39,375 --> 00:03:41,885
arreglándolas  en la primera capa de nuestra red

75
00:03:46,095 --> 00:03:48,925
Ahora, saltando a la última capa

76
00:03:48,925 --> 00:03:51,760
Esta tiene 10 neuronas , cada una representando uno de los dígitos,

77
00:03:52,100 --> 00:03:54,645
la "Activación " en estas neuronas

78
00:03:54,645 --> 00:03:57,355
es de nuevo un número entre 0 y 1

79
00:03:57,495 --> 00:04:00,385
representa cuánto el sistemas piensa que una

80
00:04:00,385 --> 00:04:03,515
imagen dada corresponde a un dígito dado,

81
00:04:03,515 --> 00:04:06,275
también hay un par de capas en medio llamadas "las capas ocultas",

82
00:04:06,275 --> 00:04:09,055
que para el tiempo,  debería ser una

83
00:04:09,055 --> 00:04:11,845
gran pregunta , remarcar cómo el tierra este

84
00:04:11,845 --> 00:04:14,655
proceso de reconocer dígitos va sa ser factible

85
00:04:14,655 --> 00:04:17,645
En esta red escojo dos capas ocultas

86
00:04:17,645 --> 00:04:20,665
cada una con 16 neuronas, y de inmediato esa para una elección aleatoria

87
00:04:20,765 --> 00:04:22,885
para ser honesto, escogí dos capas ,

88
00:04:22,885 --> 00:04:26,155
basado en cómo quiero llevar la estructura en un momento,

89
00:04:26,155 --> 00:04:29,385
y 16?, bueno , ese fue un buen número para colocar en la pantalla,

90
00:04:29,385 --> 00:04:32,060
en la práctica hay mucho espacio experimentar con una estructura específica .

91
00:04:32,880 --> 00:04:35,780
La manera en que la red opera las activaciones

92
00:04:35,785 --> 00:04:38,645
en una capa determina las activaciones en la siguiente capa,

93
00:04:38,895 --> 00:04:41,965
y por su puesto el corazón de la red

94
00:04:41,965 --> 00:04:44,455
como un mecanismo  proceso de información desciende

95
00:04:44,765 --> 00:04:47,005
ha exactamente cómo esas activaciones de una capa

96
00:04:47,005 --> 00:04:49,855
repercuten en las activaciones en la siguiente capa,

97
00:04:49,855 --> 00:04:53,015
significaba  ser ligeramente análogo

98
00:04:53,015 --> 00:04:56,025
a una red biológica de neuronas , algún grupo de neuronas disparándose

99
00:04:56,025 --> 00:04:59,105
provoca que otras se disparen,  la red

100
00:04:59,205 --> 00:05:02,205
que muestro aquí ya ha sido entrenada para reconocer dígitos ,

101
00:05:02,205 --> 00:05:05,395
y déjame  enseñarte lo que quiero decir  con eso, si tú ajustas una imagen

102
00:05:05,395 --> 00:05:08,335
prendiendo todas  las 784 neuronas

103
00:05:08,335 --> 00:05:11,395
de la malla de entrada (input) de acuerdo a brillo

104
00:05:11,395 --> 00:05:14,365
de cada pixel en la imagen

105
00:05:14,365 --> 00:05:17,285
, ese patrón de activación causa un patrón específico en la siguiente capa

106
00:05:17,285 --> 00:05:20,345
, el cual causa un patrón en la siguiente

107
00:05:20,345 --> 00:05:23,025
, que finalmente da un patrón en la capa de salida (output ),

108
00:05:23,025 --> 00:05:25,645
y la  neurona mas iluminada de esa capa de salida

109
00:05:25,645 --> 00:05:28,385
es la elección de  la red para decir

110
00:05:28,385 --> 00:05:29,505
qué número la imagen representa.

111
00:05:32,235 --> 00:05:34,095
Y antes de saltar en la matemática,

112
00:05:34,095 --> 00:05:37,155
de cómo una capa influye a la siguiente ,o cómo el "Entrenamiento " funciona

113
00:05:37,155 --> 00:05:40,095
hablemos por qué es incluso razonable

114
00:05:40,095 --> 00:05:42,865
contar con una estructura de capas como esta,

115
00:05:42,865 --> 00:05:45,865
para comportarse inteligentemente , qué esperamos aquí

116
00:05:45,865 --> 00:05:48,565
cuál es la mayor esperanza para esas capas medias,

117
00:05:48,965 --> 00:05:55,035
que podrías estar haciendo , bueno, cuando yo reconozco dígitos

118
00:05:55,035 --> 00:05:58,075
pongo juntas varias piezas _compontes como un nueve, que tiene un bucle en la punta y una linea recta

119
00:05:58,075 --> 00:06:01,325
un ocho también tiene un bucle arriba , pero esta emparejado

120
00:06:01,685 --> 00:06:04,655
con otro bucle abajo, un cuatro básicamente está descompuesto

121
00:06:04,655 --> 00:06:06,955
en tres líneas específicas   y cosas como esa.

122
00:06:07,435 --> 00:06:10,285
Ahora, en un mundo perfecto, podrías esperar que cada neurona

123
00:06:10,285 --> 00:06:13,045
en la penúltima capa

124
00:06:13,045 --> 00:06:15,925
correspondiera con uno de estos sub componentes

125
00:06:15,925 --> 00:06:18,655
, que cada vez que alimentas en una imagen digamos

126
00:06:18,655 --> 00:06:21,685
con una curva en la punta, como un nueve o un ocho, hay un

127
00:06:21,795 --> 00:06:24,035
alguna neurona específica cuya activación va a ser

128
00:06:24,705 --> 00:06:27,675
cercana a 1, lo que no estoy diciendo es que este curva específica de pixeles,

129
00:06:27,675 --> 00:06:30,455
la expectativa sería cualquier patrón curvo generalmente

130
00:06:30,455 --> 00:06:31,805
hacia arriba , pone en marcha esta neurona

131
00:06:32,135 --> 00:06:35,085
De esa manera, yendo de la tercera capa

132
00:06:35,085 --> 00:06:37,525
hasta la última solo requiere aprender que

133
00:06:37,525 --> 00:06:40,335
combinación de subcomponentes corresponde al dígito.

134
00:06:41,285 --> 00:06:44,205
Por supuesto, eso solo empeora el problema en el camino, porque

135
00:06:44,205 --> 00:06:46,695
cómo reconoces los subcomponentes

136
00:06:46,695 --> 00:06:49,555
o incluso aprender cuáles deberían ser los subcomponentes

137
00:06:49,555 --> 00:06:52,035
, e incluso, no hemos hablado cómo un capa influye la siguiente,

138
00:06:52,035 --> 00:06:54,845
pero sígueme en esto por un momento, reconocer un bucle

139
00:06:54,845 --> 00:06:57,855
puede también ser dividido en subproblemas

140
00:06:57,855 --> 00:07:00,985
una manera razonable de hacer esto sería primero

141
00:07:00,985 --> 00:07:03,040
reconocer los varios bordes pequeños que  lo forman

142
00:07:03,320 --> 00:07:06,105
Similarmente, una línea larga como la que podrías ver en el 1

143
00:07:06,105 --> 00:07:08,985
o 4 o 7 bueno,

144
00:07:08,985 --> 00:07:11,725
esas realmente solo un largo borde ,  o podrías pensarlas

145
00:07:11,725 --> 00:07:14,685
como cierto patrón de pequeños bordes

146
00:07:14,845 --> 00:07:15,845
Asi qué,

147
00:07:15,915 --> 00:07:18,775
quizás, la expectativa

148
00:07:18,775 --> 00:07:21,745
de que cada neurona de la segunda capa de la red corresponda

149
00:07:21,745 --> 00:07:23,095
con varios pequeños bordes.

150
00:07:23,815 --> 00:07:27,045
Quizás cuando una imagen  como esta aparezca,

151
00:07:27,215 --> 00:07:30,555
prenda todas las neuronas asociadas con alrededor de  8 a 10

152
00:07:30,555 --> 00:07:33,545
pequeños bordes específicos

153
00:07:33,545 --> 00:07:36,615
que después prenden las neuronas asociadas con el bucle superior

154
00:07:36,620 --> 00:07:40,420
y una larga línea vertical, y  que esas neuronas prendan las neuronas asociadas con el nueve

155
00:07:40,460 --> 00:07:43,340
sea o no esto lo que nuestra red final haga

156
00:07:43,345 --> 00:07:45,905
es otra pregunta,  regresaré  una vez

157
00:07:45,905 --> 00:07:49,065
veamos como entrenar un red, pero esta

158
00:07:49,065 --> 00:07:52,135
es un expectativa que podríamos tener , un tipo de meta con una estructura de capas como esta

159
00:07:52,135 --> 00:07:53,105
 

160
00:07:53,105 --> 00:07:56,335
Además puedes imaginar cómo  ser capaz de detectar bordes

161
00:07:56,335 --> 00:07:59,245
y patrones como este sería  realmente útil

162
00:07:59,245 --> 00:08:01,795
para otras tareas de reconociendo de imágenes, e incluso mas allá

163
00:08:01,795 --> 00:08:04,925
de reconocimiento de imágenes, hay todos tipo de cosas inteligentes que podrías

164
00:08:04,925 --> 00:08:07,995
pensar hacer, cosas que se puedan dividir en capas de abstracción.

165
00:08:07,995 --> 00:08:10,935
EL análisis gramatical del habla por ejemplo, envuelve

166
00:08:10,935 --> 00:08:14,095
tomar una fila de audio y recolectar o distinguir sonidos que combinados

167
00:08:14,095 --> 00:08:16,265
para hacer ciertas sílabas , que combinadas

168
00:08:16,265 --> 00:08:19,175
forman palabras , que combinadas hacen oraciones

169
00:08:19,175 --> 00:08:20,525
y que juntas hacen mas pensamiento abstractos, etc.

170
00:08:21,165 --> 00:08:24,195
pero, recordando, cómo esto funciona ,

171
00:08:24,195 --> 00:08:26,735
, ahora vizualizate a ti diseñando  cómo la activación

172
00:08:26,735 --> 00:08:28,335
en una capa

173
00:08:28,335 --> 00:08:34,525
debería determinar la activación en la siguiente,

174
00:08:34,525 --> 00:08:37,395
la meta es tener algún mecanismo concebiblemente podría combinar pixeles ,

175
00:08:37,395 --> 00:08:40,585
o bordes en patrones , o patrones en dígitos  ,

176
00:08:40,585 --> 00:08:43,465
y para detallar un ejemplo muy específico,

177
00:08:43,465 --> 00:08:46,585
digamos que la esperanza  es para un neurona en particular,

178
00:08:46,585 --> 00:08:49,565
en la segunda capa , para que ya sea la imagen tenga un borde

179
00:08:49,565 --> 00:08:50,745
en esta región o no.

180
00:08:51,105 --> 00:08:53,735
La pregunta a mano  es:

181
00:08:53,735 --> 00:08:56,545
¿Qué parámetros debería tener la red ?

182
00:08:56,545 --> 00:08:59,515
¿Qué cuadrantes y perillas deberías ser capas de afinar

183
00:08:59,515 --> 00:09:02,485
de manera  suficientemente expresiva , para que potencialmente capture este patrón?

184
00:09:02,485 --> 00:09:05,715
u otro patrón de pixeles

185
00:09:05,720 --> 00:09:08,160
el patrón de varios bordes que pueden hacer un ciclo y otro tipo de cosas.

186
00:09:08,380 --> 00:09:10,945
Lo que haremos  es asignar un "peso "

187
00:09:10,945 --> 00:09:13,765
a cada una de las conexiones

188
00:09:13,765 --> 00:09:15,920
entre nuestra neurona  y las neuronas de la primera capa.

189
00:09:16,440 --> 00:09:19,560
Estos "pesos" son solo números , luego

190
00:09:19,565 --> 00:09:22,275
toma todas esas activaciones de la primera capa

191
00:09:22,275 --> 00:09:25,085
y luego calcula la suma de sus pesos

192
00:09:25,085 --> 00:09:26,085
de acuerdo a estos pesos.

193
00:09:27,275 --> 00:09:29,715
Encuentro útil pensar en estos pesos siendo organizados

194
00:09:29,715 --> 00:09:32,735
en una pequeña cuadrícula de sí mismos,

195
00:09:32,735 --> 00:09:35,535
y voy a usar los pixeles verdes para indicar los pesos positivos

196
00:09:35,535 --> 00:09:38,755
y los pixeles rojos para indicar pesos negativos

197
00:09:38,755 --> 00:09:41,915
y la luminosidad de ese pixel es una  descripción suelta

198
00:09:42,505 --> 00:09:45,495
del valor del peso

199
00:09:45,495 --> 00:09:48,345
ahora, si los pesos asociados con casi todos los pixeles cero excepto para

200
00:09:48,345 --> 00:09:51,285
algunos pesos positivos en esta región que nos interesa , luego tomar

201
00:09:51,285 --> 00:09:54,195
la suma "pesada" de todos los valores de los pixeles

202
00:09:54,195 --> 00:09:57,155
es realmente solo sumar los valores del pixel que esta en la

203
00:09:57,155 --> 00:09:58,155
región que nos interesa.

204
00:09:58,955 --> 00:10:02,335
Y si realmente queremos tomar algo donde haya un eje,

205
00:10:02,345 --> 00:10:04,955
lo que podrías hacer es tener algunos

206
00:10:04,955 --> 00:10:07,945
pesos negativos con los pixeles redondeados ,

207
00:10:07,945 --> 00:10:10,975
luego, la suma es mas grande cuando eso pixeles de en medio

208
00:10:10,975 --> 00:10:13,105
están iluminados , pero los los pixeles redondeados estan oscuros .

209
00:10:14,395 --> 00:10:17,535
Cuando coputas una suma "Pesada" como esta

210
00:10:17,535 --> 00:10:20,455
podrías terminar con cualquier número ,pero para esta red

211
00:10:20,455 --> 00:10:23,695
lo que queremos son activaciones

212
00:10:23,855 --> 00:10:27,005
que sean algún valor entre 0 y 1,  una cosa común que se hace es

213
00:10:27,005 --> 00:10:29,785
empujar esta suma pesada en una función que

214
00:10:29,785 --> 00:10:32,125
junte toda la recta de los números reales un rango  entre 0 y 1

215
00:10:32,335 --> 00:10:35,555
y una función común que hace esto es llamada la

216
00:10:35,555 --> 00:10:37,685
función sigmoid, también conocida  como la curva logística.

217
00:10:38,035 --> 00:10:41,085
Básicamente, valores de entrada muy negativos

218
00:10:41,285 --> 00:10:44,365
cercanos a cero, y valores positivos cercanos a 1

219
00:10:44,365 --> 00:10:46,805
y continuamente incrementa alrededor de la entrada 0.

220
00:10:49,165 --> 00:10:51,925
Asi que , la activación de la neurona aquí,

221
00:10:51,925 --> 00:10:54,895
es básicamente una medida de

222
00:10:54,895 --> 00:10:56,605
que tan positiva es la suma pesada

223
00:10:57,795 --> 00:11:00,015
Pero, puede ser que no sea lo que tu quieras

224
00:11:00,015 --> 00:11:02,955
que ilumine la neurona cuando la suma pesada es mayor que 0,

225
00:11:02,960 --> 00:11:06,460
quizás que solo sea activada cuando la suma pesada es mayor que, digamos,  10

226
00:11:07,120 --> 00:11:10,660
para eso tu quieres un "Bias"  que este inactivo

227
00:11:10,955 --> 00:11:13,895
lo que haremos luego sera solo sumar

228
00:11:13,895 --> 00:11:16,885
otro número como -10 a esta suma pesada,

229
00:11:16,885 --> 00:11:20,045
antes de enchufarlo a la función Sigmoid

230
00:11:20,340 --> 00:11:22,800
Ese número adicional es llamado el BIAS.

231
00:11:23,120 --> 00:11:26,180
Entonces los pesos te dicen que patrón de pixeles

232
00:11:26,185 --> 00:11:29,275
en la segunda capa esta neurona esta tomando

233
00:11:29,275 --> 00:11:32,235
Y el BIAS  te dice que tan alta la suma podría ser

234
00:11:32,235 --> 00:11:35,505
antes de que la neurona empieza a activarse significativamente .

235
00:11:35,965 --> 00:11:38,955
Y eso es solo una neurona,

236
00:11:39,055 --> 00:11:42,155
Cualquier otra neurona en esta capa va estar conectada

237
00:11:42,155 --> 00:11:45,195
a todos los 784 pixeles de la primera capa

238
00:11:45,195 --> 00:11:48,365
y cada uno de esa 784 conexiones

239
00:11:48,365 --> 00:11:50,785
tienes su propio peso asociado con ella.

240
00:11:51,285 --> 00:11:53,965
También cada tiene un BIAS ,

241
00:11:53,965 --> 00:11:57,780
(Otro número que añades a la suma pesada antes de pasarla a la función Sigmoid )

242
00:11:58,260 --> 00:12:00,780
Eso es mucho que pensar!

243
00:12:00,945 --> 00:12:04,015
.Con esta capa oculta  de 16 neuronas,  eso hace un total de

244
00:12:04,015 --> 00:12:07,035
784 * 16 de peso

245
00:12:07,035 --> 00:12:09,945
junto con 16 BIAS , y todo eso

246
00:12:09,945 --> 00:12:12,845
son solo las conexiones de la primera capa con la segunda

247
00:12:12,845 --> 00:12:15,965
la conexión entre las otras capas también tienen un montón de pesos y  BIAS

248
00:12:15,965 --> 00:12:17,155
asociadas con la ellas

249
00:12:17,995 --> 00:12:21,055
Tido dicho, esta red tiene casi

250
00:12:21,055 --> 00:12:24,205
13,002 pesos en total mas Biases

251
00:12:24,215 --> 00:12:27,325
13,000 botones y conexiones que pueden

252
00:12:27,325 --> 00:12:30,255
ser retocados y convertidos para que esta red se comporte en diferentes maneras

253
00:12:30,625 --> 00:12:33,515
Así que  cuando hablamos acerca del aprendizaje

254
00:12:33,515 --> 00:12:36,415
a lo que se refiere es que permitiendo a la computadora encontrar un

255
00:12:36,415 --> 00:12:39,245
conjunto válido para muchos de estos números

256
00:12:39,245 --> 00:12:41,860
de manera que la red pueda verdaderamente resolver este problema a mano

257
00:12:42,260 --> 00:12:45,315
Un pensamiento experimentado que es a la vez

258
00:12:45,315 --> 00:12:48,105
divertido y terrorífico , es imaginar sentarte

259
00:12:48,105 --> 00:12:54,085
y definir todos estos pesos y Bias a mano ,retocando los números

260
00:12:54,085 --> 00:12:57,155
a propósito  para que la segunda capa tome un patrones , y la tercera también , etc

261
00:12:57,155 --> 00:12:59,435
Personalmente lo encuentro satisfactorio

262
00:12:59,435 --> 00:13:02,475
mas que solo creando la red como una caja totalmente negra.

263
00:13:02,475 --> 00:13:05,295
porque cuando la red no actúa en la forma que anticipaste ,

264
00:13:05,295 --> 00:13:08,045
si has construido un poco de relación entre

265
00:13:08,045 --> 00:13:10,935
lo que significan esas BIAS  y pesos

266
00:13:10,935 --> 00:13:14,135
tienes un punto de partida para experimentar con la estructura y mejorarla .

267
00:13:14,655 --> 00:13:17,725
O cuando la red funciona pero  por la razones que esperabas,

268
00:13:17,725 --> 00:13:20,935
Indagar en que están haciendo los pesos y las BIAS

269
00:13:20,935 --> 00:13:23,975
es una buena manera para retar tus suposiciones

270
00:13:23,980 --> 00:13:26,200
realmente , exponer el espacio completo de todas las posibles soluciones.

271
00:13:26,760 --> 00:13:29,875
Por cierto, aquí  la función real es un poco

272
00:13:29,880 --> 00:13:31,320
incómoda de escribir , ¿No lo crees ?

273
00:13:32,880 --> 00:13:35,695
Deja me enseñarte un notación mas compacta

274
00:13:35,695 --> 00:13:37,905
en la que estas conexiones están representadas

275
00:13:37,905 --> 00:13:40,980
así es como las vez si eliges leer mas de acerca de las redes neuronales.

276
00:13:40,980 --> 00:13:43,905
1)Organiza todas las activaciones  de una capa

277
00:13:43,905 --> 00:13:46,315
en una columna, como un vector

278
00:13:47,555 --> 00:13:50,755
2) luego organiza todos los pesos como una matriz

279
00:13:50,755 --> 00:13:53,115
donde cada fila de esa matriz

280
00:13:53,115 --> 00:13:56,365
corresponde a las conexiones entre una capa

281
00:13:56,365 --> 00:13:59,205
y una neurona en particular en la siguiente.

282
00:13:59,205 --> 00:14:02,165
Lo que eso quiere decir es que tomando la suma pesada

283
00:14:02,165 --> 00:14:05,275
de las activaciones en la primera capa  de acuerdo con estos pesos, corresponde

284
00:14:05,275 --> 00:14:08,085
a uno de los términos en la matriz producto

285
00:14:08,085 --> 00:14:09,760
de todo lo que tenemos en la izquierda .

286
00:14:14,000 --> 00:14:17,035
íPor cierto!, muchas de las maquinar de aprender provienen de tener un buen

287
00:14:17,035 --> 00:14:19,935
entendimiento de álgebra lineal

288
00:14:19,935 --> 00:14:22,655
, asi que para los que quieren un entendimiento visual de las matrices

289
00:14:22,655 --> 00:14:25,725
y qué significa la multiplizacon de matrices y vectores,

290
00:14:25,725 --> 00:14:28,645
échale un vistazo a la serie que hice de Álgebra Lineal, especialmente el capítulo tres.

291
00:14:29,125 --> 00:14:32,125
De regreso a nuestra expresión, e vez

292
00:14:32,125 --> 00:14:35,095
sumar el BIAS a cada uno de estos valores independientemente,

293
00:14:35,095 --> 00:14:38,425
lo representamos al organizar todos estos BIASES en un vector

294
00:14:38,425 --> 00:14:41,435
, luego sumamos el vector completo

295
00:14:41,435 --> 00:14:42,435
al vector--producto previo.

296
00:14:42,995 --> 00:14:45,825
Luego como paso final, lo evaluare todo

297
00:14:45,825 --> 00:14:51,895
en un función Sigmoid

298
00:14:51,895 --> 00:14:54,765
y lo que se supone que representa es el componente específico de dentro  del vector resultante.

299
00:14:55,535 --> 00:14:58,545
, asi que una vez tu hayas escrito es matriz de pesos

300
00:14:58,545 --> 00:15:01,335
y este vector como sus propios símbolos,

301
00:15:01,335 --> 00:15:03,865
puedes comunicar la transición completa de activaciones

302
00:15:03,865 --> 00:15:06,865
desde una capa a la siguiente , todo en una

303
00:15:06,865 --> 00:15:07,865
expresión pequeña y apretada

304
00:15:07,945 --> 00:15:10,915
Y esto hace  al código relevante

305
00:15:10,915 --> 00:15:14,005
algo mucho mas simple y mucho más rápido

306
00:15:14,005 --> 00:15:16,045
ya que las librerías optimizan el infierno de la multiplicación entre matrices

307
00:15:17,465 --> 00:15:20,745
Recuerdas cuando al principio  dije que estas neuronas son

308
00:15:20,745 --> 00:15:21,560
solo cosas que almacenan números

309
00:15:22,180 --> 00:15:24,180
, bueno, por supuesto, los números específicos que almacenan

310
00:15:24,440 --> 00:15:26,620
dependen en la imagen que alimentas

311
00:15:27,915 --> 00:15:30,935
Así que , es realmente  mas preciso pensar en cada neurona

312
00:15:30,935 --> 00:15:34,115
como una función , cuando toma las entradas

313
00:15:34,165 --> 00:15:36,785
como todas las neuronas de la capa anterior

314
00:15:36,785 --> 00:15:38,535
y escupe  un número entre cero y uno

315
00:15:38,885 --> 00:15:41,865
Realmente, la red completa es una función

316
00:15:41,865 --> 00:15:43,865
una que toma 784 Números como  entrada

317
00:15:43,865 --> 00:15:44,925
y escupe

318
00:15:44,925 --> 00:15:47,165
10 números como salida .

319
00:15:47,565 --> 00:15:50,375
Es una función absurdamente complicada

320
00:15:50,375 --> 00:15:53,425
una que envuelve 13,002 parámetros

321
00:15:53,425 --> 00:15:55,425
en la forma de pesos y BIASES, que toman ciertos patrones

322
00:15:55,425 --> 00:15:56,105
y que envuelve ciertas  iteraciones de

323
00:15:56,105 --> 00:15:58,785
productos de matrices

324
00:15:58,785 --> 00:16:01,465
en esta función Sigmoid

325
00:16:01,465 --> 00:16:03,125
, pero sin embargo, es solo una función

326
00:16:03,575 --> 00:16:06,975
y de una manera, es un tipo de tranquilizador que se ve complicado

327
00:16:06,975 --> 00:16:09,625
, lo que digo es que fuese cualquier cosa simple ,que

328
00:16:09,625 --> 00:16:12,060
esperanza tendríamos de que tome el reto de reconocer dígitos.

329
00:16:13,120 --> 00:16:16,220
¿Pero cómo toma el reto? ,

330
00:16:16,225 --> 00:16:19,185
¿Cómo aprende esta red los apropiados pesos y BIases solo

331
00:16:19,185 --> 00:16:22,295
viendo los datos ?. eso es lo que mostraré en el siguiente video

332
00:16:22,300 --> 00:16:26,200
y también indagaré  un poco más en los que esta red en particular es realmente haciendo.

333
00:16:27,600 --> 00:16:33,515
Ahora es el punto donde debo decir, "Subscribete para estar notificado al respecto, cuando algún nuevo video venga "

334
00:16:33,515 --> 00:16:35,255
pero realmente

335
00:16:35,255 --> 00:16:38,365
la mayoría de ustedes no reciben notificaciones de you tube

336
00:16:38,365 --> 00:16:41,345
Mejor debería decir que se subscriban

337
00:16:41,345 --> 00:16:44,355
para que el algoritmo detrás de la recomendaciones de You Tube

338
00:16:44,355 --> 00:16:47,015
crea que quieres ver contenido

339
00:16:47,015 --> 00:16:50,155
de este canal que te he recomendado, de cualquier manera estate postiado para mas información.

340
00:16:50,685 --> 00:16:53,785
Muchas gracias a todos lo que ayudan a estos  videos en Patreon

341
00:16:53,825 --> 00:16:56,915
He estado corriendo un poco para progresar

342
00:16:56,915 --> 00:16:59,905
en la serie de probabilidades en este verano , pero voy a volver al ellos después de este proyecto

343
00:16:59,905 --> 00:17:02,340
Asi que Patreons , ustedes pueden ver las actualizaciones

344
00:17:03,420 --> 00:17:06,380
Para hacer cerrar las cosas, tengo con migo a Lygia Lee

345
00:17:06,385 --> 00:17:09,305
quien hizo su trabajo en el lado teórico

346
00:17:09,305 --> 00:17:12,175
del aprendizaje profundo, quién ahora trabaja en la firma de  Venture Capital

347
00:17:12,175 --> 00:17:14,845
llamada Amplify Partners, quienes amablemente proveeron algo de los fundos para este vídeo .

348
00:17:15,385 --> 00:17:18,425
- Asi que Lygia ,una cosa que deberíamos

349
00:17:18,425 --> 00:17:21,275
explicar es esta Función Sigmoid, como lo entendí,

350
00:17:21,275 --> 00:17:24,145
las redes neuronales  usan la función para tomar la Suma pesada relevante

351
00:17:24,145 --> 00:17:27,185
para llevarla a un intervalo entre 0 y 1

352
00:17:27,185 --> 00:17:30,120
, sabes, motivada por este tipo de analogía biológica de neuronas siendo activadas o inactivadas .

353
00:17:30,120 --> 00:17:30,980
// Exacto!,

354
00:17:31,160 --> 00:17:34,240
- pero relativamente las redes modernas ya no usan mas esta función sigmoid,

355
00:17:34,240 --> 00:17:34,920
// Cierto!,

356
00:17:35,180 --> 00:17:35,680
- Es algo de la vieja escuela,¿verdad ?

357
00:17:35,900 --> 00:17:38,780
// Cierto ,en vez, RELU es algo que parece ser mas fácil de usar

358
00:17:39,300 --> 00:17:42,360
- Y RELU se mantiene rectificar una linea unitaria ,

359
00:17:42,620 --> 00:17:45,280
// Si, Es este  tipo de función donde los tomas un máximo

360
00:17:45,285 --> 00:17:48,105
de 0 y un a, donde a esta

361
00:17:48,105 --> 00:17:51,145
dado por lo que explicas en el video,

362
00:17:51,145 --> 00:17:54,115
y esto fue motivado parcialmente  desde lo que pienso

363
00:17:54,375 --> 00:17:57,235
fue una analogía biológica

364
00:17:57,235 --> 00:18:00,335
, de como las neuronas

365
00:18:00,335 --> 00:18:02,715
serían  o no activadas

366
00:18:02,715 --> 00:18:05,795
, y si estas pasan un cierto límite , este sería la función identidad,

367
00:18:05,795 --> 00:18:08,615
pero si no , solo no serian activadas

368
00:18:08,615 --> 00:18:10,735
(B,O). Asi que es

369
00:18:10,735 --> 00:18:13,485
un tipo de simplificación ,. Usar funciones Sigmoids

370
00:18:13,485 --> 00:18:16,395
no ayudó a entrenar  o fue muy difícil en cierto punto , y la gente

371
00:18:16,395 --> 00:18:19,885
mejor uso RELU,  pasa que

372
00:18:20,015 --> 00:18:22,715
funciona muy bien para estas

373
00:18:22,720 --> 00:18:24,900
increíblemente profundas Redes Neuronales .

374
00:18:25,120 --> 00:18:25,880
-Ok, ¡Gracias Lygia!,

