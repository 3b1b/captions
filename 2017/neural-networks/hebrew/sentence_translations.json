[
 {
  "input": "This is a 3.",
  "model": "nmt",
  "translatedText": "זה 3.",
  "time_range": [
   0.0,
   1.3106382978723403
  ]
 },
 {
  "input": "It's sloppily written and rendered at an extremely low resolution of 28x28 pixels, but your brain has no trouble recognizing it as a 3.",
  "model": "nmt",
  "translatedText": "זה כתוב בצורה מרושלת ומעובד ברזולוציה נמוכה במיוחד של 28x28 פיקסלים, אבל המוח שלך לא מתקשה לזהות אותו כ-3.",
  "time_range": [
   1.3106382978723403,
   13.743855421686746
  ]
 },
 {
  "input": "And I want you to take a moment to appreciate how crazy it is that brains can do this so effortlessly.",
  "model": "nmt",
  "translatedText": "ואני רוצה שתקדישו רגע כדי להעריך כמה זה מטורף שהמוח יכול לעשות את זה כל כך ללא מאמץ.",
  "time_range": [
   13.743855421686746,
   19.629638554216868
  ]
 },
 {
  "input": "I mean, this, this and this are also recognizable as 3s, even though the specific values of each pixel is very different from one image to the next.",
  "model": "nmt",
  "translatedText": "כלומר, זה, זה וזה גם ניתנים לזיהוי בתור 3s, למרות שהערכים הספציפיים של כל פיקסל שונים מאוד מתמונה אחת לאחרת.",
  "time_range": [
   19.629638554216868,
   28.691460674157305
  ]
 },
 {
  "input": "The particular light-sensitive cells in your eye that are firing when you see this 3 are very different from the ones firing when you see this 3.",
  "model": "nmt",
  "translatedText": "התאים הרגישים לאור המסוימים בעין שלך שיורים כשאתה רואה את ה-3 הזה שונים מאוד מאלה שיורים כשאתה רואה את ה-3 הזה.",
  "time_range": [
   28.691460674157305,
   36.722040816326526
  ]
 },
 {
  "input": "But something in that crazy-smart visual cortex of yours resolves these as representing the same idea, while at the same time recognizing other images as their own distinct ideas.",
  "model": "nmt",
  "translatedText": "אבל משהו בקליפת המוח הוויזואלית המשוגעת הזו שלך פותר את אלה כמייצגים את אותו רעיון, ובו בזמן מזהה תמונות אחרות כרעיונות נפרדים משלהם.",
  "time_range": [
   36.722040816326526,
   49.3
  ]
 },
 {
  "input": "But if I told you, hey, sit down and write for me a program that takes in a grid of 28x28 and outputs a single number between 0 and 10, telling you what it thinks the digit is, well the task goes from comically trivial to dauntingly difficult.",
  "model": "nmt",
  "translatedText": "אבל אם אמרתי לך, היי, שב ותכתוב עבורי תוכנית שמקבלת רשת של 28x28 ומוציאה מספר בודד בין 0 ל-10, ואומרת לך מה היא חושבת שהספרה, ובכן, המשימה עוברת מטריוויאלי קומית ל קשה להחריד.",
  "time_range": [
   49.3,
   66.12285714285713
  ]
 },
 {
  "input": "Unless you've been living under a rock, I think I hardly need to motivate the relevance and importance of machine learning and neural networks to the present and to the future.",
  "model": "nmt",
  "translatedText": "אלא אם כן חיית מתחת לסלע, אני חושב שאני בקושי צריך להניע את הרלוונטיות והחשיבות של למידת מכונה ורשתות עצביות להווה ולעתיד.",
  "time_range": [
   66.12285714285713,
   74.55714285714285
  ]
 },
 {
  "input": "But what I want to do here is show you what a neural network actually is, assuming no background, and to help visualize what it's doing, not as a buzzword but as a piece of math.",
  "model": "nmt",
  "translatedText": "אבל מה שאני רוצה לעשות כאן זה להראות לכם מהי בעצם רשת עצבית, בהנחה שאין רקע, וכדי לעזור לדמיין מה היא עושה, לא בתור מילת באז אלא כקטע של מתמטיקה.",
  "time_range": [
   74.55714285714285,
   84.24181818181819
  ]
 },
 {
  "input": "My hope is just that you come away feeling like the structure itself is motivated, and to feel like you know what it means when you read or you hear about a neural network quote-unquote learning.",
  "model": "nmt",
  "translatedText": "התקווה שלי היא רק שתצאו בהרגשה שהמבנה עצמו מונע, ותרגישו שאתם יודעים מה זה אומר כשאתם קוראים או שומעים על רשת עצבית לומדת ציטוט-ללא ציטוט.",
  "time_range": [
   84.24181818181819,
   94.54903225806453
  ]
 },
 {
  "input": "This video is just going to be devoted to the structure component of that, and the following one is going to tackle learning.",
  "model": "nmt",
  "translatedText": "הסרטון הזה רק יוקדש למרכיב המבנה של זה, והסרטון הבא יעסוק בלמידה.",
  "time_range": [
   94.54903225806453,
   100.3
  ]
 },
 {
  "input": "What we're going to do is put together a neural network that can learn to recognize handwritten digits.",
  "model": "nmt",
  "translatedText": "מה שאנחנו הולכים לעשות זה להרכיב רשת עצבית שיכולה ללמוד לזהות ספרות בכתב יד.",
  "time_range": [
   100.3,
   106.10483516483517
  ]
 },
 {
  "input": "This is a somewhat classic example for introducing the topic, and I'm happy to stick with the status quo here, because at the end of the two videos I want to point you to a couple good resources where you can learn more, and where you can download the code that does this and play with it on your own computer.",
  "model": "nmt",
  "translatedText": "זו דוגמה קצת קלאסית להצגת הנושא, ואני שמח להישאר עם הסטטוס קוו כאן, כי בסוף שני הסרטונים אני רוצה להפנות אותך לכמה משאבים טובים שבהם תוכל ללמוד עוד, והיכן אתה יכול להוריד את הקוד שעושה זאת ולשחק איתו במחשב שלך.",
  "time_range": [
   106.10483516483517,
   124.17348837209303
  ]
 },
 {
  "input": "There are many many variants of neural networks, and in recent years there's been sort of a boom in research towards these variants, but in these two introductory videos you and I are just going to look at the simplest plain vanilla form with no added frills.",
  "model": "nmt",
  "translatedText": "יש הרבה וריאציות של רשתות עצביות, ובשנים האחרונות חלה סוג של פריחה במחקר לקראת הווריאציות האלה, אבל בשני סרטוני ההיכרות האלה אתה ואני רק הולכים להסתכל על צורת הווניל הפשוטה והפשוטה ביותר ללא תוספת סלסולים.",
  "time_range": [
   124.17348837209303,
   138.92
  ]
 },
 {
  "input": "This is kind of a necessary prerequisite for understanding any of the more powerful modern variants, and trust me it still has plenty of complexity for us to wrap our minds around.",
  "model": "nmt",
  "translatedText": "זה סוג של תנאי הכרחי להבנת כל אחת מהגרסאות המודרניות החזקות יותר, ותאמין לי שעדיין יש לה הרבה מורכבות בשבילנו לכרוך את דעתנו.",
  "time_range": [
   138.92,
   148.48565217391302
  ]
 },
 {
  "input": "But even in this simplest form it can learn to recognize handwritten digits, which is a pretty cool thing for a computer to be able to do.",
  "model": "nmt",
  "translatedText": "אבל אפילו בצורה הפשוטה ביותר הזו הוא יכול ללמוד לזהות ספרות בכתב יד, וזה דבר די מגניב למחשב להיות מסוגל לעשות.",
  "time_range": [
   148.48565217391302,
   156.62884210526317
  ]
 },
 {
  "input": "And at the same time you'll see how it does fall short of a couple hopes that we might have for it.",
  "model": "nmt",
  "translatedText": "ובו בזמן תראה איך זה אכן נופל מתקוות זוגיות שאולי יש לנו לזה.",
  "time_range": [
   156.62884210526317,
   162.925
  ]
 },
 {
  "input": "As the name suggests, neural networks are inspired by the brain, but let's break that down.",
  "model": "nmt",
  "translatedText": "כפי שהשם מרמז, רשתות עצביות נוצרות בהשראת המוח, אבל בואו נפרק את זה.",
  "time_range": [
   162.925,
   168.19319587628866
  ]
 },
 {
  "input": "What are the neurons, and in what sense are they linked together?",
  "model": "nmt",
  "translatedText": "מהם הנוירונים, ובאיזה מובן הם קשורים זה לזה?",
  "time_range": [
   168.19319587628866,
   171.83333333333334
  ]
 },
 {
  "input": "Right now when I say neuron, all I want you to think about is a thing that holds a number, specifically a number between 0 and 1.",
  "model": "nmt",
  "translatedText": "כרגע כשאני אומר נוירון, כל מה שאני רוצה שתחשוב עליו זה דבר שמכיל מספר, במיוחד מספר בין 0 ל-1.",
  "time_range": [
   171.83333333333334,
   180.98701030927836
  ]
 },
 {
  "input": "It's really not more than that.",
  "model": "nmt",
  "translatedText": "זה באמת לא יותר מזה.",
  "time_range": [
   180.98701030927836,
   183.37752577319586
  ]
 },
 {
  "input": "For example, the network starts with a bunch of neurons corresponding to each of the 28 times 28 pixels of the input image, which is 784 neurons in total.",
  "model": "nmt",
  "translatedText": "לדוגמה, הרשת מתחילה עם חבורה של נוירונים המקבילים לכל אחד מ-28 כפול 28 פיקסלים של תמונת הקלט, שהם 784 נוירונים בסך הכל.",
  "time_range": [
   183.37752577319586,
   193.66
  ]
 },
 {
  "input": "Each one of these holds a number that represents the grayscale value of the corresponding pixel, ranging from 0 for black pixels up to 1 for white pixels.",
  "model": "nmt",
  "translatedText": "כל אחד מאלה מכיל מספר המייצג את ערך גווני האפור של הפיקסל המתאים, החל מ-0 עבור פיקסלים שחורים ועד 1 עבור פיקסלים לבנים.",
  "time_range": [
   193.66,
   204.2931914893617
  ]
 },
 {
  "input": "This number inside the neuron is called its activation, and the image you might have in mind is that each neuron is lit up when its activation is a high number.",
  "model": "nmt",
  "translatedText": "המספר הזה בתוך הנוירון נקרא ההפעלה שלו, והתמונה שאולי יש לך בראש היא שכל נוירון מואר כאשר ההפעלה שלו היא מספר גבוה.",
  "time_range": [
   204.2931914893617,
   215.93586206896552
  ]
 },
 {
  "input": "So all of these 784 neurons make up the first layer of our network.",
  "model": "nmt",
  "translatedText": "אז כל 784 הנוירונים האלה מהווים את השכבה הראשונה של הרשת שלנו.",
  "time_range": [
   215.93586206896552,
   223.39953488372095
  ]
 },
 {
  "input": "Now jumping over to the last layer, this has 10 neurons, each representing one of the digits.",
  "model": "nmt",
  "translatedText": "עכשיו קופצים לשכבה האחרונה, יש לזה 10 נוירונים, כל אחד מייצג את אחת מהספרות.",
  "time_range": [
   223.39953488372095,
   231.57011235955056
  ]
 },
 {
  "input": "The activation in these neurons, again some number that's between 0 and 1, represents how much the system thinks that a given image corresponds with a given digit.",
  "model": "nmt",
  "translatedText": "ההפעלה בנוירונים האלה, שוב מספר שהוא בין 0 ל-1, מייצגת עד כמה המערכת חושבת שתמונה נתונה מתכתבת עם ספרה נתונה.",
  "time_range": [
   231.57011235955056,
   242.18044943820226
  ]
 },
 {
  "input": "There's also a couple layers in between called the hidden layers, which for the time being should just be a giant question mark for how on earth this process of recognizing digits is going to be handled.",
  "model": "nmt",
  "translatedText": "יש גם כמה שכבות ביניהן הנקראות השכבות הנסתרות, שלעת עתה אמורות להוות סימן שאלה ענק לאיך לכל הרוחות התהליך הזה של זיהוי ספרות יטופל.",
  "time_range": [
   242.18044943820226,
   253.9521739130435
  ]
 },
 {
  "input": "In this network I chose two hidden layers, each one with 16 neurons, and admittedly that's kind of an arbitrary choice.",
  "model": "nmt",
  "translatedText": "ברשת הזו בחרתי שתי שכבות נסתרות, כל אחת עם 16 נוירונים, ויש להודות שזו סוג של בחירה שרירותית.",
  "time_range": [
   253.9521739130435,
   260.65752577319586
  ]
 },
 {
  "input": "To be honest, I chose two layers based on how I want to motivate the structure in just a moment, and 16, well that was just a nice number to fit on the screen.",
  "model": "nmt",
  "translatedText": "למען האמת, בחרתי שתי שכבות על סמך איך אני רוצה להניע את המבנה ברגע אחד, ו-16, ובכן, זה היה רק מספר נחמד שיתאים למסך.",
  "time_range": [
   260.65752577319586,
   268.6174193548387
  ]
 },
 {
  "input": "In practice there is a lot of room for experiment with a specific structure here.",
  "model": "nmt",
  "translatedText": "בפועל יש כאן הרבה מקום להתנסות במבנה ספציפי.",
  "time_range": [
   268.6174193548387,
   272.7824242424242
  ]
 },
 {
  "input": "The way the network operates, activations in one layer determine the activations of the next layer.",
  "model": "nmt",
  "translatedText": "האופן שבו הרשת פועלת, הפעלות בשכבה אחת קובעות את ההפעלות של השכבה הבאה.",
  "time_range": [
   272.7824242424242,
   278.6105154639175
  ]
 },
 {
  "input": "And of course the heart of the network as an information processing mechanism comes down to exactly how those activations from one layer bring about activations in the next layer.",
  "model": "nmt",
  "translatedText": "וכמובן הלב של הרשת כמנגנון עיבוד מידע מסתכם בדיוק איך אותן הפעלה משכבה אחת מביאות להפעלה בשכבה הבאה.",
  "time_range": [
   278.6105154639175,
   288.8290322580645
  ]
 },
 {
  "input": "It's meant to be loosely analogous to how in biological networks of neurons some groups of neurons firing cause certain others to fire.",
  "model": "nmt",
  "translatedText": "זה אמור להיות אנלוגי באופן רופף לאופן שבו ברשתות ביולוגיות של נוירונים קבוצות מסוימות של נוירונים היורות גורמות לאחרים לירות.",
  "time_range": [
   288.8290322580645,
   297.0431578947368
  ]
 },
 {
  "input": "Now the network I'm showing here has already been trained to recognize digits, and let me show you what I mean by that.",
  "model": "nmt",
  "translatedText": "עכשיו הרשת שאני מראה כאן כבר עברה הכשרה לזהות ספרות, ותן לי להראות לך למה אני מתכוון בזה.",
  "time_range": [
   297.0431578947368,
   303.45505154639176
  ]
 },
 {
  "input": "It means if you feed in an image lighting up all 784 neurons of the input layer according to the brightness of each pixel in the image, that pattern of activations causes some very specific pattern in the next layer, which causes some pattern in the one after it, which finally gives some pattern in the output layer.",
  "model": "nmt",
  "translatedText": "זה אומר שאם אתה מזין תמונה שמאירה את כל 784 הנוירונים של שכבת הקלט לפי הבהירות של כל פיקסל בתמונה, דפוס ההפעלה הזה גורם לאיזה דפוס מאוד ספציפי בשכבה הבאה, מה שגורם לדפוס כלשהו בשכבה שאחרי. זה, מה שסוף סוף נותן דפוס כלשהו בשכבת הפלט.",
  "time_range": [
   303.45505154639176,
   322.10359550561793
  ]
 },
 {
  "input": "And the brightest neuron of that output layer is the network's choice, so to speak, for what digit this image represents.",
  "model": "nmt",
  "translatedText": "והנוירון הבהיר ביותר של שכבת הפלט היא הבחירה של הרשת, כביכול, באיזו ספרה התמונה הזו מייצגת.",
  "time_range": [
   322.10359550561793,
   330.434693877551
  ]
 },
 {
  "input": "And before jumping into the math for how one layer influences the next, or how training works, let's just talk about why it's even reasonable to expect a layered structure like this to behave intelligently.",
  "model": "nmt",
  "translatedText": "ולפני שקפוץ למתמטיקה כיצד שכבה אחת משפיעה על השכבה הבאה, או איך האימון עובד, בואו נדבר רק על למה זה בכלל הגיוני לצפות ממבנה שכבות כזה להתנהג בצורה אינטליגנטית.",
  "time_range": [
   330.434693877551,
   343.45879999999994
  ]
 },
 {
  "input": "What are we expecting here?",
  "model": "nmt",
  "translatedText": "למה אנחנו מצפים כאן?",
  "time_range": [
   343.45879999999994,
   345.0464
  ]
 },
 {
  "input": "What is the best hope for what those middle layers might be doing?",
  "model": "nmt",
  "translatedText": "מהי התקווה הטובה ביותר למה שכבות הביניים האלה עשויות לעשות?",
  "time_range": [
   345.0464,
   349.0260606060606
  ]
 },
 {
  "input": "Well, when you or I recognize digits, we piece together various components.",
  "model": "nmt",
  "translatedText": "ובכן, כאשר אתה או אני מזהים ספרות, אנו מחברים רכיבים שונים.",
  "time_range": [
   349.0260606060606,
   353.6896774193549
  ]
 },
 {
  "input": "A 9 has a loop up top and a line on the right.",
  "model": "nmt",
  "translatedText": "ל-9 יש לולאה למעלה וקו מימין.",
  "time_range": [
   353.6896774193549,
   356.93440860215054
  ]
 },
 {
  "input": "An 8 also has a loop up top, but it's paired with another loop down low.",
  "model": "nmt",
  "translatedText": "ל-8 יש גם לולאה למעלה, אבל היא משודכת עם לולאה נוספת למטה.",
  "time_range": [
   356.93440860215054,
   361.82715789473684
  ]
 },
 {
  "input": "A 4 basically breaks down into three specific lines, and things like that.",
  "model": "nmt",
  "translatedText": "4 בעצם מתפרק לשלוש שורות ספציפיות, ודברים כאלה.",
  "time_range": [
   361.82715789473684,
   366.67360824742264
  ]
 },
 {
  "input": "Now in a perfect world, we might hope that each neuron in the second to last layer corresponds with one of these subcomponents, that anytime you feed in an image with, say, a loop up top, like a 9 or an 8, there's some specific neuron whose activation is going to be close to 1.",
  "model": "nmt",
  "translatedText": "עכשיו בעולם מושלם, אנו עשויים לקוות שכל נוירון בשכבה השנייה-אחרונה מתכתב עם אחד מתת-הרכיבים האלה, שבכל פעם שאתה מזין תמונה עם, נגיד, לולאה למעלה, כמו 9 או 8, יש כמה נוירון ספציפי שהפעלתו עומדת להיות קרובה ל-1.",
  "time_range": [
   366.67360824742264,
   383.65148936170215
  ]
 },
 {
  "input": "And I don't mean this specific loop of pixels, the hope would be that any generally loopy pattern towards the top sets off this neuron.",
  "model": "nmt",
  "translatedText": "ואני לא מתכוון ללולאה הספציפית הזו של פיקסלים, התקווה תהיה שכל דפוס לולאה בדרך כלל לכיוון העליון מפעיל את הנוירון הזה.",
  "time_range": [
   383.65148936170215,
   391.7004597701149
  ]
 },
 {
  "input": "That way, going from the third layer to the last one just requires learning which combination of subcomponents corresponds to which digits.",
  "model": "nmt",
  "translatedText": "בדרך זו, מעבר מהשכבה השלישית לשכבה האחרונה רק מצריך ללמוד איזה שילוב של רכיבי משנה מתאים לאיזה ספרות.",
  "time_range": [
   391.7004597701149,
   400.01272727272726
  ]
 },
 {
  "input": "Of course, that just kicks the problem down the road, because how would you recognize these subcomponents, or even learn what the right subcomponents should be?",
  "model": "nmt",
  "translatedText": "כמובן, זה רק מעיף את הבעיה בהמשך הדרך, כי איך תזהה את רכיבי המשנה האלה, או אפילו תלמד מה צריכים להיות רכיבי המשנה הנכונים?",
  "time_range": [
   400.01272727272726,
   407.79431578947367
  ]
 },
 {
  "input": "And I still haven't even talked about how one layer influences the next, but run with me on this one for a moment.",
  "model": "nmt",
  "translatedText": "ועדיין לא דיברתי אפילו על איך שכבה אחת משפיעה על השני, אבל רוץ איתי על זה לרגע.",
  "time_range": [
   407.79431578947367,
   412.9
  ]
 },
 {
  "input": "Recognizing a loop can also break down into subproblems.",
  "model": "nmt",
  "translatedText": "זיהוי לולאה יכול גם להתפרק לתת-בעיות.",
  "time_range": [
   412.9,
   416.5989010989011
  ]
 },
 {
  "input": "One reasonable way to do this would be to first recognize the various little edges that make it up.",
  "model": "nmt",
  "translatedText": "אחת הדרכים הגיוניות לעשות זאת תהיה לזהות תחילה את הקצוות הקטנים השונים המרכיבים אותו.",
  "time_range": [
   416.5989010989011,
   423.3863829787234
  ]
 },
 {
  "input": "Similarly, a long line like the kind you might see in the digits 1 or 4 or 7, well that's really just a long edge, or maybe you think of it as a certain pattern of several smaller edges.",
  "model": "nmt",
  "translatedText": "באופן דומה, קו ארוך כמו מהסוג שאתה עשוי לראות בספרות 1 או 4 או 7, ובכן, זה באמת רק קצה ארוך, או אולי אתה חושב על זה כעל דפוס מסוים של כמה קצוות קטנים יותר.",
  "time_range": [
   423.3863829787234,
   435.2811764705882
  ]
 },
 {
  "input": "So maybe our hope is that each neuron in the second layer of the network corresponds with the various relevant little edges.",
  "model": "nmt",
  "translatedText": "אז אולי התקווה שלנו היא שכל נוירון בשכבה השנייה של הרשת מתכתב עם הקצוות הקטנים הרלוונטיים השונים.",
  "time_range": [
   435.2811764705882,
   443.4065306122449
  ]
 },
 {
  "input": "Maybe when an image like this one comes in, it lights up all of the neurons associated with around 8 to 10 specific little edges, which in turn lights up the neurons associated with the upper loop and a long vertical line, and those light up the neuron associated with a 9.",
  "model": "nmt",
  "translatedText": "אולי כאשר תמונה כמו זו נכנסת, היא מאירה את כל הנוירונים הקשורים בסביבות 8 עד 10 קצוות קטנים ספציפיים, אשר בתורו מאירים את הנוירונים הקשורים ללולאה העליונה ולקו אנכי ארוך, ואלו מאירים את נוירון הקשור ל-9.",
  "time_range": [
   443.4065306122449,
   459.7208602150538
  ]
 },
 {
  "input": "Whether or not this is what our final network actually does is another question, one that I'll come back to once we see how to train the network.",
  "model": "nmt",
  "translatedText": "האם זה מה שהרשת הסופית שלנו עושה או לא, זו שאלה אחרת, שאלה שאחזור אליה ברגע שנראה איך לאמן את הרשת.",
  "time_range": [
   459.7208602150538,
   467.1865217391304
  ]
 },
 {
  "input": "But this is a hope that we might have, a sort of goal with the layered structure like this.",
  "model": "nmt",
  "translatedText": "אבל זו תקווה שאולי תהיה לנו, מעין מטרה עם מבנה השכבות הזה.",
  "time_range": [
   467.1865217391304,
   472.3343157894737
  ]
 },
 {
  "input": "Moreover, you can imagine how being able to detect edges and patterns like this would be really useful for other image recognition tasks.",
  "model": "nmt",
  "translatedText": "יתר על כן, אתה יכול לדמיין איך היכולת לזהות קצוות ודפוסים כמו זה יהיה ממש שימושי עבור משימות זיהוי תמונות אחרות.",
  "time_range": [
   472.3343157894737,
   480.39764705882357
  ]
 },
 {
  "input": "And even beyond image recognition, there are all sorts of intelligent things you might want to do that break down into layers of abstraction.",
  "model": "nmt",
  "translatedText": "ואפילו מעבר לזיהוי תמונה, יש כל מיני דברים אינטליגנטיים שאולי תרצו לעשות שמתפרקים לשכבות של הפשטה.",
  "time_range": [
   480.39764705882357,
   487.3066666666667
  ]
 },
 {
  "input": "Parsing speech, for example, involves taking raw audio and picking out distinct sounds, which combine to make certain syllables, which combine to form words, which combine to make up phrases and more abstract thoughts, etc.",
  "model": "nmt",
  "translatedText": "ניתוח דיבור, למשל, כרוך בנטילת אודיו גולמי ובחירת צלילים מובחנים, המשלבים את יצירת הברות מסוימות, המשתלבות ויוצרות מילים, המשלבות יצירת ביטויים ומחשבות מופשטות יותר, וכו&#39;.",
  "time_range": [
   487.3066666666667,
   500.2621276595744
  ]
 },
 {
  "input": "But getting back to how any of this actually works, picture yourself right now designing how exactly the activations in one layer might determine the activations in the next.",
  "model": "nmt",
  "translatedText": "אבל אם נחזור לאופן שבו כל זה עובד בפועל, דמיינו את עצמכם כעת מעצבים כיצד בדיוק ההפעלה בשכבה אחת עשויות לקבוע את ההפעלה בשכבה הבאה.",
  "time_range": [
   500.2621276595744,
   510.6358333333333
  ]
 },
 {
  "input": "The goal is to have some mechanism that could conceivably combine pixels into edges, or edges into patterns, or patterns into digits.",
  "model": "nmt",
  "translatedText": "המטרה היא לקבל מנגנון כלשהו שיכול לשלב פיקסלים לקצוות, או קצוות לתבניות, או דפוסים לספרות.",
  "time_range": [
   510.6358333333333,
   518.8724210526316
  ]
 },
 {
  "input": "And to zoom in on one very specific example, let's say the hope is for one particular neuron in the second layer to pick up on whether the image has an edge in this region here.",
  "model": "nmt",
  "translatedText": "וכדי להגדיל דוגמה אחת מאוד ספציפית, נניח שהתקווה היא שנוירון מסוים בשכבה השנייה יקלוט האם לתמונה יש קצה באזור הזה כאן.",
  "time_range": [
   518.8724210526316,
   530.6602150537634
  ]
 },
 {
  "input": "The question at hand is, what parameters should the network have?",
  "model": "nmt",
  "translatedText": "השאלה העומדת על הפרק היא אילו פרמטרים צריכים להיות לרשת?",
  "time_range": [
   530.6602150537634,
   535.1978947368422
  ]
 },
 {
  "input": "What dials and knobs should you be able to tweak so that it's expressive enough to potentially capture this pattern, or any other pixel pattern, or the pattern that several edges can make a loop, and other such things?",
  "model": "nmt",
  "translatedText": "אילו חוגים וכפתורים אתה צריך להיות מסוגל לכוונן כך שיהיה מספיק אקספרסיבי כדי ללכוד את הדפוס הזה, או כל דפוס פיקסלים אחר, או את הדפוס שכמה קצוות יכולים ליצור לולאה, ועוד דברים כאלה?",
  "time_range": [
   535.1978947368422,
   548.1758333333332
  ]
 },
 {
  "input": "Well, what we'll do is assign a weight to each one of the connections between our neuron and the neurons from the first layer.",
  "model": "nmt",
  "translatedText": "ובכן, מה שנעשה זה להקצות משקל לכל אחד מהקשרים בין הנוירון שלנו לנוירונים מהשכבה הראשונה.",
  "time_range": [
   548.1758333333332,
   555.7595555555555
  ]
 },
 {
  "input": "These weights are just numbers.",
  "model": "nmt",
  "translatedText": "המשקולות האלה הן רק מספרים.",
  "time_range": [
   555.7595555555555,
   557.6663829787234
  ]
 },
 {
  "input": "Then take all of those activations from the first layer and compute their weighted sum according to these weights.",
  "model": "nmt",
  "translatedText": "לאחר מכן קח את כל ההפעלות הללו מהשכבה הראשונה וחשב את הסכום המשוקלל שלהן לפי משקלים אלו.",
  "time_range": [
   557.6663829787234,
   565.7041666666667
  ]
 },
 {
  "input": "I find it helpful to think of these weights as being organized into a little grid of their own, and I'm going to use green pixels to indicate positive weights, and red pixels to indicate negative weights, where the brightness of that pixel is some loose depiction of the weight's value.",
  "model": "nmt",
  "translatedText": "אני מוצא שזה מועיל לחשוב על משקלים אלה כמאורגנים לרשת קטנה משלהם, ואני הולך להשתמש בפיקסלים ירוקים כדי לציין משקלים חיוביים, ובפיקסלים אדומים כדי לציין משקלים שליליים, כאשר הבהירות של הפיקסל הזה היא קצת תיאור רופף של ערך המשקל.",
  "time_range": [
   565.7041666666667,
   581.9415384615385
  ]
 },
 {
  "input": "If we made the weights associated with almost all of the pixels zero, except for some positive weights in this region that we care about, then taking the weighted sum of all the pixel values really just amounts to adding up the values of the pixel just in the region that we care about.",
  "model": "nmt",
  "translatedText": "אם היינו מאפסים את המשקולות הקשורות כמעט לכל הפיקסלים, למעט כמה משקלים חיוביים באזור זה שאכפת לנו מהם, אז לקחת את הסכום המשוקלל של כל ערכי הפיקסלים פשוט מסתכם בחיבור של ערכי הפיקסלים רק בתוך האזור שאכפת לנו ממנו.",
  "time_range": [
   581.9415384615385,
   597.9761616161616
  ]
 },
 {
  "input": "And if you really wanted to pick up on whether there's an edge here, what you might do is have some negative weights associated with the surrounding pixels.",
  "model": "nmt",
  "translatedText": "ואם באמת רצית להבין אם יש כאן יתרון, מה שאתה יכול לעשות זה כמה משקלים שליליים הקשורים לפיקסלים שמסביב.",
  "time_range": [
   597.9761616161616,
   607.44
  ]
 },
 {
  "input": "Then the sum is largest when those middle pixels are bright but the surrounding pixels are darker.",
  "model": "nmt",
  "translatedText": "אז הסכום הוא הגדול ביותר כאשר הפיקסלים האמצעיים האלה בהירים אבל הפיקסלים שמסביב כהים יותר.",
  "time_range": [
   607.44,
   612.68
  ]
 },
 {
  "input": "When you compute a weighted sum like this, you might come out with any number, but for this network what we want is for activations to be some value between 0 and 1.",
  "model": "nmt",
  "translatedText": "כשאתה מחשב סכום משוקלל כזה, אתה עשוי לצאת עם כל מספר, אבל עבור הרשת הזו מה שאנחנו רוצים זה שההפעלה תהיה ערך כלשהו בין 0 ל-1.",
  "time_range": [
   612.68,
   623.5636363636365
  ]
 },
 {
  "input": "So a common thing to do is to pump this weighted sum into some function that squishes the real number line into the range between 0 and 1.",
  "model": "nmt",
  "translatedText": "אז דבר נפוץ לעשות הוא לשאוב את הסכום המשוקלל הזה לאיזו פונקציה שדוחקת את קו המספרים האמיתיים לטווח שבין 0 ל-1.",
  "time_range": [
   623.5636363636365,
   631.4477551020408
  ]
 },
 {
  "input": "And a common function that does this is called the sigmoid function, also known as a logistic curve.",
  "model": "nmt",
  "translatedText": "ופונקציה נפוצה שעושה זאת נקראת הפונקציה הסיגמואידית, הידועה גם בתור עקומה לוגיסטית.",
  "time_range": [
   631.4477551020408,
   637.4493617021277
  ]
 },
 {
  "input": "Basically very negative inputs end up close to 0, very positive inputs end up close to 1, and it just steadily increases around the input 0.",
  "model": "nmt",
  "translatedText": "בעיקרון תשומות שליליות מאוד מתקרבות ל-0, תשומות חיוביות מאוד מתקרבות ל-1, והיא רק גדלה בהתמדה סביב הקלט 0.",
  "time_range": [
   637.4493617021277,
   648.1379591836735
  ]
 },
 {
  "input": "So the activation of the neuron here is basically a measure of how positive the relevant weighted sum is.",
  "model": "nmt",
  "translatedText": "אז ההפעלה של הנוירון כאן היא בעצם מדד למידת החיוב של הסכום המשוקלל הרלוונטי.",
  "time_range": [
   648.1379591836735,
   656.7064
  ]
 },
 {
  "input": "But maybe it's not that you want the neuron to light up when the weighted sum is bigger than 0.",
  "model": "nmt",
  "translatedText": "אבל אולי זה לא שאתה רוצה שהנוירון יידלק כשהסכום המשוקלל גדול מ-0.",
  "time_range": [
   656.7064,
   662.3134020618558
  ]
 },
 {
  "input": "Maybe you only want it to be active when the sum is bigger than say 10.",
  "model": "nmt",
  "translatedText": "אולי אתה רוצה שזה יהיה פעיל רק כשהסכום גדול מ-10 נניח.",
  "time_range": [
   662.3134020618558,
   666.7684210526315
  ]
 },
 {
  "input": "That is, you want some bias for it to be inactive.",
  "model": "nmt",
  "translatedText": "כלומר, אתה רוצה הטיה מסוימת כדי שזה לא יהיה פעיל.",
  "time_range": [
   666.7684210526315,
   670.6631578947367
  ]
 },
 {
  "input": "What we'll do then is just add in some other number, like negative 10, to this weighted sum before plugging it through the sigmoid squishification function.",
  "model": "nmt",
  "translatedText": "מה שנעשה אז הוא פשוט להוסיף מספר אחר, כמו 10 שלילי, לסכום המשוקלל הזה לפני שתחבר אותו דרך פונקציית הסיגמואידית.",
  "time_range": [
   670.6631578947367,
   680.6345833333332
  ]
 },
 {
  "input": "That additional number is called the bias.",
  "model": "nmt",
  "translatedText": "המספר הנוסף הזה נקרא ההטיה.",
  "time_range": [
   680.6345833333332,
   683.3820833333334
  ]
 },
 {
  "input": "So the weights tell you what pixel pattern this neuron in the second layer is picking up on, and the bias tells you how high the weighted sum needs to be before the neuron starts getting meaningfully active.",
  "model": "nmt",
  "translatedText": "אז המשקולות אומרות לך איזה דפוס פיקסלים הנוירון הזה בשכבה השנייה קולט, וההטיה אומרת לך כמה גבוה הסכום המשוקלל צריך להיות לפני שהנוירון יתחיל להיות פעיל בצורה משמעותית.",
  "time_range": [
   683.3820833333334,
   695.0896842105263
  ]
 },
 {
  "input": "And that is just one neuron.",
  "model": "nmt",
  "translatedText": "וזה רק נוירון אחד.",
  "time_range": [
   695.0896842105263,
   697.1882105263157
  ]
 },
 {
  "input": "Every other neuron in this layer is going to be connected to all 784 pixel neurons from the first layer, and each one of those 784 connections has its own weight associated with it.",
  "model": "nmt",
  "translatedText": "כל נוירון אחר בשכבה הזו יתחבר לכל הנוירונים של 784 פיקסלים מהשכבה הראשונה, ולכל אחד מאותם 784 חיבורים יש משקל משלו הקשור אליו.",
  "time_range": [
   697.1882105263157,
   710.705
  ]
 },
 {
  "input": "Also, each one has some bias, some other number that you add on to the weighted sum before squishing it with the sigmoid.",
  "model": "nmt",
  "translatedText": "כמו כן, לכל אחד יש הטיה מסוימת, מספר אחר שאתה מוסיף על הסכום המשוקלל לפני שמעיכה אותו עם הסיגמואיד.",
  "time_range": [
   710.705,
   717.96
  ]
 },
 {
  "input": "And that's a lot to think about!",
  "model": "nmt",
  "translatedText": "וזה הרבה לחשוב על זה!",
  "time_range": [
   717.96,
   719.684081632653
  ]
 },
 {
  "input": "With this hidden layer of 16 neurons, that's a total of 784 times 16 weights, along with 16 biases.",
  "model": "nmt",
  "translatedText": "עם השכבה הנסתרת הזו של 16 נוירונים, זה בסך הכל 784 כפול 16 משקלים, יחד עם 16 הטיות.",
  "time_range": [
   719.684081632653,
   727.8482474226803
  ]
 },
 {
  "input": "And all of that is just the connections from the first layer to the second.",
  "model": "nmt",
  "translatedText": "וכל זה הוא רק החיבורים מהשכבה הראשונה לשניה.",
  "time_range": [
   727.8482474226803,
   732.104347826087
  ]
 },
 {
  "input": "The connections between the other layers also have a bunch of weights and biases associated with them.",
  "model": "nmt",
  "translatedText": "לקשרים בין השכבות האחרות יש גם חבורה של משקלים והטיות הקשורות אליהם.",
  "time_range": [
   732.104347826087,
   738.0597802197801
  ]
 },
 {
  "input": "All said and done, this network has almost exactly 13,000 total weights and biases.",
  "model": "nmt",
  "translatedText": "בכל מקרה, לרשת הזו יש כמעט בדיוק 13,000 משקלים והטיות.",
  "time_range": [
   738.0597802197801,
   744.0154838709677
  ]
 },
 {
  "input": "13,000 knobs and dials that can be tweaked and turned to make this network behave in different ways.",
  "model": "nmt",
  "translatedText": "13,000 כפתורים וחוגים שניתן לכוונן ולסובב כדי לגרום לרשת הזו להתנהג בדרכים שונות.",
  "time_range": [
   744.0154838709677,
   750.4933333333332
  ]
 },
 {
  "input": "So when we talk about learning, what that's referring to is getting the computer to find a valid setting for all of these many many numbers so that it'll actually solve the problem at hand.",
  "model": "nmt",
  "translatedText": "אז כשאנחנו מדברים על למידה, מה שהכוונה היא לגרום למחשב למצוא הגדרה חוקית עבור כל המספרים הרבים האלה, כך שהוא יפתור למעשה את הבעיה שעל הפרק.",
  "time_range": [
   750.4933333333332,
   761.9532631578948
  ]
 },
 {
  "input": "One thought experiment that is at once fun and kind of horrifying is to imagine sitting down and setting all of these weights and biases by hand, purposefully tweaking the numbers so that the second layer picks up on edges, the third layer picks up on patterns, etc.",
  "model": "nmt",
  "translatedText": "ניסוי מחשבתי אחד שהוא מהנה ומזעזע בעת ובעונה אחת הוא לדמיין איך יושבים ומגדירים את כל המשקולות וההטיות האלה ביד, מכוונים בכוונה את המספרים כך שהשכבה השנייה תופסת את הקצוות, השכבה השלישית תופסת דפוסים, וכו &#39; אני אישית מוצא את זה מספק ולא רק להתייחס לרשת כאל קופסה שחורה מוחלטת, כי כשהרשת לא מתפקדת כמו שאתה צופה, אם בנית קצת מערכת יחסים עם המשמעות של המשקולות וההטיות האלה.",
  "time_range": [
   761.9532631578948,
   776.5091304347825
  ]
 },
 {
  "input": "I personally find this satisfying rather than just treating the network as a total black box, because when the network doesn't perform the way you anticipate, if you've built up a little bit of a relationship with what those weights and biases actually mean, you have a starting place for experimenting with how to change the structure to improve.",
  "model": "nmt",
  "translatedText": ", יש לך מקום התחלה להתנסות כיצד לשנות את המבנה כדי לשפר.",
  "time_range": [
   776.5091304347825,
   793.950843373494
  ]
 },
 {
  "input": "Or when the network does work, but not for the reasons you might expect, digging into what the weights and biases are doing is a good way to challenge your assumptions and really expose the full space of possible solutions.",
  "model": "nmt",
  "translatedText": "או כשהרשת אכן עובדת, אבל לא מהסיבות שאתה עשוי לצפות, חפירה במה שהמשקלים וההטיות עושות היא דרך טובה לאתגר את ההנחות שלך ובאמת לחשוף את מלוא המרחב של הפתרונות האפשריים.",
  "time_range": [
   793.950843373494,
   806.2017582417582
  ]
 },
 {
  "input": "By the way, the actual function here is a little cumbersome to write down, don't you think?",
  "model": "nmt",
  "translatedText": "אגב, הפונקציה בפועל כאן קצת מסורבלת לרשום, אתה לא חושב?",
  "time_range": [
   806.2017582417582,
   812.1778260869567
  ]
 },
 {
  "input": "So let me show you a more notationally compact way that these connections are represented.",
  "model": "nmt",
  "translatedText": "אז הרשו לי להראות לכם דרך קומפקטית יותר מבחינה סימון שבה חיבורים אלה מיוצגים.",
  "time_range": [
   812.1778260869567,
   817.0874226804124
  ]
 },
 {
  "input": "This is how you'd see it if you choose to read up more about neural networks.",
  "model": "nmt",
  "translatedText": "כך תראה את זה אם תבחר לקרוא עוד על רשתות עצביות.",
  "time_range": [
   817.0874226804124,
   821.1208602150539
  ]
 },
 {
  "input": "Organize all of the activations from one layer into a column as a vector.",
  "model": "nmt",
  "translatedText": "ארגן את כל ההפעלות משכבה אחת לעמודה בתור וקטור.",
  "time_range": [
   821.1208602150539,
   826.1400000000001
  ]
 },
 {
  "input": "Then organize all of the weights as a matrix, where each row of that matrix corresponds to the connections between one layer and a particular neuron in the next layer.",
  "model": "nmt",
  "translatedText": "לאחר מכן ארגן את כל המשקולות כמטריצה, כאשר כל שורה של המטריצה הזו מתאימה לחיבורים בין שכבה אחת לנוירון מסוים בשכבה הבאה.",
  "time_range": [
   826.1400000000001,
   838.0799999999998
  ]
 },
 {
  "input": "What that means is that taking the weighted sum of the activations in the first layer according to these weights corresponds to one of the terms in the matrix vector product of everything we have on the left here.",
  "model": "nmt",
  "translatedText": "מה שזה אומר הוא שלקיחת הסכום המשוקלל של ההפעלה בשכבה הראשונה לפי משקלים אלו מתאימה לאחד המונחים במכפלת הווקטור המטריצה של כל מה שיש לנו כאן משמאל.",
  "time_range": [
   838.0799999999998,
   849.7028571428573
  ]
 },
 {
  "input": "By the way, so much of machine learning just comes down to having a good grasp of linear algebra, so for any of you who want a nice visual understanding for matrices and what matrix vector multiplication means, take a look at the series I did on linear algebra, especially chapter 3.",
  "model": "nmt",
  "translatedText": "אגב, כל כך הרבה מלמידת מכונה מסתכמת רק בהבנה טובה של אלגברה לינארית, אז לכל אחד מכם שרוצה הבנה ויזואלית יפה של מטריצות ומה המשמעות של כפל וקטור מטריצה, תסתכל על הסדרה שעשיתי עליה אלגברה לינארית, במיוחד פרק 3.",
  "time_range": [
   849.7028571428573,
   868.9975510204083
  ]
 },
 {
  "input": "Back to our expression, instead of talking about adding the bias to each one of these values independently, we represent it by organizing all those biases into a vector, and adding the entire vector to the previous matrix vector product.",
  "model": "nmt",
  "translatedText": "בחזרה לביטוי שלנו, במקום לדבר על הוספת ההטיה לכל אחד מהערכים הללו באופן עצמאי, אנו מייצגים אותו על ידי ארגון כל ההטיות הללו לווקטור, והוספת הווקטור כולו לתוצר הווקטור המטריצה הקודם.",
  "time_range": [
   868.9975510204083,
   882.7291089108912
  ]
 },
 {
  "input": "Then as a final step, I'll wrap a sigmoid around the outside here, and what that's supposed to represent is that you're going to apply the sigmoid function to each specific component of the resulting vector inside.",
  "model": "nmt",
  "translatedText": "ואז כשלב אחרון, אעטוף סיגמואיד סביב החיצוני כאן, ומה שזה אמור לייצג זה שאתה הולך להחיל את פונקציית הסיגמואיד על כל רכיב ספציפי של הווקטור שנוצר בפנים.",
  "time_range": [
   882.7291089108912,
   895.215
  ]
 },
 {
  "input": "So once you write down this weight matrix and these vectors as their own symbols, you can communicate the full transition of activations from one layer to the next in an extremely tight and neat little expression, and this makes the relevant code both a lot simpler and a lot faster, since many libraries optimize the heck out of matrix multiplication.",
  "model": "nmt",
  "translatedText": "אז ברגע שאתה כותב את מטריצת המשקל הזו והווקטורים האלה כסמלים משלהם, אתה יכול לתקשר את המעבר המלא של הפעלות משכבה אחת לאחרת בביטוי קטן ומסודר במיוחד, וזה הופך את הקוד הרלוונטי להרבה יותר פשוט וגם הרבה יותר מהר, מכיוון שספריות רבות מייעלות את כפל המטריצה לעזאזל.",
  "time_range": [
   895.215,
   916.0424242424242
  ]
 },
 {
  "input": "Remember how earlier I said these neurons are simply things that hold numbers?",
  "model": "nmt",
  "translatedText": "זוכרים איך קודם לכן אמרתי שהנוירונים האלה הם פשוט דברים שמכילים מספרים?",
  "time_range": [
   916.0424242424242,
   922.12
  ]
 },
 {
  "input": "Well of course the specific numbers that they hold depends on the image you feed in, so it's actually more accurate to think of each neuron as a function, one that takes in the outputs of all the neurons in the previous layer, and spits out a number between 0 and 1.",
  "model": "nmt",
  "translatedText": "ובכן, כמובן שהמספרים הספציפיים שהם מחזיקים תלויים בתמונה שבה אתה ניזון, כך שלמעשה נכון יותר לחשוב על כל נוירון כפונקציה, כזו שמקבלת את הפלטים של כל הנוירונים בשכבה הקודמת, ויורקת החוצה מספר בין 0 ל-1.",
  "time_range": [
   922.12,
   938.3213186813186
  ]
 },
 {
  "input": "Really the entire network is just a function, one that takes in 784 numbers as an input and spits out 10 numbers as an output.",
  "model": "nmt",
  "translatedText": "באמת שכל הרשת היא רק פונקציה, כזו שמקבלת 784 מספרים כקלט ויורקת 10 מספרים כפלט.",
  "time_range": [
   938.3213186813186,
   947.0963636363637
  ]
 },
 {
  "input": "It's an absurdly complicated function, one that involves 13,000 parameters in the forms of these weights and biases that pick up on certain patterns, and which involves iterating many matrix vector products and the sigmoid squishification function, but it's just a function nonetheless.",
  "model": "nmt",
  "translatedText": "זוהי פונקציה מסובכת בצורה אבסורדית, כזו שכוללת 13,000 פרמטרים בצורות של משקלים והטיות אלו הקולטות על דפוסים מסוימים, ואשר כוללת איטרציה של מוצרים וקטורים מטריצות רבים ופונקציית ה-squishification הסיגמואידית, אבל בכל זאת זו רק פונקציה.",
  "time_range": [
   947.0963636363637,
   963.2014117647059
  ]
 },
 {
  "input": "And in a way it's kind of reassuring that it looks complicated.",
  "model": "nmt",
  "translatedText": "ובמובן מסוים זה קצת מרגיע שזה נראה מסובך.",
  "time_range": [
   963.2014117647059,
   966.8178723404255
  ]
 },
 {
  "input": "I mean if it were any simpler, what hope would we have that it could take on the challenge of recognizing digits?",
  "model": "nmt",
  "translatedText": "כלומר אם זה היה פשוט יותר, איזו תקווה הייתה לנו שזה יכול לעמוד באתגר של זיהוי ספרות?",
  "time_range": [
   966.8178723404255,
   972.8075
  ]
 },
 {
  "input": "And how does it take on that challenge?",
  "model": "nmt",
  "translatedText": "ואיך זה מתמודד עם האתגר הזה?",
  "time_range": [
   972.8075,
   974.92
  ]
 },
 {
  "input": "How does this network learn the appropriate weights and biases just by looking at data?",
  "model": "nmt",
  "translatedText": "איך הרשת הזו לומדת את המשקולות וההטיות המתאימים רק על ידי התבוננות בנתונים?",
  "time_range": [
   974.92,
   979.88
  ]
 },
 {
  "input": "Well that's what I'll show in the next video, and I'll also dig a little more into what this particular network is really doing.",
  "model": "nmt",
  "translatedText": "ובכן, זה מה שאני אראה בסרטון הבא, ואני גם אחפור קצת יותר במה באמת הרשת הספציפית הזו עושה.",
  "time_range": [
   979.88,
   986.1478260869567
  ]
 },
 {
  "input": "Now is the point I suppose I should say subscribe to stay notified about when that video or any new videos come out, but realistically most of you don't actually receive notifications from YouTube, do you?",
  "model": "nmt",
  "translatedText": "עכשיו זה הנקודה שאני מניח שאני צריך להגיד הירשם כדי להישאר מעודכן לגבי מתי הסרטון הזה או סרטונים חדשים כלשהם יוצאים, אבל באופן מציאותי רובכם באמת לא מקבלים התראות מיוטיוב, נכון?",
  "time_range": [
   986.1478260869567,
   997.5744680851064
  ]
 },
 {
  "input": "Maybe more honestly I should say subscribe so that the neural networks that underlie YouTube's recommendation algorithm are primed to believe that you want to see content from this channel get recommended to you.",
  "model": "nmt",
  "translatedText": "אולי יותר בכנות אני צריך להגיד הירשמו כדי שהרשתות הנוירוניות שעומדות בבסיס אלגוריתם ההמלצה של יוטיוב יהיו מוכנות להאמין שאתם רוצים לראות תוכן מהערוץ הזה מומלץ לכם.",
  "time_range": [
   997.5744680851064,
   1008.2782795698924
  ]
 },
 {
  "input": "Anyway, stay posted for more.",
  "model": "nmt",
  "translatedText": "בכל מקרה, תתעדכן לעוד.",
  "time_range": [
   1008.2782795698924,
   1010.6
  ]
 },
 {
  "input": "Thank you very much to everyone supporting these videos on Patreon.",
  "model": "nmt",
  "translatedText": "תודה רבה לכל מי שתומך בסרטונים האלה ב-Patreon.",
  "time_range": [
   1010.6,
   1013.6090322580646
  ]
 },
 {
  "input": "I've been a little slow to progress in the probability series this summer, but I'm jumping back into it after this project, so patrons you can look out for updates there.",
  "model": "nmt",
  "translatedText": "קצת איחרתי להתקדם בסדרת ההסתברות בקיץ הזה, אבל אני קופץ אליו בחזרה אחרי הפרויקט הזה, אז לפטרונים תוכלו לחפש עדכונים שם.",
  "time_range": [
   1013.6090322580646,
   1022.3295652173913
  ]
 },
 {
  "input": "To close things off here I have with me Leesha Lee who did her PhD work on the theoretical side of deep learning, and who currently works at a venture capital firm called Amplify Partners who kindly provided some of the funding for this video.",
  "model": "nmt",
  "translatedText": "כדי לסגור את העניינים כאן יש לי איתי את לישה לי שעשתה את עבודת הדוקטורט שלה בצד התיאורטי של למידה עמוקה, ועובדת כיום בחברת הון סיכון בשם Amplify Partners שסיפקה בחביבות חלק מהמימון לסרטון הזה.",
  "time_range": [
   1022.3295652173913,
   1035.16
  ]
 },
 {
  "input": "So Leesha, one thing I think we should quickly bring up is this sigmoid function.",
  "model": "nmt",
  "translatedText": "אז לישה, דבר אחד שאני חושב שאנחנו צריכים להעלות במהירות הוא הפונקציה הסיגמואידית הזו.",
  "time_range": [
   1035.16,
   1039.48
  ]
 },
 {
  "input": "As I understand it early networks use this to squish the relevant weighted sum into that interval between zero and one, you know kind of motivated by this biological analogy of neurons either being inactive or active.",
  "model": "nmt",
  "translatedText": "כפי שאני מבין את זה, רשתות מוקדמות משתמשות בזה כדי לדחוס את הסכום המשוקלל הרלוונטי לתוך המרווח הזה שבין אפס לאחד, אתה יודע שסוג של מונע מהאנלוגיה הביולוגית הזו של נוירונים שאינם פעילים או פעילים.",
  "time_range": [
   1039.48,
   1049.9958620689656
  ]
 },
 {
  "input": "Exactly.",
  "model": "nmt",
  "translatedText": "בְּדִיוּק.",
  "time_range": [
   1049.9958620689656,
   1050.4593103448276
  ]
 },
 {
  "input": "But relatively few modern networks actually use sigmoid anymore.",
  "model": "nmt",
  "translatedText": "אבל מעט יחסית רשתות מודרניות משתמשות יותר ב-sigmoid. כֵּן.",
  "time_range": [
   1050.4593103448276,
   1054.0262068965517
  ]
 },
 {
  "input": "Yeah.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   1054.0262068965517,
   1054.2882758620688
  ]
 },
 {
  "input": "It's kind of old school right?",
  "model": "nmt",
  "translatedText": "זה סוג של בית ספר ישן נכון?",
  "time_range": [
   1054.2882758620688,
   1055.8606896551723
  ]
 },
 {
  "input": "Yeah or rather relu seems to be much easier to train.",
  "model": "nmt",
  "translatedText": "כן, או ליתר דיוק, נראה שהרבה יותר קל לאמן את רלו.",
  "time_range": [
   1055.8606896551723,
   1058.8729411764707
  ]
 },
 {
  "input": "And relu, relu stands for rectified linear unit?",
  "model": "nmt",
  "translatedText": "ורלו, רלו מייצג יחידה לינארית מתוקנת?",
  "time_range": [
   1058.8729411764707,
   1062.3063529411766
  ]
 },
 {
  "input": "Yes it's this kind of function where you're just taking a max of zero and a where a is given by what you were explaining in the video.",
  "model": "nmt",
  "translatedText": "כן, זה סוג כזה של פונקציה שבה אתה פשוט לוקח מקסימום של אפס ו-a שבו a נתון לפי מה שהסברת בסרטון.",
  "time_range": [
   1062.3063529411766,
   1071.0748387096774
  ]
 },
 {
  "input": "And what this was sort of motivated from I think was a partially by a biological analogy with how neurons would either be activated or not.",
  "model": "nmt",
  "translatedText": "ולדעתי זה היה סוג של מוטיבציה בגלל אנלוגיה ביולוגית לאופן שבו נוירונים יופעלו או לא.",
  "time_range": [
   1071.0748387096774,
   1080.6709278350515
  ]
 },
 {
  "input": "And so if it passes a certain threshold it would be the identity function, but if it did not then it would just not be activated so it'd be zero.",
  "model": "nmt",
  "translatedText": "אז אם זה יעבור סף מסוים זה יהיה פונקציית הזהות, אבל אם לא אז זה פשוט לא היה מופעל אז זה יהיה אפס.",
  "time_range": [
   1080.6709278350515,
   1089.2872727272727
  ]
 },
 {
  "input": "So it's kind of a simplification.",
  "model": "nmt",
  "translatedText": "אז זה סוג של פשטנות.",
  "time_range": [
   1089.2872727272727,
   1090.9972727272727
  ]
 },
 {
  "input": "Using sigmoids didn't help training or it was very difficult to train at some point and people just tried relu and it happened to work very well for these incredibly deep neural networks.",
  "model": "nmt",
  "translatedText": "השימוש בסיגמואידים לא עזר לאימון או שהיה קשה מאוד להתאמן בשלב מסוים ואנשים פשוט ניסו relu וזה עבד טוב מאוד עבור רשתות עצבים עמוקות להפליא.",
  "time_range": [
   1090.9972727272727,
   1104.0523076923075
  ]
 },
 {
  "input": "All right, thank you Leesha.",
  "model": "nmt",
  "translatedText": "בסדר, תודה לך לישה.",
  "time_range": [
   1104.0523076923075,
   1119.08
  ]
 }
]