1
00:00:00,000 --> 00:00:11,200
हे 3 आहे. हे 28x28 पिक्सेलच्या अत्यंत कमी रिझोल्यूशनवर चपळपणे लिहिलेले आणि प्रस्तुत केले आहे, परंतु

2
00:00:11,200 --> 00:00:15,340
तुमच्या मेंदूला ते 3 म्हणून ओळखण्यात कोणतीही अडचण नाही. आणि मेंदू इतके सहजतेने करू शकतो हे

3
00:00:15,340 --> 00:00:20,500
किती वेडे आहे याचे कौतुक करण्यासाठी तुम्ही थोडा वेळ घ्यावा अशी माझी इच्छा आहे. म्हणजे, हे, हे

4
00:00:20,500 --> 00:00:26,180
आणि हे देखील 3s म्हणून ओळखण्यायोग्य आहेत, जरी प्रत्येक पिक्सेलची विशिष्ट मूल्ये एका प्रतिमेपासून

5
00:00:26,180 --> 00:00:31,260
दुसर्‍या प्रतिमेत खूप भिन्न असली तरीही. जेव्हा तुम्ही हे 3 पाहता तेव्हा तुमच्या डोळ्यातील

6
00:00:31,260 --> 00:00:36,020
विशिष्ट प्रकाश-संवेदनशील पेशी गोळीबार करतात त्या गोळीबार करणाऱ्यांपेक्षा खूप वेगळ्या असतात जेव्हा तुम्ही हे 3

7
00:00:36,020 --> 00:00:42,900
पाहता. पण तुमच्या त्या क्रेझी-स्मार्ट व्हिज्युअल कॉर्टेक्समधील काहीतरी त्याच कल्पनेचे प्रतिनिधित्व करते

8
00:00:42,900 --> 00:00:49,300
आणि त्याच वेळी इतर प्रतिमांना त्यांच्या स्वतःच्या वेगळ्या कल्पना म्हणून ओळखते.

9
00:00:49,300 --> 00:00:55,820
पण जर मी तुम्हाला सांगितले की, अहो, खाली बसा आणि माझ्यासाठी 28x28 च्या ग्रिडमध्ये एक प्रोग्राम

10
00:00:56,340 --> 00:01:01,780
लिहा आणि 0 आणि 10 दरम्यान एकच संख्या आउटपुट करेल, तुम्हाला अंक म्हणजे काय वाटते

11
00:01:01,780 --> 00:01:07,860
ते सांगेल, तर हे कार्य हास्यास्पद क्षुल्लकतेपासून पुढे जाईल. भयंकर कठीण. जोपर्यंत तुम्ही खडकाच्या खाली

12
00:01:07,860 --> 00:01:12,020
जगत नाही तोपर्यंत, मला वाटतं की मला वर्तमान आणि भविष्यासाठी मशीन लर्निंग आणि न्यूरल

13
00:01:12,020 --> 00:01:16,460
नेटवर्क्सची प्रासंगिकता आणि महत्त्व सांगण्याची फारशी गरज नाही. पण मला इथे काय करायचे आहे ते तुम्हाला दाखवायचे

14
00:01:16,460 --> 00:01:22,020
आहे की न्यूरल नेटवर्क म्हणजे काय आहे, कोणतीही पार्श्वभूमी गृहीत धरून नाही, आणि ते काय करत आहे याची कल्पना करण्यात मदत

15
00:01:22,060 --> 00:01:26,860
करण्यासाठी, बझवर्ड म्हणून नव्हे तर गणिताचा एक भाग म्हणून. माझी आशा फक्त एवढीच आहे की रचना स्वतःच प्रेरित आहे

16
00:01:26,860 --> 00:01:31,460
असे वाटून तुम्ही दूर व्हाल आणि जेव्हा तुम्ही वाचता किंवा तुम्ही न्यूरल नेटवर्क कोट-अनक्वॉट शिकता तेव्हा त्याचा

17
00:01:31,460 --> 00:01:36,780
अर्थ काय होता हे तुम्हाला माहीत आहे असे वाटावे. हा व्हिडीओ फक्त त्यातील रचना

18
00:01:36,780 --> 00:01:40,300
घटकाला वाहिलेला आहे, आणि पुढील एक शिकणे हाताळणार आहे.

19
00:01:40,300 --> 00:01:45,580
आपण एक न्यूरल नेटवर्क एकत्र ठेवणार आहोत जे हस्तलिखित अंक ओळखण्यास शिकू शकेल.

20
00:01:45,580 --> 00:01:53,540
विषयाची ओळख करून देण्यासाठी हे काहीसे उत्कृष्ट उदाहरण आहे, आणि येथे यथास्थिती कायम ठेवण्यात मला

21
00:01:53,540 --> 00:01:57,340
आनंद होत आहे, कारण दोन व्हिडिओंच्या शेवटी मी तुम्हाला काही चांगल्या संसाधनांकडे निर्देशित करू इच्छितो

22
00:01:57,340 --> 00:02:01,420
जिथे तुम्ही अधिक जाणून घेऊ शकता आणि कुठे तुम्ही हे करणारा कोड डाउनलोड करू शकता आणि

23
00:02:01,420 --> 00:02:07,820
तुमच्या स्वतःच्या संगणकावर त्यासोबत खेळू शकता. न्यूरल नेटवर्क्सचे अनेक प्रकार आहेत आणि अलीकडच्या

24
00:02:07,820 --> 00:02:12,900
काही वर्षांत या प्रकारांबद्दल संशोधनात मोठी भर पडली आहे, परंतु या दोन

25
00:02:12,940 --> 00:02:18,100
परिचयात्मक व्हिडिओंमध्ये तुम्ही आणि मी कोणत्याही फ्रिल्सशिवाय सर्वात सोपा प्लेन व्हॅनिला फॉर्म

26
00:02:18,100 --> 00:02:23,020
पाहणार आहोत. कोणत्याही अधिक शक्तिशाली आधुनिक प्रकारांना समजून घेण्यासाठी ही एक आवश्यक पूर्व शर्त

27
00:02:23,020 --> 00:02:28,140
आहे आणि माझ्यावर विश्वास ठेवा की आपल्या मनाला गुंडाळण्यासाठी अजूनही आपल्याकडे बरीच गुंतागुंत आहे.

28
00:02:28,140 --> 00:02:33,440
परंतु या सर्वात सोप्या स्वरूपात देखील ते हस्तलिखित अंक ओळखण्यास शिकू शकते, जी

29
00:02:33,440 --> 00:02:39,380
संगणकासाठी सक्षम असणे खूप छान गोष्ट आहे. आणि त्याच वेळी आपण पाहू शकाल की ते

30
00:02:39,460 --> 00:02:45,620
आपल्यासाठी असण्याची आशा असलेल्या जोडप्याला ते कसे कमी पडते. नावाप्रमाणेच, न्यूरल नेटवर्क्स मेंदूद्वारे प्रेरित आहेत,

31
00:02:45,620 --> 00:02:50,820
परंतु चला ते खंडित करूया. न्यूरॉन्स काय आहेत आणि ते कोणत्या अर्थाने एकमेकांशी

32
00:02:50,820 --> 00:02:56,900
जोडलेले आहेत? आत्ता जेव्हा मी न्यूरॉन म्हणतो, तेव्हा मला तुम्ही फक्त एका गोष्टीचा विचार करावा असे वाटते,

33
00:02:56,900 --> 00:03:04,380
ज्यामध्ये संख्या असते, विशेषत: 0 आणि 1 मधील संख्या. हे खरोखर त्यापेक्षा जास्त नाही. उदाहरणार्थ, नेटवर्क

34
00:03:04,420 --> 00:03:10,060
इनपुट प्रतिमेच्या 28 गुणा 28 पिक्सेलपैकी प्रत्येकाशी संबंधित न्यूरॉन्सच्या समूहाने सुरू होते,

35
00:03:10,060 --> 00:03:17,260
जे एकूण 784 न्यूरॉन्स आहे. यापैकी प्रत्येकामध्ये एक संख्या असते जी संबंधित

36
00:03:17,260 --> 00:03:23,900
पिक्सेलचे ग्रेस्केल मूल्य दर्शवते, काळ्या पिक्सेलसाठी 0 ते पांढऱ्या पिक्सेलसाठी 1 पर्यंत.

37
00:03:23,900 --> 00:03:30,060
न्यूरॉनच्या आत असलेल्या या संख्येला त्याचे सक्रियकरण म्हणतात, आणि तुमच्या मनात असलेली प्रतिमा अशी

38
00:03:30,060 --> 00:03:37,260
आहे की जेव्हा प्रत्येक न्यूरॉनची सक्रियता जास्त असते तेव्हा ते उजळते. तर हे सर्व

39
00:03:37,260 --> 00:03:47,820
784 न्यूरॉन्स आपल्या नेटवर्कचा पहिला स्तर बनवतात. आता शेवटच्या थरावर जाताना, यात

40
00:03:47,820 --> 00:03:53,780
10 न्यूरॉन्स आहेत, प्रत्येक अंकांपैकी एक दर्शवितो. या न्यूरॉन्समधील सक्रियता, पुन्हा काही संख्या

41
00:03:53,780 --> 00:03:59,460
जी 0 आणि 1 च्या दरम्यान आहे, हे दर्शवते की दिलेली प्रतिमा दिलेल्या अंकाशी

42
00:03:59,500 --> 00:04:05,180
किती सुसंगत आहे असे सिस्टमला वाटते. या दरम्यान एक दोन स्तर देखील आहेत

43
00:04:05,180 --> 00:04:10,780
ज्याला लपविलेले स्तर म्हणतात, जे काही काळासाठी फक्त पृथ्वीवर अंक ओळखण्याची ही प्रक्रिया

44
00:04:10,780 --> 00:04:15,900
कशी हाताळली जाईल यासाठी एक विशाल प्रश्नचिन्ह असावे. या नेटवर्कमध्ये मी दोन लपलेले स्तर निवडले,

45
00:04:15,900 --> 00:04:21,460
प्रत्येकामध्ये 16 न्यूरॉन्स आहेत आणि हे मान्य आहे की ही एक अनियंत्रित निवड आहे. खरे सांगायचे तर,

46
00:04:21,460 --> 00:04:26,620
मला फक्त एका क्षणात रचना कशी प्रेरित करायची आहे यावर आधारित मी दोन स्तर निवडले, आणि 16,

47
00:04:26,620 --> 00:04:30,940
स्क्रीनवर बसण्यासाठी फक्त एक छान संख्या होती. सराव मध्ये येथे विशिष्ट रचना प्रयोग करण्यासाठी

48
00:04:30,940 --> 00:04:37,020
भरपूर जागा आहे. नेटवर्क ज्या प्रकारे कार्य करते, एका लेयरमधील सक्रियता पुढील स्तराची

49
00:04:37,020 --> 00:04:42,340
सक्रियता निर्धारित करते. आणि अर्थातच एक माहिती प्रक्रिया यंत्रणा म्हणून नेटवर्कचे हृदय

50
00:04:42,340 --> 00:04:47,820
हे एका लेयरमधील सक्रियतेने पुढील स्तरावर कसे सक्रिय केले जाते यावर

51
00:04:47,820 --> 00:04:53,340
अवलंबून असते. न्यूरॉन्सच्या जैविक नेटवर्कमध्ये न्यूरॉन्सच्या काही गटांमुळे काही

52
00:04:53,380 --> 00:04:59,380
इतरांना आग लागण्याची शक्यता असते. आता मी येथे दाखवत असलेले नेटवर्क अंक ओळखण्यासाठी

53
00:04:59,380 --> 00:05:04,260
आधीच प्रशिक्षित केले गेले आहे आणि मला त्याद्वारे काय म्हणायचे आहे ते मी तुम्हाला दाखवतो. याचा अर्थ असा

54
00:05:04,260 --> 00:05:10,900
की जर तुम्ही प्रतिमेतील प्रत्येक पिक्सेलच्या ब्राइटनेसनुसार इनपुट लेयरच्या सर्व 784 न्यूरॉन्सला प्रकाश देणार्‍या

55
00:05:10,900 --> 00:05:16,860
प्रतिमेमध्ये फीड केले तर, सक्रियतेच्या पॅटर्नमुळे पुढील लेयरमध्ये काही विशिष्ट पॅटर्न निर्माण होतात, ज्यामुळे

56
00:05:16,860 --> 00:05:21,740
नंतरच्या एका लेयरमध्ये काही पॅटर्न निर्माण होतात. ते, जे शेवटी आउटपुट लेयरमध्ये काही नमुना देते.

57
00:05:21,780 --> 00:05:27,540
आणि त्या आउटपुट लेयरचा सर्वात उजळ न्यूरॉन हा नेटवर्कची निवड आहे, म्हणून बोलायचे तर,

58
00:05:27,540 --> 00:05:35,420
ही प्रतिमा कोणत्या अंकासाठी दर्शवते. आणि एका लेयरचा पुढच्या भागावर कसा प्रभाव पडतो किंवा

59
00:05:35,420 --> 00:05:40,460
प्रशिक्षण कसे कार्य करते या गणितात उडी मारण्यापूर्वी, अशा स्तरित संरचनेकडून हुशारीने वागण्याची अपेक्षा

60
00:05:40,460 --> 00:05:46,340
करणे देखील वाजवी का आहे याबद्दल बोलूया. आम्ही येथे काय अपेक्षा करत आहोत? ते मध्यम स्तर काय करत

61
00:05:46,420 --> 00:05:52,420
असतील यासाठी सर्वात चांगली आशा कोणती आहे? बरं, जेव्हा तुम्ही किंवा मी अंक ओळखतो, तेव्हा आम्ही विविध

62
00:05:52,420 --> 00:05:58,980
घटक एकत्र करतो. A 9 वर लूप अप आणि उजवीकडे एक रेषा आहे. 8 मध्ये लूप अप टॉप देखील आहे,

63
00:05:58,980 --> 00:06:05,420
परंतु ते दुसर्या लूप डाउन लोसह जोडलेले आहे. A 4 मुळात तीन विशिष्ट रेषांमध्ये मोडते आणि

64
00:06:05,420 --> 00:06:11,500
त्यासारख्या गोष्टी. आता एका परिपूर्ण जगात, आम्ही आशा करू शकतो की दुसऱ्या ते शेवटच्या लेयरमधील

65
00:06:11,740 --> 00:06:17,460
प्रत्येक न्यूरॉन या उपघटकांपैकी एकाशी सुसंगत असेल, की जेव्हा तुम्ही 9 किंवा 8 सारख्या लूप-अप

66
00:06:17,460 --> 00:06:23,060
टॉपसह इमेजमध्ये फीड करता तेव्हा तेथे काही असतात. विशिष्ट न्यूरॉन ज्याचे सक्रियकरण 1 च्या जवळ होणार

67
00:06:23,060 --> 00:06:28,620
आहे. आणि मला पिक्सेलच्या या विशिष्ट लूपचा अर्थ असा नाही, आशा आहे की कोणत्याही

68
00:06:28,620 --> 00:06:33,980
सामान्यतः लूप पॅटर्न या न्यूरॉनच्या शीर्षस्थानी सेट करतो. अशाप्रकारे, तिसऱ्या स्तरापासून शेवटच्या स्तरापर्यंत

69
00:06:33,980 --> 00:06:39,380
जाण्यासाठी फक्त उपघटकांचे कोणते संयोजन कोणत्या अंकांशी जुळते हे शिकणे आवश्यक

70
00:06:39,380 --> 00:06:44,020
आहे. अर्थात, हे फक्त समस्या सोडवते, कारण तुम्ही हे उपघटक कसे

71
00:06:44,020 --> 00:06:48,340
ओळखाल किंवा योग्य उपघटक काय असावेत हे देखील जाणून घ्याल? आणि एक लेयर

72
00:06:48,340 --> 00:06:52,900
पुढच्यावर कसा प्रभाव टाकतो याबद्दल मी अद्याप बोललो नाही, परंतु क्षणभर माझ्याबरोबर या वर धावा.

73
00:06:52,900 --> 00:06:59,020
लूप ओळखणे देखील उपसमस्यांमध्ये मोडू शकते. हे करण्याचा एक वाजवी मार्ग

74
00:06:59,020 --> 00:07:05,640
म्हणजे प्रथम ते बनवणार्‍या विविध छोट्या कडा ओळखणे. त्याचप्रमाणे, 1 किंवा 4 किंवा 7

75
00:07:05,640 --> 00:07:11,280
या अंकांमध्ये तुम्हाला दिसणार्‍या प्रकारासारखी एक लांबलचक रेषा, ती खरोखरच फक्त एक लांब किनार आहे, किंवा कदाचित

76
00:07:11,280 --> 00:07:18,440
तुम्ही ती अनेक लहान कडांचा विशिष्ट नमुना मानू शकता. त्यामुळे कदाचित आमची आशा आहे की नेटवर्कच्या

77
00:07:18,440 --> 00:07:24,680
दुसऱ्या लेयरमधील प्रत्येक न्यूरॉन विविध संबंधित छोट्या किनार्यांशी सुसंगत आहे. कदाचित जेव्हा यासारखी

78
00:07:24,680 --> 00:07:30,760
प्रतिमा येते, तेव्हा ती सुमारे 8 ते 10 विशिष्ट लहान कडांशी संबंधित सर्व

79
00:07:31,040 --> 00:07:36,480
न्यूरॉन्स उजळते, ज्यामुळे वरच्या लूपशी संबंधित न्यूरॉन्स आणि लांब उभ्या रेषेचा प्रकाश होतो

80
00:07:36,480 --> 00:07:41,960
आणि ते उजळतात. 9 शी संबंधित न्यूरॉन. हे आमचे अंतिम नेटवर्क प्रत्यक्षात करत

81
00:07:41,960 --> 00:07:46,560
आहे की नाही हा दुसरा प्रश्न आहे, नेटवर्कचे प्रशिक्षण कसे द्यायचे ते पाहिल्यावर मी परत

82
00:07:46,560 --> 00:07:51,800
येईन. परंतु ही एक आशा आहे जी आपल्याकडे असू शकते, यासारख्या स्तरित संरचनेसह एक प्रकारचे

83
00:07:51,800 --> 00:07:57,440
ध्येय. शिवाय, आपण कल्पना करू शकता की यासारख्या कडा आणि नमुने शोधण्यात सक्षम असणे

84
00:07:57,480 --> 00:08:02,440
इतर प्रतिमा ओळख कार्यांसाठी खरोखर कसे उपयुक्त असेल. आणि प्रतिमा ओळखण्यापलीकडेही, अशा सर्व

85
00:08:02,440 --> 00:08:06,640
प्रकारच्या बुद्धिमान गोष्टी आहेत ज्या तुम्हाला कराव्याशा वाटू शकतात ज्या अमूर्ततेच्या थरांमध्ये

86
00:08:06,640 --> 00:08:12,640
मोडतात. उदाहरणार्थ, भाषणाचे पार्सिंग करताना, कच्चा ऑडिओ घेणे आणि वेगळे ध्वनी काढणे, जे विशिष्ट

87
00:08:12,640 --> 00:08:17,760
अक्षरे तयार करण्यासाठी एकत्र केले जातात, जे शब्द तयार करण्यासाठी एकत्रित होतात, जे वाक्ये

88
00:08:17,760 --> 00:08:23,360
आणि अधिक अमूर्त विचार बनवतात, इ. परंतु यापैकी कोणतेही प्रत्यक्षात कसे कार्य करते याकडे

89
00:08:23,400 --> 00:08:29,160
परत जाण्यासाठी, एका लेयरमधील अ‍ॅक्टिव्हेशन्स पुढील अ‍ॅक्टिव्हेशन्स कशी निश्चित करू शकतात हे आत्ताच

90
00:08:29,160 --> 00:08:35,320
डिझाईन करत आहे. उद्दिष्ट अशी काही यंत्रणा आहे जी पिक्सेलला कडांमध्ये, किंवा कडांना

91
00:08:35,320 --> 00:08:41,040
पॅटर्नमध्ये किंवा नमुन्यांना अंकांमध्ये एकत्रित करू शकेल. आणि एका अतिशय विशिष्ट उदाहरणावर झूम

92
00:08:41,040 --> 00:08:47,440
इन करण्यासाठी, दुसऱ्या लेयरमधील एका विशिष्ट न्यूरॉनला या प्रदेशात प्रतिमेला धार आहे की नाही हे

93
00:08:47,680 --> 00:08:54,440
पाहण्याची आशा आहे असे समजू या. प्रश्न असा आहे की नेटवर्कमध्ये कोणते पॅरामीटर्स

94
00:08:54,440 --> 00:09:00,440
असावेत? तुम्ही कोणते डायल आणि नॉब्स ट्वीक करू शकता जेणेकरुन हा पॅटर्न, किंवा इतर

95
00:09:00,440 --> 00:09:05,880
कोणताही पिक्सेल पॅटर्न किंवा अनेक कडा लूप बनवू शकतील असा पॅटर्न आणि अशा इतर गोष्टी

96
00:09:05,880 --> 00:09:11,680
कॅप्चर करण्यासाठी पुरेसा अर्थपूर्ण असेल? बरं, आपण काय करणार आहोत ते म्हणजे आपल्या

97
00:09:11,680 --> 00:09:17,160
न्यूरॉन आणि न्यूरॉन्समधील पहिल्या लेयरमधील प्रत्येक कनेक्शनला वजन द्या. हे वजन फक्त संख्या

98
00:09:17,160 --> 00:09:23,960
आहेत. मग ती सर्व सक्रियता पहिल्या लेयरमधून घ्या आणि या वजनांनुसार त्यांची

99
00:09:23,960 --> 00:09:30,400
भारित बेरीज मोजा. मला हे वजन त्यांच्या स्वतःच्या थोड्या ग्रिडमध्ये आयोजित केले गेले आहे

100
00:09:30,400 --> 00:09:35,200
असे विचार करणे उपयुक्त वाटते आणि मी सकारात्मक वजन दर्शविण्यासाठी हिरव्या पिक्सेल आणि

101
00:09:35,200 --> 00:09:40,760
नकारात्मक वजन दर्शवण्यासाठी लाल पिक्सेल वापरणार आहे, जेथे त्या पिक्सेलची चमक काही आहे. वजनाच्या

102
00:09:40,760 --> 00:09:45,880
मूल्याचे सैल चित्रण. जर आम्ही या प्रदेशातील काही सकारात्मक वजने वगळता, जवळजवळ

103
00:09:45,880 --> 00:09:51,200
सर्व पिक्सेलशी संबंधित वजने शून्य केली, तर सर्व पिक्सेल मूल्यांची भारित

104
00:09:51,200 --> 00:09:56,360
बेरीज घेणे म्हणजे फक्त पिक्सेलची मूल्ये जोडणे इतकेच आहे. ज्या प्रदेशाची आम्हाला

105
00:09:56,360 --> 00:10:02,760
काळजी आहे. आणि जर तुम्हाला खरोखर येथे एक धार आहे की नाही हे जाणून घ्यायचे

106
00:10:02,760 --> 00:10:07,960
असेल, तर तुम्ही काय करू शकता ते आसपासच्या पिक्सेलशी संबंधित काही नकारात्मक वजने आहेत. मग बेरीज

107
00:10:08,000 --> 00:10:12,680
सर्वात मोठी असते जेव्हा ते मधले पिक्सेल चमकदार असतात परंतु आसपासचे पिक्सेल गडद असतात.

108
00:10:12,680 --> 00:10:19,200
जेव्हा तुम्ही याप्रमाणे भारित रकमेची गणना करता, तेव्हा तुम्ही कोणतीही संख्या घेऊन येऊ शकता, परंतु या

109
00:10:19,200 --> 00:10:25,200
नेटवर्कसाठी आम्हाला सक्रियतेचे मूल्य 0 आणि 1 दरम्यान हवे आहे. म्हणून ही भारित बेरीज काही

110
00:10:25,200 --> 00:10:30,560
फंक्शनमध्ये पंप करणे ही एक सामान्य गोष्ट आहे जी वास्तविक संख्या रेषा 0 आणि 1 मधील श्रेणीमध्ये

111
00:10:30,560 --> 00:10:36,360
स्क्विश करते. आणि हे करणारे एक सामान्य कार्य सिग्मॉइड फंक्शन म्हणतात, ज्याला लॉजिस्टिक वक्र

112
00:10:36,360 --> 00:10:42,760
देखील म्हणतात. मुळात खूप नकारात्मक इनपुट 0 च्या जवळ संपतात, खूप सकारात्मक इनपुट 1 च्या जवळ

113
00:10:42,760 --> 00:10:51,400
संपतात आणि ते इनपुट 0 च्या आसपास सतत वाढत जातात. त्यामुळे येथे न्यूरॉनचे सक्रियकरण हे मुळात

114
00:10:51,400 --> 00:10:59,320
संबंधित भारित बेरीज किती सकारात्मक आहे याचे मोजमाप आहे. परंतु कदाचित असे नाही की जेव्हा

115
00:10:59,320 --> 00:11:04,080
भारित बेरीज 0 पेक्षा मोठी असेल तेव्हा न्यूरॉन उजळला पाहिजे. कदाचित तुमची बेरीज 10 पेक्षा मोठी असेल

116
00:11:04,120 --> 00:11:11,520
तेव्हाच ते सक्रिय व्हावे असे वाटते. म्हणजेच, ते निष्क्रिय होण्यासाठी तुम्हाला काही पूर्वाग्रह हवा आहे. सिग्मॉइड स्क्विशिफिकेशन

117
00:11:11,520 --> 00:11:17,560
फंक्शनद्वारे प्लग करण्यापूर्वी या भारित बेरीजमध्ये ऋण 10 सारख्या

118
00:11:17,560 --> 00:11:23,840
काही अन्य संख्येत जोडा. त्या अतिरिक्त संख्येला बायस म्हणतात. त्यामुळे दुसऱ्या

119
00:11:23,840 --> 00:11:29,080
लेयरमधील हा न्यूरॉन कोणता पिक्सेल पॅटर्न घेत आहे हे वजन तुम्हाला सांगते आणि न्यूरॉन

120
00:11:29,120 --> 00:11:34,640
अर्थपूर्णपणे सक्रिय होण्याआधी भारित बेरीज किती उच्च असणे आवश्यक आहे हे बायस तुम्हाला सांगते.

121
00:11:34,640 --> 00:11:41,760
आणि ते फक्त एक न्यूरॉन आहे. या लेयरमधील इतर प्रत्येक न्यूरॉन पहिल्या लेयरपासून सर्व 784

122
00:11:41,760 --> 00:11:49,080
पिक्सेल न्यूरॉन्सशी जोडला जाणार आहे आणि त्या 784 कनेक्शनपैकी प्रत्येकाचे स्वतःचे वजन

123
00:11:49,080 --> 00:11:55,320
त्याच्याशी संबंधित आहे. तसेच, प्रत्येकाकडे काही पूर्वाग्रह आहे, काही इतर संख्या आहेत जी तुम्ही

124
00:11:55,320 --> 00:12:00,600
सिग्मॉइडसह squishing करण्यापूर्वी वेटेड बेरीजमध्ये जोडता. आणि हे खूप विचार करण्यासारखे आहे! 16 न्यूरॉन्सच्या या

125
00:12:00,600 --> 00:12:09,280
लपलेल्या थरासह, 16 बायसेससह एकूण 784 पट 16 वजन आहे. आणि हे सर्व

126
00:12:09,280 --> 00:12:13,760
फक्त पहिल्या लेयरपासून दुसऱ्या लेयरपर्यंतचे कनेक्शन आहे. इतर स्तरांमधील कनेक्शनमध्ये त्यांच्याशी

127
00:12:13,760 --> 00:12:19,600
संबंधित वजन आणि पूर्वाग्रहांचा समूह देखील असतो. सर्व सांगितले आणि केले,

128
00:12:19,600 --> 00:12:26,680
या नेटवर्कमध्ये जवळजवळ 13,000 एकूण वजन आणि पूर्वाग्रह आहेत. हे नेटवर्क वेगवेगळ्या प्रकारे वागण्यासाठी 13,000

129
00:12:26,680 --> 00:12:32,400
नॉब्स आणि डायल जे ट्वीक आणि वळले जाऊ शकतात. म्हणून जेव्हा आपण शिकण्याबद्दल बोलतो,

130
00:12:32,400 --> 00:12:38,440
तेव्हा त्याचा संदर्भ म्हणजे संगणकाला या सर्व अनेक संख्यांसाठी एक वैध सेटिंग

131
00:12:38,440 --> 00:12:44,400
शोधून काढणे जेणेकरुन ते प्रत्यक्षात समस्या सोडवेल. एक विचार प्रयोग जो एकाच वेळी

132
00:12:44,400 --> 00:12:49,440
मजेदार आणि भयंकर आहे तो म्हणजे खाली बसून कल्पना करणे आणि हे सर्व वजन

133
00:12:49,440 --> 00:12:53,960
आणि पक्षपाती हाताने सेट करणे, हेतुपुरस्सर संख्या बदलणे जेणेकरुन दुसरा थर कडा वर

134
00:12:53,960 --> 00:12:59,680
येईल, तिसरा स्तर नमुन्यांवर उठेल, इ. नेटवर्कला संपूर्ण ब्लॅक बॉक्स मानण्यापेक्षा मला वैयक्तिकरित्या

135
00:12:59,680 --> 00:13:04,400
हे समाधानकारक वाटते, कारण जेव्हा नेटवर्क तुमच्या अपेक्षेप्रमाणे कार्य करत नाही, जर तुम्ही

136
00:13:04,400 --> 00:13:09,040
त्या वजनांचा आणि पक्षपातांचा प्रत्यक्षात अर्थ काय आहे याच्याशी थोडासा संबंध निर्माण

137
00:13:09,040 --> 00:13:13,440
केला असेल. , सुधारण्यासाठी रचना कशी बदलायची याचा प्रयोग करण्यासाठी तुमच्याकडे सुरुवातीचे ठिकाण

138
00:13:13,440 --> 00:13:17,680
आहे. किंवा जेव्हा नेटवर्क कार्य करते, परंतु आपण अपेक्षित असलेल्या कारणांसाठी नाही, तेव्हा वजन

139
00:13:17,680 --> 00:13:22,760
आणि पूर्वाग्रह काय करत आहेत याचा शोध घेणे आपल्या गृहितकांना आव्हान देण्याचा आणि संभाव्य उपायांची

140
00:13:22,760 --> 00:13:28,560
संपूर्ण जागा उघड करण्याचा एक चांगला मार्ग आहे. बाय द वे, इथे प्रत्यक्ष

141
00:13:28,560 --> 00:13:34,840
फंक्शन लिहायला जरा जटील आहे, नाही वाटत? तर मी तुम्हाला अधिक नोटेशनली कॉम्पॅक्ट मार्ग

142
00:13:34,840 --> 00:13:39,200
दाखवतो ज्याद्वारे या कनेक्शन्सचे प्रतिनिधित्व केले जाते. तुम्ही न्यूरल नेटवर्क्सबद्दल अधिक वाचणे निवडल्यास तुम्हाला

143
00:13:39,200 --> 00:13:45,360
ते असे दिसेल. एका लेयरमधून सर्व सक्रियता एका स्तंभात वेक्टर म्हणून व्यवस्थित

144
00:13:45,480 --> 00:13:53,400
करा. नंतर मॅट्रिक्सच्या रूपात सर्व वजने व्यवस्थित करा, जिथे त्या मॅट्रिक्सची प्रत्येक पंक्ती

145
00:13:53,400 --> 00:13:58,680
एका लेयर आणि पुढील लेयरमधील विशिष्ट न्यूरॉन यांच्यातील कनेक्शनशी संबंधित असेल. याचा अर्थ

146
00:13:58,680 --> 00:14:03,360
असा आहे की या वजनांनुसार पहिल्या लेयरमधील सक्रियतेची भारित बेरीज घेणे हे

147
00:14:03,360 --> 00:14:08,880
आपल्या येथे डावीकडे असलेल्या प्रत्येक गोष्टीच्या मॅट्रिक्स वेक्टर उत्पादनातील एका पदाशी संबंधित

148
00:14:08,880 --> 00:14:17,840
आहे. तसे, मशीन लर्निंगचे बरेच काही फक्त रेखीय बीजगणिताचे चांगले आकलन होण्यावर येते, म्हणून

149
00:14:17,840 --> 00:14:23,000
तुमच्यापैकी ज्यांना मॅट्रिक्स आणि मॅट्रिक्स व्हेक्टर गुणाकार म्हणजे काय याची छान व्हिज्युअल समज हवी

150
00:14:23,000 --> 00:14:29,320
आहे, मी केलेल्या मालिकेवर एक नजर टाका. रेखीय बीजगणित, विशेषत: धडा 3. आमच्या

151
00:14:29,320 --> 00:14:34,200
अभिव्यक्तीकडे परत, या मूल्यांपैकी प्रत्येकाला बायस स्वतंत्रपणे जोडण्याबद्दल बोलण्याऐवजी, आम्ही ते सर्व

152
00:14:34,200 --> 00:14:40,440
पूर्वाग्रह एका वेक्टरमध्ये आयोजित करून आणि संपूर्ण व्हेक्टर मागील मॅट्रिक्स वेक्टर उत्पादनामध्ये

153
00:14:40,440 --> 00:14:47,240
जोडून त्याचे प्रतिनिधित्व करतो. मग अंतिम पायरी म्हणून, मी येथे बाहेरील बाजूस एक सिग्मॉइड

154
00:14:47,240 --> 00:14:51,480
गुंडाळतो, आणि ते काय दर्शवेल ते असे आहे की तुम्ही आतल्या परिणामी वेक्टरच्या प्रत्येक

155
00:14:51,480 --> 00:14:58,120
विशिष्ट घटकावर सिग्मॉइड फंक्शन लागू करणार आहात. म्हणून एकदा तुम्ही हे वेट मॅट्रिक्स आणि

156
00:14:58,120 --> 00:15:03,320
हे व्हेक्टर त्यांचे स्वतःचे चिन्ह म्हणून लिहून घेतले की, तुम्ही सक्रियतेचे संपूर्ण संक्रमण एका

157
00:15:03,480 --> 00:15:08,840
लेयरमधून दुसर्‍या स्तरावर अत्यंत घट्ट आणि व्यवस्थित छोट्या अभिव्यक्तीमध्ये संप्रेषण करू शकता आणि यामुळे

158
00:15:08,840 --> 00:15:14,600
संबंधित कोड बरेच सोपे आणि दोन्ही बनते. बरेच जलद, कारण अनेक लायब्ररी मॅट्रिक्स गुणाकारातून

159
00:15:14,600 --> 00:15:21,400
हेक ऑप्टिमाइझ करतात. लक्षात ठेवा मी किती पूर्वी सांगितले होते की हे न्यूरॉन्स फक्त संख्या ठेवणाऱ्या गोष्टी आहेत?

160
00:15:22,120 --> 00:15:26,280
अर्थातच त्यांनी ठेवलेल्या विशिष्ट संख्या तुम्ही फीड करत असलेल्या प्रतिमेवर अवलंबून असतात, त्यामुळे

161
00:15:28,120 --> 00:15:31,960
प्रत्येक न्यूरॉनचा एक फंक्शन म्हणून विचार करणे अधिक अचूक आहे, जे मागील

162
00:15:31,960 --> 00:15:37,240
लेयरमधील सर्व न्यूरॉन्सचे आउटपुट घेते आणि बाहेर थुंकते. 0 आणि 1 मधील

163
00:15:37,240 --> 00:15:43,800
संख्या. खरोखर संपूर्ण नेटवर्क हे फक्त एक फंक्शन आहे, जे इनपुट म्हणून 784 नंबर

164
00:15:43,800 --> 00:15:49,720
घेते आणि आउटपुट म्हणून 10 नंबर बाहेर टाकते. हे एक विलक्षण क्लिष्ट कार्य आहे,

165
00:15:49,720 --> 00:15:54,520
ज्यामध्ये या वजनाच्या रूपात 13,000 मापदंडांचा समावेश आहे आणि विशिष्ट नमुन्यांवरील पूर्वाग्रह

166
00:15:54,520 --> 00:15:59,000
आहेत आणि ज्यामध्ये अनेक मॅट्रिक्स वेक्टर उत्पादने आणि सिग्मॉइड स्क्विशिफिकेशन फंक्शनची पुनरावृत्ती समाविष्ट

167
00:15:59,000 --> 00:16:04,760
आहे, परंतु तरीही हे फक्त एक कार्य आहे. आणि एक प्रकारे ते क्लिष्ट

168
00:16:04,760 --> 00:16:09,720
दिसते याची खात्री देणारा प्रकार आहे. मला असे म्हणायचे आहे की जर ते सोपे असते, तर अंक

169
00:16:09,720 --> 00:16:14,920
ओळखण्याचे आव्हान ते स्वीकारू शकेल अशी आम्हाला काय आशा आहे? आणि ते आव्हान कसे स्वीकारते?

170
00:16:14,920 --> 00:16:19,320
हे नेटवर्क फक्त डेटा पाहून योग्य वजन आणि पूर्वाग्रह कसे शिकते?

171
00:16:19,880 --> 00:16:23,960
बरं, मी पुढील व्हिडिओमध्ये तेच दाखवेन आणि हे विशिष्ट नेटवर्क खरोखर काय करत आहे याबद्दल

172
00:16:23,960 --> 00:16:29,880
मी थोडे अधिक जाणून घेईन. आता तो व्हिडिओ किंवा कोणतेही नवीन व्हिडिओ कधी येतात

173
00:16:29,880 --> 00:16:34,840
याबद्दल सूचित राहण्यासाठी मी सबस्क्राईब करा असे म्हणायचे आहे, परंतु प्रत्यक्षात तुमच्यापैकी बहुतेकांना

174
00:16:34,840 --> 00:16:39,880
YouTube वरून सूचना मिळत नाहीत, का? कदाचित अधिक प्रामाणिकपणे मला म्हणायचे आहे की

175
00:16:39,880 --> 00:16:44,920
सबस्क्राईब करा जेणेकरून YouTube च्या शिफारसी अल्गोरिदमच्या अधोरेखित असलेल्या न्यूरल नेटवर्क्सना तुम्ही या चॅनेलवरील सामग्री

176
00:16:44,920 --> 00:16:49,800
पाहू इच्छित आहात यावर विश्वास ठेवण्यासाठी तुम्हाला शिफारस केली जाईल. असो, अधिकसाठी पोस्ट करत रहा.

177
00:16:50,600 --> 00:16:54,840
Patreon वर या व्हिडिओंना पाठिंबा देणाऱ्या प्रत्येकाचे मनापासून आभार. मी या उन्हाळ्यात संभाव्यता मालिकेत

178
00:16:54,840 --> 00:16:59,160
प्रगती करण्यास थोडा धीमा आहे, परंतु मी या प्रकल्पानंतर पुन्हा त्यात उडी घेत आहे,

179
00:16:59,160 --> 00:17:05,640
म्हणून संरक्षक तुम्ही तेथे अद्यतने शोधू शकता. येथे गोष्टी बंद करण्यासाठी माझ्यासोबत लीशा ली

180
00:17:05,640 --> 00:17:09,880
आहे ज्यांनी सखोल शिक्षणाच्या सैद्धांतिक बाजूवर PhD काम केले आहे आणि सध्या Amplify

181
00:17:09,880 --> 00:17:14,520
Partners नावाच्या उद्यम भांडवल फर्ममध्ये काम करते ज्यांनी या व्हिडिओसाठी काही निधी दिला.

182
00:17:15,160 --> 00:17:19,480
तर लीशा, मला वाटते एक गोष्ट आपण पटकन आणली पाहिजे ती म्हणजे हे सिग्मॉइड फंक्शन.

183
00:17:19,480 --> 00:17:23,400
मला समजले की सुरुवातीचे नेटवर्क हे शून्य आणि एक दरम्यानच्या मध्यांतरातील संबंधित भारित

184
00:17:23,400 --> 00:17:28,200
बेरीज कमी करण्यासाठी वापरतात, तुम्हाला माहित आहे की न्यूरॉन्सच्या या जैविक सादृश्याने एकतर

185
00:17:28,200 --> 00:17:33,240
निष्क्रिय किंवा सक्रिय आहे. नक्की. परंतु तुलनेने काही आधुनिक नेटवर्क प्रत्यक्षात सिग्मॉइड

186
00:17:33,240 --> 00:17:37,800
वापरतात. हं. ती जुनी शाळा आहे ना? होय किंवा त्याऐवजी रेलूला प्रशिक्षण देणे खूप

187
00:17:37,800 --> 00:17:43,880
सोपे दिसते. आणि relu, relu म्हणजे रेक्टिफाइड लिनियर युनिट? होय हे अशा प्रकारचे फंक्शन

188
00:17:43,880 --> 00:17:50,280
आहे जिथे तुम्ही फक्त कमाल शून्य घेत आहात आणि जिथे तुम्ही व्हिडिओमध्ये जे स्पष्ट करत आहात त्यावरून a

189
00:17:50,280 --> 00:17:56,440
दिले आहे. आणि हे कशापासून प्रेरित होते असे मला वाटते की न्यूरॉन्स एकतर कसे सक्रिय होतील

190
00:17:56,440 --> 00:18:03,640
किंवा कसे होणार नाही याच्या जैविक सादृश्यतेने अंशतः होते. आणि म्हणून जर तो ठराविक थ्रेशोल्ड पार करतो

191
00:18:03,640 --> 00:18:09,080
तर ते ओळख फंक्शन असेल, परंतु जर तसे झाले नाही तर ते सक्रिय होणार नाही म्हणून ते शून्य असेल.

192
00:18:09,080 --> 00:18:13,640
तर ते एक प्रकारचे सरलीकरण आहे. सिग्मॉइड्स वापरल्याने प्रशिक्षणास मदत झाली नाही किंवा एखाद्या वेळी

193
00:18:13,640 --> 00:18:21,320
प्रशिक्षण देणे खूप कठीण होते आणि लोकांनी फक्त रेलूचा प्रयत्न केला आणि हे आश्चर्यकारकपणे

194
00:18:21,320 --> 00:18:26,120
खोल न्यूरल नेटवर्कसाठी खूप चांगले काम केले. ठीक आहे, धन्यवाद लीशा.

195
00:18:39,080 --> 00:18:40,060


