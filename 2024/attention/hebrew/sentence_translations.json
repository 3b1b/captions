[
 {
  "input": "In the last chapter, you and I started to step through the internal workings of a transformer.",
  "translatedText": "בפרק האחרון, אתם ואני התחלנו לעבור דרך פעולתו הפנימית של טרמספורמר.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 0,
  "end": 4.02
 },
 {
  "input": "This is one of the key pieces of technology inside large language models, and a lot of other tools in the modern wave of AI.",
  "translatedText": "זוהי אחת מהטכנולוגיות המרכזיות במודלים של שפות גדולות, והרבה כלים אחרים בגל המודרני של AI.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 4.56,
  "end": 10.2
 },
 {
  "input": "It first hit the scene in a now-famous 2017 paper called Attention is All You Need, and in this chapter you and I will dig into what this attention mechanism is, visualizing how it processes data.",
  "translatedText": "הוא פורסם לראשונה במאמר מ-2017 בשם Attention is All You Need, ובפרק זה אתם ואני נעמיק באופן חזותי במהו מנגנון המיקוד (attention) הזה, וכיצד הוא מעבד נתונים.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 10.98,
  "end": 21.7
 },
 {
  "input": "As a quick recap, here's the important context I want you to have in mind.",
  "translatedText": "כסיכום קצר, הנה ההקשר החשוב שאני רוצה שתזכרו.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 26.14,
  "end": 29.54
 },
 {
  "input": "The goal of the model that you and I are studying is to take in a piece of text and predict what word comes next.",
  "translatedText": "המטרה של המודל שאתם ואני לומדים היא לקחת חלק מטקסט ולנבא איזו מילה מגיעה אחר כך.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 30,
  "end": 36.06
 },
 {
  "input": "The input text is broken up into little pieces that we call tokens, and these are very often words or pieces of words, but just to make the examples in this video easier for you and me to think about, let's simplify by pretending that tokens are always just words.",
  "translatedText": "טקסט הקלט מחולק לחתיכות קטנות שאנו מכנים טוקנים, ולעתים קרובות אלו הן מילים או פיסות מילים, אבל רק כדי להקל עלינו לחשוב על הדוגמאות בסרטון הזה, בואו נפשט על ידי העמדת פנים שטוקנים הם תמיד רק מילים.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 36.86,
  "end": 50.56
 },
 {
  "input": "The first step in a transformer is to associate each token with a high-dimensional vector, what we call its embedding.",
  "translatedText": "השלב הראשון בטרמספורמר הוא לשייך כל טוקן לוקטור בעל מימד גבוה, מה שאנחנו מכנים שיכון שלו.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 51.48,
  "end": 57.7
 },
 {
  "input": "The most important idea I want you to have in mind is how directions in this high-dimensional space of all possible embeddings can correspond with semantic meaning.",
  "translatedText": "הרעיון החשוב ביותר שאני רוצה שתזכרו הוא כיצד כיוונים במרחב הרב-ממדי הזה של כל השיכונים האפשריים יכולים להתכתב עם משמעות סמנטית.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 57.7,
  "end": 67
 },
 {
  "input": "In the last chapter we saw an example for how direction can correspond to gender, in the sense that adding a certain step in this space can take you from the embedding of a masculine noun to the embedding of the corresponding feminine noun.",
  "translatedText": "בפרק האחרון ראינו דוגמה לאופן שבו כיוון יכול להתאים למגדר, במובן זה שהוספת וקטור מסוים במרחב הזה יכולה לקחת אותך משיכון של שם עצם זכרי לשיכון של שם העצם הנקבי המקביל.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 67.68,
  "end": 79.64
 },
 {
  "input": "That's just one example you could imagine how many other directions in this high-dimensional space could correspond to numerous other aspects of a word's meaning.",
  "translatedText": "זו רק דוגמה אחת וכיוונים אחרים במרחב הרב-ממדי הזה יכולים להתאים להרבה היבטים אחרים של משמעות המילה.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 80.16,
  "end": 87.58
 },
 {
  "input": "The aim of a transformer is to progressively adjust these embeddings so that they don't merely encode an individual word, but instead they bake in some much, much richer contextual meaning.",
  "translatedText": "המטרה של טרמספורמר היא להתאים בהדרגה את השיכונים הללו כך שהם לא רק מקודדים מילה בודדת, אלא במקום זאת הם מכילים משמעות הרבה הרבה יותר עשירה.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 88.8,
  "end": 99.18
 },
 {
  "input": "I should say up front that a lot of people find the attention mechanism, this key piece in a transformer, very confusing, so don't worry if it takes some time for things to sink in.",
  "translatedText": "אני צריך לומר מראש שהרבה אנשים מוצאים את מנגנון המיקוד (attention) מאוד מבלבל, אז אל תדאגו אם לוקח קצת זמן עד שתעכלו אם הדברים.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 100.14,
  "end": 108.98
 },
 {
  "input": "I think that before we dive into the computational details and all the matrix multiplications, it's worth thinking about a couple examples for the kind of behavior that we want attention to enable.",
  "translatedText": "אני חושב שלפני שאנחנו צוללים לפרטים החישוביים ולכל מכפלות המטריצות, כדאי לחשוב על כמה דוגמאות לסוג ההתנהגות שאנחנו רוצים שמיקוד יאפשר.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 109.44,
  "end": 119.16
 },
 {
  "input": "Consider the phrases American true mole, one mole of carbon dioxide, and take a biopsy of the mole.",
  "translatedText": "חישבו על הביטויים מול (mole) אמריקאי (חדף בעברית), מול של פחמן דו חמצני, וביופסיה של שומה (מול באגלית).",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 120.14,
  "end": 126.22
 },
 {
  "input": "You and I know that the word mole has different meanings in each one of these, based on the context.",
  "translatedText": "אנחנו יודעים שלמילה mole יש משמעות שונה בכל אחד מהם, בהתבסס על ההקשר.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 126.7,
  "end": 130.9
 },
 {
  "input": "But after the first step of a transformer, the one that breaks up the text and associates each token with a vector, the vector that's associated with mole would be the same in all of these cases, because this initial token embedding is effectively a lookup table with no reference to the context.",
  "translatedText": "אבל לאחר השלב הראשון של טרמספורמר, זה שמפרק את הטקסט ומשייך כל טוקן לוקטור, הווקטור המשויך ל-mole יהיה זהה בכל המקרים האלה, מכיוון שהשיכון הראשוני של הטוקן הזה הוא למעשה טבלת חיפוש ללא התייחסות להקשר.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 131.36,
  "end": 146.22
 },
 {
  "input": "It's only in the next step of the transformer that the surrounding embeddings have the chance to pass information into this one.",
  "translatedText": "רק בשלב הבא של הטרמספורמר יש לשיכונים שמסביב הזדמנות להעביר מידע לתוכו.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 146.62,
  "end": 153.1
 },
 {
  "input": "The picture you might have in mind is that there are multiple distinct directions in this embedding space encoding the multiple distinct meanings of the word mole, and that a well-trained attention block calculates what you need to add to the generic embedding to move it to one of these specific directions, as a function of the context.",
  "translatedText": "התמונה שאולי תזכרו היא שיש מספר כיוונים ברורים במרחב השיכון הזה המקודדים את המשמעויות המובהקות של המילה mole, ושבלוק מיקוד (attention block) מיומן מחשב את מה שאתם צריכים להוסיף לשיכון הגנרי כדי להעביר אותו אל אחד מהכיוונים הספציפיים הללו, כפונקציה של ההקשר.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 153.82,
  "end": 171.8
 },
 {
  "input": "To take another example, consider the embedding of the word tower.",
  "translatedText": "כדוגמה נוספת, חישבו על שיכון המילה מגדל.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 173.3,
  "end": 176.18
 },
 {
  "input": "This is presumably some very generic, non-specific direction in the space, associated with lots of other large, tall nouns.",
  "translatedText": "זהו כנראה איזשהו כיוון מאוד כללי במרחב, הקשור להרבה שמות עצם גדולים וגבוהים אחרים.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 177.06,
  "end": 183.72
 },
 {
  "input": "If this word was immediately preceded by Eiffel, you could imagine wanting the mechanism to update this vector so that it points in a direction that more specifically encodes the Eiffel tower, maybe correlated with vectors associated with Paris and France and things made of steel.",
  "translatedText": "אם מיד אחרי המילה הזאת מופיע אייפל, הייתם רוצים שהמנגנון יעדכן את הווקטור הזה כך שיצביע על כיוון שמקודד באופן ספציפי יותר את מגדל אייפל, אולי בקורלציה עם וקטורים הקשורים לפריז וצרפת ולדברים העשויים מפלדה.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 184.02,
  "end": 199.06
 },
 {
  "input": "If it was also preceded by the word miniature, then the vector should be updated even further, so that it no longer correlates with large, tall things.",
  "translatedText": "אם הופיע לפניה המילה מיניאטורה, אז הווקטור צריך להתעדכן עוד יותר, כך שהוא כבר לא יהי מתואם עם דברים גדולים וגבוהים.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 199.92,
  "end": 207.5
 },
 {
  "input": "More generally than just refining the meaning of a word, the attention block allows the model to move information encoded in one embedding to that of another, potentially ones that are quite far away, and potentially with information that's much richer than just a single word.",
  "translatedText": "באופן כללי יותר מאשר רק חידוד המשמעות של מילה, בלוק המיקוד מאפשר למודל להעביר מידע המקודד בשיכון אחד לזה של אחר, אולי כאלו שנמצאים די רחוק, ואולי עם מידע הרבה יותר עשיר מסתם מילה בודדת.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 209.48,
  "end": 223.3
 },
 {
  "input": "What we saw in the last chapter was how after all of the vectors flow through the network, including many different attention blocks, the computation you perform to produce a prediction of the next token is entirely a function of the last vector in the sequence.",
  "translatedText": "מה שראינו בפרק האחרון היה איך אחרי שכל הוקטורים עוברים דרך הרשת, כולל בלוקי מיקוד רבים ושונים, החישוב שאתם מבצעים כדי לייצר חיזוי של הטוקן הבא הוא לחלוטין פונקציה של הווקטור האחרון ברצף.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 223.3,
  "end": 238.28
 },
 {
  "input": "Imagine, for example, that the text you input is most of an entire mystery novel, all the way up to a point near the end, which reads, therefore the murderer was.",
  "translatedText": "תארו לעצמכם, למשל, שהטקסט שאתם מזינים הוא רובו של של רומן מתח, עד לנקודה סמוך לסוף, שם נכתב \"לכן הרוצח היה\".",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 239.1,
  "end": 247.8
 },
 {
  "input": "If the model is going to accurately predict the next word, that final vector in the sequence, which began its life simply embedding the word was, will have to have been updated by all of the attention blocks to represent much, much more than any individual word, somehow encoding all of the information from the full context window that's relevant to predicting the next word.",
  "translatedText": "אם המודל ינבא במדויק את המילה הבאה, אותו וקטור אחרון ברצף, שהתחיל את חייו פשוט כשיכון שלהמילה \"היה\", יצטרך להיות מעודכן על ידי כל בלוקי המיקוד כדי לייצג הרבה הרבה יותר מכל מילה בודדת, ואיכשהו יקודד את כל המידע מחלון ההקשר המלא הרלוונטי לניבוי המילה הבאה.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 248.4,
  "end": 268.22
 },
 {
  "input": "To step through the computations, though, let's take a much simpler example.",
  "translatedText": "עם זאת, כדי לעבור דרך החישובים, בואו ניקח דוגמה הרבה יותר פשוטה.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 269.5,
  "end": 272.58
 },
 {
  "input": "Imagine that the input includes the phrase, a fluffy blue creature roamed the verdant forest.",
  "translatedText": "תארו לעצמכם שהקלט כולל את הביטוי \"יצור כחול פרוותי שוטט ביער המוריק\".",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 272.98,
  "end": 277.96
 },
 {
  "input": "And for the moment, suppose that the only type of update that we care about is having the adjectives adjust the meanings of their corresponding nouns.",
  "translatedText": "וכרגע נניח שסוג העדכון היחיד שמעניין אותנו הוא שינוי המשמעויות של שמות העצם על ידי שמות התואר התואמים להם.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 278.46,
  "end": 286.78
 },
 {
  "input": "What I'm about to describe is what we would call a single head of attention, and later we will see how the attention block consists of many different heads run in parallel.",
  "translatedText": "מה שאני עומד לתאר זה מה שאנחנו מכנים ראש מיקוד בודד, ובהמשך נראה כיצד בלוק המיקוד מורכב מהרבה ראשים שונים הפועלים במקביל.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 287,
  "end": 295.42
 },
 {
  "input": "Again, the initial embedding for each word is some high dimensional vector that only encodes the meaning of that particular word with no context.",
  "translatedText": "שוב, השיכון הראשוני של כל מילה הוא וקטור בעל מימד גבוה שמקודד רק את המשמעות של המילה המסוימת הזו ללא הקשר.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 296.14,
  "end": 303.38
 },
 {
  "input": "Actually, that's not quite true.",
  "translatedText": "למעשה, זה לא ממש נכון.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 304,
  "end": 305.22
 },
 {
  "input": "They also encode the position of the word.",
  "translatedText": "הם גם מקודדים את המיקום של המילה.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 305.38,
  "end": 307.64
 },
 {
  "input": "There's a lot more to say way that positions are encoded, but right now, all you need to know is that the entries of this vector are enough to tell you both what the word is and where it exists in the context.",
  "translatedText": "יש עוד הרבה מה לומר על קידוד מיקומים, אבל כרגע, כל מה שאתם צריכים לדעת הוא שהערכים של הווקטור הזה מספיקים כדי לספר לכם גם מהי המילה וגם היכן היא קיימת בהקשר.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 307.98,
  "end": 318.9
 },
 {
  "input": "Let's go ahead and denote these embeddings with the letter E.",
  "translatedText": "בואו נמשיך ונציין את השיכונים הללו באות E.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 319.5,
  "end": 321.66
 },
 {
  "input": "The goal is to have a series of computations produce a new refined set of embeddings where, for example, those corresponding to the nouns have ingested the meaning from their corresponding adjectives.",
  "translatedText": "המטרה היא שסדרה של חישובים תייצר קבוצה מעודנת חדשה של שיכונים שבהם, למשל, אלו התואמים לשמות העצם ספגו את המשמעות משמות התואר התואמים שלהם.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 322.42,
  "end": 333.42
 },
 {
  "input": "And playing the deep learning game, we want most of the computations involved to look like matrix-vector products, where the matrices are full of tunable weights, things that the model will learn based on data.",
  "translatedText": "ובלמידה העמוקה, אנחנו רוצים שרוב החישובים ייראו כמו מכפלת מטריצה-וקטור, שבהם המטריצות מלאות במשקלים הניתנים לשינוי, ושהמודל ילמד על סמך נתונים.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 333.9,
  "end": 343.98
 },
 {
  "input": "To be clear, I'm making up this example of adjectives updating nouns just to illustrate the type of behavior that you could imagine an attention head doing.",
  "translatedText": "כדי להיות ברור, אני ממציא את הדוגמה הזו של שמות תואר המעדכנים שמות עצם רק כדי להמחיש את סוג ההתנהגות שאתם יכולים לדמיין שראש מיקוד עושה.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 344.66,
  "end": 352.26
 },
 {
  "input": "As with so much deep learning, the true behavior is much harder to parse because it's based on tweaking and tuning a huge number of parameters to minimize some cost function.",
  "translatedText": "כמו בהרבה נושאים בלמידה עמוקה, ההתנהגות האמיתית הרבה יותר קשה לנתוח מכיוון שהיא מבוססת על כיוונון של מספר עצום של פרמטרים כדי למזער פונקציית עלות כלשהי.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 352.86,
  "end": 361.34
 },
 {
  "input": "It's just that as we step through all of different matrices filled with parameters that are involved in this process, I think it's really helpful to have an imagined example of something that it could be doing to help keep it all more concrete.",
  "translatedText": "כשאנחנו עוברים דרך כל המטריצות השונות המלאות בפרמטרים שמעורבים בתהליך הזה, אני חושב שממש מועיל לקבל דוגמה דמיונית למשהו שהוא יכול לעשות כדי לשמור על הכל יותר קונקרטי.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 361.68,
  "end": 373.22
 },
 {
  "input": "For the first step of this process, you might imagine each noun, like creature, asking the question: \"hey, are there any adjectives sitting in front of me\"?",
  "translatedText": "בשלב הראשון של התהליך, אתם עשויים לחשוב על כל שם עצם, כמו יצור, שואל את השאלה: \"היי, האם יש שמות תואר שיושבים מולי\"?",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 374.14,
  "end": 381.96
 },
 {
  "input": "And for the words fluffy and blue, to each be able to answer: \"yeah, I'm an adjective and I'm in that position\".",
  "translatedText": "ולגבי המילים פרוותי וכחול, שכל אחת תוכל לענות: \"כן, אני שם תואר ואני במיקום הזה\".",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 382.16,
  "end": 387.96
 },
 {
  "input": "That question is somehow encoded as yet another vector, another list of numbers, which we call the query for this word.",
  "translatedText": "השאלה הזו מקודדת איכשהו כעוד וקטור, עוד רשימה של מספרים, שאנו קוראים לה השאילתה של המילה הזו.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 388.96,
  "end": 396.1
 },
 {
  "input": "This query vector though has a much smaller dimension than the embedding vector, say 128.",
  "translatedText": "עם זאת, לוקטור השאילתה הזה יש ממד קטן בהרבה מהוקטור המשוכן, נניח 128.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 396.98,
  "end": 402.02
 },
 {
  "input": "Computing this query looks like taking a certain matrix, which I'll label Wq, and multiplying it by the embedding.",
  "translatedText": "חישוב השאילתה הזו נראה כמו לקיחת מטריצה מסוימת, שאתן לה שם Wq, ולהכפיל אותה בשיכון.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 402.94,
  "end": 409.78
 },
 {
  "input": "Compressing things a bit, let's write that query vector as Q, and then anytime you see me put a matrix next to an arrow like this one, it's meant to represent that multiplying this matrix by the vector at the arrow's start gives you the vector at the arrow's end.",
  "translatedText": "אם נדחס קצת את הדברים, נכתוב את וקטור השאילתה הזה בתור Q, ואז בכל פעם שאתם רואים אותי שם מטריצה ליד חץ כמו זה, הכוונה היא שכפל המטריצה הזו בווקטור בתחילת החץ נותן לכם את הווקטור בקצה החץ.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 410.96,
  "end": 424.8
 },
 {
  "input": "In this case, you multiply this matrix by all of the embeddings in the context, producing one query vector for each token.",
  "translatedText": "במקרה זה, אתם מכפילים את המטריצה הזו בכל השיכונים שבהקשר, ומייצרים וקטור שאילתה אחד עבור כל טוקן .",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 425.86,
  "end": 432.58
 },
 {
  "input": "The entries of this matrix are parameters of the model, which means the true behavior is learned from data, and in practice, what this matrix does in a particular attention head is challenging to parse.",
  "translatedText": "הערכים של המטריצה הזו הם פרמטרים של המודל, כלומר ההתנהגות האמיתית נלמדת מנתונים, ובפועל, מאתגר לנתח מה שמטריצה זו עושה בראש מיקוד מסוים.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 433.74,
  "end": 443.44
 },
 {
  "input": "But for our sake, imagining an example that we might hope that it would learn, we'll suppose that this query matrix maps the embeddings of nouns to certain directions in this smaller query space that somehow encodes the notion of looking for adjectives in preceding positions.",
  "translatedText": "אבל לצרכינו, נדמיין דוגמה שבה מטריצת השאילתה הזו ממפה את השיכונים של שמות עצם לכיוונים מסוימים במרחב השאילתה הקטן יותר הזה, שמקודד איכשהו את הרעיון של חיפוש שמות תואר במיקומים קודמים.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 443.9,
  "end": 458.04
 },
 {
  "input": "As to what it does to other embeddings, who knows?",
  "translatedText": "לגבי מה זה עושה לשיכונים אחרים, מי יודע?",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 458.78,
  "end": 461.44
 },
 {
  "input": "Maybe it simultaneously tries to accomplish some other goal with those.",
  "translatedText": "אולי הוא מנסה במקביל להשיג מטרה אחרת עם אלה.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 461.72,
  "end": 464.34
 },
 {
  "input": "Right now, we're laser focused on the nouns.",
  "translatedText": "כרגע, אנחנו מתמקדים רק בשמות העצם.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 464.54,
  "end": 467.16
 },
 {
  "input": "At the same time, associated with this is a second matrix called the key matrix, which you also multiply by every one of the embeddings.",
  "translatedText": "יחד עם זאת, קשורה לזה מטריצה שנייה שנקראת מטריצת המפתח, שגם אותה מכפילים בכל אחד מהשיכונים.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 467.28,
  "end": 474.62
 },
 {
  "input": "This produces a second sequence of vectors that we call the keys.",
  "translatedText": "זה מייצר רצף שני של וקטורים שאנחנו קוראים להם המפתחות.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 475.28,
  "end": 478.5
 },
 {
  "input": "Conceptually, you want to think of the keys as potentially answering the queries.",
  "translatedText": "קונספטואלית, אתם רוצים לחשוב על המפתחות כמענה פוטנציאלי לשאילתות.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 479.42,
  "end": 483.14
 },
 {
  "input": "This key matrix is also full of tunable parameters, and just like the query matrix, it maps the embedding vectors to that same smaller dimensional space.",
  "translatedText": "מטריצת מפתח זו מלאה גם בפרמטרים הניתנים לכוונון, ובדיוק כמו מטריצת השאילתה, היא ממפה את וקטורי השיכון לאותו מרחב ממימד קטן יותר.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 483.84,
  "end": 491.4
 },
 {
  "input": "You think of the keys as matching the queries whenever they closely align with each other.",
  "translatedText": "תחשבו על המפתחות כמתאימים לשאילתות בכל פעם שהם חופפים במידה רבה זה לזה.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 492.2,
  "end": 497.02
 },
 {
  "input": "In our example, you would imagine that the key matrix maps the adjectives like fluffy and blue to vectors that are closely aligned with the query produced by the word creature.",
  "translatedText": "בדוגמה שלנו, דמיינו שמטריצת המפתח ממפה את שמות התואר כמו פרוותי וכחול לוקטורים שחופפים במידה רבה לשאילתה שמפיקה המילה יצור.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 497.46,
  "end": 506.74
 },
 {
  "input": "To measure how well each key matches each query, you compute a dot product between each possible key-query pair.",
  "translatedText": "כדי למדוד עד כמה כל מפתח מתאים לכל שאילתה, אתם מחשבים את המכפלה הפנימית בין כל זוג מפתח-שאילתה אפשרי.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 507.2,
  "end": 514
 },
 {
  "input": "I like to visualize a grid full of a bunch of dots, where the bigger dots correspond to the larger dot products, the places where the keys and queries align.",
  "translatedText": "אני אוהב לדמיין רשת מלאה בנקודות, שבה הנקודות הגדולות יותר מתאימות למכפלות הפנימיות הגדולות יותר, המקומות שבהם המפתחות והשאילתות מתאימים.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 514.48,
  "end": 522.56
 },
 {
  "input": "For our adjective noun example, that would look a little more like this, where if the keys produced by fluffy and blue really do align closely with the query produced by creature, then the dot products in these two spots would be some large positive numbers.",
  "translatedText": "לדוגמא של שם התואר שלנו, זה ייראה קצת יותר כך, כאשר אם המפתחות המופקים על ידי פרוותי וכחול באמת מתאימים לשאילתה המיוצרת על ידי יצור, אז המכפלות הפנימיות בשתי הנקודות הללו יהיו מספרים חיוביים גדולים.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 523.28,
  "end": 538.32
 },
 {
  "input": "In the lingo, machine learning people would say that this means the embeddings of fluffy and blue attend to the embedding of creature.",
  "translatedText": " אנשי למידת מכונה היו אומרים שהשיכונים של פרוותי וכחול \"...Attend to\" (ממקדים ל...) שיכון של יצור.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 539.1,
  "end": 545.42
 },
 {
  "input": "By contrast to the dot product between the key for some other word like the and the query for creature would be some small or negative value that reflects that are unrelated to each other.",
  "translatedText": "בניגוד למכפלה פנימית בין המפתח למילה אחרת, כמו the, לשאילתה עבור יצור יהיה איזשהו ערך קטן או שלילי שמשקף שאינם קשורים זה לזה.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 546.04,
  "end": 556.6
 },
 {
  "input": "So we have this grid of values that can be any real number from negative infinity to infinity, giving us a score for how relevant each word is to updating the meaning of every other word.",
  "translatedText": "אז יש לנו את הרשת הזו של ערכים שיכולים להיות כל מספר ממשי ממינוס אינסוף עד אינסוף, שנותנת לנו ציון עד כמה כל מילה רלוונטית לעדכון המשמעות של כל מילה אחרת.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 557.7,
  "end": 568.48
 },
 {
  "input": "The way we're about to use these scores is to take a certain weighted sum along each column, weighted by the relevance.",
  "translatedText": "הדרך שבה אנחנו עומדים להשתמש בציונים האלה היא לקחת סכום משוקלל לפי הרלוונטיות לאורך כל עמודה.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 569.2,
  "end": 575.78
 },
 {
  "input": "So instead of having values range from negative infinity to infinity, what we want is for the numbers in these columns to be between 0 and 1, and for each column to add up to 1, as if they were a probability distribution.",
  "translatedText": "אז במקום שיהיו לנו ערכים בין מינוס אינסוף לאינסוף, מה שאנחנו רוצים זה שהמספרים בעמודות האלה יהיו בין 0 ל-1, וכל עמודה תסתכם ל-1, כאילו היו התפלגות הסתברותית.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 576.52,
  "end": 588.18
 },
 {
  "input": "If you're coming in from the last chapter, you know what we need to do then.",
  "translatedText": "אם אתם מגיעים מהפרק האחרון, אתם יודעים מה אנחנו צריכים לעשות.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 589.28,
  "end": 592.22
 },
 {
  "input": "We compute a softmax along each one of these columns to normalize the values.",
  "translatedText": "אנחנו מחשבים softmax לאורך כל אחת מהעמודות הללו כדי לנרמל את הערכים.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 592.62,
  "end": 597.3
 },
 {
  "input": "In our picture, after you apply softmax to all of the columns, we'll fill in the grid with these normalized values.",
  "translatedText": "בתמונה שלנו, לאחר שתחילו את softmax על כל העמודות, נמלא את הרשת בערכים המנורמלים הללו.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 600.06,
  "end": 605.86
 },
 {
  "input": "At this point you're safe to think about each column as giving weights according to how relevant the word on the left is to the corresponding value at the top.",
  "translatedText": "בשלב זה אתם יכולים לחשוב על כל עמודה כעל מתן משקלים לפי מידת הרלוונטיות של המילה משמאל לערך המתאים בחלק העליון.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 606.78,
  "end": 614.58
 },
 {
  "input": "We call this grid an attention pattern.",
  "translatedText": "אנו קוראים לרשת הזו דפוס מיקוד (attention pattern).",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 615.08,
  "end": 616.84
 },
 {
  "input": "Now if you look at the original transformer paper, there's a really compact way that they write this all down.",
  "translatedText": "עכשיו אם אתם מסתכלים על מאמר הטרמספורמר המקורי, יש דרך ממש קומפקטית שבה הם כותבים את כל זה.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 618.08,
  "end": 622.82
 },
 {
  "input": "Here the variables Q and K represent the full arrays of query and key vectors respectively, those little vectors you get by multiplying the embeddings by the query and the key matrices.",
  "translatedText": "כאן המשתנים Q ו-K מייצגים את המערכים המלאים של וקטורי שאילתה ומפתח בהתאמה, אותם וקטורים קטנים שמקבלים על ידי הכפלת השיכונים במטריצות השאילתה והמפתח.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 623.88,
  "end": 634.64
 },
 {
  "input": "This expression up in the numerator is a really compact way to represent the grid of all possible dot products between pairs of keys and queries.",
  "translatedText": "הביטוי הזה למעלה במונה הוא דרך ממש קומפקטית לייצג את הרשת של כל המכפלות הפנימיות האפשריות בין זוגות של מפתחות ושאילתות.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 635.16,
  "end": 643.02
 },
 {
  "input": "A small technical detail that I didn't mention is that for numerical stability, it happens to be helpful to divide all of these values by the square root of the dimension in that key query space.",
  "translatedText": "פרט טכני קטן שלא הזכרתי הוא שלצורך יציבות מספרית, במקרה מועיל לחלק את כל הערכים הללו בשורש הריבועי של הממד במרחב שאילתת מפתח זה.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 644,
  "end": 653.96
 },
 {
  "input": "Then this softmax that's wrapped around the full expression is meant to be understood to apply column by column.",
  "translatedText": "אז ה-softmax הזה שעוטף את הביטוי המלא אמור להיות מובן כמיושם טור אחרי טור.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 654.48,
  "end": 660.8
 },
 {
  "input": "As to that V term, we'll talk about it in just a second.",
  "translatedText": "לגבי המונח V הזה, נדבר עליו בעוד שנייה.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 661.64,
  "end": 664.7
 },
 {
  "input": "Before that, there's one other technical detail that so far I've skipped.",
  "translatedText": "לפני כן, יש עוד פרט טכני אחד שעד כה דילגתי עליו.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 665.02,
  "end": 668.46
 },
 {
  "input": "During the training process, when you run this model on a given text example, and all of the weights are slightly adjusted and tuned to either reward or punish it based on how high a probability it assigns to the true next word in the passage, it turns out to make the whole training process a lot more efficient if you simultaneously have it predict every possible next token following each initial subsequence of tokens in this passage.",
  "translatedText": "במהלך תהליך האימון, כאשר אתם מפעילים את המודל הזה על דוגמה של טקסט נתון, וכל המשקולות מותאמות מעט ומכווננות כדי לתגמל או להעניש אותו על סמך ההסתברות הגבוהה שהוא מקצה למילה הבאה האמיתית בקטע, מסתבר שכל תהליך האימון הופך להרבה יותר יעיל אם אתם גורמים לו לנבא בו זמנית כל טוקן הבא האפשרי בעקבות כל רצף התחלתי של טוקנים.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 669.04,
  "end": 691.56
 },
 {
  "input": "For example, with the phrase that we've been focusing on, it might also be predicting what words follow creature and what words follow the.",
  "translatedText": "לדוגמה, עם הביטוי שבו התמקדנו, המודל עשוי להיות גם של אילו מילים עוקבות אחרי יצור ואילו מילים עוקבות אחרי the.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 691.94,
  "end": 699.1
 },
 {
  "input": "This is really nice, because it means what would otherwise be a single training example effectively acts as many.",
  "translatedText": "זה ממש נחמד, כי זה אומר שמה שאחרת היה דוגמה אחת לאימון פועל ביעילות כמו הרבה מהן.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 699.94,
  "end": 705.56
 },
 {
  "input": "For the purposes of our attention pattern, it means that you never want to allow later words to influence earlier words, since otherwise they could kind of give away the answer for what comes next.",
  "translatedText": "למטרות דפוס המיקוד שלנו, זה אומר שאתם אף פעם לא רוצים לאפשר למילים מאוחרות יותר להשפיע על מילים קודמות, כי אחרת הן יכולות להשפיע למה שיבוא אחר כך.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 706.1,
  "end": 716.04
 },
 {
  "input": "What this means is that we want all of these spots here, the ones representing later tokens influencing earlier ones, to somehow be forced to be zero.",
  "translatedText": "המשמעות היא שאנחנו רוצים שכל הנקודות האלה כאן שמייצגות טוקנים מאוחרים יותר המשפיעים על הקודמים, ייאולצו איכשהו להתאפס.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 716.56,
  "end": 724.6
 },
 {
  "input": "The simplest thing you might think to do is to set them equal to zero, but if you did that the columns wouldn't add up to one anymore, they wouldn't be normalized.",
  "translatedText": "הדבר הפשוט ביותר שאתם עשויים לחשוב עליו הוא להגדיר אותם כאפס, אבל אם אתם עושים את זה סכום העמודות לא יסתכמו ל-1.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 725.92,
  "end": 732.42
 },
 {
  "input": "So instead, a common way to do this is that before applying softmax, you set all of those entries to be negative infinity.",
  "translatedText": "אז במקום זאת, דרך נפוצה היא שלפני הפעלת softmax, אתם מגדירים את כל הערכים האלה כמינוס אינסוף.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 733.12,
  "end": 739.02
 },
 {
  "input": "If you do that, then after applying softmax, all of those get turned into zero, but the columns stay normalized.",
  "translatedText": "אם אתם עושים את זה, אז לאחר הפעלת softmax הם הופכים לאפס, אבל העמודות נשארות מנורמלות.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 739.68,
  "end": 745.18
 },
 {
  "input": "This process is called masking.",
  "translatedText": "תהליך זה נקרא מיסוך.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 746,
  "end": 747.54
 },
 {
  "input": "There are versions of attention where you don't apply it, but in our GPT example, even though this is more relevant during the training phase than it would be, say, running it as a chatbot or something like that, you do always apply this masking to prevent later tokens from influencing earlier ones.",
  "translatedText": "ישנן גרסאות של מיקוד שבהן לא מיישמים את הזה, אבל בדוגמת GPT שלנו, למרות שזה רלוונטי יותר בשלב הלימוד מהפעלתו למשל כצ'אט בוט, אתם תמיד מיישמים מיסוך כדי למנוע מטוקנים מאוחרים יותר להשפיע על קודמים.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 747.54,
  "end": 761.46
 },
 {
  "input": "Another fact that's worth reflecting on about this attention pattern is how its size is equal to the square of the context size.",
  "translatedText": "עובדה נוספת שכדאי לחשוב עליה לגבי דפוס המיקוד הזה היא כיצד גודלו שווה לריבוע של גודל הקונטקסט.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 762.48,
  "end": 769.5
 },
 {
  "input": "So this is why context size can be a really huge bottleneck for large language models, and scaling it up is non-trivial.",
  "translatedText": "זו הסיבה שגודל הקונטקסט יכול להוות צוואר בקבוק עצום עבור מודלים של שפות גדולות, והגדלה שלו אינה טריוויאלית.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 769.9,
  "end": 775.62
 },
 {
  "input": "As you imagine, motivated by a desire for bigger and bigger context windows, recent years have seen some variations to the attention mechanism aimed at making context more scalable, but right here, you and I are staying focused on the basics.",
  "translatedText": "כפי שאתם מתארים לעצמכם, בשנים האחרונות פותחו כמה וריאציות למנגנון המיקוד שמטרתן להפוך את הקונטקסט לניתן יותר להרחבה, אבל אנחנו נשאר ממוקדים ביסודות.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 776.3,
  "end": 788.32
 },
 {
  "input": "Okay, great, computing this pattern lets the model deduce which words are relevant to which other words.",
  "translatedText": "אוקיי, נהדר, חישוב הדפוס הזה מאפשר למודל להסיק אילו מילים רלוונטיות לאילו מילים אחרות.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 790.56,
  "end": 795.48
 },
 {
  "input": "Now you need to actually update the embeddings, allowing words to pass information to whichever other words they're relevant to.",
  "translatedText": "כעת עליכם לעדכן בפועל את השיכונים, ולאפשר למילים להעביר מידע למילים אחרות שהן רלוונטיות להן.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 796.02,
  "end": 802.8
 },
 {
  "input": "For example, you want the embedding of Fluffy to somehow cause a change to Creature that moves it to a different part of this 12,000-dimensional embedding space that more specifically encodes a Fluffy creature.",
  "translatedText": "לדוגמה, אתם רוצים שהשיכון של פרוותי יגרום איכשהו לשינוי ביצור שיעביר אותו לחלק אחר של מרחב השיכון הזה ב-12,000 מימדים שמקודד באופן ספציפי יותר יצור פרוותי.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 802.8,
  "end": 814.52
 },
 {
  "input": "What I'm going to do here is first show you the most straightforward way that you could do this, though there's a slight way that this gets modified in the context of multi-headed attention.",
  "translatedText": "מה שאני הולך לעשות כאן הוא קודם כל להראות לכם את הדרך הכי פשוטה שאתם יכולים לעשות את זה, אם כי יש דרך קצת שונה בהקשר של מיקוד רב-ראשים.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 815.46,
  "end": 823.46
 },
 {
  "input": "This most straightforward way would be to use a third matrix, what we call the value matrix, which you multiply by the embedding of that first word, for example Fluffy.",
  "translatedText": "הדרך הפשוטה ביותר הזו תהיה להשתמש במטריצה שלישית, שאנחנו מכנים מטריצת הערך, אותה אתם מכפילים בשיכון של המילה הראשונה, למשל פרוותי.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 824.08,
  "end": 832.44
 },
 {
  "input": "The result of this is what you would call a value vector, and this is something that you add to the embedding of the second word, in this case something you add to the embedding of Creature.",
  "translatedText": "התוצאה היא מה שמכנים וקטור ערך, וזה משהו שאתם מוסיפים לשיכון  של המילה השנייה, במקרה הזה לשיכון  של יצור.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 833.3,
  "end": 841.92
 },
 {
  "input": "So this value vector lives in the same very high-dimensional space as the embeddings.",
  "translatedText": "וקטור הערך הזה נמצא באותו מרחב מאוד גבוה כמו השיכונים.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 842.6,
  "end": 847
 },
 {
  "input": "When you multiply this value matrix by the embedding of a word, you might think of it as saying, if this word is relevant to adjusting the meaning of something else, what exactly should be added to the embedding of that something else in order to reflect this?",
  "translatedText": "כשאתם מכפילים את מטריצת הערכים הזו בשיכון של מילה, אתם עשויים לחשוב על זה כאילו אתם אומרים, אם המילה הזו רלוונטית להתאמת המשמעות של משהו אחר, מה בדיוק צריך להוסיף לשיכון של אותו משהו אחר כדי לשקף זֶאת?",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 847.46,
  "end": 861.16
 },
 {
  "input": "Looking back in our diagram, let's set aside all of the keys and the queries, since after you compute the attention pattern you're done with those, then you're going to take this value matrix and multiply it by every one of those embeddings to produce a sequence of value vectors.",
  "translatedText": "במבט לאחור בתרשים שלנו, נניח בצד את כל המפתחות והשאילתות, שכן לאחר שתחשבו את דפוס המיקוד סיימתם איתם, אז אתם לוקחים את מטריצת הערכים הזו ומכפילים אותה בכל אחד מהשיכונים האלו כדי לייצר רצף של וקטורי ערך.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 862.14,
  "end": 876.06
 },
 {
  "input": "You might think of these value vectors as being kind of associated with the corresponding keys.",
  "translatedText": "אתם עשויים לחשוב על וקטורי הערך אלה כמקושרים למפתחות המתאימים.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 877.12,
  "end": 881.12
 },
 {
  "input": "For each column in this diagram, you multiply each of the value vectors by the corresponding weight in that column.",
  "translatedText": "עבור כל עמודה בתרשים הזה, אתם מכפילים כל אחד מוקטורי הערך במשקל המתאים באותה עמודה.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 882.32,
  "end": 889.24
 },
 {
  "input": "For example here, under the embedding of Creature, you would be adding large proportions of the value vectors for Fluffy and Blue, while all of the other value vectors get zeroed out, or at least nearly zeroed out.",
  "translatedText": "לדוגמה כאן, תחת השיכון של יצור, תוסיפו חלק משמעותי מוקטורי הערך עבור פרוותי וכחול, בעוד שכל וקטורי הערך האחרים מתאפסים, או לפחות כמעט מתאפסים.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 890.08,
  "end": 901.56
 },
 {
  "input": "And then finally, the way to actually update the embedding associated with this column, previously encoding some context-free meaning of Creature, you add together all of these rescaled values in the column, producing a change that you want to add, that I'll label delta-E, and then you add that to the original embedding.",
  "translatedText": "ולבסוף, הדרך לעדכן את השיכון הקשור לעמודה הזו, שקודדה בעבר איזו משמעות נטולת הקשר של יצור, היא שאתם מוסיפים יחד את כל הערכים המותאמים מחדש בעמודה, ומייצרים שינוי שאתם רוצים להוסיף, שאני אתייג כדלתא-E, ואז תוסיפו אותו לשיכון המקורי.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 902.12,
  "end": 919.26
 },
 {
  "input": "Hopefully what results is a more refined vector encoding the more contextually rich meaning, like that of a fluffy blue creature.",
  "translatedText": "אני מקווה שהתוצאה היא וקטור המקודד טוב יותר את המשמעות העשירה יותר מבחינה הקשרית, כמו זו של יצור כחול פרוותי.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 919.68,
  "end": 926.5
 },
 {
  "input": "And of course you don't just do this to one embedding, you apply the same weighted sum across all of the columns in this picture, producing a sequence of changes, adding all of those changes to the corresponding embeddings, produces a full sequence of more refined embeddings popping out of the attention block.",
  "translatedText": "וכמובן שאתם לא עושים את זה רק לשיכון אחד, אתם מחילים את אותו סכום משוקלל על פני כל העמודות בתמונה הזו, מייצרים רצף של שינויים, מוסיפים את כל השינויים האלה לשיכונים המתאימים, מייצרים רצף מלא של שיכונים מותאמים יותר שיוצאים מבלוק המיקוד.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 927.38,
  "end": 943.46
 },
 {
  "input": "Zooming out, this whole process is what you would describe as a single head of attention.",
  "translatedText": "אם תסתכלו על התמונה הרחבה, כל התהליך הזה הוא מה שתגדירו כראש מיקוד יחיד.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 944.86,
  "end": 949.1
 },
 {
  "input": "As I've described things so far, this process is parameterized by three distinct matrices, all filled with tunable parameters, the key, the query, and the value.",
  "translatedText": "כפי שתיארתי דברים עד כה, תהליך זה מותאם לפרמטרים על ידי שלוש מטריצות נפרדות, כולן מלאות בפרמטרים הניתנים לשינוי: המפתח, השאילתה והערך.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 949.6,
  "end": 958.94
 },
 {
  "input": "I want to take a moment to continue what we started in the last chapter, with the scorekeeping where we count up the total number of model parameters using the numbers from GPT-3.",
  "translatedText": "אני רוצה לקחת רגע כדי להמשיך את מה שהתחלנו בפרק האחרון, עם שמירת הניקוד שבה אנחנו סופרים את המספר הכולל של פרמטרים של הדגם באמצעות המספרים מ-GPT-3.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 959.5,
  "end": 968.04
 },
 {
  "input": "These key and query matrices each have 12,288 columns, matching the embedding dimension, and 128 rows, matching the dimension of that smaller key query space.",
  "translatedText": "למטריצות המפתח והשאילתה האלו יש 12,288 עמודות, התואמות לממד השיכון  ו-128 שורות, התואמות לממד של מרחב שאילתת מפתח קטן יותר.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 969.3,
  "end": 979.6
 },
 {
  "input": "This gives us an additional 1.5 million or so parameters for each one.",
  "translatedText": "זה נותן לנו 1.5 מיליון פרמטרים נוספים לערך עבור כל אחד מהם.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 980.26,
  "end": 984.22
 },
 {
  "input": "If you look at that value matrix by contrast, the way I've described things so far would suggest that it's a square matrix that has 12,288 columns and 12,288 rows, since both its inputs and outputs live in this very large embedding space.",
  "translatedText": "אם אתם מסתכלים על מטריצת הערכים הזו לעומת זאת, הדרך שתיארתי את הדברים עד כה תצביע על כך שזו מטריצה מרובעת שיש לה 12,288 עמודות ו-12,288 שורות, מכיוון שגם הקלטים וגם הפלטים שלה נמצאים במרחב השיכון הגדול הזה.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 984.86,
  "end": 1000.92
 },
 {
  "input": "If true, that would mean about 150 million added parameters.",
  "translatedText": "אם זה נכון, המשמעות היא כ-150 מיליון פרמטרים נוספים.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 1001.5,
  "end": 1005.14
 },
 {
  "input": "And to be clear, you could do that.",
  "translatedText": "וכדי להיות ברור, אתם יכולים לעשות את זה.",
  "model": "google_nmt",
  "n_reviews": 2,
  "start": 1005.66,
  "end": 1007.3
 },
 {
  "input": "You could devote orders of magnitude more parameters to the value map than to the key and query.",
  "translatedText": "אתם יכולים להקדיש למפוי הערכים יותר פרמטרים בסדרי גודל מאשר למפתח ולשאילתה.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 1007.42,
  "end": 1011.74
 },
 {
  "input": "But in practice, it is much more efficient if instead you make it so that the number of parameters devoted to this value map is the same as the number devoted to the key and the query.",
  "translatedText": "אבל בפועל, הרבה יותר יעיל אם במקום זאת תגרמו לכך שמספר הפרמטרים המוקדשים למפוי הערכים הזה יהיה זהה למספר המוקדש למפתח ולשאילתה.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 1012.06,
  "end": 1020.76
 },
 {
  "input": "This is especially relevant in the setting of running multiple attention heads in parallel.",
  "translatedText": "זה רלוונטי במיוחד בהגדרה של הפעלת מספר ראשי מיקוד במקביל.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 1021.46,
  "end": 1025.16
 },
 {
  "input": "The way this looks is that the value map is factored as a product of two smaller matrices.",
  "translatedText": "האופן שבו זה נראה הוא שמפוי הערכים מפורק למכפלה של שתי מטריצות קטנות יותר.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 1026.24,
  "end": 1030.1
 },
 {
  "input": "Conceptually, I would still encourage you to think about the overall linear map, one with inputs and outputs, both in this larger embedding space, for example taking the embedding of blue to this blueness direction that you would add to nouns.",
  "translatedText": "מבחינה קונספטואלית, אני עדיין ממליץ לכם לחשוב על המיפוי הליניארי הכולל, כזו עם קלטים ופלטים שגם הם במרחב השיכון הגדול יותר, למשל לקחת את השיכון כחול לכיוון הכחול הזה שתוסיפו לשמות עצם.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 1031.18,
  "end": 1043.8
 },
 {
  "input": "It's just that it's a smaller number of rows, typically the same size as the key query space.",
  "translatedText": "רק שזהו מספר קטן יותר של שורות, בדרך כלל כמו במרחב שאילתת המפתח.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 1047.04,
  "end": 1052.76
 },
 {
  "input": "What this means is you can think of it as mapping the large embedding vectors down to a much smaller space.",
  "translatedText": "המשמעות היא שאתם יכולים לחשוב על זה כעל מיפוי וקטורי השיכון הגדולים למרחב קטן בהרבה.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 1053.1,
  "end": 1058.44
 },
 {
  "input": "This is not the conventional naming, but I'm going to call this the value down matrix.",
  "translatedText": "זה לא השם המקובל, אבל אני אקרא לה מטריצת הערך למטה.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 1059.04,
  "end": 1062.7
 },
 {
  "input": "The second matrix maps from this smaller space back up to the embedding space, producing the vectors that you use to make the actual updates.",
  "translatedText": "המטריצה השנייה ממפה מהמרחב הקטן יותר הזה בחזרה למרחב השיכון, מייצרת את הוקטורים שבהם אתם משתמשים כדי לבצע את העדכונים בפועל.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 1063.4,
  "end": 1070.58
 },
 {
  "input": "I'm going to call this one the value up matrix, which again is not conventional.",
  "translatedText": "אקרא לה מטריצת הערך למעלה, ושוב זה לא שם קונבנציונלי.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 1071,
  "end": 1074.74
 },
 {
  "input": "The way that you would see this written in most papers looks a little different.",
  "translatedText": "הדרך שבה תראו את זה כתוב ברוב המאמרים נראית קצת אחרת.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 1075.16,
  "end": 1078.08
 },
 {
  "input": "I'll talk about it in a minute.",
  "translatedText": "אני אדבר על כך בעוד דקה.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 1078.38,
  "end": 1079.52
 },
 {
  "input": "In my opinion, it tends to make things a little more conceptually confusing.",
  "translatedText": "לדעתי, זה נוטה להפוך את הדברים לקצת יותר מבלבלים מבחינה רעיונית.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 1079.7,
  "end": 1082.54
 },
 {
  "input": "To throw in linear algebra jargon here, what we're basically doing is constraining the overall value map to be a Low Rank Transformation.",
  "translatedText": "אם להזכיר מונח מאלגברה ליניארית, מה שאנחנו בעצם עושים זה להגביל את מיפוי הערכים הכולל להיות Low Rank Transformation.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 1083.26,
  "end": 1090.34
 },
 {
  "input": "Turning back to the parameter count, all four of these matrices have the same size, and adding them all up we get about 6.3 million parameters for one attention head.",
  "translatedText": "אם נחזור לספירת הפרמטרים, לכל ארבעת המטריצות הללו יש אותו גודל, ובחיבור של כולן נקבל כ-6.3 מיליון פרמטרים עבור ראש מיקוד אחד.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 1091.42,
  "end": 1100.78
 },
 {
  "input": "As a quick side note, to be a little more accurate, everything described so far is what people would call a self-attention head, to distinguish it from a variation that comes up in other models that's called cross-attention.",
  "translatedText": "כהערת צד, אם לדייק קצת יותר, מה שתואר עד כה הוא מה שאנשים היו מכנים ראש מיקוד עצמי, כדי להבחין בינו לבין וריאציה שעולה במודלים אחרים שנקראת מיקוד צולב.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 1102.04,
  "end": 1111.5
 },
 {
  "input": "This isn't relevant to our GPT example, but if you're curious, cross-attention involves models that process two distinct types of data, like text in one language and text in another language that's part of an ongoing generation of a translation, or maybe audio input of speech and an ongoing transcription.",
  "translatedText": "זה לא רלוונטי לדוגמה שלנו ב-GPT, אבל אם אתם סקרנים, מיקוד צולב כולל מודלים המעבדים שני סוגים שונים של נתונים, כמו טקסט בשפה אחת וטקסט בשפה אחרת שהוא חלק מיצירת תרגום מתמשך, או אולי קלט אודיו של דיבור ותמלול מתמשך.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 1112.3,
  "end": 1129.24
 },
 {
  "input": "A cross-attention head looks almost identical.",
  "translatedText": "ראש עם מיקוד צולב נראה כמעט זהה.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 1130.4,
  "end": 1132.7
 },
 {
  "input": "The only difference is that the key and query maps act on different data sets.",
  "translatedText": "ההבדל היחיד הוא שמיפויי השאילתה והמפתח פועלים על נתונים שונים.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 1132.98,
  "end": 1137.4
 },
 {
  "input": "In a model doing translation, for example, the keys might come from one language, while the queries come from another, and the attention pattern could describe which words from one language correspond to which words in another.",
  "translatedText": "במודל שמתרגם, למשל, המפתחות עשויים להגיע משפה אחת, בעוד שהשאילתות מגיעות משפה אחרת, ודפוס המיקוד יכול לתאר אילו מילים משפה אחת מתאימות לאילו מילים בשפה אחרת.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 1137.84,
  "end": 1149.66
 },
 {
  "input": "And in this setting there would typically be no masking, since there's not really any notion of later tokens affecting earlier ones.",
  "translatedText": "ובמסגרת הזו בדרך כלל לא יהיה מיסוך, מכיוון שאין ממש מושג של טוקנים מאוחרים יותר המשפיעים על קודמים.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 1150.34,
  "end": 1156.34
 },
 {
  "input": "Staying focused on self-attention though, if you understood everything so far, and if you were to stop here, you would come away with the essence of what attention really is.",
  "translatedText": "נישאר מרוכזים במיקוד עצמי, אם אתם מבינים הכל עד כה, ואם הייתם עוצרים כאן, הייתם יוצאים עם המהות של מהו מיקוד באמת.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 1157.18,
  "end": 1165.18
 },
 {
  "input": "All that's really left to us is to lay out the sense in which you do this many many different times.",
  "translatedText": "כל מה שבאמת נשאר לנו הוא לפרט את הדרך שבה אתם עושים זאת פעמים רבות ושונות.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 1165.76,
  "end": 1171.44
 },
 {
  "input": "In our central example we focused on adjectives updating nouns, but of course there are lots of different ways that context can influence the meaning of a word.",
  "translatedText": "בדוגמה המרכזית שלנו התמקדנו בשמות תואר המעדכנים שמות עצם, אבל כמובן שיש הרבה דרכים שונות שבהן ההקשר יכול להשפיע על המשמעות של מילה.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 1172.1,
  "end": 1179.8
 },
 {
  "input": "If the words they crashed the preceded the word car, it has implications for the shape and structure of that car.",
  "translatedText": "אם המילים \"הם ריסקו\" באות לפני המילה \"מכונית\", יש לכך השלכות על הצורה והמבנה של אותה מכונית.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 1180.36,
  "end": 1186.52
 },
 {
  "input": "And a lot of associations might be less grammatical.",
  "translatedText": "והרבה אסוציאציות עשויות להיות פחות דקדוקיות.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 1187.2,
  "end": 1189.28
 },
 {
  "input": "If the word wizard is anywhere in the same passage as Harry, it suggests that this might be referring to Harry Potter, whereas if instead the words Queen, Sussex, and William were in that passage, then perhaps the embedding of Harry should instead be updated to refer to the prince.",
  "translatedText": "אם המילה מכשף נמצאת במקום כלשהו באותו קטע כמו הארי, זה מצביע על כך שאולי היא מתייחסת להארי פוטר, בעוד שאם במקום זאת המילים מלכה, סאסקס וויליאם היו בקטע הזה, אז אולי יש לעדכן את השיכון של הארי להתייחסות לנסיך.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 1189.76,
  "end": 1204.44
 },
 {
  "input": "For every different type of contextual updating that you might imagine, the parameters of these key and query matrices would be different to capture the different attention patterns, and the parameters of our value map would be different based on what should be added to the embeddings.",
  "translatedText": "עבור כל סוג שונה של עדכון הקשר שאתם יכולים לחשוב עליו, הפרמטרים של מטריצות מפתח ושאילתה יהיו שונים כדי ללכוד את דפוסי המיקוד השונים, והפרמטרים של מיפוי הערכים שלנו יהיו שונים בהתבסס על מה שצריך להוסיף לשיכונים.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 1205.04,
  "end": 1219.14
 },
 {
  "input": "And again, in practice the true behavior of these maps is much more difficult to interpret, where the weights are set to do whatever the model needs them to do to best accomplish its goal of predicting the next token.",
  "translatedText": "ושוב, בפועל קשה הרבה יותר לפרש את ההתנהגות האמיתית של המיפויים האלו, כאשר המשקולות מוגדרות כך שיעשו כל מה שהמודל צריך לעשות כדי להגשים בצורה הטובה ביותר את מטרתו לחזות את הטוקן הבא.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 1219.98,
  "end": 1230.14
 },
 {
  "input": "As I said before, everything we described is a single head of attention, and a full attention block inside a transformer consists of what's called multi-headed attention, where you run a lot of these operations in parallel, each with its own distinct key query and value maps.",
  "translatedText": "כפי שאמרתי קודם, כל מה שתיארנו הוא ראש מיקוד יחיד, ובלוק מיקוד מלא בתוך טרמספורמר מורכב ממה שנקרא מיקוד רב-ראשים, שבו אתם מפעילים הרבה מהפעולות האלו במקביל, כל אחת עם שאילתת מפתח נפרדת ומפוי ערכים משלה.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 1231.4,
  "end": 1245.92
 },
 {
  "input": "GPT-3 for example uses 96 attention heads inside each block.",
  "translatedText": "GPT-3 למשל משתמשת ב-96 ראשי מיקוד בתוך כל בלוק.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 1247.42,
  "end": 1251.7
 },
 {
  "input": "Considering that each one is already a bit confusing, it's certainly a lot to hold in your head.",
  "translatedText": "בהתחשב בכך שכל אחד מהם כבר קצת מבלבל, אין ספק שזה הרבה מה להחזיק בראש שלכם.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 1252.02,
  "end": 1256.46
 },
 {
  "input": "Just to spell it all out very explicitly, this means you have 96 distinct key and query matrices producing 96 distinct attention patterns.",
  "translatedText": "רק כדי לאיית את הכל בצורה מאוד מפורשת, זה אומר שיש לכם 96 מטריצות מפתח ושאילתות נפרדות המייצרות 96 דפוסי מיקוד ברורים.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 1256.76,
  "end": 1265
 },
 {
  "input": "Then each head has its own distinct value matrices used to produce 96 sequences of value vectors.",
  "translatedText": "אז לכל ראש יש מטריצות ערך נפרדות משלו המשמשות לייצור 96 רצפים של וקטורי ערך.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 1265.44,
  "end": 1272.18
 },
 {
  "input": "These are all added together using the corresponding attention patterns as weights.",
  "translatedText": "כל אלה מתווספים יחד באמצעות דפוסי המיקוד המתאימים כמשקולות.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 1272.46,
  "end": 1276.68
 },
 {
  "input": "What this means is that for each position in the context, each token, every one of these heads produces a proposed change to be added to the embedding in that position.",
  "translatedText": "המשמעות היא שלכל מיקום בהקשר, כל טוקן, כל אחד מהראשים הללו מייצר שינוי מוצע שיתווסף לשיכון במיקום זה.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 1277.48,
  "end": 1287.02
 },
 {
  "input": "So what you do is you sum together all of those proposed changes, one for each head, and you add the result to the original embedding of that position.",
  "translatedText": "אז מה שאתם עושים זה לסכם את כל השינויים המוצעים האלה, אחד לכל ראש, ואז מוסיפים את התוצאה לשיכון המקורי של המיקום הזה.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 1287.66,
  "end": 1295.48
 },
 {
  "input": "This entire sum here would be one slice of what's outputted from this multi-headed attention block, a single one of those refined embeddings that pops out the other end of it.",
  "translatedText": "כל הסכום הזה כאן יהיה חלק אחד ממה שמופק מבלוק המיקוד הרב-ראשים הזה, אחד מהשיכונים המעודנים האלה שיוצאים מהקצה השני שלו.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 1296.66,
  "end": 1307.46
 },
 {
  "input": "Again, this is a lot to think about, so don't worry at all if it takes some time to sink in.",
  "translatedText": "שוב, זה הרבה לחשוב עליו, אז אל תדאגו אם לוקח לזה קצת זמן לשקוע.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 1308.32,
  "end": 1312.14
 },
 {
  "input": "The overall idea is that by running many distinct heads in parallel, you're giving the model the capacity to learn many distinct ways that context changes meaning.",
  "translatedText": "הרעיון הכללי הוא שעל ידי הפעלת ראשים שונים במקביל, אתם נותנים למודל את היכולת ללמוד דרכים רבות ושונות שבהן ההקשר משנה משמעות.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 1312.38,
  "end": 1321.82
 },
 {
  "input": "Pulling up our running tally for parameter count with 96 heads, each including its own variation of these four matrices, each block of multi-headed attention ends up with around 600 million parameters.",
  "translatedText": "כשמגדילים את ספירת הפרמטרים שלנו עם 96 ראשים, שכל אחד מהם כולל את הווריאציה שלו של ארבעת המטריצות האלו, כל בלוק של מיקוד רב-ראשים מכיל בסביבות 600 מיליון פרמטרים.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 1323.7,
  "end": 1335.08
 },
 {
  "input": "There's one added slightly annoying thing that I should really mention for any of you who go on to read more about transformers.",
  "translatedText": "יש עוד דבר אחד שאני רוצה להזכיר לכל אחד מכם שימשיך לקרוא עוד על טרמספורמרים.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 1336.42,
  "end": 1341.8
 },
 {
  "input": "You remember how I said that the value map is factored out into these two distinct matrices, which I labeled as the value down and the value up matrices.",
  "translatedText": "אתם זוכרים שאמרתי שמפוי הערכים מחולק לשתי המטריצות הנבדלות הללו, אותן תייגתי כמטריצות הערך למטה והערך למעלה.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 1342.08,
  "end": 1349.44
 },
 {
  "input": "The way that I framed things would suggest that you see this pair of matrices inside each attention head, and you could absolutely implement it this way.",
  "translatedText": "האופן שבו ניסחתי את הדברים מציע לכם לראות את צמד המטריצות הזה בתוך כל ראש מיקוד, ותוכלו ליישם את זה בצורה זו.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 1349.96,
  "end": 1358.44
 },
 {
  "input": "That would be a valid design.",
  "translatedText": "זה יהיה עיצוב תקף.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 1358.64,
  "end": 1359.92
 },
 {
  "input": "But the way that you see this written in papers and the way that it's implemented in practice looks a little different.",
  "translatedText": "אבל הדרך שבה אתם רואים את זה כתוב במאמרים והדרך שבה זה מיושם בפועל נראית קצת אחרת.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 1360.26,
  "end": 1364.92
 },
 {
  "input": "All of these value up matrices for each head appear stapled together in one giant matrix that we call the output matrix, associated with the entire multi-headed attention block.",
  "translatedText": "כל מטריצות הערך למעלה הללו עבור כל ראש מופיעות יחדיו במטריצה ענקית אחת שאנחנו קוראים לה מטריצת הפלט, הקשורה לכל בלוקי המיקוד הרב-הראשים.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 1365.34,
  "end": 1376.38
 },
 {
  "input": "And when you see people refer to the value matrix for a given attention head, they're typically only referring to this first step, the one that I was labeling as the value down projection into the smaller space.",
  "translatedText": "וכשאתם רואים אנשים מתייחסים למטריצת הערך של ראש מיקוד נתון, הם בדרך כלל מתייחסים רק לשלב הראשון הזה, זה שסימנתי כהטלת הערך למטה למרחב הקטן יותר.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 1376.82,
  "end": 1387.14
 },
 {
  "input": "For the curious among you, I've left an on-screen note about it.",
  "translatedText": "לסקרנים שביניכם, השארתי על כך הערה על המסך.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 1388.34,
  "end": 1391.04
 },
 {
  "input": "It's one of those details that runs the risk of distracting from the main conceptual points, but I do want to call it out just so that you know if you read about this in other sources.",
  "translatedText": "זה אחד מהפרטים האלה שעללולים להסיח את הדעת מהנקודות העיקריות, אבל אני כן רוצה להצביע על כך רק כדי שתדעו אם אתם קוראים על זה במקורות אחרים.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 1391.26,
  "end": 1398.54
 },
 {
  "input": "Setting aside all the technical nuances, in the preview from the last chapter we saw how data flowing through a transformer doesn't just flow through a single attention block.",
  "translatedText": "אם שמים בצד את כל הניואנסים הטכניים, בתצוגה המקדימה מהפרק האחרון ראינו כיצד נתונים שזורמים דרך טרמספורמר לא זורמים רק דרך בלוק מיקוד אחד.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 1399.24,
  "end": 1408.04
 },
 {
  "input": "For one thing, it also goes through these other operations called multi-layer perceptrons.",
  "translatedText": "ראשית, הם עוברים גם את הפעולות האחרות הנקראות פרספטרונים רב-שכבתיים.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 1408.64,
  "end": 1412.7
 },
 {
  "input": "We'll talk more about those in the next chapter.",
  "translatedText": "על אלה נדבר יותר בפרק הבא.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 1413.12,
  "end": 1414.88
 },
 {
  "input": "And then it repeatedly goes through many many copies of both of these operations.",
  "translatedText": "ואז הם עוברים שוב ושוב דרך הרבה הרבה עותקים של שתי הפעולות האלה.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 1415.18,
  "end": 1419.32
 },
 {
  "input": "What this means is that after a given word imbibes some of its context, there are many more chances for this more nuanced embedding to be influenced by its more nuanced surroundings.",
  "translatedText": "המשמעות היא שאחרי שמילה נתונה מטמיעה חלק מההקשר שלה, יש הרבה יותר סיכויים שהשיכון הניואנסי הזה יושפע מהסביבה הניואנסית יותר שלו.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 1419.98,
  "end": 1430.04
 },
 {
  "input": "The further down the network you go, with each embedding taking in more and more meaning from all the other embeddings, which themselves are getting more and more nuanced, the hope is that there's the capacity to encode higher level and more abstract ideas about a given input beyond just descriptors and grammatical structure.",
  "translatedText": "ככל שאתם מתקדמים למטה ברשת, כאשר כל שיכון מקבל יותר ויותר משמעות מכל השיכונים האחרים, שהם עצמם נעשים יותר ויותר ניואנסיים, התקווה היא שיש יכולת לקודד רעיונות ברמה גבוהה ומופשטת יותר לגבי קלט נתון מעבר לתארים ולמבנה הדקדוקי.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 1430.94,
  "end": 1447.32
 },
 {
  "input": "Things like sentiment and tone and whether it's a poem and what underlying scientific truths are relevant to the piece and things like that.",
  "translatedText": "דברים כמו סנטימנט וטון והאם זה שיר ואיזה אמיתות מדעיות רלוונטיות ליצירה ודברים כאלה.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 1447.88,
  "end": 1455.13
 },
 {
  "input": "Turning back one more time to our scorekeeping, GPT-3 includes 96 distinct layers, so the total number of key query and value parameters is multiplied by another 96, which brings the total sum to just under 58 billion distinct parameters devoted to all of the attention heads.",
  "translatedText": "אם נחזור פעם נוספת לניקוד שלנו, GPT-3 כולל 96 שכבות נפרדות, כך שהמספר הכולל של שאילתות מפתח וערך פרמטרים מוכפל בעוד 96, מה שמביא את הסכום הכולל לקצת פחות מ-58 מיליארד פרמטרים נפרדים המוקדשים לכל ראשי המיקוד.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 1456.7,
  "end": 1474.5
 },
 {
  "input": "That is a lot to be sure, but it's only about a third of the 175 billion that are in the network in total.",
  "translatedText": "זה בטוח הרבה, אבל זה רק כשליש מתוך 175 המיליארד שיש ברשת בסך הכל.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 1474.98,
  "end": 1480.94
 },
 {
  "input": "So even though attention gets all of the attention, the majority of parameters come from the blocks sitting in between these steps.",
  "translatedText": "אז למרות שמיקוד מקבל את כל תשומת הלב, רוב הפרמטרים מגיעים מהבלוקים שנמצאים בין השלבים האלה.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 1481.52,
  "end": 1488.14
 },
 {
  "input": "In the next chapter, you and I will talk more about those other blocks and also a lot more about the training process.",
  "translatedText": "בפרק הבא, אתם ואני נדבר יותר על הבלוקים האחרים האלה וגם הרבה יותר על תהליך האימון.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 1488.56,
  "end": 1493.56
 },
 {
  "input": "A big part of the story for the success of the attention mechanism is not so much any specific kind of behavior that it enables, but the fact that it's extremely parallelizable, meaning that you can run a huge number of computations in a short time using GPUs.",
  "translatedText": "חלק גדול מסיפור ההצלחה של מנגנון המיקוד הוא לא כל כך איזשהו סוג ספציפי של התנהגות שהוא מאפשר, אלא העובדה שהוא מקבילי ביותר, כלומר, אתם יכולים להריץ מספר עצום של חישובים בזמן קצר באמצעות GPUs .",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 1494.12,
  "end": 1508.38
 },
 {
  "input": "Given that one of the big lessons about deep learning in the last decade or two has been that scale alone seems to give huge qualitative improvements in model performance, there's a huge advantage to parallelizable architectures that let you do this.",
  "translatedText": "בהתחשב בעובדה שאחד הלקחים הגדולים לגבי למידה עמוקה בעשור או שניים האחרונים היה שקנה המידה לבדו נותן שיפורים איכותיים עצומים בביצועי המודל, יש יתרון עצום לארכיטקטורות הניתנות להקבלה שמאפשרות לכם לעשות זאת.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 1509.46,
  "end": 1521.06
 },
 {
  "input": "If you want to learn more about this stuff, I've left lots of links in the description.",
  "translatedText": "אם אתם רוצים ללמוד עוד על הנושא הזה, השארתי הרבה קישורים בתיאור.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 1522.04,
  "end": 1525.34
 },
 {
  "input": "In particular, anything produced by Andrej Karpathy or Chris Ola tend to be pure gold.",
  "translatedText": "בפרט, כל דבר שמיוצר על ידי Andrej Karpathy או Chris Ola נוטה להיות זהב טהור.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 1525.92,
  "end": 1530.04
 },
 {
  "input": "In this video, I wanted to just jump into attention in its current form, but if you're curious about more of the history for how we got here and how you might reinvent this idea for yourself, my friend Vivek just put up a couple videos giving a lot more of that motivation.",
  "translatedText": "בסרטון הזה, רציתי רק לקפוץ למיקוד בצורתו הנוכחית, אבל אם אתם סקרנים לגבי עוד מההיסטוריה של איך הגענו לכאן ואיך אתם יכולים להמציא את הרעיון הזה מחדש לעצמכם, ידידי Vivek פשוט העלה זוג סרטונים שנותנים הרבה יותר מהמוטיבציה הזו.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 1530.56,
  "end": 1542.54
 },
 {
  "input": "Also, Britt Cruz from the channel The Art of the Problem has a really nice video about the history of large language models.",
  "translatedText": "כמו כן, ל-Britt Cruz מהערוץ The Art of the Problem יש סרטון ממש נחמד על ההיסטוריה של דגמי שפות גדולים.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 1543.12,
  "end": 1548.46
 },
 {
  "input": "Thank you.",
  "translatedText": "תודה.",
  "model": "google_nmt",
  "n_reviews": 1,
  "start": 1564.96,
  "end": 1569.2
 }
]
