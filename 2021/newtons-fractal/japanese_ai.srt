1
00:00:00,000 --> 00:00:05,640
タイトルを見たことがあるので、これが特定のフラクタルにつながっていることがわかります。

2
00:00:05,640 --> 00:00:08,120
そして実際には、それは無限のフラクタル群です。

3
00:00:08,120 --> 00:00:12,920
そして、そうです、それは、どれほどズームインしても無限の

4
00:00:12,920 --> 00:00:14,800
ディテールを持つ、気が遠くなるほど複雑な形状の1つです。

5
00:00:14,800 --> 00:00:18,880
しかし、これは実際には、私たちがじっと見つめるための美しい画像を生成するためのビデオではありません。

6
00:00:18,880 --> 00:00:22,780
まあ、それも一部かもしれませんが、ここでの本当の話は、他の多くの

7
00:00:22,780 --> 00:00:26,540
フラクタルの背後にある話よりもはるかに実用的な出発点があります。

8
00:00:26,540 --> 00:00:29,860
そしてそれ以上に、私たちが最終的に得られる画像は、それが何を表しているの

9
00:00:29,860 --> 00:00:34,900
かを考えると、なぜ同じように複雑に見えなければならないのか、そしてこの

10
00:00:34,900 --> 00:00:39,640
複雑さが何を反映しているのかを理解する努力をすれば、より意味のあるものに

11
00:00:39,640 --> 00:00:48,300
なるでしょう。エンジニアリングのあらゆる場所で使用されるアルゴリズム。

12
00:00:48,300 --> 00:00:51,940
ここでの出発点は、ある種の多項式があり、それがいつ

13
00:00:51,940 --> 00:00:54,180
ゼロに等しくなるかを知りたいと仮定することです。

14
00:00:54,820 --> 00:00:57,980
ここにある 1 つのグラフでは、X 軸と交差する 3 つの異なる場所があること

15
00:00:57,980 --> 00:01:01,980
が視覚的にわかり、それらの値がどのようなものであるかをある程度把握できます。

16
00:01:01,980 --> 00:01:04,380
これらを多項式の根と呼びます。

17
00:01:04,380 --> 00:01:06,620
しかし、実際にそれらを正確に計算するにはどうすればよいでしょうか?

18
00:01:06,620 --> 00:01:10,580
さて、これは、あなたがすでに数学に夢中になっている場合

19
00:01:10,580 --> 00:01:13,080
、おそらくそれ自体で先に進むのに十分興味深い質問です。

20
00:01:13,080 --> 00:01:16,160
でも、もし道で誰かを脇に寄せてこれを尋ねたら、彼らはもう眠

21
00:01:16,160 --> 00:01:18,960
りに落ちているでしょう、なぜなら誰が気にするでしょうか？

22
00:01:18,960 --> 00:01:22,900
しかし実際のところ、この種の質問はエンジニアリングの分野では常に発生します。

23
00:01:22,940 --> 00:01:26,620
私が個人的にこのような方程式が現れるのに最も馴染みがあるのは、多項式

24
00:01:26,620 --> 00:01:30,420
があちこちに散らばっているコンピューター グラフィックスの設定です。

25
00:01:30,420 --> 00:01:35,020
したがって、特定のピクセルをどのように色付けするかを考えるときに、何らかの形でこれ

26
00:01:35,020 --> 00:01:39,640
らの多項式を使用する方程式を解くことが必要になることは珍しいことではありません。

27
00:01:39,640 --> 00:01:41,320
ここで、面白い例を 1 つ紹介しましょう。

28
00:01:41,320 --> 00:01:46,160
コンピュータが画面上にテキストをレンダリングするとき、それ

29
00:01:46,160 --> 00:01:47,160
らのフォントは通常、ピクセル値を使用して定義されません。

30
00:01:47,160 --> 00:01:51,480
これらは、業界ではベジェ曲線として知られ

31
00:01:51,480 --> 00:01:53,500
ている多項式曲線の束として定義されます。

32
00:01:53,500 --> 00:01:57,660
そして、おそらく何らかのデザイン ソフトウェアでベクター グラフィックスを

33
00:01:57,660 --> 00:02:00,520
いじったことがある人なら、この種の曲線についてはよく知っているでしょう。

34
00:02:00,520 --> 00:02:04,860
しかし、それらの 1 つを実際に画面上に表示するには、画面の各

35
00:02:04,860 --> 00:02:08,400
ピクセルに色を付ける必要があるかどうかを伝える方法が必要です。

36
00:02:08,400 --> 00:02:12,200
これらの曲線は、ある種のストローク幅で表示することも、領域を囲む

37
00:02:12,200 --> 00:02:15,420
場合にはその領域を何らかの塗りつぶしで表示することもできます。

38
00:02:15,420 --> 00:02:18,960
しかし、一歩下がってよく考えてみると、純粋な数学的曲線だ

39
00:02:18,960 --> 00:02:23,460
けに基づいて、各ピクセルが色を付ける必要があるかどうかを

40
00:02:23,460 --> 00:02:25,100
どのように判断するのかを理解するのは興味深いパズルです。

41
00:02:25,100 --> 00:02:27,480
つまり、ストローク幅の場合を考えてみましょう。

42
00:02:27,480 --> 00:02:32,400
これは、特定のピクセルがこの純粋な数学的曲線からどれだけ離れているかを理解

43
00:02:32,400 --> 00:02:36,780
することに帰着します。曲線自体はプラトニックな理想であり、幅はゼロです。

44
00:02:36,780 --> 00:02:41,120
これは、パラメーター t を持つパラメトリック カーブと考えることができます。

45
00:02:41,120 --> 00:02:44,540
この距離を計算するためにできることの 1 つは、ピクセルとその曲線上の

46
00:02:44,540 --> 00:02:48,940
サンプル ポイントの束の間の距離を計算し、最小値を計算することです。

47
00:02:49,920 --> 00:02:52,620
しかし、それは非効率的で不正確です。

48
00:02:52,620 --> 00:02:56,440
少し数学的に理解して、考えられるすべての点での曲線までの距離自体が

49
00:02:56,440 --> 00:03:01,440
パラメーターの滑らかな関数であることを認識する方が良いでしょう。

50
00:03:01,440 --> 00:03:05,960
そしてたまたまですが、その距離の 2 乗自体が

51
00:03:05,960 --> 00:03:07,960
多項式になるため、非常に扱いやすくなります。

52
00:03:07,960 --> 00:03:11,240
これがベクター グラフィックスのレンダリングに関する完全なレッスンであることを意図しているのであ

53
00:03:11,240 --> 00:03:15,180
れば、すべてを拡張して混乱を受け入れることもできますが、現時点で強調したい唯一の顕著な点は、原

54
00:03:15,200 --> 00:03:21,840
則として、この関数は必要最小限であるということです。知るためには、いくつかの多項式があります。

55
00:03:21,840 --> 00:03:25,540
この最小値を見つけて、ピクセルが曲線にどれだけ近いか、また曲線を埋める必

56
00:03:25,540 --> 00:03:29,420
要があるかどうかを決定することは、現在では単なる古典的な微積分問題です。

57
00:03:29,420 --> 00:03:33,540
あなたがすることは、この関数グラフの傾き、つまり導関数、やはり多項

58
00:03:33,540 --> 00:03:39,400
式を計算することであり、それがいつゼロに等しくなるのかを尋ねます。

59
00:03:39,400 --> 00:03:44,780
したがって、曲線を表示するだけのこの一見単純なタスクを実際

60
00:03:44,780 --> 00:03:49,220
に実行するには、特定の多項式がいつゼロに等しくなるかを把握

61
00:03:49,220 --> 00:03:51,060
する体系的かつ一般的な方法があれば便利だと思いませんか?

62
00:03:51,060 --> 00:03:55,260
もちろん、他の 100 の分野から 100 の例を引き出すこともできます。

63
00:03:55,260 --> 00:03:59,420
多項式の根を求めるとき、私たちは常に実数の煩雑さからきれいに抽象化された方

64
00:03:59,420 --> 00:04:03,980
法で多項式を表示しているにもかかわらず、そのことを覚えておいていただきたい

65
00:04:03,980 --> 00:04:06,820
のです。世界的な問題ですが、その課題は単なる学術的なものではありません。

66
00:04:06,820 --> 00:04:12,380
しかし、もう一度自問してみてください。これらの根の 1 つを実際にどのように計算するのでしょうか?

67
00:04:12,380 --> 00:04:17,100
取り組んでいる問題が何であれ、二次関数にたどり着くなら、幸せな日々を過

68
00:04:17,100 --> 00:04:20,260
ごしてください。誰もが知っていて大好きな二次関数を使うことができます。

69
00:04:20,260 --> 00:04:25,140
面白い余談ですが、これもコンピューター グラフィックスにおける根本原因の発

70
00:04:25,140 --> 00:04:29,740
見に関係しますが、私はかつてピクサーのエンジニアに、映画『ココ』のいくつか

71
00:04:29,740 --> 00:04:34,000
のシーンで使用されたライトの数と、それらのいくつかの性質を考慮した見積も

72
00:04:34,000 --> 00:04:38,840
りを教えてもらいました。球などの多項式で定義されたものが関係する場合のピク

73
00:04:38,840 --> 00:04:42,840
セルごとの計算では、映画の制作で二次公式が簡単に何兆回も使用されました。

74
00:04:42,840 --> 00:04:48,200
さて、問題が高次の多項式につながると、事態はさらに複雑になり始めます。

75
00:04:48,200 --> 00:04:52,800
3 次多項式については、Mathologer が素晴らしいビデオを

76
00:04:52,800 --> 00:04:57,800
作成した公式もあります。さらに、4 次多項式を解く 4 次の公式

77
00:04:57,800 --> 00:05:01,540
もあります。ただし、正直に言って、これは本質的に解決できない公式の

78
00:05:01,540 --> 00:05:04,120
非常に恐ろしい悪夢です。実際に実際に使っている人もいるでしょう。

79
00:05:04,120 --> 00:05:08,620
しかしその後、これは数学全体の中で最も魅力的な結果の 1 つであると思

80
00:05:08,620 --> 00:05:14,240
いますが、5 次以上の多項式を解くための類似の公式は存在できません。

81
00:05:14,240 --> 00:05:18,380
より具体的には、かなり広範な標準関数セットの場合、5 次多項

82
00:05:18,380 --> 00:05:22,500
式の係数を差し込んで常に根を求めることができるように、これ

83
00:05:22,500 --> 00:05:27,800
らの関数を組み合わせる方法が存在しないことを証明できます。

84
00:05:27,800 --> 00:05:32,060
これは、五次関数の非解決性として知られています。これはまったく別

85
00:05:32,060 --> 00:05:36,860
のワームの缶詰です。できれば別の機会に取り上げることができます

86
00:05:36,900 --> 00:05:40,980
が、実際には、この種の解を近似するアルゴリズムがあるため、それ

87
00:05:40,980 --> 00:05:43,220
は問題ではありません。必要な精度レベルで方程式を作成できます。

88
00:05:43,220 --> 00:05:47,700
共通のものであり、今日のあなたと私にとっての主要なトピックは、ニュートン法です。

89
00:05:47,700 --> 00:05:51,060
そして、はい、これが私たちをフラクタルに導くものですが、最初は手順全体がど

90
00:05:51,060 --> 00:05:55,660
れほど無邪気で良性であるように見えるかに注目していただきたいと思います。

91
00:05:55,660 --> 00:05:59,700
アルゴリズムはランダムな推測から始まり、それを x0 と呼びます。

92
00:05:59,700 --> 00:06:04,780
ほぼ確実に、x0 における多項式の出力は 0 ではないため、解決策は見つかっ

93
00:06:04,820 --> 00:06:08,060
ていません。それは、その時点でこのグラフの高さとして表示される他の値です。

94
00:06:08,060 --> 00:06:13,340
したがって、推測を改善するために、その値の周囲の関数の線形近

95
00:06:13,340 --> 00:06:16,100
似が 0 に等しくなるのはいつかを尋ねるのがアイデアです。

96
00:06:16,100 --> 00:06:19,900
つまり、この時点でグラフに接線を引いた場合

97
00:06:19,900 --> 00:06:23,500
、その接線はいつ x 軸と交差しますか?

98
00:06:23,500 --> 00:06:26,860
ここで、この接線が、ある真の根の大まかな近傍における

99
00:06:26,860 --> 00:06:31,340
関数の適切な近似であると仮定すると、この近似が 0

100
00:06:31,340 --> 00:06:33,980
に等しい場所により、その真の根に近づくはずです。

101
00:06:33,980 --> 00:06:37,580
この関数の導関数を得ることができ、多項式を使用すれば常にそ

102
00:06:37,580 --> 00:06:42,140
れが可能である限り、この直線の傾きを具体的に計算できます。

103
00:06:42,140 --> 00:06:45,300
ここで、アクティブな視聴者が立ち止まって尋ねたいと思うかもしれま

104
00:06:45,300 --> 00:06:48,700
せん。現在の推測と改善された推測の違いをどうやって見つけますか?

105
00:06:48,700 --> 00:06:51,300
このステップのサイズはどれくらいですか?

106
00:06:51,300 --> 00:06:54,540
これを考える 1 つの方法は、この接線の傾き、つまりランに対する上昇が、このグラ

107
00:06:54,540 --> 00:06:59,940
フの高さをそのステップの長さで割ったものに見えるという事実を考慮することです。

108
00:07:00,460 --> 00:07:03,620
しかし一方で、もちろん、接線の傾き

109
00:07:03,620 --> 00:07:05,300
はその点での多項式の導関数です。

110
00:07:05,300 --> 00:07:09,980
ここでこの方程式を少し整理すると、ステップ サイズ

111
00:07:09,980 --> 00:07:11,660
を計算するための非常に具体的な方法が得られます。

112
00:07:11,660 --> 00:07:17,260
したがって、次の推測 (x1 と呼ぶこともあります) は

113
00:07:17,260 --> 00:07:18,820
、このステップ サイズによって調整された前の推測です。

114
00:07:18,820 --> 00:07:21,500
その後は、このプロセスを繰り返すだけです。

115
00:07:21,500 --> 00:07:25,520
この関数の値とこの新しい推定値での傾きを計算する

116
00:07:25,520 --> 00:07:30,680
と、新しい線形近似が得られ、その接線が x 軸と

117
00:07:30,680 --> 00:07:32,880
交差する位置で次の推定値 x2 を作成します。

118
00:07:32,880 --> 00:07:36,520
次に、同じ計算を x2 に適用すると、x3 が得られます。

119
00:07:36,520 --> 00:07:40,600
そしてやがて、あなたは自分が真のルートに非常に近づいているこ

120
00:07:40,600 --> 00:07:45,120
とに気づきます。それは、自分が望んでいた限りに近いものです。

121
00:07:45,120 --> 00:07:49,040
数式が実際に意味があるかどうかを直感的にチェックする価

122
00:07:49,040 --> 00:07:50,040
値は常にあり、この場合、意味があることを願っています。

123
00:07:50,040 --> 00:07:54,500
x の p が大きい場合、つまりグラフが非常に高い場合、根

124
00:07:54,500 --> 00:07:56,260
に到達するためにより大きなステップを踏む必要があります。

125
00:07:56,260 --> 00:08:01,280
しかし、x の p&#39; も大きい場合、つまりグラフが非常に急勾配であるこ

126
00:08:01,280 --> 00:08:03,780
とを意味する場合は、そのステップの大きさを緩和する必要があるかもしれません。

127
00:08:03,780 --> 00:08:09,440
名前が示すように、これはニュートンが多項式を解くために使用した方法です。

128
00:08:09,440 --> 00:08:13,940
しかし、彼はそれを必要以上に複雑に見せ、ジョセフ・ラフソンという名前の研究者が

129
00:08:13,940 --> 00:08:18,500
、あなたや私が今見ているものに近い、より単純なバージョンを公開しました。その

130
00:08:18,500 --> 00:08:22,740
ため、ニュートンと呼ばれるこのアルゴリズムもよく耳にします。 -ラフソン法。

131
00:08:22,780 --> 00:08:25,460
最近、微積分の授業でよく取り上げられる話題です。

132
00:08:25,460 --> 00:08:29,660
ちなみに、感覚をつかむためのちょっとした練習として、この

133
00:08:29,660 --> 00:08:33,380
方法を使って手動で平方根を近似してみるのもいいでしょう。

134
00:08:33,380 --> 00:08:38,020
しかし、ほとんどの微積分の学生は、残念なことに、この一見単

135
00:08:38,020 --> 00:08:42,500
純な手順を試してみて、かさぶたをほじくり始めると、物事が

136
00:08:42,500 --> 00:08:45,340
どれほど奥深いものになるかということを理解していません。

137
00:08:45,340 --> 00:08:49,340
ご存知のとおり、ニュートン法は根の近くで開始するとすぐに収束するためうまく機能します

138
00:08:49,340 --> 00:08:55,060
が、最初の推測が根から遠く離れている場合は、いくつかの欠点がある可能性があります。

139
00:08:55,060 --> 00:08:58,900
たとえば、先ほど見ていた関数を上にシフトして、同

140
00:08:58,900 --> 00:09:02,340
じ初期推測で同じゲームをプレイしてみましょう。

141
00:09:07,660 --> 00:09:12,120
新しい推測のシーケンスが、x 軸の上にあるこの関数の

142
00:09:12,120 --> 00:09:15,540
極小値付近でどのように跳ね返るかに注目してください。

143
00:09:15,540 --> 00:09:19,380
これはある程度意味があるはずです。つまり、右端までのこれ

144
00:09:19,380 --> 00:09:23,980
らの値の周囲の関数の線形近似は、左端にある 1 つの真の

145
00:09:23,980 --> 00:09:28,240
根の周囲の関数の性質とはまったく無関係です。本当のルート

146
00:09:28,240 --> 00:09:32,020
に関する有用な情報は何も提供していないようなものです。

147
00:09:32,020 --> 00:09:35,980
このプロセスが偶然、新しい推測を十分に左に外したと

148
00:09:35,980 --> 00:09:40,140
きにのみ、一連の新しい推測が何らかの生産的な効果

149
00:09:40,140 --> 00:09:42,900
をもたらし、実際にその真のルートに近づくのです。

150
00:09:42,900 --> 00:09:47,100
物事が特に興味深いのは、複素平面で

151
00:09:47,100 --> 00:09:48,640
の根の発見について尋ねる場合です。

152
00:09:48,640 --> 00:09:53,040
ここに示したような多項式に実数根が 1 つしかない場合

153
00:09:53,040 --> 00:09:57,760
でも、これらの根が複素数になる可能性を許容すれば、この

154
00:09:57,760 --> 00:10:00,220
多項式を常にこのように 5 つの項に因数分解できます。

155
00:10:00,220 --> 00:10:02,500
これは有名な代数学の基本定理です。

156
00:10:02,500 --> 00:10:07,220
さて、実数入力と実数出力を備えた関数の幸運な世界では、入力と出力の

157
00:10:07,220 --> 00:10:11,380
間の関連性をグラフとして描くことができ、ニュートン法は接線と x

158
00:10:11,380 --> 00:10:16,260
の交差によって非常に素晴らしい視覚的意味を持っています。 -軸。

159
00:10:16,260 --> 00:10:20,500
しかし、これらの入力を任意の複素数にできるようにしたい場合、

160
00:10:20,500 --> 00:10:25,260
つまり、対応する出力も任意の複素数になる可能性があることを

161
00:10:25,260 --> 00:10:26,660
意味し、接線やグラフについて考えることはできなくなります。

162
00:10:26,660 --> 00:10:29,420
しかし、この数式は、それをどのように視覚化するかにはあまり関係ありません。

163
00:10:29,420 --> 00:10:34,980
ランダムな推測から始めて、この時点での多項式とその導

164
00:10:34,980 --> 00:10:40,060
関数を評価し、この更新ルールを使用して新しい推測を生

165
00:10:40,060 --> 00:10:41,380
成するという同じゲームをプレイすることもできます。

166
00:10:41,380 --> 00:10:45,680
そして願わくば、その新しい推測が真の根源に近いものであることを願っています。

167
00:10:45,680 --> 00:10:49,700
ただし、これらのステップを接線で視覚化できなくても、実際に

168
00:10:49,700 --> 00:10:51,700
は同じロジックであることを明確にしておきたいと思います。

169
00:10:51,700 --> 00:10:56,380
推測に基づいた関数の線形近似がどこでゼロに等しくなるかを

170
00:10:56,380 --> 00:11:01,940
計算し、その線形近似のゼロを次の推測として使用します。

171
00:11:01,940 --> 00:11:05,740
機能することを期待する理由もなく、ルールを新しいコン

172
00:11:05,740 --> 00:11:06,740
テキストに盲目的に適用しているわけではありません。

173
00:11:07,020 --> 00:11:11,020
そして実際、少なくともここで示しているものでは、数回の反復後に、

174
00:11:11,020 --> 00:11:16,380
対応する出力が本質的にゼロになる値に到達することがわかります。

175
00:11:16,380 --> 00:11:17,380
ここからが楽しい部分です。

176
00:11:17,380 --> 00:11:21,260
このアイデアを、考えられるさまざまな初期推測に適用してみましょう。

177
00:11:21,260 --> 00:11:25,740
参考のために、この特定の多項式の 5

178
00:11:25,740 --> 00:11:27,580
つの真の根を複素平面上に示します。

179
00:11:27,580 --> 00:11:32,960
反復ごとに、小さなドットのそれぞれがニュートン法に基づいて何らかのステップを踏みます。

180
00:11:32,960 --> 00:11:36,940
ほとんどの点はすぐに 5 つの真のルートの 1 つに収束しますが、

181
00:11:36,940 --> 00:11:41,160
いくつかの目立った点があり、しばらく飛び跳ねているように見えます。

182
00:11:41,160 --> 00:11:45,720
特に、正の実数直線上にどのように閉じ込められているかに注目してください。

183
00:11:45,720 --> 00:11:50,800
それらは少し失われているように見えますが、これはまさに、以前にグラフで実数の場

184
00:11:50,800 --> 00:11:56,800
合を調べたときに、この同じ多項式についてすでに確認したものとまったく同じです。

185
00:11:56,800 --> 00:12:00,960
ここで私がやろうとしていることは、最終的に 5 つのルートのどれに最も近

186
00:12:00,960 --> 00:12:05,640
くなったかに基づいて、これらのドットのそれぞれに色を付けることです。その

187
00:12:05,640 --> 00:12:09,600
後、時計をロールバックして、すべてのドットが開始位置に戻るようにします。

188
00:12:09,600 --> 00:12:13,000
ここで実行したように、これは完全なストーリーを理解するには十分な解像度では

189
00:12:13,000 --> 00:12:16,760
ありません。そこで、さらに細かいグリッドの初期推測から始めて、同じゲーム

190
00:12:16,760 --> 00:12:20,960
をプレイして、次のことを適用するとどうなるかを示します。ニュートンの方法

191
00:12:20,960 --> 00:12:26,360
は、各ルートを前進させ、どのルートに着地するかに基づいて各ドットに色を付

192
00:12:26,360 --> 00:12:29,500
け、時計を巻き戻して元の場所を確認するという方法を何度も繰り返しました。

193
00:12:29,540 --> 00:12:33,440
しかし、これでもパターンを理解するには十分な解像度ではありません。

194
00:12:33,440 --> 00:12:40,560
平面上のすべてのピクセルに対してこのプロセスを実行すると、次のような結果が得られます。

195
00:12:40,560 --> 00:12:44,460
そして、この詳細レベルでは、少なくとも私の目には配

196
00:12:44,460 --> 00:12:46,460
色が少し不快なので、少し落ち着かせてみましょう。

197
00:12:46,460 --> 00:12:50,560
実際、私がここでこれを示すためにどのような解像度を使用しようとしても、決して十分

198
00:12:50,560 --> 00:12:56,060
ではありません。なぜなら、私たちが得られる形状の細部は無限に複雑になるからです。

199
00:12:59,500 --> 00:13:05,220
しかし、これが実際に何を言っているのか少し考えてみましょう。

200
00:13:05,220 --> 00:13:09,380
これは、複素平面内にシード値をわずかに調整すると、つまり 110 万分の 1

201
00:13:09,380 --> 00:13:13,820
または 11 兆分の 1 だけ横にずらすだけで、5 つの値のうちのどれを

202
00:13:13,820 --> 00:13:18,420
完全に変更できる領域があることを意味します。最終的に辿り着く本当のルーツ。

203
00:13:18,420 --> 00:13:22,140
先ほど示した実際のグラフと問題のある推測で、この種の混乱の前兆がいくつか見ら

204
00:13:22,140 --> 00:13:26,500
れましたが、これらすべてを複素平面で描写すると、この種の根探索アルゴリズム

205
00:13:26,500 --> 00:13:31,020
がどれほど予測不可能であるか、そしてどのようにしてその問題が発生するのかが

206
00:13:31,020 --> 00:13:37,060
明らかになります。は、この種の予測不可能性が発生する初期値の全体の帯です。

207
00:13:37,060 --> 00:13:40,460
ここで、これらのルートの 1 つを取得して変更すると、つまりプロセスに別の多項式を使

208
00:13:40,460 --> 00:13:45,640
用すると、結果として生じるフラクタル パターンがどのように変化するかがわかります。

209
00:13:45,640 --> 00:13:50,740
そして、たとえば、特定のルートの周囲の領域が常に同じ色であるこ

210
00:13:50,740 --> 00:13:54,560
とに注目してください。これらの点はルートに十分近いため、問題な

211
00:13:54,560 --> 00:13:58,320
くルートを見つける方法としてこの線形近似スキームが機能します。

212
00:13:58,320 --> 00:14:02,760
すべての混乱は地域間の境界で起こっているようだ。

213
00:14:02,760 --> 00:14:03,760
それを覚えておいてください。

214
00:14:03,760 --> 00:14:07,640
そして、これらの根をどこに配置しても、フラ

215
00:14:07,640 --> 00:14:08,640
クタル境界は常にそこにあるように思えます。

216
00:14:08,640 --> 00:14:12,240
これは明らかに、たまたま始めた多項式にとって一度限りのも

217
00:14:12,240 --> 00:14:16,840
のではなく、特定の多項式にとって一般的な事実のようです。

218
00:14:16,840 --> 00:14:20,980
何が起こっているかをわかりやすく説明するためにここで調整できるも

219
00:14:20,980 --> 00:14:23,040
う 1 つの側面は、使用しているニュートン法のステップ数です。

220
00:14:23,040 --> 00:14:27,160
たとえば、コンピュータにゼロ ステップを実行させた場合、つまり、すでに最も近

221
00:14:27,160 --> 00:14:31,680
いルートに基づいて平面の各点に色を付けるだけである場合、これが得られます。

222
00:14:31,680 --> 00:14:36,220
そして、この種の図には実は特別な名前があり、ボロノイ図と呼ばれます。

223
00:14:36,220 --> 00:14:40,060
そして、平面の各点にニュートン法の 1 ステップを実

224
00:14:40,060 --> 00:14:44,560
行させ、その 1 ステップの結果がどのルートに最も

225
00:14:44,560 --> 00:14:47,560
近いかに基づいて色付けすると、次のようになります。

226
00:14:47,560 --> 00:14:54,920
同様に、2 つのステップを許可すると、わずかに複雑なパタ

227
00:14:54,920 --> 00:14:59,720
ーンが得られ、以下同様に、許可するステップが増えるほど

228
00:14:59,720 --> 00:15:01,400
、より複雑な画像が得られ、元のフラクタルに近づきます。

229
00:15:01,400 --> 00:15:05,320
そして、これは重要です。ここで研究している真の形状はこれらのいずれかでは

230
00:15:05,320 --> 00:15:14,560
なく、任意の多数の反復を許容するための限界であることに注意してください。

231
00:15:14,560 --> 00:15:17,840
現時点では、たくさんの疑問が生じます。

232
00:15:17,840 --> 00:15:21,980
もしかしたら、これを他の多項式で試して、それがどの程度一般的であるかを確認した

233
00:15:21,980 --> 00:15:26,600
いかもしれません。あるいは、これらの反復された点で正確にどのようなダイナミクス

234
00:15:26,600 --> 00:15:31,080
が可能であるかをより深く掘り下げたいかもしれません。あるいは、同様のテーマ。

235
00:15:31,080 --> 00:15:35,320
しかし、最も適切な質問は、ここで何が起こってい

236
00:15:35,320 --> 00:15:36,320
るのかというようなものであるべきだと思います。

237
00:15:36,320 --> 00:15:40,960
つまり、ここで行っているのは線形近似を繰り返し解くことだけです。

238
00:15:40,960 --> 00:15:44,280
なぜこれほど果てしなく複雑なものが生まれるのでしょうか?

239
00:15:44,280 --> 00:15:47,880
ここの基礎となるルールには、このような画像を実際に生

240
00:15:47,880 --> 00:15:50,580
成するのに十分な情報が含まれていないように思えます。

241
00:15:50,580 --> 00:15:53,880
そして、これを見る前に、各シード値は単純に最も近いルートに向かう傾向

242
00:15:53,880 --> 00:15:58,440
がある、というのが妥当な最初の推測だったのではないかと思いませんか?

243
00:15:58,440 --> 00:16:01,640
その場合、各ポイントが着地するルートに基づいて色を付

244
00:16:01,640 --> 00:16:05,880
け、それを元の位置に戻すと、最終的なイメージは直線

245
00:16:05,880 --> 00:16:09,280
の境界を持つボロノイ図のいずれかのようになります。

246
00:16:09,280 --> 00:16:13,360
そして、私が以前に 5 次の解けないことについて言及したので、おそらくこ

247
00:16:13,440 --> 00:16:15,680
こでの複雑さがそれと関係があるのではないかと疑問に思うかもしれません。

248
00:16:15,680 --> 00:16:19,240
それは素晴らしいことですが、本質的には無関係なアイデアです。

249
00:16:19,240 --> 00:16:24,080
実際、これまで 5 次の多項式のみを使用していたのは、少し誤解を招く可能性がありました。

250
00:16:24,080 --> 00:16:28,440
同じゲームをプレイしますが、複素平面のどこかに 3 つの根があ

251
00:16:28,440 --> 00:16:31,000
る 3 次多項式を使用した場合に何が起こるかを見てください。

252
00:16:31,000 --> 00:16:35,800
繰り返しになりますが、ほとんどのポイントは根の中に収まっていますが、一

253
00:16:35,800 --> 00:16:37,240
部のポイントはより無秩序にあちこちに飛んでいる様子に注目してください。

254
00:16:37,240 --> 00:16:41,480
実際、これらはこのようなアニメーションで最も目立つも

255
00:16:41,480 --> 00:16:45,400
のであり、根に向かうものは終点に静かに佇んでいます。

256
00:16:45,400 --> 00:16:49,040
そして、繰り返しますが、ある程度の反復回数でこれを停止し、どのルートに最も近

257
00:16:49,040 --> 00:16:53,560
いかに基づいてすべての点に色を付け、時計を巻き戻すと、考えられるすべての開始

258
00:16:53,560 --> 00:17:01,040
点に関連する画像が、無限の詳細を持つこのフラクタル パターンを形成します。

259
00:17:01,040 --> 00:17:09,880
ただし、根が 2 つだけの 2 次多項式は異なります。

260
00:17:09,880 --> 00:17:13,880
その場合、ご想像のとおり、各シード値は単純

261
00:17:13,880 --> 00:17:16,400
に最も近いルートに向かう傾向があります。

262
00:17:16,400 --> 00:17:20,040
各根から等距離にあるすべての点から少し蛇行する動作があり、

263
00:17:20,040 --> 00:17:24,480
どの点に行けばよいのか決められないような感じですが、それ

264
00:17:24,480 --> 00:17:28,440
は単なる 1 つの点の列です。色を塗るゲームをしてみると、

265
00:17:28,440 --> 00:17:32,080
最終的に得られる図は明らかにもっと退屈なものになります。

266
00:17:32,080 --> 00:17:36,600
つまり、2 から 3 にジャンプすると、何か新しいことが

267
00:17:36,600 --> 00:17:37,600
起こるように見えますが、問題は、具体的には何でしょうか?

268
00:17:37,600 --> 00:17:41,480
もしあなたが1か月前に私に尋ねていたら、私はおそらく肩をすくめて、ただこう言っただろう、

269
00:17:41,480 --> 00:17:45,600
ご存知のように、数学とはそういうものだ、答えは簡単に見えることもあれば、そうでないことも

270
00:17:45,600 --> 00:17:49,000
ある、ある場面で「なぜ」と尋ねることが何を意味するのか必ずしも明確ではないこのような。

271
00:17:49,000 --> 00:17:53,040
しかし、私は間違っていたでしょう。この画像がなぜこれほど複

272
00:17:53,040 --> 00:17:55,960
雑に見えるのかについては、実は説明できる理由があります。

273
00:17:55,960 --> 00:18:01,040
ご存知のとおり、この図には非常に奇妙な特性があり、それを証明することができます。

274
00:18:01,040 --> 00:18:05,480
色付きの領域の 1 つだけ、たとえばこの青い領域、つまり、最終的に多項式の

275
00:18:05,480 --> 00:18:10,880
1 つの特定の根に向かう傾向があるすべての点のセットに注意を集中します。

276
00:18:10,880 --> 00:18:14,720
次に、その領域の境界について考えてみましょう。画面に表示されて

277
00:18:14,720 --> 00:18:17,360
いる例では、このような優れた 3 回対称性が示されています。

278
00:18:17,360 --> 00:18:21,840
驚くべきことは、他の色を見てその境界を考慮すると

279
00:18:21,840 --> 00:18:25,480
、まったく同じセットが得られるということです。

280
00:18:25,480 --> 00:18:29,120
さて、私が境界という言葉を言うとき、あなたはおそらくそれが何を意味するのか直感的に

281
00:18:29,120 --> 00:18:32,560
理解しているでしょうが、数学者はそれを形式化する非常に賢い方法を持っており、これに

282
00:18:32,640 --> 00:18:36,800
よりフラクタルのようなよりワイルドな集合のコンテキストでの推論が容易になります。

283
00:18:36,800 --> 00:18:40,920
その点を中心とする小さな円を描くとき、どんなに小さ

284
00:18:40,920 --> 00:18:45,720
くても、常にそのセットの内側と外側の両方に点が含ま

285
00:18:45,720 --> 00:18:47,960
れる場合、その点はセットの境界上にあると言います。

286
00:18:47,960 --> 00:18:51,640
したがって、内側に点がある場合、十分に小さい円には最終的に

287
00:18:51,640 --> 00:18:56,800
セット内の点のみが含まれることになり、外側の点の場合、十

288
00:18:56,800 --> 00:18:58,760
分に小さい円にはセットの点がまったく含まれなくなります。

289
00:18:58,760 --> 00:19:02,400
しかし、それが境界上にあるとき、境界上にあるということは、あ

290
00:19:03,240 --> 00:19:05,840
なたの小さな小さな円が常に両方を含むということを意味します。

291
00:19:05,840 --> 00:19:10,560
したがって、私たちのプロパティを振り返ってみると、これを読み取る 1 つの方法

292
00:19:10,560 --> 00:19:15,480
は、円を描くと、その円がどんなに小さくても、その円にはすべての色が含まれるか、

293
00:19:15,480 --> 00:19:21,000
または色の共有境界がその円の内側にある場合に発生すると言えます。 、または 1

294
00:19:21,000 --> 00:19:27,120
つの色だけが含まれており、これは領域の 1 つの内部にある場合に発生します。

295
00:19:27,120 --> 00:19:31,320
特に、これが意味するのは、2 つの色だけを含む円を見つけること

296
00:19:31,320 --> 00:19:36,000
は決してできないということです。そのためには、2 つの領域の境

297
00:19:36,000 --> 00:19:38,960
界上に点がある必要がありますが、そのすべてではないからです。

298
00:19:38,960 --> 00:19:43,160
この事実が実際にどこから来たのかを説明する前に、この事

299
00:19:43,160 --> 00:19:45,060
実について少し頭の中で考えてみるのも楽しいでしょう。

300
00:19:45,060 --> 00:19:48,760
これをある種のアートパズルとして誰かに提示することを想像することもで

301
00:19:48,760 --> 00:19:52,160
きます。完全に文脈を無視して、ニュートン法などには決して言及せず、少

302
00:19:52,160 --> 00:19:56,760
なくとも 3 つの色、おそらく赤で絵を構成することが課題であると言い

303
00:19:56,760 --> 00:20:01,080
ます。緑、青、つまり 1 つの色の境界がすべての色の境界になります。

304
00:20:01,080 --> 00:20:04,800
したがって、このような単純なものから始めた場合、それは明らかに機能しませ

305
00:20:04,800 --> 00:20:08,580
ん。なぜなら、この点の行全体が緑と赤の境界上にあり、青に触れていないから

306
00:20:08,580 --> 00:20:13,600
です。また、同様に、これらの他の禁止された行もあるためです。ポイント。

307
00:20:13,600 --> 00:20:18,080
したがって、これを修正するには、境界に沿っていくつかの青いブロブを追加し

308
00:20:18,080 --> 00:20:23,160
、次に、同様に、赤と青の間にいくつかの緑のブロブを追加し、緑と青の間にい

309
00:20:23,160 --> 00:20:27,440
くつかの赤いブロブを追加します。ただし、もちろん、これらのブロブの境界は

310
00:20:27,440 --> 00:20:29,800
たとえば、青と赤だけをタッチし、緑をタッチしないなどの問題があります。

311
00:20:29,800 --> 00:20:34,160
そこで、修正しやすくするために、小さな境界の周りに関連する 3 番

312
00:20:34,160 --> 00:20:37,240
目の色を付けて、さらに小さなブロブを追加してみるとよいでしょう。

313
00:20:37,240 --> 00:20:44,880
同様に、最初に追加した BLOB ごとにこれを行う必要があります。

314
00:20:44,880 --> 00:20:49,040
しかし、その場合、それらの小さな塊の境界はすべてそれ自体の問題となる

315
00:20:49,040 --> 00:20:54,480
ため、何らかの方法でこのプロセスを永遠に実行し続ける必要があります。

316
00:20:54,480 --> 00:20:59,280
そして、ニュートンのフラクタル自体を見ると、この種のブロブ上のブロブ

317
00:20:59,280 --> 00:21:07,000
上のブロブのパターンがまさにそれが行っていることのように見えます。

318
00:21:07,000 --> 00:21:10,480
ここで注目していただきたいのは、このプロパティが、滑らかなセグメントは 2 つ

319
00:21:10,480 --> 00:21:15,880
の色にしか接していないため、小さなセグメント上では滑らかな、または部分的にさ

320
00:21:15,880 --> 00:21:18,600
え滑らかな境界線を持つことは決してできないことを意味しているということです。

321
00:21:18,600 --> 00:21:23,860
代わりに、境界はいわば完全に鋭い角で構成されている必要があります。

322
00:21:23,860 --> 00:21:28,240
したがって、この特性を信じれば、どこまでズームイ

323
00:21:28,240 --> 00:21:30,080
ンしても境界が粗いままである理由が説明されます。

324
00:21:30,080 --> 00:21:33,640
そして、フラクタル次元の概念に精通している人は、今私が示している

325
00:21:33,640 --> 00:21:40,040
特定の境界の次元を測定すると、約 1 であることがわかります。44.

326
00:21:40,040 --> 00:21:44,200
私たちの色が実際に何を表しているのかを考えると、これは単なる写真のための写真では

327
00:21:44,200 --> 00:21:48,760
ないことを忘れずに、その物件が実際に私たちに何を伝えているのかを考えてください。

328
00:21:48,760 --> 00:21:52,560
それは、シード値の一部が 1 つのルートに送られるが、近くにある他のシード値が別

329
00:21:52,560 --> 00:21:58,040
のルートに送られるような敏感なポイントの近くにいる場合、実際には、考えられるすべ

330
00:21:58,040 --> 00:22:01,560
てのルートがその小さな近傍内からアクセス可能でなければならない、ということです。

331
00:22:01,560 --> 00:22:06,040
あなたが描く小さな円については、その円内のすべての点が 1 つのル

332
00:22:06,040 --> 00:22:10,880
ートのみに向かうか、すべてのルートに向かうかのどちらかですが、その

333
00:22:10,880 --> 00:22:14,160
間に何も存在することはなく、ルートのサブセットに向かうだけです。

334
00:22:14,160 --> 00:22:18,120
少し直観的には、画面上のようなクラスターがこのプロセスを

335
00:22:18,120 --> 00:22:20,500
経るのをただ観察するだけで啓発されることがわかりました。

336
00:22:20,500 --> 00:22:25,680
最初はほとんどくっついて始まりますが、1 回の反復ですべてが外側に爆発し

337
00:22:25,680 --> 00:22:31,400
、その後はどのルートでも掴めるようになるのがずっと合理的だと感じます。

338
00:22:31,400 --> 00:22:35,060
覚えておいてください、私は有限個の点を示しているだけですが、原理的には、小さ

339
00:22:35,060 --> 00:22:45,000
な円盤内の数え切れない無限に多くの点すべてに何が起こるかを考えてください。

340
00:22:45,000 --> 00:22:49,040
この特性は、根が 2 つだけの 2 次多項式の場合、正常に見

341
00:22:49,040 --> 00:22:54,400
えるのがなぜ問題ないのかも説明します。境界が滑らかであれば

342
00:22:54,400 --> 00:22:56,920
問題なく、とにかく接触する色は 2 つだけであるためです。

343
00:22:56,920 --> 00:23:01,020
明確にしておきますが、二次関数の場合に滑らかな境界があるという

344
00:23:01,020 --> 00:23:04,920
保証はありません。2 つの色の間にフラクタル境界があることは完

345
00:23:04,920 --> 00:23:09,240
全に可能です。単に、ニュートン法図が必要以上に複雑なことを行っ

346
00:23:09,240 --> 00:23:13,920
ていないように見えるだけです。この奇妙な境界条件の制約の下で。

347
00:23:13,920 --> 00:23:18,480
しかしもちろん、これらすべては、そもそもなぜこの奇妙な境界特

348
00:23:18,480 --> 00:23:20,560
性が真でなければならないのかという疑問を引き起こすだけです。

349
00:23:20,560 --> 00:23:22,580
それは一体どこから来たのでしょうか？

350
00:23:22,580 --> 00:23:26,260
そのために、この種の問題を研究する数学の分野について

351
00:23:26,260 --> 00:23:28,460
お話したいと思います。それは、正則力学と呼ばれます。

352
00:23:28,460 --> 00:23:31,500
そして、今日は十分な内容をカバーしたと思いますし、語るべきことは確かに十分

353
00:23:31,500 --> 00:23:35,140
に残っているので、それを別のビデオとして取り上げるのは理にかなっています。

354
00:23:35,140 --> 00:23:38,700
ここで話を締めくくりますが、ニュートンはこのことについて何の手がかりも持たず

355
00:23:38,700 --> 00:23:43,260
、あなたやあなたと同じようにこれらの画像を扱うことは決してできなかったとい

356
00:23:43,260 --> 00:23:47,460
う事実にもかかわらず、これを私たちがニュートンのフラクタルと呼んでいるという

357
00:23:47,460 --> 00:23:49,220
事実について、私にはある種の面白いことがあります。現代の技術ならできるよ。

358
00:23:49,220 --> 00:23:53,100
そして、人々の名前が、彼らが夢見ていたものをはるかに超えて

359
00:23:53,100 --> 00:23:55,220
物事に愛着を持つということは、数学を通じてよく起こります。

360
00:23:55,220 --> 00:23:58,940
ハミルトンは量子力学について何も知らなかったにも

361
00:23:58,940 --> 00:23:59,940
かかわらず、ハミルトニアンは量子力学の中心です。

362
00:23:59,940 --> 00:24:05,080
フーリエ自身は一度も高速フーリエ変換を計算したことがありません。リストは続きます。

363
00:24:05,080 --> 00:24:10,580
しかし、この名称の過度の拡張には、私がインスピレーションを与える点が含まれていると思います。

364
00:24:10,580 --> 00:24:15,160
それは、何世紀も前に発見できたような単純なアイデアでさえ、そ

365
00:24:15,160 --> 00:24:19,600
の中に新しい角度や関連性のある新しい領域を保持し、数百年後に

366
00:24:19,600 --> 00:24:22,040
発見されるのを待っていることがよくあることを反映しています。

367
00:24:22,040 --> 00:24:25,720
ニュートンがニュートンのフラクタルについて知らなかっただけではありません。

368
00:24:25,720 --> 00:24:29,640
ニュートン法について、あるいは古いニュースのように思えるあらゆる種類の数学について

369
00:24:29,640 --> 00:24:34,660
は、おそらく他にも多くの事実があり、それらはまだ誰も尋ねようと思わなかった質問、そ

370
00:24:34,660 --> 00:24:43,200
こにただ座して、あなたのような誰かを待っている質問から来ています。彼らに尋ねる。

371
00:24:43,240 --> 00:24:46,800
たとえば、今日話しているこのプロセスがサイクルに陥ることがあ

372
00:24:46,800 --> 00:24:51,280
るのかどうかを尋ねると、マンデルブロ集合との驚くべきつなが

373
00:24:51,280 --> 00:24:55,120
りにつながります。これについては次で少し説明します。一部。

374
00:24:55,120 --> 00:24:58,060
ちなみに、これを投稿している時点では、その 2 番目の

375
00:24:58,060 --> 00:24:59,520
部分は早期リリースとしてパトロンに提供されています。

376
00:24:59,520 --> 00:25:02,960
私は常に、フィードバックを収集し、エラーを見つけるため

377
00:25:02,960 --> 00:25:03,960
に、新しいコンテンツに少し時間を与えることを好みます。

378
00:25:03,960 --> 00:25:06,480
最終版は間もなく公開されるはずです。

379
00:25:06,480 --> 00:25:09,580
そしてパトロンの話題に関しては、画面に名前が表示され

380
00:25:09,580 --> 00:25:10,740
ている皆さんに簡単に感謝の意を表したいと思います。

381
00:25:10,780 --> 00:25:14,500
最近の歴史の中で、新しいビデオの配信が少し遅れていることは承知しています。

382
00:25:14,500 --> 00:25:17,340
これの一部は、現在進行中の他のプロジェクトと関係しています。

383
00:25:17,340 --> 00:25:20,360
ちなみに、私が誇りに思っていることは、夏の数学博覧会のようなものです。正直に言っ

384
00:25:20,360 --> 00:25:25,160
て、驚くほどの労力がかかりましたが、結果を考えるとそれだけの価値はありました。

385
00:25:25,160 --> 00:25:29,540
それについてはすべて話し、すぐに受賞者を発表する予定ですので、楽しみにお待ちください。

386
00:25:29,540 --> 00:25:33,020
ただ知っておいていただきたいのは、近い将来の計画は間違いなく、より全力で新

387
00:25:33,020 --> 00:25:37,020
しいビデオの作成に戻ることです。そして何よりも言いたいのは、いくつかの新

388
00:25:37,060 --> 00:25:40,740
しいことに挑戦している間であっても、継続的なサポートに感謝することです。

389
00:25:40,740 --> 00:25:44,180
それは私にとって非常に意味があり、チャンネルを継続していくためのものであり、パ

390
00:25:44,180 --> 00:25:47,300
イプラインの新しい教訓がそこでの信任投票に応えられるように最善を尽くします。

