[
 {
  "input": "You've seen the title, so you know this is leading to a certain fractal. ",
  "translatedText": "제목을 보셨으므로 이것이 특정 프랙탈로 이어진다는 것을 알 수 있습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 2.46,
  "end": 5.58
 },
 {
  "input": "And actually it's an infinite family of fractals. ",
  "translatedText": "그리고 실제로 그것은 무한한 프랙탈 계열입니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 5.92,
  "end": 7.94
 },
 {
  "input": "And yeah, it'll be one of those mind-bogglingly intricate shapes that has infinite detail no matter how far you zoom in. ",
  "translatedText": "그리고 네, 아무리 확대해도 무한한 디테일을 지닌 놀라울 정도로 복잡한 모양 중 하나가 될 것입니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 8.72,
  "end": 14.62
 },
 {
  "input": "But this is not really a video about generating some pretty picture for us to gawk at. ",
  "translatedText": "하지만 이것은 실제로 우리가 구경할 만한 예쁜 그림을 생성하는 비디오가 아닙니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 14.76,
  "end": 18.94
 },
 {
  "input": "Well, okay, maybe that's part of it, but the real story here has a much more pragmatic starting point than the story behind a lot of other fractals. ",
  "translatedText": "글쎄, 어쩌면 그게 그것의 일부일지도 모르지만, 여기의 실제 이야기는 다른 많은 프랙탈 뒤에 숨겨진 이야기보다 훨씬 더 실용적인 출발점을 가지고 있습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 19.06,
  "end": 25.6
 },
 {
  "input": "And more than that, the final images that we get to will become a lot more meaningful if we make an effort to understand why, given what they represent, they kind of have to look as complicated as they do, and what this complexity reflects about an algorithm that is used all over the place in engineering. ",
  "translatedText": "그리고 무엇보다도, 우리가 표현하는 내용을 고려할 때 왜 그렇게 복잡해 보여야 하는지, 그리고 이 복잡성이 무엇을 반영하는지 이해하려고 노력한다면 우리가 얻게 되는 최종 이미지는 훨씬 더 의미 있게 될 것입니다. 엔지니어링 전반에 걸쳐 사용되는 알고리즘입니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 26.18,
  "end": 41.62
 },
 {
  "input": "The starting point here will be to assume that you have some kind of polynomial, and that you want to know when it equals zero. ",
  "translatedText": "여기서 출발점은 일종의 다항식이 있고 그것이 0과 같을 때를 알고 싶다고 가정하는 것입니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 48.0,
  "end": 53.9
 },
 {
  "input": "For the one graph here, you can visually see there's three different places where it crosses the x-axis, and you can kind of eyeball what those values might be. ",
  "translatedText": "여기 있는 한 그래프의 경우 x축과 교차하는 세 개의 서로 다른 위치가 있음을 시각적으로 볼 수 있으며 해당 값이 무엇인지 눈으로 확인할 수 있습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 54.32,
  "end": 61.76
 },
 {
  "input": "We'd call those the roots of the polynomial. ",
  "translatedText": "우리는 이것을 다항식의 근이라고 부릅니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 61.9,
  "end": 63.7
 },
 {
  "input": "But how do you actually compute them exactly? ",
  "translatedText": "하지만 실제로 정확히 어떻게 계산합니까? ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 64.26,
  "end": 66.3
 },
 {
  "input": "Now this is the kind of question where if you're already bought into math, maybe it's interesting enough in its own right to move forward. ",
  "translatedText": "이제 이것은 당신이 이미 수학에 빠져 있다면 수학 자체가 앞으로 나아갈 만큼 충분히 흥미로울 수도 있는 종류의 질문입니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 67.44,
  "end": 72.58
 },
 {
  "input": "But if you just pull someone on the street aside and ask them this, I mean, they're already falling asleep, because who cares? ",
  "translatedText": "하지만 길거리에 있는 누군가를 옆으로 불러내어 이렇게 묻는다면, 내 말은, 그 사람은 이미 잠들어 있다는 뜻입니다. 누가 신경 쓰겠습니까? ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 72.94,
  "end": 78.12
 },
 {
  "input": "But the thing is, this kind of question comes up all the time in engineering. ",
  "translatedText": "하지만 문제는 이런 종류의 질문이 공학계에서 항상 나온다는 것입니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 78.82,
  "end": 82.06
 },
 {
  "input": "Where I'm personally most familiar with equations like this popping up is in the setting of computer graphics, where polynomials are just littered all over the place. ",
  "translatedText": "개인적으로 이런 방정식이 나타나는 데 가장 익숙한 곳은 다항식이 여기저기 흩어져 있는 컴퓨터 그래픽 설정입니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 82.58,
  "end": 90.32
 },
 {
  "input": "So it's not uncommon that when you're figuring out how a given pixel should be colored, that somehow involves solving an equation that uses these polynomials. ",
  "translatedText": "따라서 주어진 픽셀이 어떻게 색칠되어야 하는지 알아낼 때 어떻게든 이러한 다항식을 사용하는 방정식을 푸는 것이 포함되는 것은 드문 일이 아닙니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 90.42,
  "end": 98.38
 },
 {
  "input": "Here let me give you one fun example. ",
  "translatedText": "여기서 재미있는 예를 하나 들어보겠습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 99.48,
  "end": 100.88
 },
 {
  "input": "When a computer renders text on the screen, those fonts are typically not defined using pixel values. ",
  "translatedText": "컴퓨터가 화면에 텍스트를 렌더링할 때 해당 글꼴은 일반적으로 픽셀 값을 사용하여 정의되지 않습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 101.16,
  "end": 107.04
 },
 {
  "input": "They're defined as a bunch of polynomial curves, what are known in the business as Bezier curves. ",
  "translatedText": "이는 업계에서 베지어 곡선으로 알려진 다항식 곡선의 묶음으로 정의됩니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 107.32,
  "end": 112.52
 },
 {
  "input": "And any of you who've messed around with vector graphics, maybe in some design software, would be well familiar with these kinds of curves. ",
  "translatedText": "그리고 일부 디자인 소프트웨어에서 벡터 그래픽을 사용해 본 적이 있는 분들이라면 이러한 종류의 곡선에 대해 잘 알고 계실 것입니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 113.4,
  "end": 119.7
 },
 {
  "input": "But to actually display one of them on the screen, you need a way to tell each one of the pixels of your screen whether it should be colored in or not. ",
  "translatedText": "그러나 실제로 그 중 하나를 화면에 표시하려면 화면의 각 픽셀에 색상을 지정해야 하는지 여부를 알려주는 방법이 필요합니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 120.42,
  "end": 127.68
 },
 {
  "input": "These curves can be displayed either with some kind of stroke width, or if they enclose a region, some kind of fill for that region. ",
  "translatedText": "이러한 곡선은 일종의 획 너비로 표시될 수 있으며, 영역을 둘러싸는 경우 해당 영역에 대한 일종의 채우기로 표시될 수 있습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 128.34,
  "end": 134.6
 },
 {
  "input": "But if you step back and really think about it, it's an interesting puzzle to figure out how each one of the pixels knows whether it should be colored in or not just based on the pure mathematical curve. ",
  "translatedText": "하지만 한발 물러서서 곰곰이 생각해보면, 순수한 수학적 곡선을 바탕으로 각 픽셀이 색칠되어야 하는지 아닌지를 어떻게 아는지 알아내는 것은 흥미로운 퍼즐입니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 135.32,
  "end": 144.88
 },
 {
  "input": "I mean, take the case of stroke width. ",
  "translatedText": "내 말은, 획 너비의 경우를 생각해 보겠습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 145.64,
  "end": 146.94
 },
 {
  "input": "This comes down to understanding how far away a given pixel is from this pure mathematical curve, which itself is some platonic ideal, it has zero width. ",
  "translatedText": "이는 주어진 픽셀이 이 순수한 수학적 곡선에서 얼마나 멀리 떨어져 있는지 이해하는 것으로 귀결됩니다. 이 곡선 자체는 일종의 플라톤적 이상이며 너비가 0입니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 147.32,
  "end": 156.14
 },
 {
  "input": "You would think of it as a parametric curve that has some parameter t. ",
  "translatedText": "매개변수 t가 있는 매개변수 곡선으로 생각하면 됩니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 156.7,
  "end": 159.92
 },
 {
  "input": "Now one thing that you could do to figure out this distance is to compute the distance between your pixel and a bunch of sample points on that curve, and then figure out the smallest. ",
  "translatedText": "이제 이 거리를 알아내기 위해 할 수 있는 한 가지는 픽셀과 해당 곡선의 여러 샘플 포인트 사이의 거리를 계산한 다음 가장 작은 것을 알아내는 것입니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 161.08,
  "end": 169.02
 },
 {
  "input": "But that's both inefficient and imprecise. ",
  "translatedText": "그러나 그것은 비효율적이고 부정확합니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 169.82,
  "end": 171.98
 },
 {
  "input": "Better is to get a little mathematical and acknowledge that this distance to the curve at all the possible points is itself some smooth function of the parameter. ",
  "translatedText": "더 나은 방법은 약간의 수학적 계산을 통해 가능한 모든 지점에서 곡선까지의 거리 자체가 매개변수의 부드러운 함수임을 인정하는 것입니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 172.46,
  "end": 180.66
 },
 {
  "input": "And as it happens, the square of that distance will itself be a polynomial, which makes it pretty nice to deal with. ",
  "translatedText": "그리고 공교롭게도 그 거리의 제곱은 그 자체로 다항식이므로 다루기가 꽤 좋습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 181.24,
  "end": 187.0
 },
 {
  "input": "And if this were meant to be a full lesson on rendering vector graphics, we could expand all that out and embrace the mess, but right now the only salient point that I want to highlight is that in principle, this function, whose minimum you want to know, is some polynomial. ",
  "translatedText": "그리고 이것이 벡터 그래픽 렌더링에 대한 완전한 강의라면 우리는 모든 것을 확장하고 혼란을 수용할 수 있습니다. 그러나 지금 제가 강조하고 싶은 유일한 두드러진 점은 원칙적으로 이 함수는 최소한의 기능을 원한다는 것입니다. 아는 것은 다항식입니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 187.82,
  "end": 200.78
 },
 {
  "input": "Finding this minimum, and hence determining how close the pixel is to the curve and whether it should get filled in, is now just a classic calculus problem. ",
  "translatedText": "이 최소값을 찾아 픽셀이 곡선에 얼마나 가까운지, 채워야 하는지 여부를 결정하는 것은 이제 고전적인 미적분 문제에 불과합니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 201.58,
  "end": 208.7
 },
 {
  "input": "What you do is figure out the slope of this function graph, which is to say its derivative, again some polynomial, and you ask, when does that equal zero? ",
  "translatedText": "당신이 하는 일은 이 함수 그래프의 기울기, 즉 도함수, 즉 다항식을 알아내는 것입니다. 그리고 언제 그것이 0이 되는지 묻습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 209.34,
  "end": 217.7
 },
 {
  "input": "So to actually carry out this seemingly simple task of just displaying a curve, wouldn't it be nice if you had a systematic and general way to figure out when a given polynomial equals zero? ",
  "translatedText": "따라서 실제로 곡선을 표시하는 간단해 보이는 이 작업을 수행하려면 주어진 다항식이 0이 되는 시점을 알아낼 수 있는 체계적이고 일반적인 방법이 있다면 좋지 않을까요? ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 218.98,
  "end": 229.9
 },
 {
  "input": "Of course we could draw 100 other examples from 100 other disciplines, I just want you to keep in mind that as we seek the roots of polynomials, even though we always display it in a way that's cleanly abstracted away from the messiness of any real-world problem, the task is hardly just an academic one. ",
  "translatedText": "물론 우리는 100개의 다른 분야에서 100개의 다른 예를 그릴 수 있습니다. 우리가 다항식의 근을 찾을 때 비록 우리가 항상 모든 실수의 지저분함에서 벗어나 깔끔하게 추상된 방식으로 표시하더라도 명심하시기 바랍니다. 세계 문제, 그 과제는 결코 학문적인 과제가 아닙니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 230.96,
  "end": 246.1
 },
 {
  "input": "But again, ask yourself, how do you actually compute one of those roots? ",
  "translatedText": "하지만 다시 스스로에게 물어보세요. 실제로 그 근 중 하나를 어떻게 계산합니까? ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 246.1,
  "end": 250.4
 },
 {
  "input": "If whatever problem you're working on leads you to a quadratic function, then happy days, you can use the quadratic formula we all know and love. ",
  "translatedText": "당신이 풀고 있는 어떤 문제가 당신을 이차 함수로 이끌어준다면, 행복한 하루 되세요. 우리 모두가 알고 사랑하는 이차 공식을 사용할 수 있습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 252.12,
  "end": 259.36
 },
 {
  "input": "As a fun side note, again relevant to root finding in computer graphics, I once had a Pixar engineer give me the estimate that considering how many lights were used in some of the scenes for the movie Coco, and given the nature of some of these per-pixel calculations when polynomially defined things like spheres are involved, the quadratic formula was easily used multiple trillions of times in the production of that film. ",
  "translatedText": "컴퓨터 그래픽의 뿌리 찾기와 관련된 재미있는 참고 사항으로, Pixar 엔지니어에게 영화 Coco의 일부 장면에서 사용된 조명의 수를 고려하고 이러한 일부 특성을 고려하여 추정치를 제시한 적이 있습니다. 구와 같이 다항식으로 정의된 것이 포함된 픽셀당 계산에서는 이차 공식이 해당 영화 제작에서 수조 번 쉽게 사용되었습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 260.18,
  "end": 281.98
 },
 {
  "input": "Now, when your problem leads you to a higher order polynomial, things start to get trickier. ",
  "translatedText": "이제 문제가 고차 다항식으로 이어지면 상황이 더욱 까다로워지기 시작합니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 283.42,
  "end": 287.6
 },
 {
  "input": "For cubic polynomials, there is also a formula, which Mathologer has done a wonderful video on, and there's even a quartic formula, something that solves degree 4 polynomials, although honestly that one is such a god-awful nightmare of a formula that essentially no one actually uses it in practice. ",
  "translatedText": "3차 다항식의 경우 Mathologer가 멋진 비디오를 제작한 공식도 있습니다. 심지어 4차 다항식을 푸는 4차 공식도 있습니다. 솔직히 말해서 그 공식은 본질적으로 아무 문제도 없는 끔찍한 악몽입니다. 실제로 실제로 사용합니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 288.12,
  "end": 302.98
 },
 {
  "input": "But after that, and I find this one of the most fascinating results in all of math, you cannot have an analogous formula to solve polynomials that have a degree 5 or more. ",
  "translatedText": "하지만 그 후에는 이것이 모든 수학에서 가장 흥미로운 결과 중 하나라고 생각합니다. 5차 이상의 다항식을 풀기 위한 유사한 공식을 가질 수는 없습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 304.06,
  "end": 313.22
 },
 {
  "input": "More specifically, for a pretty extensive set of standard functions, you can prove that there is no possible way that you can combine those functions together that allows you to plug in the coefficients of a quintic polynomial and always get out a root. ",
  "translatedText": "더 구체적으로 말하면, 매우 광범위한 표준 함수 세트의 경우, 5차 다항식의 계수를 연결하고 항상 근을 구할 수 있도록 이러한 함수를 결합할 수 있는 방법이 없다는 것을 증명할 수 있습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 314.02,
  "end": 326.5
 },
 {
  "input": "This is known as the unsolvability of the quintic, which is a whole other can of worms, we can hopefully get into it some other time, but in practice it kind of doesn't matter, because we have algorithms to approximate solutions to these kinds of equations with whatever level of precision you want. ",
  "translatedText": "이것은 완전히 다른 웜 캔인 5분류의 해결 불가능성으로 알려져 있습니다. 나중에 이 문제에 대해 알아볼 수 있기를 바랍니다. 그러나 실제로는 중요하지 않습니다. 왜냐하면 우리는 이러한 종류의 솔루션을 근사화하는 알고리즘을 가지고 있기 때문입니다. 원하는 수준의 정밀도로 방정식을 계산할 수 있습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 327.36,
  "end": 342.62
 },
 {
  "input": "A common one, and the main topic for you and me today, is Newton's method. ",
  "translatedText": "오늘 여러분과 저에게 공통적이고 주요 주제는 뉴턴의 방법입니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 343.24,
  "end": 347.1
 },
 {
  "input": "And yes, this is what will lead us to the fractals, but I want you to pay attention to just how innocent and benign the whole procedure seems at first. ",
  "translatedText": "그리고 그렇습니다. 이것이 우리를 프랙탈로 이끄는 것입니다. 하지만 처음에는 전체 절차가 얼마나 순진하고 온화해 보이는지 주목해 보시기 바랍니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 347.62,
  "end": 354.52
 },
 {
  "input": "The algorithm begins with a random guess, let's call it x0. ",
  "translatedText": "알고리즘은 무작위 추측으로 시작합니다. 이를 x0이라고 하겠습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 355.24,
  "end": 358.86
 },
 {
  "input": "Almost certainly, the output of your polynomial at x0 is not 0, so you haven't found a solution, it's some other value visible as the height of this graph at that point. ",
  "translatedText": "거의 확실하게 x0에서의 다항식의 출력은 0이 아니므로 솔루션을 찾지 못했습니다. 해당 지점에서 이 그래프의 높이로 표시되는 다른 값입니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 359.66,
  "end": 367.78
 },
 {
  "input": "So to improve the guess, the idea is to ask, when does a linear approximation to the function around that value equal 0? ",
  "translatedText": "따라서 추측을 개선하기 위해 아이디어는 해당 값 주변의 함수에 대한 선형 근사가 언제 0이 되는지 묻는 것입니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 368.38,
  "end": 375.32
 },
 {
  "input": "In other words, if you were to draw a tangent line to the graph at this point, when does that tangent line cross the x-axis? ",
  "translatedText": "즉, 이 시점에서 그래프에 접선을 그리면 그 접선은 언제 x축과 교차합니까? ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 376.02,
  "end": 381.82
 },
 {
  "input": "Now assuming this tangent line is a decent approximation of the function in the loose vicinity of some true root, the place where this approximation equals 0 should take you closer to that true root. ",
  "translatedText": "이제 이 접선이 실제 근의 느슨한 부근에 있는 함수의 적절한 근사라고 가정하면, 이 근사가 0과 같은 곳이 실제 근에 더 가까워질 것입니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 383.1,
  "end": 392.86
 },
 {
  "input": "As long as you're able to take a derivative of this function, and with polynomials you'll always be able to do that, you can concretely compute the slope of this line. ",
  "translatedText": "이 함수의 도함수를 얻을 수 있고 다항식을 사용하여 항상 그렇게 할 수 있는 한 이 선의 기울기를 구체적으로 계산할 수 있습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 393.9,
  "end": 401.12
 },
 {
  "input": "So here's where the active viewers among you might want to pause and ask, how do you figure out the difference between the current guess and the improved guess? ",
  "translatedText": "활성 시청자가 잠시 멈춰서 현재 추측과 개선된 추측 간의 차이를 어떻게 파악하는지 묻고 싶을 수 있습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 402.1,
  "end": 408.3
 },
 {
  "input": "What is the size of this step? ",
  "translatedText": "이 단계의 규모는 얼마입니까? ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 408.52,
  "end": 410.06
 },
 {
  "input": "One way to think of it is to consider the fact that the slope of this tangent line, its rise over run, looks like the height of this graph divided by the length of that step. ",
  "translatedText": "이를 생각하는 한 가지 방법은 이 접선의 기울기, 즉 상승에 대한 상승이 이 그래프의 높이를 해당 계단의 길이로 나눈 것과 같다는 사실을 고려하는 것입니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 410.9,
  "end": 419.76
 },
 {
  "input": "But on the other hand, of course, the slope of the tangent line is the derivative of the polynomial at that point. ",
  "translatedText": "그러나 반면에 접선의 기울기는 해당 점에서의 다항식의 도함수입니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 420.44,
  "end": 425.1
 },
 {
  "input": "If we kind of rearrange this equation here, this gives you a super concrete way that you can compute that step size. ",
  "translatedText": "여기서 이 방정식을 다시 정리하면 해당 단계 크기를 계산할 수 있는 매우 구체적인 방법이 제공됩니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 425.84,
  "end": 431.4
 },
 {
  "input": "So the next guess, which we might call x1, is the previous guess, adjusted by this step size. ",
  "translatedText": "따라서 x1이라고 부를 수 있는 다음 추측은 이 단계 크기로 조정된 이전 추측입니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 432.14,
  "end": 437.76
 },
 {
  "input": "And after that, you can just repeat the process. ",
  "translatedText": "그 후에는 이 과정을 반복하면 됩니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 438.4,
  "end": 440.98
 },
 {
  "input": "You compute the value of this function and the slope at this new guess, which gives you a new linear approximation, and then you make the next guess, x2, wherever that tangent line crosses the x-axis. ",
  "translatedText": "새로운 선형 근사치를 제공하는 이 새로운 추측에서 이 함수의 값과 기울기를 계산한 후 해당 접선이 x축과 교차하는 곳마다 다음 추측인 x2를 만듭니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 441.52,
  "end": 452.08
 },
 {
  "input": "And then apply the same calculation to x2, and this gives you x3. ",
  "translatedText": "그런 다음 동일한 계산을 x2에 적용하면 x3이 됩니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 452.78,
  "end": 455.98
 },
 {
  "input": "And before too long, you find yourself extremely close to a true root, pretty much as close as you could ever want to be. ",
  "translatedText": "그리고 머지않아 당신은 진정한 뿌리에 극도로 가까워지고, 당신이 원하는 만큼 가까워지는 자신을 발견하게 됩니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 456.44,
  "end": 462.18
 },
 {
  "input": "It's always worth gut checking that a formula actually makes sense, and in this case, hopefully it does. ",
  "translatedText": "공식이 실제로 의미가 있는지 직감적으로 확인하는 것은 항상 가치가 있으며, 이 경우에는 그럴 수 있기를 바랍니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 464.76,
  "end": 469.5
 },
 {
  "input": "If p of x is large, meaning the graph is really high, you need to take a bigger step to get down to a root. ",
  "translatedText": "x의 p가 크다면, 즉 그래프가 매우 높다는 의미이며, 루트에 도달하려면 더 큰 단계를 거쳐야 합니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 469.84,
  "end": 475.36
 },
 {
  "input": "But if p' of x is also large, meaning the graph is quite steep, you should maybe ease off on just how big you make that step. ",
  "translatedText": "그러나 x의 p'도 크다면, 즉 그래프가 매우 가파르다는 것을 의미하므로, 그 단계를 얼마나 크게 만드는지에 대해 완화해야 할 것입니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 475.98,
  "end": 483.28
 },
 {
  "input": "Now as the name suggests, this was a method that Newton used to solve polynomial expressions. ",
  "translatedText": "이름에서 알 수 있듯이 이것은 뉴턴이 다항식을 풀기 위해 사용한 방법이었습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 484.52,
  "end": 488.76
 },
 {
  "input": "But he sort of made it look a lot more complicated than it needed to be, and a fellow named Joseph Rafson published a much simpler version, more like what you and I are looking at now, so you also often hear this algorithm called the Newton-Rafson method. ",
  "translatedText": "하지만 그는 필요한 것보다 훨씬 더 복잡해 보이도록 만들었고 Joseph Rafson이라는 사람이 지금 여러분과 제가 보고 있는 것과 더 유사한 훨씬 간단한 버전을 출판했습니다. 그래서 여러분은 또한 뉴턴이라는 알고리즘을 자주 듣게 됩니다. -라프슨 방식. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 488.76,
  "end": 501.56
 },
 {
  "input": "These days it's a common topic in calculus classes. ",
  "translatedText": "요즘 미적분학 수업에서 자주 나오는 주제입니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 502.64,
  "end": 504.92
 },
 {
  "input": "One nice little exercise to try to get a feel for it, by the way, is to try using this method to approximate square roots by hand. ",
  "translatedText": "그런데 그것에 대한 느낌을 얻기 위한 좋은 작은 연습 중 하나는 이 방법을 사용하여 손으로 제곱근을 근사화하는 것입니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 505.36,
  "end": 511.52
 },
 {
  "input": "But what most calculus students don't see, which is unfortunate, is just how deep things can get when you let yourself play around with this seemingly simple procedure and start kind of picking at some of its scabs. ",
  "translatedText": "그러나 불행하게도 대부분의 미적분학 학생들이 보지 못하는 것은 겉으로 보기에 간단해 보이는 이 절차를 가지고 놀면서 딱지 중 일부를 따기 시작할 때 상황이 얼마나 깊어질 수 있는지입니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 513.18,
  "end": 524.3
 },
 {
  "input": "You see, while Newton's method works great if you start near a root, where it converges really quickly, if your initial guess is far from a root, it can have a couple foibles. ",
  "translatedText": "알다시피, 뉴턴의 방법은 매우 빠르게 수렴하는 근 근처에서 시작하면 훌륭하게 작동하지만, 초기 추측이 근에서 멀리 떨어져 있으면 몇 가지 약점이 있을 수 있습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 525.38,
  "end": 533.96
 },
 {
  "input": "For example, let's take the function we were just looking at, but shift it upward, and play the same game with the same initial guess. ",
  "translatedText": "예를 들어 방금 보고 있던 함수를 위쪽으로 이동하고 동일한 초기 추측으로 동일한 게임을 플레이해 보겠습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 534.92,
  "end": 541.0
 },
 {
  "input": "Notice how the sequence of new guesses that we're getting kind of bounces around the local minimum of this function sitting above the x-axis. ",
  "translatedText": "우리가 x축 위에 있는 이 함수의 로컬 최소값 주위에서 어떻게 바운스되는지에 대한 새로운 추측의 시퀀스에 주목하세요. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 547.4,
  "end": 554.56
 },
 {
  "input": "This should kind of make sense, I mean a linear approximation of the function around these values all the way to the right is pretty much entirely unrelated to the nature of the function around the one true root that it has off to the left, so they're sort of giving you no useful information about that true root. ",
  "translatedText": "이것은 일종의 의미가 있습니다. 오른쪽 끝까지 이 값 주위의 함수에 대한 선형 근사치는 왼쪽에 있는 하나의 실제 근 주위의 함수의 특성과 거의 전혀 관련이 없다는 것을 의미합니다. 그 진정한 뿌리에 대한 유용한 정보를 제공하지 않습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 555.46,
  "end": 571.24
 },
 {
  "input": "It's only when this process just happens to throw the new guess off far enough to the left, by chance, that the sequence of new guesses does anything productive and actually approaches that true root. ",
  "translatedText": "이 과정이 우연히 새로운 추측을 충분히 왼쪽으로 던져버릴 때만 새로운 추측의 순서가 생산적인 작업을 수행하고 실제로 실제 루트에 접근합니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 571.88,
  "end": 580.9
 },
 {
  "input": "Where things get especially interesting is if we ask about finding roots in the complex plane. ",
  "translatedText": "특히 흥미로운 점은 복소 평면에서 뿌리를 찾는 것에 대해 묻는 경우입니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 582.68,
  "end": 587.52
 },
 {
  "input": "Even if a polynomial like the one shown here has only a single real number root, you'll always be able to factor this polynomial into five terms like this if you allow these roots to potentially be complex numbers. ",
  "translatedText": "여기에 표시된 것과 같은 다항식에 단 하나의 실수 근만 있는 경우에도 이러한 근이 잠재적으로 복소수가 될 수 있도록 허용하면 항상 이 다항식을 이와 같은 5개의 항으로 인수분해할 수 있습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 588.38,
  "end": 599.62
 },
 {
  "input": "This is the famous fundamental theorem of algebra. ",
  "translatedText": "이것이 대수학의 유명한 기본 정리이다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 600.1,
  "end": 602.1
 },
 {
  "input": "Now, in the happy-go-lucky land of functions with real number inputs and real number outputs, where you can picture the association between inputs and outputs as a graph, Newton's method has this really nice visual meaning with tangent lines and intersecting the x-axis. ",
  "translatedText": "이제 입력과 출력 사이의 연관성을 그래프로 그릴 수 있는 실수 입력과 실수 출력이 있는 행복한 함수의 세계에서 뉴턴의 방법은 접선과 x를 교차하는 매우 멋진 시각적 의미를 갖습니다. -중심선. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 602.82,
  "end": 615.52
 },
 {
  "input": "But if you want to allow these inputs to be any complex number, which means our corresponding outputs might also be any complex number, you can't think about tangent lines and graphs anymore. ",
  "translatedText": "그러나 이러한 입력을 복소수로 허용하려는 경우(해당 출력도 복소수일 수 있음을 의미) 더 이상 접선과 그래프를 생각할 수 없습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 616.1,
  "end": 625.52
 },
 {
  "input": "But the formula doesn't really care how you visualize it. ",
  "translatedText": "그러나 공식은 시각화 방법에 크게 영향을 주지 않습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 626.2,
  "end": 629.1
 },
 {
  "input": "You can still play the same game, starting with a random guess, and evaluating the polynomial at this point, as well as its derivative, then using this update rule to generate a new guess. ",
  "translatedText": "무작위 추측으로 시작하여 이 시점의 다항식과 그 도함수를 평가한 다음 이 업데이트 규칙을 사용하여 새로운 추측을 생성하는 동일한 게임을 계속 플레이할 수 있습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 629.1,
  "end": 640.64
 },
 {
  "input": "And hopefully that new guess is closer to the true root. ",
  "translatedText": "그리고 그 새로운 추측이 실제 뿌리에 더 가깝기를 바랍니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 641.16,
  "end": 643.62
 },
 {
  "input": "But I do want to be clear, even if we can't visualize these steps with a tangent line, it really is the same logic. ",
  "translatedText": "그러나 저는 이러한 단계를 접선으로 시각화할 수 없더라도 실제로는 동일한 논리라는 점을 분명히 하고 싶습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 645.46,
  "end": 651.18
 },
 {
  "input": "We're figuring out where a linear approximation of the function around your guess would equal zero, and then you use that zero of the linear approximation as your next guess. ",
  "translatedText": "우리는 귀하의 추측에 대한 함수의 선형 근사치가 0이 되는 위치를 파악하고 있으며, 선형 근사치의 0을 다음 추측으로 사용합니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 651.18,
  "end": 661.18
 },
 {
  "input": "It's not like we're blindly applying the rule to a new context with no reason to expect it to work. ",
  "translatedText": "규칙이 작동할 것이라고 기대할 이유 없이 새로운 컨텍스트에 규칙을 맹목적으로 적용하는 것과는 다릅니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 661.48,
  "end": 666.32
 },
 {
  "input": "And indeed, with at least the one I'm showing here after a few iterations, you can see that we land on a value whose corresponding output is essentially zero. ",
  "translatedText": "그리고 실제로 몇 번의 반복을 거친 후 여기에 표시된 최소한의 결과를 통해 해당 출력이 기본적으로 0인 값에 도달했음을 알 수 있습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 666.98,
  "end": 674.5
 },
 {
  "input": "Now here's the fun part. ",
  "translatedText": "이제 재미있는 부분이 있습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 675.9,
  "end": 677.2
 },
 {
  "input": "Let's apply this idea to many different possible initial guesses. ",
  "translatedText": "이 아이디어를 다양한 초기 추측에 적용해 보겠습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 677.2,
  "end": 680.86
 },
 {
  "input": "For reference, I'll put up the five true roots of this particular polynomial in the complex plane. ",
  "translatedText": "참고로, 나는 이 특정 다항식의 5개의 실제근을 복소평면에 올려 놓을 것입니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 681.78,
  "end": 686.54
 },
 {
  "input": "With each iteration, each one of our little dots takes some step based on Newton's method. ",
  "translatedText": "반복할 때마다 작은 점 하나 하나가 뉴턴의 방법을 기반으로 몇 가지 단계를 수행합니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 687.5,
  "end": 692.0
 },
 {
  "input": "Most of the dots will quickly converge to one of the five true roots, but there are some noticeable stragglers which seem to spend a while bouncing around. ",
  "translatedText": "대부분의 점은 빠르게 5개의 실제 뿌리 중 하나로 수렴되지만, 이리저리 튀는 데 시간이 걸리는 것처럼 보이는 눈에 띄는 낙오자가 있습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 692.74,
  "end": 700.4
 },
 {
  "input": "In particular, notice how the ones that are trapped on the positive real number line? ",
  "translatedText": "특히 양의 실수선에 갇힌 것들이 어떻게 나타나는지 주목하세요. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 701.0,
  "end": 705.08
 },
 {
  "input": "They look a little bit lost, and this is exactly what we already saw before for this same polynomial when we were looking at the real number case with its graph. ",
  "translatedText": "그것들은 약간 길을 잃은 것처럼 보입니다. 그리고 이것은 우리가 그래프로 실수의 경우를 볼 때 동일한 다항식에 대해 이미 본 것과 정확히 같습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 705.46,
  "end": 713.14
 },
 {
  "input": "Now what I'm going to do is color each one of these dots based on which of those five roots it ended up closest to, and then we'll kind of roll back the clock so that every dot goes back to where it started. ",
  "translatedText": "이제 제가 할 일은 5개의 뿌리 중 어느 뿌리에 가장 가까운지에 따라 각 점에 색을 칠하는 것입니다. 그런 다음 모든 점이 시작된 곳으로 돌아가도록 시계를 되돌릴 것입니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 716.44,
  "end": 727.18
 },
 {
  "input": "Now as I've done it here, this isn't quite enough resolution to get the full story, so let me show you what it would look like if we started with an even finer grid of initial guesses and played the same game, applying Newton's method a whole bunch of times, letting each root march forward, coloring each dot based on what root it lands on, then rolling back the clock to see where it originally came from. ",
  "translatedText": "이제 여기서 수행한 대로 전체 내용을 파악하기에는 해상도가 충분하지 않습니다. 따라서 더 미세한 초기 추측 그리드로 시작하여 동일한 게임을 실행하고 적용하면 어떤 모습일지 보여드리겠습니다. 뉴턴의 방법은 여러 번 반복되었습니다. 각 뿌리가 앞으로 나아가도록 하고, 뿌리가 있는 뿌리에 따라 각 점에 색칠을 한 다음, 시계를 되돌려 원래 어디에서 왔는지 확인합니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 729.24,
  "end": 748.76
 },
 {
  "input": "But even this isn't really a high enough resolution to appreciate the pattern. ",
  "translatedText": "그러나 이것조차도 패턴을 감상할 만큼 충분한 해상도는 아닙니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 749.4,
  "end": 752.78
 },
 {
  "input": "If we did this process for every single pixel on the plane, here's what you would get. ",
  "translatedText": "평면의 모든 단일 픽셀에 대해 이 프로세스를 수행하면 다음과 같은 결과를 얻을 수 있습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 753.18,
  "end": 758.38
 },
 {
  "input": "And at this level of detail the color scheme is a little jarring to my eye at least, so let me calm it down a little. ",
  "translatedText": "그리고 이 수준의 디테일에서는 색 구성표가 적어도 내 눈에는 약간 거슬리므로 조금 진정시키겠습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 760.16,
  "end": 765.5
 },
 {
  "input": "Really whatever resolution I try to use to show this to you here could never possibly be enough, because the finer details of the shape we get go on with endless complexity. ",
  "translatedText": "여기에서 이것을 보여주기 위해 제가 사용하려고 하는 해상도가 무엇이든 결코 충분하지 않을 것입니다. 왜냐하면 우리가 얻는 모양의 더 미세한 세부 사항은 끝없이 복잡하기 때문입니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 766.32,
  "end": 775.9
 },
 {
  "input": "But take a moment to think about what this is actually saying. ",
  "translatedText": "그러나 이것이 실제로 무엇을 말하는지 잠시 생각해 보십시오. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 781.76,
  "end": 784.58
 },
 {
  "input": "It means that there are regions in the complex plane where if you slightly adjust that seed value, you know, you just kind of bump it to the side by 1,1 millionth or 1,1 trillionth, it can completely change which of the five true roots it ends up landing on. ",
  "translatedText": "이는 복잡한 평면에 해당 시드 값을 약간 조정하면 110만분의 1 또는 1조 1천분의 1만큼 옆으로 치우면 5개 중 어느 것이 완전히 바뀔 수 있는 영역이 있다는 것을 의미합니다. 진정한 뿌리는 결국 착륙하게 됩니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 784.58,
  "end": 797.58
 },
 {
  "input": "We saw some foreshadowing of this kind of chaos with the real graph and the problematic guess shown earlier, but picturing all of this in the complex plane really shines a light on just how unpredictable this kind of root-finding algorithm can be, and how there are whole swaths of initial values where this sort of unpredictability will take place. ",
  "translatedText": "우리는 앞서 보여드린 실제 그래프와 문제가 있는 추측을 통해 이런 종류의 혼돈에 대한 전조를 보았지만, 이 모든 것을 복잡한 평면에 그려보면 이러한 종류의 근 찾기 알고리즘이 얼마나 예측 불가능할 수 있는지, 그리고 어떻게 존재하는지 알 수 있습니다. 이런 종류의 예측 불가능성이 발생하는 초기 값의 전체 범위입니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 798.4,
  "end": 815.98
 },
 {
  "input": "Now if I grab one of these roots and change it around, meaning that we're using a different polynomial for the process, you can see how the resulting fractal pattern changes. ",
  "translatedText": "이제 이러한 근 중 하나를 잡고 이를 변경하면(즉, 프로세스에 대해 다른 다항식을 사용한다는 의미) 결과 프랙탈 패턴이 어떻게 변경되는지 확인할 수 있습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 817.08,
  "end": 824.74
 },
 {
  "input": "And notice for example how the regions around a given root always have the same color, since those are the points that are close enough to the root where this linear approximation scheme works as a way of finding that root with no problem. ",
  "translatedText": "예를 들어 주어진 근 주변 영역이 항상 동일한 색상을 갖는 방법에 주목하세요. 왜냐하면 이 선형 근사 방식이 문제 없이 근을 찾는 방법으로 작동하는 근에 충분히 가까운 지점이기 때문입니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 825.54,
  "end": 837.56
 },
 {
  "input": "All of the chaos seems to be happening at the boundaries between the regions. ",
  "translatedText": "모든 혼란은 지역 간의 경계에서 일어나는 것 같습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 838.18,
  "end": 842.2
 },
 {
  "input": "Remember that. ",
  "translatedText": "기억. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 842.72,
  "end": 843.32
 },
 {
  "input": "And it seems like no matter where I place these roots, those fractal boundaries are always there. ",
  "translatedText": "그리고 이 뿌리를 어디에 두든 프랙탈 경계는 항상 거기에 있는 것 같습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 844.18,
  "end": 848.48
 },
 {
  "input": "It clearly wasn't just some one-off for the polynomial we happened to start with, it seems to be a general fact for any given polynomial. ",
  "translatedText": "이것은 분명히 우리가 처음 시작했던 다항식에 대한 일회성 문제가 아니라 주어진 다항식에 대한 일반적인 사실인 것 같습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 848.98,
  "end": 854.96
 },
 {
  "input": "Another facet we can tweak here just to better illustrate what's going on is how many steps of Newton's method we're using. ",
  "translatedText": "무슨 일이 일어나고 있는지 더 잘 설명하기 위해 여기에서 조정할 수 있는 또 다른 측면은 우리가 사용하는 뉴턴 방법의 단계 수입니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 856.8,
  "end": 862.28
 },
 {
  "input": "For example, if I had the computer just take zero steps, meaning it just colors each point of the plane based on whatever root it's already closest to, this is what we'd get. ",
  "translatedText": "예를 들어, 컴퓨터가 아무런 단계도 거치지 않도록 했다면, 즉 이미 가장 가까운 루트를 기준으로 평면의 각 점에 색을 칠한다면 이것이 우리가 얻게 될 결과입니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 862.98,
  "end": 871.28
 },
 {
  "input": "And this kind of diagram actually has a special name, it's called a Voronoi Diagram. ",
  "translatedText": "그리고 이런 종류의 다이어그램에는 실제로 보로노이 다이어그램(Voronoi Diagram)이라는 특별한 이름이 있습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 871.66,
  "end": 875.06
 },
 {
  "input": "And if we let each point of the plane take a single step of Newton's method, and then color it based on what root that single step result is closest to, here's what we would get. ",
  "translatedText": "그리고 평면의 각 점에 뉴턴 방법의 단일 단계를 적용하고 그 단일 단계 결과가 가장 가까운 근에 따라 색상을 지정하면 다음과 같은 결과를 얻을 수 있습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 876.06,
  "end": 885.2
 },
 {
  "input": "Similarly, if we allow for two steps, we get a slightly more intricate pattern, and so on and so on, where the more steps you allow, the more intricate an image you get, bringing us closer to the original fractal. ",
  "translatedText": "마찬가지로, 두 단계를 허용하면 약간 더 복잡한 패턴을 얻게 되며, 더 많은 단계를 허용할수록 이미지가 더 복잡해지고 원래 프랙탈에 더 가까워집니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 890.18,
  "end": 901.32
 },
 {
  "input": "And this is important, keep in mind that the true shape we're studying here is not any one of these, it's the limit as we allow for an arbitrarily large number of iterations. ",
  "translatedText": "그리고 이것이 중요합니다. 여기서 연구하고 있는 실제 모양은 이들 중 어느 것도 아니며 임의로 많은 반복을 허용하는 한계라는 점을 명심하십시오. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 901.86,
  "end": 910.12
 },
 {
  "input": "At this point, there are so many questions we might ask. ",
  "translatedText": "이 시점에서 우리가 물어볼 질문이 너무 많습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 914.34,
  "end": 917.02
 },
 {
  "input": "Maybe you want to try this out with some other polynomials, see how general it is, or maybe you want to dig deeper into what dynamics are exactly possible with these iterated points, or see if there's connections with some other pieces of math that have a similar theme. ",
  "translatedText": "아마도 다른 다항식을 사용하여 이것을 시험해 보고 싶거나, 그것이 얼마나 일반적인지 확인하고 싶을 수도 있고, 이러한 반복된 점으로 정확히 어떤 동역학이 가능한지 더 깊이 파고들거나, 다음과 같은 다른 수학 조각과의 연관성이 있는지 확인하고 싶을 수도 있습니다. 비슷한 테마. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 917.46,
  "end": 930.0
 },
 {
  "input": "But I think the most pertinent question should be something like, what the f*** is going on here? ",
  "translatedText": "하지만 내 생각에 가장 적절한 질문은 '여기서 도대체 무슨 일이 벌어지고 있는 거지?'와 같은 것이어야 한다고 생각합니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 930.9,
  "end": 935.88
 },
 {
  "input": "I mean, all we're doing here is repeatedly solving linear approximations. ",
  "translatedText": "내 말은, 우리가 여기서 하는 일은 반복적으로 선형 근사치를 푸는 것뿐입니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 936.4,
  "end": 940.4
 },
 {
  "input": "Why would that produce something that's so endlessly complicated? ",
  "translatedText": "왜 그렇게 끝없이 복잡한 것을 생산하겠습니까? ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 940.88,
  "end": 943.62
 },
 {
  "input": "It almost feels like the underlying rule here just shouldn't carry enough information to actually produce an image like this. ",
  "translatedText": "여기의 기본 규칙은 실제로 이와 같은 이미지를 생성하는 데 충분한 정보를 전달해서는 안 되는 것처럼 느껴집니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 944.16,
  "end": 949.66
 },
 {
  "input": "And before seeing this, don't you think a reasonable initial guess might have been that each seed value simply tends towards whichever root it's closest to? ",
  "translatedText": "그리고 이것을 보기 전에, 합리적인 초기 추측은 각 시드 값이 가장 가까운 루트를 향하는 경향이 있다는 것이었을 것이라고 생각하지 않습니까? ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 950.18,
  "end": 957.76
 },
 {
  "input": "And in that case, you know, if you colored each point based on the root it lands on and move it back to the original position, the final image would look like one of these Voronoi diagrams, with straight line boundaries. ",
  "translatedText": "그리고 이 경우 각 점의 뿌리를 기준으로 색상을 지정하고 원래 위치로 다시 이동하면 최종 이미지는 직선 경계가 있는 보로노이 다이어그램 중 하나처럼 보일 것입니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 958.32,
  "end": 968.16
 },
 {
  "input": "And since I referenced earlier the unsolvability of the quintic, maybe you would wonder if the complexity here has anything to do with that. ",
  "translatedText": "그리고 앞서 내가 5차의 풀 수 없음을 언급했으므로 아마도 여기의 복잡성이 그것과 관련이 있는지 궁금할 것입니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 969.2,
  "end": 975.6
 },
 {
  "input": "That would be cool, but they're essentially unrelated ideas. ",
  "translatedText": "그러면 좋겠지만 본질적으로 서로 관련이 없는 아이디어입니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 975.92,
  "end": 978.68
 },
 {
  "input": "In fact, using only degree-5 polynomials so far might have been a little misleading. ",
  "translatedText": "사실 지금까지 5차 다항식만 사용하는 것은 약간 오해의 소지가 있을 수 있습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 979.08,
  "end": 983.36
 },
 {
  "input": "Watch what happens if we play the same game, but with a cubic polynomial, with three roots somewhere in the complex plane. ",
  "translatedText": "복소 평면 어딘가에 세 개의 근이 있는 3차 다항식을 사용하여 동일한 게임을 하면 어떤 일이 일어나는지 살펴보세요. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 984.0,
  "end": 989.84
 },
 {
  "input": "Notice how, again, while most points nestle into a root, some of them are kind of flying all over the place more chaotically. ",
  "translatedText": "대부분의 점은 루트에 자리잡고 있지만 일부 점은 좀 더 혼란스럽게 여기저기로 날아다니는 모습을 다시 한 번 살펴보세요. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 990.86,
  "end": 997.38
 },
 {
  "input": "In fact, those ones are the most noticeable ones in an animation like this, with the ones going towards the roots just quietly nestled in in their ending points. ",
  "translatedText": "사실 이런 애니메이션에서 가장 눈에 띄는 것은 바로 뿌리를 향해 가는 것이 엔딩 지점에 조용히 자리잡은 것입니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 998.04,
  "end": 1004.5
 },
 {
  "input": "And again, if we stopped this at some number of iterations and we colored all the points based on what root they're closest to, and roll back the clock, the relevant picture for all possible starting points forms this fractal pattern with infinite detail. ",
  "translatedText": "그리고 다시, 몇 번의 반복에서 이것을 멈추고 가장 가까운 루트를 기준으로 모든 점을 색칠하고 시계를 되돌리면 가능한 모든 시작점에 대한 관련 그림이 무한한 세부 묘사로 이 프랙탈 패턴을 형성합니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1005.16,
  "end": 1018.72
 },
 {
  "input": "However, quadratic polynomials with only two roots are different. ",
  "translatedText": "그러나 근이 2개인 이차 다항식은 다릅니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1025.84,
  "end": 1029.38
 },
 {
  "input": "In that case, each seed value does simply tend towards whichever root it's closest to, the way you might expect. ",
  "translatedText": "이 경우 각 시드 값은 예상대로 가장 가까운 루트를 향하는 경향이 있습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1029.82,
  "end": 1035.36
 },
 {
  "input": "There is a little bit of meandering behavior from all the points that are an equal distance from each root, it's kind of like they're not able to decide which one to go to, but that's just a single line of points, and when we play the game of coloring, the diagram we end up with is decidedly more boring. ",
  "translatedText": "각 루트에서 동일한 거리에 있는 모든 점에서 약간의 구불구불한 동작이 있습니다. 이는 어느 점으로 갈지 결정할 수 없는 것과 비슷하지만 이는 점의 단일 선일 뿐이며, 색칠 게임을 하다 보면 우리가 얻게 되는 다이어그램은 확실히 더 지루해집니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1036.32,
  "end": 1050.66
 },
 {
  "input": "So something new seems to happen when you jump from 2 to 3, and the question is what, exactly? ",
  "translatedText": "따라서 2에서 3으로 점프하면 새로운 일이 일어나는 것 같습니다. 질문은 정확히 무엇입니까? ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1052.06,
  "end": 1056.82
 },
 {
  "input": "If you had asked me a month ago, I probably would have shrugged and just said, you know, math is what it is, sometimes the answers look simple, sometimes not, it's not always clear what it would mean to ask why in a setting like this. ",
  "translatedText": "한 달 전에 저에게 물으셨다면 저는 아마도 어깨를 으쓱하고 이렇게 대답했을 것입니다. 수학은 원래 그런 것입니다. 대답은 간단해 보일 때도 있고 그렇지 않을 때도 있습니다. 환경에서 왜 묻는 것이 무엇을 의미하는지 항상 명확하지는 않습니다. 이와 같이. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1057.64,
  "end": 1068.35
 },
 {
  "input": "But I would have been wrong, there actually is a reason we can give for why this image has to look as complicated as it does. ",
  "translatedText": "하지만 내 생각은 틀렸을 것이다. 이 이미지가 왜 그렇게 복잡해 보이는지에 대해 우리가 제시할 수 있는 이유가 실제로 있다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1068.35,
  "end": 1075.27
 },
 {
  "input": "You see, there's a very peculiar property that we can prove this diagram must have. ",
  "translatedText": "보시다시피, 이 다이어그램이 가지고 있음을 증명할 수 있는 매우 독특한 속성이 있습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1075.93,
  "end": 1080.19
 },
 {
  "input": "Focus your attention on just one of the colored regions, say this blue one, in other words, the set of all points that eventually tend towards just one particular root of the polynomial. ",
  "translatedText": "색칠된 영역 중 하나, 즉 이 파란색 영역, 즉 결국 다항식의 하나의 특정 근을 향하는 모든 점 집합에 주의를 집중하세요. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1080.85,
  "end": 1089.97
 },
 {
  "input": "Now consider the boundary of that region, which for the example shown on screen has this kind of nice three-fold symmetry. ",
  "translatedText": "이제 해당 영역의 경계를 생각해 보세요. 화면에 표시된 예에서는 이러한 종류의 멋진 3중 대칭이 있습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1090.51,
  "end": 1096.43
 },
 {
  "input": "What's surprising is that if you look at any other color and consider its boundary, you get precisely the same set. ",
  "translatedText": "놀라운 점은 다른 색상을 보고 그 경계를 고려하면 정확히 동일한 세트를 얻게 된다는 것입니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1097.33,
  "end": 1103.61
 },
 {
  "input": "Now when I say the word boundary, you probably have an intuitive sense of what it means, but mathematicians have a pretty clever way to formalize it, and this makes it easier to reason about in the context of more wild sets like our fractal. ",
  "translatedText": "이제 제가 경계라는 단어를 말할 때 여러분은 그것이 무엇을 의미하는지 직관적으로 이해하실 것입니다. 하지만 수학자들은 이를 형식화하는 매우 영리한 방법을 가지고 있으며 이는 프랙탈과 같은 더 많은 야생 집합의 맥락에서 추론하기를 더 쉽게 만듭니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1105.45,
  "end": 1115.97
 },
 {
  "input": "We say that a point is on the boundary of a set if when you draw a small circle centered at that point, no matter how small, it will always contain points that are both inside that set and outside. ",
  "translatedText": "해당 점을 중심으로 작은 원을 그릴 때 아무리 작더라도 항상 해당 집합 내부와 외부 모두에 있는 점을 포함하면 점이 집합의 경계에 있다고 말합니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1116.43,
  "end": 1127.09
 },
 {
  "input": "So if you have a point that's on the interior, a small enough circle would eventually only contain points inside the set, and for a point on the exterior, a small enough circle contains no points of the set at all. ",
  "translatedText": "따라서 내부에 점이 있는 경우 충분히 작은 원에는 결국 집합 내부의 점만 포함되고 외부에 있는 점의 경우 충분히 작은 원에는 집합의 점이 전혀 포함되지 않습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1127.89,
  "end": 1138.11
 },
 {
  "input": "But when it's on the boundary, what it means to be on the boundary is that your tiny tiny circles will always contain both. ",
  "translatedText": "그러나 그것이 경계에 있을 때, 경계에 있다는 것이 의미하는 바는 당신의 아주 작은 원이 항상 두 가지를 모두 포함한다는 것입니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1138.61,
  "end": 1144.55
 },
 {
  "input": "So looking back at our property, one way to read it is to say that if you draw a circle, no matter how small that circle, it either contains all of the colors, which happens when this shared boundary of the colors is inside that circle, or it contains just one color, and this happens when it's in the interior of one of the regions. ",
  "translatedText": "따라서 속성을 되돌아보면 이를 읽는 한 가지 방법은 원을 그리면 그 원이 아무리 작더라도 모든 색상을 포함하거나 색상의 공유 경계가 해당 원 안에 있을 때 발생한다고 말하는 것입니다. , 또는 하나의 색상만 포함하고 있으며 이는 영역 중 하나의 내부에 있을 때 발생합니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1145.41,
  "end": 1164.03
 },
 {
  "input": "In particular, what this implies is you should never be able to find a circle that contains just two of the colors, since that would require that you have points on the boundary between two regions, but not all of them. ",
  "translatedText": "특히 이것이 의미하는 바는 두 가지 색상만 포함하는 원을 찾을 수 없다는 것입니다. 왜냐하면 두 영역 사이의 경계에 점이 있어야 하지만 전부는 아니기 때문입니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1167.05,
  "end": 1177.79
 },
 {
  "input": "And before explaining where this fact actually comes from, it's fun to try just wrapping your mind around it a little bit. ",
  "translatedText": "그리고 이 사실이 실제로 어디서 유래했는지 설명하기 전에, 그 사실에 대해 조금 생각해 보는 것도 재미있습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1178.95,
  "end": 1184.59
 },
 {
  "input": "You could imagine presenting this to someone as a kind of art puzzle, completely out of context, never mentioning Newton's method or anything like that, where you say that the challenge is to construct a picture with at least three colors, maybe we say red, green, and blue, so that the boundary of one color is the boundary of all of them. ",
  "translatedText": "뉴턴의 방법이나 그와 유사한 것을 전혀 언급하지 않고 완전히 맥락에서 벗어난 일종의 예술 퍼즐로 누군가에게 이것을 제시하는 것을 상상할 수 있습니다. 여기서 도전은 최소한 세 가지 색상, 아마도 우리는 빨간색이라고 부르는 그림을 구성하는 것이라고 말합니다. 녹색, 파란색이므로 한 가지 색상의 경계가 모든 색상의 경계가 됩니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1184.99,
  "end": 1200.57
 },
 {
  "input": "So if you started with something simple like this, that clearly doesn't work, because we have this whole line of points that are on the boundary of green and red, but not touching any blue, and likewise you have these other lines of disallowed points. ",
  "translatedText": "따라서 이와 같이 간단한 것으로 시작했다면 분명히 작동하지 않습니다. 왜냐하면 녹색과 빨간색의 경계에 있지만 파란색과 닿지 않는 점의 전체 라인이 있고 마찬가지로 허용되지 않는 다른 라인도 있기 때문입니다. 포인트들. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1200.95,
  "end": 1212.81
 },
 {
  "input": "So to correct that, you might go and add some blue blobs along the boundary, and then likewise add some green blobs between the red and blue, and some red blobs between the green and blue, but of course, now the boundary of those blobs are a problem, for example, touching just blue and red, but no green. ",
  "translatedText": "따라서 이를 수정하려면 경계를 따라 파란색 얼룩을 추가한 다음 마찬가지로 빨간색과 파란색 사이에 녹색 얼룩을 추가하고 녹색과 파란색 사이에 빨간색 얼룩을 추가할 수 있습니다. 물론 이제는 해당 얼룩의 경계가 됩니다. 예를 들어, 파란색과 빨간색만 만지고 녹색은 만지지 않는 등의 문제가 있습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1213.63,
  "end": 1229.07
 },
 {
  "input": "So maybe you go and try to add even smaller blobs, with the relevant third color around those smaller boundaries to help try to correct. ",
  "translatedText": "따라서 수정을 시도하는 데 도움이 되도록 더 작은 경계 주위에 관련 세 번째 색상을 사용하여 더 작은 얼룩을 추가하려고 할 수도 있습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1229.63,
  "end": 1236.37
 },
 {
  "input": "And likewise you have to do this for every one of the blobs that you initially added. ",
  "translatedText": "마찬가지로 처음에 추가한 모든 Blob에 대해 이 작업을 수행해야 합니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1237.31,
  "end": 1241.17
 },
 {
  "input": "But then all the boundaries of those tiny blobs are problems of their own, and you would have to somehow keep doing this process forever. ",
  "translatedText": "그러나 그 작은 얼룩의 모든 경계는 그 자체의 문제이므로 어떻게든 이 과정을 영원히 계속해야 할 것입니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1244.45,
  "end": 1251.63
 },
 {
  "input": "And if you look at Newton's fractal itself, this sort of blobs on blobs on blobs pattern seems to be exactly what it's doing. ",
  "translatedText": "그리고 뉴턴의 프랙탈 자체를 보면 이런 종류의 얼룩 위의 얼룩 패턴이 바로 그것이 하는 일인 것 같습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1253.57,
  "end": 1261.29
 },
 {
  "input": "The main thing I want you to notice is how this property implies you could never have a boundary which is smooth, or even partially smooth on some small segment, since any smooth segment would only be touching two colors. ",
  "translatedText": "제가 주목하고 싶은 가장 중요한 점은 이 속성이 어떤 작은 세그먼트에서 매끄러운 경계를 가질 수 없거나 심지어 부분적으로 매끄러운 경계를 가질 수 없다는 것을 의미한다는 것입니다. 왜냐하면 매끄러운 세그먼트는 두 가지 색상에만 닿기 때문입니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1266.55,
  "end": 1278.09
 },
 {
  "input": "Instead, the boundary has to consist entirely of sharp corners, so to speak. ",
  "translatedText": "대신, 말하자면 경계는 완전히 날카로운 모서리로 구성되어야 합니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1278.79,
  "end": 1283.15
 },
 {
  "input": "So if you believe the property, it explains why the boundary remains rough no matter how far you zoom in. ",
  "translatedText": "따라서 속성을 믿으면 아무리 확대해도 경계가 거칠게 유지되는 이유를 설명합니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1283.81,
  "end": 1289.55
 },
 {
  "input": "And for those of you who are familiar with the concept of fractal dimension, you can measure the dimension of the particular boundary I'm showing you right now to be around 1.44. ",
  "translatedText": "그리고 프랙탈 차원의 개념에 익숙한 분들을 위해 제가 지금 보여드리는 특정 경계의 차원이 약 1인 것으로 측정할 수 있습니다. 44. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1290.17,
  "end": 1298.17
 },
 {
  "input": "Considering what our colors actually represent, remember this isn't just a picture for picture's sake, think about what the property is really telling us. ",
  "translatedText": "우리의 색상이 실제로 무엇을 나타내는지 생각해 보면 이것이 단지 그림을 위한 그림이 아니라는 점을 기억하고 해당 건물이 실제로 우리에게 무엇을 말하고 있는지 생각해 보십시오. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1299.89,
  "end": 1307.03
 },
 {
  "input": "It says that if you're near a sensitive point where some of the seed values go to one root but other seed values nearby would go to another root, then in fact every possible root has to be accessible from within that small neighborhood. ",
  "translatedText": "시드 값 중 일부가 하나의 루트로 이동하지만 근처의 다른 시드 값이 다른 루트로 이동하는 민감한 지점 근처에 있는 경우 실제로 가능한 모든 루트는 해당 작은 이웃 내에서 액세스할 수 있어야 합니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1308.31,
  "end": 1320.79
 },
 {
  "input": "For any tiny little circle you draw, either all of the points in that circle tend to just one root, or they tend to all of the roots, but there's never going to be anything in between, just tending to a subset of the roots. ",
  "translatedText": "당신이 그리는 작은 작은 원의 경우, 그 원의 모든 점은 단지 하나의 뿌리에 대한 경향이 있거나 모든 뿌리에 대한 경향이 있지만 그 사이에는 뿌리의 하위 집합에 대한 경향이 전혀 없습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1321.53,
  "end": 1333.17
 },
 {
  "input": "For a little intuition, I found it enlightening to simply watch a cluster like the one on screen undergo this process. ",
  "translatedText": "약간의 직관을 위해 화면에 나오는 것과 같은 클러스터가 이 과정을 겪는 것을 단순히 보는 것이 깨달음을 얻었습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1334.05,
  "end": 1339.85
 },
 {
  "input": "It starts off mostly sticking together, but at one iteration they all kind of explode outward, and after that it feels a lot more reasonable that any root is up for grabs. ",
  "translatedText": "대부분 서로 달라붙는 것으로 시작하지만 한 번 반복하면 모두 바깥쪽으로 폭발하고 그 후에는 어떤 루트라도 잡을 수 있다는 것이 훨씬 더 합리적이라고 느껴집니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1340.43,
  "end": 1350.33
 },
 {
  "input": "And keep in mind I'm just showing you finitely many points, but in principle you would want to think about what happens to all uncountably infinitely many points inside some small disk. ",
  "translatedText": "저는 단지 유한한 많은 점을 보여주고 있다는 점을 명심하십시오. 그러나 원칙적으로 여러분은 작은 디스크 내부의 셀 수 없이 많은 점에 어떤 일이 일어나는지 생각해 보고 싶을 것입니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1351.37,
  "end": 1360.29
 },
 {
  "input": "This property also kind of explains why it's okay for things to look normal in the case of quadratic polynomials with just two roots, because there a smooth boundary is fine, there's only two colors to touch anyway. ",
  "translatedText": "이 속성은 또한 근이 두 개인 이차 다항식의 경우 사물이 정상적으로 보이는 이유를 설명합니다. 부드러운 경계가 있으면 괜찮고 어쨌든 만질 수 있는 색상은 두 개뿐이기 때문입니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1364.61,
  "end": 1376.07
 },
 {
  "input": "To be clear, it doesn't guarantee that the quadratic case would have a smooth boundary, it is perfectly possible to have a fractal boundary between two colors, it just looks like our Newton's method diagram is not doing anything more complicated than it needs to under the constraint of this strange boundary condition. ",
  "translatedText": "분명히 말하면, 이차 사례의 경계가 매끄러울 것이라는 보장은 없으며 두 색상 사이에 프랙탈 경계를 갖는 것이 완벽하게 가능합니다. 뉴턴의 방법 다이어그램이 필요한 것보다 더 복잡한 작업을 수행하지 않는 것처럼 보입니다. 이 이상한 경계 조건의 제약을 받습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1376.83,
  "end": 1392.71
 },
 {
  "input": "But of course all of this simply raises the question of why this bizarre boundary property would have to be true in the first place. ",
  "translatedText": "그러나 물론 이 모든 것은 애초에 왜 이 기괴한 경계 속성이 사실이어야 하는지에 대한 의문을 제기할 뿐입니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1393.85,
  "end": 1400.11
 },
 {
  "input": "Where does it even come from? ",
  "translatedText": "그것은 어디에서 오는가? ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1400.41,
  "end": 1401.51
 },
 {
  "input": "For that I'd like to tell you about a field of math which studies this kind of question, it's called holomorphic dynamics. ",
  "translatedText": "이를 위해 저는 이런 종류의 질문을 연구하는 수학 분야인 홀로모픽 동역학(holomorphicdynamics)에 대해 말씀드리고 싶습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1402.45,
  "end": 1407.63
 },
 {
  "input": "And I think we've covered enough ground today and there's certainly enough left to tell, so it makes sense to pull that out as a separate video. ",
  "translatedText": "오늘 우리는 충분한 내용을 다루었고 말할 내용도 충분히 남아 있으므로 이를 별도의 비디오로 분리하는 것이 합리적입니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1408.41,
  "end": 1414.35
 },
 {
  "input": "To close things off here, there is something sort of funny to me about the fact that we call this Newton's fractal, despite the fact that Newton had no clue about any of this and could never have possibly played with these images the way that you and I can with modern technology. ",
  "translatedText": "여기서 마무리하자면, 우리가 이것을 뉴턴의 프랙탈이라고 부르는 사실이 나에게는 뭔가 우스꽝스럽습니다. 뉴턴은 이것에 대해 전혀 단서가 없었고 결코 여러분과 같은 방식으로 이러한 이미지를 가지고 놀 수 없었다는 사실에도 불구하고 말입니다. 현대 기술로 할 수 있어요. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1415.01,
  "end": 1428.55
 },
 {
  "input": "And it happens a lot through math that people's names get attached to things well beyond what they could have dreamed of. ",
  "translatedText": "그리고 사람들의 이름이 그들이 꿈꾸던 것 이상으로 사물에 붙는 일은 수학을 통해 많이 일어납니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1429.05,
  "end": 1434.37
 },
 {
  "input": "Hamiltonians are central to quantum mechanics, despite Hamilton knowing nothing about quantum mechanics. ",
  "translatedText": "해밀턴은 양자역학에 대해 아무것도 몰랐음에도 불구하고 해밀턴인은 양자역학의 핵심입니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1434.81,
  "end": 1439.43
 },
 {
  "input": "Fourier himself never once computed a fast Fourier transform, the list goes on. ",
  "translatedText": "푸리에 자신은 한 번도 빠른 푸리에 변환을 계산한 적이 없습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1440.01,
  "end": 1444.69
 },
 {
  "input": "But this overextension of nomenclature carries with it what I think is an inspiring point. ",
  "translatedText": "그러나 이러한 명명법의 과도한 확장은 제가 생각하기에 고무적인 포인트를 전달합니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1444.69,
  "end": 1449.95
 },
 {
  "input": "It reflects how even the simple ideas, ones that could be discovered centuries ago, often hold within them some new angle or a new domain of relevance that can sit waiting to be discovered hundreds of years later. ",
  "translatedText": "이는 수백 년 전에 발견될 수 있었던 단순한 아이디어조차도 수백 년 후에 발견되기를 기다릴 수 있는 새로운 관점이나 관련성의 새로운 영역을 그 안에 얼마나 자주 담고 있는지를 반영합니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1450.53,
  "end": 1461.37
 },
 {
  "input": "It's not just that Newton had no idea about Newton's fractal. ",
  "translatedText": "뉴턴이 뉴턴의 프랙탈에 대해 전혀 몰랐던 것은 아닙니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1461.91,
  "end": 1465.15
 },
 {
  "input": "There are probably many other facts about Newton's method, or about all sorts of math that may seem like old news, that come from questions that no one has thought to ask yet, questions that are just sitting there, waiting for someone, like you, to ask them. ",
  "translatedText": "아마도 뉴턴의 방법이나 오래된 뉴스처럼 보일 수 있는 모든 종류의 수학에 관한 많은 다른 사실들이 있을 것입니다. 이러한 사실들은 아직 아무도 묻지 않은 질문, 그냥 거기 앉아서 당신과 같은 누군가를 기다리고 있는 질문에서 비롯됩니다. 그들에게 물어보세요. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1465.33,
  "end": 1478.47
 },
 {
  "input": "For example, if you were to ask about whether this process we've been talking about today ever gets trapped in a cycle, it leads you to a surprising connection with the Mandelbrot set, and we'll talk a bit about that in the next part. ",
  "translatedText": "예를 들어, 오늘 이야기한 이 과정이 순환에 갇힌 적이 있는지 묻는다면 만델브로 집합과 놀라운 연관성을 갖게 되며 이에 대해서는 다음에서 조금 이야기하겠습니다. 부분. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1482.87,
  "end": 1493.77
 },
 {
  "input": "At the time that I'm posting this, that second part, by the way, is available as an early release to patrons. ",
  "translatedText": "제가 이 글을 게시하는 시점에서 두 번째 부분은 후원자에게 조기 릴리스로 제공됩니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1495.03,
  "end": 1499.19
 },
 {
  "input": "I always like to give new content a little bit of time there to gather feedback and catch errors. ",
  "translatedText": "저는 항상 새로운 콘텐츠에 약간의 시간을 내어 피드백을 수집하고 오류를 파악하는 것을 좋아합니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1499.59,
  "end": 1503.47
 },
 {
  "input": "The finalized version should be out shortly. ",
  "translatedText": "최종 버전이 곧 출시될 예정입니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1503.95,
  "end": 1505.61
 },
 {
  "input": "And on the topic of patrons, I do just want to say a quick thanks to everyone whose name is on the screen. ",
  "translatedText": "그리고 후원자에 관해서는 화면에 이름이 나오는 모든 분들께 간단히 감사 인사를 전하고 싶습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1506.47,
  "end": 1510.33
 },
 {
  "input": "I know that in recent history new videos have been a little slow coming. ",
  "translatedText": "최근 들어 새로운 동영상이 나오는 속도가 조금 느린 것으로 알고 있습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1510.75,
  "end": 1513.97
 },
 {
  "input": "Part of this has to do with other projects that have been in the works. ",
  "translatedText": "이 중 일부는 현재 진행 중인 다른 프로젝트와 관련이 있습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1514.41,
  "end": 1516.75
 },
 {
  "input": "Things I'm proud of, by the way, things like the Summer of Math Exposition, which was a surprising amount of work, to be honest, but so worth it given the outcome. ",
  "translatedText": "그런데 제가 자랑스러워하는 여름 수학 박람회 같은 것들은 솔직히 말해서 놀랄 만큼 많은 작업이었지만 결과를 고려하면 그만한 가치가 있었습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1517.23,
  "end": 1524.87
 },
 {
  "input": "I will be talking all about that and announcing winners very shortly, so stay tuned. ",
  "translatedText": "이에 대해 모두 이야기하고 곧 우승자를 발표할 예정이니 계속 지켜봐 주시기 바랍니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1525.11,
  "end": 1529.03
 },
 {
  "input": "I just want you to know that the plan for the foreseeable future is definitely to shift gears more wholeheartedly back to making new videos, and more than anything I want to say Thanks for your continued support, even during times of trying a few new things. ",
  "translatedText": "가까운 미래에 대한 계획은 확실히 새로운 동영상 제작으로 다시 전환하는 것이라는 점을 알아주셨으면 하며, 무엇보다도 몇 가지 새로운 것을 시도하는 동안에도 지속적인 지원에 감사드립니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1529.45,
  "end": 1540.65
 },
 {
  "input": "It means a lot to me, it's what keeps the channel going, and I'll do my best to make the new lessons in the pipeline live up to your vote of confidence there. ",
  "translatedText": "이는 나에게 큰 의미가 있고 채널을 계속 유지하는 원동력이며 파이프라인의 새로운 교훈이 여러분의 신뢰에 부응할 수 있도록 최선을 다하겠습니다. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1540.91,
  "end": 1547.31
 }
]