1
00:00:02,459 --> 00:00:04,134
제목을 보셨으므로 이것이 특정 프랙탈로 

2
00:00:04,134 --> 00:00:05,580
이어진다는 것을 알 수 있습니다. 

3
00:00:05,920 --> 00:00:07,940
그리고 실제로 그것은 무한한 프랙탈 계열입니다. 

4
00:00:08,720 --> 00:00:11,618
그리고 네, 아무리 확대해도 무한한 디테일을 지닌 

5
00:00:11,618 --> 00:00:14,620
놀라울 정도로 복잡한 모양 중 하나가 될 것입니다. 

6
00:00:14,760 --> 00:00:16,850
하지만 이것은 실제로 우리가 구경할 만한 

7
00:00:16,850 --> 00:00:18,940
예쁜 그림을 생성하는 비디오가 아닙니다. 

8
00:00:19,060 --> 00:00:21,089
글쎄, 어쩌면 그게 그것의 일부일지도 모르지만, 

9
00:00:21,089 --> 00:00:23,269
여기의 실제 이야기는 다른 많은 프랙탈 뒤에 숨겨진 

10
00:00:23,269 --> 00:00:25,524
이야기보다 훨씬 더 실용적인 출발점을 가지고 있습니다.

11
00:00:25,524 --> 00:00:25,600
 

12
00:00:26,180 --> 00:00:29,141
그리고 무엇보다도, 우리가 표현하는 내용을 고려할 

13
00:00:29,141 --> 00:00:31,361
때 왜 그렇게 복잡해 보여야 하는지, 

14
00:00:31,361 --> 00:00:34,217
그리고 이 복잡성이 무엇을 반영하는지 이해하려고 

15
00:00:34,217 --> 00:00:37,284
노력한다면 우리가 얻게 되는 최종 이미지는 훨씬 더 

16
00:00:37,284 --> 00:00:40,139
의미 있게 될 것입니다. 엔지니어링 전반에 걸쳐 

17
00:00:40,139 --> 00:00:41,620
사용되는 알고리즘입니다. 

18
00:00:48,000 --> 00:00:50,836
여기서 출발점은 일종의 다항식이 있고 그것이 

19
00:00:50,836 --> 00:00:53,900
0과 같을 때를 알고 싶다고 가정하는 것입니다. 

20
00:00:54,320 --> 00:00:56,683
여기 있는 한 그래프의 경우 x축과 교차하는 세 

21
00:00:56,683 --> 00:00:59,046
개의 서로 다른 위치가 있음을 시각적으로 볼 수 

22
00:00:59,046 --> 00:01:01,672
있으며 해당 값이 무엇인지 눈으로 확인할 수 있습니다.

23
00:01:01,672 --> 00:01:01,760
 

24
00:01:01,900 --> 00:01:03,700
우리는 이것을 다항식의 근이라고 부릅니다. 

25
00:01:04,260 --> 00:01:06,300
하지만 실제로 정확히 어떻게 계산합니까? 

26
00:01:07,440 --> 00:01:09,004
이제 이것은 당신이 이미 수학에 빠져 

27
00:01:09,004 --> 00:01:10,643
있다면 수학 자체가 앞으로 나아갈 만큼 

28
00:01:10,643 --> 00:01:12,580
충분히 흥미로울 수도 있는 종류의 질문입니다. 

29
00:01:12,940 --> 00:01:14,666
하지만 길거리에 있는 누군가를 옆으로 불러내어 

30
00:01:14,666 --> 00:01:16,326
이렇게 묻는다면, 내 말은, 그 사람은 이미 

31
00:01:16,326 --> 00:01:18,120
잠들어 있다는 뜻입니다. 누가 신경 쓰겠습니까? 

32
00:01:18,820 --> 00:01:20,398
하지만 문제는 이런 종류의 질문이 

33
00:01:20,398 --> 00:01:22,060
공학계에서 항상 나온다는 것입니다. 

34
00:01:22,580 --> 00:01:25,160
개인적으로 이런 방정식이 나타나는 데 

35
00:01:25,160 --> 00:01:27,617
가장 익숙한 곳은 다항식이 여기저기 

36
00:01:27,617 --> 00:01:30,320
흩어져 있는 컴퓨터 그래픽 설정입니다. 

37
00:01:30,420 --> 00:01:32,943
따라서 주어진 픽셀이 어떻게 색칠되어야 하는지 

38
00:01:32,943 --> 00:01:35,370
알아낼 때 어떻게든 이러한 다항식을 사용하는 

39
00:01:35,370 --> 00:01:38,282
방정식을 푸는 것이 포함되는 것은 드문 일이 아닙니다.

40
00:01:38,282 --> 00:01:38,380
 

41
00:01:39,480 --> 00:01:40,880
여기서 재미있는 예를 하나 들어보겠습니다. 

42
00:01:41,160 --> 00:01:44,100
컴퓨터가 화면에 텍스트를 렌더링할 때 해당 글꼴은 

43
00:01:44,100 --> 00:01:47,040
일반적으로 픽셀 값을 사용하여 정의되지 않습니다. 

44
00:01:47,320 --> 00:01:49,983
이는 업계에서 베지어 곡선으로 알려진 

45
00:01:49,983 --> 00:01:52,520
다항식 곡선의 묶음으로 정의됩니다. 

46
00:01:53,400 --> 00:01:55,272
그리고 일부 디자인 소프트웨어에서 벡터 

47
00:01:55,272 --> 00:01:57,231
그래픽을 사용해 본 적이 있는 분들이라면 

48
00:01:57,231 --> 00:01:59,700
이러한 종류의 곡선에 대해 잘 알고 계실 것입니다. 

49
00:02:00,420 --> 00:02:02,524
그러나 실제로 그 중 하나를 화면에 

50
00:02:02,524 --> 00:02:05,154
표시하려면 화면의 각 픽셀에 색상을 지정해야 

51
00:02:05,154 --> 00:02:07,680
하는지 여부를 알려주는 방법이 필요합니다. 

52
00:02:08,340 --> 00:02:10,861
이러한 곡선은 일종의 획 너비로 표시될 수 있으며, 

53
00:02:10,861 --> 00:02:12,774
영역을 둘러싸는 경우 해당 영역에 대한 

54
00:02:12,774 --> 00:02:14,600
일종의 채우기로 표시될 수 있습니다. 

55
00:02:15,320 --> 00:02:17,790
하지만 한발 물러서서 곰곰이 생각해보면, 

56
00:02:17,790 --> 00:02:20,905
순수한 수학적 곡선을 바탕으로 각 픽셀이 색칠되어야 

57
00:02:20,905 --> 00:02:24,128
하는지 아닌지를 어떻게 아는지 알아내는 것은 흥미로운 

58
00:02:24,128 --> 00:02:24,880
퍼즐입니다. 

59
00:02:25,640 --> 00:02:26,940
내 말은, 획 너비의 경우를 생각해 보겠습니다. 

60
00:02:27,320 --> 00:02:30,260
이는 주어진 픽셀이 이 순수한 수학적 곡선에서 얼마나 

61
00:02:30,260 --> 00:02:32,905
멀리 떨어져 있는지 이해하는 것으로 귀결됩니다. 

62
00:02:32,905 --> 00:02:35,552
이 곡선 자체는 일종의 플라톤적 이상이며 너비가 

63
00:02:35,552 --> 00:02:36,140
0입니다. 

64
00:02:36,700 --> 00:02:39,816
매개변수 t가 있는 매개변수 곡선으로 생각하면 됩니다.

65
00:02:39,816 --> 00:02:39,920
 

66
00:02:41,080 --> 00:02:43,480
이제 이 거리를 알아내기 위해 할 수 있는 한 

67
00:02:43,480 --> 00:02:46,157
가지는 픽셀과 해당 곡선의 여러 샘플 포인트 사이의 

68
00:02:46,157 --> 00:02:48,927
거리를 계산한 다음 가장 작은 것을 알아내는 것입니다.

69
00:02:48,927 --> 00:02:49,020
 

70
00:02:49,820 --> 00:02:51,980
그러나 그것은 비효율적이고 부정확합니다. 

71
00:02:52,460 --> 00:02:55,049
더 나은 방법은 약간의 수학적 계산을 통해 

72
00:02:55,049 --> 00:02:57,746
가능한 모든 지점에서 곡선까지의 거리 자체가 

73
00:02:57,746 --> 00:03:00,660
매개변수의 부드러운 함수임을 인정하는 것입니다. 

74
00:03:01,240 --> 00:03:03,994
그리고 공교롭게도 그 거리의 제곱은 그 

75
00:03:03,994 --> 00:03:07,000
자체로 다항식이므로 다루기가 꽤 좋습니다. 

76
00:03:07,820 --> 00:03:10,337
그리고 이것이 벡터 그래픽 렌더링에 대한 완전한 

77
00:03:10,337 --> 00:03:12,948
강의라면 우리는 모든 것을 확장하고 혼란을 수용할 

78
00:03:12,948 --> 00:03:15,372
수 있습니다. 그러나 지금 제가 강조하고 싶은 

79
00:03:15,372 --> 00:03:18,076
유일한 두드러진 점은 원칙적으로 이 함수는 최소한의 

80
00:03:18,076 --> 00:03:20,780
기능을 원한다는 것입니다. 아는 것은 다항식입니다. 

81
00:03:21,580 --> 00:03:24,387
이 최소값을 찾아 픽셀이 곡선에 얼마나 가까운지, 

82
00:03:24,387 --> 00:03:26,694
채워야 하는지 여부를 결정하는 것은 이제 

83
00:03:26,694 --> 00:03:28,700
고전적인 미적분 문제에 불과합니다. 

84
00:03:29,340 --> 00:03:32,164
당신이 하는 일은 이 함수 그래프의 기울기, 

85
00:03:32,164 --> 00:03:34,988
즉 도함수, 즉 다항식을 알아내는 것입니다. 

86
00:03:34,988 --> 00:03:37,700
그리고 언제 그것이 0이 되는지 묻습니다. 

87
00:03:38,980 --> 00:03:41,445
따라서 실제로 곡선을 표시하는 간단해 

88
00:03:41,445 --> 00:03:44,381
보이는 이 작업을 수행하려면 주어진 다항식이 

89
00:03:44,381 --> 00:03:47,316
0이 되는 시점을 알아낼 수 있는 체계적이고 

90
00:03:47,316 --> 00:03:49,900
일반적인 방법이 있다면 좋지 않을까요? 

91
00:03:50,960 --> 00:03:53,631
물론 우리는 100개의 다른 분야에서 100개의 

92
00:03:53,631 --> 00:03:55,313
다른 예를 그릴 수 있습니다. 

93
00:03:55,313 --> 00:03:57,688
우리가 다항식의 근을 찾을 때 비록 우리가 

94
00:03:57,688 --> 00:04:00,261
항상 모든 실수의 지저분함에서 벗어나 깔끔하게 

95
00:04:00,261 --> 00:04:03,032
추상된 방식으로 표시하더라도 명심하시기 바랍니다. 

96
00:04:03,032 --> 00:04:06,001
세계 문제, 그 과제는 결코 학문적인 과제가 아닙니다.

97
00:04:06,001 --> 00:04:06,100
 

98
00:04:06,100 --> 00:04:08,011
하지만 다시 스스로에게 물어보세요. 

99
00:04:08,011 --> 00:04:10,400
실제로 그 근 중 하나를 어떻게 계산합니까? 

100
00:04:12,120 --> 00:04:14,995
당신이 풀고 있는 어떤 문제가 당신을 이차 함수로 

101
00:04:14,995 --> 00:04:17,048
이끌어준다면, 행복한 하루 되세요. 

102
00:04:17,048 --> 00:04:19,718
우리 모두가 알고 사랑하는 이차 공식을 사용할 

103
00:04:19,718 --> 00:04:20,540
수 있습니다. 

104
00:04:20,540 --> 00:04:23,485
컴퓨터 그래픽의 뿌리 찾기와 관련된 재미있는 

105
00:04:23,485 --> 00:04:26,430
참고 사항으로, Pixar 엔지니어에게 영화 

106
00:04:26,430 --> 00:04:29,375
Coco의 일부 장면에서 사용된 조명의 수를 

107
00:04:29,375 --> 00:04:32,438
고려하고 이러한 일부 특성을 고려하여 추정치를 

108
00:04:32,438 --> 00:04:35,383
제시한 적이 있습니다. 구와 같이 다항식으로 

109
00:04:35,383 --> 00:04:38,210
정의된 것이 포함된 픽셀당 계산에서는 이차 

110
00:04:38,210 --> 00:04:40,919
공식이 해당 영화 제작에서 수조 번 쉽게 

111
00:04:40,919 --> 00:04:41,980
사용되었습니다. 

112
00:04:43,420 --> 00:04:45,510
이제 문제가 고차 다항식으로 이어지면 

113
00:04:45,510 --> 00:04:47,600
상황이 더욱 까다로워지기 시작합니다. 

114
00:04:48,120 --> 00:04:51,115
3차 다항식의 경우 Mathologer가 멋진 

115
00:04:51,115 --> 00:04:53,303
비디오를 제작한 공식도 있습니다. 

116
00:04:53,303 --> 00:04:56,529
심지어 4차 다항식을 푸는 4차 공식도 있습니다. 

117
00:04:56,529 --> 00:04:59,178
솔직히 말해서 그 공식은 본질적으로 아무 

118
00:04:59,178 --> 00:05:01,252
문제도 없는 끔찍한 악몽입니다. 

119
00:05:01,252 --> 00:05:02,980
실제로 실제로 사용합니다. 

120
00:05:04,060 --> 00:05:07,292
하지만 그 후에는 이것이 모든 수학에서 가장 흥미로운 

121
00:05:07,292 --> 00:05:09,124
결과 중 하나라고 생각합니다. 

122
00:05:09,124 --> 00:05:12,250
5차 이상의 다항식을 풀기 위한 유사한 공식을 가질 

123
00:05:12,250 --> 00:05:13,220
수는 없습니다. 

124
00:05:14,020 --> 00:05:17,169
더 구체적으로 말하면, 매우 광범위한 표준 함수 

125
00:05:17,169 --> 00:05:20,085
세트의 경우, 5차 다항식의 계수를 연결하고 

126
00:05:20,085 --> 00:05:23,234
항상 근을 구할 수 있도록 이러한 함수를 결합할 

127
00:05:23,234 --> 00:05:26,500
수 있는 방법이 없다는 것을 증명할 수 있습니다. 

128
00:05:27,360 --> 00:05:29,540
이것은 완전히 다른 웜 캔인 5분류의 해결 

129
00:05:29,540 --> 00:05:31,084
불가능성으로 알려져 있습니다. 

130
00:05:31,084 --> 00:05:33,718
나중에 이 문제에 대해 알아볼 수 있기를 바랍니다. 

131
00:05:33,718 --> 00:05:35,535
그러나 실제로는 중요하지 않습니다. 

132
00:05:35,535 --> 00:05:38,078
왜냐하면 우리는 이러한 종류의 솔루션을 근사화하는 

133
00:05:38,078 --> 00:05:39,895
알고리즘을 가지고 있기 때문입니다. 

134
00:05:39,895 --> 00:05:42,620
원하는 수준의 정밀도로 방정식을 계산할 수 있습니다. 

135
00:05:43,240 --> 00:05:45,170
오늘 여러분과 저에게 공통적이고 

136
00:05:45,170 --> 00:05:47,100
주요 주제는 뉴턴의 방법입니다. 

137
00:05:47,620 --> 00:05:49,976
그리고 그렇습니다. 이것이 우리를 프랙탈로 이끄는 

138
00:05:49,976 --> 00:05:52,163
것입니다. 하지만 처음에는 전체 절차가 얼마나 

139
00:05:52,163 --> 00:05:54,520
순진하고 온화해 보이는지 주목해 보시기 바랍니다. 

140
00:05:55,240 --> 00:05:57,335
알고리즘은 무작위 추측으로 시작합니다. 

141
00:05:57,335 --> 00:05:58,860
이를 x0이라고 하겠습니다. 

142
00:05:59,660 --> 00:06:02,332
거의 확실하게 x0에서의 다항식의 출력은 0이 

143
00:06:02,332 --> 00:06:04,388
아니므로 솔루션을 찾지 못했습니다. 

144
00:06:04,388 --> 00:06:07,163
해당 지점에서 이 그래프의 높이로 표시되는 다른 

145
00:06:07,163 --> 00:06:07,780
값입니다. 

146
00:06:08,380 --> 00:06:10,765
따라서 추측을 개선하기 위해 아이디어는 

147
00:06:10,765 --> 00:06:12,825
해당 값 주변의 함수에 대한 선형 

148
00:06:12,825 --> 00:06:15,320
근사가 언제 0이 되는지 묻는 것입니다. 

149
00:06:16,020 --> 00:06:18,582
즉, 이 시점에서 그래프에 접선을 

150
00:06:18,582 --> 00:06:21,820
그리면 그 접선은 언제 x축과 교차합니까? 

151
00:06:23,100 --> 00:06:26,312
이제 이 접선이 실제 근의 느슨한 부근에 있는 

152
00:06:26,312 --> 00:06:28,659
함수의 적절한 근사라고 가정하면, 

153
00:06:28,659 --> 00:06:32,118
이 근사가 0과 같은 곳이 실제 근에 더 가까워질 

154
00:06:32,118 --> 00:06:32,860
것입니다. 

155
00:06:33,900 --> 00:06:36,273
이 함수의 도함수를 얻을 수 있고 다항식을 

156
00:06:36,273 --> 00:06:38,548
사용하여 항상 그렇게 할 수 있는 한 이 

157
00:06:38,548 --> 00:06:41,120
선의 기울기를 구체적으로 계산할 수 있습니다. 

158
00:06:42,100 --> 00:06:45,096
활성 시청자가 잠시 멈춰서 현재 추측과 개선된 추측 

159
00:06:45,096 --> 00:06:48,196
간의 차이를 어떻게 파악하는지 묻고 싶을 수 있습니다.

160
00:06:48,196 --> 00:06:48,300
 

161
00:06:48,520 --> 00:06:50,060
이 단계의 규모는 얼마입니까? 

162
00:06:50,900 --> 00:06:53,719
이를 생각하는 한 가지 방법은 이 접선의 기울기, 

163
00:06:53,719 --> 00:06:56,437
즉 상승에 대한 상승이 이 그래프의 높이를 해당 

164
00:06:56,437 --> 00:06:59,155
계단의 길이로 나눈 것과 같다는 사실을 고려하는 

165
00:06:59,155 --> 00:06:59,760
것입니다. 

166
00:07:00,440 --> 00:07:02,892
그러나 반면에 접선의 기울기는 해당 

167
00:07:02,892 --> 00:07:05,100
점에서의 다항식의 도함수입니다. 

168
00:07:05,840 --> 00:07:08,668
여기서 이 방정식을 다시 정리하면 해당 단계 크기를 

169
00:07:08,668 --> 00:07:11,400
계산할 수 있는 매우 구체적인 방법이 제공됩니다. 

170
00:07:12,140 --> 00:07:15,067
따라서 x1이라고 부를 수 있는 다음 추측은 

171
00:07:15,067 --> 00:07:17,760
이 단계 크기로 조정된 이전 추측입니다. 

172
00:07:18,400 --> 00:07:20,980
그 후에는 이 과정을 반복하면 됩니다. 

173
00:07:21,520 --> 00:07:24,998
새로운 선형 근사치를 제공하는 이 새로운 추측에서 

174
00:07:24,998 --> 00:07:28,352
이 함수의 값과 기울기를 계산한 후 해당 접선이 

175
00:07:28,352 --> 00:07:32,080
x축과 교차하는 곳마다 다음 추측인 x2를 만듭니다. 

176
00:07:32,780 --> 00:07:34,580
그런 다음 동일한 계산을 x2에 

177
00:07:34,580 --> 00:07:35,980
적용하면 x3이 됩니다. 

178
00:07:36,440 --> 00:07:38,353
그리고 머지않아 당신은 진정한 뿌리에 

179
00:07:38,353 --> 00:07:40,357
극도로 가까워지고, 당신이 원하는 만큼 

180
00:07:40,357 --> 00:07:42,180
가까워지는 자신을 발견하게 됩니다. 

181
00:07:44,760 --> 00:07:46,389
공식이 실제로 의미가 있는지 직감적으로 

182
00:07:46,389 --> 00:07:47,870
확인하는 것은 항상 가치가 있으며, 

183
00:07:47,870 --> 00:07:49,500
이 경우에는 그럴 수 있기를 바랍니다. 

184
00:07:49,840 --> 00:07:52,219
x의 p가 크다면, 즉 그래프가 매우 높다는 

185
00:07:52,219 --> 00:07:54,884
의미이며, 루트에 도달하려면 더 큰 단계를 거쳐야 

186
00:07:54,884 --> 00:07:55,360
합니다. 

187
00:07:55,980 --> 00:07:57,782
그러나 x의 p'도 크다면, 

188
00:07:57,782 --> 00:08:00,125
즉 그래프가 매우 가파르다는 것을 의미하므로, 

189
00:08:00,125 --> 00:08:02,559
그 단계를 얼마나 크게 만드는지에 대해 완화해야 

190
00:08:02,559 --> 00:08:03,280
할 것입니다. 

191
00:08:04,520 --> 00:08:06,498
이름에서 알 수 있듯이 이것은 뉴턴이 

192
00:08:06,498 --> 00:08:08,760
다항식을 풀기 위해 사용한 방법이었습니다. 

193
00:08:08,760 --> 00:08:11,337
하지만 그는 필요한 것보다 훨씬 더 복잡해 보이도록 

194
00:08:11,337 --> 00:08:13,915
만들었고 Joseph Rafson이라는 사람이 지금 

195
00:08:13,915 --> 00:08:16,226
여러분과 제가 보고 있는 것과 더 유사한 훨씬 

196
00:08:16,226 --> 00:08:18,715
간단한 버전을 출판했습니다. 그래서 여러분은 또한 

197
00:08:18,715 --> 00:08:20,760
뉴턴이라는 알고리즘을 자주 듣게 됩니다. 

198
00:08:20,760 --> 00:08:21,560
-라프슨 방식. 

199
00:08:22,640 --> 00:08:24,920
요즘 미적분학 수업에서 자주 나오는 주제입니다. 

200
00:08:25,360 --> 00:08:27,262
그런데 그것에 대한 느낌을 얻기 위한 

201
00:08:27,262 --> 00:08:29,164
좋은 작은 연습 중 하나는 이 방법을 

202
00:08:29,164 --> 00:08:31,520
사용하여 손으로 제곱근을 근사화하는 것입니다. 

203
00:08:33,179 --> 00:08:35,827
그러나 불행하게도 대부분의 미적분학 학생들이 

204
00:08:35,827 --> 00:08:38,581
보지 못하는 것은 겉으로 보기에 간단해 보이는 

205
00:08:38,581 --> 00:08:41,334
이 절차를 가지고 놀면서 딱지 중 일부를 따기 

206
00:08:41,334 --> 00:08:44,300
시작할 때 상황이 얼마나 깊어질 수 있는지입니다. 

207
00:08:45,380 --> 00:08:47,338
알다시피, 뉴턴의 방법은 매우 빠르게 

208
00:08:47,338 --> 00:08:50,043
수렴하는 근 근처에서 시작하면 훌륭하게 작동하지만, 

209
00:08:50,043 --> 00:08:52,094
초기 추측이 근에서 멀리 떨어져 있으면 

210
00:08:52,094 --> 00:08:53,960
몇 가지 약점이 있을 수 있습니다. 

211
00:08:54,920 --> 00:08:56,813
예를 들어 방금 보고 있던 함수를 

212
00:08:56,813 --> 00:08:59,006
위쪽으로 이동하고 동일한 초기 추측으로 

213
00:08:59,006 --> 00:09:01,000
동일한 게임을 플레이해 보겠습니다. 

214
00:09:07,400 --> 00:09:09,786
우리가 x축 위에 있는 이 함수의 로컬 

215
00:09:09,786 --> 00:09:12,064
최소값 주위에서 어떻게 바운스되는지에 

216
00:09:12,064 --> 00:09:14,560
대한 새로운 추측의 시퀀스에 주목하세요. 

217
00:09:15,460 --> 00:09:17,595
이것은 일종의 의미가 있습니다. 

218
00:09:17,595 --> 00:09:20,680
오른쪽 끝까지 이 값 주위의 함수에 대한 선형 

219
00:09:20,680 --> 00:09:23,646
근사치는 왼쪽에 있는 하나의 실제 근 주위의 

220
00:09:23,646 --> 00:09:26,612
함수의 특성과 거의 전혀 관련이 없다는 것을 

221
00:09:26,612 --> 00:09:29,460
의미합니다. 그 진정한 뿌리에 대한 유용한 

222
00:09:29,460 --> 00:09:31,240
정보를 제공하지 않습니다. 

223
00:09:31,880 --> 00:09:34,962
이 과정이 우연히 새로운 추측을 충분히 왼쪽으로 

224
00:09:34,962 --> 00:09:37,817
던져버릴 때만 새로운 추측의 순서가 생산적인 

225
00:09:37,817 --> 00:09:40,900
작업을 수행하고 실제로 실제 루트에 접근합니다. 

226
00:09:42,680 --> 00:09:44,869
특히 흥미로운 점은 복소 평면에서 

227
00:09:44,869 --> 00:09:47,520
뿌리를 찾는 것에 대해 묻는 경우입니다. 

228
00:09:48,380 --> 00:09:51,294
여기에 표시된 것과 같은 다항식에 단 하나의 실수 

229
00:09:51,294 --> 00:09:54,312
근만 있는 경우에도 이러한 근이 잠재적으로 복소수가 

230
00:09:54,312 --> 00:09:57,018
될 수 있도록 허용하면 항상 이 다항식을 이와 

231
00:09:57,018 --> 00:09:59,620
같은 5개의 항으로 인수분해할 수 있습니다. 

232
00:10:00,100 --> 00:10:02,100
이것이 대수학의 유명한 기본 정리이다. 

233
00:10:02,820 --> 00:10:05,995
이제 입력과 출력 사이의 연관성을 그래프로 그릴 

234
00:10:05,995 --> 00:10:09,052
수 있는 실수 입력과 실수 출력이 있는 행복한 

235
00:10:09,052 --> 00:10:12,462
함수의 세계에서 뉴턴의 방법은 접선과 x를 교차하는 

236
00:10:12,462 --> 00:10:15,520
매우 멋진 시각적 의미를 갖습니다. -중심선. 

237
00:10:16,100 --> 00:10:19,027
그러나 이러한 입력을 복소수로 허용하려는 

238
00:10:19,027 --> 00:10:22,210
경우(해당 출력도 복소수일 수 있음을 의미) 

239
00:10:22,210 --> 00:10:25,520
더 이상 접선과 그래프를 생각할 수 없습니다. 

240
00:10:26,199 --> 00:10:27,650
그러나 공식은 시각화 방법에 

241
00:10:27,650 --> 00:10:29,100
크게 영향을 주지 않습니다. 

242
00:10:29,100 --> 00:10:32,235
무작위 추측으로 시작하여 이 시점의 다항식과 

243
00:10:32,235 --> 00:10:34,870
그 도함수를 평가한 다음 이 업데이트 

244
00:10:34,870 --> 00:10:37,629
규칙을 사용하여 새로운 추측을 생성하는 

245
00:10:37,629 --> 00:10:40,640
동일한 게임을 계속 플레이할 수 있습니다. 

246
00:10:41,160 --> 00:10:42,390
그리고 그 새로운 추측이 실제 

247
00:10:42,390 --> 00:10:43,620
뿌리에 더 가깝기를 바랍니다. 

248
00:10:45,460 --> 00:10:47,305
그러나 저는 이러한 단계를 접선으로 

249
00:10:47,305 --> 00:10:49,242
시각화할 수 없더라도 실제로는 동일한 

250
00:10:49,242 --> 00:10:51,180
논리라는 점을 분명히 하고 싶습니다. 

251
00:10:51,180 --> 00:10:54,193
우리는 귀하의 추측에 대한 함수의 선형 

252
00:10:54,193 --> 00:10:57,618
근사치가 0이 되는 위치를 파악하고 있으며, 

253
00:10:57,618 --> 00:11:01,180
선형 근사치의 0을 다음 추측으로 사용합니다. 

254
00:11:01,480 --> 00:11:03,733
규칙이 작동할 것이라고 기대할 이유 없이 새로운 

255
00:11:03,733 --> 00:11:06,236
컨텍스트에 규칙을 맹목적으로 적용하는 것과는 다릅니다.

256
00:11:06,236 --> 00:11:06,320
 

257
00:11:06,980 --> 00:11:09,519
그리고 실제로 몇 번의 반복을 거친 후 여기에 

258
00:11:09,519 --> 00:11:11,765
표시된 최소한의 결과를 통해 해당 출력이 

259
00:11:11,765 --> 00:11:14,500
기본적으로 0인 값에 도달했음을 알 수 있습니다. 

260
00:11:15,900 --> 00:11:17,200
이제 재미있는 부분이 있습니다. 

261
00:11:17,200 --> 00:11:20,860
이 아이디어를 다양한 초기 추측에 적용해 보겠습니다. 

262
00:11:21,780 --> 00:11:24,107
참고로, 나는 이 특정 다항식의 5개의 

263
00:11:24,107 --> 00:11:26,540
실제근을 복소평면에 올려 놓을 것입니다. 

264
00:11:27,500 --> 00:11:29,704
반복할 때마다 작은 점 하나 하나가 뉴턴의 

265
00:11:29,704 --> 00:11:32,000
방법을 기반으로 몇 가지 단계를 수행합니다. 

266
00:11:32,740 --> 00:11:35,096
대부분의 점은 빠르게 5개의 실제 뿌리 중 

267
00:11:35,096 --> 00:11:37,552
하나로 수렴되지만, 이리저리 튀는 데 시간이 

268
00:11:37,552 --> 00:11:40,400
걸리는 것처럼 보이는 눈에 띄는 낙오자가 있습니다. 

269
00:11:41,000 --> 00:11:43,396
특히 양의 실수선에 갇힌 것들이 

270
00:11:43,396 --> 00:11:45,660
어떻게 나타나는지 주목하세요. 

271
00:11:45,680 --> 00:11:47,837
그것들은 약간 길을 잃은 것처럼 보입니다. 

272
00:11:47,837 --> 00:11:50,263
그리고 이것은 우리가 그래프로 실수의 경우를 볼 

273
00:11:50,263 --> 00:11:52,600
때 동일한 다항식에 대해 이미 본 것과 정확히 

274
00:11:52,600 --> 00:11:53,140
같습니다. 

275
00:11:56,440 --> 00:11:58,986
이제 제가 할 일은 5개의 뿌리 중 어느 

276
00:11:58,986 --> 00:12:01,643
뿌리에 가장 가까운지에 따라 각 점에 색을 

277
00:12:01,643 --> 00:12:04,079
칠하는 것입니다. 그런 다음 모든 점이 

278
00:12:04,079 --> 00:12:07,180
시작된 곳으로 돌아가도록 시계를 되돌릴 것입니다. 

279
00:12:09,240 --> 00:12:11,919
이제 여기서 수행한 대로 전체 내용을 파악하기에는 

280
00:12:11,919 --> 00:12:14,694
해상도가 충분하지 않습니다. 따라서 더 미세한 초기 

281
00:12:14,694 --> 00:12:17,181
추측 그리드로 시작하여 동일한 게임을 실행하고 

282
00:12:17,181 --> 00:12:19,382
적용하면 어떤 모습일지 보여드리겠습니다. 

283
00:12:19,382 --> 00:12:21,487
뉴턴의 방법은 여러 번 반복되었습니다. 

284
00:12:21,487 --> 00:12:23,401
각 뿌리가 앞으로 나아가도록 하고, 

285
00:12:23,401 --> 00:12:26,176
뿌리가 있는 뿌리에 따라 각 점에 색칠을 한 다음, 

286
00:12:26,176 --> 00:12:28,760
시계를 되돌려 원래 어디에서 왔는지 확인합니다. 

287
00:12:29,400 --> 00:12:31,089
그러나 이것조차도 패턴을 감상할 

288
00:12:31,089 --> 00:12:32,780
만큼 충분한 해상도는 아닙니다. 

289
00:12:33,180 --> 00:12:35,679
평면의 모든 단일 픽셀에 대해 이 프로세스를 

290
00:12:35,679 --> 00:12:38,380
수행하면 다음과 같은 결과를 얻을 수 있습니다. 

291
00:12:40,160 --> 00:12:42,829
그리고 이 수준의 디테일에서는 색 구성표가 적어도 

292
00:12:42,829 --> 00:12:45,500
내 눈에는 약간 거슬리므로 조금 진정시키겠습니다. 

293
00:12:46,320 --> 00:12:48,786
여기에서 이것을 보여주기 위해 제가 사용하려고 

294
00:12:48,786 --> 00:12:51,631
하는 해상도가 무엇이든 결코 충분하지 않을 것입니다. 

295
00:12:51,631 --> 00:12:54,002
왜냐하면 우리가 얻는 모양의 더 미세한 세부 

296
00:12:54,002 --> 00:12:55,900
사항은 끝없이 복잡하기 때문입니다. 

297
00:13:01,760 --> 00:13:02,672
그러나 이것이 실제로 무엇을 

298
00:13:02,672 --> 00:13:03,700
말하는지 잠시 생각해 보십시오. 

299
00:13:03,700 --> 00:13:06,316
이는 복잡한 평면에 해당 시드 값을 약간 

300
00:13:06,316 --> 00:13:09,160
조정하면 110만분의 1 또는 1조 1천분의 

301
00:13:09,160 --> 00:13:11,777
1만큼 옆으로 치우면 5개 중 어느 것이 

302
00:13:11,777 --> 00:13:15,190
완전히 바뀔 수 있는 영역이 있다는 것을 의미합니다. 

303
00:13:15,190 --> 00:13:17,580
진정한 뿌리는 결국 착륙하게 됩니다. 

304
00:13:18,400 --> 00:13:21,066
우리는 앞서 보여드린 실제 그래프와 문제가 있는 

305
00:13:21,066 --> 00:13:23,535
추측을 통해 이런 종류의 혼돈에 대한 전조를 

306
00:13:23,535 --> 00:13:26,202
보았지만, 이 모든 것을 복잡한 평면에 그려보면 

307
00:13:26,202 --> 00:13:28,770
이러한 종류의 근 찾기 알고리즘이 얼마나 예측 

308
00:13:28,770 --> 00:13:31,535
불가능할 수 있는지, 그리고 어떻게 존재하는지 알 

309
00:13:31,535 --> 00:13:34,399
수 있습니다. 이런 종류의 예측 불가능성이 발생하는 

310
00:13:34,399 --> 00:13:35,980
초기 값의 전체 범위입니다. 

311
00:13:37,080 --> 00:13:39,575
이제 이러한 근 중 하나를 잡고 이를 변경하면(즉, 

312
00:13:39,575 --> 00:13:42,157
프로세스에 대해 다른 다항식을 사용한다는 의미) 결과 

313
00:13:42,157 --> 00:13:44,740
프랙탈 패턴이 어떻게 변경되는지 확인할 수 있습니다. 

314
00:13:45,540 --> 00:13:48,488
예를 들어 주어진 근 주변 영역이 항상 동일한 

315
00:13:48,488 --> 00:13:50,529
색상을 갖는 방법에 주목하세요. 

316
00:13:50,529 --> 00:13:53,477
왜냐하면 이 선형 근사 방식이 문제 없이 근을 

317
00:13:53,477 --> 00:13:56,199
찾는 방법으로 작동하는 근에 충분히 가까운 

318
00:13:56,199 --> 00:13:57,560
지점이기 때문입니다. 

319
00:13:58,180 --> 00:14:02,070
모든 혼란은 지역 간의 경계에서 일어나는 것 같습니다.

320
00:14:02,070 --> 00:14:02,200
 

321
00:14:02,720 --> 00:14:03,320
기억. 

322
00:14:04,180 --> 00:14:06,280
그리고 이 뿌리를 어디에 두든 프랙탈 

323
00:14:06,280 --> 00:14:08,480
경계는 항상 거기에 있는 것 같습니다. 

324
00:14:08,980 --> 00:14:11,146
이것은 분명히 우리가 처음 시작했던 다항식에 

325
00:14:11,146 --> 00:14:13,226
대한 일회성 문제가 아니라 주어진 다항식에 

326
00:14:13,226 --> 00:14:14,960
대한 일반적인 사실인 것 같습니다. 

327
00:14:16,800 --> 00:14:18,553
무슨 일이 일어나고 있는지 더 잘 설명하기 

328
00:14:18,553 --> 00:14:20,453
위해 여기에서 조정할 수 있는 또 다른 측면은 

329
00:14:20,453 --> 00:14:22,280
우리가 사용하는 뉴턴 방법의 단계 수입니다. 

330
00:14:22,980 --> 00:14:24,804
예를 들어, 컴퓨터가 아무런 단계도 

331
00:14:24,804 --> 00:14:26,719
거치지 않도록 했다면, 즉 이미 가장 

332
00:14:26,719 --> 00:14:28,726
가까운 루트를 기준으로 평면의 각 점에 

333
00:14:28,726 --> 00:14:31,280
색을 칠한다면 이것이 우리가 얻게 될 결과입니다. 

334
00:14:31,660 --> 00:14:32,810
그리고 이런 종류의 다이어그램에는 실제로 

335
00:14:32,810 --> 00:14:33,760
보로노이 다이어그램(Voronoi 

336
00:14:33,760 --> 00:14:35,060
Diagram)이라는 특별한 이름이 있습니다. 

337
00:14:36,060 --> 00:14:38,864
그리고 평면의 각 점에 뉴턴 방법의 단일 단계를 

338
00:14:38,864 --> 00:14:41,980
적용하고 그 단일 단계 결과가 가장 가까운 근에 따라 

339
00:14:41,980 --> 00:14:45,096
색상을 지정하면 다음과 같은 결과를 얻을 수 있습니다.

340
00:14:45,096 --> 00:14:45,200
 

341
00:14:50,180 --> 00:14:53,760
마찬가지로, 두 단계를 허용하면 약간 더 복잡한 

342
00:14:53,760 --> 00:14:57,208
패턴을 얻게 되며, 더 많은 단계를 허용할수록 

343
00:14:57,208 --> 00:15:01,187
이미지가 더 복잡해지고 원래 프랙탈에 더 가까워집니다.

344
00:15:01,187 --> 00:15:01,320
 

345
00:15:01,860 --> 00:15:04,613
그리고 이것이 중요합니다. 여기서 연구하고 있는 

346
00:15:04,613 --> 00:15:07,264
실제 모양은 이들 중 어느 것도 아니며 임의로 

347
00:15:07,264 --> 00:15:10,120
많은 반복을 허용하는 한계라는 점을 명심하십시오. 

348
00:15:14,340 --> 00:15:17,020
이 시점에서 우리가 물어볼 질문이 너무 많습니다. 

349
00:15:17,460 --> 00:15:19,482
아마도 다른 다항식을 사용하여 이것을 시험해 

350
00:15:19,482 --> 00:15:21,666
보고 싶거나, 그것이 얼마나 일반적인지 확인하고 

351
00:15:21,666 --> 00:15:23,770
싶을 수도 있고, 이러한 반복된 점으로 정확히 

352
00:15:23,770 --> 00:15:25,793
어떤 동역학이 가능한지 더 깊이 파고들거나, 

353
00:15:25,793 --> 00:15:27,653
다음과 같은 다른 수학 조각과의 연관성이 

354
00:15:27,653 --> 00:15:30,000
있는지 확인하고 싶을 수도 있습니다. 비슷한 테마. 

355
00:15:30,900 --> 00:15:32,258
하지만 내 생각에 가장 적절한 질문은 

356
00:15:32,258 --> 00:15:33,810
'여기서 도대체 무슨 일이 벌어지고 

357
00:15:33,810 --> 00:15:35,427
있는 거지?'와 같은 것이어야 한다고 

358
00:15:35,427 --> 00:15:35,880
생각합니다. 

359
00:15:36,400 --> 00:15:38,218
내 말은, 우리가 여기서 하는 일은 

360
00:15:38,218 --> 00:15:40,400
반복적으로 선형 근사치를 푸는 것뿐입니다. 

361
00:15:40,880 --> 00:15:43,620
왜 그렇게 끝없이 복잡한 것을 생산하겠습니까? 

362
00:15:44,160 --> 00:15:45,993
여기의 기본 규칙은 실제로 이와 같은 

363
00:15:45,993 --> 00:15:47,739
이미지를 생성하는 데 충분한 정보를 

364
00:15:47,739 --> 00:15:49,660
전달해서는 안 되는 것처럼 느껴집니다. 

365
00:15:50,180 --> 00:15:52,770
그리고 이것을 보기 전에, 합리적인 초기 추측은 

366
00:15:52,770 --> 00:15:55,361
각 시드 값이 가장 가까운 루트를 향하는 경향이 

367
00:15:55,361 --> 00:15:57,760
있다는 것이었을 것이라고 생각하지 않습니까? 

368
00:15:58,320 --> 00:16:00,780
그리고 이 경우 각 점의 뿌리를 기준으로 

369
00:16:00,780 --> 00:16:03,346
색상을 지정하고 원래 위치로 다시 이동하면 

370
00:16:03,346 --> 00:16:05,806
최종 이미지는 직선 경계가 있는 보로노이 

371
00:16:05,806 --> 00:16:08,160
다이어그램 중 하나처럼 보일 것입니다. 

372
00:16:09,200 --> 00:16:11,400
그리고 앞서 내가 5차의 풀 수 없음을 

373
00:16:11,400 --> 00:16:13,400
언급했으므로 아마도 여기의 복잡성이 

374
00:16:13,400 --> 00:16:15,600
그것과 관련이 있는지 궁금할 것입니다. 

375
00:16:15,920 --> 00:16:17,381
그러면 좋겠지만 본질적으로 서로 

376
00:16:17,381 --> 00:16:18,680
관련이 없는 아이디어입니다. 

377
00:16:19,079 --> 00:16:21,313
사실 지금까지 5차 다항식만 사용하는 것은 

378
00:16:21,313 --> 00:16:23,360
약간 오해의 소지가 있을 수 있습니다. 

379
00:16:24,000 --> 00:16:25,976
복소 평면 어딘가에 세 개의 근이 있는 

380
00:16:25,976 --> 00:16:27,863
3차 다항식을 사용하여 동일한 게임을 

381
00:16:27,863 --> 00:16:29,840
하면 어떤 일이 일어나는지 살펴보세요. 

382
00:16:30,860 --> 00:16:32,903
대부분의 점은 루트에 자리잡고 있지만 

383
00:16:32,903 --> 00:16:35,044
일부 점은 좀 더 혼란스럽게 여기저기로 

384
00:16:35,044 --> 00:16:37,380
날아다니는 모습을 다시 한 번 살펴보세요. 

385
00:16:38,040 --> 00:16:40,058
사실 이런 애니메이션에서 가장 눈에 

386
00:16:40,058 --> 00:16:42,279
띄는 것은 바로 뿌리를 향해 가는 것이 

387
00:16:42,279 --> 00:16:44,500
엔딩 지점에 조용히 자리잡은 것입니다. 

388
00:16:45,160 --> 00:16:48,671
그리고 다시, 몇 번의 반복에서 이것을 멈추고 가장 

389
00:16:48,671 --> 00:16:52,061
가까운 루트를 기준으로 모든 점을 색칠하고 시계를 

390
00:16:52,061 --> 00:16:55,329
되돌리면 가능한 모든 시작점에 대한 관련 그림이 

391
00:16:55,329 --> 00:16:58,720
무한한 세부 묘사로 이 프랙탈 패턴을 형성합니다. 

392
00:17:05,840 --> 00:17:09,380
그러나 근이 2개인 이차 다항식은 다릅니다. 

393
00:17:09,819 --> 00:17:12,525
이 경우 각 시드 값은 예상대로 가장 

394
00:17:12,525 --> 00:17:15,359
가까운 루트를 향하는 경향이 있습니다. 

395
00:17:16,319 --> 00:17:18,936
각 루트에서 동일한 거리에 있는 모든 점에서 

396
00:17:18,936 --> 00:17:21,030
약간의 구불구불한 동작이 있습니다. 

397
00:17:21,030 --> 00:17:23,647
이는 어느 점으로 갈지 결정할 수 없는 것과 

398
00:17:23,647 --> 00:17:26,054
비슷하지만 이는 점의 단일 선일 뿐이며, 

399
00:17:26,054 --> 00:17:29,194
색칠 게임을 하다 보면 우리가 얻게 되는 다이어그램은 

400
00:17:29,194 --> 00:17:30,660
확실히 더 지루해집니다. 

401
00:17:32,060 --> 00:17:34,718
따라서 2에서 3으로 점프하면 새로운 일이 

402
00:17:34,718 --> 00:17:37,820
일어나는 것 같습니다. 질문은 정확히 무엇입니까? 

403
00:17:37,820 --> 00:17:39,896
한 달 전에 저에게 물으셨다면 저는 아마도 어깨를 

404
00:17:39,896 --> 00:17:41,379
으쓱하고 이렇게 대답했을 것입니다. 

405
00:17:41,379 --> 00:17:43,381
수학은 원래 그런 것입니다. 대답은 간단해 보일 

406
00:17:43,381 --> 00:17:45,013
때도 있고 그렇지 않을 때도 있습니다. 

407
00:17:45,013 --> 00:17:46,941
환경에서 왜 묻는 것이 무엇을 의미하는지 항상 

408
00:17:46,941 --> 00:17:48,350
명확하지는 않습니다. 이와 같이. 

409
00:17:48,350 --> 00:17:50,228
하지만 내 생각은 틀렸을 것이다. 

410
00:17:50,228 --> 00:17:52,502
이 이미지가 왜 그렇게 복잡해 보이는지에 

411
00:17:52,502 --> 00:17:55,270
대해 우리가 제시할 수 있는 이유가 실제로 있다. 

412
00:17:55,930 --> 00:17:57,974
보시다시피, 이 다이어그램이 가지고 있음을 

413
00:17:57,974 --> 00:18:00,190
증명할 수 있는 매우 독특한 속성이 있습니다. 

414
00:18:00,850 --> 00:18:04,154
색칠된 영역 중 하나, 즉 이 파란색 영역, 

415
00:18:04,154 --> 00:18:07,326
즉 결국 다항식의 하나의 특정 근을 향하는 

416
00:18:07,326 --> 00:18:09,970
모든 점 집합에 주의를 집중하세요. 

417
00:18:10,510 --> 00:18:12,779
이제 해당 영역의 경계를 생각해 보세요. 

418
00:18:12,779 --> 00:18:15,443
화면에 표시된 예에서는 이러한 종류의 멋진 3중 

419
00:18:15,443 --> 00:18:16,430
대칭이 있습니다. 

420
00:18:17,330 --> 00:18:20,647
놀라운 점은 다른 색상을 보고 그 경계를 고려하면 

421
00:18:20,647 --> 00:18:23,610
정확히 동일한 세트를 얻게 된다는 것입니다. 

422
00:18:25,450 --> 00:18:27,342
이제 제가 경계라는 단어를 말할 때 여러분은 

423
00:18:27,342 --> 00:18:29,612
그것이 무엇을 의미하는지 직관적으로 이해하실 것입니다.

424
00:18:29,612 --> 00:18:31,656
 하지만 수학자들은 이를 형식화하는 매우 영리한 

425
00:18:31,656 --> 00:18:33,775
방법을 가지고 있으며 이는 프랙탈과 같은 더 많은 

426
00:18:33,775 --> 00:18:35,970
야생 집합의 맥락에서 추론하기를 더 쉽게 만듭니다. 

427
00:18:36,429 --> 00:18:39,769
해당 점을 중심으로 작은 원을 그릴 때 아무리 

428
00:18:39,769 --> 00:18:43,365
작더라도 항상 해당 집합 내부와 외부 모두에 있는 

429
00:18:43,365 --> 00:18:47,090
점을 포함하면 점이 집합의 경계에 있다고 말합니다. 

430
00:18:47,890 --> 00:18:50,248
따라서 내부에 점이 있는 경우 충분히 

431
00:18:50,248 --> 00:18:52,494
작은 원에는 결국 집합 내부의 점만 

432
00:18:52,494 --> 00:18:54,965
포함되고 외부에 있는 점의 경우 충분히 

433
00:18:54,965 --> 00:18:58,110
작은 원에는 집합의 점이 전혀 포함되지 않습니다. 

434
00:18:58,610 --> 00:19:00,054
그러나 그것이 경계에 있을 때, 

435
00:19:00,054 --> 00:19:01,901
경계에 있다는 것이 의미하는 바는 당신의 

436
00:19:01,901 --> 00:19:03,586
아주 작은 원이 항상 두 가지를 모두 

437
00:19:03,586 --> 00:19:04,550
포함한다는 것입니다. 

438
00:19:05,410 --> 00:19:08,452
따라서 속성을 되돌아보면 이를 읽는 한 가지 

439
00:19:08,452 --> 00:19:11,494
방법은 원을 그리면 그 원이 아무리 작더라도 

440
00:19:11,494 --> 00:19:14,415
모든 색상을 포함하거나 색상의 공유 경계가 

441
00:19:14,415 --> 00:19:17,945
해당 원 안에 있을 때 발생한다고 말하는 것입니다. 

442
00:19:17,945 --> 00:19:20,987
, 또는 하나의 색상만 포함하고 있으며 이는 

443
00:19:20,987 --> 00:19:24,030
영역 중 하나의 내부에 있을 때 발생합니다. 

444
00:19:27,050 --> 00:19:29,410
특히 이것이 의미하는 바는 두 가지 

445
00:19:29,410 --> 00:19:32,597
색상만 포함하는 원을 찾을 수 없다는 것입니다. 

446
00:19:32,597 --> 00:19:35,075
왜냐하면 두 영역 사이의 경계에 점이 

447
00:19:35,075 --> 00:19:37,790
있어야 하지만 전부는 아니기 때문입니다. 

448
00:19:38,950 --> 00:19:40,561
그리고 이 사실이 실제로 어디서 

449
00:19:40,561 --> 00:19:42,441
유래했는지 설명하기 전에, 그 사실에 

450
00:19:42,441 --> 00:19:44,590
대해 조금 생각해 보는 것도 재미있습니다. 

451
00:19:44,990 --> 00:19:47,276
뉴턴의 방법이나 그와 유사한 것을 전혀 언급하지 

452
00:19:47,276 --> 00:19:49,562
않고 완전히 맥락에서 벗어난 일종의 예술 퍼즐로 

453
00:19:49,562 --> 00:19:52,102
누군가에게 이것을 제시하는 것을 상상할 수 있습니다. 

454
00:19:52,102 --> 00:19:53,880
여기서 도전은 최소한 세 가지 색상, 

455
00:19:53,880 --> 00:19:56,251
아마도 우리는 빨간색이라고 부르는 그림을 구성하는 

456
00:19:56,251 --> 00:19:58,537
것이라고 말합니다. 녹색, 파란색이므로 한 가지 

457
00:19:58,537 --> 00:20:00,570
색상의 경계가 모든 색상의 경계가 됩니다. 

458
00:20:00,950 --> 00:20:03,283
따라서 이와 같이 간단한 것으로 시작했다면 

459
00:20:03,283 --> 00:20:05,616
분명히 작동하지 않습니다. 왜냐하면 녹색과 

460
00:20:05,616 --> 00:20:07,949
빨간색의 경계에 있지만 파란색과 닿지 않는 

461
00:20:07,949 --> 00:20:10,282
점의 전체 라인이 있고 마찬가지로 허용되지 

462
00:20:10,282 --> 00:20:12,810
않는 다른 라인도 있기 때문입니다. 포인트들. 

463
00:20:13,630 --> 00:20:16,234
따라서 이를 수정하려면 경계를 따라 파란색 얼룩을 

464
00:20:16,234 --> 00:20:18,652
추가한 다음 마찬가지로 빨간색과 파란색 사이에 

465
00:20:18,652 --> 00:20:21,256
녹색 얼룩을 추가하고 녹색과 파란색 사이에 빨간색 

466
00:20:21,256 --> 00:20:23,675
얼룩을 추가할 수 있습니다. 물론 이제는 해당 

467
00:20:23,675 --> 00:20:25,535
얼룩의 경계가 됩니다. 예를 들어, 

468
00:20:25,535 --> 00:20:28,139
파란색과 빨간색만 만지고 녹색은 만지지 않는 등의 

469
00:20:28,139 --> 00:20:29,070
문제가 있습니다. 

470
00:20:29,629 --> 00:20:31,790
따라서 수정을 시도하는 데 도움이 되도록 더 

471
00:20:31,790 --> 00:20:34,123
작은 경계 주위에 관련 세 번째 색상을 사용하여 

472
00:20:34,123 --> 00:20:36,370
더 작은 얼룩을 추가하려고 할 수도 있습니다. 

473
00:20:37,310 --> 00:20:39,423
마찬가지로 처음에 추가한 모든 Blob에 

474
00:20:39,423 --> 00:20:41,170
대해 이 작업을 수행해야 합니다. 

475
00:20:44,450 --> 00:20:47,561
그러나 그 작은 얼룩의 모든 경계는 그 자체의 

476
00:20:47,561 --> 00:20:50,912
문제이므로 어떻게든 이 과정을 영원히 계속해야 할 

477
00:20:50,912 --> 00:20:51,630
것입니다. 

478
00:20:53,570 --> 00:20:57,301
그리고 뉴턴의 프랙탈 자체를 보면 이런 종류의 얼룩 

479
00:20:57,301 --> 00:21:01,161
위의 얼룩 패턴이 바로 그것이 하는 일인 것 같습니다.

480
00:21:01,161 --> 00:21:01,290
 

481
00:21:06,550 --> 00:21:08,824
제가 주목하고 싶은 가장 중요한 점은 이 속성이 

482
00:21:08,824 --> 00:21:11,098
어떤 작은 세그먼트에서 매끄러운 경계를 가질 수 

483
00:21:11,098 --> 00:21:13,288
없거나 심지어 부분적으로 매끄러운 경계를 가질 

484
00:21:13,288 --> 00:21:15,057
수 없다는 것을 의미한다는 것입니다. 

485
00:21:15,057 --> 00:21:17,247
왜냐하면 매끄러운 세그먼트는 두 가지 색상에만 

486
00:21:17,247 --> 00:21:18,090
닿기 때문입니다. 

487
00:21:18,790 --> 00:21:20,740
대신, 말하자면 경계는 완전히 

488
00:21:20,740 --> 00:21:23,150
날카로운 모서리로 구성되어야 합니다. 

489
00:21:23,810 --> 00:21:26,488
따라서 속성을 믿으면 아무리 확대해도 

490
00:21:26,488 --> 00:21:29,550
경계가 거칠게 유지되는 이유를 설명합니다. 

491
00:21:30,170 --> 00:21:32,730
그리고 프랙탈 차원의 개념에 익숙한 분들을 

492
00:21:32,730 --> 00:21:35,503
위해 제가 지금 보여드리는 특정 경계의 차원이 

493
00:21:35,503 --> 00:21:38,170
약 1인 것으로 측정할 수 있습니다. 44. 

494
00:21:39,890 --> 00:21:41,492
우리의 색상이 실제로 무엇을 나타내는지 

495
00:21:41,492 --> 00:21:43,314
생각해 보면 이것이 단지 그림을 위한 그림이 

496
00:21:43,314 --> 00:21:45,062
아니라는 점을 기억하고 해당 건물이 실제로 

497
00:21:45,062 --> 00:21:47,030
우리에게 무엇을 말하고 있는지 생각해 보십시오. 

498
00:21:48,310 --> 00:21:51,120
시드 값 중 일부가 하나의 루트로 이동하지만 

499
00:21:51,120 --> 00:21:53,931
근처의 다른 시드 값이 다른 루트로 이동하는 

500
00:21:53,931 --> 00:21:57,079
민감한 지점 근처에 있는 경우 실제로 가능한 모든 

501
00:21:57,079 --> 00:22:00,227
루트는 해당 작은 이웃 내에서 액세스할 수 있어야 

502
00:22:00,227 --> 00:22:00,790
합니다. 

503
00:22:01,530 --> 00:22:03,836
당신이 그리는 작은 작은 원의 경우, 

504
00:22:03,836 --> 00:22:06,581
그 원의 모든 점은 단지 하나의 뿌리에 대한 

505
00:22:06,581 --> 00:22:09,436
경향이 있거나 모든 뿌리에 대한 경향이 있지만 

506
00:22:09,436 --> 00:22:12,181
그 사이에는 뿌리의 하위 집합에 대한 경향이 

507
00:22:12,181 --> 00:22:13,170
전혀 없습니다. 

508
00:22:14,050 --> 00:22:16,013
약간의 직관을 위해 화면에 나오는 것과 

509
00:22:16,013 --> 00:22:17,886
같은 클러스터가 이 과정을 겪는 것을 

510
00:22:17,886 --> 00:22:19,850
단순히 보는 것이 깨달음을 얻었습니다. 

511
00:22:20,430 --> 00:22:23,290
대부분 서로 달라붙는 것으로 시작하지만 한 번 

512
00:22:23,290 --> 00:22:26,370
반복하면 모두 바깥쪽으로 폭발하고 그 후에는 어떤 

513
00:22:26,370 --> 00:22:29,560
루트라도 잡을 수 있다는 것이 훨씬 더 합리적이라고 

514
00:22:29,560 --> 00:22:30,330
느껴집니다. 

515
00:22:31,370 --> 00:22:33,535
저는 단지 유한한 많은 점을 보여주고 있다는 

516
00:22:33,535 --> 00:22:35,786
점을 명심하십시오. 그러나 원칙적으로 여러분은 

517
00:22:35,786 --> 00:22:37,865
작은 디스크 내부의 셀 수 없이 많은 점에 

518
00:22:37,865 --> 00:22:40,290
어떤 일이 일어나는지 생각해 보고 싶을 것입니다. 

519
00:22:44,610 --> 00:22:47,475
이 속성은 또한 근이 두 개인 이차 다항식의 

520
00:22:47,475 --> 00:22:50,683
경우 사물이 정상적으로 보이는 이유를 설명합니다. 

521
00:22:50,683 --> 00:22:53,434
부드러운 경계가 있으면 괜찮고 어쨌든 만질 

522
00:22:53,434 --> 00:22:56,070
수 있는 색상은 두 개뿐이기 때문입니다. 

523
00:22:56,830 --> 00:23:00,093
분명히 말하면, 이차 사례의 경계가 매끄러울 것이라는 

524
00:23:00,093 --> 00:23:03,138
보장은 없으며 두 색상 사이에 프랙탈 경계를 갖는 

525
00:23:03,138 --> 00:23:06,292
것이 완벽하게 가능합니다. 뉴턴의 방법 다이어그램이 

526
00:23:06,292 --> 00:23:09,555
필요한 것보다 더 복잡한 작업을 수행하지 않는 것처럼 

527
00:23:09,555 --> 00:23:12,710
보입니다. 이 이상한 경계 조건의 제약을 받습니다. 

528
00:23:13,850 --> 00:23:15,768
그러나 물론 이 모든 것은 애초에 

529
00:23:15,768 --> 00:23:17,888
왜 이 기괴한 경계 속성이 사실이어야 

530
00:23:17,888 --> 00:23:20,110
하는지에 대한 의문을 제기할 뿐입니다. 

531
00:23:20,410 --> 00:23:21,510
그것은 어디에서 오는가? 

532
00:23:22,450 --> 00:23:24,110
이를 위해 저는 이런 종류의 질문을 연구하는 

533
00:23:24,110 --> 00:23:25,836
수학 분야인 홀로모픽 동역학(holomorphi

534
00:23:25,836 --> 00:23:27,630
cdynamics)에 대해 말씀드리고 싶습니다. 

535
00:23:28,410 --> 00:23:30,449
오늘 우리는 충분한 내용을 다루었고 말할 

536
00:23:30,449 --> 00:23:32,488
내용도 충분히 남아 있으므로 이를 별도의 

537
00:23:32,488 --> 00:23:34,350
비디오로 분리하는 것이 합리적입니다. 

538
00:23:35,010 --> 00:23:37,190
여기서 마무리하자면, 우리가 이것을 뉴턴의 

539
00:23:37,190 --> 00:23:39,281
프랙탈이라고 부르는 사실이 나에게는 뭔가 

540
00:23:39,281 --> 00:23:41,825
우스꽝스럽습니다. 뉴턴은 이것에 대해 전혀 단서가 

541
00:23:41,825 --> 00:23:44,460
없었고 결코 여러분과 같은 방식으로 이러한 이미지를 

542
00:23:44,460 --> 00:23:47,096
가지고 놀 수 없었다는 사실에도 불구하고 말입니다. 

543
00:23:47,096 --> 00:23:48,550
현대 기술로 할 수 있어요. 

544
00:23:49,050 --> 00:23:51,758
그리고 사람들의 이름이 그들이 꿈꾸던 것 이상으로 

545
00:23:51,758 --> 00:23:54,370
사물에 붙는 일은 수학을 통해 많이 일어납니다. 

546
00:23:54,810 --> 00:23:57,167
해밀턴은 양자역학에 대해 아무것도 몰랐음에도 

547
00:23:57,167 --> 00:23:59,430
불구하고 해밀턴인은 양자역학의 핵심입니다. 

548
00:24:00,010 --> 00:24:02,033
푸리에 자신은 한 번도 빠른 

549
00:24:02,033 --> 00:24:04,690
푸리에 변환을 계산한 적이 없습니다. 

550
00:24:04,690 --> 00:24:07,375
그러나 이러한 명명법의 과도한 확장은 제가 

551
00:24:07,375 --> 00:24:09,950
생각하기에 고무적인 포인트를 전달합니다. 

552
00:24:10,530 --> 00:24:13,110
이는 수백 년 전에 발견될 수 있었던 단순한 

553
00:24:13,110 --> 00:24:15,795
아이디어조차도 수백 년 후에 발견되기를 기다릴 

554
00:24:15,795 --> 00:24:18,582
수 있는 새로운 관점이나 관련성의 새로운 영역을 

555
00:24:18,582 --> 00:24:21,370
그 안에 얼마나 자주 담고 있는지를 반영합니다. 

556
00:24:21,910 --> 00:24:23,530
뉴턴이 뉴턴의 프랙탈에 대해 

557
00:24:23,530 --> 00:24:25,150
전혀 몰랐던 것은 아닙니다. 

558
00:24:25,330 --> 00:24:27,793
아마도 뉴턴의 방법이나 오래된 뉴스처럼 보일 수 

559
00:24:27,793 --> 00:24:30,348
있는 모든 종류의 수학에 관한 많은 다른 사실들이 

560
00:24:30,348 --> 00:24:32,903
있을 것입니다. 이러한 사실들은 아직 아무도 묻지 

561
00:24:32,903 --> 00:24:35,550
않은 질문, 그냥 거기 앉아서 당신과 같은 누군가를 

562
00:24:35,550 --> 00:24:37,375
기다리고 있는 질문에서 비롯됩니다. 

563
00:24:37,375 --> 00:24:38,470
그들에게 물어보세요. 

564
00:24:42,870 --> 00:24:45,305
예를 들어, 오늘 이야기한 이 과정이 

565
00:24:45,305 --> 00:24:48,088
순환에 갇힌 적이 있는지 묻는다면 만델브로 

566
00:24:48,088 --> 00:24:50,639
집합과 놀라운 연관성을 갖게 되며 이에 

567
00:24:50,639 --> 00:24:53,770
대해서는 다음에서 조금 이야기하겠습니다. 부분. 

568
00:24:55,030 --> 00:24:57,023
제가 이 글을 게시하는 시점에서 두 번째 

569
00:24:57,023 --> 00:24:59,190
부분은 후원자에게 조기 릴리스로 제공됩니다. 

570
00:24:59,590 --> 00:25:01,424
저는 항상 새로운 콘텐츠에 약간의 시간을 내어 

571
00:25:01,424 --> 00:25:03,470
피드백을 수집하고 오류를 파악하는 것을 좋아합니다. 

572
00:25:03,950 --> 00:25:05,610
최종 버전이 곧 출시될 예정입니다. 

573
00:25:06,470 --> 00:25:08,328
그리고 후원자에 관해서는 화면에 이름이 나오는 

574
00:25:08,328 --> 00:25:10,330
모든 분들께 간단히 감사 인사를 전하고 싶습니다. 

575
00:25:10,750 --> 00:25:12,206
최근 들어 새로운 동영상이 나오는 

576
00:25:12,206 --> 00:25:13,970
속도가 조금 느린 것으로 알고 있습니다. 

577
00:25:14,410 --> 00:25:15,515
이 중 일부는 현재 진행 중인 

578
00:25:15,515 --> 00:25:16,750
다른 프로젝트와 관련이 있습니다. 

579
00:25:17,230 --> 00:25:19,617
그런데 제가 자랑스러워하는 여름 수학 박람회 

580
00:25:19,617 --> 00:25:21,909
같은 것들은 솔직히 말해서 놀랄 만큼 많은 

581
00:25:21,909 --> 00:25:24,774
작업이었지만 결과를 고려하면 그만한 가치가 있었습니다.

582
00:25:24,774 --> 00:25:24,870
 

583
00:25:25,110 --> 00:25:26,906
이에 대해 모두 이야기하고 곧 우승자를 

584
00:25:26,906 --> 00:25:29,030
발표할 예정이니 계속 지켜봐 주시기 바랍니다. 

585
00:25:29,450 --> 00:25:32,357
가까운 미래에 대한 계획은 확실히 새로운 동영상 

586
00:25:32,357 --> 00:25:35,373
제작으로 다시 전환하는 것이라는 점을 알아주셨으면 

587
00:25:35,373 --> 00:25:38,280
하며, 무엇보다도 몇 가지 새로운 것을 시도하는 

588
00:25:38,280 --> 00:25:40,650
동안에도 지속적인 지원에 감사드립니다. 

589
00:25:40,910 --> 00:25:43,150
이는 나에게 큰 의미가 있고 채널을 계속 유지하는 

590
00:25:43,150 --> 00:25:45,230
원동력이며 파이프라인의 새로운 교훈이 여러분의 

591
00:25:45,230 --> 00:25:47,310
신뢰에 부응할 수 있도록 최선을 다하겠습니다. 

