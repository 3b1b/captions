1
00:00:00,000 --> 00:00:02,754
タイトルを見たことがあるので、これが特定の

2
00:00:02,754 --> 00:00:05,640
フラクタルにつながっていることがわかります。

3
00:00:05,640 --> 00:00:08,120
そして実際には、それは無限のフラクタル群です。

4
00:00:08,120 --> 00:00:11,518
そして、そうです、それは、どれほどズームインしても無限の

5
00:00:11,518 --> 00:00:14,800
ディテールを持つ、気が遠くなるほど複雑な形状の1つです。

6
00:00:14,800 --> 00:00:16,840
しかし、これは実際には、私たちがじっと見つめるため

7
00:00:16,840 --> 00:00:18,880
の美しい画像を生成するためのビデオではありません。

8
00:00:18,880 --> 00:00:21,354
まあ、それも一部かもしれませんが、ここでの

9
00:00:21,354 --> 00:00:23,829
本当の話は、他の多くの フラクタルの背後に

10
00:00:23,829 --> 00:00:26,540
ある話よりもはるかに実用的な出発点があります。

11
00:00:26,540 --> 00:00:30,892
そしてそれ以上に、私たちが最終的に得られる画像は、それが何

12
00:00:30,892 --> 00:00:35,244
を表しているの かを考えると、なぜ同じように複雑に見えなけ

13
00:00:35,244 --> 00:00:39,596
ればならないのか、そしてこの 複雑さが何を反映しているのか

14
00:00:39,596 --> 00:00:43,047
を理解する努力をすれば、より意味のあるものに

15
00:00:43,047 --> 00:00:47,399
なるでしょう。エンジニアリングのあらゆる場所で使用されるア

16
00:00:47,399 --> 00:00:48,300
ルゴリズム。

17
00:00:48,300 --> 00:00:51,357
ここでの出発点は、ある種の多項式があり、それがいつ

18
00:00:51,357 --> 00:00:54,180
ゼロに等しくなるかを知りたいと仮定することです。

19
00:00:54,180 --> 00:00:56,680
ここにある 1 つのグラフでは、X 軸と交差する

20
00:00:56,680 --> 00:00:59,280
3 つの異なる場所があること が視覚的にわかり、それ

21
00:00:59,280 --> 00:01:01,980
らの値がどのようなものであるかをある程度把握できます。

22
00:01:01,980 --> 00:01:04,380
これらを多項式の根と呼びます。

23
00:01:04,380 --> 00:01:05,500
しかし、実際にそれらを正確に計算す

24
00:01:05,500 --> 00:01:06,620
るにはどうすればよいでしょうか?

25
00:01:06,620 --> 00:01:09,908
さて、これは、あなたがすでに数学に夢中になっている場合

26
00:01:09,908 --> 00:01:13,080
、おそらくそれ自体で先に進むのに十分興味深い質問です。

27
00:01:13,080 --> 00:01:16,121
でも、もし道で誰かを脇に寄せてこれを尋ねたら、彼らはもう眠

28
00:01:16,121 --> 00:01:18,960
りに落ちているでしょう、なぜなら誰が気にするでしょうか？

29
00:01:18,960 --> 00:01:20,930
しかし実際のところ、この種の質問はエン

30
00:01:20,930 --> 00:01:22,900
ジニアリングの分野では常に発生します。

31
00:01:22,900 --> 00:01:25,406
私が個人的にこのような方程式が現れるのに最も馴

32
00:01:25,406 --> 00:01:27,913
染みがあるのは、多項式 があちこちに散らばって

33
00:01:27,913 --> 00:01:30,420
いるコンピューター グラフィックスの設定です。

34
00:01:30,420 --> 00:01:33,455
したがって、特定のピクセルをどのように色付けするかを考

35
00:01:33,455 --> 00:01:36,491
えるときに、何らかの形でこれ らの多項式を使用する方程

36
00:01:36,491 --> 00:01:39,640
式を解くことが必要になることは珍しいことではありません。

37
00:01:39,640 --> 00:01:41,320
ここで、面白い例を 1 つ紹介しましょう。

38
00:01:41,320 --> 00:01:44,340
コンピュータが画面上にテキストをレンダリングするとき、それ

39
00:01:44,340 --> 00:01:47,160
らのフォントは通常、ピクセル値を使用して定義されません。

40
00:01:47,160 --> 00:01:50,407
これらは、業界ではベジェ曲線として知られ

41
00:01:50,407 --> 00:01:53,500
ている多項式曲線の束として定義されます。

42
00:01:53,500 --> 00:01:56,251
そして、おそらく何らかのデザイン ソフトウェアでベクター

43
00:01:56,251 --> 00:01:58,527
グラフィックスを いじったことがある人なら、この

44
00:01:58,527 --> 00:02:00,520
種の曲線についてはよく知っているでしょう。

45
00:02:00,520 --> 00:02:03,146
しかし、それらの 1 つを実際に画面上に表

46
00:02:03,146 --> 00:02:05,773
示するには、画面の各 ピクセルに色を付ける

47
00:02:05,773 --> 00:02:08,400
必要があるかどうかを伝える方法が必要です。

48
00:02:08,400 --> 00:02:10,703
これらの曲線は、ある種のストローク幅で表示

49
00:02:10,703 --> 00:02:13,006
することも、領域を囲む 場合にはその領域を

50
00:02:13,006 --> 00:02:15,420
何らかの塗りつぶしで表示することもできます。

51
00:02:15,420 --> 00:02:18,684
しかし、一歩下がってよく考えてみると、純粋な数学的曲線だ

52
00:02:18,684 --> 00:02:21,948
けに基づいて、各ピクセルが色を付ける必要があるかどうかを

53
00:02:21,948 --> 00:02:25,100
どのように判断するのかを理解するのは興味深いパズルです。

54
00:02:25,100 --> 00:02:27,480
つまり、ストローク幅の場合を考えてみましょう。

55
00:02:27,480 --> 00:02:30,496
これは、特定のピクセルがこの純粋な数学的曲線から

56
00:02:30,496 --> 00:02:33,512
どれだけ離れているかを理解 することに帰着します

57
00:02:33,512 --> 00:02:36,780
。曲線自体はプラトニックな理想であり、幅はゼロです。

58
00:02:36,780 --> 00:02:39,450
これは、パラメーター t を持つパラメトリック

59
00:02:39,450 --> 00:02:41,120
カーブと考えることができます。

60
00:02:41,120 --> 00:02:43,466
この距離を計算するためにできることの 1

61
00:02:43,466 --> 00:02:45,700
つは、ピクセルとその曲線上の サンプル

62
00:02:45,700 --> 00:02:48,940
ポイントの束の間の距離を計算し、最小値を計算することです。

63
00:02:48,940 --> 00:02:52,620
しかし、それは非効率的で不正確です。

64
00:02:52,620 --> 00:02:55,560
少し数学的に理解して、考えられるすべての点で

65
00:02:55,560 --> 00:02:58,500
の曲線までの距離自体が パラメーターの滑らか

66
00:02:58,500 --> 00:03:01,440
な関数であることを認識する方が良いでしょう。

67
00:03:01,440 --> 00:03:04,841
そしてたまたまですが、その距離の 2 乗自体が

68
00:03:04,841 --> 00:03:07,960
多項式になるため、非常に扱いやすくなります。

69
00:03:07,960 --> 00:03:10,658
これがベクター グラフィックスのレンダリングに関する完全

70
00:03:10,658 --> 00:03:12,683
なレッスンであることを意図しているのであ

71
00:03:12,683 --> 00:03:15,381
れば、すべてを拡張して混乱を受け入れることもできますが、

72
00:03:15,381 --> 00:03:17,309
現時点で強調したい唯一の顕著な点は、原

73
00:03:17,309 --> 00:03:20,008
則として、この関数は必要最小限であるということです。知る

74
00:03:20,008 --> 00:03:21,840
ためには、いくつかの多項式があります。

75
00:03:21,840 --> 00:03:24,332
この最小値を見つけて、ピクセルが曲線にどれだけ近

76
00:03:24,332 --> 00:03:26,824
いか、また曲線を埋める必 要があるかどうかを決定

77
00:03:26,824 --> 00:03:29,420
することは、現在では単なる古典的な微積分問題です。

78
00:03:29,420 --> 00:03:32,697
あなたがすることは、この関数グラフの傾き、つ

79
00:03:32,697 --> 00:03:35,974
まり導関数、やはり多項 式を計算することであ

80
00:03:35,974 --> 00:03:39,400
り、それがいつゼロに等しくなるのかを尋ねます。

81
00:03:39,400 --> 00:03:43,330
したがって、曲線を表示するだけのこの一見単純なタスクを実際

82
00:03:43,330 --> 00:03:47,260
に実行するには、特定の多項式がいつゼロに等しくなるかを把握

83
00:03:47,260 --> 00:03:51,060
する体系的かつ一般的な方法があれば便利だと思いませんか?

84
00:03:51,060 --> 00:03:53,386
もちろん、他の 100 の分野から 100

85
00:03:53,386 --> 00:03:56,454
の例を引き出すこともできます。多項式の根を求めるとき、私た

86
00:03:56,454 --> 00:03:58,992
ちは常に実数の煩雑さからきれいに抽象化された方

87
00:03:58,992 --> 00:04:02,060
法で多項式を表示しているにもかかわらず、そのことを覚えてお

88
00:04:02,060 --> 00:04:05,127
いていただきたい のです。世界的な問題ですが、その課題は単

89
00:04:05,127 --> 00:04:06,820
なる学術的なものではありません。

90
00:04:06,820 --> 00:04:09,711
しかし、もう一度自問してみてください。これらの根の

91
00:04:09,711 --> 00:04:12,380
1 つを実際にどのように計算するのでしょうか?

92
00:04:12,380 --> 00:04:14,932
取り組んでいる問題が何であれ、二次関数にたどり

93
00:04:14,932 --> 00:04:17,485
着くなら、幸せな日々を過 ごしてください。誰も

94
00:04:17,485 --> 00:04:20,260
が知っていて大好きな二次関数を使うことができます。

95
00:04:20,260 --> 00:04:22,674
面白い余談ですが、これもコンピューター

96
00:04:22,674 --> 00:04:24,848
グラフィックスにおける根本原因の発

97
00:04:24,848 --> 00:04:27,987
見に関係しますが、私はかつてピクサーのエンジニアに、

98
00:04:27,987 --> 00:04:31,127
映画『ココ』のいくつか のシーンで使用されたライトの

99
00:04:31,127 --> 00:04:33,904
数と、それらのいくつかの性質を考慮した見積も

100
00:04:33,904 --> 00:04:37,044
りを教えてもらいました。球などの多項式で定義されたも

101
00:04:37,044 --> 00:04:40,183
のが関係する場合のピク セルごとの計算では、映画の制

102
00:04:40,183 --> 00:04:42,840
作で二次公式が簡単に何兆回も使用されました。

103
00:04:42,840 --> 00:04:45,443
さて、問題が高次の多項式につながる

104
00:04:45,443 --> 00:04:48,200
と、事態はさらに複雑になり始めます。

105
00:04:48,200 --> 00:04:50,953
3 次多項式については、Mathologer

106
00:04:50,953 --> 00:04:54,424
が素晴らしいビデオを 作成した公式もあります。さらに、4

107
00:04:54,424 --> 00:04:57,536
次多項式を解く 4 次の公式 もあります。ただし、正

108
00:04:57,536 --> 00:05:00,289
直に言って、これは本質的に解決できない公式の

109
00:05:00,289 --> 00:05:03,401
非常に恐ろしい悪夢です。実際に実際に使っている人もい

110
00:05:03,401 --> 00:05:04,120
るでしょう。

111
00:05:04,120 --> 00:05:08,023
しかしその後、これは数学全体の中で最も魅力的な結果の

112
00:05:08,023 --> 00:05:10,336
1 つであると思 いますが、5

113
00:05:10,336 --> 00:05:14,240
次以上の多項式を解くための類似の公式は存在できません。

114
00:05:14,240 --> 00:05:18,308
より具体的には、かなり広範な標準関数セットの場合、5

115
00:05:18,308 --> 00:05:22,828
次多項 式の係数を差し込んで常に根を求めることができるように

116
00:05:22,828 --> 00:05:27,348
、これ らの関数を組み合わせる方法が存在しないことを証明でき

117
00:05:27,348 --> 00:05:27,800
ます。

118
00:05:27,800 --> 00:05:30,811
これは、五次関数の非解決性として知られています。こ

119
00:05:30,811 --> 00:05:33,823
れはまったく別 のワームの缶詰です。できれば別の機

120
00:05:33,823 --> 00:05:36,835
会に取り上げることができます が、実際には、この種

121
00:05:36,835 --> 00:05:39,485
の解を近似するアルゴリズムがあるため、それ

122
00:05:39,485 --> 00:05:42,497
は問題ではありません。必要な精度レベルで方程式を作

123
00:05:42,497 --> 00:05:43,220
成できます。

124
00:05:43,220 --> 00:05:45,460
共通のものであり、今日のあなたと私にとっ

125
00:05:45,460 --> 00:05:47,700
ての主要なトピックは、ニュートン法です。

126
00:05:47,700 --> 00:05:50,281
そして、はい、これが私たちをフラクタルに導くもの

127
00:05:50,281 --> 00:05:52,863
ですが、最初は手順全体がど れほど無邪気で良性で

128
00:05:52,863 --> 00:05:55,660
あるように見えるかに注目していただきたいと思います。

129
00:05:55,660 --> 00:05:58,598
アルゴリズムはランダムな推測から始まり、それを

130
00:05:58,598 --> 00:05:59,700
x0 と呼びます。

131
00:05:59,700 --> 00:06:02,230
ほぼ確実に、x0 における多項式の出力は 0

132
00:06:02,230 --> 00:06:03,990
ではないため、解決策は見つかっ

133
00:06:03,990 --> 00:06:06,740
ていません。それは、その時点でこのグラフの高さとし

134
00:06:06,740 --> 00:06:08,060
て表示される他の値です。

135
00:06:08,060 --> 00:06:12,080
したがって、推測を改善するために、その値の周囲の関数の線形近

136
00:06:12,080 --> 00:06:16,100
似が 0 に等しくなるのはいつかを尋ねるのがアイデアです。

137
00:06:16,100 --> 00:06:19,886
つまり、この時点でグラフに接線を引いた場合

138
00:06:19,886 --> 00:06:23,500
、その接線はいつ x 軸と交差しますか?

139
00:06:23,500 --> 00:06:27,174
ここで、この接線が、ある真の根の大まかな近傍における

140
00:06:27,174 --> 00:06:30,441
関数の適切な近似であると仮定すると、この近似が

141
00:06:30,441 --> 00:06:33,980
0 に等しい場所により、その真の根に近づくはずです。

142
00:06:33,980 --> 00:06:38,129
この関数の導関数を得ることができ、多項式を使用すれば常にそ

143
00:06:38,129 --> 00:06:42,140
れが可能である限り、この直線の傾きを具体的に計算できます。

144
00:06:42,140 --> 00:06:44,326
ここで、アクティブな視聴者が立ち止まって尋ね

145
00:06:44,326 --> 00:06:46,513
たいと思うかもしれま せん。現在の推測と改善

146
00:06:46,513 --> 00:06:48,700
された推測の違いをどうやって見つけますか?

147
00:06:48,700 --> 00:06:51,300
このステップのサイズはどれくらいですか?

148
00:06:51,300 --> 00:06:54,108
これを考える 1 つの方法は、この接線の傾き、つまり

149
00:06:54,108 --> 00:06:56,916
ランに対する上昇が、このグラ フの高さをそのステップ

150
00:06:56,916 --> 00:06:59,940
の長さで割ったものに見えるという事実を考慮することです。

151
00:06:59,940 --> 00:07:02,777
しかし一方で、もちろん、接線の傾き

152
00:07:02,777 --> 00:07:05,300
はその点での多項式の導関数です。

153
00:07:05,300 --> 00:07:08,607
ここでこの方程式を少し整理すると、ステップ サイズ

154
00:07:08,607 --> 00:07:11,660
を計算するための非常に具体的な方法が得られます。

155
00:07:11,660 --> 00:07:15,112
したがって、次の推測 (x1 と呼ぶこともあります)

156
00:07:15,112 --> 00:07:18,820
は 、このステップ サイズによって調整された前の推測です。

157
00:07:18,820 --> 00:07:21,500
その後は、このプロセスを繰り返すだけです。

158
00:07:21,500 --> 00:07:25,397
この関数の値とこの新しい推定値での傾きを計算する

159
00:07:25,397 --> 00:07:29,294
と、新しい線形近似が得られ、その接線が x 軸と

160
00:07:29,294 --> 00:07:32,880
交差する位置で次の推定値 x2 を作成します。

161
00:07:32,880 --> 00:07:36,520
次に、同じ計算を x2 に適用すると、x3 が得られます。

162
00:07:36,520 --> 00:07:39,339
そしてやがて、あなたは自分が真のルートに

163
00:07:39,339 --> 00:07:42,159
非常に近づいているこ とに気づきます。そ

164
00:07:42,159 --> 00:07:45,120
れは、自分が望んでいた限りに近いものです。

165
00:07:45,120 --> 00:07:47,624
数式が実際に意味があるかどうかを直感的にチェックする価

166
00:07:47,624 --> 00:07:50,040
値は常にあり、この場合、意味があることを願っています。

167
00:07:50,040 --> 00:07:53,257
x の p が大きい場合、つまりグラフが非常に高い場合、根

168
00:07:53,257 --> 00:07:56,260
に到達するためにより大きなステップを踏む必要があります。

169
00:07:56,260 --> 00:07:58,766
しかし、x の p&#39; も大きい場合、つまりグ

170
00:07:58,766 --> 00:08:01,273
ラフが非常に急勾配であるこ とを意味する場合は、その

171
00:08:01,273 --> 00:08:03,780
ステップの大きさを緩和する必要があるかもしれません。

172
00:08:03,780 --> 00:08:06,610
名前が示すように、これはニュートンが

173
00:08:06,610 --> 00:08:09,440
多項式を解くために使用した方法です。

174
00:08:09,440 --> 00:08:12,765
しかし、彼はそれを必要以上に複雑に見せ、ジョセフ・ラフソン

175
00:08:12,765 --> 00:08:16,090
という名前の研究者が 、あなたや私が今見ているものに近い、

176
00:08:16,090 --> 00:08:18,497
より単純なバージョンを公開しました。その

177
00:08:18,497 --> 00:08:21,822
ため、ニュートンと呼ばれるこのアルゴリズムもよく耳にします

178
00:08:21,822 --> 00:08:22,740
。-ラフソン法。

179
00:08:22,740 --> 00:08:25,460
最近、微積分の授業でよく取り上げられる話題です。

180
00:08:25,460 --> 00:08:29,489
ちなみに、感覚をつかむためのちょっとした練習として、この

181
00:08:29,489 --> 00:08:33,380
方法を使って手動で平方根を近似してみるのもいいでしょう。

182
00:08:33,380 --> 00:08:37,504
しかし、ほとんどの微積分の学生は、残念なことに、この一見単

183
00:08:37,504 --> 00:08:41,490
純な手順を試してみて、かさぶたをほじくり始めると、物事が

184
00:08:41,490 --> 00:08:45,340
どれほど奥深いものになるかということを理解していません。

185
00:08:45,340 --> 00:08:48,580
ご存知のとおり、ニュートン法は根の近くで開始するとすぐに

186
00:08:48,580 --> 00:08:51,820
収束するためうまく機能します が、最初の推測が根から遠く

187
00:08:51,820 --> 00:08:55,060
離れている場合は、いくつかの欠点がある可能性があります。

188
00:08:55,060 --> 00:08:58,851
たとえば、先ほど見ていた関数を上にシフトして、同

189
00:08:58,851 --> 00:09:02,340
じ初期推測で同じゲームをプレイしてみましょう。

190
00:09:02,340 --> 00:09:09,064
新しい推測のシーケンスが、x 軸の上にあるこの関数の

191
00:09:09,064 --> 00:09:15,540
極小値付近でどのように跳ね返るかに注目してください。

192
00:09:15,540 --> 00:09:19,732
これはある程度意味があるはずです。つまり、右端までのこれ

193
00:09:19,732 --> 00:09:23,924
らの値の周囲の関数の線形近似は、左端にある 1 つの真の

194
00:09:23,924 --> 00:09:28,116
根の周囲の関数の性質とはまったく無関係です。本当のルート

195
00:09:28,116 --> 00:09:32,020
に関する有用な情報は何も提供していないようなものです。

196
00:09:32,020 --> 00:09:35,791
このプロセスが偶然、新しい推測を十分に左に外したと

197
00:09:35,791 --> 00:09:39,418
きにのみ、一連の新しい推測が何らかの生産的な効果

198
00:09:39,418 --> 00:09:42,900
をもたらし、実際にその真のルートに近づくのです。

199
00:09:42,900 --> 00:09:45,852
物事が特に興味深いのは、複素平面で

200
00:09:45,852 --> 00:09:48,640
の根の発見について尋ねる場合です。

201
00:09:48,640 --> 00:09:52,546
ここに示したような多項式に実数根が 1 つしかない場合

202
00:09:52,546 --> 00:09:56,453
でも、これらの根が複素数になる可能性を許容すれば、この

203
00:09:56,453 --> 00:10:00,220
多項式を常にこのように 5 つの項に因数分解できます。

204
00:10:00,220 --> 00:10:02,500
これは有名な代数学の基本定理です。

205
00:10:02,500 --> 00:10:05,869
さて、実数入力と実数出力を備えた関数の幸運な世界

206
00:10:05,869 --> 00:10:09,239
では、入力と出力の 間の関連性をグラフとして描く

207
00:10:09,239 --> 00:10:11,907
ことができ、ニュートン法は接線と x

208
00:10:11,907 --> 00:10:15,277
の交差によって非常に素晴らしい視覚的意味を持って

209
00:10:15,277 --> 00:10:16,260
います。-軸。

210
00:10:16,260 --> 00:10:19,726
しかし、これらの入力を任意の複素数にできるようにしたい場合、

211
00:10:19,726 --> 00:10:23,193
つまり、対応する出力も任意の複素数になる可能性があることを

212
00:10:23,193 --> 00:10:26,660
意味し、接線やグラフについて考えることはできなくなります。

213
00:10:26,660 --> 00:10:28,002
しかし、この数式は、それをどのように

214
00:10:28,002 --> 00:10:29,420
視覚化するかにはあまり関係ありません。

215
00:10:29,420 --> 00:10:33,507
ランダムな推測から始めて、この時点での多項式とその導

216
00:10:33,507 --> 00:10:37,595
関数を評価し、この更新ルールを使用して新しい推測を生

217
00:10:37,595 --> 00:10:41,380
成するという同じゲームをプレイすることもできます。

218
00:10:41,380 --> 00:10:43,530
そして願わくば、その新しい推測が真の根

219
00:10:43,530 --> 00:10:45,680
源に近いものであることを願っています。

220
00:10:45,680 --> 00:10:48,793
ただし、これらのステップを接線で視覚化できなくても、実際に

221
00:10:48,793 --> 00:10:51,700
は同じロジックであることを明確にしておきたいと思います。

222
00:10:51,700 --> 00:10:57,002
推測に基づいた関数の線形近似がどこでゼロに等しくなるかを

223
00:10:57,002 --> 00:11:01,940
計算し、その線形近似のゼロを次の推測として使用します。

224
00:11:01,940 --> 00:11:04,432
機能することを期待する理由もなく、ルールを新しいコン

225
00:11:04,432 --> 00:11:06,740
テキストに盲目的に適用しているわけではありません。

226
00:11:06,740 --> 00:11:09,903
そして実際、少なくともここで示しているもの

227
00:11:09,903 --> 00:11:13,066
では、数回の反復後に、 対応する出力が本質

228
00:11:13,066 --> 00:11:16,380
的にゼロになる値に到達することがわかります。

229
00:11:16,380 --> 00:11:17,380
ここからが楽しい部分です。

230
00:11:17,380 --> 00:11:19,261
このアイデアを、考えられるさまざ

231
00:11:19,261 --> 00:11:21,260
まな初期推測に適用してみましょう。

232
00:11:21,260 --> 00:11:24,244
参考のために、この特定の多項式の

233
00:11:24,244 --> 00:11:27,580
5 つの真の根を複素平面上に示します。

234
00:11:27,580 --> 00:11:30,207
反復ごとに、小さなドットのそれぞれがニュー

235
00:11:30,207 --> 00:11:32,960
トン法に基づいて何らかのステップを踏みます。

236
00:11:32,960 --> 00:11:35,652
ほとんどの点はすぐに 5 つの真のルートの

237
00:11:35,652 --> 00:11:38,345
1 つに収束しますが、 いくつかの目立った点

238
00:11:38,345 --> 00:11:41,160
があり、しばらく飛び跳ねているように見えます。

239
00:11:41,160 --> 00:11:43,440
特に、正の実数直線上にどのように閉じ

240
00:11:43,440 --> 00:11:45,720
込められているかに注目してください。

241
00:11:45,720 --> 00:11:49,366
それらは少し失われているように見えますが、これはまさ

242
00:11:49,366 --> 00:11:53,013
に、以前にグラフで実数の場 合を調べたときに、この同

243
00:11:53,013 --> 00:11:56,800
じ多項式についてすでに確認したものとまったく同じです。

244
00:11:56,800 --> 00:11:59,592
ここで私がやろうとしていることは、最終的に 5

245
00:11:59,592 --> 00:12:02,734
つのルートのどれに最も近 くなったかに基づいて、これら

246
00:12:02,734 --> 00:12:05,410
のドットのそれぞれに色を付けることです。その

247
00:12:05,410 --> 00:12:08,552
後、時計をロールバックして、すべてのドットが開始位置に

248
00:12:08,552 --> 00:12:09,600
戻るようにします。

249
00:12:09,600 --> 00:12:12,396
ここで実行したように、これは完全なストーリーを理解す

250
00:12:12,396 --> 00:12:15,193
るには十分な解像度では ありません。そこで、さらに細

251
00:12:15,193 --> 00:12:17,667
かいグリッドの初期推測から始めて、同じゲーム

252
00:12:17,667 --> 00:12:20,464
をプレイして、次のことを適用するとどうなるかを示しま

253
00:12:20,464 --> 00:12:23,261
す。ニュートンの方法 は、各ルートを前進させ、どのル

254
00:12:23,261 --> 00:12:25,627
ートに着地するかに基づいて各ドットに色を付

255
00:12:25,627 --> 00:12:28,424
け、時計を巻き戻して元の場所を確認するという方法を何

256
00:12:28,424 --> 00:12:29,500
度も繰り返しました。

257
00:12:29,500 --> 00:12:31,410
しかし、これでもパターンを理解す

258
00:12:31,410 --> 00:12:33,440
るには十分な解像度ではありません。

259
00:12:33,440 --> 00:12:36,917
平面上のすべてのピクセルに対してこのプロセ

260
00:12:36,917 --> 00:12:40,560
スを実行すると、次のような結果が得られます。

261
00:12:40,560 --> 00:12:43,628
そして、この詳細レベルでは、少なくとも私の目には配

262
00:12:43,628 --> 00:12:46,460
色が少し不快なので、少し落ち着かせてみましょう。

263
00:12:46,460 --> 00:12:49,660
実際、私がここでこれを示すためにどのような解像度を使用

264
00:12:49,660 --> 00:12:52,860
しようとしても、決して十分 ではありません。なぜなら、

265
00:12:52,860 --> 00:12:56,060
私たちが得られる形状の細部は無限に複雑になるからです。

266
00:12:56,060 --> 00:13:05,220
しかし、これが実際に何を言っているのか少し考えてみましょう。

267
00:13:05,220 --> 00:13:08,607
これは、複素平面内にシード値をわずかに調整すると、つまり

268
00:13:08,607 --> 00:13:11,294
110 万分の 1 または 11 兆分の 1

269
00:13:11,294 --> 00:13:14,097
だけ横にずらすだけで、5 つの値のうちのどれを

270
00:13:14,097 --> 00:13:17,368
完全に変更できる領域があることを意味します。最終的に辿り

271
00:13:17,368 --> 00:13:18,420
着く本当のルーツ。

272
00:13:18,420 --> 00:13:21,485
先ほど示した実際のグラフと問題のある推測で、この種

273
00:13:21,485 --> 00:13:24,551
の混乱の前兆がいくつか見ら れましたが、これらすべ

274
00:13:24,551 --> 00:13:27,862
てを複素平面で描写すると、この種の根探索アルゴリズム

275
00:13:27,862 --> 00:13:30,928
がどれほど予測不可能であるか、そしてどのようにして

276
00:13:30,928 --> 00:13:33,994
その問題が発生するのかが 明らかになります。は、こ

277
00:13:33,994 --> 00:13:37,060
の種の予測不可能性が発生する初期値の全体の帯です。

278
00:13:37,060 --> 00:13:39,920
ここで、これらのルートの 1 つを取得して変更すると、つ

279
00:13:39,920 --> 00:13:42,780
まりプロセスに別の多項式を使 用すると、結果として生じる

280
00:13:42,780 --> 00:13:45,640
フラクタル パターンがどのように変化するかがわかります。

281
00:13:45,640 --> 00:13:48,709
そして、たとえば、特定のルートの周囲の領域が常

282
00:13:48,709 --> 00:13:51,779
に同じ色であるこ とに注目してください。これら

283
00:13:51,779 --> 00:13:54,182
の点はルートに十分近いため、問題な

284
00:13:54,182 --> 00:13:57,252
くルートを見つける方法としてこの線形近似スキー

285
00:13:57,252 --> 00:13:58,320
ムが機能します。

286
00:13:58,320 --> 00:14:02,760
すべての混乱は地域間の境界で起こっているようだ。

287
00:14:02,760 --> 00:14:03,760
それを覚えておいてください。

288
00:14:03,760 --> 00:14:06,256
そして、これらの根をどこに配置しても、フラ

289
00:14:06,256 --> 00:14:08,640
クタル境界は常にそこにあるように思えます。

290
00:14:08,640 --> 00:14:12,811
これは明らかに、たまたま始めた多項式にとって一度限りのも

291
00:14:12,811 --> 00:14:16,840
のではなく、特定の多項式にとって一般的な事実のようです。

292
00:14:16,840 --> 00:14:18,874
何が起こっているかをわかりやすく説明するた

293
00:14:18,874 --> 00:14:20,424
めにここで調整できるも う 1

294
00:14:20,424 --> 00:14:23,040
つの側面は、使用しているニュートン法のステップ数です。

295
00:14:23,040 --> 00:14:25,882
たとえば、コンピュータにゼロ ステップを実行させた

296
00:14:25,882 --> 00:14:28,724
場合、つまり、すでに最も近 いルートに基づいて平面

297
00:14:28,724 --> 00:14:31,680
の各点に色を付けるだけである場合、これが得られます。

298
00:14:31,680 --> 00:14:33,950
そして、この種の図には実は特別な名

299
00:14:33,950 --> 00:14:36,220
前があり、ボロノイ図と呼ばれます。

300
00:14:36,220 --> 00:14:40,145
そして、平面の各点にニュートン法の 1 ステップを実

301
00:14:40,145 --> 00:14:43,925
行させ、その 1 ステップの結果がどのルートに最も

302
00:14:43,925 --> 00:14:47,560
近いかに基づいて色付けすると、次のようになります。

303
00:14:47,560 --> 00:14:52,338
同様に、2 つのステップを許可すると、わずかに複雑なパタ

304
00:14:52,338 --> 00:14:56,951
ーンが得られ、以下同様に、許可するステップが増えるほど

305
00:14:56,951 --> 00:15:01,400
、より複雑な画像が得られ、元のフラクタルに近づきます。

306
00:15:01,400 --> 00:15:05,726
そして、これは重要です。ここで研究している真の形

307
00:15:05,726 --> 00:15:10,053
状はこれらのいずれかでは なく、任意の多数の反復

308
00:15:10,053 --> 00:15:14,560
を許容するための限界であることに注意してください。

309
00:15:14,560 --> 00:15:17,840
現時点では、たくさんの疑問が生じます。

310
00:15:17,840 --> 00:15:21,093
もしかしたら、これを他の多項式で試して、それがどの程度一般

311
00:15:21,093 --> 00:15:24,347
的であるかを確認した いかもしれません。あるいは、これらの

312
00:15:24,347 --> 00:15:26,816
反復された点で正確にどのようなダイナミクス

313
00:15:26,816 --> 00:15:30,070
が可能であるかをより深く掘り下げたいかもしれません。あるい

314
00:15:30,070 --> 00:15:31,080
は、同様のテーマ。

315
00:15:31,080 --> 00:15:33,755
しかし、最も適切な質問は、ここで何が起こってい

316
00:15:33,755 --> 00:15:36,320
るのかというようなものであるべきだと思います。

317
00:15:36,320 --> 00:15:38,640
つまり、ここで行っているのは線形

318
00:15:38,640 --> 00:15:40,960
近似を繰り返し解くことだけです。

319
00:15:40,960 --> 00:15:44,280
なぜこれほど果てしなく複雑なものが生まれるのでしょうか?

320
00:15:44,280 --> 00:15:47,489
ここの基礎となるルールには、このような画像を実際に生

321
00:15:47,489 --> 00:15:50,580
成するのに十分な情報が含まれていないように思えます。

322
00:15:50,580 --> 00:15:53,162
そして、これを見る前に、各シード値は単純に最も

323
00:15:53,162 --> 00:15:55,745
近いルートに向かう傾向 がある、というのが妥当

324
00:15:55,745 --> 00:15:58,440
な最初の推測だったのではないかと思いませんか?

325
00:15:58,440 --> 00:16:02,192
その場合、各ポイントが着地するルートに基づいて色を付

326
00:16:02,192 --> 00:16:05,805
け、それを元の位置に戻すと、最終的なイメージは直線

327
00:16:05,805 --> 00:16:09,280
の境界を持つボロノイ図のいずれかのようになります。

328
00:16:09,280 --> 00:16:11,413
そして、私が以前に 5 次の解けないことについて

329
00:16:11,413 --> 00:16:13,546
言及したので、おそらくこ こでの複雑さがそれと関

330
00:16:13,546 --> 00:16:15,680
係があるのではないかと疑問に思うかもしれません。

331
00:16:15,680 --> 00:16:19,240
それは素晴らしいことですが、本質的には無関係なアイデアです。

332
00:16:19,240 --> 00:16:21,660
実際、これまで 5 次の多項式のみを使用して

333
00:16:21,660 --> 00:16:24,080
いたのは、少し誤解を招く可能性がありました。

334
00:16:24,080 --> 00:16:26,758
同じゲームをプレイしますが、複素平面のどこかに

335
00:16:26,758 --> 00:16:28,990
3 つの根があ る 3 次多項式を使用し

336
00:16:28,990 --> 00:16:31,000
た場合に何が起こるかを見てください。

337
00:16:31,000 --> 00:16:33,021
繰り返しになりますが、ほとんどのポイントは根の

338
00:16:33,021 --> 00:16:35,042
中に収まっていますが、一 部のポイントはより無

339
00:16:35,042 --> 00:16:37,240
秩序にあちこちに飛んでいる様子に注目してください。

340
00:16:37,240 --> 00:16:41,396
実際、これらはこのようなアニメーションで最も目立つも

341
00:16:41,396 --> 00:16:45,400
のであり、根に向かうものは終点に静かに佇んでいます。

342
00:16:45,400 --> 00:16:49,208
そして、繰り返しますが、ある程度の反復回数でこれを停止し

343
00:16:49,208 --> 00:16:53,016
、どのルートに最も近 いかに基づいてすべての点に色を付け

344
00:16:53,016 --> 00:16:56,008
、時計を巻き戻すと、考えられるすべての開始

345
00:16:56,008 --> 00:16:59,544
点に関連する画像が、無限の詳細を持つこのフラクタル

346
00:16:59,544 --> 00:17:01,040
パターンを形成します。

347
00:17:01,040 --> 00:17:09,880
ただし、根が 2 つだけの 2 次多項式は異なります。

348
00:17:09,880 --> 00:17:13,295
その場合、ご想像のとおり、各シード値は単純

349
00:17:13,295 --> 00:17:16,400
に最も近いルートに向かう傾向があります。

350
00:17:16,400 --> 00:17:20,420
各根から等距離にあるすべての点から少し蛇行する動作があり、

351
00:17:20,420 --> 00:17:24,307
どの点に行けばよいのか決められないような感じですが、それ

352
00:17:24,307 --> 00:17:28,327
は単なる 1 つの点の列です。色を塗るゲームをしてみると、

353
00:17:28,327 --> 00:17:32,080
最終的に得られる図は明らかにもっと退屈なものになります。

354
00:17:32,080 --> 00:17:34,840
つまり、2 から 3 にジャンプすると、何か新しいことが

355
00:17:34,840 --> 00:17:37,600
起こるように見えますが、問題は、具体的には何でしょうか?

356
00:17:37,600 --> 00:17:39,828
もしあなたが1か月前に私に尋ねていたら、私はおそらく

357
00:17:39,828 --> 00:17:41,457
肩をすくめて、ただこう言っただろう、

358
00:17:41,457 --> 00:17:43,685
ご存知のように、数学とはそういうものだ、答えは簡単に

359
00:17:43,685 --> 00:17:45,314
見えることもあれば、そうでないことも

360
00:17:45,314 --> 00:17:47,542
ある、ある場面で「なぜ」と尋ねることが何を意味するの

361
00:17:47,542 --> 00:17:49,000
か必ずしも明確ではないこのような。

362
00:17:49,000 --> 00:17:52,600
しかし、私は間違っていたでしょう。この画像がなぜこれほど複

363
00:17:52,600 --> 00:17:55,960
雑に見えるのかについては、実は説明できる理由があります。

364
00:17:55,960 --> 00:17:58,500
ご存知のとおり、この図には非常に奇妙な特

365
00:17:58,500 --> 00:18:01,040
性があり、それを証明することができます。

366
00:18:01,040 --> 00:18:04,231
色付きの領域の 1 つだけ、たとえばこの青い領域

367
00:18:04,231 --> 00:18:06,358
、つまり、最終的に多項式の 1

368
00:18:06,358 --> 00:18:09,550
つの特定の根に向かう傾向があるすべての点のセット

369
00:18:09,550 --> 00:18:10,880
に注意を集中します。

370
00:18:10,880 --> 00:18:12,970
次に、その領域の境界について考えてみまし

371
00:18:12,970 --> 00:18:15,792
ょう。画面に表示されて いる例では、このような優れた

372
00:18:15,792 --> 00:18:17,360
3 回対称性が示されています。

373
00:18:17,360 --> 00:18:21,589
驚くべきことは、他の色を見てその境界を考慮すると

374
00:18:21,589 --> 00:18:25,480
、まったく同じセットが得られるということです。

375
00:18:25,480 --> 00:18:27,670
さて、私が境界という言葉を言うとき、あなたはおそ

376
00:18:27,670 --> 00:18:29,314
らくそれが何を意味するのか直感的に

377
00:18:29,314 --> 00:18:31,505
理解しているでしょうが、数学者はそれを形式化する

378
00:18:31,505 --> 00:18:33,148
非常に賢い方法を持っており、これに

379
00:18:33,148 --> 00:18:35,339
よりフラクタルのようなよりワイルドな集合のコンテ

380
00:18:35,339 --> 00:18:36,800
キストでの推論が容易になります。

381
00:18:36,800 --> 00:18:40,568
その点を中心とする小さな円を描くとき、どんなに小さ

382
00:18:40,568 --> 00:18:44,336
くても、常にそのセットの内側と外側の両方に点が含ま

383
00:18:44,336 --> 00:18:47,960
れる場合、その点はセットの境界上にあると言います。

384
00:18:47,960 --> 00:18:51,684
したがって、内側に点がある場合、十分に小さい円には最終的に

385
00:18:51,684 --> 00:18:55,284
セット内の点のみが含まれることになり、外側の点の場合、十

386
00:18:55,284 --> 00:18:58,760
分に小さい円にはセットの点がまったく含まれなくなります。

387
00:18:58,760 --> 00:19:01,081
しかし、それが境界上にあるとき、境界上に

388
00:19:01,081 --> 00:19:03,402
あるということは、あ なたの小さな小さな

389
00:19:03,402 --> 00:19:05,840
円が常に両方を含むということを意味します。

390
00:19:05,840 --> 00:19:09,364
したがって、私たちのプロパティを振り返ってみると、こ

391
00:19:09,364 --> 00:19:12,888
れを読み取る 1 つの方法 は、円を描くと、その円が

392
00:19:12,888 --> 00:19:16,683
どんなに小さくても、その円にはすべての色が含まれるか、

393
00:19:16,683 --> 00:19:20,207
または色の共有境界がその円の内側にある場合に発生する

394
00:19:20,207 --> 00:19:23,731
と言えます。、または 1 つの色だけが含まれており、

395
00:19:23,731 --> 00:19:27,120
これは領域の 1 つの内部にある場合に発生します。

396
00:19:27,120 --> 00:19:30,017
特に、これが意味するのは、2 つの色だけを含む

397
00:19:30,017 --> 00:19:32,914
円を見つけること は決してできないということで

398
00:19:32,914 --> 00:19:35,181
す。そのためには、2 つの領域の境

399
00:19:35,181 --> 00:19:38,960
界上に点がある必要がありますが、そのすべてではないからです。

400
00:19:38,960 --> 00:19:42,122
この事実が実際にどこから来たのかを説明する前に、この事

401
00:19:42,122 --> 00:19:45,060
実について少し頭の中で考えてみるのも楽しいでしょう。

402
00:19:45,060 --> 00:19:48,171
これをある種のアートパズルとして誰かに提示することを想

403
00:19:48,171 --> 00:19:51,283
像することもで きます。完全に文脈を無視して、ニュート

404
00:19:51,283 --> 00:19:53,934
ン法などには決して言及せず、少 なくとも 3

405
00:19:53,934 --> 00:19:57,161
つの色、おそらく赤で絵を構成することが課題であると言い

406
00:19:57,161 --> 00:20:00,273
ます。緑、青、つまり 1 つの色の境界がすべての色の境

407
00:20:00,273 --> 00:20:01,080
界になります。

408
00:20:01,080 --> 00:20:04,181
したがって、このような単純なものから始めた場合、それは

409
00:20:04,181 --> 00:20:07,282
明らかに機能しませ ん。なぜなら、この点の行全体が緑と

410
00:20:07,282 --> 00:20:09,579
赤の境界上にあり、青に触れていないから

411
00:20:09,579 --> 00:20:12,681
です。また、同様に、これらの他の禁止された行もあるため

412
00:20:12,681 --> 00:20:13,600
です。ポイント。

413
00:20:13,600 --> 00:20:16,817
したがって、これを修正するには、境界に沿っていくつかの青い

414
00:20:16,817 --> 00:20:20,035
ブロブを追加し 、次に、同様に、赤と青の間にいくつかの緑の

415
00:20:20,035 --> 00:20:21,810
ブロブを追加し、緑と青の間にい

416
00:20:21,810 --> 00:20:25,028
くつかの赤いブロブを追加します。ただし、もちろん、これらの

417
00:20:25,028 --> 00:20:28,246
ブロブの境界は たとえば、青と赤だけをタッチし、緑をタッチ

418
00:20:28,246 --> 00:20:29,800
しないなどの問題があります。

419
00:20:29,800 --> 00:20:33,181
そこで、修正しやすくするために、小さな境界の周りに関連する

420
00:20:33,181 --> 00:20:35,661
3 番 目の色を付けて、さらに小さなブロブを

421
00:20:35,661 --> 00:20:37,240
追加してみるとよいでしょう。

422
00:20:37,240 --> 00:20:41,175
同様に、最初に追加した BLOB

423
00:20:41,175 --> 00:20:44,880
ごとにこれを行う必要があります。

424
00:20:44,880 --> 00:20:48,080
しかし、その場合、それらの小さな塊の境界はすべ

425
00:20:48,080 --> 00:20:51,280
てそれ自体の問題となる ため、何らかの方法でこ

426
00:20:51,280 --> 00:20:54,480
のプロセスを永遠に実行し続ける必要があります。

427
00:20:54,480 --> 00:20:58,530
そして、ニュートンのフラクタル自体を見ると、

428
00:20:58,530 --> 00:21:02,581
この種のブロブ上のブロブ 上のブロブのパター

429
00:21:02,581 --> 00:21:07,000
ンがまさにそれが行っていることのように見えます。

430
00:21:07,000 --> 00:21:09,875
ここで注目していただきたいのは、このプロパティが、滑らかな

431
00:21:09,875 --> 00:21:12,750
セグメントは 2 つ の色にしか接していないため、小さなセ

432
00:21:12,750 --> 00:21:14,832
グメント上では滑らかな、または部分的にさ

433
00:21:14,832 --> 00:21:17,707
え滑らかな境界線を持つことは決してできないことを意味してい

434
00:21:17,707 --> 00:21:18,600
るということです。

435
00:21:18,600 --> 00:21:21,150
代わりに、境界はいわば完全に鋭い

436
00:21:21,150 --> 00:21:23,860
角で構成されている必要があります。

437
00:21:23,860 --> 00:21:27,033
したがって、この特性を信じれば、どこまでズームイ

438
00:21:27,033 --> 00:21:30,080
ンしても境界が粗いままである理由が説明されます。

439
00:21:30,080 --> 00:21:33,302
そして、フラクタル次元の概念に精通している人

440
00:21:33,302 --> 00:21:37,403
は、今私が示している 特定の境界の次元を測定すると、約

441
00:21:37,403 --> 00:21:40,040
1 であることがわかります。44.

442
00:21:40,040 --> 00:21:42,946
私たちの色が実際に何を表しているのかを考えると、これは

443
00:21:42,946 --> 00:21:45,853
単なる写真のための写真では ないことを忘れずに、その物

444
00:21:45,853 --> 00:21:48,760
件が実際に私たちに何を伝えているのかを考えてください。

445
00:21:48,760 --> 00:21:51,278
それは、シード値の一部が 1 つのルートに送られ

446
00:21:51,278 --> 00:21:53,061
るが、近くにある他のシード値が別

447
00:21:53,061 --> 00:21:55,579
のルートに送られるような敏感なポイントの近くにい

448
00:21:55,579 --> 00:21:57,363
る場合、実際には、考えられるすべ

449
00:21:57,363 --> 00:21:59,881
てのルートがその小さな近傍内からアクセス可能でな

450
00:21:59,881 --> 00:22:01,560
ければならない、ということです。

451
00:22:01,560 --> 00:22:05,088
あなたが描く小さな円については、その円内のすべての点が

452
00:22:05,088 --> 00:22:08,238
1 つのル ートのみに向かうか、すべてのルートに向

453
00:22:08,238 --> 00:22:11,388
かうかのどちらかですが、その 間に何も存在すること

454
00:22:11,388 --> 00:22:14,160
はなく、ルートのサブセットに向かうだけです。

455
00:22:14,160 --> 00:22:17,385
少し直観的には、画面上のようなクラスターがこのプロセスを

456
00:22:17,385 --> 00:22:20,500
経るのをただ観察するだけで啓発されることがわかりました。

457
00:22:20,500 --> 00:22:23,679
最初はほとんどくっついて始まりますが、1

458
00:22:23,679 --> 00:22:26,101
回の反復ですべてが外側に爆発し

459
00:22:26,101 --> 00:22:29,734
、その後はどのルートでも掴めるようになるのがずっ

460
00:22:29,734 --> 00:22:31,400
と合理的だと感じます。

461
00:22:31,400 --> 00:22:35,873
覚えておいてください、私は有限個の点を示しているだ

462
00:22:35,873 --> 00:22:40,347
けですが、原理的には、小さ な円盤内の数え切れない

463
00:22:40,347 --> 00:22:45,000
無限に多くの点すべてに何が起こるかを考えてください。

464
00:22:45,000 --> 00:22:47,384
この特性は、根が 2 つだけの 2

465
00:22:47,384 --> 00:22:51,357
次多項式の場合、正常に見 えるのがなぜ問題ないのかも説明しま

466
00:22:51,357 --> 00:22:55,198
す。境界が滑らかであれば 問題なく、とにかく接触する色は

467
00:22:55,198 --> 00:22:56,920
2 つだけであるためです。

468
00:22:56,920 --> 00:23:00,266
明確にしておきますが、二次関数の場合に滑らかな境界

469
00:23:00,266 --> 00:23:02,675
があるという 保証はありません。2

470
00:23:02,675 --> 00:23:05,486
つの色の間にフラクタル境界があることは完

471
00:23:05,486 --> 00:23:08,833
全に可能です。単に、ニュートン法図が必要以上に複雑

472
00:23:08,833 --> 00:23:12,179
なことを行っ ていないように見えるだけです。この奇

473
00:23:12,179 --> 00:23:13,920
妙な境界条件の制約の下で。

474
00:23:13,920 --> 00:23:16,097
しかしもちろん、これらすべては、そもそも

475
00:23:16,097 --> 00:23:18,274
なぜこの奇妙な境界特 性が真でなければな

476
00:23:18,274 --> 00:23:20,560
らないのかという疑問を引き起こすだけです。

477
00:23:20,560 --> 00:23:22,580
それは一体どこから来たのでしょうか？

478
00:23:22,580 --> 00:23:25,575
そのために、この種の問題を研究する数学の分野について

479
00:23:25,575 --> 00:23:28,460
お話したいと思います。それは、正則力学と呼ばれます。

480
00:23:28,460 --> 00:23:30,686
そして、今日は十分な内容をカバーしたと思いますし、

481
00:23:30,686 --> 00:23:32,913
語るべきことは確かに十分 に残っているので、それを

482
00:23:32,913 --> 00:23:35,140
別のビデオとして取り上げるのは理にかなっています。

483
00:23:35,140 --> 00:23:37,440
ここで話を締めくくりますが、ニュートンはこのことに

484
00:23:37,440 --> 00:23:39,741
ついて何の手がかりも持たず 、あなたやあなたと同じ

485
00:23:39,741 --> 00:23:42,226
ようにこれらの画像を扱うことは決してできなかったとい

486
00:23:42,226 --> 00:23:44,526
う事実にもかかわらず、これを私たちがニュートンのフ

487
00:23:44,526 --> 00:23:46,827
ラクタルと呼んでいるという 事実について、私にはあ

488
00:23:46,827 --> 00:23:49,220
る種の面白いことがあります。現代の技術ならできるよ。

489
00:23:49,220 --> 00:23:52,270
そして、人々の名前が、彼らが夢見ていたものをはるかに超えて

490
00:23:52,270 --> 00:23:55,220
物事に愛着を持つということは、数学を通じてよく起こります。

491
00:23:55,220 --> 00:23:57,628
ハミルトンは量子力学について何も知らなかったにも

492
00:23:57,628 --> 00:23:59,940
かかわらず、ハミルトニアンは量子力学の中心です。

493
00:23:59,940 --> 00:24:02,447
フーリエ自身は一度も高速フーリエ変換を計

494
00:24:02,447 --> 00:24:05,080
算したことがありません。リストは続きます。

495
00:24:05,080 --> 00:24:07,830
しかし、この名称の過度の拡張には、私がインスピ

496
00:24:07,830 --> 00:24:10,580
レーションを与える点が含まれていると思います。

497
00:24:10,580 --> 00:24:13,445
それは、何世紀も前に発見できたような単純なアイ

498
00:24:13,445 --> 00:24:16,310
デアでさえ、そ の中に新しい角度や関連性のある

499
00:24:16,310 --> 00:24:18,303
新しい領域を保持し、数百年後に

500
00:24:18,303 --> 00:24:22,040
発見されるのを待っていることがよくあることを反映しています。

501
00:24:22,040 --> 00:24:23,830
ニュートンがニュートンのフラクタルに

502
00:24:23,830 --> 00:24:25,720
ついて知らなかっただけではありません。

503
00:24:25,720 --> 00:24:29,103
ニュートン法について、あるいは古いニュースのよう

504
00:24:29,103 --> 00:24:31,640
に思えるあらゆる種類の数学について

505
00:24:31,640 --> 00:24:35,023
は、おそらく他にも多くの事実があり、それらはまだ

506
00:24:35,023 --> 00:24:37,561
誰も尋ねようと思わなかった質問、そ

507
00:24:37,561 --> 00:24:40,944
こにただ座して、あなたのような誰かを待っている質

508
00:24:40,944 --> 00:24:43,200
問から来ています。彼らに尋ねる。

509
00:24:43,200 --> 00:24:47,173
たとえば、今日話しているこのプロセスがサイクルに陥ることがあ

510
00:24:47,173 --> 00:24:51,146
るのかどうかを尋ねると、マンデルブロ集合との驚くべきつなが

511
00:24:51,146 --> 00:24:55,120
りにつながります。これについては次で少し説明します。一部。

512
00:24:55,120 --> 00:24:57,401
ちなみに、これを投稿している時点では、その 2 番目の

513
00:24:57,401 --> 00:24:59,520
部分は早期リリースとしてパトロンに提供されています。

514
00:24:59,520 --> 00:25:01,780
私は常に、フィードバックを収集し、エラーを見つけるため

515
00:25:01,780 --> 00:25:03,960
に、新しいコンテンツに少し時間を与えることを好みます。

516
00:25:03,960 --> 00:25:06,480
最終版は間もなく公開されるはずです。

517
00:25:06,480 --> 00:25:08,691
そしてパトロンの話題に関しては、画面に名前が表示され

518
00:25:08,691 --> 00:25:10,740
ている皆さんに簡単に感謝の意を表したいと思います。

519
00:25:10,740 --> 00:25:12,569
最近の歴史の中で、新しいビデオの配信

520
00:25:12,569 --> 00:25:14,500
が少し遅れていることは承知しています。

521
00:25:14,500 --> 00:25:17,340
これの一部は、現在進行中の他のプロジェクトと関係しています。

522
00:25:17,340 --> 00:25:19,881
ちなみに、私が誇りに思っていることは、夏の数学博覧会

523
00:25:19,881 --> 00:25:22,423
のようなものです。正直に言っ て、驚くほどの労力がか

524
00:25:22,423 --> 00:25:25,160
かりましたが、結果を考えるとそれだけの価値はありました。

525
00:25:25,160 --> 00:25:27,299
それについてはすべて話し、すぐに受賞者を発

526
00:25:27,299 --> 00:25:29,540
表する予定ですので、楽しみにお待ちください。

527
00:25:29,540 --> 00:25:32,264
ただ知っておいていただきたいのは、近い将来の計画は間違

528
00:25:32,264 --> 00:25:34,988
いなく、より全力で新 しいビデオの作成に戻ることです。

529
00:25:34,988 --> 00:25:37,107
そして何よりも言いたいのは、いくつかの新

530
00:25:37,107 --> 00:25:39,831
しいことに挑戦している間であっても、継続的なサポートに

531
00:25:39,831 --> 00:25:40,740
感謝することです。

532
00:25:40,740 --> 00:25:42,926
それは私にとって非常に意味があり、チャンネルを継続し

533
00:25:42,926 --> 00:25:45,113
ていくためのものであり、パ イプラインの新しい教訓が

534
00:25:45,113 --> 00:25:47,300
そこでの信任投票に応えられるように最善を尽くします。

