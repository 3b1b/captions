1
00:00:02,460 --> 00:00:05,580
You've seen the title, so you know this is leading to a certain fractal.

2
00:00:05,920 --> 00:00:07,940
And actually it's an infinite family of fractals.

3
00:00:08,720 --> 00:00:11,571
And yeah, it'll be one of those mind-bogglingly intricate 

4
00:00:11,571 --> 00:00:14,620
shapes that has infinite detail no matter how far you zoom in.

5
00:00:14,760 --> 00:00:18,940
But this is not really a video about generating some pretty picture for us to gawk at.

6
00:00:19,060 --> 00:00:22,241
Well, okay, maybe that's part of it, but the real story here has a much 

7
00:00:22,241 --> 00:00:25,600
more pragmatic starting point than the story behind a lot of other fractals.

8
00:00:26,180 --> 00:00:29,964
And more than that, the final images that we get to will become a lot more 

9
00:00:29,964 --> 00:00:33,900
meaningful if we make an effort to understand why, given what they represent, 

10
00:00:33,900 --> 00:00:36,574
they kind of have to look as complicated as they do, 

11
00:00:36,574 --> 00:00:40,358
and what this complexity reflects about an algorithm that is used all over 

12
00:00:40,358 --> 00:00:41,620
the place in engineering.

13
00:00:48,000 --> 00:00:51,762
The starting point here will be to assume that you have some kind of polynomial, 

14
00:00:51,762 --> 00:00:53,900
and that you want to know when it equals zero.

15
00:00:54,320 --> 00:00:57,902
For the one graphed here, you can visually see there's three different places 

16
00:00:57,902 --> 00:01:01,760
where it crosses the x-axis, and you can kind of eyeball what those values might be.

17
00:01:01,900 --> 00:01:03,700
We'd call those the roots of the polynomial.

18
00:01:04,260 --> 00:01:06,300
But how do you actually compute them exactly?

19
00:01:07,440 --> 00:01:10,233
Now this is the kind of question where if you're already bought into math, 

20
00:01:10,233 --> 00:01:12,580
maybe it's interesting enough in its own right to move forward.

21
00:01:12,940 --> 00:01:15,735
But if you just pull someone on the street aside and ask them this, 

22
00:01:15,735 --> 00:01:18,120
I mean, they're already falling asleep, because who cares?

23
00:01:18,820 --> 00:01:22,496
But the thing is, this kind of question comes up all the time in engineering, 

24
00:01:22,496 --> 00:01:26,313
where I'm personally most familiar with equations like this popping up is in the 

25
00:01:26,313 --> 00:01:30,320
setting of computer graphics, where polynomials are just littered all over the place.

26
00:01:30,420 --> 00:01:34,853
So it's not uncommon that when you're figuring out how a given pixel should be colored, 

27
00:01:34,853 --> 00:01:38,380
that somehow involves solving an equation that uses these polynomials.

28
00:01:39,480 --> 00:01:40,880
Here let me give you one fun example.

29
00:01:41,160 --> 00:01:44,070
When a computer renders text on the screen, those 

30
00:01:44,070 --> 00:01:47,040
fonts are typically not defined using pixel values.

31
00:01:47,320 --> 00:01:49,946
They're defined as a bunch of polynomial curves, 

32
00:01:49,946 --> 00:01:52,520
what are known in the business as Bezier curves.

33
00:01:53,400 --> 00:01:56,028
And any of you who've messed around with vector graphics, 

34
00:01:56,028 --> 00:01:59,700
maybe in some design software, would be well familiar with these kinds of curves.

35
00:02:00,420 --> 00:02:02,872
But to actually display one of them on the screen, 

36
00:02:02,872 --> 00:02:06,333
you need a way to tell each one of the pixels of your screen whether it 

37
00:02:06,333 --> 00:02:07,680
should be colored in or not.

38
00:02:08,340 --> 00:02:11,612
These curves can be displayed either with some kind of stroke width, 

39
00:02:11,612 --> 00:02:14,600
or if they enclose a region, some kind of fill for that region.

40
00:02:15,320 --> 00:02:17,709
But if you step back and you really think about it, 

41
00:02:17,709 --> 00:02:20,835
it's an interesting puzzle to figure out how each one of the pixels 

42
00:02:20,835 --> 00:02:24,880
knows whether it should be colored in or not, just based on the pure mathematical curve.

43
00:02:25,640 --> 00:02:26,940
I mean, take the case of stroke width.

44
00:02:27,320 --> 00:02:31,816
This comes down to understanding how far away a given pixel is from this pure 

45
00:02:31,816 --> 00:02:36,140
mathematical curve, which itself is some platonic ideal, it has zero width.

46
00:02:36,700 --> 00:02:39,920
You would think of it as a parametric curve that has some parameter t.

47
00:02:41,080 --> 00:02:43,683
Now one thing that you could do to figure out this distance 

48
00:02:43,683 --> 00:02:47,588
is to compute the distance between your pixel and a bunch of sample points on that curve, 

49
00:02:47,588 --> 00:02:49,020
and then figure out the smallest.

50
00:02:49,820 --> 00:02:51,980
But that's both inefficient and imprecise.

51
00:02:52,460 --> 00:02:56,560
Better is to get a little mathematical and acknowledge that this distance to the 

52
00:02:56,560 --> 00:03:00,660
curve at all the possible points is itself some smooth function of the parameter.

53
00:03:01,240 --> 00:03:05,013
And as it happens, the square of that distance will itself be a polynomial, 

54
00:03:05,013 --> 00:03:07,000
which makes it pretty nice to deal with.

55
00:03:07,820 --> 00:03:10,763
And if this were meant to be a full lesson on rendering vector graphics, 

56
00:03:10,763 --> 00:03:12,780
we could expand all that out and embrace the mess.

57
00:03:12,780 --> 00:03:17,343
But right now, the only salient point that I want to highlight is that in principle, 

58
00:03:17,343 --> 00:03:20,780
this function whose minimum you want to know is some polynomial.

59
00:03:21,580 --> 00:03:25,231
Finding this minimum, and hence determining how close the pixel is to the curve 

60
00:03:25,231 --> 00:03:28,700
and whether it should get filled in, is now just a classic calculus problem.

61
00:03:29,340 --> 00:03:32,597
What you do is figure out the slope of this function graph, 

62
00:03:32,597 --> 00:03:36,288
which is to say its derivative, again some polynomial, and you ask, 

63
00:03:36,288 --> 00:03:37,700
when does that equal zero?

64
00:03:38,980 --> 00:03:43,610
So, to actually carry out this seemingly simple task of just displaying a curve, 

65
00:03:43,610 --> 00:03:47,212
wouldn't it be nice if you had a systematic and general way to 

66
00:03:47,212 --> 00:03:49,900
figure out when a given polynomial equals zero?

67
00:03:50,960 --> 00:03:54,534
Of course, we could draw 100 other examples from 100 other disciplines, 

68
00:03:54,534 --> 00:03:58,207
I just want you to keep in mind that as we seek the roots of polynomials, 

69
00:03:58,207 --> 00:04:02,079
even though we always display it in a way that's cleanly abstracted away from 

70
00:04:02,079 --> 00:04:06,100
the messiness of any real-world problem, the task is hardly just an academic one.

71
00:04:06,100 --> 00:04:10,400
But again, ask yourself, how do you actually compute one of those roots?

72
00:04:12,120 --> 00:04:15,643
If whatever problem you're working on leads you to a quadratic function, 

73
00:04:15,643 --> 00:04:19,360
then happy days, you can use the quadratic formula that we all know and love.

74
00:04:20,180 --> 00:04:24,579
And as a fun side note, by the way, again relevant to root finding in computer graphics, 

75
00:04:24,579 --> 00:04:28,880
I once had a Pixar engineer give me the estimate that considering how many lights were 

76
00:04:28,880 --> 00:04:31,203
used in some of the scenes for the movie Coco, 

77
00:04:31,203 --> 00:04:35,504
and given the nature of some of these per-pixel calculations when polynomially defined 

78
00:04:35,504 --> 00:04:39,508
things like spheres are involved, the quadratic formula was easily used multiple 

79
00:04:39,508 --> 00:04:41,980
trillions of times in the production of that film.

80
00:04:43,420 --> 00:04:46,282
Now, when your problem leads you to a higher order polynomial, 

81
00:04:46,282 --> 00:04:47,600
things start to get trickier.

82
00:04:48,120 --> 00:04:50,505
For cubic polynomials, there is also a formula, 

83
00:04:50,505 --> 00:04:54,680
which Mathologer has done a wonderful video on, and there's even a quartic formula, 

84
00:04:54,680 --> 00:04:58,357
something that solves degree 4 polynomials, although honestly that one is 

85
00:04:58,357 --> 00:05:01,986
such a god-awful nightmare of a formula that essentially no one actually 

86
00:05:01,986 --> 00:05:02,980
uses it in practice.

87
00:05:04,060 --> 00:05:08,559
But after that, and I find this one of the most fascinating results in all of math, 

88
00:05:08,559 --> 00:05:13,220
you cannot have an analogous formula to solve polynomials that have a degree 5 or more.

89
00:05:14,020 --> 00:05:17,423
More specifically, for a pretty extensive set of standard functions, 

90
00:05:17,423 --> 00:05:21,419
you can prove that there is no possible way that you can combine those functions 

91
00:05:21,419 --> 00:05:25,414
together that allows you to plug in the coefficients of a quintic polynomial and 

92
00:05:25,414 --> 00:05:26,500
always get out a root.

93
00:05:27,360 --> 00:05:31,851
This is known as the unsolvability of the quintic, which is a whole other can of worms, 

94
00:05:31,851 --> 00:05:36,393
we can hopefully get into it some other time, but in practice it kind of doesn't matter, 

95
00:05:36,393 --> 00:05:39,966
because we have algorithms to approximate solutions to these kinds of 

96
00:05:39,966 --> 00:05:42,620
equations with whatever level of precision you want.

97
00:05:43,240 --> 00:05:47,100
A common one, and the main topic for you and me today, is Newton's method.

98
00:05:47,620 --> 00:05:49,996
And yes, this is what will lead us to the fractals, 

99
00:05:49,996 --> 00:05:53,377
but I want you to pay attention to just how innocent and benign the whole 

100
00:05:53,377 --> 00:05:54,520
procedure seems at first.

101
00:05:55,240 --> 00:05:58,860
The algorithm begins with a random guess, let's call it x0.

102
00:05:59,660 --> 00:06:02,735
Almost certainly, the output of your polynomial at x0 is not 0, 

103
00:06:02,735 --> 00:06:06,819
so you haven't found a solution, it's some other value visible as the height of this 

104
00:06:06,819 --> 00:06:07,780
graph at that point.

105
00:06:08,380 --> 00:06:11,676
So to improve the guess, the idea is to ask, when does a 

106
00:06:11,676 --> 00:06:15,320
linear approximation to the function around that value equal 0?

107
00:06:16,020 --> 00:06:19,715
In other words, if you were to draw a tangent line to the graph at this point, 

108
00:06:19,715 --> 00:06:21,820
when does that tangent line cross the x-axis?

109
00:06:23,100 --> 00:06:26,272
Now, assuming this tangent line is a decent approximation of the 

110
00:06:26,272 --> 00:06:28,712
function in the loose vicinity of some true root, 

111
00:06:28,712 --> 00:06:32,860
the place where this approximation equals 0 should take you closer to that true root.

112
00:06:33,900 --> 00:06:36,580
As long as you're able to take a derivative of this function, 

113
00:06:36,580 --> 00:06:38,958
and with polynomials you'll always be able to do that, 

114
00:06:38,958 --> 00:06:41,120
you can concretely compute the slope of this line.

115
00:06:42,100 --> 00:06:44,967
So here's where the active viewers among you might want to pause and ask, 

116
00:06:44,967 --> 00:06:48,300
how do you figure out the difference between the current guess and the improved guess?

117
00:06:48,520 --> 00:06:50,060
What is the size of this step?

118
00:06:50,900 --> 00:06:55,177
One way to think of it is to consider the fact that the slope of this tangent line, 

119
00:06:55,177 --> 00:06:59,760
its rise over run, looks like the height of this graph divided by the length of that step.

120
00:07:00,440 --> 00:07:02,851
But on the other hand, of course, the slope of the tangent 

121
00:07:02,851 --> 00:07:05,100
line is the derivative of the polynomial at that point.

122
00:07:05,840 --> 00:07:08,667
If we kind of rearrange this equation here, this gives you 

123
00:07:08,667 --> 00:07:11,400
a super concrete way that you can compute that step size.

124
00:07:12,140 --> 00:07:16,128
So the next guess, which we might call x1, is the previous guess, 

125
00:07:16,128 --> 00:07:17,760
adjusted by this step size.

126
00:07:18,400 --> 00:07:20,980
And after that, you can just repeat the process.

127
00:07:21,520 --> 00:07:25,388
You compute the value of this function, and the slope, at this new guess, 

128
00:07:25,388 --> 00:07:29,466
which gives you a new linear approximation, and then you make the next guess, 

129
00:07:29,466 --> 00:07:32,080
x2, wherever that tangent line crosses the x-axis.

130
00:07:32,780 --> 00:07:36,115
And then apply the same calculation to x2, and this gives you x3, 

131
00:07:36,115 --> 00:07:39,653
and before too long you find yourself extremely close to a true root, 

132
00:07:39,653 --> 00:07:42,180
pretty much as close as you could ever want to be.

133
00:07:44,760 --> 00:07:47,859
It's always worth gut checking that a formula actually makes sense, 

134
00:07:47,859 --> 00:07:49,500
and in this case, hopefully it does.

135
00:07:49,840 --> 00:07:52,625
If p of x is large, meaning the graph is really high, 

136
00:07:52,625 --> 00:07:55,360
you need to take a bigger step to get down to a root.

137
00:07:55,980 --> 00:07:59,717
But if p' of x is also large, meaning the graph is quite steep, 

138
00:07:59,717 --> 00:08:03,280
you should maybe ease off on just how big you make that step.

139
00:08:04,520 --> 00:08:08,474
Now as the name suggests, this was a method that Newton used to solve polynomial 

140
00:08:08,474 --> 00:08:12,673
expressions, but he sort of made it look a lot more complicated than it needed to be, 

141
00:08:12,673 --> 00:08:15,945
and a fellow named Joseph Rafson published a much simpler version, 

142
00:08:15,945 --> 00:08:20,339
more like what you and I are looking at now, so you also often hear this algorithm called 

143
00:08:20,339 --> 00:08:21,560
the Newton-Rafson method.

144
00:08:22,640 --> 00:08:24,920
These days it's a common topic in calculus classes.

145
00:08:25,360 --> 00:08:28,487
One nice little exercise to try to get a feel for it, by the way, 

146
00:08:28,487 --> 00:08:31,520
is to try using this method to approximate square roots by hand.

147
00:08:33,179 --> 00:08:36,541
But what most calculus students don't see, which is unfortunate, 

148
00:08:36,541 --> 00:08:40,214
is just how deep things can get when you let yourself play around with 

149
00:08:40,214 --> 00:08:44,300
this seemingly simple procedure and start kind of picking at some of its scabs.

150
00:08:45,380 --> 00:08:48,762
You see, while Newton's method works great if you start near a root, 

151
00:08:48,762 --> 00:08:52,538
where it converges really quickly, if your initial guess is far from a root, 

152
00:08:52,538 --> 00:08:53,960
it can have a couple foibles.

153
00:08:54,920 --> 00:08:57,733
For example, let's take the function we were just looking at, 

154
00:08:57,733 --> 00:09:01,000
but shift it upward, and play the same game with the same initial guess.

155
00:09:07,400 --> 00:09:11,058
Notice, how the sequence of new guesses we're getting kind of bounces 

156
00:09:11,058 --> 00:09:14,560
around the local minimum of this function sitting above the x-axis.

157
00:09:15,460 --> 00:09:19,417
This should kind of make sense, I mean, a linear approximation of the function 

158
00:09:19,417 --> 00:09:23,375
around these values all the way to the right is pretty much entirely unrelated 

159
00:09:23,375 --> 00:09:27,583
to the nature of the function around the one true root that it has off to the left, 

160
00:09:27,583 --> 00:09:31,240
so they're sort of giving you no useful information about that true root.

161
00:09:31,880 --> 00:09:34,766
It's only when this process just happens to throw the new guess 

162
00:09:34,766 --> 00:09:37,652
off far enough to the left, by chance, that the sequence of new 

163
00:09:37,652 --> 00:09:40,900
guesses does anything productive and actually approaches that true root.

164
00:09:42,680 --> 00:09:45,048
Where things get especially interesting is if 

165
00:09:45,048 --> 00:09:47,520
we ask about finding roots in the complex plane.

166
00:09:48,380 --> 00:09:52,634
Even if a polynomial like the one shown here has only a single real number root, 

167
00:09:52,634 --> 00:09:56,258
you'll always be able to factor this polynomial into five terms like 

168
00:09:56,258 --> 00:09:59,620
this if you allow these roots to potentially be complex numbers.

169
00:10:00,100 --> 00:10:02,100
This is the famous fundamental theorem of algebra.

170
00:10:02,820 --> 00:10:06,785
Now in the happy-go-lucky land of functions with real number inputs and real number 

171
00:10:06,785 --> 00:10:10,846
outputs, where you can picture the association between inputs and outputs as a graph, 

172
00:10:10,846 --> 00:10:15,000
Newton's method has this really nice visual meaning with tangent lines and intersecting 

173
00:10:15,000 --> 00:10:15,520
the x-axis.

174
00:10:16,100 --> 00:10:19,256
But if you want to allow these inputs to be any complex number, 

175
00:10:19,256 --> 00:10:22,807
which means our corresponding outputs might also be any complex number, 

176
00:10:22,807 --> 00:10:25,520
you can't think about tangent lines and graphs anymore.

177
00:10:26,200 --> 00:10:29,100
But the formula doesn't really care how you visualize it.

178
00:10:29,100 --> 00:10:32,892
You can still play the same game, starting with a random guess, 

179
00:10:32,892 --> 00:10:37,160
and evaluating the polynomial at this point, as well as its derivative, 

180
00:10:37,160 --> 00:10:40,301
then using this update rule to generate a new guess, 

181
00:10:40,301 --> 00:10:43,620
and hopefully that new guess is closer to the true root.

182
00:10:45,460 --> 00:10:49,787
But I do want to be clear, even if we can't visualize these steps with a tangent line, 

183
00:10:49,787 --> 00:10:51,180
it really is the same logic.

184
00:10:51,180 --> 00:10:56,237
We're figuring out where a linear approximation of the function around your guess would 

185
00:10:56,237 --> 00:11:01,180
equal zero, and then you use that zero of the linear approximation as your next guess.

186
00:11:01,480 --> 00:11:03,875
It's not like we're blindly applying the rule to 

187
00:11:03,875 --> 00:11:06,320
a new context with no reason to expect it to work.

188
00:11:06,980 --> 00:11:10,549
And indeed, with at least the one I'm showing here after a few iterations, 

189
00:11:10,549 --> 00:11:14,500
you can see that we land on a value whose corresponding output is essentially zero.

190
00:11:15,900 --> 00:11:17,200
Now here's the fun part.

191
00:11:17,200 --> 00:11:20,860
Let's apply this idea to many different possible initial guesses.

192
00:11:21,780 --> 00:11:24,208
For reference, I'll put up the five true roots of 

193
00:11:24,208 --> 00:11:26,540
this particular polynomial in the complex plane.

194
00:11:27,500 --> 00:11:32,000
With each iteration, each one of our little dots takes some step based on Newton's method.

195
00:11:32,740 --> 00:11:36,199
Most of the dots will quickly converge to one of the five true roots, 

196
00:11:36,199 --> 00:11:40,400
but there are some noticeable stragglers which seem to spend a while bouncing around.

197
00:11:41,000 --> 00:11:45,070
In particular, notice how the ones that are trapped on the positive real number line, 

198
00:11:45,070 --> 00:11:46,680
well, they look a little bit lost.

199
00:11:47,200 --> 00:11:49,944
And this is exactly what we already saw before for this same 

200
00:11:49,944 --> 00:11:53,140
polynomial when we were looking at the real number case with its graph.

201
00:11:56,440 --> 00:11:59,864
Now what I'm going to do is color each one of these dots based on 

202
00:11:59,864 --> 00:12:02,458
which of those five roots it ended up closest to, 

203
00:12:02,458 --> 00:12:06,142
and then we'll kind of roll back the clock so that every dot goes back 

204
00:12:06,142 --> 00:12:07,180
to where it started.

205
00:12:09,240 --> 00:12:13,268
Now as I've done it here, this isn't quite enough resolution to get the full story, 

206
00:12:13,268 --> 00:12:17,153
so let me show you what it would look like if we started with an even finer grid 

207
00:12:17,153 --> 00:12:20,894
of initial guesses and played the same game, applying Newton's method a whole 

208
00:12:20,894 --> 00:12:23,244
bunch of times, letting each root march forward, 

209
00:12:23,244 --> 00:12:25,642
coloring each dot based on what root it lands on, 

210
00:12:25,642 --> 00:12:28,760
then rolling back the clock to see where it originally came from.

211
00:12:29,400 --> 00:12:32,780
But even this isn't really a high enough resolution to appreciate the pattern.

212
00:12:33,180 --> 00:12:38,380
If we did this process for every single pixel on the plane, here's what you would get.

213
00:12:40,160 --> 00:12:44,039
And at this level of detail the color scheme is a little jarring to my eye at least, 

214
00:12:44,039 --> 00:12:45,500
so let me calm it down a little.

215
00:12:46,320 --> 00:12:51,082
Really whatever resolution I try to use to show this to you here could never possibly 

216
00:12:51,082 --> 00:12:55,900
be enough, because the finer details of the shape we get go on with endless complexity.

217
00:13:01,760 --> 00:13:04,580
But take a moment to think about what this is actually saying.

218
00:13:04,580 --> 00:13:08,800
It means that there are regions in the complex plane where if you slightly 

219
00:13:08,800 --> 00:13:13,302
adjust that seed value, bump it to the side by 1,1 millionth or 1,1 trillionth, 

220
00:13:13,302 --> 00:13:17,580
it can completely change which of the five true roots it ends up landing on.

221
00:13:18,400 --> 00:13:22,832
We saw some foreshadowing of this kind of chaos with the real graph and the problematic 

222
00:13:22,832 --> 00:13:27,064
guess shown earlier, but picturing all of this in the complex plane really shines a 

223
00:13:27,064 --> 00:13:30,892
light on just how unpredictable this kind of root finding algorithm can be, 

224
00:13:30,892 --> 00:13:35,174
and how there are whole swaths of initial values where this sort of unpredictability 

225
00:13:35,174 --> 00:13:35,980
will take place.

226
00:13:37,080 --> 00:13:39,501
Now if I grab one of these roots and change it around, 

227
00:13:39,501 --> 00:13:42,362
meaning that we're using a different polynomial for the process, 

228
00:13:42,362 --> 00:13:44,740
you can see how the resulting fractal pattern changes.

229
00:13:45,540 --> 00:13:49,915
And notice for example how the regions around a given root always have the same color, 

230
00:13:49,915 --> 00:13:53,888
since those are the points that are close enough to the root where this linear 

231
00:13:53,888 --> 00:13:57,560
approximation scheme works as a way of finding that root with no problem.

232
00:13:58,180 --> 00:14:02,200
All of the chaos seems to be happening at the boundaries between the regions.

233
00:14:02,720 --> 00:14:03,320
Remember that.

234
00:14:04,180 --> 00:14:06,618
And it seems like no matter where I place these roots, 

235
00:14:06,618 --> 00:14:08,480
those fractal boundaries are always there.

236
00:14:08,980 --> 00:14:12,507
It clearly wasn't just some one-off for the polynomial we happened to start with, 

237
00:14:12,507 --> 00:14:14,960
this seems to be a general fact for any given polynomial.

238
00:14:16,800 --> 00:14:19,384
Another facet we can tweak here just to better illustrate 

239
00:14:19,384 --> 00:14:22,280
what's going on is how many steps of Newton's method we're using.

240
00:14:22,980 --> 00:14:25,698
For example, if I had the computer just take zero steps, 

241
00:14:25,698 --> 00:14:29,658
meaning it just colors each point of the plane based on whatever root it's already 

242
00:14:29,658 --> 00:14:31,280
closest to, this is what we'd get.

243
00:14:31,660 --> 00:14:35,060
And this kind of diagram actually has a special name, it's called a Voronoi Diagram.

244
00:14:36,060 --> 00:14:40,013
And if we let each point of the plane take a single step of Newton's method, 

245
00:14:40,013 --> 00:14:43,916
and then color it based on what root that single step result is closest to, 

246
00:14:43,916 --> 00:14:45,200
here's what we would get.

247
00:14:50,180 --> 00:14:54,364
Similarly, if we allow for two steps, we get a slightly more intricate pattern, 

248
00:14:54,364 --> 00:14:57,135
and so on and so on, where the more steps you allow, 

249
00:14:57,135 --> 00:15:01,320
the more intricate an image you get, bringing us closer to the original fractal.

250
00:15:01,860 --> 00:15:05,990
And this is important, keep in mind that the true shape we're studying here is not any 

251
00:15:05,990 --> 00:15:10,120
one of these, it's the limit as we allow for an arbitrarily large number of iterations.

252
00:15:14,340 --> 00:15:17,020
At this point, there are so many questions we might ask.

253
00:15:17,460 --> 00:15:21,314
Maybe you want to try this out with some other polynomials, see how general it is, 

254
00:15:21,314 --> 00:15:25,169
or maybe you want to dig deeper into what dynamics are exactly possible with these 

255
00:15:25,169 --> 00:15:29,349
iterated points, or see if there's connections with some other pieces of math that have a 

256
00:15:29,349 --> 00:15:30,000
similar theme.

257
00:15:30,900 --> 00:15:34,288
But I think the most pertinent question should be something like, 

258
00:15:34,288 --> 00:15:35,880
what the **** is going on here?

259
00:15:36,400 --> 00:15:40,400
I mean, all we're doing here is repeatedly solving linear approximations.

260
00:15:40,880 --> 00:15:43,620
Why would that produce something that's so endlessly complicated?

261
00:15:44,160 --> 00:15:46,844
It almost feels like the underlying rule here just shouldn't 

262
00:15:46,844 --> 00:15:49,660
carry enough information to actually produce an image like this.

263
00:15:50,180 --> 00:15:53,970
And before seeing this, don't you think a reasonable initial guess might have 

264
00:15:53,970 --> 00:15:57,760
been that each seed value simply tends towards whichever root it's closest to?

265
00:15:58,320 --> 00:16:01,555
And in that case, you know, if you colored each point based on the root 

266
00:16:01,555 --> 00:16:04,026
it lands on and move it back to the original position, 

267
00:16:04,026 --> 00:16:07,036
the final image would look like one of these Voronoi diagrams with 

268
00:16:07,036 --> 00:16:08,160
straight-line boundaries.

269
00:16:09,200 --> 00:16:12,171
And since I referenced earlier the unsolvability of the quintic, 

270
00:16:12,171 --> 00:16:15,600
maybe you would wonder if the complexity here has anything to do with that.

271
00:16:15,920 --> 00:16:18,680
That would be cool, but they're essentially unrelated ideas.

272
00:16:19,080 --> 00:16:23,360
In fact, using only degree-5 polynomials so far might have been a little misleading.

273
00:16:24,000 --> 00:16:27,542
Watch what happens if we play the same game, but with a cubic polynomial, 

274
00:16:27,542 --> 00:16:29,840
with three roots somewhere in the complex plane.

275
00:16:30,860 --> 00:16:33,833
Notice how, again, while most points nestle into a root, 

276
00:16:33,833 --> 00:16:37,380
some of them are kind of flying all over the place more chaotically.

277
00:16:38,040 --> 00:16:41,089
In fact, those ones are the most noticeable ones in an animation like this, 

278
00:16:41,089 --> 00:16:44,500
with the ones going towards the roots just quietly nestled in in their ending points.

279
00:16:45,160 --> 00:16:49,537
And again, if we stopped this at some number of iterations and we colored all the 

280
00:16:49,537 --> 00:16:53,274
points based on what root they're closest to and roll back the clock, 

281
00:16:53,274 --> 00:16:57,865
the relevant picture for all possible starting points forms this fractal pattern with 

282
00:16:57,865 --> 00:16:58,720
infinite detail.

283
00:17:05,839 --> 00:17:09,380
However, quadratic polynomials with only two roots are different.

284
00:17:09,819 --> 00:17:14,123
In that case, each seed value does simply tend towards whichever root it's closest to, 

285
00:17:14,123 --> 00:17:15,359
the way you might expect.

286
00:17:16,319 --> 00:17:19,940
There is a little bit of meandering behavior from all the points that are an 

287
00:17:19,940 --> 00:17:23,513
equal distance from each root, it's kind of like they're not able to decide 

288
00:17:23,513 --> 00:17:26,381
which one to go to, but that's just a single line of points, 

289
00:17:26,381 --> 00:17:30,095
and when we play the game of coloring, the diagram we end up with is decidedly 

290
00:17:30,095 --> 00:17:30,660
more boring.

291
00:17:32,060 --> 00:17:35,098
So something new seems to happen when you jump from 2 to 3, 

292
00:17:35,098 --> 00:17:36,820
and the question is what, exactly?

293
00:17:37,640 --> 00:17:41,605
And if you had asked me a month ago, I probably would have shrugged and just said, 

294
00:17:41,605 --> 00:17:45,427
you know, math is what it is, sometimes the answers look simple, sometimes not, 

295
00:17:45,427 --> 00:17:49,058
it's not always clear what it would mean to ask why in a setting like this, 

296
00:17:49,058 --> 00:17:52,546
but I would have been wrong, there actually is a reason that we can give 

297
00:17:52,546 --> 00:17:55,270
for why this image has to look as complicated as it does.

298
00:17:55,930 --> 00:18:00,190
You see, there's a very peculiar property that we can prove this diagram must have.

299
00:18:00,850 --> 00:18:03,644
Focus your attention on just one of the colored regions, 

300
00:18:03,644 --> 00:18:06,684
say this blue one, in other words, the set of all points that 

301
00:18:06,684 --> 00:18:09,970
eventually tend towards just one particular root of the polynomial.

302
00:18:10,510 --> 00:18:13,249
Now consider the boundary of that region, which for the 

303
00:18:13,249 --> 00:18:16,430
example shown on screen has this kind of nice threefold symmetry.

304
00:18:17,330 --> 00:18:21,917
What's surprising is that if you look at any other color and consider its boundary, 

305
00:18:21,917 --> 00:18:23,610
you get precisely the same set.

306
00:18:25,450 --> 00:18:29,334
Now when I say the word boundary, you probably have an intuitive sense of what it means, 

307
00:18:29,334 --> 00:18:31,997
but mathematicians have a pretty clever way to formalize it, 

308
00:18:31,997 --> 00:18:35,446
and this makes it easier to reason about in the context of more wild sets like 

309
00:18:35,446 --> 00:18:35,970
our fractal.

310
00:18:36,430 --> 00:18:39,947
We say that a point is on the boundary of a set if when you draw 

311
00:18:39,947 --> 00:18:43,193
a small circle centered at that point, no matter how small, 

312
00:18:43,193 --> 00:18:47,090
it will always contain points that are both inside that set and outside.

313
00:18:47,890 --> 00:18:50,134
So if you have a point that's on the interior, 

314
00:18:50,134 --> 00:18:53,716
a small enough circle would eventually only contain points inside the set, 

315
00:18:53,716 --> 00:18:57,250
and for a point on the exterior, a small enough circle contains no points 

316
00:18:57,250 --> 00:18:58,110
of the set at all.

317
00:18:58,610 --> 00:19:01,410
But when it's on the boundary, what it means to be on the 

318
00:19:01,410 --> 00:19:04,550
boundary is that your tiny tiny circles will always contain both.

319
00:19:05,410 --> 00:19:10,386
So looking back at our property, one way to read it is to say that if you draw a circle, 

320
00:19:10,386 --> 00:19:14,356
no matter how small that circle, it either contains all of the colors, 

321
00:19:14,356 --> 00:19:18,662
which happens when this shared boundary of the colors is inside that circle, 

322
00:19:18,662 --> 00:19:23,359
or it contains just one color, and this happens when it's in the interior of one of 

323
00:19:23,359 --> 00:19:24,030
the regions.

324
00:19:27,050 --> 00:19:30,531
In particular, what this implies is you should never be able to find a 

325
00:19:30,531 --> 00:19:34,210
circle that contains just two of the colors, since that would require that 

326
00:19:34,210 --> 00:19:37,790
you have points on the boundary between two regions, but not all of them.

327
00:19:38,950 --> 00:19:41,677
And before explaining where this fact actually comes from, 

328
00:19:41,677 --> 00:19:44,590
it's fun to try just wrapping your mind around it a little bit.

329
00:19:44,990 --> 00:19:48,197
You could imagine presenting this to someone as a kind of art puzzle, 

330
00:19:48,197 --> 00:19:52,001
completely out of context, never mentioning Newton's method or anything like that, 

331
00:19:52,001 --> 00:19:55,987
where you say that the challenge is to construct a picture with at least three colors, 

332
00:19:55,987 --> 00:19:59,882
maybe we say red, green, and blue, so that the boundary of one color is the boundary 

333
00:19:59,882 --> 00:20:00,570
of all of them.

334
00:20:00,950 --> 00:20:03,369
So if you started with something simple like this, 

335
00:20:03,369 --> 00:20:07,354
that clearly doesn't work because we have this whole line of points that are on the 

336
00:20:07,354 --> 00:20:09,916
boundary of green and red, but not touching any blue, 

337
00:20:09,916 --> 00:20:12,810
and likewise you have these other lines of disallowed points.

338
00:20:13,630 --> 00:20:17,527
So to correct that, you might go and add some blue blobs along the boundary, 

339
00:20:17,527 --> 00:20:20,818
and then likewise add some green blobs between the red and blue, 

340
00:20:20,818 --> 00:20:23,957
and some red blobs between the green and blue, but of course, 

341
00:20:23,957 --> 00:20:28,411
now the boundary of those blobs are a problem, for example, touching just blue and red, 

342
00:20:28,411 --> 00:20:29,070
but no green.

343
00:20:29,630 --> 00:20:32,157
So maybe you go and try to add even smaller blobs, 

344
00:20:32,157 --> 00:20:36,370
with the relevant third color around those smaller boundaries to help try to correct.

345
00:20:37,310 --> 00:20:41,170
And likewise you have to do this for every one of the blobs that you initially added.

346
00:20:44,450 --> 00:20:48,380
But then all the boundaries of those tiny blobs are problems of their own, 

347
00:20:48,380 --> 00:20:51,630
and you would have to somehow keep doing this process forever.

348
00:20:53,570 --> 00:20:57,460
And if you look at Newton's fractal itself, this sort of blobs 

349
00:20:57,460 --> 00:21:01,290
on blobs on blobs pattern seems to be exactly what it's doing.

350
00:21:06,550 --> 00:21:10,466
The main thing I want you to notice is how this property implies you could 

351
00:21:10,466 --> 00:21:15,009
never have a boundary which is smooth, or even partially smooth on some small segment, 

352
00:21:15,009 --> 00:21:18,090
since any smooth segment would only be touching two colors.

353
00:21:18,790 --> 00:21:23,150
Instead, the boundary has to consist entirely of sharp corners, so to speak.

354
00:21:23,810 --> 00:21:26,652
So if you believe the property, it explains why the 

355
00:21:26,652 --> 00:21:29,550
boundary remains rough no matter how far you zoom in.

356
00:21:30,170 --> 00:21:33,630
And for those of you who are familiar with the concept of fractal dimension, 

357
00:21:33,630 --> 00:21:37,630
you can measure the dimension of the particular boundary I'm showing you right now to be 

358
00:21:37,630 --> 00:21:38,170
around 1.44.

359
00:21:39,890 --> 00:21:42,115
Considering what our colors actually represent, 

360
00:21:42,115 --> 00:21:44,665
remember this isn't just a picture for pictures' sake, 

361
00:21:44,665 --> 00:21:47,030
think about what the property is really telling us.

362
00:21:48,310 --> 00:21:52,487
It says that if you're near a sensitive point where some of the seed values go 

363
00:21:52,487 --> 00:21:56,030
to one root but other seed values nearby would go to another root, 

364
00:21:56,030 --> 00:22:00,790
then in fact every possible root has to be accessible from within that small neighborhood.

365
00:22:01,530 --> 00:22:05,358
For any tiny little circle that you draw, either all of the points in that 

366
00:22:05,358 --> 00:22:08,626
circle tend to just one root, or they tend to all of the roots, 

367
00:22:08,626 --> 00:22:13,170
but there's never going to be anything in between, just tending to a subset of the roots.

368
00:22:14,050 --> 00:22:16,905
For a little intuition, I found it enlightening to simply watch 

369
00:22:16,905 --> 00:22:19,850
a cluster like the one I'm showing on screen undergo this process.

370
00:22:20,430 --> 00:22:25,408
It starts off mostly sticking together, but at one iteration they all kind of explode 

371
00:22:25,408 --> 00:22:30,330
outward, and after that it feels a lot more reasonable that any root is up for grabs.

372
00:22:31,370 --> 00:22:34,262
And keep in mind I'm just showing you finitely many points, 

373
00:22:34,262 --> 00:22:37,155
but in principle you would want to think about what happens 

374
00:22:37,155 --> 00:22:40,290
to all uncountably infinitely many points inside some small disk.

375
00:22:44,610 --> 00:22:48,270
This property also kind of explains why it's okay for things to look 

376
00:22:48,270 --> 00:22:51,772
normal in the case of quadratic polynomials, with just two roots, 

377
00:22:51,772 --> 00:22:56,070
because there a smooth boundary is fine, there's only two colors to touch anyway.

378
00:22:56,830 --> 00:23:01,210
To be clear, it doesn't guarantee that the quadratic case would have a smooth boundary, 

379
00:23:01,210 --> 00:23:04,794
it is perfectly possible to have a fractal boundary between two colors, 

380
00:23:04,794 --> 00:23:08,478
it just looks like our Newton's method diagram is not doing anything more 

381
00:23:08,478 --> 00:23:12,710
complicated than it needs to under the constraint of this strange boundary condition.

382
00:23:13,850 --> 00:23:17,727
But of course all of this simply raises the question of why this bizarre boundary 

383
00:23:17,727 --> 00:23:21,510
property would have to be true in the first place, where does it even come from?

384
00:23:22,450 --> 00:23:26,228
For that I'd like to tell you about a field of math which studies this kind of question, 

385
00:23:26,228 --> 00:23:27,630
it's called holomorphic dynamics.

386
00:23:28,410 --> 00:23:32,096
And I think we've covered enough ground today, and there's certainly enough left to tell, 

387
00:23:32,096 --> 00:23:34,350
so it makes sense to pull that out as a separate video.

388
00:23:35,010 --> 00:23:38,493
To close things off here, there is something sort of funny to me about 

389
00:23:38,493 --> 00:23:41,780
the fact that we call this Newton's fractal, despite the fact that 

390
00:23:41,780 --> 00:23:45,115
Newton had no clue about any of this, and could never have possibly 

391
00:23:45,115 --> 00:23:48,550
played with these images the way you and I can with modern technology.

392
00:23:49,050 --> 00:23:51,600
And it happens a lot through math that people's names get 

393
00:23:51,600 --> 00:23:54,370
attached to things well beyond what they could have dreamed of.

394
00:23:54,810 --> 00:23:56,897
Hamiltonians are central to quantum mechanics, 

395
00:23:56,897 --> 00:23:59,430
despite Hamilton knowing nothing about quantum mechanics.

396
00:24:00,010 --> 00:24:04,690
Fourier himself never once computed a fast Fourier transform, the list goes on.

397
00:24:04,690 --> 00:24:09,950
But this overextension of nomenclature carries with it what I think is an inspiring point.

398
00:24:10,530 --> 00:24:14,804
It reflects how even the simple ideas, ones that could be discovered centuries ago, 

399
00:24:14,804 --> 00:24:18,469
often hold within them some new angle or a new domain of relevance that 

400
00:24:18,469 --> 00:24:21,370
can sit waiting to be discovered hundreds of years later.

401
00:24:21,910 --> 00:24:25,150
It's not just that Newton had no idea about Newton's fractal.

402
00:24:25,330 --> 00:24:28,209
There are probably many other facts about Newton's method, 

403
00:24:28,209 --> 00:24:30,942
or about all sorts of math that may seem like old news, 

404
00:24:30,942 --> 00:24:33,870
that come from questions that no one has thought to ask yet.

405
00:24:34,290 --> 00:24:38,470
Questions that are just sitting there, waiting for someone, like you, to ask them.

406
00:24:42,870 --> 00:24:46,503
For example, if you were to ask about whether this process we've been talking 

407
00:24:46,503 --> 00:24:50,322
about today ever gets trapped in a cycle, it leads you to a surprising connection 

408
00:24:50,322 --> 00:24:53,770
with the Mandelbrot set, and we'll talk a bit about that in the next part.

409
00:24:55,030 --> 00:24:57,051
At the time that I'm posting this, that second part 

410
00:24:57,051 --> 00:24:59,190
by the way is available as an early release to patrons.

411
00:24:59,590 --> 00:25:01,469
I always like to give new content a little bit 

412
00:25:01,469 --> 00:25:03,470
of time there to gather feedback and catch errors.

413
00:25:03,950 --> 00:25:05,610
The finalized version should be out shortly.

414
00:25:06,470 --> 00:25:08,324
On the topic of patrons, I do just want to say a 

415
00:25:08,324 --> 00:25:10,330
quick thanks to everyone whose name is on the screen.

416
00:25:10,750 --> 00:25:13,970
I know that in recent history new videos have been a little slow coming.

417
00:25:14,410 --> 00:25:16,750
Part of this has to do with other projects that have been in the works.

418
00:25:17,230 --> 00:25:20,792
Things I'm proud of, by the way, things like the Summer of Math Exposition, 

419
00:25:20,792 --> 00:25:24,870
which was a surprising amount of work, to be honest, but so worth it given the outcome.

420
00:25:25,110 --> 00:25:29,030
I will be talking all about that and announcing winners very shortly, so stay tuned.

421
00:25:29,450 --> 00:25:33,270
I just want you to know that the plan for the foreseeable future is definitely to shift 

422
00:25:33,270 --> 00:25:35,570
gears more wholeheartedly back to making new videos, 

423
00:25:35,570 --> 00:25:38,696
and more than anything I want to say thanks for your continued support, 

424
00:25:38,696 --> 00:25:40,650
even during times of trying a few new things.

425
00:25:40,910 --> 00:25:43,218
It means a lot to me, it's what keeps the channel going, 

426
00:25:43,218 --> 00:25:46,499
and I'll do my best to make the new lessons in the pipeline live up to your vote 

427
00:25:46,499 --> 00:25:47,310
of confidence there.

