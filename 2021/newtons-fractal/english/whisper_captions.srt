1
00:00:02,460 --> 00:00:05,580
You've seen the title, so you know this is leading to a certain fractal.

2
00:00:05,920 --> 00:00:07,940
And actually it's an infinite family of fractals.

3
00:00:08,720 --> 00:00:12,960
And yeah, it'll be one of those mind-bogglingly intricate shapes that has infinite detail

4
00:00:12,960 --> 00:00:14,620
no matter how far you zoom in.

5
00:00:14,760 --> 00:00:18,940
But this is not really a video about generating some pretty picture for us to gawk at.

6
00:00:19,060 --> 00:00:22,760
Well, okay, maybe that's part of it, but the real story here has a much more pragmatic

7
00:00:22,760 --> 00:00:25,600
starting point than the story behind a lot of other fractals.

8
00:00:26,180 --> 00:00:29,860
And more than that, the final images that we get to will become a lot more meaningful

9
00:00:29,860 --> 00:00:35,020
if we make an effort to understand why, given what they represent, they kind of have to

10
00:00:35,020 --> 00:00:39,700
look as complicated as they do, and what this complexity reflects about an algorithm that

11
00:00:39,700 --> 00:00:41,620
is used all over the place in engineering.

12
00:00:48,000 --> 00:00:51,920
The starting point here will be to assume that you have some kind of polynomial, and

13
00:00:51,920 --> 00:00:53,900
that you want to know when it equals zero.

14
00:00:54,320 --> 00:00:57,940
For the one graphed here, you can visually see there's three different places where

15
00:00:57,940 --> 00:01:01,760
it crosses the x-axis, and you can kind of eyeball what those values might be.

16
00:01:01,900 --> 00:01:03,700
We'd call those the roots of the polynomial.

17
00:01:04,260 --> 00:01:06,300
But how do you actually compute them exactly?

18
00:01:07,440 --> 00:01:10,660
Now this is the kind of question where if you're already bought into math, maybe it's

19
00:01:10,660 --> 00:01:12,580
interesting enough in its own right to move forward.

20
00:01:12,940 --> 00:01:16,120
But if you just pull someone on the street aside and ask them this, I mean, they're

21
00:01:16,120 --> 00:01:18,120
already falling asleep, because who cares?

22
00:01:18,820 --> 00:01:23,240
But the thing is, this kind of question comes up all the time in engineering, where I'm

23
00:01:23,240 --> 00:01:27,160
personally most familiar with equations like this popping up is in the setting of computer

24
00:01:27,160 --> 00:01:30,320
graphics, where polynomials are just littered all over the place.

25
00:01:30,420 --> 00:01:34,220
So it's not uncommon that when you're figuring out how a given pixel should be

26
00:01:34,220 --> 00:01:38,380
colored, that somehow involves solving an equation that uses these polynomials.

27
00:01:39,480 --> 00:01:40,880
Here let me give you one fun example.

28
00:01:41,160 --> 00:01:46,180
When a computer renders text on the screen, those fonts are typically not defined using

29
00:01:46,180 --> 00:01:47,040
pixel values.

30
00:01:47,320 --> 00:01:51,680
They're defined as a bunch of polynomial curves, what are known in the business as

31
00:01:51,680 --> 00:01:52,520
Bezier curves.

32
00:01:53,400 --> 00:01:57,180
And any of you who've messed around with vector graphics, maybe in some design software,

33
00:01:57,700 --> 00:01:59,700
would be well familiar with these kinds of curves.

34
00:02:00,420 --> 00:02:04,920
But to actually display one of them on the screen, you need a way to tell each one of

35
00:02:04,920 --> 00:02:07,680
the pixels of your screen whether it should be colored in or not.

36
00:02:08,340 --> 00:02:12,260
These curves can be displayed either with some kind of stroke width, or if they enclose

37
00:02:12,260 --> 00:02:14,600
a region, some kind of fill for that region.

38
00:02:15,320 --> 00:02:18,800
But if you step back and you really think about it, it's an interesting puzzle to

39
00:02:18,800 --> 00:02:23,260
figure out how each one of the pixels knows whether it should be colored in or not, just

40
00:02:23,260 --> 00:02:24,880
based on the pure mathematical curve.

41
00:02:25,640 --> 00:02:26,940
I mean, take the case of stroke width.

42
00:02:27,320 --> 00:02:32,360
This comes down to understanding how far away a given pixel is from this pure mathematical

43
00:02:32,360 --> 00:02:36,140
curve, which itself is some platonic ideal, it has zero width.

44
00:02:36,700 --> 00:02:39,920
You would think of it as a parametric curve that has some parameter t.

45
00:02:41,080 --> 00:02:44,560
Now one thing that you could do to figure out this distance is to compute the distance

46
00:02:44,560 --> 00:02:48,540
between your pixel and a bunch of sample points on that curve, and then figure out

47
00:02:48,540 --> 00:02:49,020
the smallest.

48
00:02:49,820 --> 00:02:51,980
But that's both inefficient and imprecise.

49
00:02:52,460 --> 00:02:56,460
Better is to get a little mathematical and acknowledge that this distance to the curve

50
00:02:56,460 --> 00:03:00,660
at all the possible points is itself some smooth function of the parameter.

51
00:03:01,240 --> 00:03:06,000
And as it happens, the square of that distance will itself be a polynomial, which makes it

52
00:03:06,000 --> 00:03:07,000
pretty nice to deal with.

53
00:03:07,820 --> 00:03:11,260
And if this were meant to be a full lesson on rendering vector graphics, we could expand

54
00:03:11,260 --> 00:03:12,780
all that out and embrace the mess.

55
00:03:12,780 --> 00:03:16,940
But right now, the only salient point that I want to highlight is that in principle,

56
00:03:17,300 --> 00:03:20,780
this function whose minimum you want to know is some polynomial.

57
00:03:21,580 --> 00:03:25,560
Finding this minimum, and hence determining how close the pixel is to the curve and whether

58
00:03:25,560 --> 00:03:28,700
it should get filled in, is now just a classic calculus problem.

59
00:03:29,340 --> 00:03:33,220
What you do is figure out the slope of this function graph, which is to say its derivative,

60
00:03:33,600 --> 00:03:37,700
again some polynomial, and you ask, when does that equal zero?

61
00:03:38,980 --> 00:03:44,760
So, to actually carry out this seemingly simple task of just displaying a curve, wouldn't

62
00:03:44,760 --> 00:03:49,180
it be nice if you had a systematic and general way to figure out when a given polynomial

63
00:03:49,180 --> 00:03:49,900
equals zero?

64
00:03:50,960 --> 00:03:55,260
Of course, we could draw 100 other examples from 100 other disciplines, I just want you

65
00:03:55,260 --> 00:03:59,460
to keep in mind that as we seek the roots of polynomials, even though we always display

66
00:03:59,460 --> 00:04:03,440
it in a way that's cleanly abstracted away from the messiness of any real-world problem,

67
00:04:03,920 --> 00:04:06,100
the task is hardly just an academic one.

68
00:04:06,100 --> 00:04:10,400
But again, ask yourself, how do you actually compute one of those roots?

69
00:04:12,120 --> 00:04:16,900
If whatever problem you're working on leads you to a quadratic function, then happy days,

70
00:04:17,060 --> 00:04:19,360
you can use the quadratic formula that we all know and love.

71
00:04:20,180 --> 00:04:24,220
And as a fun side note, by the way, again relevant to root finding in computer graphics,

72
00:04:24,660 --> 00:04:28,940
I once had a Pixar engineer give me the estimate that considering how many lights were used

73
00:04:28,940 --> 00:04:32,880
in some of the scenes for the movie Coco, and given the nature of some of these per-pixel

74
00:04:32,880 --> 00:04:37,900
calculations when polynomially defined things like spheres are involved, the quadratic formula

75
00:04:37,900 --> 00:04:41,980
was easily used multiple trillions of times in the production of that film.

76
00:04:43,420 --> 00:04:47,600
Now, when your problem leads you to a higher order polynomial, things start to get trickier.

77
00:04:48,120 --> 00:04:52,520
For cubic polynomials, there is also a formula, which Mathologer has done a wonderful video

78
00:04:52,520 --> 00:04:57,200
on, and there's even a quartic formula, something that solves degree 4 polynomials,

79
00:04:57,740 --> 00:05:01,580
although honestly that one is such a god-awful nightmare of a formula that essentially no

80
00:05:01,580 --> 00:05:02,980
one actually uses it in practice.

81
00:05:04,060 --> 00:05:08,460
But after that, and I find this one of the most fascinating results in all of math, you

82
00:05:08,460 --> 00:05:13,220
cannot have an analogous formula to solve polynomials that have a degree 5 or more.

83
00:05:14,020 --> 00:05:18,440
More specifically, for a pretty extensive set of standard functions, you can prove that

84
00:05:18,440 --> 00:05:22,600
there is no possible way that you can combine those functions together that allows you to

85
00:05:22,600 --> 00:05:26,500
plug in the coefficients of a quintic polynomial and always get out a root.

86
00:05:27,360 --> 00:05:31,900
This is known as the unsolvability of the quintic, which is a whole other can of worms,

87
00:05:32,000 --> 00:05:36,300
we can hopefully get into it some other time, but in practice it kind of doesn't matter,

88
00:05:36,560 --> 00:05:41,040
because we have algorithms to approximate solutions to these kinds of equations with

89
00:05:41,040 --> 00:05:42,620
whatever level of precision you want.

90
00:05:43,240 --> 00:05:47,100
A common one, and the main topic for you and me today, is Newton's method.

91
00:05:47,620 --> 00:05:51,020
And yes, this is what will lead us to the fractals, but I want you to pay attention

92
00:05:51,020 --> 00:05:54,520
to just how innocent and benign the whole procedure seems at first.

93
00:05:55,240 --> 00:05:58,860
The algorithm begins with a random guess, let's call it x0.

94
00:05:59,660 --> 00:06:04,580
Almost certainly, the output of your polynomial at x0 is not 0, so you haven't found a solution,

95
00:06:04,960 --> 00:06:07,780
it's some other value visible as the height of this graph at that point.

96
00:06:08,380 --> 00:06:13,200
So to improve the guess, the idea is to ask, when does a linear approximation to the function

97
00:06:13,200 --> 00:06:15,320
around that value equal 0?

98
00:06:16,020 --> 00:06:19,960
In other words, if you were to draw a tangent line to the graph at this point, when does

99
00:06:19,960 --> 00:06:21,820
that tangent line cross the x-axis?

100
00:06:23,100 --> 00:06:26,960
Now, assuming this tangent line is a decent approximation of the function in the loose

101
00:06:26,960 --> 00:06:31,440
vicinity of some true root, the place where this approximation equals 0 should take you

102
00:06:31,440 --> 00:06:32,860
closer to that true root.

103
00:06:33,900 --> 00:06:37,560
As long as you're able to take a derivative of this function, and with polynomials you'll

104
00:06:37,560 --> 00:06:41,120
always be able to do that, you can concretely compute the slope of this line.

105
00:06:42,100 --> 00:06:45,380
So here's where the active viewers among you might want to pause and ask, how do you

106
00:06:45,380 --> 00:06:48,300
figure out the difference between the current guess and the improved guess?

107
00:06:48,520 --> 00:06:50,060
What is the size of this step?

108
00:06:50,900 --> 00:06:54,400
One way to think of it is to consider the fact that the slope of this tangent line,

109
00:06:54,580 --> 00:06:59,760
its rise over run, looks like the height of this graph divided by the length of that step.

110
00:07:00,440 --> 00:07:03,740
But on the other hand, of course, the slope of the tangent line is the derivative of the

111
00:07:03,740 --> 00:07:05,100
polynomial at that point.

112
00:07:05,840 --> 00:07:10,020
If we kind of rearrange this equation here, this gives you a super concrete way that you

113
00:07:10,020 --> 00:07:11,400
can compute that step size.

114
00:07:12,140 --> 00:07:17,320
So the next guess, which we might call x1, is the previous guess, adjusted by this step

115
00:07:17,320 --> 00:07:17,760
size.

116
00:07:18,400 --> 00:07:20,980
And after that, you can just repeat the process.

117
00:07:21,520 --> 00:07:25,400
You compute the value of this function, and the slope, at this new guess, which gives

118
00:07:25,400 --> 00:07:30,720
you a new linear approximation, and then you make the next guess, x2, wherever that tangent

119
00:07:30,720 --> 00:07:32,080
line crosses the x-axis.

120
00:07:32,780 --> 00:07:37,180
And then apply the same calculation to x2, and this gives you x3, and before too long

121
00:07:37,180 --> 00:07:41,180
you find yourself extremely close to a true root, pretty much as close as you could ever

122
00:07:41,180 --> 00:07:42,180
want to be.

123
00:07:44,760 --> 00:07:49,020
It's always worth gut checking that a formula actually makes sense, and in this case, hopefully

124
00:07:49,020 --> 00:07:49,500
it does.

125
00:07:49,840 --> 00:07:54,520
If p of x is large, meaning the graph is really high, you need to take a bigger step to get

126
00:07:54,520 --> 00:07:55,360
down to a root.

127
00:07:55,980 --> 00:08:01,300
But if p' of x is also large, meaning the graph is quite steep, you should maybe ease

128
00:08:01,300 --> 00:08:03,280
off on just how big you make that step.

129
00:08:04,520 --> 00:08:08,760
Now as the name suggests, this was a method that Newton used to solve polynomial expressions,

130
00:08:08,760 --> 00:08:14,000
but he sort of made it look a lot more complicated than it needed to be, and a fellow named Joseph

131
00:08:14,000 --> 00:08:18,340
Rafson published a much simpler version, more like what you and I are looking at now, so

132
00:08:18,340 --> 00:08:21,560
you also often hear this algorithm called the Newton-Rafson method.

133
00:08:22,640 --> 00:08:24,920
These days it's a common topic in calculus classes.

134
00:08:25,360 --> 00:08:29,660
One nice little exercise to try to get a feel for it, by the way, is to try using this method

135
00:08:29,660 --> 00:08:31,520
to approximate square roots by hand.

136
00:08:33,180 --> 00:08:38,060
But what most calculus students don't see, which is unfortunate, is just how deep things

137
00:08:38,060 --> 00:08:42,540
can get when you let yourself play around with this seemingly simple procedure and start

138
00:08:42,540 --> 00:08:44,300
kind of picking at some of its scabs.

139
00:08:45,380 --> 00:08:49,380
You see, while Newton's method works great if you start near a root, where it converges

140
00:08:49,380 --> 00:08:53,960
really quickly, if your initial guess is far from a root, it can have a couple foibles.

141
00:08:54,920 --> 00:08:58,940
For example, let's take the function we were just looking at, but shift it upward, and

142
00:08:58,940 --> 00:09:01,000
play the same game with the same initial guess.

143
00:09:07,400 --> 00:09:12,520
Notice, how the sequence of new guesses we're getting kind of bounces around the local minimum

144
00:09:12,520 --> 00:09:14,560
of this function sitting above the x-axis.

145
00:09:15,460 --> 00:09:19,040
This should kind of make sense, I mean, a linear approximation of the function around

146
00:09:19,040 --> 00:09:24,100
these values all the way to the right is pretty much entirely unrelated to the nature of the

147
00:09:24,100 --> 00:09:28,240
function around the one true root that it has off to the left, so they're sort of giving

148
00:09:28,240 --> 00:09:31,240
you no useful information about that true root.

149
00:09:31,880 --> 00:09:35,800
It's only when this process just happens to throw the new guess off far enough to the left,

150
00:09:35,920 --> 00:09:40,120
by chance, that the sequence of new guesses does anything productive and actually approaches

151
00:09:40,120 --> 00:09:40,900
that true root.

152
00:09:42,680 --> 00:09:47,100
Where things get especially interesting is if we ask about finding roots in the complex

153
00:09:47,100 --> 00:09:47,520
plane.

154
00:09:48,380 --> 00:09:52,980
Even if a polynomial like the one shown here has only a single real number root, you'll

155
00:09:52,980 --> 00:09:57,760
always be able to factor this polynomial into five terms like this if you allow these roots

156
00:09:57,760 --> 00:09:59,620
to potentially be complex numbers.

157
00:10:00,100 --> 00:10:02,100
This is the famous fundamental theorem of algebra.

158
00:10:02,820 --> 00:10:06,780
Now in the happy-go-lucky land of functions with real number inputs and real number outputs,

159
00:10:07,160 --> 00:10:11,340
where you can picture the association between inputs and outputs as a graph, Newton's method

160
00:10:11,340 --> 00:10:15,520
has this really nice visual meaning with tangent lines and intersecting the x-axis.

161
00:10:16,100 --> 00:10:20,380
But if you want to allow these inputs to be any complex number, which means our corresponding

162
00:10:20,380 --> 00:10:25,120
outputs might also be any complex number, you can't think about tangent lines and graphs

163
00:10:25,120 --> 00:10:25,520
anymore.

164
00:10:26,200 --> 00:10:29,100
But the formula doesn't really care how you visualize it.

165
00:10:29,100 --> 00:10:34,940
You can still play the same game, starting with a random guess, and evaluating the polynomial

166
00:10:34,940 --> 00:10:40,140
at this point, as well as its derivative, then using this update rule to generate a

167
00:10:40,140 --> 00:10:43,620
new guess, and hopefully that new guess is closer to the true root.

168
00:10:45,460 --> 00:10:49,200
But I do want to be clear, even if we can't visualize these steps with a tangent line,

169
00:10:49,500 --> 00:10:51,180
it really is the same logic.

170
00:10:51,180 --> 00:10:56,400
We're figuring out where a linear approximation of the function around your guess would equal

171
00:10:56,400 --> 00:11:01,180
zero, and then you use that zero of the linear approximation as your next guess.

172
00:11:01,480 --> 00:11:05,720
It's not like we're blindly applying the rule to a new context with no reason to expect

173
00:11:05,720 --> 00:11:06,320
it to work.

174
00:11:06,980 --> 00:11:11,060
And indeed, with at least the one I'm showing here after a few iterations, you can see that

175
00:11:11,060 --> 00:11:14,500
we land on a value whose corresponding output is essentially zero.

176
00:11:15,900 --> 00:11:17,200
Now here's the fun part.

177
00:11:17,200 --> 00:11:20,860
Let's apply this idea to many different possible initial guesses.

178
00:11:21,780 --> 00:11:25,840
For reference, I'll put up the five true roots of this particular polynomial in the

179
00:11:25,840 --> 00:11:26,540
complex plane.

180
00:11:27,500 --> 00:11:32,000
With each iteration, each one of our little dots takes some step based on Newton's method.

181
00:11:32,740 --> 00:11:37,000
Most of the dots will quickly converge to one of the five true roots, but there are

182
00:11:37,000 --> 00:11:40,400
some noticeable stragglers which seem to spend a while bouncing around.

183
00:11:41,000 --> 00:11:45,080
In particular, notice how the ones that are trapped on the positive real number line,

184
00:11:45,460 --> 00:11:46,680
well, they look a little bit lost.

185
00:11:47,200 --> 00:11:51,320
And this is exactly what we already saw before for this same polynomial when we were looking

186
00:11:51,320 --> 00:11:53,140
at the real number case with its graph.

187
00:11:56,440 --> 00:12:00,880
Now what I'm going to do is color each one of these dots based on which of those five

188
00:12:00,880 --> 00:12:05,660
roots it ended up closest to, and then we'll kind of roll back the clock so that every

189
00:12:05,660 --> 00:12:07,180
dot goes back to where it started.

190
00:12:09,240 --> 00:12:13,240
Now as I've done it here, this isn't quite enough resolution to get the full story, so

191
00:12:13,240 --> 00:12:16,780
let me show you what it would look like if we started with an even finer grid of initial

192
00:12:16,780 --> 00:12:20,960
guesses and played the same game, applying Newton's method a whole bunch of times, letting

193
00:12:20,960 --> 00:12:26,360
each root march forward, coloring each dot based on what root it lands on, then rolling

194
00:12:26,360 --> 00:12:28,760
back the clock to see where it originally came from.

195
00:12:29,400 --> 00:12:32,780
But even this isn't really a high enough resolution to appreciate the pattern.

196
00:12:33,180 --> 00:12:38,380
If we did this process for every single pixel on the plane, here's what you would get.

197
00:12:40,160 --> 00:12:44,160
And at this level of detail the color scheme is a little jarring to my eye at least, so

198
00:12:44,160 --> 00:12:45,500
let me calm it down a little.

199
00:12:46,320 --> 00:12:50,540
Really whatever resolution I try to use to show this to you here could never possibly

200
00:12:50,540 --> 00:12:55,900
be enough, because the finer details of the shape we get go on with endless complexity.

201
00:13:01,760 --> 00:13:04,580
But take a moment to think about what this is actually saying.

202
00:13:04,580 --> 00:13:09,360
It means that there are regions in the complex plane where if you slightly adjust that seed

203
00:13:09,360 --> 00:13:15,220
value, bump it to the side by 1,1 millionth or 1,1 trillionth, it can completely change

204
00:13:15,220 --> 00:13:17,580
which of the five true roots it ends up landing on.

205
00:13:18,400 --> 00:13:22,060
We saw some foreshadowing of this kind of chaos with the real graph and the problematic

206
00:13:22,060 --> 00:13:26,700
guess shown earlier, but picturing all of this in the complex plane really shines a

207
00:13:26,700 --> 00:13:30,960
light on just how unpredictable this kind of root finding algorithm can be, and how

208
00:13:30,960 --> 00:13:35,980
there are whole swaths of initial values where this sort of unpredictability will take place.

209
00:13:37,080 --> 00:13:40,480
Now if I grab one of these roots and change it around, meaning that we're using a different

210
00:13:40,480 --> 00:13:44,740
polynomial for the process, you can see how the resulting fractal pattern changes.

211
00:13:45,540 --> 00:13:50,620
And notice for example how the regions around a given root always have the same color, since

212
00:13:50,620 --> 00:13:54,540
those are the points that are close enough to the root where this linear approximation

213
00:13:54,540 --> 00:13:57,560
scheme works as a way of finding that root with no problem.

214
00:13:58,180 --> 00:14:02,200
All of the chaos seems to be happening at the boundaries between the regions.

215
00:14:02,720 --> 00:14:03,320
Remember that.

216
00:14:04,180 --> 00:14:07,720
And it seems like no matter where I place these roots, those fractal boundaries are

217
00:14:07,720 --> 00:14:08,480
always there.

218
00:14:08,980 --> 00:14:12,280
It clearly wasn't just some one-off for the polynomial we happened to start with,

219
00:14:12,420 --> 00:14:14,960
this seems to be a general fact for any given polynomial.

220
00:14:16,800 --> 00:14:21,000
Another facet we can tweak here just to better illustrate what's going on is how many steps

221
00:14:21,000 --> 00:14:22,280
of Newton's method we're using.

222
00:14:22,980 --> 00:14:27,180
For example, if I had the computer just take zero steps, meaning it just colors each point

223
00:14:27,180 --> 00:14:31,280
of the plane based on whatever root it's already closest to, this is what we'd get.

224
00:14:31,660 --> 00:14:35,060
And this kind of diagram actually has a special name, it's called a Voronoi Diagram.

225
00:14:36,060 --> 00:14:40,120
And if we let each point of the plane take a single step of Newton's method, and then

226
00:14:40,120 --> 00:14:45,200
color it based on what root that single step result is closest to, here's what we would get.

227
00:14:50,180 --> 00:14:55,020
Similarly, if we allow for two steps, we get a slightly more intricate pattern, and so

228
00:14:55,020 --> 00:14:59,740
on and so on, where the more steps you allow, the more intricate an image you get, bringing

229
00:14:59,740 --> 00:15:01,320
us closer to the original fractal.

230
00:15:01,860 --> 00:15:05,380
And this is important, keep in mind that the true shape we're studying here is not any

231
00:15:05,380 --> 00:15:10,120
one of these, it's the limit as we allow for an arbitrarily large number of iterations.

232
00:15:14,340 --> 00:15:17,020
At this point, there are so many questions we might ask.

233
00:15:17,460 --> 00:15:22,000
Maybe you want to try this out with some other polynomials, see how general it is, or maybe

234
00:15:22,000 --> 00:15:26,040
you want to dig deeper into what dynamics are exactly possible with these iterated points,

235
00:15:26,260 --> 00:15:30,000
or see if there's connections with some other pieces of math that have a similar theme.

236
00:15:30,900 --> 00:15:35,320
But I think the most pertinent question should be something like, what the **** is going

237
00:15:35,320 --> 00:15:35,880
on here?

238
00:15:36,400 --> 00:15:40,400
I mean, all we're doing here is repeatedly solving linear approximations.

239
00:15:40,880 --> 00:15:43,620
Why would that produce something that's so endlessly complicated?

240
00:15:44,160 --> 00:15:47,840
It almost feels like the underlying rule here just shouldn't carry enough information

241
00:15:47,840 --> 00:15:49,660
to actually produce an image like this.

242
00:15:50,180 --> 00:15:53,980
And before seeing this, don't you think a reasonable initial guess might have been

243
00:15:53,980 --> 00:15:57,760
that each seed value simply tends towards whichever root it's closest to?

244
00:15:58,320 --> 00:16:01,680
And in that case, you know, if you colored each point based on the root it lands on and

245
00:16:01,680 --> 00:16:06,040
move it back to the original position, the final image would look like one of these Voronoi

246
00:16:06,040 --> 00:16:08,160
diagrams with straight-line boundaries.

247
00:16:09,200 --> 00:16:13,340
And since I referenced earlier the unsolvability of the quintic, maybe you would wonder if

248
00:16:13,340 --> 00:16:15,600
the complexity here has anything to do with that.

249
00:16:15,920 --> 00:16:18,680
That would be cool, but they're essentially unrelated ideas.

250
00:16:19,080 --> 00:16:23,360
In fact, using only degree-5 polynomials so far might have been a little misleading.

251
00:16:24,000 --> 00:16:28,460
Watch what happens if we play the same game, but with a cubic polynomial, with three roots

252
00:16:28,460 --> 00:16:29,840
somewhere in the complex plane.

253
00:16:30,860 --> 00:16:35,800
Notice how, again, while most points nestle into a root, some of them are kind of flying

254
00:16:35,800 --> 00:16:37,380
all over the place more chaotically.

255
00:16:38,040 --> 00:16:41,520
In fact, those ones are the most noticeable ones in an animation like this, with the ones

256
00:16:41,520 --> 00:16:44,500
going towards the roots just quietly nestled in in their ending points.

257
00:16:45,160 --> 00:16:49,060
And again, if we stopped this at some number of iterations and we colored all the points

258
00:16:49,060 --> 00:16:53,340
based on what root they're closest to and roll back the clock, the relevant picture

259
00:16:53,340 --> 00:16:58,720
for all possible starting points forms this fractal pattern with infinite detail.

260
00:17:05,840 --> 00:17:09,380
However, quadratic polynomials with only two roots are different.

261
00:17:09,820 --> 00:17:13,700
In that case, each seed value does simply tend towards whichever root it's closest

262
00:17:13,700 --> 00:17:15,360
to, the way you might expect.

263
00:17:16,320 --> 00:17:20,060
There is a little bit of meandering behavior from all the points that are an equal distance

264
00:17:20,060 --> 00:17:24,400
from each root, it's kind of like they're not able to decide which one to go to, but

265
00:17:24,400 --> 00:17:28,440
that's just a single line of points, and when we play the game of coloring, the diagram

266
00:17:28,440 --> 00:17:30,660
we end up with is decidedly more boring.

267
00:17:32,060 --> 00:17:36,820
So something new seems to happen when you jump from 2 to 3, and the question is what, exactly?

268
00:17:37,640 --> 00:17:41,530
And if you had asked me a month ago, I probably would have shrugged and just said, you know,

269
00:17:41,530 --> 00:17:45,690
math is what it is, sometimes the answers look simple, sometimes not, it's not always

270
00:17:45,690 --> 00:17:50,350
clear what it would mean to ask why in a setting like this, but I would have been wrong, there

271
00:17:50,350 --> 00:17:54,470
actually is a reason that we can give for why this image has to look as complicated

272
00:17:54,470 --> 00:17:55,270
as it does.

273
00:17:55,930 --> 00:18:00,190
You see, there's a very peculiar property that we can prove this diagram must have.

274
00:18:00,850 --> 00:18:05,370
Focus your attention on just one of the colored regions, say this blue one, in other words,

275
00:18:05,490 --> 00:18:09,970
the set of all points that eventually tend towards just one particular root of the polynomial.

276
00:18:10,510 --> 00:18:14,810
Now consider the boundary of that region, which for the example shown on screen has

277
00:18:14,810 --> 00:18:16,430
this kind of nice threefold symmetry.

278
00:18:17,330 --> 00:18:21,890
What's surprising is that if you look at any other color and consider its boundary, you

279
00:18:21,890 --> 00:18:23,610
get precisely the same set.

280
00:18:25,450 --> 00:18:28,650
Now when I say the word boundary, you probably have an intuitive sense of what it means,

281
00:18:28,930 --> 00:18:32,590
but mathematicians have a pretty clever way to formalize it, and this makes it easier

282
00:18:32,590 --> 00:18:35,970
to reason about in the context of more wild sets like our fractal.

283
00:18:36,430 --> 00:18:40,870
We say that a point is on the boundary of a set if when you draw a small circle centered

284
00:18:40,870 --> 00:18:45,670
at that point, no matter how small, it will always contain points that are both inside

285
00:18:45,670 --> 00:18:47,090
that set and outside.

286
00:18:47,890 --> 00:18:51,650
So if you have a point that's on the interior, a small enough circle would eventually only

287
00:18:51,650 --> 00:18:56,830
contain points inside the set, and for a point on the exterior, a small enough circle contains

288
00:18:56,830 --> 00:18:58,110
no points of the set at all.

289
00:18:58,610 --> 00:19:02,770
But when it's on the boundary, what it means to be on the boundary is that your tiny tiny

290
00:19:02,770 --> 00:19:04,550
circles will always contain both.

291
00:19:05,410 --> 00:19:10,190
So looking back at our property, one way to read it is to say that if you draw a circle,

292
00:19:10,530 --> 00:19:15,470
no matter how small that circle, it either contains all of the colors, which happens

293
00:19:15,470 --> 00:19:20,790
when this shared boundary of the colors is inside that circle, or it contains just one

294
00:19:20,790 --> 00:19:24,030
color, and this happens when it's in the interior of one of the regions.

295
00:19:27,050 --> 00:19:31,250
In particular, what this implies is you should never be able to find a circle that contains

296
00:19:31,250 --> 00:19:35,550
just two of the colors, since that would require that you have points on the boundary

297
00:19:35,550 --> 00:19:37,790
between two regions, but not all of them.

298
00:19:38,950 --> 00:19:43,170
And before explaining where this fact actually comes from, it's fun to try just wrapping

299
00:19:43,170 --> 00:19:44,590
your mind around it a little bit.

300
00:19:44,990 --> 00:19:48,910
You could imagine presenting this to someone as a kind of art puzzle, completely out of

301
00:19:48,910 --> 00:19:52,230
context, never mentioning Newton's method or anything like that, where you say that

302
00:19:52,230 --> 00:19:56,670
the challenge is to construct a picture with at least three colors, maybe we say red, green,

303
00:19:56,750 --> 00:20:00,570
and blue, so that the boundary of one color is the boundary of all of them.

304
00:20:00,950 --> 00:20:04,810
So if you started with something simple like this, that clearly doesn't work because

305
00:20:04,810 --> 00:20:08,630
we have this whole line of points that are on the boundary of green and red, but not

306
00:20:08,630 --> 00:20:12,810
touching any blue, and likewise you have these other lines of disallowed points.

307
00:20:13,630 --> 00:20:18,050
So to correct that, you might go and add some blue blobs along the boundary, and then likewise

308
00:20:18,050 --> 00:20:22,430
add some green blobs between the red and blue, and some red blobs between the green and blue,

309
00:20:23,010 --> 00:20:27,490
but of course, now the boundary of those blobs are a problem, for example, touching just

310
00:20:27,490 --> 00:20:29,070
blue and red, but no green.

311
00:20:29,630 --> 00:20:34,030
So maybe you go and try to add even smaller blobs, with the relevant third color around

312
00:20:34,030 --> 00:20:36,370
those smaller boundaries to help try to correct.

313
00:20:37,310 --> 00:20:41,170
And likewise you have to do this for every one of the blobs that you initially added.

314
00:20:44,450 --> 00:20:49,130
But then all the boundaries of those tiny blobs are problems of their own, and you would

315
00:20:49,130 --> 00:20:51,630
have to somehow keep doing this process forever.

316
00:20:53,570 --> 00:20:58,810
And if you look at Newton's fractal itself, this sort of blobs on blobs on blobs pattern

317
00:20:59,310 --> 00:21:01,290
seems to be exactly what it's doing.

318
00:21:06,550 --> 00:21:10,530
The main thing I want you to notice is how this property implies you could never have

319
00:21:10,530 --> 00:21:15,950
a boundary which is smooth, or even partially smooth on some small segment, since any smooth

320
00:21:15,950 --> 00:21:18,090
segment would only be touching two colors.

321
00:21:18,790 --> 00:21:23,150
Instead, the boundary has to consist entirely of sharp corners, so to speak.

322
00:21:23,810 --> 00:21:28,390
So if you believe the property, it explains why the boundary remains rough no matter how

323
00:21:28,390 --> 00:21:29,550
far you zoom in.

324
00:21:30,170 --> 00:21:33,690
And for those of you who are familiar with the concept of fractal dimension, you can

325
00:21:33,690 --> 00:21:38,170
measure the dimension of the particular boundary I'm showing you right now to be around 1.44.

326
00:21:39,890 --> 00:21:44,150
Considering what our colors actually represent, remember this isn't just a picture for pictures'

327
00:21:44,290 --> 00:21:47,030
sake, think about what the property is really telling us.

328
00:21:48,310 --> 00:21:52,650
It says that if you're near a sensitive point where some of the seed values go to

329
00:21:52,650 --> 00:21:58,070
one root but other seed values nearby would go to another root, then in fact every possible

330
00:21:58,070 --> 00:22:00,790
root has to be accessible from within that small neighborhood.

331
00:22:01,530 --> 00:22:05,810
For any tiny little circle that you draw, either all of the points in that circle tend

332
00:22:05,810 --> 00:22:10,710
to just one root, or they tend to all of the roots, but there's never going to be anything

333
00:22:10,710 --> 00:22:13,170
in between, just tending to a subset of the roots.

334
00:22:14,050 --> 00:22:18,070
For a little intuition, I found it enlightening to simply watch a cluster like the one I'm

335
00:22:18,070 --> 00:22:19,850
showing on screen undergo this process.

336
00:22:20,430 --> 00:22:25,510
It starts off mostly sticking together, but at one iteration they all kind of explode

337
00:22:25,510 --> 00:22:30,330
outward, and after that it feels a lot more reasonable that any root is up for grabs.

338
00:22:31,370 --> 00:22:35,130
And keep in mind I'm just showing you finitely many points, but in principle you would want

339
00:22:35,130 --> 00:22:40,290
to think about what happens to all uncountably infinitely many points inside some small disk.

340
00:22:44,610 --> 00:22:49,110
This property also kind of explains why it's okay for things to look normal in the case

341
00:22:49,110 --> 00:22:54,370
of quadratic polynomials, with just two roots, because there a smooth boundary is fine, there's

342
00:22:54,370 --> 00:22:56,070
only two colors to touch anyway.

343
00:22:56,830 --> 00:23:00,530
To be clear, it doesn't guarantee that the quadratic case would have a smooth boundary,

344
00:23:00,870 --> 00:23:04,910
it is perfectly possible to have a fractal boundary between two colors, it just looks

345
00:23:04,910 --> 00:23:09,230
like our Newton's method diagram is not doing anything more complicated than it needs

346
00:23:09,230 --> 00:23:12,710
to under the constraint of this strange boundary condition.

347
00:23:13,850 --> 00:23:18,470
But of course all of this simply raises the question of why this bizarre boundary property

348
00:23:18,470 --> 00:23:21,510
would have to be true in the first place, where does it even come from?

349
00:23:22,450 --> 00:23:26,030
For that I'd like to tell you about a field of math which studies this kind of question,

350
00:23:26,310 --> 00:23:27,630
it's called holomorphic dynamics.

351
00:23:28,410 --> 00:23:31,910
And I think we've covered enough ground today, and there's certainly enough left to tell,

352
00:23:32,110 --> 00:23:34,350
so it makes sense to pull that out as a separate video.

353
00:23:35,010 --> 00:23:38,770
To close things off here, there is something sort of funny to me about the fact that we

354
00:23:38,770 --> 00:23:43,590
call this Newton's fractal, despite the fact that Newton had no clue about any of this,

355
00:23:43,850 --> 00:23:47,970
and could never have possibly played with these images the way you and I can with modern

356
00:23:47,970 --> 00:23:48,550
technology.

357
00:23:49,050 --> 00:23:53,110
And it happens a lot through math that people's names get attached to things well beyond what

358
00:23:53,110 --> 00:23:54,370
they could have dreamed of.

359
00:23:54,810 --> 00:23:58,950
Hamiltonians are central to quantum mechanics, despite Hamilton knowing nothing about quantum

360
00:23:58,950 --> 00:23:59,430
mechanics.

361
00:24:00,010 --> 00:24:04,690
Fourier himself never once computed a fast Fourier transform, the list goes on.

362
00:24:04,690 --> 00:24:09,950
But this overextension of nomenclature carries with it what I think is an inspiring point.

363
00:24:10,530 --> 00:24:15,170
It reflects how even the simple ideas, ones that could be discovered centuries ago, often

364
00:24:15,170 --> 00:24:20,170
hold within them some new angle or a new domain of relevance that can sit waiting to be discovered

365
00:24:20,170 --> 00:24:21,370
hundreds of years later.

366
00:24:21,910 --> 00:24:25,150
It's not just that Newton had no idea about Newton's fractal.

367
00:24:25,330 --> 00:24:29,650
There are probably many other facts about Newton's method, or about all sorts of math

368
00:24:29,650 --> 00:24:33,870
that may seem like old news, that come from questions that no one has thought to ask yet.

369
00:24:34,290 --> 00:24:38,470
Questions that are just sitting there, waiting for someone, like you, to ask them.

370
00:24:42,870 --> 00:24:46,710
For example, if you were to ask about whether this process we've been talking about today

371
00:24:46,710 --> 00:24:51,130
ever gets trapped in a cycle, it leads you to a surprising connection with the Mandelbrot

372
00:24:51,130 --> 00:24:53,770
set, and we'll talk a bit about that in the next part.

373
00:24:55,030 --> 00:24:58,190
At the time that I'm posting this, that second part by the way is available as an

374
00:24:58,190 --> 00:24:59,190
early release to patrons.

375
00:24:59,590 --> 00:25:03,070
I always like to give new content a little bit of time there to gather feedback and catch

376
00:25:03,070 --> 00:25:03,470
errors.

377
00:25:03,950 --> 00:25:05,610
The finalized version should be out shortly.

378
00:25:06,470 --> 00:25:09,630
On the topic of patrons, I do just want to say a quick thanks to everyone whose name

379
00:25:09,630 --> 00:25:10,330
is on the screen.

380
00:25:10,750 --> 00:25:13,970
I know that in recent history new videos have been a little slow coming.

381
00:25:14,410 --> 00:25:16,750
Part of this has to do with other projects that have been in the works.

382
00:25:17,230 --> 00:25:21,290
Things I'm proud of, by the way, things like the Summer of Math Exposition, which was a

383
00:25:21,290 --> 00:25:24,870
surprising amount of work, to be honest, but so worth it given the outcome.

384
00:25:25,110 --> 00:25:29,030
I will be talking all about that and announcing winners very shortly, so stay tuned.

385
00:25:29,450 --> 00:25:33,030
I just want you to know that the plan for the foreseeable future is definitely to shift

386
00:25:33,030 --> 00:25:36,930
gears more wholeheartedly back to making new videos, and more than anything I want to say

387
00:25:36,930 --> 00:25:40,650
thanks for your continued support, even during times of trying a few new things.

388
00:25:40,910 --> 00:25:44,210
It means a lot to me, it's what keeps the channel going, and I'll do my best to make

389
00:25:44,210 --> 00:25:47,310
the new lessons in the pipeline live up to your vote of confidence there.

390
00:25:59,030 --> 00:26:01,410
you

