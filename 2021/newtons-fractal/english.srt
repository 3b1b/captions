1
00:00:00,000 --> 00:00:05,640
You've seen the title, so you know this is leading to a certain fractal.

2
00:00:05,640 --> 00:00:08,120
And actually it's an infinite family of fractals.

3
00:00:08,120 --> 00:00:12,920
And yeah, it'll be one of those mind-bogglingly intricate shapes that has infinite detail

4
00:00:12,920 --> 00:00:14,800
no matter how far you zoom in.

5
00:00:14,800 --> 00:00:18,880
But this is not really a video about generating some pretty picture for us to gawk at.

6
00:00:18,880 --> 00:00:22,780
Well, okay, maybe that's part of it, but the real story here has a much more pragmatic

7
00:00:22,780 --> 00:00:26,540
starting point than the story behind a lot of other fractals.

8
00:00:26,540 --> 00:00:29,860
And more than that, the final images that we get to will become a lot more meaningful

9
00:00:29,860 --> 00:00:34,900
if we make an effort to understand why, given what they represent, they kind of have to

10
00:00:34,900 --> 00:00:39,640
look as complicated as they do, and what this complexity reflects about an algorithm that

11
00:00:39,640 --> 00:00:48,300
is used all over the place in engineering.

12
00:00:48,300 --> 00:00:51,940
The starting point here will be to assume that you have some kind of polynomial, and

13
00:00:51,940 --> 00:00:54,180
that you want to know when it equals zero.

14
00:00:54,820 --> 00:00:57,980
For the one graph here, you can visually see there's three different places where it

15
00:00:57,980 --> 00:01:01,980
crosses the x-axis, and you can kind of eyeball what those values might be.

16
00:01:01,980 --> 00:01:04,380
We'd call those the roots of the polynomial.

17
00:01:04,380 --> 00:01:06,620
But how do you actually compute them exactly?

18
00:01:06,620 --> 00:01:10,580
Now this is the kind of question where if you're already bought into math, maybe it's

19
00:01:10,580 --> 00:01:13,080
interesting enough in its own right to move forward.

20
00:01:13,080 --> 00:01:16,160
But if you just pull someone on the street aside and ask them this, I mean, they're

21
00:01:16,160 --> 00:01:18,960
already falling asleep, because who cares?

22
00:01:18,960 --> 00:01:22,900
But the thing is, this kind of question comes up all the time in engineering.

23
00:01:22,940 --> 00:01:26,620
Where I'm personally most familiar with equations like this popping up is in the setting

24
00:01:26,620 --> 00:01:30,420
of computer graphics, where polynomials are just littered all over the place.

25
00:01:30,420 --> 00:01:35,020
So it's not uncommon that when you're figuring out how a given pixel should be colored,

26
00:01:35,020 --> 00:01:39,640
that somehow involves solving an equation that uses these polynomials.

27
00:01:39,640 --> 00:01:41,320
Here let me give you one fun example.

28
00:01:41,320 --> 00:01:46,160
When a computer renders text on the screen, those fonts are typically not defined using

29
00:01:46,160 --> 00:01:47,160
pixel values.

30
00:01:47,160 --> 00:01:51,480
They're defined as a bunch of polynomial curves, what are known in the business as

31
00:01:51,480 --> 00:01:53,500
Bezier curves.

32
00:01:53,500 --> 00:01:57,660
And any of you who've messed around with vector graphics, maybe in some design software,

33
00:01:57,660 --> 00:02:00,520
would be well familiar with these kinds of curves.

34
00:02:00,520 --> 00:02:04,860
But to actually display one of them on the screen, you need a way to tell each one of

35
00:02:04,860 --> 00:02:08,400
the pixels of your screen whether it should be colored in or not.

36
00:02:08,400 --> 00:02:12,200
These curves can be displayed either with some kind of stroke width, or if they enclose

37
00:02:12,200 --> 00:02:15,420
a region, some kind of fill for that region.

38
00:02:15,420 --> 00:02:18,960
But if you step back and really think about it, it's an interesting puzzle to figure

39
00:02:18,960 --> 00:02:23,460
out how each one of the pixels knows whether it should be colored in or not just based

40
00:02:23,460 --> 00:02:25,100
on the pure mathematical curve.

41
00:02:25,100 --> 00:02:27,480
I mean, take the case of stroke width.

42
00:02:27,480 --> 00:02:32,400
This comes down to understanding how far away a given pixel is from this pure mathematical

43
00:02:32,400 --> 00:02:36,780
curve, which itself is some platonic ideal, it has zero width.

44
00:02:36,780 --> 00:02:41,120
You would think of it as a parametric curve that has some parameter t.

45
00:02:41,120 --> 00:02:44,540
Now one thing that you could do to figure out this distance is to compute the distance

46
00:02:44,540 --> 00:02:48,940
between your pixel and a bunch of sample points on that curve, and then figure out the smallest.

47
00:02:49,920 --> 00:02:52,620
But that's both inefficient and imprecise.

48
00:02:52,620 --> 00:02:56,440
Better is to get a little mathematical and acknowledge that this distance to the curve

49
00:02:56,440 --> 00:03:01,440
at all the possible points is itself some smooth function of the parameter.

50
00:03:01,440 --> 00:03:05,960
And as it happens, the square of that distance will itself be a polynomial, which makes it

51
00:03:05,960 --> 00:03:07,960
pretty nice to deal with.

52
00:03:07,960 --> 00:03:11,240
And if this were meant to be a full lesson on rendering vector graphics, we could expand

53
00:03:11,240 --> 00:03:15,180
all that out and embrace the mess, but right now the only salient point that I want to

54
00:03:15,200 --> 00:03:21,840
highlight is that in principle, this function, whose minimum you want to know, is some polynomial.

55
00:03:21,840 --> 00:03:25,540
Finding this minimum, and hence determining how close the pixel is to the curve and whether

56
00:03:25,540 --> 00:03:29,420
it should get filled in, is now just a classic calculus problem.

57
00:03:29,420 --> 00:03:33,540
What you do is figure out the slope of this function graph, which is to say its derivative,

58
00:03:33,540 --> 00:03:39,400
again some polynomial, and you ask, when does that equal zero?

59
00:03:39,400 --> 00:03:44,780
So to actually carry out this seemingly simple task of just displaying a curve, wouldn't

60
00:03:44,780 --> 00:03:49,220
it be nice if you had a systematic and general way to figure out when a given polynomial

61
00:03:49,220 --> 00:03:51,060
equals zero?

62
00:03:51,060 --> 00:03:55,260
Of course we could draw 100 other examples from 100 other disciplines, I just want you

63
00:03:55,260 --> 00:03:59,420
to keep in mind that as we seek the roots of polynomials, even though we always display

64
00:03:59,420 --> 00:04:03,980
it in a way that's cleanly abstracted away from the messiness of any real-world problem,

65
00:04:03,980 --> 00:04:06,820
the task is hardly just an academic one.

66
00:04:06,820 --> 00:04:12,380
But again, ask yourself, how do you actually compute one of those roots?

67
00:04:12,380 --> 00:04:17,100
If whatever problem you're working on leads you to a quadratic function, then happy days,

68
00:04:17,100 --> 00:04:20,260
you can use the quadratic formula we all know and love.

69
00:04:20,260 --> 00:04:25,140
As a fun side note, again relevant to root finding in computer graphics, I once had a

70
00:04:25,140 --> 00:04:29,740
Pixar engineer give me the estimate that considering how many lights were used in some of the scenes

71
00:04:29,740 --> 00:04:34,000
for the movie Coco, and given the nature of some of these per-pixel calculations when

72
00:04:34,000 --> 00:04:38,840
polynomially defined things like spheres are involved, the quadratic formula was easily

73
00:04:38,840 --> 00:04:42,840
used multiple trillions of times in the production of that film.

74
00:04:42,840 --> 00:04:48,200
Now, when your problem leads you to a higher order polynomial, things start to get trickier.

75
00:04:48,200 --> 00:04:52,800
For cubic polynomials, there is also a formula, which Mathologer has done a wonderful video

76
00:04:52,800 --> 00:04:57,800
on, and there's even a quartic formula, something that solves degree 4 polynomials,

77
00:04:57,800 --> 00:05:01,540
although honestly that one is such a god-awful nightmare of a formula that essentially no

78
00:05:01,540 --> 00:05:04,120
one actually uses it in practice.

79
00:05:04,120 --> 00:05:08,620
But after that, and I find this one of the most fascinating results in all of math, you

80
00:05:08,620 --> 00:05:14,240
cannot have an analogous formula to solve polynomials that have a degree 5 or more.

81
00:05:14,240 --> 00:05:18,380
More specifically, for a pretty extensive set of standard functions, you can prove that

82
00:05:18,380 --> 00:05:22,500
there is no possible way that you can combine those functions together that allows you to

83
00:05:22,500 --> 00:05:27,800
plug in the coefficients of a quintic polynomial and always get out a root.

84
00:05:27,800 --> 00:05:32,060
This is known as the unsolvability of the quintic, which is a whole other can of worms,

85
00:05:32,060 --> 00:05:36,860
we can hopefully get into it some other time, but in practice it kind of doesn't matter,

86
00:05:36,900 --> 00:05:40,980
because we have algorithms to approximate solutions to these kinds of equations with

87
00:05:40,980 --> 00:05:43,220
whatever level of precision you want.

88
00:05:43,220 --> 00:05:47,700
A common one, and the main topic for you and me today, is Newton's method.

89
00:05:47,700 --> 00:05:51,060
And yes, this is what will lead us to the fractals, but I want you to pay attention

90
00:05:51,060 --> 00:05:55,660
to just how innocent and benign the whole procedure seems at first.

91
00:05:55,660 --> 00:05:59,700
The algorithm begins with a random guess, let's call it x0.

92
00:05:59,700 --> 00:06:04,780
Almost certainly, the output of your polynomial at x0 is not 0, so you haven't found a solution,

93
00:06:04,820 --> 00:06:08,060
it's some other value visible as the height of this graph at that point.

94
00:06:08,060 --> 00:06:13,340
So to improve the guess, the idea is to ask, when does a linear approximation to the function

95
00:06:13,340 --> 00:06:16,100
around that value equal 0?

96
00:06:16,100 --> 00:06:19,900
In other words, if you were to draw a tangent line to the graph at this point, when does

97
00:06:19,900 --> 00:06:23,500
that tangent line cross the x-axis?

98
00:06:23,500 --> 00:06:26,860
Now assuming this tangent line is a decent approximation of the function in the loose

99
00:06:26,860 --> 00:06:31,340
vicinity of some true root, the place where this approximation equals 0 should take you

100
00:06:31,340 --> 00:06:33,980
closer to that true root.

101
00:06:33,980 --> 00:06:37,580
As long as you're able to take a derivative of this function, and with polynomials you'll

102
00:06:37,580 --> 00:06:42,140
always be able to do that, you can concretely compute the slope of this line.

103
00:06:42,140 --> 00:06:45,300
So here's where the active viewers among you might want to pause and ask, how do you

104
00:06:45,300 --> 00:06:48,700
figure out the difference between the current guess and the improved guess?

105
00:06:48,700 --> 00:06:51,300
What is the size of this step?

106
00:06:51,300 --> 00:06:54,540
One way to think of it is to consider the fact that the slope of this tangent line,

107
00:06:54,540 --> 00:06:59,940
its rise over run, looks like the height of this graph divided by the length of that step.

108
00:07:00,460 --> 00:07:03,620
But on the other hand, of course, the slope of the tangent line is the derivative of the

109
00:07:03,620 --> 00:07:05,300
polynomial at that point.

110
00:07:05,300 --> 00:07:09,980
If we kind of rearrange this equation here, this gives you a super concrete way that you

111
00:07:09,980 --> 00:07:11,660
can compute that step size.

112
00:07:11,660 --> 00:07:17,260
So the next guess, which we might call x1, is the previous guess, adjusted by this step

113
00:07:17,260 --> 00:07:18,820
size.

114
00:07:18,820 --> 00:07:21,500
And after that, you can just repeat the process.

115
00:07:21,500 --> 00:07:25,520
You compute the value of this function and the slope at this new guess, which gives you

116
00:07:25,520 --> 00:07:30,680
a new linear approximation, and then you make the next guess, x2, wherever that tangent

117
00:07:30,680 --> 00:07:32,880
line crosses the x-axis.

118
00:07:32,880 --> 00:07:36,520
And then apply the same calculation to x2, and this gives you x3.

119
00:07:36,520 --> 00:07:40,600
And before too long, you find yourself extremely close to a true root, pretty much as close

120
00:07:40,600 --> 00:07:45,120
as you could ever want to be.

121
00:07:45,120 --> 00:07:49,040
It's always worth gut checking that a formula actually makes sense, and in this case, hopefully

122
00:07:49,040 --> 00:07:50,040
it does.

123
00:07:50,040 --> 00:07:54,500
If p of x is large, meaning the graph is really high, you need to take a bigger step to get

124
00:07:54,500 --> 00:07:56,260
down to a root.

125
00:07:56,260 --> 00:08:01,280
But if p' of x is also large, meaning the graph is quite steep, you should maybe ease

126
00:08:01,280 --> 00:08:03,780
off on just how big you make that step.

127
00:08:03,780 --> 00:08:09,440
Now as the name suggests, this was a method that Newton used to solve polynomial expressions.

128
00:08:09,440 --> 00:08:13,940
But he sort of made it look a lot more complicated than it needed to be, and a fellow named Joseph

129
00:08:13,940 --> 00:08:18,500
Rafson published a much simpler version, more like what you and I are looking at now, so

130
00:08:18,500 --> 00:08:22,740
you also often hear this algorithm called the Newton-Rafson method.

131
00:08:22,780 --> 00:08:25,460
These days it's a common topic in calculus classes.

132
00:08:25,460 --> 00:08:29,660
One nice little exercise to try to get a feel for it, by the way, is to try using this method

133
00:08:29,660 --> 00:08:33,380
to approximate square roots by hand.

134
00:08:33,380 --> 00:08:38,020
But what most calculus students don't see, which is unfortunate, is just how deep things

135
00:08:38,020 --> 00:08:42,500
can get when you let yourself play around with this seemingly simple procedure and start

136
00:08:42,500 --> 00:08:45,340
kind of picking at some of its scabs.

137
00:08:45,340 --> 00:08:49,340
You see, while Newton's method works great if you start near a root, where it converges

138
00:08:49,340 --> 00:08:55,060
really quickly, if your initial guess is far from a root, it can have a couple foibles.

139
00:08:55,060 --> 00:08:58,900
For example, let's take the function we were just looking at, but shift it upward, and

140
00:08:58,900 --> 00:09:02,340
play the same game with the same initial guess.

141
00:09:07,660 --> 00:09:12,120
Notice how the sequence of new guesses that we're getting kind of bounces around the local

142
00:09:12,120 --> 00:09:15,540
minimum of this function sitting above the x-axis.

143
00:09:15,540 --> 00:09:19,380
This should kind of make sense, I mean a linear approximation of the function around these

144
00:09:19,380 --> 00:09:23,980
values all the way to the right is pretty much entirely unrelated to the nature of the

145
00:09:23,980 --> 00:09:28,240
function around the one true root that it has off to the left, so they're sort of giving

146
00:09:28,240 --> 00:09:32,020
you no useful information about that true root.

147
00:09:32,020 --> 00:09:35,980
It's only when this process just happens to throw the new guess off far enough to the left,

148
00:09:35,980 --> 00:09:40,140
by chance, that the sequence of new guesses does anything productive and actually approaches

149
00:09:40,140 --> 00:09:42,900
that true root.

150
00:09:42,900 --> 00:09:47,100
Where things get especially interesting is if we ask about finding roots in the complex

151
00:09:47,100 --> 00:09:48,640
plane.

152
00:09:48,640 --> 00:09:53,040
Even if a polynomial like the one shown here has only a single real number root, you'll

153
00:09:53,040 --> 00:09:57,760
always be able to factor this polynomial into five terms like this if you allow these roots

154
00:09:57,760 --> 00:10:00,220
to potentially be complex numbers.

155
00:10:00,220 --> 00:10:02,500
This is the famous fundamental theorem of algebra.

156
00:10:02,500 --> 00:10:07,220
Now, in the happy-go-lucky land of functions with real number inputs and real number outputs,

157
00:10:07,220 --> 00:10:11,380
where you can picture the association between inputs and outputs as a graph, Newton's method

158
00:10:11,380 --> 00:10:16,260
has this really nice visual meaning with tangent lines and intersecting the x-axis.

159
00:10:16,260 --> 00:10:20,500
But if you want to allow these inputs to be any complex number, which means our corresponding

160
00:10:20,500 --> 00:10:25,260
outputs might also be any complex number, you can't think about tangent lines and graphs

161
00:10:25,260 --> 00:10:26,660
anymore.

162
00:10:26,660 --> 00:10:29,420
But the formula doesn't really care how you visualize it.

163
00:10:29,420 --> 00:10:34,980
You can still play the same game, starting with a random guess, and evaluating the polynomial

164
00:10:34,980 --> 00:10:40,060
at this point, as well as its derivative, then using this update rule to generate a

165
00:10:40,060 --> 00:10:41,380
new guess.

166
00:10:41,380 --> 00:10:45,680
And hopefully that new guess is closer to the true root.

167
00:10:45,680 --> 00:10:49,700
But I do want to be clear, even if we can't visualize these steps with a tangent line,

168
00:10:49,700 --> 00:10:51,700
it really is the same logic.

169
00:10:51,700 --> 00:10:56,380
We're figuring out where a linear approximation of the function around your guess would equal

170
00:10:56,380 --> 00:11:01,940
zero, and then you use that zero of the linear approximation as your next guess.

171
00:11:01,940 --> 00:11:05,740
It's not like we're blindly applying the rule to a new context with no reason to expect

172
00:11:05,740 --> 00:11:06,740
it to work.

173
00:11:07,020 --> 00:11:11,020
And indeed, with at least the one I'm showing here after a few iterations, you can see that

174
00:11:11,020 --> 00:11:16,380
we land on a value whose corresponding output is essentially zero.

175
00:11:16,380 --> 00:11:17,380
Now here's the fun part.

176
00:11:17,380 --> 00:11:21,260
Let's apply this idea to many different possible initial guesses.

177
00:11:21,260 --> 00:11:25,740
For reference, I'll put up the five true roots of this particular polynomial in the

178
00:11:25,740 --> 00:11:27,580
complex plane.

179
00:11:27,580 --> 00:11:32,960
With each iteration, each one of our little dots takes some step based on Newton's method.

180
00:11:32,960 --> 00:11:36,940
Most of the dots will quickly converge to one of the five true roots, but there are

181
00:11:36,940 --> 00:11:41,160
some noticeable stragglers which seem to spend a while bouncing around.

182
00:11:41,160 --> 00:11:45,720
In particular, notice how the ones that are trapped on the positive real number line?

183
00:11:45,720 --> 00:11:50,800
They look a little bit lost, and this is exactly what we already saw before for this same polynomial

184
00:11:50,800 --> 00:11:56,800
when we were looking at the real number case with its graph.

185
00:11:56,800 --> 00:12:00,960
Now what I'm going to do is color each one of these dots based on which of those five

186
00:12:00,960 --> 00:12:05,640
roots it ended up closest to, and then we'll kind of roll back the clock so that every

187
00:12:05,640 --> 00:12:09,600
dot goes back to where it started.

188
00:12:09,600 --> 00:12:13,000
Now as I've done it here, this isn't quite enough resolution to get the full story, so

189
00:12:13,000 --> 00:12:16,760
let me show you what it would look like if we started with an even finer grid of initial

190
00:12:16,760 --> 00:12:20,960
guesses and played the same game, applying Newton's method a whole bunch of times, letting

191
00:12:20,960 --> 00:12:26,360
each root march forward, coloring each dot based on what root it lands on, then rolling

192
00:12:26,360 --> 00:12:29,500
back the clock to see where it originally came from.

193
00:12:29,540 --> 00:12:33,440
But even this isn't really a high enough resolution to appreciate the pattern.

194
00:12:33,440 --> 00:12:40,560
If we did this process for every single pixel on the plane, here's what you would get.

195
00:12:40,560 --> 00:12:44,460
And at this level of detail the color scheme is a little jarring to my eye at least, so

196
00:12:44,460 --> 00:12:46,460
let me calm it down a little.

197
00:12:46,460 --> 00:12:50,560
Really whatever resolution I try to use to show this to you here could never possibly

198
00:12:50,560 --> 00:12:56,060
be enough, because the finer details of the shape we get go on with endless complexity.

199
00:12:59,500 --> 00:13:05,220
But take a moment to think about what this is actually saying.

200
00:13:05,220 --> 00:13:09,380
It means that there are regions in the complex plane where if you slightly adjust that seed

201
00:13:09,380 --> 00:13:13,820
value, you know, you just kind of bump it to the side by 1,1 millionth or 1,1 trillionth,

202
00:13:13,820 --> 00:13:18,420
it can completely change which of the five true roots it ends up landing on.

203
00:13:18,420 --> 00:13:22,140
We saw some foreshadowing of this kind of chaos with the real graph and the problematic

204
00:13:22,140 --> 00:13:26,500
guess shown earlier, but picturing all of this in the complex plane really shines a

205
00:13:26,500 --> 00:13:31,020
light on just how unpredictable this kind of root-finding algorithm can be, and how

206
00:13:31,020 --> 00:13:37,060
there are whole swaths of initial values where this sort of unpredictability will take place.

207
00:13:37,060 --> 00:13:40,460
Now if I grab one of these roots and change it around, meaning that we're using a different

208
00:13:40,460 --> 00:13:45,640
polynomial for the process, you can see how the resulting fractal pattern changes.

209
00:13:45,640 --> 00:13:50,740
And notice for example how the regions around a given root always have the same color, since

210
00:13:50,740 --> 00:13:54,560
those are the points that are close enough to the root where this linear approximation

211
00:13:54,560 --> 00:13:58,320
scheme works as a way of finding that root with no problem.

212
00:13:58,320 --> 00:14:02,760
All of the chaos seems to be happening at the boundaries between the regions.

213
00:14:02,760 --> 00:14:03,760
Remember that.

214
00:14:03,760 --> 00:14:07,640
And it seems like no matter where I place these roots, those fractal boundaries are

215
00:14:07,640 --> 00:14:08,640
always there.

216
00:14:08,640 --> 00:14:12,240
It clearly wasn't just some one-off for the polynomial we happened to start with,

217
00:14:12,240 --> 00:14:16,840
it seems to be a general fact for any given polynomial.

218
00:14:16,840 --> 00:14:20,980
Another facet we can tweak here just to better illustrate what's going on is how many steps

219
00:14:20,980 --> 00:14:23,040
of Newton's method we're using.

220
00:14:23,040 --> 00:14:27,160
For example, if I had the computer just take zero steps, meaning it just colors each point

221
00:14:27,160 --> 00:14:31,680
of the plane based on whatever root it's already closest to, this is what we'd get.

222
00:14:31,680 --> 00:14:36,220
And this kind of diagram actually has a special name, it's called a Voronoi Diagram.

223
00:14:36,220 --> 00:14:40,060
And if we let each point of the plane take a single step of Newton's method, and then

224
00:14:40,060 --> 00:14:44,560
color it based on what root that single step result is closest to, here's what we would

225
00:14:44,560 --> 00:14:47,560
get.

226
00:14:47,560 --> 00:14:54,920
Similarly, if we allow for two steps, we get a slightly more intricate pattern, and so

227
00:14:54,920 --> 00:14:59,720
on and so on, where the more steps you allow, the more intricate an image you get, bringing

228
00:14:59,720 --> 00:15:01,400
us closer to the original fractal.

229
00:15:01,400 --> 00:15:05,320
And this is important, keep in mind that the true shape we're studying here is not any

230
00:15:05,320 --> 00:15:14,560
one of these, it's the limit as we allow for an arbitrarily large number of iterations.

231
00:15:14,560 --> 00:15:17,840
At this point, there are so many questions we might ask.

232
00:15:17,840 --> 00:15:21,980
Maybe you want to try this out with some other polynomials, see how general it is, or maybe

233
00:15:21,980 --> 00:15:26,600
you want to dig deeper into what dynamics are exactly possible with these iterated points,

234
00:15:26,600 --> 00:15:31,080
or see if there's connections with some other pieces of math that have a similar theme.

235
00:15:31,080 --> 00:15:35,320
But I think the most pertinent question should be something like, what the f*** is going

236
00:15:35,320 --> 00:15:36,320
on here?

237
00:15:36,320 --> 00:15:40,960
I mean, all we're doing here is repeatedly solving linear approximations.

238
00:15:40,960 --> 00:15:44,280
Why would that produce something that's so endlessly complicated?

239
00:15:44,280 --> 00:15:47,880
It almost feels like the underlying rule here just shouldn't carry enough information

240
00:15:47,880 --> 00:15:50,580
to actually produce an image like this.

241
00:15:50,580 --> 00:15:53,880
And before seeing this, don't you think a reasonable initial guess might have been

242
00:15:53,880 --> 00:15:58,440
that each seed value simply tends towards whichever root it's closest to?

243
00:15:58,440 --> 00:16:01,640
And in that case, you know, if you colored each point based on the root it lands on and

244
00:16:01,640 --> 00:16:05,880
move it back to the original position, the final image would look like one of these Voronoi

245
00:16:05,880 --> 00:16:09,280
diagrams, with straight line boundaries.

246
00:16:09,280 --> 00:16:13,360
And since I referenced earlier the unsolvability of the quintic, maybe you would wonder if

247
00:16:13,440 --> 00:16:15,680
the complexity here has anything to do with that.

248
00:16:15,680 --> 00:16:19,240
That would be cool, but they're essentially unrelated ideas.

249
00:16:19,240 --> 00:16:24,080
In fact, using only degree-5 polynomials so far might have been a little misleading.

250
00:16:24,080 --> 00:16:28,440
Watch what happens if we play the same game, but with a cubic polynomial, with three roots

251
00:16:28,440 --> 00:16:31,000
somewhere in the complex plane.

252
00:16:31,000 --> 00:16:35,800
Notice how, again, while most points nestle into a root, some of them are kind of flying

253
00:16:35,800 --> 00:16:37,240
all over the place more chaotically.

254
00:16:37,240 --> 00:16:41,480
In fact, those ones are the most noticeable ones in an animation like this, with the ones

255
00:16:41,480 --> 00:16:45,400
going towards the roots just quietly nestled in in their ending points.

256
00:16:45,400 --> 00:16:49,040
And again, if we stopped this at some number of iterations and we colored all the points

257
00:16:49,040 --> 00:16:53,560
based on what root they're closest to, and roll back the clock, the relevant picture

258
00:16:53,560 --> 00:17:01,040
for all possible starting points forms this fractal pattern with infinite detail.

259
00:17:01,040 --> 00:17:09,880
However, quadratic polynomials with only two roots are different.

260
00:17:09,880 --> 00:17:13,880
In that case, each seed value does simply tend towards whichever root it's closest

261
00:17:13,880 --> 00:17:16,400
to, the way you might expect.

262
00:17:16,400 --> 00:17:20,040
There is a little bit of meandering behavior from all the points that are an equal distance

263
00:17:20,040 --> 00:17:24,480
from each root, it's kind of like they're not able to decide which one to go to, but

264
00:17:24,480 --> 00:17:28,440
that's just a single line of points, and when we play the game of coloring, the diagram

265
00:17:28,440 --> 00:17:32,080
we end up with is decidedly more boring.

266
00:17:32,080 --> 00:17:36,600
So something new seems to happen when you jump from 2 to 3, and the question is what,

267
00:17:36,600 --> 00:17:37,600
exactly?

268
00:17:37,600 --> 00:17:41,480
If you had asked me a month ago, I probably would have shrugged and just said, you know,

269
00:17:41,480 --> 00:17:45,600
math is what it is, sometimes the answers look simple, sometimes not, it's not always

270
00:17:45,600 --> 00:17:49,000
clear what it would mean to ask why in a setting like this.

271
00:17:49,000 --> 00:17:53,040
But I would have been wrong, there actually is a reason we can give for why this image

272
00:17:53,040 --> 00:17:55,960
has to look as complicated as it does.

273
00:17:55,960 --> 00:18:01,040
You see, there's a very peculiar property that we can prove this diagram must have.

274
00:18:01,040 --> 00:18:05,480
Focus your attention on just one of the colored regions, say this blue one, in other words,

275
00:18:05,480 --> 00:18:10,880
the set of all points that eventually tend towards just one particular root of the polynomial.

276
00:18:10,880 --> 00:18:14,720
Now consider the boundary of that region, which for the example shown on screen has

277
00:18:14,720 --> 00:18:17,360
this kind of nice three-fold symmetry.

278
00:18:17,360 --> 00:18:21,840
What's surprising is that if you look at any other color and consider its boundary, you

279
00:18:21,840 --> 00:18:25,480
get precisely the same set.

280
00:18:25,480 --> 00:18:29,120
Now when I say the word boundary, you probably have an intuitive sense of what it means,

281
00:18:29,120 --> 00:18:32,560
but mathematicians have a pretty clever way to formalize it, and this makes it easier

282
00:18:32,640 --> 00:18:36,800
to reason about in the context of more wild sets like our fractal.

283
00:18:36,800 --> 00:18:40,920
We say that a point is on the boundary of a set if when you draw a small circle centered

284
00:18:40,920 --> 00:18:45,720
at that point, no matter how small, it will always contain points that are both inside

285
00:18:45,720 --> 00:18:47,960
that set and outside.

286
00:18:47,960 --> 00:18:51,640
So if you have a point that's on the interior, a small enough circle would eventually only

287
00:18:51,640 --> 00:18:56,800
contain points inside the set, and for a point on the exterior, a small enough circle contains

288
00:18:56,800 --> 00:18:58,760
no points of the set at all.

289
00:18:58,760 --> 00:19:02,400
But when it's on the boundary, what it means to be on the boundary is that your tiny

290
00:19:03,240 --> 00:19:05,840
tiny circles will always contain both.

291
00:19:05,840 --> 00:19:10,560
So looking back at our property, one way to read it is to say that if you draw a circle,

292
00:19:10,560 --> 00:19:15,480
no matter how small that circle, it either contains all of the colors, which happens

293
00:19:15,480 --> 00:19:21,000
when this shared boundary of the colors is inside that circle, or it contains just one

294
00:19:21,000 --> 00:19:27,120
color, and this happens when it's in the interior of one of the regions.

295
00:19:27,120 --> 00:19:31,320
In particular, what this implies is you should never be able to find a circle that contains

296
00:19:31,320 --> 00:19:36,000
just two of the colors, since that would require that you have points on the boundary between

297
00:19:36,000 --> 00:19:38,960
two regions, but not all of them.

298
00:19:38,960 --> 00:19:43,160
And before explaining where this fact actually comes from, it's fun to try just wrapping

299
00:19:43,160 --> 00:19:45,060
your mind around it a little bit.

300
00:19:45,060 --> 00:19:48,760
You could imagine presenting this to someone as a kind of art puzzle, completely out of

301
00:19:48,760 --> 00:19:52,160
context, never mentioning Newton's method or anything like that, where you say that

302
00:19:52,160 --> 00:19:56,760
the challenge is to construct a picture with at least three colors, maybe we say red, green,

303
00:19:56,760 --> 00:20:01,080
and blue, so that the boundary of one color is the boundary of all of them.

304
00:20:01,080 --> 00:20:04,800
So if you started with something simple like this, that clearly doesn't work, because

305
00:20:04,800 --> 00:20:08,580
we have this whole line of points that are on the boundary of green and red, but not

306
00:20:08,580 --> 00:20:13,600
touching any blue, and likewise you have these other lines of disallowed points.

307
00:20:13,600 --> 00:20:18,080
So to correct that, you might go and add some blue blobs along the boundary, and then likewise

308
00:20:18,080 --> 00:20:23,160
add some green blobs between the red and blue, and some red blobs between the green and blue,

309
00:20:23,160 --> 00:20:27,440
but of course, now the boundary of those blobs are a problem, for example, touching just

310
00:20:27,440 --> 00:20:29,800
blue and red, but no green.

311
00:20:29,800 --> 00:20:34,160
So maybe you go and try to add even smaller blobs, with the relevant third color around

312
00:20:34,160 --> 00:20:37,240
those smaller boundaries to help try to correct.

313
00:20:37,240 --> 00:20:44,880
And likewise you have to do this for every one of the blobs that you initially added.

314
00:20:44,880 --> 00:20:49,040
But then all the boundaries of those tiny blobs are problems of their own, and you would

315
00:20:49,040 --> 00:20:54,480
have to somehow keep doing this process forever.

316
00:20:54,480 --> 00:20:59,280
And if you look at Newton's fractal itself, this sort of blobs on blobs on blobs pattern

317
00:20:59,280 --> 00:21:07,000
seems to be exactly what it's doing.

318
00:21:07,000 --> 00:21:10,480
The main thing I want you to notice is how this property implies you could never have

319
00:21:10,480 --> 00:21:15,880
a boundary which is smooth, or even partially smooth on some small segment, since any smooth

320
00:21:15,880 --> 00:21:18,600
segment would only be touching two colors.

321
00:21:18,600 --> 00:21:23,860
Instead, the boundary has to consist entirely of sharp corners, so to speak.

322
00:21:23,860 --> 00:21:28,240
So if you believe the property, it explains why the boundary remains rough no matter how

323
00:21:28,240 --> 00:21:30,080
far you zoom in.

324
00:21:30,080 --> 00:21:33,640
And for those of you who are familiar with the concept of fractal dimension, you can

325
00:21:33,640 --> 00:21:40,040
measure the dimension of the particular boundary I'm showing you right now to be around 1.44.

326
00:21:40,040 --> 00:21:44,200
Considering what our colors actually represent, remember this isn't just a picture for picture's

327
00:21:44,200 --> 00:21:48,760
sake, think about what the property is really telling us.

328
00:21:48,760 --> 00:21:52,560
It says that if you're near a sensitive point where some of the seed values go to

329
00:21:52,560 --> 00:21:58,040
one root but other seed values nearby would go to another root, then in fact every possible

330
00:21:58,040 --> 00:22:01,560
root has to be accessible from within that small neighborhood.

331
00:22:01,560 --> 00:22:06,040
For any tiny little circle you draw, either all of the points in that circle tend to just

332
00:22:06,040 --> 00:22:10,880
one root, or they tend to all of the roots, but there's never going to be anything in

333
00:22:10,880 --> 00:22:14,160
between, just tending to a subset of the roots.

334
00:22:14,160 --> 00:22:18,120
For a little intuition, I found it enlightening to simply watch a cluster like the one on

335
00:22:18,120 --> 00:22:20,500
screen undergo this process.

336
00:22:20,500 --> 00:22:25,680
It starts off mostly sticking together, but at one iteration they all kind of explode

337
00:22:25,680 --> 00:22:31,400
outward, and after that it feels a lot more reasonable that any root is up for grabs.

338
00:22:31,400 --> 00:22:35,060
And keep in mind I'm just showing you finitely many points, but in principle you would want

339
00:22:35,060 --> 00:22:45,000
to think about what happens to all uncountably infinitely many points inside some small disk.

340
00:22:45,000 --> 00:22:49,040
This property also kind of explains why it's okay for things to look normal in the case

341
00:22:49,040 --> 00:22:54,400
of quadratic polynomials with just two roots, because there a smooth boundary is fine, there's

342
00:22:54,400 --> 00:22:56,920
only two colors to touch anyway.

343
00:22:56,920 --> 00:23:01,020
To be clear, it doesn't guarantee that the quadratic case would have a smooth boundary,

344
00:23:01,020 --> 00:23:04,920
it is perfectly possible to have a fractal boundary between two colors, it just looks

345
00:23:04,920 --> 00:23:09,240
like our Newton's method diagram is not doing anything more complicated than it needs

346
00:23:09,240 --> 00:23:13,920
to under the constraint of this strange boundary condition.

347
00:23:13,920 --> 00:23:18,480
But of course all of this simply raises the question of why this bizarre boundary property

348
00:23:18,480 --> 00:23:20,560
would have to be true in the first place.

349
00:23:20,560 --> 00:23:22,580
Where does it even come from?

350
00:23:22,580 --> 00:23:26,260
For that I'd like to tell you about a field of math which studies this kind of question,

351
00:23:26,260 --> 00:23:28,460
it's called holomorphic dynamics.

352
00:23:28,460 --> 00:23:31,500
And I think we've covered enough ground today and there's certainly enough left

353
00:23:31,500 --> 00:23:35,140
to tell, so it makes sense to pull that out as a separate video.

354
00:23:35,140 --> 00:23:38,700
To close things off here, there is something sort of funny to me about the fact that we

355
00:23:38,700 --> 00:23:43,260
call this Newton's fractal, despite the fact that Newton had no clue about any of

356
00:23:43,260 --> 00:23:47,460
this and could never have possibly played with these images the way that you and I can

357
00:23:47,460 --> 00:23:49,220
with modern technology.

358
00:23:49,220 --> 00:23:53,100
And it happens a lot through math that people's names get attached to things well beyond what

359
00:23:53,100 --> 00:23:55,220
they could have dreamed of.

360
00:23:55,220 --> 00:23:58,940
Hamiltonians are central to quantum mechanics, despite Hamilton knowing nothing about quantum

361
00:23:58,940 --> 00:23:59,940
mechanics.

362
00:23:59,940 --> 00:24:05,080
Fourier himself never once computed a fast Fourier transform, the list goes on.

363
00:24:05,080 --> 00:24:10,580
But this overextension of nomenclature carries with it what I think is an inspiring point.

364
00:24:10,580 --> 00:24:15,160
It reflects how even the simple ideas, ones that could be discovered centuries ago, often

365
00:24:15,160 --> 00:24:19,600
hold within them some new angle or a new domain of relevance that can sit waiting to

366
00:24:19,600 --> 00:24:22,040
be discovered hundreds of years later.

367
00:24:22,040 --> 00:24:25,720
It's not just that Newton had no idea about Newton's fractal.

368
00:24:25,720 --> 00:24:29,640
There are probably many other facts about Newton's method, or about all sorts of math

369
00:24:29,640 --> 00:24:34,660
that may seem like old news, that come from questions that no one has thought to ask yet,

370
00:24:34,660 --> 00:24:43,200
questions that are just sitting there, waiting for someone, like you, to ask them.

371
00:24:43,240 --> 00:24:46,800
For example, if you were to ask about whether this process we've been talking about today

372
00:24:46,800 --> 00:24:51,280
ever gets trapped in a cycle, it leads you to a surprising connection with the Mandelbrot

373
00:24:51,280 --> 00:24:55,120
set, and we'll talk a bit about that in the next part.

374
00:24:55,120 --> 00:24:58,060
At the time that I'm posting this, that second part, by the way, is available as an

375
00:24:58,060 --> 00:24:59,520
early release to patrons.

376
00:24:59,520 --> 00:25:02,960
I always like to give new content a little bit of time there to gather feedback and catch

377
00:25:02,960 --> 00:25:03,960
errors.

378
00:25:03,960 --> 00:25:06,480
The finalized version should be out shortly.

379
00:25:06,480 --> 00:25:09,580
And on the topic of patrons, I do just want to say a quick thanks to everyone whose name

380
00:25:09,580 --> 00:25:10,740
is on the screen.

381
00:25:10,780 --> 00:25:14,500
I know that in recent history new videos have been a little slow coming.

382
00:25:14,500 --> 00:25:17,340
Part of this has to do with other projects that have been in the works.

383
00:25:17,340 --> 00:25:20,360
Things I'm proud of, by the way, things like the Summer of Math Exposition, which

384
00:25:20,360 --> 00:25:25,160
was a surprising amount of work, to be honest, but so worth it given the outcome.

385
00:25:25,160 --> 00:25:29,540
I will be talking all about that and announcing winners very shortly, so stay tuned.

386
00:25:29,540 --> 00:25:33,020
I just want you to know that the plan for the foreseeable future is definitely to shift

387
00:25:33,020 --> 00:25:37,020
gears more wholeheartedly back to making new videos, and more than anything I want to say

388
00:25:37,060 --> 00:25:40,740
Thanks for your continued support, even during times of trying a few new things.

389
00:25:40,740 --> 00:25:44,180
It means a lot to me, it's what keeps the channel going, and I'll do my best to make

390
00:25:44,180 --> 00:25:47,300
the new lessons in the pipeline live up to your vote of confidence there.

