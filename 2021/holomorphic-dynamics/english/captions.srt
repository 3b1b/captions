1
00:00:00,000 --> 00:00:04,240
Today I'd like to tell you about a piece of math known as holomorphic dynamics.

2
00:00:04,240 --> 00:00:08,000
This is the field which studies things like the Mandelbrot set, and in fact one of my

3
00:00:08,000 --> 00:00:12,720
main goals today is to show you how this iconic shape, the poster child of math,

4
00:00:12,720 --> 00:00:16,480
pops up in a more general way than the initial definition might suggest.

5
00:00:17,200 --> 00:00:21,200
Now this field is also intimately tied to what we talked about in the last video,

6
00:00:21,200 --> 00:00:25,200
with Newton's fractal, and another goal of ours towards the end of this video

7
00:00:25,200 --> 00:00:27,840
will be to help tie up some of the loose ends that we had there.

8
00:00:30,000 --> 00:00:39,200
So first of all, this word holomorphic might seem a little weird. It refers to functions that have

9
00:00:39,200 --> 00:00:44,480
complex number inputs and complex number outputs, and which you can also take a derivative of.

10
00:00:45,040 --> 00:00:49,280
Basically what it means to have a derivative in this context is that when you zoom in to how the

11
00:00:49,280 --> 00:00:54,720
function behaves near a given point, to the point and its neighbors, it looks roughly like scaling

12
00:00:54,720 --> 00:00:59,520
and rotating, like multiplying by some complex constant. We'll talk more about that in just a

13
00:00:59,600 --> 00:01:03,520
bit, but for now know that it includes most of the ordinary functions you could write down,

14
00:01:03,520 --> 00:01:06,560
things like polynomials, exponentials, trig functions, all of that.

15
00:01:07,280 --> 00:01:12,400
The relevant dynamics in the title here comes from asking what happens when you repeatedly

16
00:01:12,400 --> 00:01:17,440
apply one of these functions over and over, in the sense of evaluating on some input,

17
00:01:17,440 --> 00:01:20,480
then evaluating the same function on whatever you just got out,

18
00:01:21,440 --> 00:01:25,200
and then doing that again, and again and again and again.

19
00:01:26,000 --> 00:01:29,360
Sometimes the pattern of points emerging from this gets trapped in a cycle.

20
00:01:30,400 --> 00:01:33,840
Other times the sequence will just approach some kind of limiting point.

21
00:01:35,040 --> 00:01:39,040
Or maybe the sequence gets bigger and bigger and it flies off to infinity,

22
00:01:39,040 --> 00:01:42,640
which mathematicians also kind of think of as approaching a limit point, just the point at

23
00:01:42,640 --> 00:01:48,080
infinity. And other times still they have no pattern at all, and they behave chaotically.

24
00:01:49,840 --> 00:01:53,600
What's surprising is that for all sorts of functions that you might write down,

25
00:01:54,160 --> 00:01:58,880
when you try to do something to visualize when these different possible behaviors arise,

26
00:01:58,880 --> 00:02:02,160
it often results in some insanely intricate fractal pattern.

27
00:02:03,280 --> 00:02:07,200
Those of you who watched the last video have already seen one neat example of this.

28
00:02:07,200 --> 00:02:11,760
There's this algorithm called Newton's method, which finds the root of some polynomial p,

29
00:02:11,760 --> 00:02:15,120
and the way it works is to basically repeatedly iterate the expression

30
00:02:15,120 --> 00:02:19,120
x minus p of x divided by p prime of x, p prime being the derivative.

31
00:02:19,920 --> 00:02:24,080
When your initial seed value is in the loose vicinity of a root to that polynomial,

32
00:02:24,080 --> 00:02:29,200
a value where p of x equals zero, this procedure produces a sequence of values that really quickly

33
00:02:29,200 --> 00:02:34,000
converges to that root. This is what makes it a useful algorithm in practice. But then we tried

34
00:02:34,000 --> 00:02:39,600
to do this in the complex plane, looking at the many possible seed values and asking which root

35
00:02:39,600 --> 00:02:44,720
in the complex plane each one of these seed values might end up on. Then we associated a color with

36
00:02:44,720 --> 00:02:50,000
each one of the roots, and then colored each pixel of the plane based on which root a seed value

37
00:02:50,000 --> 00:02:55,680
starting at that pixel would ultimately land on. The results we got were some of these insanely

38
00:02:55,680 --> 00:02:59,200
intricate pictures, with these rough fractal boundaries between the colors.

39
00:03:02,240 --> 00:03:05,760
Now in this example, if you look at the function that we're actually iterating,

40
00:03:05,760 --> 00:03:09,840
say for some specific choice of a polynomial, like z cubed minus one,

41
00:03:09,840 --> 00:03:14,000
you can rewrite the whole expression to look like one polynomial divided by another.

42
00:03:14,800 --> 00:03:19,600
Mathematicians call these kinds of functions rational functions. And if you forget the fact

43
00:03:19,600 --> 00:03:24,240
that this arose from Newton's method, you could reasonably ask what happens when you iterate any

44
00:03:24,240 --> 00:03:29,120
other rational function. And in fact, this is exactly what the mathematicians Pierre Fatou

45
00:03:29,120 --> 00:03:33,760
and Gaston Julia did in the years immediately following World War I. And they built up a

46
00:03:33,760 --> 00:03:38,560
surprisingly rich theory of what happens when you iterate these rational functions, which is

47
00:03:38,560 --> 00:03:43,120
particularly impressive given that they had no computers to visualize any of this the way that

48
00:03:43,120 --> 00:03:48,960
you and I can. Remember those two names, they'll come up a bit later. By far the most popularized

49
00:03:48,960 --> 00:03:53,200
example of a rational function that you might study like this, and the fractals that can ensue,

50
00:03:53,760 --> 00:04:00,320
is one of the simplest functions, z squared plus c, where c is some constant. I'm going to guess

51
00:04:00,320 --> 00:04:04,640
that this is at least somewhat familiar to many of you, but it certainly doesn't hurt to quickly

52
00:04:04,640 --> 00:04:10,080
summarize the story here, since it can help set the stage for what comes later. For this game,

53
00:04:10,080 --> 00:04:14,800
we're going to think of c as a value that can be changed, and it'll be visible as this moveable

54
00:04:14,800 --> 00:04:21,280
yellow dot. For the actual iterative process, we will always start with an initial value of z equals

55
00:04:21,280 --> 00:04:28,560
zero. So after iterating this function once, doing z squared plus c, you get c. If you iterate a

56
00:04:28,560 --> 00:04:34,480
second time, plugging in that value to the function, you get c squared plus c. And as I change

57
00:04:34,560 --> 00:04:40,320
around the value c here, you can kind of see how the second value moves in lockstep. Then we can

58
00:04:40,320 --> 00:04:45,520
plug in that second value to get z3, and that third value to get z4, and continue on like this,

59
00:04:45,520 --> 00:04:52,320
visualizing our chain of values. So if I keep doing this many different times for the first

60
00:04:52,320 --> 00:04:58,080
many values, for some choices of c, this process remains bounded. You can still see it all on the

61
00:04:58,080 --> 00:05:02,800
screen. And other times it looks like it blows up, and you can actually show that if it gets as big

62
00:05:02,800 --> 00:05:10,800
as two, it'll blow up to infinity. If you color the points of the plane where it stays bounded

63
00:05:10,800 --> 00:05:16,800
black, and you assign some other gradient of colors to the divergent values based on how quickly

64
00:05:16,800 --> 00:05:22,160
the process rushes off to infinity, you get one of the most iconic images in all of math,

65
00:05:22,160 --> 00:05:28,080
the Mandelbrot set. Now this interactive dots and stick visualization of the trajectory, by the way,

66
00:05:28,080 --> 00:05:32,160
is heavily inspired by Ben Spark's illustration and the Numberphile video he did about the

67
00:05:32,160 --> 00:05:36,320
Mandelbrot set, which is great, you should watch it. I honestly thought it was just too fun not to

68
00:05:36,320 --> 00:05:41,440
re-implement here. I would also highly recommend the interactive article on ako.net about all of

69
00:05:41,440 --> 00:05:45,680
this stuff for any of you who haven't had the pleasure of reading that yet. What's nice about

70
00:05:45,680 --> 00:05:50,320
the Ben Spark's illustration is how it illuminates what each different part of the Mandelbrot set

71
00:05:50,320 --> 00:05:56,400
actually represents. This largest cardioid section includes the values of c so that the process

72
00:05:56,400 --> 00:06:01,760
eventually converges to some limit. The big circle on the left represents the values where the

73
00:06:01,760 --> 00:06:06,560
process gets trapped in a cycle between two values, and then the top and bottom circles

74
00:06:06,560 --> 00:06:11,440
show values where the process gets trapped in a cycle of three values, and so on like this. Each

75
00:06:11,440 --> 00:06:18,240
one of these little islands kind of has its own meaning. Also notice there's an important difference

76
00:06:18,240 --> 00:06:22,400
between how this Mandelbrot set and the Newton fractals we were looking at before are each

77
00:06:22,400 --> 00:06:27,440
constructed, beyond just a different underlying function. For the Mandelbrot set we have a

78
00:06:27,440 --> 00:06:33,520
consistent seed value z equals zero, but the thing we're tweaking is the parameter c, changing the

79
00:06:33,520 --> 00:06:38,960
function itself. So what you're looking at is what we might call a parameter space. But with Newton's

80
00:06:38,960 --> 00:06:44,480
fractal we have a single unchanging function, but what we associate with each pixel is a different

81
00:06:44,480 --> 00:06:50,880
seed value for the process. Of course we could play the same game with the map z squared plus c,

82
00:06:50,880 --> 00:06:55,600
we could fix c at some constant, and then let the pixels represent the different possible initial

83
00:06:55,600 --> 00:07:01,120
values z naught. So whereas each pixel of the Mandelbrot set corresponds to a unique function,

84
00:07:01,120 --> 00:07:06,880
the images on the right each just correspond to a single function. As we change the parameter c,

85
00:07:06,880 --> 00:07:12,400
it changes the entire image on the right. And again just to be clear, the rule being applied

86
00:07:12,400 --> 00:07:17,200
is that we color pixels black if the process remains bounded, and then apply some kind of

87
00:07:17,200 --> 00:07:22,320
gradient to the ones that diverge away to infinity based on how quickly they diverge to infinity.

88
00:07:23,280 --> 00:07:27,760
In principle, and it's kind of mind-warping to think about, there is some four-dimensional space

89
00:07:27,760 --> 00:07:32,800
of all combinations of c and z naught, and what we're doing here is kind of looking through

90
00:07:32,800 --> 00:07:36,320
individual two-dimensional slices of that unimaginable pattern.

91
00:07:37,600 --> 00:07:43,600
You'll often hear or read the images on the right being referred to as Julia sets or Julia fractals,

92
00:07:43,600 --> 00:07:47,200
and when I first learned about all this stuff I'll admit that I kind of was left with the

93
00:07:47,200 --> 00:07:52,320
misconception that this is what the term Julia set refers to, specifically the z squared plus c

94
00:07:52,320 --> 00:07:57,040
case, and moreover that it's referring to the black region on the inside. However the term

95
00:07:57,040 --> 00:08:01,600
Julia set has a much more general definition, and it would refer just to the boundaries of these

96
00:08:01,600 --> 00:08:07,200
regions, not the interior. To set the stage for a more specific definition, and to also make some

97
00:08:07,200 --> 00:08:11,520
headway towards the first goal that I mentioned at the start, it's worth stepping back and really

98
00:08:11,520 --> 00:08:16,080
just picturing yourself as a mathematician right now, discovering all of this. What would you

99
00:08:16,080 --> 00:08:21,200
actually do to construct a theory around this? It's one thing to look at some pretty pictures,

100
00:08:21,200 --> 00:08:24,720
but what sorts of questions would you ask if you actually want to understand it all?

101
00:08:25,840 --> 00:08:30,080
In general, if you want to understand something complicated, a good place to start is to ask if

102
00:08:30,080 --> 00:08:34,720
there are any parts of the system that have some simple behavior, preferably the simplest possible

103
00:08:34,720 --> 00:08:40,400
behavior, and in our example that might mean asking when does the process just stay fixed in

104
00:08:40,400 --> 00:08:45,840
place, meaning f of z is equal to z. That's a pretty boring set of dynamics I think you'd agree.

105
00:08:46,400 --> 00:08:51,360
We call a value with this property a fixed point of the function. In the case of the functions

106
00:08:51,360 --> 00:08:56,560
arising from Newton's method, by design they have a fixed point at the roots of the relevant

107
00:08:56,560 --> 00:09:02,800
polynomial. You can verify for yourself, if p of z is equal to zero, then the entire expression

108
00:09:02,800 --> 00:09:07,600
is simply equal to z. That's what it means to be a fixed point. If you're into exercises,

109
00:09:07,600 --> 00:09:12,720
you may enjoy pausing for a moment and computing the fixed points of this Mandelbrot set function,

110
00:09:12,720 --> 00:09:20,480
z squared plus c. More generally, any rational function will always have fixed points,

111
00:09:20,480 --> 00:09:25,040
since asking when this expression equals z can always be rearranged as finding the roots of

112
00:09:25,040 --> 00:09:29,440
some polynomial expression, and from the fundamental theorem of algebra this must

113
00:09:29,440 --> 00:09:33,760
have solutions, typically as many solutions as the highest degree in this expression.

114
00:09:34,800 --> 00:09:39,600
Incidentally, this means that you could also find those fixed points using Newton's method,

115
00:09:39,760 --> 00:09:41,920
maybe that's a little too meta for us right now.

116
00:09:42,640 --> 00:09:46,720
Now just asking about fixed points is maybe easy, but a key idea for understanding the

117
00:09:46,720 --> 00:09:53,040
full dynamics, and hence the diagrams we're looking at, is to understand stability. We say

118
00:09:53,040 --> 00:09:58,800
that a fixed point is attracting if nearby points tend to get drawn in towards it, and repelling if

119
00:09:58,800 --> 00:10:04,080
they're pushed away. And this is something you can actually compute, explicitly, using the derivative

120
00:10:04,080 --> 00:10:09,680
of the function. Symbolically, when you take derivatives of complex functions, it looks exactly

121
00:10:09,680 --> 00:10:14,400
the same as it would for real functions, though something like z squared has a derivative of 2

122
00:10:14,400 --> 00:10:20,160
times z. But geometrically, there's a really lovely way to interpret what this means. For example,

123
00:10:20,160 --> 00:10:25,760
at the input 1, the derivative of this particular function evaluates to be 2, and what that's

124
00:10:25,760 --> 00:10:30,720
telling us is that if you look at a very small neighborhood around that input, and you follow

125
00:10:30,720 --> 00:10:34,720
what happens to all the points in that little neighborhood as you apply the function, in this

126
00:10:34,720 --> 00:10:40,880
case z squared, then it looks just like you're multiplying by 2. This is what a derivative of 2

127
00:10:40,880 --> 00:10:48,160
means. To take another example, let's look at the input i. We know that this function moves that

128
00:10:48,160 --> 00:10:54,000
input to the value negative 1, that's i squared. But the added information that its derivative at

129
00:10:54,000 --> 00:10:59,840
this value is 2 times i gives us the added picture that when you zoom in around that point, and you

130
00:10:59,840 --> 00:11:05,680
look at the action of the function on this tiny neighborhood, it looks like multiplication by 2i,

131
00:11:05,680 --> 00:11:10,240
which in this case is saying it looks like a 90 degree rotation combined with an expansion by a

132
00:11:10,240 --> 00:11:18,480
factor of 2. For the purposes of analyzing stability, the only thing we care about here

133
00:11:18,480 --> 00:11:23,360
is the growing and shrinking factor, the rotational part doesn't matter. So if you compute the

134
00:11:23,360 --> 00:11:29,120
derivative of a function at its fixed point, and the absolute value of this result is less than 1,

135
00:11:29,120 --> 00:11:33,680
it tells you that the fixed point is attracting, that nearby points tend to come in towards it.

136
00:11:34,320 --> 00:11:39,040
If that derivative has an absolute value bigger than 1, it tells you the fixed point is repelling,

137
00:11:39,040 --> 00:11:44,640
it pushes away its neighbors. For example, if you work out the derivative of our Newton's map

138
00:11:44,640 --> 00:11:49,040
expression, and you simplify a couple things a little bit, here's what you would get out.

139
00:11:50,320 --> 00:11:55,520
So if z is a fixed point, which in this context means that it's one of the roots of the polynomial

140
00:11:55,520 --> 00:12:01,920
p, this derivative is not only smaller than 1, it's equal to 0. These are sometimes called

141
00:12:01,920 --> 00:12:06,160
super-attracting fixed points, since it means that a neighborhood around these points doesn't merely

142
00:12:06,160 --> 00:12:12,880
shrink, it shrinks a lot. And again, this is kind of by design, since the intent of Newton's method

143
00:12:12,880 --> 00:12:18,880
is to produce iterations that fall towards a root as quickly as they can. Pulling up our z squared

144
00:12:18,880 --> 00:12:23,600
plus c example, if you did the first exercise to find its fixed points, the next step would be to

145
00:12:23,600 --> 00:12:29,600
ask, when is at least one of those fixed points attracting? For what values of c is this going to

146
00:12:29,600 --> 00:12:35,360
be true? And then, if that's not enough of a challenge, try using the result that you find

147
00:12:35,360 --> 00:12:40,480
to show that this condition corresponds to the main cardioid shape of the Mandelbrot set.

148
00:12:40,480 --> 00:12:42,960
This is something you can compute explicitly, it's pretty cool.

149
00:12:45,120 --> 00:12:49,360
A natural next step would be to ask about cycles, and this is where things really start to get

150
00:12:49,360 --> 00:12:56,400
interesting. If f of z is not z, but some other value, and then that value comes back to z, it

151
00:12:56,400 --> 00:13:01,920
means that you've fallen into a two cycle. You could explicitly find these kinds of two cycles

152
00:13:01,920 --> 00:13:09,280
by evaluating f of f of z, and then setting it equal to z. For example, with the z squared plus c map,

153
00:13:09,280 --> 00:13:15,360
f of f of z expands out to look like this. A little messy, but you know, it's not too terrible.

154
00:13:15,360 --> 00:13:19,360
The main thing to highlight is that it boils down to solving some degree four equation.

155
00:13:19,920 --> 00:13:23,920
You should note though that the fixed points will also be solutions to this equation,

156
00:13:23,920 --> 00:13:28,880
so technically the two cycles are the solutions to this minus the solutions to the original fixed

157
00:13:28,880 --> 00:13:35,280
point equation. And likewise, you can use the same idea to look for n cycles by composing f with

158
00:13:35,280 --> 00:13:41,760
itself n different times. The explicit expressions that you would get quickly become insanely messy,

159
00:13:41,760 --> 00:13:46,960
but it's still elucidating to ask how many cycles would you expect based on this hypothetical

160
00:13:46,960 --> 00:13:52,480
process. If we stick with our simple z squared plus c example, as you compose it with itself,

161
00:13:52,480 --> 00:13:57,680
you'd get a polynomial with degree four, and then one with degree eight, and then degree 16,

162
00:13:57,680 --> 00:14:03,200
and so on and so on, exponentially growing the order of the polynomial. So in principle,

163
00:14:03,200 --> 00:14:08,320
if I asked you how many cycles are there with a period of one million, you can know that it's

164
00:14:08,400 --> 00:14:13,520
equivalent to solving some just absolutely insane polynomial expression with a degree of two to the

165
00:14:13,520 --> 00:14:18,800
one million. So again, fundamental theorem of algebra, you would expect to find something on

166
00:14:18,800 --> 00:14:24,480
the order of two to the one million points in the complex plane, which cycle in exactly this way.

167
00:14:25,440 --> 00:14:30,320
And more generally, for any rational map, you'll always be able to find values whose behavior falls

168
00:14:30,320 --> 00:14:36,000
into a cycle with period n. It ultimately boils down to solving some probably insane polynomial

169
00:14:36,000 --> 00:14:41,440
expression. And just like with this example, the number of such periodic points will grow

170
00:14:41,440 --> 00:14:46,880
exponentially with n. I didn't really talk about this in the last video about Newton's fractal,

171
00:14:46,880 --> 00:14:51,200
but it's sort of strange to think that there are infinitely many points that fall into some kind

172
00:14:51,200 --> 00:14:56,960
of cycle even for a process like this. In almost all cases though, these points are somewhere on

173
00:14:56,960 --> 00:15:01,040
the boundary between those colored regions, and they don't really come up in practice because the

174
00:15:01,040 --> 00:15:06,240
probability of landing on one of them is zero. What matters for actually falling into one of

175
00:15:06,240 --> 00:15:11,360
these is if one of the cycles is attracting, in the sense that a neighborhood of points around

176
00:15:11,360 --> 00:15:17,840
a value from that cycle would tend to get pulled in towards that cycle. A highly relevant question

177
00:15:17,840 --> 00:15:22,960
for someone interested in numerical methods is whether or not this Newton's map process ever has

178
00:15:22,960 --> 00:15:27,760
an attracting cycle, because if there is, it means there's a non-zero chance that your initial guess

179
00:15:27,760 --> 00:15:33,600
gets trapped in that cycle and it never finds a root. The answer here is actually yes. More

180
00:15:33,600 --> 00:15:39,520
explicitly, if you try to find the roots of z cubed minus 2z plus 2, and you're using Newton's

181
00:15:39,520 --> 00:15:45,440
method, watch what happens to a small cluster that starts around the value zero. It sort of bounces

182
00:15:45,440 --> 00:15:50,240
back and forth. And well, okay, in this case the cluster we started with was a little bit too big,

183
00:15:50,240 --> 00:15:54,560
so some of the outer points get sprayed away. But here's what it looks like if we start with a

184
00:15:54,560 --> 00:16:00,160
smaller cluster. Notice how all of the points genuinely do shrink in towards the cycle between

185
00:16:00,160 --> 00:16:04,960
zero and one. It's not likely that you hit this with a random seed, but it definitely is possible.

186
00:16:05,920 --> 00:16:10,320
The exercise that you could do to verify that a cycle like this is attracting, by the way,

187
00:16:10,320 --> 00:16:16,320
would be to compute the derivative of f of f of z, and you check that at the input zero,

188
00:16:16,320 --> 00:16:21,200
this derivative has a magnitude less than one. The thing that blew my mind a little is what

189
00:16:21,200 --> 00:16:26,880
happens when you try to visualize which cubic polynomials have attracting cycles at all.

190
00:16:26,880 --> 00:16:32,000
Hopefully if Newton's method is going to be at all decent at finding roots, those attracting cycles

191
00:16:32,000 --> 00:16:37,680
should be rare. First of all, to better visualize the one example we're looking at, we could draw

192
00:16:37,680 --> 00:16:42,560
the same fractal that we had before, coloring each point based on what root the seed value starting at

193
00:16:42,560 --> 00:16:47,680
that point will tend to. But this time we'll have an added condition of coloring points that says

194
00:16:47,680 --> 00:16:52,480
that if the seed value never gets close enough to a root at all, we will color the pixel black.

195
00:16:53,600 --> 00:16:58,480
Notice if I tweak the roots, meaning that we're trying out different cubic polynomials,

196
00:16:58,480 --> 00:17:03,440
it's actually really hard to find any place to put them so that we see any black pixels at all.

197
00:17:04,000 --> 00:17:09,840
I can find this one little sweet spot here, but it's definitely rare. Now what I want is some kind

198
00:17:09,840 --> 00:17:15,840
of way to visualize every possible cubic polynomial at once with a single image in a way that shows

199
00:17:15,840 --> 00:17:21,360
which ones have attracting cycles. Luckily it turns out that there is a really simple way to

200
00:17:21,360 --> 00:17:26,480
test whether or not one of these polynomials has an attracting cycle. All you have to do is look

201
00:17:26,480 --> 00:17:32,400
at the seed value which sits at the average of the three roots, this center of mass here. Turns out,

202
00:17:32,400 --> 00:17:37,040
this is not at all obvious, if there's an attracting cycle you can guarantee that this

203
00:17:37,040 --> 00:17:43,040
seed value will fall into that attracting cycle. In other words, if there are any black points,

204
00:17:43,040 --> 00:17:48,080
this will be one of them. If you want to know where this magical fact comes from,

205
00:17:48,080 --> 00:17:53,520
it stems from a theorem of our good friend Fatou. He showed that if one of these rational maps has

206
00:17:53,520 --> 00:17:58,400
an attracting cycle, you can look at the values where the derivative of your iterated function

207
00:17:58,400 --> 00:18:04,080
equals zero, and at least one of those values has to fall into the cycle. That might seem like a

208
00:18:04,080 --> 00:18:09,440
little bit of a weird fact, but the loose intuition is that if a cycle is going to be attracting,

209
00:18:09,440 --> 00:18:13,920
at least one of its values should have a very small derivative, that's where the shrinking will

210
00:18:13,920 --> 00:18:19,200
come from. And this in turn means that that value in the cycle sits near some point where the

211
00:18:19,200 --> 00:18:24,160
derivative is not merely small but equal to zero, and that point ends up being close enough to get

212
00:18:24,160 --> 00:18:30,000
sucked into the cycle. This fact also justifies why with the Mandelbrot set, where we were only

213
00:18:30,000 --> 00:18:34,640
using one seed value z equals zero, it's still enough to get us a very full and interesting

214
00:18:34,640 --> 00:18:40,080
picture. If there's a stable cycle to be found, that one seed value is definitely going to find

215
00:18:40,080 --> 00:18:46,000
it. I feel like maybe I'm assigning a little too much homework and exercises today, but if you're

216
00:18:46,000 --> 00:18:50,560
into that, yet another pleasing one would be to look back at the derivative expression that we

217
00:18:50,560 --> 00:18:56,240
found with our function that arises from Newton's method, and use this wonderful theorem of Fatou's

218
00:18:56,240 --> 00:19:01,920
to show our magical fact about cubic polynomials, that it suffices to just check this midpoint of

219
00:19:01,920 --> 00:19:06,720
the roots. Honestly though, all of those are details that you don't really have to worry about.

220
00:19:06,720 --> 00:19:10,880
The upshot is that we can perform a test for whether or not one of these polynomials has an

221
00:19:10,880 --> 00:19:16,400
attracting cycle by looking at just a single point, not all of them. And because of this,

222
00:19:16,400 --> 00:19:21,120
we can actually generate a really cool diagram. The way this will work is to fix two roots in

223
00:19:21,120 --> 00:19:26,480
place, let's say putting them at z equals negative one and z equals positive one, and then we'll move

224
00:19:26,480 --> 00:19:32,720
around that third root, which I'll call lambda. Remember, the key feature that we're looking for

225
00:19:32,720 --> 00:19:38,400
is when the point at the center of mass is black. So what I'll do is draw a second diagram on the

226
00:19:38,400 --> 00:19:44,880
right where each pixel corresponds to one possible choice of lambda. What we're going to do is color

227
00:19:44,880 --> 00:19:50,480
that pixel based on the color of this midpoint of the three roots. If this feels a little bit

228
00:19:50,480 --> 00:19:55,520
confusing, that's totally okay, there are kind of a lot of layers at play here. Just remember,

229
00:19:55,520 --> 00:20:01,280
each pixel on the right corresponds to a unique polynomial as determined by this parameter lambda.

230
00:20:02,000 --> 00:20:05,600
In fact, you might call this a parameter space. Sound familiar?

231
00:20:13,840 --> 00:20:20,000
Points in this parameter space are colored black if, and only if, the Newton's method process for

232
00:20:20,000 --> 00:20:25,040
the corresponding polynomial produces an attracting cycle. Again, don't worry if that

233
00:20:25,120 --> 00:20:30,400
takes a little moment to digest. Now, at first glance, it might not look like there are any

234
00:20:30,400 --> 00:20:35,920
black points at all on this diagram, and this is good news. It means that in most cases Newton's

235
00:20:35,920 --> 00:20:41,200
method will not get sucked into cycles like this. But, and I think I've previewed this enough that

236
00:20:41,200 --> 00:20:46,800
you know exactly where this is going, if we zoom in we can find a black region, and that black region

237
00:20:46,800 --> 00:20:52,960
looks exactly like a Mandelbrot set. Yet again, asking a question where we tweak a parameter for

238
00:20:52,960 --> 00:20:59,440
one of these functions yields this iconic cardioid and bubbles shape. The upshot is that this shape

239
00:20:59,440 --> 00:21:04,560
is not as specific to the z squared plus c example as you might think. It seems to relate to something

240
00:21:04,560 --> 00:21:08,880
more general and universal about parameter spaces with processes like this.

241
00:21:11,680 --> 00:21:17,360
Still, one pressing question is why we get fractals at all. In the last video I talked about

242
00:21:17,360 --> 00:21:22,640
how the diagrams for Newton's method have this very peculiar property where if you draw a small

243
00:21:22,640 --> 00:21:28,160
circle around the boundary of a colored region, that circle must actually include all available

244
00:21:28,160 --> 00:21:33,360
colors from the picture. And this is true more generally for any rational map. If you were to

245
00:21:33,360 --> 00:21:38,720
assign colors to regions based on which limiting behavior points fall into, like which limit point,

246
00:21:38,720 --> 00:21:44,800
or which limit cycle, or does it tend to infinity, then tiny circles that you draw either contain

247
00:21:44,800 --> 00:21:50,000
points with just one of those limiting behaviors, or they contain points with all of them. It's

248
00:21:50,000 --> 00:21:55,440
never anything in between. So in the case where there's at least three colors, this property

249
00:21:55,440 --> 00:22:00,400
implies that our boundary could never be smooth, since along a smooth segment you can draw a small

250
00:22:00,400 --> 00:22:05,280
enough circle that touches just two colors, not all of them. And empirically this is what we see,

251
00:22:05,280 --> 00:22:10,400
no matter how far you zoom in these boundaries are always rough. And furthermore, you might notice

252
00:22:10,400 --> 00:22:17,280
that as we zoom in you can always see all available colors within the frame. This doesn't explain rough

253
00:22:17,280 --> 00:22:21,680
boundaries in the context where there's only two limiting behaviors, but still it's a loose end

254
00:22:21,680 --> 00:22:26,000
that I left in that video worth tying up, and it's a nice excuse to bring in two important bits of

255
00:22:26,000 --> 00:22:32,960
terminology, Julia sets and Fatou sets. If a point eventually falls into some stable predictable

256
00:22:32,960 --> 00:22:38,560
pattern, we say that it's part of the Fatou set of our iterated function. And for all the maps

257
00:22:38,560 --> 00:22:44,640
that we've seen, this includes almost everything. The Julia set is everything else, which in the

258
00:22:44,640 --> 00:22:49,920
pictures we've seen would be the rough boundaries between the colored regions, what happens as you

259
00:22:49,920 --> 00:22:55,440
transition from one stable attractor to another. For example, the Julia set will include all of the

260
00:22:55,440 --> 00:23:01,120
repelling cycles and the repelling fixed points. A typical point from the Julia set though will not

261
00:23:01,120 --> 00:23:06,480
be a cycle, it'll bounce around forever with no clear pattern. Now if you look at a point in the

262
00:23:06,480 --> 00:23:11,520
Fatou set and you draw a small enough disk around it, as you follow the process that small disk will

263
00:23:11,520 --> 00:23:16,800
eventually shrink as you fall into whatever the relevant stable behavior is. Unless you're going

264
00:23:16,800 --> 00:23:20,720
to infinity, but you could kind of think of that as the disk shrinking around infinity, but maybe

265
00:23:20,720 --> 00:23:28,240
that just confuses matters. By contrast, if you draw a small disk around a point on the Julia set,

266
00:23:28,240 --> 00:23:33,360
it tends to expand over time as the points from within that circle go off and kind of do their

267
00:23:33,360 --> 00:23:40,560
own things. In other words, points of the Julia set tend to behave chaotically. Their nearby

268
00:23:40,560 --> 00:23:45,280
neighbors, even very nearby, will eventually fall into qualitatively different behaviors.

269
00:23:46,320 --> 00:23:51,920
But it's not merely that this disk expands. A pretty surprising result, key to the multicolor

270
00:23:51,920 --> 00:23:56,720
property mentioned before, is that if you let this process play out, that little disk eventually

271
00:23:56,720 --> 00:24:02,480
expands so much that it hits every single point on the complex plane, with at most two exceptions.

272
00:24:03,360 --> 00:24:06,800
This is known as the stuff-goes-everywhere principle of Julia sets.

273
00:24:07,760 --> 00:24:12,080
Okay, it's not actually called that. In the source I was reading from, it's mentioned as a corollary

274
00:24:12,080 --> 00:24:16,880
to something known as Montel's theorem. But it should be called that. In some sense, what this

275
00:24:16,880 --> 00:24:22,480
is telling us is that the points of the Julia set are not merely chaotic, they're kind of as chaotic

276
00:24:22,480 --> 00:24:28,880
as they possibly can be. Here, let me show you a little simulation using the Newton's map, with

277
00:24:28,880 --> 00:24:34,320
a cluster of a few thousand points all starting from within a tiny tiny distance, 1 one millionth,

278
00:24:34,320 --> 00:24:45,760
from a point on the Julia set. Of course, the stuff-goes-everywhere principle is about

279
00:24:45,760 --> 00:24:49,760
the uncountably infinitely many points that would lie within that distance, and that they

280
00:24:49,760 --> 00:24:54,640
eventually expand out to hit everything on the plane, except possibly two points. But this little

281
00:24:54,640 --> 00:24:59,680
cluster should still give the general idea. A small finite sample from that tiny disk gets

282
00:24:59,680 --> 00:25:05,840
sprayed all over the place in seemingly all directions. What this means for our purposes

283
00:25:05,840 --> 00:25:10,240
is that if there's some attractive behavior of our map, something like an attracting fixed point

284
00:25:10,240 --> 00:25:14,800
or an attracting cycle, you can be guaranteed that the values from that tiny disk around the

285
00:25:14,800 --> 00:25:20,080
point on the Julia set, no matter how tiny it was, will eventually fall into that attracting behavior.

286
00:25:20,800 --> 00:25:25,520
If we have a case with three or more attracting behaviors, this gives us some explanation for why

287
00:25:25,600 --> 00:25:30,960
the Julia set is not smooth, why it has to be complicated. Even still, this might not be

288
00:25:30,960 --> 00:25:35,600
entirely satisfying because it kicks the can one more step down the road, raising the question of

289
00:25:35,600 --> 00:25:40,160
why this stuff-goes-everywhere principle is true in the first place. Like I mentioned, it comes

290
00:25:40,160 --> 00:25:44,800
from something called Montel's theorem, and I'm choosing not to go into the details there, because

291
00:25:44,800 --> 00:25:49,280
honestly it's a lot to cover. The proof I could find ends up leaning on something known as the

292
00:25:49,280 --> 00:25:53,760
J function, which is a whole intricate story in its own right. I will of course leave links

293
00:25:53,760 --> 00:25:58,320
and resources in the description for any of you who are hungry to learn more, and if you know of

294
00:25:58,320 --> 00:26:03,280
a simpler way to see why this principle is true, I'm definitely all ears. I should also say as a

295
00:26:03,280 --> 00:26:08,000
brief side note that even though the pictures we've seen so far have a Julia set which has an area of

296
00:26:08,000 --> 00:26:12,560
zero, it's kind of the boundary between these regions, there are examples where the Julia set

297
00:26:12,560 --> 00:26:19,520
is the entire plane, everything behaves chaotically, which is kind of wild. The main takeaway for this

298
00:26:19,520 --> 00:26:25,120
particular section is the link between the chaos and the fractal. At first it seems like these are

299
00:26:25,120 --> 00:26:29,680
merely analogous to each other, you know, Newton's method turns out to be a kind of messy process for

300
00:26:29,680 --> 00:26:34,960
some seed values, and this messiness is visible one way by following the trajectory of a particular

301
00:26:34,960 --> 00:26:40,480
point, and another way by the complexity of our diagrams, but those feel like qualitatively

302
00:26:40,480 --> 00:26:45,920
different kinds of messiness. Maybe it makes for a nice metaphor, but nothing more. However, what's

303
00:26:45,920 --> 00:26:50,640
neat here is that when you quantify just how chaotic some of the points are, well, that

304
00:26:50,640 --> 00:26:56,080
quantification leads us to an actual explanation for the rough fractal shape via this boundary

305
00:26:56,080 --> 00:27:02,080
property. Quite often you see chaos and fractals sort of married together in math, and to me at

306
00:27:02,080 --> 00:27:06,960
least it's satisfying whenever that marriage comes with a logical link to it, rather than as two

307
00:27:06,960 --> 00:27:09,760
phenomena that just happen to coincide.

