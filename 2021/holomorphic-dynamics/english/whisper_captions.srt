1
00:00:00,000 --> 00:00:03,780
Today I'd like to tell you about a piece of math known as holomorphic dynamics.

2
00:00:04,440 --> 00:00:08,180
This is the field which studies things like the Mandelbrot set, and in fact one of my

3
00:00:08,180 --> 00:00:12,480
main goals today is to show you how this iconic shape, the poster child of math,

4
00:00:12,740 --> 00:00:16,660
pops up in a more general way than the initial definition might suggest.

5
00:00:17,380 --> 00:00:21,020
Now this field is also intimately tied to what we talked about in the last video,

6
00:00:21,300 --> 00:00:25,120
with Newton's fractal, and another goal of ours towards the end of this video

7
00:00:25,120 --> 00:00:28,060
will be to help tie up some of the loose ends that we had there.

8
00:00:34,600 --> 00:00:39,260
So first of all, this word holomorphic might seem a little weird. It refers to functions that have

9
00:00:39,260 --> 00:00:44,620
complex number inputs and complex number outputs, and which you can also take a derivative of.

10
00:00:45,180 --> 00:00:49,380
Basically what it means to have a derivative in this context is that when you zoom in to how the

11
00:00:49,380 --> 00:00:54,720
function behaves near a given point, to the point and its neighbors, it looks roughly like scaling

12
00:00:54,720 --> 00:00:59,600
and rotating, like multiplying by some complex constant. We'll talk more about that in just a

13
00:00:59,600 --> 00:01:03,560
bit, but for now know that it includes most of the ordinary functions you could write down,

14
00:01:03,700 --> 00:01:06,740
things like polynomials, exponentials, trig functions, all of that.

15
00:01:07,380 --> 00:01:12,340
The relevant dynamics in the title here comes from asking what happens when you repeatedly

16
00:01:12,340 --> 00:01:17,160
apply one of these functions over and over, in the sense of evaluating on some input,

17
00:01:17,680 --> 00:01:22,740
then evaluating the same function on whatever you just got out, and then doing that again,

18
00:01:23,580 --> 00:01:29,040
and again and again and again. Sometimes the pattern of points emerging from this

19
00:01:29,040 --> 00:01:34,700
gets trapped in a cycle, other times the sequence will just approach some kind of limiting point.

20
00:01:35,740 --> 00:01:39,180
Or maybe the sequence gets bigger and bigger and it flies off to infinity,

21
00:01:39,960 --> 00:01:43,420
which mathematicians also kind of think of as approaching a limit point, just the point at

22
00:01:43,420 --> 00:01:48,860
infinity. And other times still they have no pattern at all, and they behave chaotically.

23
00:01:50,520 --> 00:01:54,080
What's surprising is that for all sorts of functions that you might write down,

24
00:01:54,080 --> 00:01:58,820
when you try to do something to visualize when these different possible behaviors arise,

25
00:01:59,140 --> 00:02:02,280
it often results in some insanely intricate fractal pattern.

26
00:02:03,540 --> 00:02:06,900
Those of you who watched the last video have already seen one neat example of this.

27
00:02:07,400 --> 00:02:11,500
There's this algorithm called Newton's method, which finds the root of some polynomial p,

28
00:02:12,000 --> 00:02:14,880
and the way it works is to basically repeatedly iterate the expression

29
00:02:14,880 --> 00:02:19,120
x minus p of x divided by p prime of x, p prime being the derivative.

30
00:02:19,820 --> 00:02:24,160
When your initial seed value is in the loose vicinity of a root to that polynomial,

31
00:02:24,300 --> 00:02:29,260
a value where p of x equals zero, this procedure produces a sequence of values that really quickly

32
00:02:29,260 --> 00:02:34,100
converges to that root. This is what makes it a useful algorithm in practice. But then we tried

33
00:02:34,100 --> 00:02:39,500
to do this in the complex plane, looking at the many possible seed values and asking which root

34
00:02:39,500 --> 00:02:44,860
in the complex plane each one of these seed values might end up on. Then we associated a color with

35
00:02:44,860 --> 00:02:50,420
one of the roots, and then colored each pixel of the plane based on which root a seed value starting

36
00:02:50,420 --> 00:02:55,040
at that pixel would ultimately land on. The results we got were some of these

37
00:02:55,040 --> 00:02:59,320
insanely intricate pictures, with these rough fractal boundaries between the colors.

38
00:03:02,080 --> 00:03:05,500
Now in this example, if you look at the function that we're actually iterating,

39
00:03:05,880 --> 00:03:09,480
say for some specific choice of a polynomial, like z cubed minus one,

40
00:03:09,900 --> 00:03:14,120
you can rewrite the whole expression to look like one polynomial divided by another.

41
00:03:15,020 --> 00:03:19,660
Mathematicians call these kinds of functions rational functions. And if you forget the fact

42
00:03:19,660 --> 00:03:24,280
that this arose from Newton's method, you could reasonably ask what happens when you iterate any

43
00:03:24,280 --> 00:03:29,020
other rational function. And in fact, this is exactly what the mathematicians Pierre Fatou

44
00:03:29,020 --> 00:03:33,900
and Gaston Julia did in the years immediately following World War I. And they built up a

45
00:03:33,900 --> 00:03:37,680
surprisingly rich theory of what happens when you iterate these rational functions,

46
00:03:38,180 --> 00:03:43,060
which is particularly impressive given that they had no computers to visualize any of this the way

47
00:03:43,060 --> 00:03:46,380
you and I can. Remember those two names, they'll come up a bit later.

48
00:03:47,160 --> 00:03:51,780
By far the most popularized example of a rational function that you might study like this,

49
00:03:51,960 --> 00:03:56,720
and the fractals that can ensue, is one of the simplest functions, z squared plus c,

50
00:03:57,260 --> 00:04:03,000
where c is some constant. I'm going to guess that this is at least somewhat familiar to many of you,

51
00:04:03,080 --> 00:04:07,420
but it certainly doesn't hurt to quickly summarize the story here, since it can help set the stage

52
00:04:07,420 --> 00:04:12,680
for what comes later. For this game, we're going to think of c as a value that can be changed.

53
00:04:12,680 --> 00:04:18,880
It'll be visible as this movable yellow dot. For the actual iterative process, we will always

54
00:04:18,880 --> 00:04:25,240
start with an initial value of z equals zero. So after iterating this function once, doing z

55
00:04:25,240 --> 00:04:31,240
squared plus c, you get c. If you iterate a second time, plugging in that value to the function,

56
00:04:31,520 --> 00:04:42,660
you get c squared plus c. And as I change around the value c here, you can kind of see how the

57
00:04:42,660 --> 00:04:47,400
third value to get z4 and continue on like this, visualizing our chain of values.

58
00:04:49,920 --> 00:04:54,800
So if I keep doing this many different times for the first many values, for some choices of c,

59
00:04:55,260 --> 00:04:59,660
this process remains bounded. You can still see it all on the screen. And other times,

60
00:04:59,780 --> 00:05:03,260
it looks like it blows up, and you can actually show that if it gets as big as 2,

61
00:05:03,420 --> 00:05:11,260
it'll blow up to infinity. If you color the points of the plane where it stays bounded black,

62
00:05:11,260 --> 00:05:16,680
and you assign some other gradient of colors to the divergent values based on how quickly

63
00:05:16,680 --> 00:05:21,980
the process rushes off to infinity, you get one of the most iconic images in all of math,

64
00:05:22,420 --> 00:05:27,940
the Mandelbrot set. Now this interactive dots and stick visualization of the trajectory, by the way,

65
00:05:28,020 --> 00:05:32,400
is heavily inspired by Ben Sparks' illustration and the Numberphile video he did about the

66
00:05:32,400 --> 00:05:40,600
Mandelbrot set, which is great, you should watch it. I honestly thought it was just too fun not to

67
00:05:40,600 --> 00:05:44,640
read about all of this stuff for any of you who haven't had the pleasure of reading that yet.

68
00:05:45,240 --> 00:05:49,300
What's nice about the Ben Sparks illustration is how it illuminates what each different part

69
00:05:49,300 --> 00:05:55,340
of the Mandelbrot set actually represents. This largest cardioid section includes the values of c

70
00:05:55,340 --> 00:06:01,140
so that the process eventually converges to some limit. The big circle on the left represents the

71
00:06:01,140 --> 00:06:06,240
values where the process gets trapped in a cycle between two values. And then the top and bottom

72
00:06:06,240 --> 00:06:09,780
circles show values where the process gets trapped in a cycle of three values,

73
00:06:10,040 --> 00:06:13,720
and so on like this. Each one of these little islands kind of has its own meaning.

74
00:06:16,400 --> 00:06:20,720
Also notice there's an important difference between how this Mandelbrot set and the Newton

75
00:06:20,720 --> 00:06:24,940
fractals we were looking at before are each constructed, beyond just a different underlying

76
00:06:24,940 --> 00:06:30,520
function. For the Mandelbrot set we have a consistent seed value, z equals zero, but the

77
00:06:30,520 --> 00:06:35,700
thing we're tweaking is the parameter c, changing the function itself. So what you're looking at is

78
00:06:35,700 --> 00:06:42,580
a parameter space. But with Newton's fractal, we have a single unchanging function, but what

79
00:06:42,580 --> 00:06:48,180
we associate with each pixel is a different seed value for the process. Of course, we could play

80
00:06:48,180 --> 00:06:53,620
the same game with the map z squared plus c. We could fix c at some constant, and then let the

81
00:06:53,620 --> 00:06:58,840
pixels represent the different possible initial values, z naught. So whereas each pixel of the

82
00:06:58,840 --> 00:07:03,700
Mandelbrot set corresponds to a unique function, the images on the right each just correspond to

83
00:07:03,700 --> 00:07:09,220
a single function. As we change the parameter c, it changes the entire image on the right.

84
00:07:10,020 --> 00:07:14,620
And again, just to be clear, the rule being applied is that we color pixels black if the

85
00:07:14,620 --> 00:07:19,340
process remains bounded, and then apply some kind of gradient to the ones that diverge away to

86
00:07:19,340 --> 00:07:24,600
infinity based on how quickly they diverge to infinity. In principle, and it's kind of

87
00:07:24,600 --> 00:07:29,220
mind-warping to think about, there is some four-dimensional space of all combinations of

88
00:07:29,220 --> 00:07:34,040
c and z naught, and what we're doing here is kind of looking through individual two-dimensional

89
00:07:34,040 --> 00:07:40,220
slices of that unimaginable pattern. You'll often hear or read the images on the right being

90
00:07:40,220 --> 00:07:45,540
referred to as Julia sets or Julia fractals, and when I first learned about all this stuff,

91
00:07:45,620 --> 00:07:49,500
I'll admit that I kind of was left with the misconception that this is what the term Julia

92
00:07:49,500 --> 00:07:54,500
set refers to, specifically the z squared plus c case, and moreover that it's referring to the

93
00:07:54,500 --> 00:07:59,200
black region on the inside. However, the term Julia set has a much more general definition,

94
00:07:59,700 --> 00:08:05,000
and it would refer just to the boundaries of these regions, not the interior. To set the stage for a

95
00:08:05,000 --> 00:08:08,980
more specific definition, and to also make some headway towards the first goal that I mentioned

96
00:08:08,980 --> 00:08:13,620
at the start, it's worth stepping back and really just picturing yourself as a mathematician right

97
00:08:13,620 --> 00:08:18,880
now, discovering all of this. What would you actually do to construct a theory around this?

98
00:08:19,260 --> 00:08:23,460
It's one thing to look at some pretty pictures, but what sorts of questions would you ask if you

99
00:08:23,460 --> 00:08:29,180
understand it all? In general, if you want to understand something complicated, a good place

100
00:08:29,180 --> 00:08:33,760
to start is to ask if there are any parts of the system that have some simple behavior, preferably

101
00:08:33,760 --> 00:08:39,120
the simplest possible behavior. In our example, that might mean asking when does the process

102
00:08:39,120 --> 00:08:45,160
just stay fixed in place, meaning f of z is equal to z. That's a pretty boring set of dynamics,

103
00:08:45,240 --> 00:08:49,680
I think you'd agree. We call a value with this property a fixed point of the function.

104
00:08:49,680 --> 00:08:55,720
In the case of the functions arising from Newton's method, by design they have a fixed point at the

105
00:08:55,720 --> 00:09:01,580
roots of the relevant polynomial. You can verify for yourself, if p of z is equal to zero, then

106
00:09:01,580 --> 00:09:06,980
the entire expression is simply equal to z. That's what it means to be a fixed point. If you're into

107
00:09:06,980 --> 00:09:19,660
exercises, you may enjoy pausing for a moment and computing the fixed points of this Mandelbrot set

108
00:09:19,660 --> 00:09:25,140
since asking when this expression equals z can always be rearranged as finding the roots of

109
00:09:25,140 --> 00:09:30,320
some polynomial expression. From the fundamental theorem of algebra, this must have solutions,

110
00:09:30,700 --> 00:09:36,540
typically as many solutions as the highest degree in this expression. Incidentally, this means you

111
00:09:36,540 --> 00:09:41,600
could also find those fixed points using Newton's method, but maybe that's a little too meta for us.

112
00:09:42,640 --> 00:09:47,540
Just asking about fixed points is easy, but a key idea for understanding the full dynamics,

113
00:09:47,540 --> 00:09:53,620
and hence the diagrams that we're looking at, is to understand stability. We say that a fixed

114
00:09:53,620 --> 00:09:59,180
point is attracting if nearby points tend to get drawn in towards it, and repelling if they're

115
00:09:59,180 --> 00:10:04,080
pushed away. And this is something that you can actually compute explicitly using the derivative

116
00:10:04,080 --> 00:10:09,720
of the function. Symbolically, when you take derivatives of complex functions, it looks exactly

117
00:10:09,720 --> 00:10:14,500
the same as it would for real functions, though something like z squared has a derivative of 2

118
00:10:14,500 --> 00:10:19,020
times z. But geometrically, there's a really lovely way to interpret what this means.

119
00:10:19,740 --> 00:10:24,660
For example, at the input 1, the derivative of this particular function evaluates to be 2,

120
00:10:25,320 --> 00:10:29,820
and what that's telling us is that if you look at a very small neighborhood around that input,

121
00:10:30,300 --> 00:10:34,340
and you follow what happens to all the points in that little neighborhood as you apply the function,

122
00:10:34,640 --> 00:10:40,320
in this case z squared, then it looks just like you're multiplying by 2. This is what a derivative

123
00:10:40,320 --> 00:10:48,000
of 2 means. To take another example, let's look at the input i. We know that this function moves

124
00:10:48,000 --> 00:10:53,340
that input to the value negative 1, that's i squared. But the added information that its

125
00:10:53,340 --> 00:10:59,080
derivative at this value is 2 times i gives us the added picture that when you zoom in around

126
00:10:59,080 --> 00:11:03,440
that point, and you look at the action of the function on this tiny neighborhood, it looks

127
00:11:03,440 --> 00:11:08,980
like multiplication by 2i, which in this case is saying it looks like a 90 degree rotation combined

128
00:11:08,980 --> 00:11:17,680
with an expansion by a factor of 2. For the purposes of analyzing stability, the only thing

129
00:11:17,680 --> 00:11:22,040
we care about here is the growing and shrinking factor. The rotational part doesn't matter.

130
00:11:22,520 --> 00:11:27,560
So if you compute the derivative of a function at its fixed point, and the absolute value of this

131
00:11:27,560 --> 00:11:32,960
result is less than 1, it tells you that the fixed point is attracting, that nearby points tend to

132
00:11:32,960 --> 00:11:37,860
come in towards it. If that derivative has an absolute value bigger than 1, it tells you the

133
00:11:37,860 --> 00:11:42,940
fixed point is repelling, it pushes away its neighbors. For example, if you work out the

134
00:11:42,940 --> 00:11:48,440
derivative of our Newton's map expression, and you simplify a couple things a little bit, here's what

135
00:11:48,440 --> 00:11:54,620
you would get out. So if z is a fixed point, which in this context means that it's one of the roots

136
00:11:54,620 --> 00:12:01,460
of the polynomial p, this derivative is not only smaller than 1, it's equal to 0. These are sometimes

137
00:12:01,460 --> 00:12:05,500
called super-attracting fixed points, since it means that a neighborhood around these points

138
00:12:05,500 --> 00:12:12,020
doesn't merely shrink, it shrinks a lot. And again, this is kind of by design, since the intent of

139
00:12:12,020 --> 00:12:17,020
Newton's method is to produce iterations that fall towards a root as quickly as they can.

140
00:12:18,020 --> 00:12:22,340
Pulling up our z squared plus c example, if you did the first exercise to find its fixed points,

141
00:12:22,680 --> 00:12:28,140
the next step would be to ask, when is at least one of those fixed points attracting? For what

142
00:12:28,140 --> 00:12:34,240
values of c is this going to be true? And then, if that's not enough of a challenge, try using the

143
00:12:34,240 --> 00:12:39,400
result that you find to show that this condition corresponds to the main cardioid shape of the

144
00:12:39,400 --> 00:12:43,400
Mandelbrot set. This is something you can compute explicitly, it's pretty cool.

145
00:12:45,320 --> 00:12:49,460
A natural next step would be to ask about cycles, and this is where things really start to get

146
00:12:49,460 --> 00:12:56,560
interesting. If f of z is not z but some other value, and then that value comes back to z, it

147
00:12:56,560 --> 00:13:01,940
means that you've fallen into a two cycle. You could explicitly find these kinds of two cycles

148
00:13:01,940 --> 00:13:08,520
by evaluating f of f of z and then setting it equal to z. For example, with the z squared plus

149
00:13:08,520 --> 00:13:15,080
c map, f of f of z expands out to look like this. A little messy, but you know, it's not too terrible.

150
00:13:15,560 --> 00:13:19,380
The main thing to highlight is that it boils down to solving some degree four equation.

151
00:13:20,160 --> 00:13:23,660
You should note though that the fixed points will also be solutions to this equation,

152
00:13:24,020 --> 00:13:29,000
so technically the two cycles are the solutions to this minus the solutions to the original fixed

153
00:13:29,000 --> 00:13:35,360
point equation. And likewise you can use the same idea to look for n cycles by composing f with

154
00:13:35,360 --> 00:13:41,480
itself n different times. The explicit expressions that you would get quickly become insanely messy,

155
00:13:41,480 --> 00:13:47,420
but it's still elucidating to ask how many cycles would you expect based on this hypothetical process.

156
00:13:47,960 --> 00:13:52,960
If we stick with our simple z squared plus c example, as you compose it with itself, you'd get

157
00:13:52,960 --> 00:13:58,300
a polynomial with degree four and then one with degree eight and then degree sixteen and so on

158
00:13:58,300 --> 00:14:04,280
and so on, exponentially growing the order of the polynomial. So in principle, if I asked you how

159
00:14:04,280 --> 00:14:09,600
many cycles are there with a period of one million, you can know that it's equivalent to solving some

160
00:14:09,600 --> 00:14:14,080
just absolutely insane polynomial expression with a degree of two to the one million.

161
00:14:14,880 --> 00:14:19,780
So again, fundamental theorem of algebra, you would expect to find something on the order of

162
00:14:19,780 --> 00:14:25,880
two to the one million points in the complex plane which cycle in exactly this way. And more

163
00:14:25,880 --> 00:14:30,780
generally, for any rational map you'll always be able to find values whose behavior falls into a

164
00:14:30,780 --> 00:14:36,480
cycle with period n. It ultimately boils down to solving some probably insane polynomial expression.

165
00:14:37,180 --> 00:14:42,680
And just like with this example, the number of such periodic points will grow exponentially with n.

166
00:14:43,980 --> 00:14:47,900
I didn't really talk about this in the last video about Newton's fractal, but it's sort of strange

167
00:14:47,900 --> 00:14:52,440
to think that there are infinitely many points that fall into some kind of cycle even for a

168
00:14:52,440 --> 00:14:57,920
process like this. In almost all cases though, these points are somewhere on the boundary between

169
00:14:57,920 --> 00:15:02,080
those colored regions and they don't really come up in practice because the probability of landing

170
00:15:02,080 --> 00:15:07,900
on one of them is zero. What matters for actually falling into one of these is if one of the cycles

171
00:15:07,900 --> 00:15:13,180
is attracting in the sense that a neighborhood of points around a value from that cycle would tend

172
00:15:13,180 --> 00:15:18,940
to get pulled in towards that cycle. A highly relevant question for someone interested in

173
00:15:18,940 --> 00:15:24,660
numerical methods is whether or not this Newton's map process ever has an attracting cycle, because

174
00:15:24,660 --> 00:15:28,980
if there is it means there's a non-zero chance that your initial guess gets trapped in that cycle

175
00:15:28,980 --> 00:15:35,220
and it never finds a root. The answer here is actually yes. More explicitly, if you try to find

176
00:15:35,220 --> 00:15:41,480
the roots of z cubed minus 2z plus 2 and you're using Newton's method, watch what happens to a

177
00:15:41,480 --> 00:15:47,900
cluster that starts around the value zero and sort of bounces back and forth. And well okay,

178
00:15:47,960 --> 00:15:51,620
in this case the cluster we started with was a little bit too big so some of the outer points

179
00:15:51,620 --> 00:15:56,860
get sprayed away, but here's what it looks like if we start with a smaller cluster. Notice how all of

180
00:15:56,860 --> 00:16:02,300
the points genuinely do shrink in towards the cycle between zero and one. It's not likely that

181
00:16:02,300 --> 00:16:07,440
you hit this with a random seed, but it definitely is possible. The exercise that you could do to

182
00:16:07,440 --> 00:16:12,580
verify that a cycle like this is attracting, by the way, would be to compute the derivative of

183
00:16:12,580 --> 00:16:18,760
f of f of z, and you check that at the input zero this derivative has a magnitude less than one.

184
00:16:19,760 --> 00:16:22,840
The thing that blew my mind a little is what happens when you try to visualize

185
00:16:22,840 --> 00:16:28,940
which cubic polynomials have attracting cycles at all. Hopefully if Newton's method is going to be

186
00:16:28,940 --> 00:16:34,860
at all decent at finding roots, those attracting cycles should be rare. First of all, to better

187
00:16:34,860 --> 00:16:39,380
visualize the one example we're looking at, we could draw the same fractal that we had before,

188
00:16:39,640 --> 00:16:43,760
coloring each point based on what root the seed value starting at that point will tend to,

189
00:16:44,000 --> 00:16:48,760
but this time we'll have an added condition of coloring points that says that if the seed value

190
00:16:48,760 --> 00:16:55,440
never gets close enough to a root at all, we will color the pixel black. Notice if I tweak the roots,

191
00:16:55,520 --> 00:17:00,660
meaning that we're trying out different cubic polynomials, it's actually really hard to find

192
00:17:00,660 --> 00:17:05,500
any place to put them so that we see any black pixels at all. I can find this one little sweet

193
00:17:05,500 --> 00:17:11,460
spot here, but it's definitely rare. Now what I want is some kind of way to visualize every

194
00:17:11,460 --> 00:17:17,180
possible cubic polynomial at once with a single image in a way that shows which ones have attracting

195
00:17:17,180 --> 00:17:22,560
cycles. Luckily it turns out that there is a really simple way to test whether or not one of

196
00:17:22,560 --> 00:17:28,260
these polynomials has an attracting cycle. All you have to do is look at the seed value which sits at

197
00:17:28,260 --> 00:17:33,660
average of the three roots, this center of mass here. Turns out, this is not at all obvious,

198
00:17:33,860 --> 00:17:39,260
if there's an attracting cycle, you can guarantee that this seed value will fall into that attracting

199
00:17:39,260 --> 00:17:45,920
cycle. In other words, if there are any black points, this will be one of them. If you want to

200
00:17:45,920 --> 00:17:51,420
know where this magical fact comes from, it stems from a theorem of our good friend Fatou. He showed

201
00:17:51,420 --> 00:17:56,060
that if one of these rational maps has an attracting cycle, you can look at the values

202
00:17:56,060 --> 00:18:01,020
where the derivative of your iterated function equals zero, and at least one of those values

203
00:18:01,020 --> 00:18:06,620
has to fall into the cycle. That might seem like a little bit of a weird fact, but the loose intuition

204
00:18:06,620 --> 00:18:12,060
is that if a cycle is going to be attracting, at least one of its values should have a very small

205
00:18:12,060 --> 00:18:17,060
derivative, that's where the shrinking will come from. And this in turn means that that value in

206
00:18:17,060 --> 00:18:22,720
the cycle sits near some point where the derivative is not merely small but equal to zero, and that

207
00:18:22,720 --> 00:18:28,040
point ends up being close enough to get sucked into the cycle. This fact also justifies why

208
00:18:28,040 --> 00:18:33,100
with the Mandelbrot set, where we're only using one seed value z equals zero, it's still enough

209
00:18:33,100 --> 00:18:38,640
to get us a very full and interesting picture. If there's a stable cycle to be found, that one seed

210
00:18:38,640 --> 00:18:44,060
value is definitely going to find it. I feel like maybe I'm assigning a little too much homework and

211
00:18:44,060 --> 00:18:49,400
exercises today, but if you're into that, yet another pleasing one would be to look back at

212
00:18:49,400 --> 00:18:53,160
derivative expression that we found with our function that arises from Newton's method,

213
00:18:53,420 --> 00:18:58,960
and use this wonderful theorem of Vateau's to show our magical fact about cubic polynomials,

214
00:18:59,420 --> 00:19:04,560
that it suffices to just check this midpoint over the roots. Honestly though, all of those are

215
00:19:04,560 --> 00:19:09,040
details that you don't really have to worry about. The upshot is that we can perform a test for

216
00:19:09,040 --> 00:19:13,860
whether or not one of these polynomials has an attracting cycle by looking at just a single point,

217
00:19:13,860 --> 00:19:18,600
not all of them. And because of this, we can actually generate a really cool diagram.

218
00:19:19,380 --> 00:19:23,380
The way this will work is to fix two roots in place, let's say putting them at z equals negative

219
00:19:23,380 --> 00:19:29,040
one and z equals positive one, and then we'll move around that third root, which I'll call lambda.

220
00:19:30,480 --> 00:19:35,160
Remember, the key feature that we're looking for is when the point at the center of mass is black.

221
00:19:35,860 --> 00:19:41,540
So what I'll do is draw a second diagram on the right, where each pixel corresponds to one

222
00:19:41,540 --> 00:19:47,380
possible choice of lambda. What we're going to do is color that pixel based on the color of this

223
00:19:47,380 --> 00:19:52,480
midpoint of the three roots. If this feels a little bit confusing, that's totally okay. There

224
00:19:52,480 --> 00:19:57,660
are kind of a lot of layers at play here. Just remember, each pixel on the right corresponds to

225
00:19:57,660 --> 00:20:03,580
a unique polynomial, as determined by this parameter lambda. In fact, you might call this

226
00:20:03,580 --> 00:20:17,920
a parameter space. Sound familiar? Points in this parameter space are colored black if, and only if,

227
00:20:18,280 --> 00:20:24,400
the Newton's method process for the corresponding polynomial produces an attracting cycle. Again,

228
00:20:24,740 --> 00:20:29,800
don't worry if that takes a little moment to digest. Now, at first glance, it might not look

229
00:20:29,800 --> 00:20:34,600
like there are any black points at all on this diagram. And this is good news. It means that in

230
00:20:34,600 --> 00:20:40,460
most cases Newton's method will not get sucked into cycles like this. But, and I think I've

231
00:20:40,460 --> 00:20:45,200
previewed this enough that you know exactly where this is going, if we zoom in we can find a black

232
00:20:45,200 --> 00:20:51,580
region, and that black region looks exactly like a Mandelbrot set. Yet again, asking a question

233
00:20:51,580 --> 00:20:56,740
where we tweak a parameter for one of these functions yields this iconic cardioid and bubbles

234
00:20:56,740 --> 00:21:02,380
shape. The upshot is that this shape is not as specific to the z squared plus c example as you

235
00:21:02,380 --> 00:21:08,000
might think. It seems to relate to something more general and universal about parameter spaces with

236
00:21:08,000 --> 00:21:16,880
processes like this. Still, one pressing question is why we get fractals at all. In the last video,

237
00:21:17,040 --> 00:21:20,880
I talked about how the diagrams for Newton's method have this very peculiar property,

238
00:21:21,220 --> 00:21:25,080
where if you draw a small circle around the boundary of a colored region,

239
00:21:25,080 --> 00:21:29,360
that circle must actually include all available colors from the picture.

240
00:21:30,280 --> 00:21:35,200
And this is true more generally for any rational map. If you were to assign colors to regions based

241
00:21:35,200 --> 00:21:40,380
on which limiting behavior points fall into, like which limit point or which limit cycle or does it

242
00:21:40,380 --> 00:21:46,100
tend to infinity, then tiny circles that you draw either contain points with just one of those

243
00:21:46,100 --> 00:21:51,200
limiting behaviors, or they contain points with all of them. It's never anything in between.

244
00:21:51,960 --> 00:21:56,380
So in the case where there's at least three colors, this property implies that our boundary

245
00:21:56,380 --> 00:22:01,060
could never be smooth, since along a smooth segment, you can draw a small enough circle

246
00:22:01,060 --> 00:22:05,780
that touches just two colors, not all of them. And empirically, this is what we see. No matter

247
00:22:05,780 --> 00:22:10,860
how far you zoom in, these boundaries are always rough. And furthermore, you might notice that as

248
00:22:10,860 --> 00:22:17,100
we zoom in, you can always see all available colors within the frame. This doesn't explain

249
00:22:17,100 --> 00:22:21,420
rough boundaries in the context where there's only two limiting behaviors, but still, it's a

250
00:22:21,420 --> 00:22:25,760
loose end that I left in that video worth tying up, and it's a nice excuse to bring in two important

251
00:22:25,760 --> 00:22:32,480
bits of terminology, Julia sets and Fatou sets. If a point eventually falls into some stable,

252
00:22:32,580 --> 00:22:37,040
predictable pattern, we say that it's part of the Fatou set of our iterated function.

253
00:22:37,740 --> 00:22:43,180
And for all the maps that we've seen, this includes almost everything. The Julia set is

254
00:22:43,180 --> 00:22:47,880
everything else, which in the pictures we've seen would be the rough boundaries between the

255
00:22:47,880 --> 00:22:53,560
colored regions. What happens as you transition from one stable attractor to another? For example,

256
00:22:53,900 --> 00:22:59,300
the Julia set will include all of the repelling cycles and the repelling fixed points. A typical

257
00:22:59,300 --> 00:23:03,940
point from the Julia set though, will not be a cycle. It'll bounce around forever with no clear

258
00:23:03,940 --> 00:23:09,260
pattern. Now, if you look at a point in the Fatou set, and you draw a small enough disc around it,

259
00:23:09,260 --> 00:23:14,020
as you follow the process, that small disc will eventually shrink as you fall into whatever the

260
00:23:14,020 --> 00:23:18,660
relevant stable behavior is. Unless you're going to infinity, but you could kind of think of that

261
00:23:18,660 --> 00:23:22,020
as the disc shrinking around infinity, but maybe that just confuses matters.

262
00:23:24,500 --> 00:23:29,300
By contrast, if you draw a small disc around a point on the Julia set, it tends to expand

263
00:23:29,300 --> 00:23:34,020
over time as the points from within that circle go off and kind of do their own things.

264
00:23:35,540 --> 00:23:41,020
In other words, points of the Julia set tend to behave chaotically. Their nearby neighbors,

265
00:23:41,140 --> 00:23:45,260
even very nearby, will eventually fall into qualitatively different behaviors.

266
00:23:46,420 --> 00:23:51,980
But it's not merely that this disc expands. A pretty surprising result, key to the multicolor

267
00:23:51,980 --> 00:23:56,720
property mentioned before, is that if you let this process play out, that little disc eventually

268
00:23:56,720 --> 00:24:02,400
expands so much that it hits every single point on the complex plane, with at most two exceptions.

269
00:24:02,400 --> 00:24:06,880
This is known as the stuff-goes-everywhere principle of Julia sets.

270
00:24:07,940 --> 00:24:10,720
Okay, it's not actually called that. In the source I was reading from,

271
00:24:10,860 --> 00:24:13,800
it's mentioned as a corollary to something known as Montel's theorem.

272
00:24:14,320 --> 00:24:18,460
But it should be called that. In some sense, what this is telling us is that the points of

273
00:24:18,460 --> 00:24:24,220
the Julia set are not merely chaotic, they're kind of as chaotic as they possibly can be.

274
00:24:25,860 --> 00:24:30,280
Here, let me show you a little simulation using the Newton's map, with a cluster of a few thousand

275
00:24:30,280 --> 00:24:36,280
points, all starting from within a tiny distance, one one-millionth, from a point on the Julia set.

276
00:24:42,680 --> 00:24:47,780
Of course, the stuff-goes-everywhere principle is about the uncountably infinitely many points

277
00:24:47,780 --> 00:24:51,660
that would lie within that distance, and that they eventually expand out to hit everything on

278
00:24:51,660 --> 00:24:56,780
the plane, except possibly two points. But this little cluster should still give the general idea.

279
00:24:56,780 --> 00:25:02,240
A small, finite sample from that tiny disk gets sprayed all over the place in seemingly all

280
00:25:02,240 --> 00:25:08,420
directions. What this means for our purposes is that if there's some attractive behavior of our

281
00:25:08,420 --> 00:25:13,080
map, something like an attracting fixed point or an attracting cycle, you can be guaranteed that

282
00:25:13,080 --> 00:25:18,140
the values from that tiny disk around the point on the Julia set, no matter how tiny it was, will

283
00:25:18,140 --> 00:25:22,820
eventually fall into that attracting behavior. If we have a case with three or more attracting

284
00:25:22,820 --> 00:25:28,040
behaviors, this gives us some explanation for why the Julia set is not smooth, why it has to

285
00:25:28,040 --> 00:25:33,300
be complicated. Even still, this might not be entirely satisfying because it kicks the can one

286
00:25:33,300 --> 00:25:37,640
more step down the road, raising the question of why this stuff-goes-everywhere principle is true

287
00:25:37,640 --> 00:25:42,760
in the first place. Like I mentioned, it comes from something called Montel's theorem, and I'm

288
00:25:42,760 --> 00:25:47,480
choosing not to go into the details there, because honestly, it's a lot to cover. The proof I could

289
00:25:47,480 --> 00:25:52,180
find ends up leaning on something known as the J function, which is a whole intricate story in its

290
00:25:52,180 --> 00:25:55,600
own right. I will of course leave links and resources in the description for any of you

291
00:25:55,600 --> 00:26:00,340
who are hungry to learn more. And if you know of a simpler way to see why this principle is true,

292
00:26:00,600 --> 00:26:05,020
I'm definitely all ears. I should also say as a brief side note that even though the pictures

293
00:26:05,020 --> 00:26:09,620
we've seen so far have a Julia set which has an area of zero, it's kind of the boundary between

294
00:26:09,620 --> 00:26:14,800
these regions, there are examples where the Julia set is the entire plane. Everything behaves

295
00:26:14,800 --> 00:26:21,400
chaotically, which is kind of wild. The main takeaway for this particular section is the link

296
00:26:21,400 --> 00:26:26,360
between the chaos and the fractal. At first it seems like these are merely analogous to each

297
00:26:26,360 --> 00:26:31,240
other. Newton's method turns out to be a kind of messy process for some seed values, and this

298
00:26:31,240 --> 00:26:36,560
messiness is visible one way by following the trajectory of a particular point, and another way

299
00:26:36,560 --> 00:26:41,940
by the complexity of our diagrams, but those feel like qualitatively different kinds of messiness.

300
00:26:42,520 --> 00:26:47,080
Maybe it makes for a nice metaphor, but nothing more. However, what's neat here is that when you

301
00:26:47,080 --> 00:26:52,920
quantify just how chaotic some of the points are, well, that quantification leads us to an actual

302
00:26:52,920 --> 00:26:58,960
explanation for the rough fractal shape via this boundary property. Quite often you see chaos and

303
00:26:58,960 --> 00:27:03,980
fractals sort of married together in math, and to me at least it's satisfying whenever that marriage

304
00:27:03,980 --> 00:27:08,960
comes with a logical link to it, rather than as two phenomena that just happen to coincide.

