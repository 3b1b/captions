1
00:00:00,000 --> 00:00:04,240
今日は、正則力学として知られる数学についてお話したいと思います。

2
00:00:04,240 --> 00:00:08,000
これはマンデルブロ集合のようなものを研究する分野であり、実際、今日の私の主な目的の

3
00:00:08,000 --> 00:00:12,720
1

4
00:00:12,720 --> 00:00:16,480
つは、数学の申し子であるこの象徴的な図形が、最初の定義が示唆するよりも一般的な方法でどのように現れるかを示すことです。

5
00:00:17,200 --> 00:00:21,200
この分野は、前回のビデオで話したニュートンのフラクタルにも密接に関係しています。このビデオの終わりに向けた私たちのもう

6
00:00:21,200 --> 00:00:25,200
1

7
00:00:25,200 --> 00:00:27,840
つの目標は、そこで生じた未解決の部分を解決することです。

8
00:00:30,000 --> 00:00:39,200
まず第一に、この正則同型という言葉は少し奇妙に思えるかもしれません。 これは、複素数入力と複素数出力を持ち、導関数も取得できる関数を指します。

9
00:00:39,200 --> 00:00:44,480


10
00:00:45,040 --> 00:00:49,280
基本的に、このコンテキストで導関数があるということは、関数が特定の点の近くでどのように動作するか、その点とその近傍にズームインすると、拡大縮小と回転、つまり複雑な定数を乗算しているように見えることです。

11
00:00:49,280 --> 00:00:54,720


12
00:00:54,720 --> 00:00:59,520
これについては後ほど詳しく説明しますが、ここでは、多項式、指数関数、三角関数など、書き留めることができる通常の関数のほとんどが含まれていることを知っておいてください。

13
00:00:59,600 --> 00:01:03,520


14
00:01:03,520 --> 00:01:06,560


15
00:01:07,280 --> 00:01:12,400
ここでのタイトルに関連するダイナミクスは、これらの関数の

16
00:01:12,400 --> 00:01:17,440
1

17
00:01:17,440 --> 00:01:20,480
つを何度も繰り返し適用すると何が起こるかという質問から来ています。つまり、何らかの入力に対して評価し、次に得られたものに対して同じ関数を評価し、それを再度実行するという意味です。

18
00:01:21,440 --> 00:01:25,200
、そして何度も何度も。

19
00:01:26,000 --> 00:01:29,360
ここから現れるポイントのパターンがサイクルに閉じ込められることがあります。

20
00:01:30,400 --> 00:01:33,840
また、シーケンスがある種の限界点に近づくこともあります。

21
00:01:35,040 --> 00:01:39,040
あるいは、数列がどんどん大きくなり、無限に飛んでいくのかもしれません。数学者もそれを、限界点、まさに無限遠点に近づいていると考えています。

22
00:01:39,040 --> 00:01:42,640


23
00:01:42,640 --> 00:01:48,080
また、全くパターンがなく、無秩序に行動する場合もあります。

24
00:01:49,840 --> 00:01:53,600
驚くべきことは、書き留める可能性のあるあらゆる種類の関数について、これらの考えられるさまざまな動作が発生したときに視覚化するために何かを行おうとすると、非常に複雑なフラクタル

25
00:01:54,160 --> 00:01:58,880
パターンが生成されることがよくあることです。

26
00:01:58,880 --> 00:02:02,160


27
00:02:03,280 --> 00:02:07,200
前回のビデオをご覧になった方は、すでにこの素晴らしい例を 1 つご覧になったことでしょう。

28
00:02:07,200 --> 00:02:11,760
多項式 p の根を求めるニュートン法と呼ばれるアルゴリズムがあり、その仕組みは基本的に、式 x から

29
00:02:11,760 --> 00:02:15,120
x の p を引いたものを x

30
00:02:15,120 --> 00:02:19,120
の p 素数で割って、p 素数を導関数として繰り返すというものです。

31
00:02:19,920 --> 00:02:24,080
初期シード値が多項式の根 (x の p

32
00:02:24,080 --> 00:02:29,200
が 0 に等しい値) の緩やかな近傍にある場合、この手順はその根にすぐに収束する一連の値を生成します。

33
00:02:29,200 --> 00:02:34,000
これが、実際に役立つアルゴリズムとなる理由です。 しかし、その後、これを複素平面で実行しようとしました。多くの考えられるシード値を調べ、これらのシード値のそれぞれが複素平面のどのルートに到達するかを調べました。

34
00:02:34,000 --> 00:02:39,600


35
00:02:39,600 --> 00:02:44,720
次に、各ルートに色を関連付け、そのピクセルから始まるシード値が最終的にどのルートに到達するかに基づいて、プレーンの各ピクセルに色を付けました。

36
00:02:44,720 --> 00:02:50,000


37
00:02:50,000 --> 00:02:55,680
私たちが得た結果は、色の間に大まかなフラクタル境界がある、非常に複雑な写真のいくつかでした。

38
00:02:55,680 --> 00:02:59,200


39
00:03:02,240 --> 00:03:05,760
この例では、実際に反復している関数を見ると、たとえば z の

40
00:03:05,760 --> 00:03:09,840
3 乗マイナス

41
00:03:09,840 --> 00:03:14,000
1 のような多項式の特定の選択について、ある多項式を別の多項式で割ったように式全体を書き直すことができます。

42
00:03:14,800 --> 00:03:19,600
数学者はこの種の関数を有理関数と呼びます。 そして、これがニュートンの方法から生じたという事実を忘れた場合、他の有理関数を反復すると何が起こるかを尋ねることも当然できます。

43
00:03:19,600 --> 00:03:24,240


44
00:03:24,240 --> 00:03:29,120
そして実際、これはまさに数学者のピエール・ファトゥとガストン・ジュリアが第一次世界大戦直後の数年間に行ったことだ。

45
00:03:29,120 --> 00:03:33,760
そして、彼らは、これらの有理関数を反復すると何が起こるかについて、驚くほど豊富な理論を構築しました。あなたや私のようにこれを視覚化するコンピューターが彼らになかったことを考えると、これは特に印象的です。

46
00:03:33,760 --> 00:03:38,560


47
00:03:38,560 --> 00:03:43,120


48
00:03:43,120 --> 00:03:48,960
この 2 つの名前は後で出てくるので覚えておいてください。 このように研究できる有理関数とその結果として生じるフラクタルの最も一般的な例は、最も単純な関数の 1

49
00:03:48,960 --> 00:03:53,200
つである z 二乗プラス c

50
00:03:53,760 --> 00:04:00,320
(c は定数) です。 これは多くの人にとって少なくともある程度は馴染みのあるものだと思いますが、後で説明する準備を整えるのに役立つので、ここで簡単にストーリーを要約しておくことは確かに害はありません。

51
00:04:00,320 --> 00:04:04,640


52
00:04:04,640 --> 00:04:10,080
このゲームでは、c

53
00:04:10,080 --> 00:04:14,800
を変更可能な値として考え、この移動可能な黄色の点として表示されます。

54
00:04:14,800 --> 00:04:21,280
実際の反復プロセスでは、常に z の初期値が 0 に等しい状態で開始します。

55
00:04:21,280 --> 00:04:28,560
したがって、この関数を 1 回繰り返し、z 2 乗と c を実行すると、c が得られます。 その値を関数に代入して 2

56
00:04:28,560 --> 00:04:34,480
回目の反復を行うと、c の 2 乗に c を加えた値が得られます。 ここで値

57
00:04:34,560 --> 00:04:40,320
c を変更すると、2 番目の値がどのように同期して移動するかがわかります。 次に、その

58
00:04:40,320 --> 00:04:45,520
2 番目の値を接続して z3 を取得し、その 3 番目の値を接続して

59
00:04:45,520 --> 00:04:52,320
z4 を取得し、このように続けて、値のチェーンを視覚化します。 したがって、最初の多くの値に対して、c

60
00:04:52,320 --> 00:04:58,080
のいくつかの選択肢に対して、これを何度も繰り返しても、このプロセスは制限されたままになります。 今でも画面上ですべてを見ることができます。

61
00:04:58,080 --> 00:05:02,800
また、爆発しているように見えることもあり、2 倍の大きさになると無限大まで爆発することを実際に示すことができます。

62
00:05:02,800 --> 00:05:10,800
境界が黒に留まる平面の点を色付けし、プロセスが無限に向かってどれだけ速く突入するかに基づいて発散値に別の色のグラデーションを割り当てると、数学全体の中で最も象徴的な画像の

63
00:05:10,800 --> 00:05:16,800
1

64
00:05:16,800 --> 00:05:22,160
つが得られます。マンデルブロ集合。

65
00:05:22,160 --> 00:05:28,080
ちなみに、このインタラクティブなドットとスティックによる軌跡の視覚化は、Ben Spark

66
00:05:28,080 --> 00:05:32,160
のイラストと、彼がマンデルブロ集合について行った Numberphile

67
00:05:32,160 --> 00:05:36,320
のビデオに大きく影響を受けています。これは素晴らしいので、ぜひご覧ください。 正直、面白すぎてここで再実装しないのはもったいないと思いました。

68
00:05:36,320 --> 00:05:41,440
ako に関するインタラクティブな記事も強くお勧めします。 まだ読んでいない人のために、これらすべてについて説明します。

69
00:05:41,440 --> 00:05:45,680
ベン・スパークのイラストの素晴らしい点は、マンデルブロ集合のさまざまな部分が実際に何を表しているのかを明らかにしていることです。

70
00:05:45,680 --> 00:05:50,320


71
00:05:50,320 --> 00:05:56,400
この最大のカーディオイド セクションには c

72
00:05:56,400 --> 00:06:01,760
の値が含まれているため、プロセスは最終的にある限界に収束します。 左側の大きな円は、プロセスが 2

73
00:06:01,760 --> 00:06:06,560
つの値の間のサイクルに閉じ込められる値を表し、次に上下の円は、プロセスが 3

74
00:06:06,560 --> 00:06:11,440
つの値のサイクルに閉じ込められる値を示します。以下同様です。 これらの小さな島にはそれぞれ独自の意味があります。

75
00:06:11,440 --> 00:06:18,240
また、このマンデルブロ集合と以前に見ていたニュートン

76
00:06:18,240 --> 00:06:22,400
フラクタルの間には、基礎となる関数が異なるだけでなく、それぞれがどのように構築されるかという重要な違いがあることにも注目してください。

77
00:06:22,400 --> 00:06:27,440
マンデルブロ集合の場合、一貫したシード値 z

78
00:06:27,440 --> 00:06:33,520
はゼロですが、微調整しているのはパラメーター c であり、関数自体を変更しています。

79
00:06:33,520 --> 00:06:38,960
つまり、ここで見ているのはパラメータ空間と呼ばれるものです。 しかし、ニュートンのフラクタルでは、単一の不変関数がありますが、各ピクセルに関連付けられるのは、プロセスの異なるシード値です。

80
00:06:38,960 --> 00:06:44,480


81
00:06:44,480 --> 00:06:50,880
もちろん、マップ z の 2 乗に

82
00:06:50,880 --> 00:06:55,600
c を加えたもので同じゲームをプレイすることもできます。c をある定数に固定し、ピクセルがさまざまな初期値 z naught を表すようにすることもできます。

83
00:06:55,600 --> 00:07:01,120
したがって、マンデルブロ集合の各ピクセルは固有の関数に対応しますが、右側の画像はそれぞれ 1

84
00:07:01,120 --> 00:07:06,880
つの関数に対応するだけです。 パラメータ c

85
00:07:06,880 --> 00:07:12,400
を変更すると、右側の画像全体が変更されます。 もう一度明確にしておきますが、適用されるルールは、プロセスが制限されたままの場合はピクセルを黒に色付けし、無限に発散する速度に基づいて、無限に発散するピクセルにある種のグラデーションを適用するというものです。

86
00:07:12,400 --> 00:07:17,200


87
00:07:17,200 --> 00:07:22,320


88
00:07:23,280 --> 00:07:27,760
原理的には、考えると気が遠くなりそうですが、c と z

89
00:07:27,760 --> 00:07:32,800
のすべての組み合わせが存在しない 4 次元空間があり、ここで私たちがやっていることは、その想像を絶する個々の

90
00:07:32,800 --> 00:07:36,320
2 次元スライスを調べているようなものです。パターン。

91
00:07:37,600 --> 00:07:43,600
右側の画像がジュリア セットまたはジュリア フラクタルと呼ばれているのをよく聞いたり読んだりしますが、私がこのすべてのことを初めて知ったとき、これが用語の意味であるという誤解を抱いていたことを認めます。ジュリア集合とは、特に

92
00:07:43,600 --> 00:07:47,200
z 2

93
00:07:47,200 --> 00:07:52,320
乗プラス c

94
00:07:52,320 --> 00:07:57,040
の場合を指し、さらに内側の黒い領域を指します。 ただし、ジュリア集合という用語には、より一般的な定義があり、内部ではなく、これらの領域の境界のみを指します。

95
00:07:57,040 --> 00:08:01,600


96
00:08:01,600 --> 00:08:07,200
より具体的な定義の準備を整え、冒頭で述べた最初の目標に向けて少しでも前進するには、一歩下がって、今まさに自分が数学者であり、これらすべてを発見していると想像してみる価値があります。

97
00:08:07,200 --> 00:08:11,520


98
00:08:11,520 --> 00:08:16,080
これに基づいて理論を構築するには実際に何をしますか?

99
00:08:16,080 --> 00:08:21,200
美しい写真を見るのは別のことですが、実際にすべてを理解したい場合は、どのような質問をしますか?

100
00:08:21,200 --> 00:08:24,720


101
00:08:25,840 --> 00:08:30,080
一般に、何か複雑なことを理解したい場合は、単純な動作、できれば最も単純な動作をするシステムの部分があるかどうかを尋ねることから始めるのが良いでしょう。この例では、それは、いつ動作するかを尋ねることを意味します。プロセスはその場に固定されたままになります。つまり、z の

102
00:08:30,080 --> 00:08:34,720
f は

103
00:08:34,720 --> 00:08:40,400
z に等しいということです。

104
00:08:40,400 --> 00:08:45,840
これはかなり退屈なダイナミクスです。あなたも同意すると思います。

105
00:08:46,400 --> 00:08:51,360
このプロパティを持つ値を関数の固定点と呼びます。 ニュートン法から生じる関数の場合、設計により、関連する多項式の根に固定点があります。

106
00:08:51,360 --> 00:08:56,560


107
00:08:56,560 --> 00:09:02,800
z の p が 0 に等しい場合、式全体が単純に z

108
00:09:02,800 --> 00:09:07,600
に等しいことを自分で確認できます。 不動点とはそういう意味です。 演習に興味がある場合は、少し立ち止まって、このマンデルブロ集合関数の不動点、z 2

109
00:09:07,600 --> 00:09:12,720
乗プラス c を計算することを楽しむかもしれません。

110
00:09:12,720 --> 00:09:20,480
より一般的には、この式が

111
00:09:20,480 --> 00:09:25,040
z

112
00:09:25,040 --> 00:09:29,440
に等しいかどうかを問うことは、常に何らかの多項式の根を求めるように並べ替えることができるため、有理関数は常に固定点を持ちます。また、代数の基本定理から、これには解が必要であり、通常は解が必要となります。この式の最高度。

113
00:09:29,440 --> 00:09:33,760


114
00:09:34,800 --> 00:09:39,600
ちなみに、これは、ニュートン法を使用してそれらの不動点を見つけることもできることを意味します。おそらく、それは現時点では少しメタすぎるかもしれません。

115
00:09:39,760 --> 00:09:41,920


116
00:09:42,640 --> 00:09:46,720
固定点について尋ねるだけなら簡単かもしれませんが、ダイナミクス全体、つまり私たちが見ている図を理解するための重要な考え方は、安定性を理解することです。

117
00:09:46,720 --> 00:09:53,040
近くの点が固定点に引き寄せられる傾向がある場合、その固定点は引き付けられ、遠ざけられる場合は反発すると言います。

118
00:09:53,040 --> 00:09:58,800


119
00:09:58,800 --> 00:10:04,080
そしてこれは、関数の導関数を使用して実際に明示的に計算できるものです。

120
00:10:04,080 --> 00:10:09,680
象徴的に言えば、複素関数の導関数を取得すると、実際の関数の場合とまったく同じように見えますが、z の 2 乗などの導関数は

121
00:10:09,680 --> 00:10:14,400
z の 2 倍になります。

122
00:10:14,400 --> 00:10:20,160
しかし、幾何学的には、これが何を意味するのかを解釈する非常に素晴らしい方法があります。 たとえば、入力

123
00:10:20,160 --> 00:10:25,760
1 では、この特定の関数の導関数は 2

124
00:10:25,760 --> 00:10:30,720
と評価されます。これが示しているのは、その入力の周囲の非常に小さな近傍に注目し、その小さな点内のすべての点に何が起こるかを追跡すると、ということです。関数を適用するときに近傍 (この場合は z

125
00:10:30,720 --> 00:10:34,720
の 2 乗)

126
00:10:34,720 --> 00:10:40,880
を適用すると、2 を掛けているように見えます。 これが 2 の導関数の意味です。

127
00:10:40,880 --> 00:10:48,160
別の例として、入力 i を見てみましょう。 この関数が入力をマイナス 1、つまり i

128
00:10:48,160 --> 00:10:54,000
の 2 乗した値に移動することがわかります。 しかし、この値での導関数は i

129
00:10:54,000 --> 00:10:59,840
の 2

130
00:10:59,840 --> 00:11:05,680
倍であるという追加情報により、その点の周りを拡大して、この小さな近傍での関数の動作を見ると、2i による乗算のように見えるという追加の図が得られます。この場合、90 度の回転と

131
00:11:05,680 --> 00:11:10,240
2 倍の拡大を組み合わせたように見えることを意味します。

132
00:11:10,240 --> 00:11:18,480
安定性を分析する目的で、ここで考慮するのは成長係数と縮小係数だけであり、回転部分は重要ではありません。

133
00:11:18,480 --> 00:11:23,360
したがって、固定点での関数の導関数を計算し、その結果の絶対値が

134
00:11:23,360 --> 00:11:29,120
1

135
00:11:29,120 --> 00:11:33,680
より小さい場合、固定点が引き付けられており、近くの点が固定点に向かって接近する傾向があることがわかります。

136
00:11:34,320 --> 00:11:39,040
その微分値の絶対値が 1 より大きい場合、固定点が反発しており、隣接する点を押しのけていることがわかります。

137
00:11:39,040 --> 00:11:44,640
たとえば、ニュートンのマップ式の導関数を計算し、いくつかのことを少し単純化すると、次のような結果が得られます。

138
00:11:44,640 --> 00:11:49,040


139
00:11:50,320 --> 00:11:55,520
したがって、z が固定点である場合 (この文脈では、z が多項式 p の根の 1

140
00:11:55,520 --> 00:12:01,920
つであることを意味します)、この導関数は 1 より小さいだけでなく、0 に等しくなります。 これらは、これらの点の周囲の近傍が単に縮小するだけでなく、大幅に縮小することを意味するため、超魅力的な固定点と呼ばれることもあります。

141
00:12:01,920 --> 00:12:06,160


142
00:12:06,160 --> 00:12:12,880
繰り返しになりますが、ニュートン法の目的は、できるだけ早く根に向かう反復を生成することであるため、これは一種の設計によるものです。

143
00:12:12,880 --> 00:12:18,880
z の

144
00:12:18,880 --> 00:12:23,600
2 乗と c の例を引き出すと、その固定点を見つける最初の演習を行った場合、次のステップは、それらの固定点の少なくとも

145
00:12:23,600 --> 00:12:29,600
1 つがいつ引き付けられるのかを尋ねることになります。 c のどの値に対してこれは当てはまりますか?

146
00:12:29,600 --> 00:12:35,360
それが十分な課題ではない場合は、見つかった結果を使用して、この条件がマンデルブロ集合の主要なカーディオイド形状に対応していることを示してみてください。

147
00:12:35,360 --> 00:12:40,480


148
00:12:40,480 --> 00:12:42,960
これは明示的に計算できるもので、非常に優れています。

149
00:12:45,120 --> 00:12:49,360
次のステップとしては、サイクルについて尋ねるのが自然ですが、ここからが本当に興味深いことになります。

150
00:12:49,360 --> 00:12:56,400
z の f が z ではなく、他の値であり、その値が z

151
00:12:56,400 --> 00:13:01,920
に戻った場合、それは 2 つのサイクルに陥ったことを意味します。 f of f of z

152
00:13:01,920 --> 00:13:09,280
を評価し、それを z に等しく設定することで、この種の 2 つのサイクルを明示的に見つけることができます。 たとえば、z の 2 乗と c のマップでは、f

153
00:13:09,280 --> 00:13:15,360
of f of z が次のように展開されます。 ちょっと面倒ですが、それほどひどいものではありません。

154
00:13:15,360 --> 00:13:19,360
強調すべき主な点は、最終的には 4 次方程式を解くことになるということです。

155
00:13:19,920 --> 00:13:23,920
ただし、固定点はこの方程式の解にもなるため、技術的には 2

156
00:13:23,920 --> 00:13:28,880
つのサイクルがこの方程式の解から元の固定点方程式の解を引いたものになることに注意してください。

157
00:13:28,880 --> 00:13:35,280
同様に、同じアイデアを使用して、 f とそれ自体を n 回異なる回数合成することで、n

158
00:13:35,280 --> 00:13:41,760
サイクルを探すことができます。 すぐに得られる明示的な表現は非常に乱雑になりますが、この仮説的なプロセスに基づいて何サイクルが予想されるかを尋ねることはまだ明確です。

159
00:13:41,760 --> 00:13:46,960


160
00:13:46,960 --> 00:13:52,480
単純な z の 2 乗と

161
00:13:52,480 --> 00:13:57,680
c の例に固執すると、それ自体を合成すると、4 次の多項式が得られ、次に 8

162
00:13:57,680 --> 00:14:03,200
次の多項式が得られ、次に 16 次の多項式が得られ、というように指数関数的に増加します。多項式の次数。 したがって、原理的には、100

163
00:14:03,200 --> 00:14:08,320
万の周期で何サイクルになるかを尋ねた場合、それは 2 から

164
00:14:08,400 --> 00:14:13,520
100 万の次数を持つまったく非常識な多項式を解くのと同じであることがわかります。

165
00:14:13,520 --> 00:14:18,800
繰り返しになりますが、代数学の基本定理では、複素平面内で 2 から

166
00:14:18,800 --> 00:14:24,480
100 万点程度の何かが見つかると予想されます。これはまさにこのように循環します。

167
00:14:25,440 --> 00:14:30,320
さらに一般的には、任意の有理マップでは、その動作が周期 n のサイクルに該当する値を常に見つけることができます。

168
00:14:30,320 --> 00:14:36,000
最終的には、おそらく非常識な多項式を解くことになります。

169
00:14:36,000 --> 00:14:41,440
そして、この例と同様に、そのような周期点の数は n とともに指数関数的に増加します。

170
00:14:41,440 --> 00:14:46,880
前回のニュートンのフラクタル動画ではあまり触れませんでしたが、このような処理であっても、何らかのサイクルに該当する点が無数にあると考えるとなんだか不思議です。

171
00:14:46,880 --> 00:14:51,200


172
00:14:51,200 --> 00:14:56,960
ただし、ほとんどの場合、これらの点は色付きの領域間の境界のどこかにあり、それらのいずれかに到達する確率はゼロであるため、実際には現れません。

173
00:14:56,960 --> 00:15:01,040


174
00:15:01,040 --> 00:15:06,240
実際にこれらのいずれかに該当するかどうかで重要なのは、サイクルの

175
00:15:06,240 --> 00:15:11,360
1 つが引き付けられているかどうかです。つまり、そのサイクルの値の周囲の点の近傍がそのサイクルに引き寄せられる傾向があるという意味です。

176
00:15:11,360 --> 00:15:17,840
数値的手法に興味がある人にとって非常に関連性の高い質問は、このニュートンの写像プロセスに引き付けサイクルが存在するかどうかです。存在する場合、最初の推測がそのサイクルに閉じ込められ、決して見つからない可能性がゼロではないことを意味するからです。根。

177
00:15:17,840 --> 00:15:22,960


178
00:15:22,960 --> 00:15:27,760


179
00:15:27,760 --> 00:15:33,600
ここでの答えは実際には「はい」です。 より明確に言うと、z

180
00:15:33,600 --> 00:15:39,520
の 3 乗マイナス 2z プラス

181
00:15:39,520 --> 00:15:45,440
2 の根を求めようとして、ニュートン法を使用している場合、値 0 付近で始まる小さなクラスターに何が起こるかを観察します。 前後に跳ね返る感じです。

182
00:15:45,440 --> 00:15:50,240
さて、わかりました。この場合、最初に使用したクラスターが少し大きすぎたので、外側のポイントの一部が吹き飛ばされます。

183
00:15:50,240 --> 00:15:54,560
しかし、より小さなクラスターから始めると次のようになります。

184
00:15:54,560 --> 00:16:00,160
すべての点が実際に 0 と 1 の間のサイクルに向かって縮小していることに注目してください。

185
00:16:00,160 --> 00:16:04,960
ランダムなシードでこれを達成する可能性は低いですが、間違いなく可能です。

186
00:16:05,920 --> 00:16:10,320
ちなみに、このようなサイクルが引き付けられていることを確認するために実行できる演習は、z の f の

187
00:16:10,320 --> 00:16:16,320
f の導関数を計算し、入力ゼロでこの導関数の大きさが 1 未満であることを確認することです。

188
00:16:16,320 --> 00:16:21,200
。 私の心を少し驚かせたのは、どの

189
00:16:21,200 --> 00:16:26,880
3 次多項式に誘引サイクルがあるかを視覚化しようとすると何が起こるかということです。

190
00:16:26,880 --> 00:16:32,000
うまくいけば、ニュートンの方法が根を見つけるのに少しでもうまくいくなら、そのような誘引サイクルはまれになるはずです。

191
00:16:32,000 --> 00:16:37,680
まず、今見ている 1

192
00:16:37,680 --> 00:16:42,560
つの例をよりわかりやすく視覚化するために、以前と同じフラクタルを描画し、その点から始まるシード値の傾向に基づいて各点を色付けします。

193
00:16:42,560 --> 00:16:47,680
ただし、今回は、シード値がルートにまったく近づかない場合、ピクセルを黒に着色するという着色ポイントの条件を追加します。

194
00:16:47,680 --> 00:16:52,480


195
00:16:53,600 --> 00:16:58,480
ルートを微調整する場合、つまりさまざまな 3

196
00:16:58,480 --> 00:17:03,440
次多項式を試している場合、黒いピクセルがまったく表示されるようにルートを配置する場所を見つけるのは実際には非常に困難であることに注意してください。

197
00:17:04,000 --> 00:17:09,840
ここで小さなスイートスポットを見つけることができますが、それは間違いなくまれです。 ここで私が望んでいるのは、どの三次多項式が誘引サイクルを持っているかを示す方法で、単一の画像を使用してすべての可能な三次多項式を一度に視覚化する何らかの方法です。

198
00:17:09,840 --> 00:17:15,840


199
00:17:15,840 --> 00:17:21,360
幸いなことに、これらの多項式のいずれかに誘引サイクルがあるかどうかをテストする非常に簡単な方法があることがわかりました。

200
00:17:21,360 --> 00:17:26,480
あなたがしなければならないのは、3

201
00:17:26,480 --> 00:17:32,400
つのルートの平均、つまりこの重心にあるシード値を確認することだけです。 結局のところ、これはまったく明白ではありません。誘引サイクルがある場合、このシード値がその誘引サイクルに入ることが保証できます。

202
00:17:32,400 --> 00:17:37,040


203
00:17:37,040 --> 00:17:43,040
つまり、黒い点があるとすれば、これがその一つになります。

204
00:17:43,040 --> 00:17:48,080
この魔法の事実がどこから来たのか知りたい場合は、それは私たちの良き友人であるファトゥの定理に由来しています。

205
00:17:48,080 --> 00:17:53,520
彼は、これらの有理マップの 1

206
00:17:53,520 --> 00:17:58,400
つが誘引サイクルを持っている場合、反復関数の導関数がゼロに等しい値を調べることができ、それらの値の少なくとも 1

207
00:17:58,400 --> 00:18:04,080
つがそのサイクルに該当する必要があることを示しました。 それは少し奇妙な事実のように思えるかもしれませんが、大まかな直観としては、サイクルが引き寄せられようとしている場合、その値の少なくとも

208
00:18:04,080 --> 00:18:09,440
1

209
00:18:09,440 --> 00:18:13,920
つは非常に小さな微分値を持つはずであり、そこから縮小が生じることになります。

210
00:18:13,920 --> 00:18:19,200
そしてこれは、サイクル内のその値が導関数が単に小さいだけでなくゼロに等しい点の近くに位置し、その点が最終的にサイクルに吸い込まれるのに十分近いことを意味します。

211
00:18:19,200 --> 00:18:24,160


212
00:18:24,160 --> 00:18:30,000
この事実は、マンデルブロ集合では、ゼロに等しいシード値 z を

213
00:18:30,000 --> 00:18:34,640
1 つだけ使用していても、非常に完全で興味深い全体像を得るのに十分である理由も正当化します。

214
00:18:34,640 --> 00:18:40,080
安定したサイクルが見つかると、その 1 つのシード値が必ずそれを見つけます。

215
00:18:40,080 --> 00:18:46,000
今日は宿題と演習を少しやりすぎているような気がしますが、もし興味があるなら、ニュートン法から生じる関数で見つけた導関数式を振り返るのも楽しいでしょう。ファトゥーのこの素晴らしい定理を使って、この根の中点を確認するだけで十分であるという、三次多項式に関する魔法の事実を示します。

216
00:18:46,000 --> 00:18:50,560


217
00:18:50,560 --> 00:18:56,240


218
00:18:56,240 --> 00:19:01,920


219
00:19:01,920 --> 00:19:06,720
ただし、正直なところ、これらはすべて、実際には心配する必要のない詳細です。

220
00:19:06,720 --> 00:19:10,880
結果として、これらの多項式のすべてではなく 1 つの点だけを調べることで、これらの多項式の

221
00:19:10,880 --> 00:19:16,400
1 つに誘引サイクルがあるかどうかのテストを実行できるということになります。 このおかげで、本当に素晴らしい図を実際に生成することができます。

222
00:19:16,400 --> 00:19:21,120
これが機能する方法は、2 つのルートを所定の位置に固定することです。たとえば、z が負の

223
00:19:21,120 --> 00:19:26,480
1 に等しく、z が正の 1 に等しいとします。その後、ラムダと呼ぶ

224
00:19:26,480 --> 00:19:32,720
3 番目のルートの周りを移動します。 覚えておいてください、私たちが探している重要な特徴は、重心の点が黒である場合です。

225
00:19:32,720 --> 00:19:38,400
そこで、各ピクセルがラムダの 1 つの可能な選択肢に対応する

226
00:19:38,400 --> 00:19:44,880
2 番目の図を右側に描画します。 これから行うことは、3

227
00:19:44,880 --> 00:19:50,480
つのルートの中点の色に基づいてそのピクセルに色を付けることです。 これが少しわかりにくいと感じても、まったく問題ありません。ここには多くの層が関与しています。

228
00:19:50,480 --> 00:19:55,520
右側の各ピクセルは、このパラメーター

229
00:19:55,520 --> 00:20:01,280
lambda によって決定される一意の多項式に対応することを覚えておいてください。

230
00:20:02,000 --> 00:20:05,600
実際、これをパラメータ空間と呼ぶこともできます。 おなじみですね？

231
00:20:13,840 --> 00:20:20,000
このパラメータ空間内の点は、対応する多項式のニュートン法プロセスによって吸引サイクルが生成される場合に限り、黒く色付けされます。

232
00:20:20,000 --> 00:20:25,040
繰り返しになりますが、理解するのに少し時間がかかっても心配する必要はありません。

233
00:20:25,120 --> 00:20:30,400
さて、一見したところ、この図には黒い点がまったくないように見えるかもしれませんが、これは良い知らせです。

234
00:20:30,400 --> 00:20:35,920
それは、ほとんどの場合、ニュートン法がこのようなサイクルに巻き込まれないことを意味します。

235
00:20:35,920 --> 00:20:41,200
しかし、これを十分にプレビューしたので、これがどこに行くのか正確に理解できたと思います。ズームインすると黒い領域が見つかり、その黒い領域はマンデルブロ集合とまったく同じように見えます。

236
00:20:41,200 --> 00:20:46,800


237
00:20:46,800 --> 00:20:52,960
繰り返しになりますが、これらの関数の 1

238
00:20:52,960 --> 00:20:59,440
つのパラメーターを微調整する質問をすると、この象徴的なカーディオイドとバブルの形状が得られます。 結論から言えば、この形状はあなたが思っているほど、z の

239
00:20:59,440 --> 00:21:04,560
2 乗と c の例に特有のものではないということです。 これは、このようなプロセスを使用したパラメーター空間に関する、より一般的で普遍的なものに関連しているようです。

240
00:21:04,560 --> 00:21:08,880


241
00:21:11,680 --> 00:21:17,360
それでも、差し迫った疑問の 1 つは、そもそもなぜフラクタルが得られるのかということです。 前回のビデオでは、ニュートン法の図が、色の付いた領域の境界の周りに小さな円を描く場合、実際にはその円には画像から利用可能なすべての色が含まれている必要があるという非常に奇妙な特性があることについて説明しました。

242
00:21:17,360 --> 00:21:22,640


243
00:21:22,640 --> 00:21:28,160


244
00:21:28,160 --> 00:21:33,360
そしてこれは、あらゆる合理的なマップにさらに一般的に当てはまります。 どの制限動作ポイントが該当するか

245
00:21:33,360 --> 00:21:38,720
(どの制限点、どのリミット サイクル、または無限に向かう傾向があるかなど)

246
00:21:38,720 --> 00:21:44,800
に基づいて領域に色を割り当てる場合、描画する小さな円には、これらの制限動作の 1

247
00:21:44,800 --> 00:21:50,000
つだけを持つ点が含まれるか、 、またはそれらすべてにポイントが含まれています。 決してその中間ではありません。

248
00:21:50,000 --> 00:21:55,440
したがって、少なくとも 3

249
00:21:55,440 --> 00:22:00,400
つの色がある場合、このプロパティは境界が決して滑らかではないことを意味します。滑らかなセグメントに沿って、すべての色ではなく 2

250
00:22:00,400 --> 00:22:05,280
つの色だけに触れる十分小さな円を描くことができるからです。 そして経験的にこれが私たちが目にしているものですが、どんなに遠くまでズームインしても、これらの境界は常に大まかです。

251
00:22:05,280 --> 00:22:10,400
さらに、ズームインすると、フレーム内で利用可能なすべての色が常に表示されることに気づくかもしれません。

252
00:22:10,400 --> 00:22:17,280
これは、制限動作が

253
00:22:17,280 --> 00:22:21,680
2

254
00:22:21,680 --> 00:22:26,000
つしかないという文脈における大まかな境界線を説明するものではありませんが、それでも、私がこのビデオに残した未解決の部分は結びつける価値があり、2 つの重要な用語を導入する良い口実になります。ファトゥセット。

255
00:22:26,000 --> 00:22:32,960
ある点が最終的に何らかの安定した予測可能なパターンに陥る場合、それは反復関数の Fatou

256
00:22:32,960 --> 00:22:38,560
セットの一部であると言います。 これまでに見たすべてのマップには、ほぼすべてのものが含まれます。

257
00:22:38,560 --> 00:22:44,640
Julia

258
00:22:44,640 --> 00:22:49,920
セットはそれ以外のすべてであり、これまでに見た写真では、色付きの領域間の大まかな境界線であり、ある安定したアトラクターから別の安定したアトラクターに移行するときに何が起こるかです。

259
00:22:49,920 --> 00:22:55,440
たとえば、Julia セットには、すべての反発サイクルと反発固定点が含まれます。

260
00:22:55,440 --> 00:23:01,120
ただし、Julia

261
00:23:01,120 --> 00:23:06,480
セットの典型的なポイントはサイクルではなく、明確なパターンもなく永遠に跳ね返ります。 ここで、Fatou

262
00:23:06,480 --> 00:23:11,520
セット内の点に注目し、その周囲に十分小さな円盤を描画すると、プロセスに従って、関連する安定した動作に陥るにつれて、小さな円盤は最終的に縮小します。

263
00:23:11,520 --> 00:23:16,800
無限に到達する場合は別ですが、円盤が無限付近で縮小すると考えることもできますが、それは問題を混乱させるだけかもしれません。

264
00:23:16,800 --> 00:23:20,720


265
00:23:20,720 --> 00:23:28,240
対照的に、Julia

266
00:23:28,240 --> 00:23:33,360
セット上の点の周りに小さな円盤を描画すると、その円内の点が離れて独自の動作を行うにつれて、時間の経過とともに円盤が拡大する傾向があります。

267
00:23:33,360 --> 00:23:40,560
言い換えれば、ジュリア セットの点は無秩序に動作する傾向があります。 彼らの近くの隣人は、たとえ非常に近くにいたとしても、最終的には質的に異なる行動に陥るでしょう。

268
00:23:40,560 --> 00:23:45,280


269
00:23:46,320 --> 00:23:51,920
しかし、この円盤は単に膨張するだけではありません。 前に述べた多色特性の鍵となるかなり驚くべき結果は、このプロセスを実行させると、その小さな円盤が最終的に非常に膨張し、最大

270
00:23:51,920 --> 00:23:56,720
2

271
00:23:56,720 --> 00:24:02,480
つの例外を除いて複素平面上のすべての点に当たるということです。

272
00:24:03,360 --> 00:24:06,800
これは、ジュリア セットのどこにでもある原則として知られています。

273
00:24:07,760 --> 00:24:12,080
そうですね、実際にはそう呼ばれません。 私が読んでいた情報源では、これはモンテルの定理として知られるものの帰結として言及されていました。

274
00:24:12,080 --> 00:24:16,880
しかし、それはそう呼ばれるべきです。 ある意味、これが私たちに伝えているのは、ジュリア

275
00:24:16,880 --> 00:24:22,480
セットのポイントは単に混沌としているだけではなく、可能な限り混沌としているということです。

276
00:24:22,480 --> 00:24:28,880
ここでは、ニュートン マップを使用したちょっとしたシミュレーションを示します。数千点のクラスターはすべて、ジュリア集合上の点から 100

277
00:24:28,880 --> 00:24:34,320
万分の 1 というごくわずかな距離内から始まります。

278
00:24:34,320 --> 00:24:45,760
もちろん、物はどこにでもあるという原則は、その距離内に数え切れないほど多くの点があり、最終的にはそれらが広がり、おそらく

279
00:24:45,760 --> 00:24:49,760
2

280
00:24:49,760 --> 00:24:54,640
点を除いて、平面上のすべてに到達するというものです。 しかし、この小さなクラスターからでも一般的なアイデアは得られるはずです。

281
00:24:54,640 --> 00:24:59,680
その小さな円盤からの小さな有限のサンプルが、あらゆる方向にあらゆる方向にスプレーされます。

282
00:24:59,680 --> 00:25:05,840
これが私たちの目的にとって何を意味するかというと、マップに何らかの魅力的な動作、たとえば固定点を引き寄せたり、サイクルを引き寄せたりする場合、ジュリア集合上の点の周囲の小さな円盤からの値が、どのような方法であっても保証されるということです。それは小さかったが、最終的にはその魅力的な行動に陥るでしょう。

283
00:25:05,840 --> 00:25:10,240


284
00:25:10,240 --> 00:25:14,800


285
00:25:14,800 --> 00:25:20,080


286
00:25:20,800 --> 00:25:25,520
3 つ以上の誘引行動がある場合、これにより、ジュリア集合がなぜ滑らかではないのか、なぜ複雑でなければならないのかについての説明が得られます。

287
00:25:25,600 --> 00:25:30,960
それでも、これは完全に満足のいくものではないかもしれません。なぜなら、このものはどこにでもある原則がそもそもなぜ真実であるのかという疑問を引き起こすため、さらに一歩後退することになるからです。

288
00:25:30,960 --> 00:25:35,600


289
00:25:35,600 --> 00:25:40,160
先ほども述べたように、これはモンテルの定理と呼ばれるものに由来していますが、正直に言うと扱うべきことがたくさんあるため、詳細には触れないことにしました。

290
00:25:40,160 --> 00:25:44,800


291
00:25:44,800 --> 00:25:49,280
私が見つけた証拠は、J 関数として知られるものに依存することになりますが、これ自体が非常に複雑な話です。

292
00:25:49,280 --> 00:25:53,760
もちろん、もっと知りたいと思っている人のために説明にリンクとリソースを残しておきます。この原則が正しい理由を確認する簡単な方法を知っているなら、私は間違いなく耳を傾けます。

293
00:25:53,760 --> 00:25:58,320


294
00:25:58,320 --> 00:26:03,280
また、簡単な補足として、これまで見てきた写真には面積が

295
00:26:03,280 --> 00:26:08,000
0 のジュリア

296
00:26:08,000 --> 00:26:12,560
セットがありますが、これはこれらの領域間の境界のようなもので、ジュリア

297
00:26:12,560 --> 00:26:19,520
セットが全体である例もあります。飛行機では、すべてが無秩序に動作するので、ちょっとワイルドです。 この特定のセクションの主なポイントは、カオスとフラクタルのつながりです。

298
00:26:19,520 --> 00:26:25,120
最初は、これらは単に互いに類似しているように思えます。ニュートン法は、一部のシード値にとっては一種の厄介なプロセスであることが判明します。この厄介さは、特定の点の軌跡をたどることによって、ある方法で見ることができ、別の方法では確認できます。図の複雑さのおかげで、それらは質的に異なる種類の乱雑さのように感じられます。

299
00:26:25,120 --> 00:26:29,680


300
00:26:29,680 --> 00:26:34,960


301
00:26:34,960 --> 00:26:40,480


302
00:26:40,480 --> 00:26:45,920
もしかしたらそれは良い比喩にはなるかもしれませんが、それ以上の意味はありません。 ただし、ここで優れているのは、いくつかの点がどの程度カオスであるかを定量化すると、その定量化によって、この境界特性を介して大まかなフラクタル形状の実際の説明が得られるということです。

303
00:26:45,920 --> 00:26:50,640


304
00:26:50,640 --> 00:26:56,080


305
00:26:56,080 --> 00:27:02,080
数学ではカオスとフラクタルが一種の結婚生活をしているのをよく見かけますが、少なくとも私にとっては、その結婚生活が偶然に一致した

306
00:27:02,080 --> 00:27:06,960
2

307
00:27:06,960 --> 00:27:09,760
つの現象としてではなく、論理的なつながりを伴っているときはいつでも満足できます。

