1
00:00:00,000 --> 00:00:01,890
今日は、正則力学として知られる数

2
00:00:01,890 --> 00:00:03,780
学についてお話したいと思います。

3
00:00:04,440 --> 00:00:07,465
これはマンデルブロ集合のようなものを研究する分野であ

4
00:00:07,465 --> 00:00:09,677
り、実際、今日の私 の主な目的の 1 

5
00:00:09,677 --> 00:00:12,703
つは、数学の申し子であるこの象徴的な図形が、最初の 

6
00:00:12,703 --> 00:00:15,728
定義が示唆するよりも一般的な方法でどのように現れるか

7
00:00:15,728 --> 00:00:16,660
を示すことです。

8
00:00:17,380 --> 00:00:20,050
この分野は、前回のビデオで話したニュートンのフ

9
00:00:20,050 --> 00:00:22,139
ラクタルにも密 接に関係しています。

10
00:00:22,139 --> 00:00:24,809
 このビデオの終わりに向けた私たちのもう 1 

11
00:00:24,809 --> 00:00:28,060
つの目標は、そこで生じた未解決の部分を解決することです。

12
00:00:34,599 --> 00:00:36,069
まず第一に、この正則同型という言葉

13
00:00:36,069 --> 00:00:37,540
は少し奇妙に思えるかもしれません。

14
00:00:37,640 --> 00:00:41,035
これは、複素数入力と 複素数出力を持

15
00:00:41,035 --> 00:00:44,620
ち、導関数も取得できる関数を指します。

16
00:00:45,180 --> 00:00:48,197
基本的に、このコンテキストで導関数があるということは

17
00:00:48,197 --> 00:00:50,055
、関数が特定の点の近くでどのよ 

18
00:00:50,055 --> 00:00:53,073
うに動作するか、その点とその近傍にズームインすると、

19
00:00:53,073 --> 00:00:56,091
拡大縮小と回転、つまり複雑な 定数を乗算しているよう

20
00:00:56,091 --> 00:00:57,600
に見えることを意味します。

21
00:00:58,240 --> 00:01:01,040
これについては後ほど詳しく説 明しますが、ここでは、多項

22
00:01:01,040 --> 00:01:03,340
式、指数関数、三角関数など、書き留めることが 

23
00:01:03,340 --> 00:01:06,140
できる通常の関数のほとんどが含まれていることを知っておい

24
00:01:06,140 --> 00:01:06,740
てください。

25
00:01:07,380 --> 00:01:11,213
ここでのタイトルに関連するダイナミクスは、これらの関数の 

26
00:01:11,213 --> 00:01:14,783
1 つを 何度も繰り返し適用すると何が起こるかという質

27
00:01:14,783 --> 00:01:18,353
問から来ています。 つま り、何らかの入力に対して評価

28
00:01:18,353 --> 00:01:20,997
し、次に得られたものに対して同じ関数を 

29
00:01:20,997 --> 00:01:23,773
評価し、それを再度実行するという意味です。

30
00:01:23,773 --> 00:01:25,360
 、そして何度も何度も。

31
00:01:26,860 --> 00:01:28,475
ここから現れるポイントのパターンがサ

32
00:01:28,475 --> 00:01:30,180
イクルに閉じ込められることがあります。

33
00:01:31,440 --> 00:01:34,700
また、シーケンスがある種の限界点に近づくこともあります。

34
00:01:35,740 --> 00:01:38,453
あるいは、数列がどんどん大きくなり、無限に飛んで

35
00:01:38,453 --> 00:01:41,166
いくのかもしれませ ん。 数学者もそれを、限界点

36
00:01:41,166 --> 00:01:43,880
、まさに無限遠点に近づいていると考えてい ます。

37
00:01:45,240 --> 00:01:48,860
また、全くパターンがなく、無秩序に行動する場合もあります。

38
00:01:50,520 --> 00:01:53,460
驚くべきことは、書き留める可能性のあるあらゆる種類の関数

39
00:01:53,460 --> 00:01:56,400
について、これらの 考えられるさまざまな動作が発生したと

40
00:01:56,400 --> 00:01:58,500
きに視覚化するために何かを行おうとする 

41
00:01:58,500 --> 00:02:01,440
と、非常に複雑なフラクタル パターンが生成されることがよ

42
00:02:01,440 --> 00:02:02,280
くあることです。

43
00:02:03,540 --> 00:02:05,705
前回のビデオをご覧になった方は、すでにこの素晴らしい例を 

44
00:02:05,705 --> 00:02:06,900
1 つご覧になったことでしょう。

45
00:02:07,400 --> 00:02:10,330
多項式 p の根を求めるニュートン法と呼ばれるアル

46
00:02:10,330 --> 00:02:13,260
ゴリズムがあり、 その仕組みは基本的に、x から 

47
00:02:13,260 --> 00:02:16,307
x を引いた p を x の p 素数で割って、p 

48
00:02:16,307 --> 00:02:19,120
素数を導関数とする式を繰り返し繰り返すことです。

49
00:02:19,820 --> 00:02:23,291
初期シード値が多項式の根 (x の p が 0 

50
00:02:23,291 --> 00:02:26,763
に等しい値) の 緩やかな近傍にある場合、この手

51
00:02:26,763 --> 00:02:30,380
順はその根にすぐに収束する一連の値 を生成します。

52
00:02:30,660 --> 00:02:32,620
これが、実際に役立つアルゴリズムとなる理由です。

53
00:02:33,520 --> 00:02:36,475
しかし、その後、こ れを複素平面で実行しようとしました。

54
00:02:36,475 --> 00:02:39,324
 多くの考えられるシード値を調べ、これらのシード値の 

55
00:02:39,324 --> 00:02:42,280
それぞれが複素平面のどのルートに到達するかを調べました。

56
00:02:42,280 --> 00:02:45,712
次に、各ルートに色を関連付 け、そのピクセルから

57
00:02:45,712 --> 00:02:50,002
始まるシード値が最終的にどのルートに到達するかに基づいて、 

58
00:02:50,002 --> 00:02:52,720
プレーンの各ピクセルに色を付けました。

59
00:02:53,740 --> 00:02:55,758
私たちが得た結果は、色の間に大ま 

60
00:02:55,758 --> 00:02:59,320
かなフラクタル境界がある、非常に複雑な写真のいくつかでした。

61
00:03:02,080 --> 00:03:05,875
この例では、実際に反復している関数を見ると、たとえば、z 

62
00:03:05,875 --> 00:03:08,885
3 乗マイナス 1 のような多項式の特定の選択

63
00:03:08,885 --> 00:03:11,895
について、ある多項 式を別の多項式で割ったよう

64
00:03:11,895 --> 00:03:14,120
に式全体を書き直すことができます。

65
00:03:15,019 --> 00:03:18,040
数学者はこの種の関数を有理関数と呼びます。

66
00:03:18,640 --> 00:03:20,913
そして、これがニュートンの 方法から生じたと

67
00:03:20,913 --> 00:03:23,186
いう事実を忘れた場合、他の有理関数を反復する

68
00:03:23,186 --> 00:03:25,460
と何が起こるかを尋ねる ことも当然できます。

69
00:03:26,120 --> 00:03:29,269
そして実際、これはまさに数学者のピエール・ファトゥとガス 

70
00:03:29,269 --> 00:03:32,420
トン・ジュリアが第一次世界大戦直後の数年間に行ったことだ。

71
00:03:32,420 --> 00:03:35,267
そして、彼らは、これ らの有理関数を反復すると何が起

72
00:03:35,267 --> 00:03:38,005
こるかについて、驚くほど豊富な理論を構築しました。

73
00:03:38,005 --> 00:03:40,853
 あなた や私のようにこれを視覚化するコンピューター

74
00:03:40,853 --> 00:03:43,920
が彼らになかったことを考えると、これは特に印 象的です。

75
00:03:44,400 --> 00:03:46,380
この 2 つの名前は後で出てくるので覚えておいてください。

76
00:03:47,160 --> 00:03:51,040
このように研究できる有 理関数とその結果として生じる

77
00:03:51,040 --> 00:03:54,920
フラクタルの最も一般的な例は、最も単純な関数の 1 

78
00:03:54,920 --> 00:03:58,800
つである z 二乗プラス c (c は定数) です。

79
00:03:59,880 --> 00:04:01,838
これは多くの人にと って少なくともある程度は

80
00:04:01,838 --> 00:04:03,796
馴染みのあるものだと思いますが、後で説明する

81
00:04:03,796 --> 00:04:05,754
準備を整えるのに役立 つので、ここで簡単にス

82
00:04:05,754 --> 00:04:07,980
トーリーを要約しておくことは確かに害はありません。

83
00:04:07,980 --> 00:04:11,769
このゲームで は、c を変更可能な値として考え

84
00:04:11,769 --> 00:04:15,560
、この移動可能な黄色の点として表示され ます。

85
00:04:16,200 --> 00:04:18,678
実際の反復プロセスでは、常に z 

86
00:04:18,678 --> 00:04:21,740
の初期値が 0 に等しい状態で開始します。

87
00:04:22,640 --> 00:04:24,888
したがって、この関数を 1 回繰り返し、z 

88
00:04:24,888 --> 00:04:27,240
2 乗と c を実行すると、c が得られます。

89
00:04:27,900 --> 00:04:30,971
その値を関数に代入 して 2 回目の反復を行うと、c 

90
00:04:30,971 --> 00:04:33,360
の 2 乗に c を加えた値が得られます。

91
00:04:33,960 --> 00:04:38,295
ここで値 c を変更すると、2 

92
00:04:38,295 --> 00:04:45,340
番目の値がどのように同期して移動するかがわかります。

93
00:04:45,340 --> 00:04:48,251
次に、その 2 番目の値を接続して z3 

94
00:04:48,251 --> 00:04:51,439
を取得し、その 3 番目の値を接続して z4 

95
00:04:51,439 --> 00:04:55,460
を取得し、このように続け て、値のチェーンを視覚化します。

96
00:04:55,460 --> 00:04:57,154
したがって、最初の多くの値に対して、c 

97
00:04:57,154 --> 00:04:59,017
のいくつかの選択肢に対して、 これを何度も繰

98
00:04:59,017 --> 00:05:01,220
り返しても、このプロセスは制限されたままになります。

99
00:05:01,220 --> 00:05:02,020
今でも画面上ですべてを見ることができ ます。

100
00:05:02,020 --> 00:05:05,176
また、爆発しているように見えることもあり、2 

101
00:05:05,176 --> 00:05:07,921
倍の大きさになると無限大まで爆発するこ 

102
00:05:07,921 --> 00:05:09,980
とを実際に示すことができます。

103
00:05:09,980 --> 00:05:13,553
境界が黒に留まる平面の点を色付けし、プロセスが無 

104
00:05:13,553 --> 00:05:17,412
限に向かってどれだけ速く突入するかに基づいて発散値に別

105
00:05:17,412 --> 00:05:21,271
の色のグラデーションを 割り当てると、数学全体の中で最

106
00:05:21,271 --> 00:05:25,560
も象徴的な画像の 1 つが得られます。 マンデ ルブロ集合。

107
00:05:25,560 --> 00:05:27,445
ちなみに、このインタラクティブなドットとスティッ

108
00:05:27,445 --> 00:05:29,251
クによる軌跡の視覚化は、Ben Spa rk 

109
00:05:29,251 --> 00:05:31,215
のイラストと、彼がマンデルブロ集合について行った 

110
00:05:31,215 --> 00:05:33,100
Numberphile のビデオに大きく影響を 

111
00:05:33,100 --> 00:05:35,300
受けています。 これは素晴らしいので、ぜひご覧ください。

112
00:05:35,300 --> 00:05:40,193
正直、面白すぎてここで再実装しないのはもったいな 

113
00:05:40,193 --> 00:05:41,760
いと思いました。

114
00:05:41,760 --> 00:05:45,440
ako に関するインタラクティブな記事も強くお勧めします。

115
00:05:45,440 --> 00:05:47,501
まだ読んでい ない人のために、

116
00:05:47,501 --> 00:05:49,700
これらすべてについて説明します。

117
00:05:49,700 --> 00:05:52,513
ベン・スパークのイ ラストの素晴らしい点は、

118
00:05:52,513 --> 00:05:55,326
マンデルブロ集合のさまざまな部分が実際に何を

119
00:05:55,326 --> 00:05:58,140
表しているのかを明らかに していることです。

120
00:05:58,940 --> 00:06:01,207
この最大のカーディオイド セクションには c 

121
00:06:01,207 --> 00:06:02,784
の値が含まれているため、プロセ 

122
00:06:02,784 --> 00:06:04,460
スは最終的にある限界に収束します。

123
00:06:05,280 --> 00:06:08,604
左側の大きな円は、プロセスが 2 つの値の間 

124
00:06:08,604 --> 00:06:12,796
のサイクルに閉じ込められる値を表し、次に上下の円は、プロセ

125
00:06:12,796 --> 00:06:16,843
スが 3 つの値のサイクルに閉じ込められる値を示します。

126
00:06:16,843 --> 00:06:18,000
 以下同様です。

127
00:06:18,000 --> 00:06:19,640
これら の小さな島にはそれぞれ独自の意味があります。

128
00:06:19,640 --> 00:06:21,629
また、このマンデルブロ集合と以前に見ていた 

129
00:06:21,629 --> 00:06:23,799
ニュートン フラクタルの間には、基礎となる関数が

130
00:06:23,799 --> 00:06:25,788
異なるだけでなく、それぞれがどのように構築 

131
00:06:25,788 --> 00:06:28,320
されるかという重要な違いがあることにも注目してください。

132
00:06:28,320 --> 00:06:30,743
マンデルブロ集合の場合、一貫した シード値 

133
00:06:30,743 --> 00:06:33,497
z はゼロですが、微調整しているのはパラメーター 

134
00:06:33,497 --> 00:06:35,700
c であり、関数自体を変更 しています。

135
00:06:35,700 --> 00:06:39,500
つまり、ここで見ているのはパラメータ空間と呼ばれるものです。

136
00:06:39,820 --> 00:06:42,230
しかし、ニュート ンのフラクタルでは、単一

137
00:06:42,230 --> 00:06:44,640
の不変関数がありますが、各ピクセルに関連付

138
00:06:44,640 --> 00:06:47,280
けられるのは、プロセス の異なるシード値です。

139
00:06:47,280 --> 00:06:49,184
もちろん、マップ z の 2 乗に c 

140
00:06:49,184 --> 00:06:51,754
を加えたもので同じゲームをプレイする こともできます。

141
00:06:51,754 --> 00:06:54,324
 c をある定数に固定し、ピクセルがさまざまな初期値 

142
00:06:54,324 --> 00:06:56,800
z naught を表すようにする こともできます。

143
00:06:57,680 --> 00:06:59,918
したがって、マンデルブロ集合の各ピクセル

144
00:06:59,918 --> 00:07:02,829
は固有の関数に対応しますが、 右側の画像はそれぞれ 

145
00:07:02,829 --> 00:07:04,620
1 つの関数に対応するだけです。

146
00:07:05,460 --> 00:07:07,279
パラメータ c を変更する と

147
00:07:07,279 --> 00:07:09,220
、右側の画像全体が変更されます。

148
00:07:10,020 --> 00:07:12,809
もう一度明確にしておきますが、適用されるルール 

149
00:07:12,809 --> 00:07:15,831
は、プロセスが制限されたままの場合はピクセルを黒に色

150
00:07:15,831 --> 00:07:17,690
付けし、無限に発散する速度に基 

151
00:07:17,690 --> 00:07:20,712
づいて、無限に発散するピクセルにある種のグラデーショ

152
00:07:20,712 --> 00:07:22,340
ンを適用するというものです。

153
00:07:23,380 --> 00:07:26,601
原理的には、考えると気が遠くなりそうですが、c と z 

154
00:07:26,601 --> 00:07:28,902
のすべての組み合わ せが存在しない 4 

155
00:07:28,902 --> 00:07:32,123
次元空間があり、ここで私たちがやっていることは、その想 

156
00:07:32,123 --> 00:07:35,344
像を絶する個々の 2 次元スライスを調べているようなもの

157
00:07:35,344 --> 00:07:36,380
です。 パターン。

158
00:07:37,740 --> 00:07:40,377
右側の画像がジュリア セットまたはジュリア 

159
00:07:40,377 --> 00:07:42,534
フラクタルと呼ばれているのをよく聞 

160
00:07:42,534 --> 00:07:46,130
いたり読んだりしますが、私がこのすべてのことを初めて知ったと

161
00:07:46,130 --> 00:07:49,726
き、これが用語の意 味であるという誤解を抱いていたことを認め

162
00:07:49,726 --> 00:07:52,963
ます。 ジュリア集合とは、特に z 2 乗プラス c 

163
00:07:52,963 --> 00:07:55,720
の場合を指し、さらに内側の黒い領域を指します。

164
00:07:56,440 --> 00:07:59,700
ただし、ジュリア 集合という用語には、より一般的な定義が

165
00:07:59,700 --> 00:08:02,960
あり、内部ではなく、これらの領域の境 界のみを指します。

166
00:08:03,900 --> 00:08:07,186
より具体的な定義の準備を整え、冒頭で述べた最初の目標 

167
00:08:07,186 --> 00:08:09,986
に向けて少しでも前進するには、一歩下がって、今

168
00:08:09,986 --> 00:08:12,786
まさに自分が数学者であり 、これらすべてを発見

169
00:08:12,786 --> 00:08:15,100
していると想像してみる価値があります。

170
00:08:15,740 --> 00:08:18,880
これに基づいて 理論を構築するには実際に何をしますか?

171
00:08:19,260 --> 00:08:21,314
美しい写真を見るのは別のことです 

172
00:08:21,314 --> 00:08:24,214
が、実際にすべてを理解したい場合は、どのような質

173
00:08:24,214 --> 00:08:25,060
問をしますか?

174
00:08:26,020 --> 00:08:28,837
一般に、何か複雑なことを理解したい場合は、単純な動作

175
00:08:28,837 --> 00:08:31,112
、できれば最も単純な動作をするシステムの 

176
00:08:31,112 --> 00:08:34,254
部分があるかどうかを尋ねることから始めるのが良いでしょう。

177
00:08:34,254 --> 00:08:36,205
 この例では、それは、いつ動作する 

178
00:08:36,205 --> 00:08:39,022
かを尋ねることを意味します。 プロセスはその場に固定

179
00:08:39,022 --> 00:08:41,839
されたままになります。 つまり、z の f は z 

180
00:08:41,839 --> 00:08:43,140
に等しいということです。

181
00:08:43,740 --> 00:08:44,907
これはかなり退屈なダイナミクスです。

182
00:08:44,907 --> 00:08:45,880
 あなたも同意すると思います。

183
00:08:46,500 --> 00:08:49,680
このプロパティを持つ値を関数の固定点と呼びます。

184
00:08:49,680 --> 00:08:53,460
ニュートン法から生じ る関数の場合、設計によ

185
00:08:53,460 --> 00:08:57,240
り、関連する多項式の根に固定点があり ます。

186
00:08:57,840 --> 00:09:01,217
z の p が 0 に等しい場合、式全体が単純に 

187
00:09:01,217 --> 00:09:03,920
z に等しいことを自 分で確認できます。

188
00:09:04,300 --> 00:09:05,660
不動点とはそういう意味です。

189
00:09:06,560 --> 00:09:11,068
演習に興味がある場合は、少し 立ち止まって、こ

190
00:09:11,068 --> 00:09:15,968
のマンデルブロ集合関数の不動点、z 2 乗プラス 

191
00:09:15,968 --> 00:09:20,280
c を計算することを楽しむ かもしれません。

192
00:09:20,280 --> 00:09:24,525
より一般的には、この式が z に等しいかどうかを問うこ 

193
00:09:24,525 --> 00:09:28,316
とは、常に何らかの多項式の根を求めるように並べ替え

194
00:09:28,316 --> 00:09:32,410
ることができる ため、有理関数は常に固定点を持ちます。

195
00:09:32,410 --> 00:09:34,836
 また、代数の基本定理から、こ 

196
00:09:34,836 --> 00:09:38,475
れには解が必要であり、通常は解が必要となります。

197
00:09:38,475 --> 00:09:39,840
 この式の最高度。

198
00:09:39,840 --> 00:09:42,184
ちなみに、これは、ニュートン法を使用してそれらの不

199
00:09:42,184 --> 00:09:44,340
動点を見つけることもできる ことを意味します。

200
00:09:44,340 --> 00:09:47,060
 おそらく、それは現時点では少しメタすぎるかもしれません。

201
00:09:47,060 --> 00:09:50,849
固定点について尋ねるだけなら簡単かもしれませんが、

202
00:09:50,849 --> 00:09:53,274
ダイナミクス全体、つまり私たち 

203
00:09:53,274 --> 00:09:57,064
が見ている図を理解するための重要な考え方は、安定性

204
00:09:57,064 --> 00:09:58,580
を理解することです。

205
00:09:58,580 --> 00:10:01,330
近くの点 が固定点に引き寄せられる傾向がある場合、その固定

206
00:10:01,330 --> 00:10:04,080
点は引き付けられ、遠ざけられる場合は反発 すると言います。

207
00:10:04,080 --> 00:10:06,340
そしてこれは、関数の導関数を使用して

208
00:10:06,340 --> 00:10:08,600
実際に明示的に計算できる ものです。

209
00:10:08,980 --> 00:10:11,765
象徴的に言えば、複素関数の導関数を取得すると、実際

210
00:10:11,765 --> 00:10:14,551
の関数の場合とま ったく同じように見えますが、z 

211
00:10:14,551 --> 00:10:17,560
の 2 乗などの導関数は z の 2 倍になりま す。

212
00:10:17,560 --> 00:10:19,054
しかし、幾何学的には、これが何を意味するの

213
00:10:19,054 --> 00:10:20,620
かを解釈する非常に素晴らしい方法があります。

214
00:10:20,620 --> 00:10:23,752
たとえば、入 力 1 では、この特定の関数の導関数は 

215
00:10:23,752 --> 00:10:26,420
2 と評価されます。 これが示しているのは、 

216
00:10:26,420 --> 00:10:29,435
その入力の周囲の非常に小さな近傍に注目し、その小さな

217
00:10:29,435 --> 00:10:32,452
点内のすべての点に何が起こる かを追跡すると、という

218
00:10:32,452 --> 00:10:35,468
ことです。 関数を適用するときに近傍 (この場合は 

219
00:10:35,468 --> 00:10:37,555
z の 2 乗) を適用すると、2 

220
00:10:37,555 --> 00:10:39,180
を掛けているように見えます。

221
00:10:39,580 --> 00:10:41,400
これが 2 の導関数の意味で す。

222
00:10:43,240 --> 00:10:45,900
別の例として、入力 i を見てみましょう。

223
00:10:46,500 --> 00:10:48,629
この関数が入力をマイナス 1、つまり i 

224
00:10:48,629 --> 00:10:50,860
の 2 乗した値に移動することがわかります。

225
00:10:51,580 --> 00:10:54,377
しかし、この値での導関数は i の 2 

226
00:10:54,377 --> 00:10:58,293
倍であるという追加情報により、その点の周りを拡大して、こ

227
00:10:58,293 --> 00:11:01,370
の小さな近傍での関 数の動作を見ると、2i 

228
00:11:01,370 --> 00:11:05,006
による乗算のように見えるという追加の図が得られます。

229
00:11:05,006 --> 00:11:07,383
 この場合、90 度の回転と 2 

230
00:11:07,383 --> 00:11:11,160
倍の拡大を組み合わせたように見えることを意味 します。

231
00:11:14,860 --> 00:11:18,864
安定性を分析する目的で、ここで考慮するのは成長係数と縮小 

232
00:11:18,864 --> 00:11:22,040
係数だけであり、回転部分は重要ではありません。

233
00:11:22,520 --> 00:11:26,228
したがって、固定点で の関数の導関数を計算し、その結果の絶

234
00:11:26,228 --> 00:11:29,041
対値が 1 より小さい場合、固定点が引き付 

235
00:11:29,041 --> 00:11:32,749
けられており、近くの点が固定点に向かって接近する傾向がある

236
00:11:32,749 --> 00:11:33,900
ことがわかります。

237
00:11:34,360 --> 00:11:37,305
その微分値の絶対値が 1 より大きい場合、固定点が反発

238
00:11:37,305 --> 00:11:40,360
しており、隣接する点を押しのけ ていることがわかります。

239
00:11:41,640 --> 00:11:44,948
たとえば、ニュートンのマップ式の導関数を計算し 

240
00:11:44,948 --> 00:11:48,808
、いくつかのことを少し単純化すると、次のような結果が得ら

241
00:11:48,808 --> 00:11:49,360
れます。

242
00:11:50,380 --> 00:11:53,366
したがって、z が固定点である場合 (この文脈では、z 

243
00:11:53,366 --> 00:11:55,926
が多項式 p の根の 1 つであることを意味し 

244
00:11:55,926 --> 00:11:58,700
ます)、この導関数は 1 より小さいだけでなく、0 

245
00:11:58,700 --> 00:11:59,660
に等しくなります。

246
00:12:00,840 --> 00:12:03,153
これらは、これらの点の周囲の 近傍が単に縮小す

247
00:12:03,153 --> 00:12:05,466
るだけでなく、大幅に縮小することを意味するため

248
00:12:05,466 --> 00:12:07,780
、超魅力的な固定点と呼ば れることもあります。

249
00:12:08,660 --> 00:12:11,446
繰り返しになりますが、ニュートン法の目的は、

250
00:12:11,446 --> 00:12:14,233
できるだけ早く根に向か う反復を生成すること

251
00:12:14,233 --> 00:12:17,020
であるため、これは一種の設計によるものです。

252
00:12:18,020 --> 00:12:20,290
z の 2 乗と c の例 を引き出すと、その

253
00:12:20,290 --> 00:12:22,560
固定点を見つける最初の演習を行った場合、次のス

254
00:12:22,560 --> 00:12:24,732
テップは、それらの固定点の少なくと も 1 

255
00:12:24,732 --> 00:12:27,200
つがいつ引き付けられるのかを尋ねることになります。

256
00:12:27,820 --> 00:12:30,100
c のどの値に対してこれは当てはまりま すか?

257
00:12:31,040 --> 00:12:34,007
それが十分な課題ではない場合は、見つかった結果を使

258
00:12:34,007 --> 00:12:36,974
用して、この条件がマン デルブロ集合の主要なカーデ

259
00:12:36,974 --> 00:12:40,060
ィオイド形状に対応していることを示してみてください。

260
00:12:40,680 --> 00:12:43,400
これは明示的に計算できるもので、非常に優れています。

261
00:12:45,320 --> 00:12:47,574
次のステップとしては、サイクルについて尋ねるのが自

262
00:12:47,574 --> 00:12:49,920
然ですが、ここからが本当に興味深いことに なります。

263
00:12:50,720 --> 00:12:54,190
z の f が z ではなく、他の値であり、その値が 

264
00:12:54,190 --> 00:12:56,760
z に戻った場合、それは 2 つのサイク

265
00:12:56,760 --> 00:12:58,560
ルに陥ったことを意味します。

266
00:12:59,320 --> 00:13:01,540
f of f of z を評価し、それを 

267
00:13:01,540 --> 00:13:03,867
z に等しく設定すること で、この種の 2 

268
00:13:03,867 --> 00:13:06,300
つのサイクルを明示的に見つけることができます。

269
00:13:07,120 --> 00:13:10,026
たとえば、z の 2 乗と c のマップでは、f 

270
00:13:10,026 --> 00:13:12,700
of f of z が次のように展開されます。

271
00:13:13,340 --> 00:13:15,080
ちょっと面倒ですが、それほどひどいものではありません。

272
00:13:15,560 --> 00:13:17,369
強調すべき主な点は、最終的には 4 

273
00:13:17,369 --> 00:13:19,380
次方程式を解くことになるということです。

274
00:13:20,160 --> 00:13:23,541
ただし、固定点はこの方程式の解にもなるため、技術的には 

275
00:13:23,541 --> 00:13:26,681
2 つのサイクル がこの方程式の解から元の固定点方程

276
00:13:26,681 --> 00:13:29,700
式の解を引いたものになることに注意して ください。

277
00:13:31,080 --> 00:13:33,824
同様に、同じアイデアを使用して、 f とそれ自体を n 

278
00:13:33,824 --> 00:13:35,686
回異なる回数合成することで、n サイ 

279
00:13:35,686 --> 00:13:36,960
クルを探すことができます。

280
00:13:37,880 --> 00:13:41,889
すぐに得られる明示的な表現は非常に乱雑になりますが、この 

281
00:13:41,889 --> 00:13:45,069
仮説的なプロセスに基づいて何サイクルが予想され

282
00:13:45,069 --> 00:13:47,420
るかを尋ねることはまだ明確で す。

283
00:13:47,960 --> 00:13:51,276
単純な z の 2 乗と c の例に固執すると、それ

284
00:13:51,276 --> 00:13:54,464
自体を合成すると、 4 次の多項式が得られ、次に 

285
00:13:54,464 --> 00:13:57,526
8 次の多項式が得られ、次に 16 次の多項式 

286
00:13:57,526 --> 00:14:00,459
が得られ、というように指数関数的に増加します。

287
00:14:00,459 --> 00:14:01,480
 多項式の次数。

288
00:14:02,360 --> 00:14:04,598
したがって、原理 的には、100 

289
00:14:04,598 --> 00:14:08,549
万の周期で何サイクルになるかを尋ねた場合、それは 2 から 

290
00:14:08,549 --> 00:14:12,368
100 万の次数を持つまったく非常識な多項式を解くのと同じ

291
00:14:12,368 --> 00:14:14,080
であることがわか ります。

292
00:14:14,880 --> 00:14:18,555
繰り返しになりますが、代数学の基本定理では、複素平面内で 

293
00:14:18,555 --> 00:14:22,358
2 から 10 0 万点程度の何かが見つかると予想されます。

294
00:14:22,358 --> 00:14:24,640
 これはまさにこのように循環します。

295
00:14:25,700 --> 00:14:28,725
さらに一般的には、任意の有理マップでは、その動作が周期 

296
00:14:28,725 --> 00:14:31,860
n のサイクルに該当する値を常に 見つけることができます。

297
00:14:32,360 --> 00:14:36,480
最終的には、おそらく非常識な多項式を解くことになり ます。

298
00:14:37,180 --> 00:14:40,249
そして、この例と同様に、そのような周期点の数は 

299
00:14:40,249 --> 00:14:42,680
n とともに指数関数 的に増加します。

300
00:14:43,980 --> 00:14:47,446
前回のニュートンのフラクタル動画ではあまり触れませんでした 

301
00:14:47,446 --> 00:14:50,566
が、このような処理であっても、何らかのサイクルに該当す

302
00:14:50,566 --> 00:14:53,340
る点が無数にあると 考えるとなんだか不思議です。

303
00:14:54,020 --> 00:14:56,947
ただし、ほとんどの場合、これらの点は色付き 

304
00:14:56,947 --> 00:15:00,140
の領域間の境界のどこかにあり、それらのいずれかに

305
00:15:00,140 --> 00:15:03,600
到達する確率はゼロ であるため、実際には現れません。

306
00:15:04,240 --> 00:15:06,773
実際にこれらのいずれかに該当するかどうかで重要 

307
00:15:06,773 --> 00:15:09,941
なのは、サイクルの 1 つが引き付けられているかどうかです。

308
00:15:09,941 --> 00:15:11,841
 つまり、そのサイクルの値の周囲の 

309
00:15:11,841 --> 00:15:14,586
点の近傍がそのサイクルに引き寄せられる傾向があるとい

310
00:15:14,586 --> 00:15:15,220
う意味です。

311
00:15:16,460 --> 00:15:19,115
数値的手法に興味がある人に とって非常に関連性の高

312
00:15:19,115 --> 00:15:21,770
い質問は、このニュートンの写像プロセスに引き付けサ

313
00:15:21,770 --> 00:15:23,469
イクルが存在す るかどうかです。

314
00:15:23,469 --> 00:15:26,124
 存在する場合、最初の推測がそのサイクルに閉じ込め

315
00:15:26,124 --> 00:15:28,779
られ、決して見つからな い可能性がゼロではないこと

316
00:15:28,779 --> 00:15:30,160
を意味するからです。 根。

317
00:15:31,160 --> 00:15:32,360
ここでの答えは実際には「はい」です。

318
00:15:32,360 --> 00:15:35,188
より明 確に言うと、z の 3 乗マイナス 

319
00:15:35,188 --> 00:15:38,017
2z プラス 2 の根を求めようとして、ニュ

320
00:15:38,017 --> 00:15:40,459
ートン法を使用し ている場合、値 0 

321
00:15:40,459 --> 00:15:44,060
付近で始まる小さなクラスターに何が起こるかを観察します。

322
00:15:44,060 --> 00:15:46,260
前後に跳ね返る 感じです。

323
00:15:47,260 --> 00:15:49,850
さて、わかりました。 この場合、最初に使用したクラスターが少

324
00:15:49,850 --> 00:15:52,440
し大きすぎたので、 外側のポイントの一部が吹き飛ばされます。

325
00:15:52,780 --> 00:15:54,870
しかし、より小さなクラスターから始めると次のよ 

326
00:15:54,870 --> 00:15:55,480
うになります。

327
00:15:56,120 --> 00:15:57,760
すべての点が実際に 0 と 1 

328
00:15:57,760 --> 00:16:00,427
の間のサイクルに向かって縮小していることに注目して 

329
00:16:00,427 --> 00:16:00,940
ください。

330
00:16:01,480 --> 00:16:03,260
ランダムなシードでこれを達成する可能

331
00:16:03,260 --> 00:16:05,040
性は低いですが、間違いなく可能です。

332
00:16:06,080 --> 00:16:09,185
ちなみに、このようなサイクルが引き付けられている

333
00:16:09,185 --> 00:16:12,290
ことを確認するために実行できる演 習は、z の 

334
00:16:12,290 --> 00:16:15,395
f の f の導関数を計算し、入力ゼロでこの導関

335
00:16:15,395 --> 00:16:18,760
数の大きさが 1 未満であることを確認することです。

336
00:16:19,760 --> 00:16:22,173
私の心を少し驚かせたのは、どの 3 次多 

337
00:16:22,173 --> 00:16:25,505
項式に誘引サイクルがあるかを視覚化しようとすると何が起こる

338
00:16:25,505 --> 00:16:26,540
かということです。

339
00:16:27,080 --> 00:16:29,901
うまくいけば、ニュートンの方法が根を見つけるのに少しでもう

340
00:16:29,901 --> 00:16:32,820
まくいくなら、そのような誘引サイクルはまれに なるはずです。

341
00:16:33,960 --> 00:16:37,185
まず、今見ている 1 つの例をよりわかりやすく視覚化

342
00:16:37,185 --> 00:16:40,410
するために、 以前と同じフラクタルを描画し、その点か

343
00:16:40,410 --> 00:16:43,760
ら始まるシード値の傾向に基づいて各点 を色付けします。

344
00:16:44,000 --> 00:16:47,960
ただし、今回は、シード値がルートにまったく近づかない 

345
00:16:47,960 --> 00:16:52,360
場合、ピクセルを黒に着色するという着色ポイントの条件を追加し

346
00:16:52,360 --> 00:16:52,800
ます。

347
00:16:53,760 --> 00:16:56,107
ルートを微調整する場合、つまりさまざまな 3 

348
00:16:56,107 --> 00:16:58,761
次多項式を試している場合、黒いピクセルがまったく表 

349
00:16:58,761 --> 00:17:01,210
示されるようにルートを配置する場所を見つけるのは

350
00:17:01,210 --> 00:17:03,660
実際には非常に困難であることに注意してください。

351
00:17:04,319 --> 00:17:05,949
ここで小さなスイートスポットを見つけるこ

352
00:17:05,949 --> 00:17:07,660
とができますが、それは間違いなくまれです。

353
00:17:08,680 --> 00:17:10,407
ここで私が望んでいるのは、どの 

354
00:17:10,407 --> 00:17:13,321
三次多項式が誘引サイクルを持っているかを示す方法で、単

355
00:17:13,321 --> 00:17:15,804
一の画像を使用してすべての可能な三次多項式を 

356
00:17:15,804 --> 00:17:17,640
一度に視覚化する何らかの方法です。

357
00:17:18,880 --> 00:17:21,594
幸いなことに、これらの多項式のいずれかに誘引サイクルがある 

358
00:17:21,594 --> 00:17:23,404
かどうかをテストする非常に簡単な方法があ

359
00:17:23,404 --> 00:17:24,400
ることがわかりました。

360
00:17:25,060 --> 00:17:27,311
あなたがしなければならない のは、3 

361
00:17:27,311 --> 00:17:30,511
つのルートの平均、つまりこの重心にあるシード値を確認す

362
00:17:30,511 --> 00:17:31,460
ることだけです。

363
00:17:32,100 --> 00:17:34,913
結局のとこ ろ、これはまったく明白ではありません。

364
00:17:34,913 --> 00:17:37,501
 誘引サイクルがある場合、このシード値がその 

365
00:17:37,501 --> 00:17:39,640
誘引サイクルに入ることが保証できます。

366
00:17:40,500 --> 00:17:44,420
つまり、黒い点があるとすれば、これが その一つになります。

367
00:17:45,340 --> 00:17:47,882
この魔法の事実がどこから来たのか知りたい場合は、それは

368
00:17:47,882 --> 00:17:50,520
私たちの良 き友人であるファトゥの定理に由来しています。

369
00:17:50,920 --> 00:17:53,611
彼は、これらの有理マップの 1 つが誘引サイク 

370
00:17:53,611 --> 00:17:56,415
ルを持っている場合、反復関数の導関数がゼロに等しい

371
00:17:56,415 --> 00:17:59,107
値を調べることができ、それらの値の少な くとも 

372
00:17:59,107 --> 00:18:02,360
1 つがそのサイクルに該当する必要があることを示しました。

373
00:18:03,440 --> 00:18:06,140
それは少し奇妙な事実のよ うに思えるかもしれませんが、

374
00:18:06,140 --> 00:18:08,840
大まかな直観としては、サイクルが引き寄せられようとして

375
00:18:08,840 --> 00:18:10,639
いる場合、 その値の少なくとも 1 

376
00:18:10,639 --> 00:18:13,340
つは非常に小さな微分値を持つはずであり、そこから縮小が

377
00:18:13,340 --> 00:18:14,540
生じることにな ります。

378
00:18:15,100 --> 00:18:18,451
そしてこれは、サイクル内のその値が導関数が単に小さいだ

379
00:18:18,451 --> 00:18:21,803
けでなくゼロに 等しい点の近くに位置し、その点が最終的

380
00:18:21,803 --> 00:18:25,280
にサイクルに吸い込まれるのに十分近いこ とを意味します。

381
00:18:26,560 --> 00:18:29,586
この事実は、マンデルブロ集合では、ゼロに等しいシード値 

382
00:18:29,586 --> 00:18:32,397
z を 1 つだけ使用していても、非常に完全で興味深

383
00:18:32,397 --> 00:18:35,100
い全体像を得るのに十分である理由も正当化し ます。

384
00:18:35,320 --> 00:18:37,821
安定したサイクルが見つかると、その 

385
00:18:37,821 --> 00:18:40,600
1 つのシード値が必ずそれを見つけます。

386
00:18:41,500 --> 00:18:45,600
今日は宿題と演習を少しやりすぎているような気がしますが、

387
00:18:45,600 --> 00:18:49,700
もし興味があ るなら、ニュートン法から生じる関数で見つけ

388
00:18:49,700 --> 00:18:52,775
た導関数式を振り返るのも楽 しいでしょう。

389
00:18:52,775 --> 00:18:56,875
 ファトゥーのこの素晴らしい定理を使って、この根の中点 

390
00:18:56,875 --> 00:19:00,975
を確認するだけで十分であるという、三次多項式に関する魔法

391
00:19:00,975 --> 00:19:02,440
の事実を示し ます。

392
00:19:03,240 --> 00:19:04,845
ただし、正直なところ、これらはすべて

393
00:19:04,845 --> 00:19:06,540
、実際には心配する必要のない詳細です。

394
00:19:06,840 --> 00:19:09,091
結果として、これらの多項式のすべてではなく 1 

395
00:19:09,091 --> 00:19:11,342
つの点だけを調べることで、これらの多項式の 1 

396
00:19:11,342 --> 00:19:13,969
つに誘引サイクルがあるかどうかのテストを実行できるという

397
00:19:13,969 --> 00:19:14,720
ことになります。

398
00:19:15,480 --> 00:19:16,992
このおかげで、本当に素 晴らしい

399
00:19:16,992 --> 00:19:18,600
図を実際に生成することができます。

400
00:19:19,380 --> 00:19:21,838
これが機能する方法は、2 つのルートを所定の位置に固定 

401
00:19:21,838 --> 00:19:24,297
することです。 それらを z が負の 1 に等しく、z 

402
00:19:24,297 --> 00:19:26,844
が正の 1 に等しいとします。 その後、3 番目のルート 

403
00:19:26,844 --> 00:19:29,040
(ラムダと呼ぶことにします) の周りを移動します。

404
00:19:30,480 --> 00:19:32,931
覚えておいてください、私たちが探している重 

405
00:19:32,931 --> 00:19:35,160
要な特徴は、重心の点が黒である場合です。

406
00:19:35,860 --> 00:19:38,957
そこで、各ピクセルがラムダの 1 つの可 

407
00:19:38,957 --> 00:19:42,940
能な選択肢に対応する 2 番目の図を右側に描画します。

408
00:19:43,860 --> 00:19:46,177
これから行うことは、3 つの ルートの中点の

409
00:19:46,177 --> 00:19:48,600
色に基づいてそのピクセルに色を付けることです。

410
00:19:49,600 --> 00:19:52,625
これが少しわかりにくいと 感じても、まったく問題ありません。

411
00:19:52,625 --> 00:19:54,440
 ここには多くの層が関与しています。

412
00:19:55,020 --> 00:19:57,072
右側の各ピクセルは 、このパラメーター 

413
00:19:57,072 --> 00:19:59,124
lambda によって決定される一意の多

414
00:19:59,124 --> 00:20:01,280
項式に対応することを覚えておいてください。

415
00:20:02,000 --> 00:20:04,740
実際、これをパラメータ空間と呼ぶこともできます。

416
00:20:05,080 --> 00:20:05,580
おなじみですね？

417
00:20:13,740 --> 00:20:16,841
このパラメータ空間内の点は、対応する多項式

418
00:20:16,841 --> 00:20:19,647
のニュートン法プロセスによって吸引サ 

419
00:20:19,647 --> 00:20:23,340
イクルが生成される場合に限り、黒く色付けされます。

420
00:20:24,260 --> 00:20:25,356
繰り返しになりますが、理解するのに少し時 

421
00:20:25,356 --> 00:20:26,400
間がかかっても心配する必要はありません。

422
00:20:27,840 --> 00:20:30,978
さて、一見したところ、この図には黒い点がまったくないよ 

423
00:20:30,978 --> 00:20:33,780
うに見えるかもしれませんが、これは良い知らせです。

424
00:20:33,940 --> 00:20:35,930
それは、ほとんどの場合、ニュートン法がこ 

425
00:20:35,930 --> 00:20:38,300
のようなサイクルに巻き込まれないことを意味します。

426
00:20:39,000 --> 00:20:41,829
しかし、これを十分にプレビューしたので、これがどこ 

427
00:20:41,829 --> 00:20:43,897
に行くのか正確に理解できたと思います。

428
00:20:43,897 --> 00:20:46,401
 ズームインすると黒い領域が見つかり、その黒い

429
00:20:46,401 --> 00:20:49,340
領域はマンデルブ ロ集合とまったく同じように見えます。

430
00:20:50,020 --> 00:20:52,161
繰り返しになりますが、これらの関数の 1 

431
00:20:52,161 --> 00:20:54,508
つのパラメーターを微調整 する質問をすると、こ

432
00:20:54,508 --> 00:20:57,160
の象徴的なカーディオイドとバブルの形状が得られます。

433
00:20:58,020 --> 00:21:00,417
結論から言えば、この形状はあなたが思 っているほど、z 

434
00:21:00,417 --> 00:21:02,900
の 2 乗と c の例に特有のものではないということです。

435
00:21:03,400 --> 00:21:06,420
これは、このようなプロセスを 使用したパラメーター空間に

436
00:21:06,420 --> 00:21:09,440
関する、より一般的で普遍的なものに関連しているようです。

437
00:21:11,640 --> 00:21:13,019
それでも、差し迫った疑問の 1 

438
00:21:13,019 --> 00:21:15,520
つは、そもそもなぜフラクタルが得られるのかということです。

439
00:21:16,220 --> 00:21:18,166
前回のビデオでは、ニュートン法 

440
00:21:18,166 --> 00:21:21,451
の図が、色の付いた領域の境界の周りに小さな円を描く場合

441
00:21:21,451 --> 00:21:24,736
、実際にはその円には画像か ら利用可能なすべての色が含

442
00:21:24,736 --> 00:21:28,143
まれている必要があるという非常に奇妙な特性があることに 

443
00:21:28,143 --> 00:21:29,360
ついて説明しました。

444
00:21:30,280 --> 00:21:31,510
そしてこれは、あらゆる合理的なマッ

445
00:21:31,510 --> 00:21:32,740
プにさらに一般的に当てはまります。

446
00:21:33,140 --> 00:21:35,307
どの制限動作ポイ ントが該当するか 

447
00:21:35,307 --> 00:21:38,559
(どの制限点、どのリミット サイクル、または無限に向か

448
00:21:38,559 --> 00:21:41,811
う傾向があるか など) に基づいて領域に色を割り当てる

449
00:21:41,811 --> 00:21:44,942
場合、描画する小さな円には、これらの制限動作の 1 

450
00:21:44,942 --> 00:21:48,194
つだけを持つ点が含まれるか、 、またはそれらすべてにポ

451
00:21:48,194 --> 00:21:49,640
イントが含まれています。

452
00:21:49,820 --> 00:21:51,200
決して その中間ではありません。

453
00:21:51,959 --> 00:21:54,755
したがって、少なくとも 3 つの色がある場合、このプロパ

454
00:21:54,755 --> 00:21:57,450
ティは、境界が 決して滑らかではないことを意味します。

455
00:21:57,450 --> 00:22:00,145
 滑らかなセグメントに沿って、すべての色ではなく 2 

456
00:22:00,145 --> 00:22:02,940
つの 色だけに接触する十分に小さな円を描くことができるか

457
00:22:02,940 --> 00:22:03,340
らです。

458
00:22:03,920 --> 00:22:05,696
そして経験的にこれが私たちが目にしているも 

459
00:22:05,696 --> 00:22:07,875
のですが、どれだけズームインしても、これらの境界は常に

460
00:22:07,875 --> 00:22:08,360
大まかです。

461
00:22:08,880 --> 00:22:10,832
さらに、ズームインすると、フレーム 

462
00:22:10,832 --> 00:22:13,652
内で利用可能なすべての色が常に表示されることに気づく

463
00:22:13,652 --> 00:22:14,520
かもしれません。

464
00:22:16,160 --> 00:22:19,379
これは、制限動作が 2 つしかないという文脈における大まか

465
00:22:19,379 --> 00:22:22,376
な境界線を説明するものではありませんが、それでも、私 

466
00:22:22,376 --> 00:22:25,707
がこのビデオに残した未解決の部分は結びつける価値があり、2 

467
00:22:25,707 --> 00:22:28,260
つの重要な用語を導入する良 い口実になります。

468
00:22:28,260 --> 00:22:29,260
 ファトゥセット。

469
00:22:29,940 --> 00:22:33,146
ある点が最終的に何らかの安定した予測可能なパターンに陥 

470
00:22:33,146 --> 00:22:35,322
る場合、それは反復関数の Fatou 

471
00:22:35,322 --> 00:22:37,040
セットの一部であると言います。

472
00:22:37,740 --> 00:22:39,252
これまでに見たすべて のマップに

473
00:22:39,252 --> 00:22:40,860
は、ほぼすべてのものが含まれます。

474
00:22:41,640 --> 00:22:44,478
Julia セットはそれ以外のすべてであり、これま 

475
00:22:44,478 --> 00:22:47,099
でに見た写真では、色付きの領域間の大まかな境界線

476
00:22:47,099 --> 00:22:49,828
であり、ある安定したアトラクターから別の安定した 

477
00:22:49,828 --> 00:22:52,340
アトラクターに移行するときに何が起こるかです。

478
00:22:53,200 --> 00:22:55,861
たとえば、Julia セットには、すべての 

479
00:22:55,861 --> 00:22:58,160
反発サイクルと反発固定点が含まれます。

480
00:22:58,880 --> 00:23:02,087
ただし、Julia セットの典型的なポイントはサ 

481
00:23:02,087 --> 00:23:05,680
イクルではなく、明確なパターンもなく永遠に跳ね返ります。

482
00:23:05,680 --> 00:23:08,987
ここで、Fatou セット内 の点に注目し、その周囲に十

483
00:23:08,987 --> 00:23:12,176
分小さな円盤を描画すると、プロセスに従って、関連する 

484
00:23:12,176 --> 00:23:15,720
安定した動作に陥るにつれて、小さな円盤は最終的に縮小します。

485
00:23:16,240 --> 00:23:18,166
無限に到達する場合 は別ですが、円盤が無限

486
00:23:18,166 --> 00:23:20,093
付近で縮小すると考えることもできますが、そ

487
00:23:20,093 --> 00:23:22,020
れは問題を混乱させ るだけかもしれません。

488
00:23:24,500 --> 00:23:27,634
対照的に、Julia セット上の点の周りに小さな円盤を

489
00:23:27,634 --> 00:23:30,769
描画すると 、その円内の点が離れて独自の動作を行うにつ

490
00:23:30,769 --> 00:23:34,020
れて、時間の経過とともに円盤が拡大する傾向があ ります。

491
00:23:35,540 --> 00:23:37,540
言い換えれば、ジュリア セットの点

492
00:23:37,540 --> 00:23:39,540
は無秩序に動作する傾向があります。

493
00:23:40,080 --> 00:23:42,670
彼らの近くの 隣人は、たとえ非常に近くにいたとし

494
00:23:42,670 --> 00:23:45,260
ても、最終的には質的に異なる行動に陥るでしょう。

495
00:23:46,420 --> 00:23:48,840
しかし、この円盤は単に膨張するだけではありません。

496
00:23:49,360 --> 00:23:52,348
前に述べた多色特性の鍵となるかなり驚くべき 

497
00:23:52,348 --> 00:23:55,608
結果は、このプロセスを実行させると、その小さな円

498
00:23:55,608 --> 00:23:58,189
盤が最終的に非常に膨張し、 最大 2 

499
00:23:58,189 --> 00:24:01,449
つの例外を除いて複素平面上のすべての点に当たると

500
00:24:01,449 --> 00:24:02,400
いうことです。

501
00:24:02,400 --> 00:24:04,572
これは、ジュリア セットのどこに

502
00:24:04,572 --> 00:24:06,880
でもある原則として知られています。

503
00:24:07,940 --> 00:24:09,360
そうですね、実際にはそう呼ばれません。

504
00:24:09,700 --> 00:24:11,708
私が読んでいた情報源では、これはモンテルの定理と

505
00:24:11,708 --> 00:24:13,800
して知られる ものの帰結として言及されていました。

506
00:24:14,320 --> 00:24:15,700
しかし、それはそう呼ばれるべきです。

507
00:24:16,120 --> 00:24:19,044
ある意味、これが私たちに伝 えているのは、ジュリア 

508
00:24:19,044 --> 00:24:21,745
セットのポイントは単に混沌としているだけではなく

509
00:24:21,745 --> 00:24:24,220
、可能な限り混沌とし ているということです。

510
00:24:25,860 --> 00:24:28,411
ここでは、ニュートン マップを使用したちょっとし

511
00:24:28,411 --> 00:24:30,113
たシミュレーションを示 します。

512
00:24:30,113 --> 00:24:32,983
 数千点のクラスターはすべて、ジュリア集合上の点から 

513
00:24:32,983 --> 00:24:34,685
100 万分の 1 というごく 

514
00:24:34,685 --> 00:24:36,280
わずかな距離内から始まります。

515
00:24:42,680 --> 00:24:45,685
もちろん、物はどこにでもあるという原則は、その 

516
00:24:45,685 --> 00:24:49,317
距離内に数え切れないほど多くの点が存在し、最終的には 2 

517
00:24:49,317 --> 00:24:52,948
点を除く平面 上のすべてに到達するように拡張することに関す

518
00:24:52,948 --> 00:24:53,700
るものです。

519
00:24:54,200 --> 00:24:55,455
しかし、この小さなク ラスターからで

520
00:24:55,455 --> 00:24:56,780
も一般的なアイデアは得られるはずです。

521
00:24:56,780 --> 00:24:59,659
その小さな円盤からの小さな有限のサンプルが 

522
00:24:59,659 --> 00:25:02,800
、あらゆる方向にあらゆる方向にスプレーされます。

523
00:25:04,400 --> 00:25:06,225
これが私たちの目的にとって何を意味 

524
00:25:06,225 --> 00:25:08,761
するかというと、マップに何らかの魅力的な動作、たと

525
00:25:08,761 --> 00:25:10,890
えば固定点を引き寄せたり、サイクルを引き 

526
00:25:10,890 --> 00:25:13,426
寄せたりする場合、ジュリア集合上の点の周囲の小さな

527
00:25:13,426 --> 00:25:15,556
円盤からの値が、どのような方法であっても 

528
00:25:15,556 --> 00:25:18,091
保証されるということです。 それは小さかったが、最

529
00:25:18,091 --> 00:25:20,120
終的にはその魅力的な行動に陥るでしょう。

530
00:25:20,860 --> 00:25:23,406
3 つ以上の誘引行動がある場合、これにより、ジ

531
00:25:23,406 --> 00:25:25,730
ュリア集合がなぜ滑らかではないのか、なぜ 

532
00:25:25,730 --> 00:25:28,720
複雑でなければならないのかについての説明が得られます。

533
00:25:29,820 --> 00:25:31,372
それでも、これは完全に満足のいくも 

534
00:25:31,372 --> 00:25:33,443
のではないかもしれません。 なぜなら、このものは

535
00:25:33,443 --> 00:25:35,513
どこにでもある原則がそもそもなぜ真実であるのか 

536
00:25:35,513 --> 00:25:37,583
という疑問を引き起こすため、さらに一歩後退するこ

537
00:25:37,583 --> 00:25:38,360
とになるからです。

538
00:25:39,180 --> 00:25:41,553
先ほども述べたように、これは モンテルの定理と呼ばれ

539
00:25:41,553 --> 00:25:43,926
るものに由来していますが、正直に言うと扱うべきことが

540
00:25:43,926 --> 00:25:46,300
たくさんあるため、詳細 には触れないことにしました。

541
00:25:46,820 --> 00:25:49,841
私が見つけた証拠は、J 関数として知られるものに依存す 

542
00:25:49,841 --> 00:25:52,540
ることになりますが、これ自体が非常に複雑な話です。

543
00:25:52,800 --> 00:25:55,680
もちろん、もっと知りたいと思 っている人のために説明にリン

544
00:25:55,680 --> 00:25:58,560
クとリソースを残しておきます。 この原則が正しい理由を確 

545
00:25:58,560 --> 00:26:01,441
認する簡単な方法を知っているなら、私は間違いなく耳を傾けま

546
00:26:01,441 --> 00:26:01,640
す。

547
00:26:02,400 --> 00:26:05,767
また、簡単な補足とし て、これまで見てきた写真には面積が 

548
00:26:05,767 --> 00:26:08,554
0 のジュリア セットがありますが、これはこれ 

549
00:26:08,554 --> 00:26:10,993
らの領域間の境界のようなもので、ジュリア 

550
00:26:10,993 --> 00:26:12,851
セットが全体である例もあります。

551
00:26:12,851 --> 00:26:15,638
 飛行機 では、すべてが無秩序に動作するので、ち

552
00:26:15,638 --> 00:26:16,800
ょっとワイルドです。

553
00:26:18,180 --> 00:26:20,437
この特定のセクションの 主なポイント

554
00:26:20,437 --> 00:26:22,820
は、カオスとフラクタルのつながりです。

555
00:26:22,820 --> 00:26:26,006
最初は、これらは単に互いに類似し ているように思えます。

556
00:26:26,006 --> 00:26:29,193
 ニュートン法は、一部のシード値にとってはある種の厄介な

557
00:26:29,193 --> 00:26:31,128
プロセスであ ることが判明します。

558
00:26:31,128 --> 00:26:34,314
 この厄介さは、ある点の軌跡をたどることによって、ある方

559
00:26:34,314 --> 00:26:37,387
法で見ることが でき、別の方法では見ることができます。

560
00:26:37,387 --> 00:26:40,574
 図の複雑さのおかげで、それらは質的に異なる種類の乱雑 

561
00:26:40,574 --> 00:26:41,940
さのように感じられます。

562
00:26:42,520 --> 00:26:43,580
もしかしたらそれは良い比喩にはなるかもし

563
00:26:43,580 --> 00:26:44,640
れませんが、それ以上の意味はありません。

564
00:26:45,320 --> 00:26:48,084
ただし、ここで 優れているのは、いくつかの点が

565
00:26:48,084 --> 00:26:51,330
どの程度カオスであるかを定量化すると、その定量化によ 

566
00:26:51,330 --> 00:26:54,095
って、この境界特性を介して大まかなフラクタル形

567
00:26:54,095 --> 00:26:56,620
状の実際の説明が得られるということ です。

568
00:26:57,640 --> 00:27:00,365
数学ではカオスとフラクタルが一種の結婚生活をしているの

569
00:27:00,365 --> 00:27:03,090
をよく見かけま すが、少なくとも私にとっては、その結婚

570
00:27:03,090 --> 00:27:04,906
生活が偶然に一致した 2 つの現象 

571
00:27:04,906 --> 00:27:07,631
としてではなく、論理的なつながりを伴っているときはいつ

572
00:27:07,631 --> 00:27:08,540
でも満足できます。

