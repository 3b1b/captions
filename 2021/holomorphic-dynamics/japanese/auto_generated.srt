1
00:00:00,000 --> 00:00:02,120
今日は、正則力学として知られる数

2
00:00:02,120 --> 00:00:04,240
学についてお話したいと思います。

3
00:00:04,240 --> 00:00:07,449
これはマンデルブロ集合のようなものを研究する分野であ

4
00:00:07,449 --> 00:00:09,794
り、実際、今日の私 の主な目的の 1

5
00:00:09,794 --> 00:00:13,003
つは、数学の申し子であるこの象徴的な図形が、最初の

6
00:00:13,003 --> 00:00:16,212
定義が示唆するよりも一般的な方法でどのように現れるか

7
00:00:16,212 --> 00:00:17,200
を示すことです。

8
00:00:17,200 --> 00:00:20,400
この分野は、前回のビデオで話したニュートンのフ

9
00:00:20,400 --> 00:00:22,904
ラクタルにも密 接に関係しています。

10
00:00:22,904 --> 00:00:26,104
このビデオの終わりに向けた私たちのもう 1

11
00:00:26,104 --> 00:00:30,000
つの目標は、そこで生じた未解決の部分を解決することです。

12
00:00:30,000 --> 00:00:33,035
まず第一に、この正則同型という言葉

13
00:00:33,035 --> 00:00:36,070
は少し奇妙に思えるかもしれません。

14
00:00:36,070 --> 00:00:40,433
これは、複素数入力と 複素数出力を持

15
00:00:40,433 --> 00:00:45,040
ち、導関数も取得できる関数を指します。

16
00:00:45,040 --> 00:00:48,089
基本的に、このコンテキストで導関数があるということは

17
00:00:48,089 --> 00:00:49,965
、関数が特定の点の近くでどのよ

18
00:00:49,965 --> 00:00:53,015
うに動作するか、その点とその近傍にズームインすると、

19
00:00:53,015 --> 00:00:56,064
拡大縮小と回転、つまり複雑な 定数を乗算しているよう

20
00:00:56,064 --> 00:00:57,589
に見えることを意味します。

21
00:00:57,589 --> 00:01:00,781
これについては後ほど詳しく説 明しますが、ここでは、多項

22
00:01:00,781 --> 00:01:03,403
式、指数関数、三角関数など、書き留めることが

23
00:01:03,403 --> 00:01:06,595
できる通常の関数のほとんどが含まれていることを知っておい

24
00:01:06,595 --> 00:01:07,280
てください。

25
00:01:07,280 --> 00:01:11,271
ここでのタイトルに関連するダイナミクスは、これらの関数の

26
00:01:11,271 --> 00:01:14,988
1 つを 何度も繰り返し適用すると何が起こるかという質

27
00:01:14,988 --> 00:01:18,704
問から来ています。 つま り、何らかの入力に対して評価

28
00:01:18,704 --> 00:01:21,457
し、次に得られたものに対して同じ関数を

29
00:01:21,457 --> 00:01:24,348
評価し、それを再度実行するという意味です。

30
00:01:24,348 --> 00:01:26,000
、そして何度も何度も。

31
00:01:26,000 --> 00:01:28,140
ここから現れるポイントのパターンがサ

32
00:01:28,140 --> 00:01:30,400
イクルに閉じ込められることがあります。

33
00:01:30,400 --> 00:01:35,040
また、シーケンスがある種の限界点に近づくこともあります。

34
00:01:35,040 --> 00:01:37,740
あるいは、数列がどんどん大きくなり、無限に飛んで

35
00:01:37,740 --> 00:01:40,440
いくのかもしれませ ん。 数学者もそれを、限界点

36
00:01:40,440 --> 00:01:43,140
、まさに無限遠点に近づいていると考えてい ます。

37
00:01:43,140 --> 00:01:49,840
また、全くパターンがなく、無秩序に行動する場合もあります。

38
00:01:49,840 --> 00:01:53,200
驚くべきことは、書き留める可能性のあるあらゆる種類の関数

39
00:01:53,200 --> 00:01:56,560
について、これらの 考えられるさまざまな動作が発生したと

40
00:01:56,560 --> 00:01:58,960
きに視覚化するために何かを行おうとする

41
00:01:58,960 --> 00:02:02,320
と、非常に複雑なフラクタル パターンが生成されることがよ

42
00:02:02,320 --> 00:02:03,280
くあることです。

43
00:02:03,280 --> 00:02:05,806
前回のビデオをご覧になった方は、すでにこの素晴らしい例を

44
00:02:05,806 --> 00:02:07,200
1 つご覧になったことでしょう。

45
00:02:07,200 --> 00:02:10,380
多項式 p の根を求めるニュートン法と呼ばれるアル

46
00:02:10,380 --> 00:02:13,560
ゴリズムがあり、 その仕組みは基本的に、x から

47
00:02:13,560 --> 00:02:16,867
x を引いた p を x の p 素数で割って、p

48
00:02:16,867 --> 00:02:19,920
素数を導関数とする式を繰り返し繰り返すことです。

49
00:02:19,920 --> 00:02:23,344
初期シード値が多項式の根 (x の p が 0

50
00:02:23,344 --> 00:02:26,768
に等しい値) の 緩やかな近傍にある場合、この手

51
00:02:26,768 --> 00:02:30,335
順はその根にすぐに収束する一連の値 を生成します。

52
00:02:30,335 --> 00:02:33,070
これが、実際に役立つアルゴリズムとなる理由です。

53
00:02:33,070 --> 00:02:36,436
しかし、その後、こ れを複素平面で実行しようとしました。

54
00:02:36,436 --> 00:02:39,682
多くの考えられるシード値を調べ、これらのシード値の

55
00:02:39,682 --> 00:02:43,048
それぞれが複素平面のどのルートに到達するかを調べました。

56
00:02:43,048 --> 00:02:46,267
次に、各ルートに色を関連付 け、そのピクセルから

57
00:02:46,267 --> 00:02:50,291
始まるシード値が最終的にどのルートに到達するかに基づいて、

58
00:02:50,291 --> 00:02:52,840
プレーンの各ピクセルに色を付けました。

59
00:02:52,840 --> 00:02:56,240
私たちが得た結果は、色の間に大ま

60
00:02:56,240 --> 00:03:02,240
かなフラクタル境界がある、非常に複雑な写真のいくつかでした。

61
00:03:02,240 --> 00:03:06,199
この例では、実際に反復している関数を見ると、たとえば、z

62
00:03:06,199 --> 00:03:09,339
3 乗マイナス 1 のような多項式の特定の選択

63
00:03:09,339 --> 00:03:12,479
について、ある多項 式を別の多項式で割ったよう

64
00:03:12,479 --> 00:03:14,800
に式全体を書き直すことができます。

65
00:03:14,800 --> 00:03:18,160
数学者はこの種の関数を有理関数と呼びます。

66
00:03:18,160 --> 00:03:20,607
そして、これがニュートンの 方法から生じたと

67
00:03:20,607 --> 00:03:23,054
いう事実を忘れた場合、他の有理関数を反復する

68
00:03:23,054 --> 00:03:25,501
と何が起こるかを尋ねる ことも当然できます。

69
00:03:25,501 --> 00:03:29,097
そして実際、これはまさに数学者のピエール・ファトゥとガス

70
00:03:29,097 --> 00:03:32,693
トン・ジュリアが第一次世界大戦直後の数年間に行ったことだ。

71
00:03:32,693 --> 00:03:35,473
そして、彼らは、これ らの有理関数を反復すると何が起

72
00:03:35,473 --> 00:03:38,145
こるかについて、驚くほど豊富な理論を構築しました。

73
00:03:38,145 --> 00:03:40,925
あなた や私のようにこれを視覚化するコンピューター

74
00:03:40,925 --> 00:03:43,919
が彼らになかったことを考えると、これは特に印 象的です。

75
00:03:43,919 --> 00:03:47,238
この 2 つの名前は後で出てくるので覚えておいてください。

76
00:03:47,238 --> 00:03:51,161
このように研究できる有 理関数とその結果として生じる

77
00:03:51,161 --> 00:03:55,084
フラクタルの最も一般的な例は、最も単純な関数の 1

78
00:03:55,084 --> 00:03:59,008
つである z 二乗プラス c (c は定数) です。

79
00:03:59,008 --> 00:04:01,472
これは多くの人にと って少なくともある程度は

80
00:04:01,472 --> 00:04:03,937
馴染みのあるものだと思いますが、後で説明する

81
00:04:03,937 --> 00:04:06,401
準備を整えるのに役立 つので、ここで簡単にス

82
00:04:06,401 --> 00:04:09,202
トーリーを要約しておくことは確かに害はありません。

83
00:04:09,202 --> 00:04:12,328
このゲームで は、c を変更可能な値として考え

84
00:04:12,328 --> 00:04:15,454
、この移動可能な黄色の点として表示され ます。

85
00:04:15,454 --> 00:04:18,199
実際の反復プロセスでは、常に z

86
00:04:18,199 --> 00:04:21,589
の初期値が 0 に等しい状態で開始します。

87
00:04:21,589 --> 00:04:24,353
したがって、この関数を 1 回繰り返し、z

88
00:04:24,353 --> 00:04:27,243
2 乗と c を実行すると、c が得られます。

89
00:04:27,243 --> 00:04:30,741
その値を関数に代入 して 2 回目の反復を行うと、c

90
00:04:30,741 --> 00:04:33,461
の 2 乗に c を加えた値が得られます。

91
00:04:33,461 --> 00:04:35,797
ここで値 c を変更すると、2

92
00:04:35,797 --> 00:04:39,592
番目の値がどのように同期して移動するかがわかります。

93
00:04:39,592 --> 00:04:41,971
次に、その 2 番目の値を接続して z3

94
00:04:41,971 --> 00:04:44,576
を取得し、その 3 番目の値を接続して z4

95
00:04:44,576 --> 00:04:47,862
を取得し、このように続け て、値のチェーンを視覚化します。

96
00:04:47,862 --> 00:04:50,302
したがって、最初の多くの値に対して、c

97
00:04:50,302 --> 00:04:52,987
のいくつかの選択肢に対して、 これを何度も繰

98
00:04:52,987 --> 00:04:56,160
り返しても、このプロセスは制限されたままになります。

99
00:04:56,160 --> 00:04:58,368
今でも画面上ですべてを見ることができ ます。

100
00:04:58,368 --> 00:05:01,251
また、爆発しているように見えることもあり、2

101
00:05:01,251 --> 00:05:03,758
倍の大きさになると無限大まで爆発するこ

102
00:05:03,758 --> 00:05:05,638
とを実際に示すことができます。

103
00:05:05,638 --> 00:05:09,674
境界が黒に留まる平面の点を色付けし、プロセスが無

104
00:05:09,674 --> 00:05:14,033
限に向かってどれだけ速く突入するかに基づいて発散値に別

105
00:05:14,033 --> 00:05:18,392
の色のグラデーションを 割り当てると、数学全体の中で最

106
00:05:18,392 --> 00:05:23,236
も象徴的な画像の 1 つが得られます。 マンデ ルブロ集合。

107
00:05:23,236 --> 00:05:25,386
ちなみに、このインタラクティブなドットとスティッ

108
00:05:25,386 --> 00:05:27,447
クによる軌跡の視覚化は、Ben Spa rk

109
00:05:27,447 --> 00:05:29,687
のイラストと、彼がマンデルブロ集合について行った

110
00:05:29,687 --> 00:05:31,838
Numberphile のビデオに大きく影響を

111
00:05:31,838 --> 00:05:34,347
受けています。 これは素晴らしいので、ぜひご覧ください。

112
00:05:34,347 --> 00:05:36,543
正直、面白すぎてここで再実装しないのはもったいな

113
00:05:36,543 --> 00:05:37,245
いと思いました。

114
00:05:37,245 --> 00:05:40,568
ako に関するインタラクティブな記事も強くお勧めします。

115
00:05:40,568 --> 00:05:42,640
まだ読んでい ない人のために、

116
00:05:42,640 --> 00:05:44,850
これらすべてについて説明します。

117
00:05:44,850 --> 00:05:47,083
ベン・スパークのイ ラストの素晴らしい点は、

118
00:05:47,083 --> 00:05:49,316
マンデルブロ集合のさまざまな部分が実際に何を

119
00:05:49,316 --> 00:05:51,548
表しているのかを明らかに していることです。

120
00:05:51,548 --> 00:05:54,346
この最大のカーディオイド セクションには c

121
00:05:54,346 --> 00:05:56,292
の値が含まれているため、プロセ

122
00:05:56,292 --> 00:05:58,359
スは最終的にある限界に収束します。

123
00:05:58,359 --> 00:06:01,711
左側の大きな円は、プロセスが 2 つの値の間

124
00:06:01,711 --> 00:06:05,937
のサイクルに閉じ込められる値を表し、次に上下の円は、プロセ

125
00:06:05,937 --> 00:06:10,017
スが 3 つの値のサイクルに閉じ込められる値を示します。

126
00:06:10,017 --> 00:06:11,183
以下同様です。

127
00:06:11,183 --> 00:06:15,217
これら の小さな島にはそれぞれ独自の意味があります。

128
00:06:15,217 --> 00:06:17,590
また、このマンデルブロ集合と以前に見ていた

129
00:06:17,590 --> 00:06:20,178
ニュートン フラクタルの間には、基礎となる関数が

130
00:06:20,178 --> 00:06:22,551
異なるだけでなく、それぞれがどのように構築

131
00:06:22,551 --> 00:06:25,571
されるかという重要な違いがあることにも注目してください。

132
00:06:25,571 --> 00:06:28,451
マンデルブロ集合の場合、一貫した シード値

133
00:06:28,451 --> 00:06:31,725
z はゼロですが、微調整しているのはパラメーター

134
00:06:31,725 --> 00:06:34,344
c であり、関数自体を変更 しています。

135
00:06:34,344 --> 00:06:37,970
つまり、ここで見ているのはパラメータ空間と呼ばれるものです。

136
00:06:37,970 --> 00:06:40,639
しかし、ニュート ンのフラクタルでは、単一

137
00:06:40,639 --> 00:06:43,308
の不変関数がありますが、各ピクセルに関連付

138
00:06:43,308 --> 00:06:46,231
けられるのは、プロセス の異なるシード値です。

139
00:06:46,231 --> 00:06:48,283
もちろん、マップ z の 2 乗に c

140
00:06:48,283 --> 00:06:51,053
を加えたもので同じゲームをプレイする こともできます。

141
00:06:51,053 --> 00:06:53,823
c をある定数に固定し、ピクセルがさまざまな初期値

142
00:06:53,823 --> 00:06:56,490
z naught を表すようにする こともできます。

143
00:06:56,490 --> 00:06:59,255
したがって、マンデルブロ集合の各ピクセル

144
00:06:59,255 --> 00:07:02,849
は固有の関数に対応しますが、 右側の画像はそれぞれ

145
00:07:02,849 --> 00:07:05,061
1 つの関数に対応するだけです。

146
00:07:05,061 --> 00:07:07,115
パラメータ c を変更する と

147
00:07:07,115 --> 00:07:09,306
、右側の画像全体が変更されます。

148
00:07:09,306 --> 00:07:12,470
もう一度明確にしておきますが、適用されるルール

149
00:07:12,470 --> 00:07:15,897
は、プロセスが制限されたままの場合はピクセルを黒に色

150
00:07:15,897 --> 00:07:18,006
付けし、無限に発散する速度に基

151
00:07:18,006 --> 00:07:21,434
づいて、無限に発散するピクセルにある種のグラデーショ

152
00:07:21,434 --> 00:07:23,280
ンを適用するというものです。

153
00:07:23,280 --> 00:07:26,828
原理的には、考えると気が遠くなりそうですが、c と z

154
00:07:26,828 --> 00:07:29,362
のすべての組み合わ せが存在しない 4

155
00:07:29,362 --> 00:07:32,911
次元空間があり、ここで私たちがやっていることは、その想

156
00:07:32,911 --> 00:07:36,459
像を絶する個々の 2 次元スライスを調べているようなもの

157
00:07:36,459 --> 00:07:37,600
です。 パターン。

158
00:07:37,600 --> 00:07:40,318
右側の画像がジュリア セットまたはジュリア

159
00:07:40,318 --> 00:07:42,543
フラクタルと呼ばれているのをよく聞

160
00:07:42,543 --> 00:07:46,251
いたり読んだりしますが、私がこのすべてのことを初めて知ったと

161
00:07:46,251 --> 00:07:49,958
き、これが用語の意 味であるという誤解を抱いていたことを認め

162
00:07:49,958 --> 00:07:53,295
ます。 ジュリア集合とは、特に z 2 乗プラス c

163
00:07:53,295 --> 00:07:56,138
の場合を指し、さらに内側の黒い領域を指します。

164
00:07:56,138 --> 00:07:59,598
ただし、ジュリア 集合という用語には、より一般的な定義が

165
00:07:59,598 --> 00:08:03,058
あり、内部ではなく、これらの領域の境 界のみを指します。

166
00:08:03,058 --> 00:08:06,661
より具体的な定義の準備を整え、冒頭で述べた最初の目標

167
00:08:06,661 --> 00:08:09,731
に向けて少しでも前進するには、一歩下がって、今

168
00:08:09,731 --> 00:08:12,800
まさに自分が数学者であり 、これらすべてを発見

169
00:08:12,800 --> 00:08:15,336
していると想像してみる価値があります。

170
00:08:15,336 --> 00:08:18,557
これに基づいて 理論を構築するには実際に何をしますか?

171
00:08:18,557 --> 00:08:21,136
美しい写真を見るのは別のことです

172
00:08:21,136 --> 00:08:24,777
が、実際にすべてを理解したい場合は、どのような質

173
00:08:24,777 --> 00:08:25,840
問をしますか?

174
00:08:25,840 --> 00:08:28,569
一般に、何か複雑なことを理解したい場合は、単純な動作

175
00:08:28,569 --> 00:08:30,773
、できれば最も単純な動作をするシステムの

176
00:08:30,773 --> 00:08:33,817
部分があるかどうかを尋ねることから始めるのが良いでしょう。

177
00:08:33,817 --> 00:08:35,707
この例では、それは、いつ動作する

178
00:08:35,707 --> 00:08:38,436
かを尋ねることを意味します。 プロセスはその場に固定

179
00:08:38,436 --> 00:08:41,165
されたままになります。 つまり、z の f は z

180
00:08:41,165 --> 00:08:42,425
に等しいということです。

181
00:08:42,425 --> 00:08:44,593
これはかなり退屈なダイナミクスです。

182
00:08:44,593 --> 00:08:46,400
あなたも同意すると思います。

183
00:08:46,400 --> 00:08:49,813
このプロパティを持つ値を関数の固定点と呼びます。

184
00:08:49,813 --> 00:08:53,518
ニュートン法から生じ る関数の場合、設計によ

185
00:08:53,518 --> 00:08:57,223
り、関連する多項式の根に固定点があり ます。

186
00:08:57,223 --> 00:09:00,934
z の p が 0 に等しい場合、式全体が単純に

187
00:09:00,934 --> 00:09:03,903
z に等しいことを自 分で確認できます。

188
00:09:03,903 --> 00:09:06,165
不動点とはそういう意味です。

189
00:09:06,165 --> 00:09:08,799
演習に興味がある場合は、少し 立ち止まって、こ

190
00:09:08,799 --> 00:09:11,661
のマンデルブロ集合関数の不動点、z 2 乗プラス

191
00:09:11,661 --> 00:09:14,180
c を計算することを楽しむ かもしれません。

192
00:09:14,180 --> 00:09:18,656
より一般的には、この式が z に等しいかどうかを問うこ

193
00:09:18,656 --> 00:09:22,652
とは、常に何らかの多項式の根を求めるように並べ替え

194
00:09:22,652 --> 00:09:26,967
ることができる ため、有理関数は常に固定点を持ちます。

195
00:09:26,967 --> 00:09:29,525
また、代数の基本定理から、こ

196
00:09:29,525 --> 00:09:33,361
れには解が必要であり、通常は解が必要となります。

197
00:09:33,361 --> 00:09:34,800
この式の最高度。

198
00:09:34,800 --> 00:09:37,345
ちなみに、これは、ニュートン法を使用してそれらの不

199
00:09:37,345 --> 00:09:39,687
動点を見つけることもできる ことを意味します。

200
00:09:39,687 --> 00:09:42,640
おそらく、それは現時点では少しメタすぎるかもしれません。

201
00:09:42,640 --> 00:09:45,897
固定点について尋ねるだけなら簡単かもしれませんが、

202
00:09:45,897 --> 00:09:47,982
ダイナミクス全体、つまり私たち

203
00:09:47,982 --> 00:09:51,239
が見ている図を理解するための重要な考え方は、安定性

204
00:09:51,239 --> 00:09:52,542
を理解することです。

205
00:09:52,542 --> 00:09:56,173
近くの点 が固定点に引き寄せられる傾向がある場合、その固定

206
00:09:56,173 --> 00:09:59,803
点は引き付けられ、遠ざけられる場合は反発 すると言います。

207
00:09:59,803 --> 00:10:02,388
そしてこれは、関数の導関数を使用して

208
00:10:02,388 --> 00:10:04,973
実際に明示的に計算できる ものです。

209
00:10:04,973 --> 00:10:08,170
象徴的に言えば、複素関数の導関数を取得すると、実際

210
00:10:08,170 --> 00:10:11,367
の関数の場合とま ったく同じように見えますが、z

211
00:10:11,367 --> 00:10:14,820
の 2 乗などの導関数は z の 2 倍になりま す。

212
00:10:14,820 --> 00:10:17,046
しかし、幾何学的には、これが何を意味するの

213
00:10:17,046 --> 00:10:19,380
かを解釈する非常に素晴らしい方法があります。

214
00:10:19,380 --> 00:10:22,665
たとえば、入 力 1 では、この特定の関数の導関数は

215
00:10:22,665 --> 00:10:25,463
2 と評価されます。 これが示しているのは、

216
00:10:25,463 --> 00:10:28,627
その入力の周囲の非常に小さな近傍に注目し、その小さな

217
00:10:28,627 --> 00:10:31,791
点内のすべての点に何が起こる かを追跡すると、という

218
00:10:31,791 --> 00:10:34,954
ことです。 関数を適用するときに近傍 (この場合は

219
00:10:34,954 --> 00:10:37,145
z の 2 乗) を適用すると、2

220
00:10:37,145 --> 00:10:38,848
を掛けているように見えます。

221
00:10:38,848 --> 00:10:41,267
これが 2 の導関数の意味で す。

222
00:10:41,267 --> 00:10:45,217
別の例として、入力 i を見てみましょう。

223
00:10:45,217 --> 00:10:48,050
この関数が入力をマイナス 1、つまり i

224
00:10:48,050 --> 00:10:51,019
の 2 乗した値に移動することがわかります。

225
00:10:51,019 --> 00:10:53,915
しかし、この値での導関数は i の 2

226
00:10:53,915 --> 00:10:57,970
倍であるという追加情報により、その点の周りを拡大して、こ

227
00:10:57,970 --> 00:11:01,156
の小さな近傍での関 数の動作を見ると、2i

228
00:11:01,156 --> 00:11:04,921
による乗算のように見えるという追加の図が得られます。

229
00:11:04,921 --> 00:11:07,383
この場合、90 度の回転と 2

230
00:11:07,383 --> 00:11:11,293
倍の拡大を組み合わせたように見えることを意味 します。

231
00:11:11,293 --> 00:11:17,379
安定性を分析する目的で、ここで考慮するのは成長係数と縮小

232
00:11:17,379 --> 00:11:22,205
係数だけであり、回転部分は重要ではありません。

233
00:11:22,205 --> 00:11:26,152
したがって、固定点で の関数の導関数を計算し、その結果の絶

234
00:11:26,152 --> 00:11:29,147
対値が 1 より小さい場合、固定点が引き付

235
00:11:29,147 --> 00:11:33,094
けられており、近くの点が固定点に向かって接近する傾向がある

236
00:11:33,094 --> 00:11:34,320
ことがわかります。

237
00:11:34,320 --> 00:11:37,473
その微分値の絶対値が 1 より大きい場合、固定点が反発

238
00:11:37,473 --> 00:11:40,744
しており、隣接する点を押しのけ ていることがわかります。

239
00:11:40,744 --> 00:11:44,848
たとえば、ニュートンのマップ式の導関数を計算し

240
00:11:44,848 --> 00:11:49,636
、いくつかのことを少し単純化すると、次のような結果が得ら

241
00:11:49,636 --> 00:11:50,320
れます。

242
00:11:50,320 --> 00:11:53,428
したがって、z が固定点である場合 (この文脈では、z

243
00:11:53,428 --> 00:11:56,092
が多項式 p の根の 1 つであることを意味し

244
00:11:56,092 --> 00:11:58,979
ます)、この導関数は 1 より小さいだけでなく、0

245
00:11:58,979 --> 00:11:59,978
に等しくなります。

246
00:11:59,978 --> 00:12:02,587
これらは、これらの点の周囲の 近傍が単に縮小す

247
00:12:02,587 --> 00:12:05,196
るだけでなく、大幅に縮小することを意味するため

248
00:12:05,196 --> 00:12:07,805
、超魅力的な固定点と呼ば れることもあります。

249
00:12:07,805 --> 00:12:10,981
繰り返しになりますが、ニュートン法の目的は、

250
00:12:10,981 --> 00:12:14,157
できるだけ早く根に向か う反復を生成すること

251
00:12:14,157 --> 00:12:17,333
であるため、これは一種の設計によるものです。

252
00:12:17,333 --> 00:12:19,779
z の 2 乗と c の例 を引き出すと、その

253
00:12:19,779 --> 00:12:22,226
固定点を見つける最初の演習を行った場合、次のス

254
00:12:22,226 --> 00:12:24,566
テップは、それらの固定点の少なくと も 1

255
00:12:24,566 --> 00:12:27,225
つがいつ引き付けられるのかを尋ねることになります。

256
00:12:27,225 --> 00:12:30,053
c のどの値に対してこれは当てはまりま すか?

257
00:12:30,053 --> 00:12:33,482
それが十分な課題ではない場合は、見つかった結果を使

258
00:12:33,482 --> 00:12:36,912
用して、この条件がマン デルブロ集合の主要なカーデ

259
00:12:36,912 --> 00:12:40,480
ィオイド形状に対応していることを示してみてください。

260
00:12:40,480 --> 00:12:45,120
これは明示的に計算できるもので、非常に優れています。

261
00:12:45,120 --> 00:12:47,606
次のステップとしては、サイクルについて尋ねるのが自

262
00:12:47,606 --> 00:12:50,192
然ですが、ここからが本当に興味深いことに なります。

263
00:12:50,192 --> 00:12:54,017
z の f が z ではなく、他の値であり、その値が

264
00:12:54,017 --> 00:12:56,850
z に戻った場合、それは 2 つのサイク

265
00:12:56,850 --> 00:12:58,833
ルに陥ったことを意味します。

266
00:12:58,833 --> 00:13:01,137
f of f of z を評価し、それを

267
00:13:01,137 --> 00:13:03,550
z に等しく設定すること で、この種の 2

268
00:13:03,550 --> 00:13:06,073
つのサイクルを明示的に見つけることができます。

269
00:13:06,073 --> 00:13:09,139
たとえば、z の 2 乗と c のマップでは、f

270
00:13:09,139 --> 00:13:11,960
of f of z が次のように展開されます。

271
00:13:11,960 --> 00:13:15,360
ちょっと面倒ですが、それほどひどいものではありません。

272
00:13:15,360 --> 00:13:17,520
強調すべき主な点は、最終的には 4

273
00:13:17,520 --> 00:13:19,920
次方程式を解くことになるということです。

274
00:13:19,920 --> 00:13:23,429
ただし、固定点はこの方程式の解にもなるため、技術的には

275
00:13:23,429 --> 00:13:26,689
2 つのサイクル がこの方程式の解から元の固定点方程

276
00:13:26,689 --> 00:13:29,823
式の解を引いたものになることに注意して ください。

277
00:13:29,823 --> 00:13:33,102
同様に、同じアイデアを使用して、 f とそれ自体を n

278
00:13:33,102 --> 00:13:35,328
回異なる回数合成することで、n サイ

279
00:13:35,328 --> 00:13:36,850
クルを探すことができます。

280
00:13:36,850 --> 00:13:41,276
すぐに得られる明示的な表現は非常に乱雑になりますが、この

281
00:13:41,276 --> 00:13:44,785
仮説的なプロセスに基づいて何サイクルが予想され

282
00:13:44,785 --> 00:13:47,380
るかを尋ねることはまだ明確で す。

283
00:13:47,380 --> 00:13:50,995
単純な z の 2 乗と c の例に固執すると、それ

284
00:13:50,995 --> 00:13:54,472
自体を合成すると、 4 次の多項式が得られ、次に

285
00:13:54,472 --> 00:13:57,810
8 次の多項式が得られ、次に 16 次の多項式

286
00:13:57,810 --> 00:14:01,008
が得られ、というように指数関数的に増加します。

287
00:14:01,008 --> 00:14:02,121
多項式の次数。

288
00:14:02,121 --> 00:14:04,420
したがって、原理 的には、100

289
00:14:04,420 --> 00:14:08,477
万の周期で何サイクルになるかを尋ねた場合、それは 2 から

290
00:14:08,477 --> 00:14:12,400
100 万の次数を持つまったく非常識な多項式を解くのと同じ

291
00:14:12,400 --> 00:14:14,158
であることがわか ります。

292
00:14:14,158 --> 00:14:18,407
繰り返しになりますが、代数学の基本定理では、複素平面内で

293
00:14:18,407 --> 00:14:22,802
2 から 10 0 万点程度の何かが見つかると予想されます。

294
00:14:22,802 --> 00:14:25,440
これはまさにこのように循環します。

295
00:14:25,440 --> 00:14:28,608
さらに一般的には、任意の有理マップでは、その動作が周期

296
00:14:28,608 --> 00:14:31,891
n のサイクルに該当する値を常に 見つけることができます。

297
00:14:31,891 --> 00:14:36,618
最終的には、おそらく非常識な多項式を解くことになり ます。

298
00:14:36,618 --> 00:14:39,955
そして、この例と同様に、そのような周期点の数は

299
00:14:39,955 --> 00:14:42,597
n とともに指数関数 的に増加します。

300
00:14:42,597 --> 00:14:46,614
前回のニュートンのフラクタル動画ではあまり触れませんでした

301
00:14:46,614 --> 00:14:50,229
が、このような処理であっても、何らかのサイクルに該当す

302
00:14:50,229 --> 00:14:53,443
る点が無数にあると 考えるとなんだか不思議です。

303
00:14:53,443 --> 00:14:56,550
ただし、ほとんどの場合、これらの点は色付き

304
00:14:56,550 --> 00:14:59,939
の領域間の境界のどこかにあり、それらのいずれかに

305
00:14:59,939 --> 00:15:03,611
到達する確率はゼロ であるため、実際には現れません。

306
00:15:03,611 --> 00:15:06,478
実際にこれらのいずれかに該当するかどうかで重要

307
00:15:06,478 --> 00:15:10,062
なのは、サイクルの 1 つが引き付けられているかどうかです。

308
00:15:10,062 --> 00:15:12,213
つまり、そのサイクルの値の周囲の

309
00:15:12,213 --> 00:15:15,319
点の近傍がそのサイクルに引き寄せられる傾向があるとい

310
00:15:15,319 --> 00:15:16,036
う意味です。

311
00:15:16,036 --> 00:15:18,969
数値的手法に興味がある人に とって非常に関連性の高

312
00:15:18,969 --> 00:15:21,902
い質問は、このニュートンの写像プロセスに引き付けサ

313
00:15:21,902 --> 00:15:23,780
イクルが存在す るかどうかです。

314
00:15:23,780 --> 00:15:26,713
存在する場合、最初の推測がそのサイクルに閉じ込め

315
00:15:26,713 --> 00:15:29,646
られ、決して見つからな い可能性がゼロではないこと

316
00:15:29,646 --> 00:15:31,172
を意味するからです。 根。

317
00:15:31,172 --> 00:15:33,271
ここでの答えは実際には「はい」です。

318
00:15:33,271 --> 00:15:35,936
より明 確に言うと、z の 3 乗マイナス

319
00:15:35,936 --> 00:15:38,600
2z プラス 2 の根を求めようとして、ニュ

320
00:15:38,600 --> 00:15:40,901
ートン法を使用し ている場合、値 0

321
00:15:40,901 --> 00:15:44,292
付近で始まる小さなクラスターに何が起こるかを観察します。

322
00:15:44,292 --> 00:15:46,132
前後に跳ね返る 感じです。

323
00:15:46,132 --> 00:15:49,208
さて、わかりました。 この場合、最初に使用したクラスターが少

324
00:15:49,208 --> 00:15:52,283
し大きすぎたので、 外側のポイントの一部が吹き飛ばされます。

325
00:15:52,283 --> 00:15:54,745
しかし、より小さなクラスターから始めると次のよ

326
00:15:54,745 --> 00:15:55,463
うになります。

327
00:15:55,463 --> 00:15:57,266
すべての点が実際に 0 と 1

328
00:15:57,266 --> 00:16:00,196
の間のサイクルに向かって縮小していることに注目して

329
00:16:00,196 --> 00:16:00,760
ください。

330
00:16:00,760 --> 00:16:03,340
ランダムなシードでこれを達成する可能

331
00:16:03,340 --> 00:16:05,920
性は低いですが、間違いなく可能です。

332
00:16:05,920 --> 00:16:09,064
ちなみに、このようなサイクルが引き付けられている

333
00:16:09,064 --> 00:16:12,208
ことを確認するために実行できる演 習は、z の

334
00:16:12,208 --> 00:16:15,353
f の f の導関数を計算し、入力ゼロでこの導関

335
00:16:15,353 --> 00:16:18,760
数の大きさが 1 未満であることを確認することです。

336
00:16:18,760 --> 00:16:21,650
私の心を少し驚かせたのは、どの 3 次多

337
00:16:21,650 --> 00:16:25,641
項式に誘引サイクルがあるかを視覚化しようとすると何が起こる

338
00:16:25,641 --> 00:16:26,880
かということです。

339
00:16:26,880 --> 00:16:29,803
うまくいけば、ニュートンの方法が根を見つけるのに少しでもう

340
00:16:29,803 --> 00:16:32,828
まくいくなら、そのような誘引サイクルはまれに なるはずです。

341
00:16:32,828 --> 00:16:36,434
まず、今見ている 1 つの例をよりわかりやすく視覚化

342
00:16:36,434 --> 00:16:40,041
するために、 以前と同じフラクタルを描画し、その点か

343
00:16:40,041 --> 00:16:43,786
ら始まるシード値の傾向に基づいて各点 を色付けします。

344
00:16:43,786 --> 00:16:48,202
ただし、今回は、シード値がルートにまったく近づかない

345
00:16:48,202 --> 00:16:53,109
場合、ピクセルを黒に着色するという着色ポイントの条件を追加し

346
00:16:53,109 --> 00:16:53,600
ます。

347
00:16:53,600 --> 00:16:56,065
ルートを微調整する場合、つまりさまざまな 3

348
00:16:56,065 --> 00:16:58,853
次多項式を試している場合、黒いピクセルがまったく表

349
00:16:58,853 --> 00:17:01,426
示されるようにルートを配置する場所を見つけるのは

350
00:17:01,426 --> 00:17:04,000
実際には非常に困難であることに注意してください。

351
00:17:04,000 --> 00:17:05,997
ここで小さなスイートスポットを見つけるこ

352
00:17:05,997 --> 00:17:08,094
とができますが、それは間違いなくまれです。

353
00:17:08,094 --> 00:17:09,973
ここで私が望んでいるのは、どの

354
00:17:09,973 --> 00:17:13,144
三次多項式が誘引サイクルを持っているかを示す方法で、単

355
00:17:13,144 --> 00:17:15,845
一の画像を使用してすべての可能な三次多項式を

356
00:17:15,845 --> 00:17:17,841
一度に視覚化する何らかの方法です。

357
00:17:17,841 --> 00:17:21,374
幸いなことに、これらの多項式のいずれかに誘引サイクルがある

358
00:17:21,374 --> 00:17:23,729
かどうかをテストする非常に簡単な方法があ

359
00:17:23,729 --> 00:17:25,024
ることがわかりました。

360
00:17:25,024 --> 00:17:27,388
あなたがしなければならない のは、3

361
00:17:27,388 --> 00:17:30,747
つのルートの平均、つまりこの重心にあるシード値を確認す

362
00:17:30,747 --> 00:17:31,742
ることだけです。

363
00:17:31,742 --> 00:17:34,838
結局のとこ ろ、これはまったく明白ではありません。

364
00:17:34,838 --> 00:17:37,686
誘引サイクルがある場合、このシード値がその

365
00:17:37,686 --> 00:17:40,040
誘引サイクルに入ることが保証できます。

366
00:17:40,040 --> 00:17:44,552
つまり、黒い点があるとすれば、これが その一つになります。

367
00:17:44,552 --> 00:17:47,605
この魔法の事実がどこから来たのか知りたい場合は、それは

368
00:17:47,605 --> 00:17:50,771
私たちの良 き友人であるファトゥの定理に由来しています。

369
00:17:50,771 --> 00:17:53,579
彼は、これらの有理マップの 1 つが誘引サイク

370
00:17:53,579 --> 00:17:56,504
ルを持っている場合、反復関数の導関数がゼロに等しい

371
00:17:56,504 --> 00:17:59,312
値を調べることができ、それらの値の少な くとも

372
00:17:59,312 --> 00:18:02,704
1 つがそのサイクルに該当する必要があることを示しました。

373
00:18:02,704 --> 00:18:05,558
それは少し奇妙な事実のよ うに思えるかもしれませんが、

374
00:18:05,558 --> 00:18:08,412
大まかな直観としては、サイクルが引き寄せられようとして

375
00:18:08,412 --> 00:18:10,314
いる場合、 その値の少なくとも 1

376
00:18:10,314 --> 00:18:13,168
つは非常に小さな微分値を持つはずであり、そこから縮小が

377
00:18:13,168 --> 00:18:14,436
生じることにな ります。

378
00:18:14,436 --> 00:18:18,067
そしてこれは、サイクル内のその値が導関数が単に小さいだ

379
00:18:18,067 --> 00:18:21,698
けでなくゼロに 等しい点の近くに位置し、その点が最終的

380
00:18:21,698 --> 00:18:25,464
にサイクルに吸い込まれるのに十分近いこ とを意味します。

381
00:18:25,464 --> 00:18:28,860
この事実は、マンデルブロ集合では、ゼロに等しいシード値

382
00:18:28,860 --> 00:18:32,013
z を 1 つだけ使用していても、非常に完全で興味深

383
00:18:32,013 --> 00:18:35,045
い全体像を得るのに十分である理由も正当化し ます。

384
00:18:35,045 --> 00:18:37,488
安定したサイクルが見つかると、その

385
00:18:37,488 --> 00:18:40,203
1 つのシード値が必ずそれを見つけます。

386
00:18:40,203 --> 00:18:44,546
今日は宿題と演習を少しやりすぎているような気がしますが、

387
00:18:44,546 --> 00:18:48,889
もし興味があ るなら、ニュートン法から生じる関数で見つけ

388
00:18:48,889 --> 00:18:52,147
た導関数式を振り返るのも楽 しいでしょう。

389
00:18:52,147 --> 00:18:56,490
ファトゥーのこの素晴らしい定理を使って、この根の中点

390
00:18:56,490 --> 00:19:00,833
を確認するだけで十分であるという、三次多項式に関する魔法

391
00:19:00,833 --> 00:19:02,384
の事実を示し ます。

392
00:19:02,384 --> 00:19:04,493
ただし、正直なところ、これらはすべて

393
00:19:04,493 --> 00:19:06,720
、実際には心配する必要のない詳細です。

394
00:19:06,720 --> 00:19:09,109
結果として、これらの多項式のすべてではなく 1

395
00:19:09,109 --> 00:19:11,498
つの点だけを調べることで、これらの多項式の 1

396
00:19:11,498 --> 00:19:14,286
つに誘引サイクルがあるかどうかのテストを実行できるという

397
00:19:14,286 --> 00:19:15,082
ことになります。

398
00:19:15,082 --> 00:19:16,865
このおかげで、本当に素 晴らしい

399
00:19:16,865 --> 00:19:18,760
図を実際に生成することができます。

400
00:19:18,760 --> 00:19:21,494
これが機能する方法は、2 つのルートを所定の位置に固定

401
00:19:21,494 --> 00:19:24,228
することです。 それらを z が負の 1 に等しく、z

402
00:19:24,228 --> 00:19:27,060
が正の 1 に等しいとします。 その後、3 番目のルート

403
00:19:27,060 --> 00:19:29,501
(ラムダと呼ぶことにします) の周りを移動します。

404
00:19:29,501 --> 00:19:32,674
覚えておいてください、私たちが探している重

405
00:19:32,674 --> 00:19:35,560
要な特徴は、重心の点が黒である場合です。

406
00:19:35,560 --> 00:19:38,721
そこで、各ピクセルがラムダの 1 つの可

407
00:19:38,721 --> 00:19:42,785
能な選択肢に対応する 2 番目の図を右側に描画します。

408
00:19:42,785 --> 00:19:45,743
これから行うことは、3 つの ルートの中点の

409
00:19:45,743 --> 00:19:48,836
色に基づいてそのピクセルに色を付けることです。

410
00:19:48,836 --> 00:19:52,505
これが少しわかりにくいと 感じても、まったく問題ありません。

411
00:19:52,505 --> 00:19:54,707
ここには多くの層が関与しています。

412
00:19:54,707 --> 00:19:57,098
右側の各ピクセルは 、このパラメーター

413
00:19:57,098 --> 00:19:59,489
lambda によって決定される一意の多

414
00:19:59,489 --> 00:20:02,000
項式に対応することを覚えておいてください。

415
00:20:02,000 --> 00:20:04,714
実際、これをパラメータ空間と呼ぶこともできます。

416
00:20:04,714 --> 00:20:13,840
おなじみですね？

417
00:20:13,840 --> 00:20:16,935
このパラメータ空間内の点は、対応する多項式

418
00:20:16,935 --> 00:20:19,735
のニュートン法プロセスによって吸引サ

419
00:20:19,735 --> 00:20:23,420
イクルが生成される場合に限り、黒く色付けされます。

420
00:20:23,420 --> 00:20:25,222
繰り返しになりますが、理解するのに少し時

421
00:20:25,222 --> 00:20:26,938
間がかかっても心配する必要はありません。

422
00:20:26,938 --> 00:20:30,547
さて、一見したところ、この図には黒い点がまったくないよ

423
00:20:30,547 --> 00:20:33,770
うに見えるかもしれませんが、これは良い知らせです。

424
00:20:33,770 --> 00:20:35,944
それは、ほとんどの場合、ニュートン法がこ

425
00:20:35,944 --> 00:20:38,532
のようなサイクルに巻き込まれないことを意味します。

426
00:20:38,532 --> 00:20:41,416
しかし、これを十分にプレビューしたので、これがどこ

427
00:20:41,416 --> 00:20:43,523
に行くのか正確に理解できたと思います。

428
00:20:43,523 --> 00:20:46,074
ズームインすると黒い領域が見つかり、その黒い

429
00:20:46,074 --> 00:20:49,069
領域はマンデルブ ロ集合とまったく同じように見えます。

430
00:20:49,069 --> 00:20:51,585
繰り返しになりますが、これらの関数の 1

431
00:20:51,585 --> 00:20:54,341
つのパラメーターを微調整 する質問をすると、こ

432
00:20:54,341 --> 00:20:57,456
の象徴的なカーディオイドとバブルの形状が得られます。

433
00:20:57,456 --> 00:21:00,148
結論から言えば、この形状はあなたが思 っているほど、z

434
00:21:00,148 --> 00:21:02,937
の 2 乗と c の例に特有のものではないということです。

435
00:21:02,937 --> 00:21:07,308
これは、このようなプロセスを 使用したパラメーター空間に

436
00:21:07,308 --> 00:21:11,680
関する、より一般的で普遍的なものに関連しているようです。

437
00:21:11,680 --> 00:21:12,967
それでも、差し迫った疑問の 1

438
00:21:12,967 --> 00:21:15,300
つは、そもそもなぜフラクタルが得られるのかということです。

439
00:21:15,300 --> 00:21:17,400
前回のビデオでは、ニュートン法

440
00:21:17,400 --> 00:21:20,943
の図が、色の付いた領域の境界の周りに小さな円を描く場合

441
00:21:20,943 --> 00:21:24,487
、実際にはその円には画像か ら利用可能なすべての色が含

442
00:21:24,487 --> 00:21:28,161
まれている必要があるという非常に奇妙な特性があることに

443
00:21:28,161 --> 00:21:29,474
ついて説明しました。

444
00:21:29,474 --> 00:21:30,988
そしてこれは、あらゆる合理的なマッ

445
00:21:30,988 --> 00:21:32,502
プにさらに一般的に当てはまります。

446
00:21:32,502 --> 00:21:34,765
どの制限動作ポイ ントが該当するか

447
00:21:34,765 --> 00:21:38,159
(どの制限点、どのリミット サイクル、または無限に向か

448
00:21:38,159 --> 00:21:41,553
う傾向があるか など) に基づいて領域に色を割り当てる

449
00:21:41,553 --> 00:21:44,821
場合、描画する小さな円には、これらの制限動作の 1

450
00:21:44,821 --> 00:21:48,215
つだけを持つ点が含まれるか、 、またはそれらすべてにポ

451
00:21:48,215 --> 00:21:49,723
イントが含まれています。

452
00:21:49,723 --> 00:21:51,494
決して その中間ではありません。

453
00:21:51,494 --> 00:21:54,418
したがって、少なくとも 3 つの色がある場合、このプロパ

454
00:21:54,418 --> 00:21:57,237
ティは、境界が 決して滑らかではないことを意味します。

455
00:21:57,237 --> 00:22:00,057
滑らかなセグメントに沿って、すべての色ではなく 2

456
00:22:00,057 --> 00:22:02,981
つの 色だけに接触する十分に小さな円を描くことができるか

457
00:22:02,981 --> 00:22:03,399
らです。

458
00:22:03,399 --> 00:22:05,481
そして経験的にこれが私たちが目にしているも

459
00:22:05,481 --> 00:22:08,037
のですが、どれだけズームインしても、これらの境界は常に

460
00:22:08,037 --> 00:22:08,605
大まかです。

461
00:22:08,605 --> 00:22:10,977
さらに、ズームインすると、フレーム

462
00:22:10,977 --> 00:22:14,404
内で利用可能なすべての色が常に表示されることに気づく

463
00:22:14,404 --> 00:22:15,458
かもしれません。

464
00:22:15,458 --> 00:22:18,733
これは、制限動作が 2 つしかないという文脈における大まか

465
00:22:18,733 --> 00:22:21,782
な境界線を説明するものではありませんが、それでも、私

466
00:22:21,782 --> 00:22:25,170
がこのビデオに残した未解決の部分は結びつける価値があり、2

467
00:22:25,170 --> 00:22:27,767
つの重要な用語を導入する良 い口実になります。

468
00:22:27,767 --> 00:22:28,784
ファトゥセット。

469
00:22:28,784 --> 00:22:32,627
ある点が最終的に何らかの安定した予測可能なパターンに陥

470
00:22:32,627 --> 00:22:35,236
る場合、それは反復関数の Fatou

471
00:22:35,236 --> 00:22:37,295
セットの一部であると言います。

472
00:22:37,295 --> 00:22:39,398
これまでに見たすべて のマップに

473
00:22:39,398 --> 00:22:41,632
は、ほぼすべてのものが含まれます。

474
00:22:41,632 --> 00:22:44,533
Julia セットはそれ以外のすべてであり、これま

475
00:22:44,533 --> 00:22:47,211
でに見た写真では、色付きの領域間の大まかな境界線

476
00:22:47,211 --> 00:22:50,000
であり、ある安定したアトラクターから別の安定した

477
00:22:50,000 --> 00:22:52,567
アトラクターに移行するときに何が起こるかです。

478
00:22:52,567 --> 00:22:55,570
たとえば、Julia セットには、すべての

479
00:22:55,570 --> 00:22:58,164
反発サイクルと反発固定点が含まれます。

480
00:22:58,164 --> 00:23:01,181
ただし、Julia セットの典型的なポイントはサ

481
00:23:01,181 --> 00:23:04,561
イクルではなく、明確なパターンもなく永遠に跳ね返ります。

482
00:23:04,561 --> 00:23:08,226
ここで、Fatou セット内 の点に注目し、その周囲に十

483
00:23:08,226 --> 00:23:11,761
分小さな円盤を描画すると、プロセスに従って、関連する

484
00:23:11,761 --> 00:23:15,688
安定した動作に陥るにつれて、小さな円盤は最終的に縮小します。

485
00:23:15,688 --> 00:23:18,037
無限に到達する場合 は別ですが、円盤が無限

486
00:23:18,037 --> 00:23:20,386
付近で縮小すると考えることもできますが、そ

487
00:23:20,386 --> 00:23:22,735
れは問題を混乱させ るだけかもしれません。

488
00:23:22,735 --> 00:23:26,497
対照的に、Julia セット上の点の周りに小さな円盤を

489
00:23:26,497 --> 00:23:30,259
描画すると 、その円内の点が離れて独自の動作を行うにつ

490
00:23:30,259 --> 00:23:34,160
れて、時間の経過とともに円盤が拡大する傾向があ ります。

491
00:23:34,160 --> 00:23:36,840
言い換えれば、ジュリア セットの点

492
00:23:36,840 --> 00:23:39,520
は無秩序に動作する傾向があります。

493
00:23:39,520 --> 00:23:42,920
彼らの近くの 隣人は、たとえ非常に近くにいたとし

494
00:23:42,920 --> 00:23:46,320
ても、最終的には質的に異なる行動に陥るでしょう。

495
00:23:46,320 --> 00:23:48,876
しかし、この円盤は単に膨張するだけではありません。

496
00:23:48,876 --> 00:23:52,195
前に述べた多色特性の鍵となるかなり驚くべき

497
00:23:52,195 --> 00:23:55,816
結果は、このプロセスを実行させると、その小さな円

498
00:23:55,816 --> 00:23:58,683
盤が最終的に非常に膨張し、 最大 2

499
00:23:58,683 --> 00:24:02,303
つの例外を除いて複素平面上のすべての点に当たると

500
00:24:02,303 --> 00:24:03,360
いうことです。

501
00:24:03,360 --> 00:24:05,493
これは、ジュリア セットのどこに

502
00:24:05,493 --> 00:24:07,760
でもある原則として知られています。

503
00:24:07,760 --> 00:24:09,287
そうですね、実際にはそう呼ばれません。

504
00:24:09,287 --> 00:24:11,626
私が読んでいた情報源では、これはモンテルの定理と

505
00:24:11,626 --> 00:24:14,062
して知られる ものの帰結として言及されていました。

506
00:24:14,062 --> 00:24:15,575
しかし、それはそう呼ばれるべきです。

507
00:24:15,575 --> 00:24:18,634
ある意味、これが私たちに伝 えているのは、ジュリア

508
00:24:18,634 --> 00:24:21,457
セットのポイントは単に混沌としているだけではなく

509
00:24:21,457 --> 00:24:24,045
、可能な限り混沌とし ているということです。

510
00:24:24,045 --> 00:24:27,517
ここでは、ニュートン マップを使用したちょっとし

511
00:24:27,517 --> 00:24:29,832
たシミュレーションを示 します。

512
00:24:29,832 --> 00:24:33,738
数千点のクラスターはすべて、ジュリア集合上の点から

513
00:24:33,738 --> 00:24:36,053
100 万分の 1 というごく

514
00:24:36,053 --> 00:24:38,223
わずかな距離内から始まります。

515
00:24:38,223 --> 00:24:42,478
もちろん、物はどこにでもあるという原則は、その

516
00:24:42,478 --> 00:24:47,620
距離内に数え切れないほど多くの点が存在し、最終的には 2

517
00:24:47,620 --> 00:24:52,762
点を除く平面 上のすべてに到達するように拡張することに関す

518
00:24:52,762 --> 00:24:53,826
るものです。

519
00:24:53,826 --> 00:24:55,379
しかし、この小さなク ラスターからで

520
00:24:55,379 --> 00:24:57,018
も一般的なアイデアは得られるはずです。

521
00:24:57,018 --> 00:25:00,119
その小さな円盤からの小さな有限のサンプルが

522
00:25:00,119 --> 00:25:03,503
、あらゆる方向にあらゆる方向にスプレーされます。

523
00:25:03,503 --> 00:25:05,512
これが私たちの目的にとって何を意味

524
00:25:05,512 --> 00:25:08,301
するかというと、マップに何らかの魅力的な動作、たと

525
00:25:08,301 --> 00:25:10,645
えば固定点を引き寄せたり、サイクルを引き

526
00:25:10,645 --> 00:25:13,435
寄せたりする場合、ジュリア集合上の点の周囲の小さな

527
00:25:13,435 --> 00:25:15,778
円盤からの値が、どのような方法であっても

528
00:25:15,778 --> 00:25:18,568
保証されるということです。 それは小さかったが、最

529
00:25:18,568 --> 00:25:20,800
終的にはその魅力的な行動に陥るでしょう。

530
00:25:20,800 --> 00:25:23,492
3 つ以上の誘引行動がある場合、これにより、ジ

531
00:25:23,492 --> 00:25:25,950
ュリア集合がなぜ滑らかではないのか、なぜ

532
00:25:25,950 --> 00:25:29,111
複雑でなければならないのかについての説明が得られます。

533
00:25:29,111 --> 00:25:30,882
それでも、これは完全に満足のいくも

534
00:25:30,882 --> 00:25:33,243
のではないかもしれません。 なぜなら、このものは

535
00:25:33,243 --> 00:25:35,604
どこにでもある原則がそもそもなぜ真実であるのか

536
00:25:35,604 --> 00:25:37,964
という疑問を引き起こすため、さらに一歩後退するこ

537
00:25:37,964 --> 00:25:38,850
とになるからです。

538
00:25:38,850 --> 00:25:41,283
先ほども述べたように、これは モンテルの定理と呼ばれ

539
00:25:41,283 --> 00:25:43,715
るものに由来していますが、正直に言うと扱うべきことが

540
00:25:43,715 --> 00:25:46,148
たくさんあるため、詳細 には触れないことにしました。

541
00:25:46,148 --> 00:25:49,407
私が見つけた証拠は、J 関数として知られるものに依存す

542
00:25:49,407 --> 00:25:52,316
ることになりますが、これ自体が非常に複雑な話です。

543
00:25:52,316 --> 00:25:55,497
もちろん、もっと知りたいと思 っている人のために説明にリン

544
00:25:55,497 --> 00:25:58,678
クとリソースを残しておきます。 この原則が正しい理由を確

545
00:25:58,678 --> 00:26:01,859
認する簡単な方法を知っているなら、私は間違いなく耳を傾けま

546
00:26:01,859 --> 00:26:02,079
す。

547
00:26:02,079 --> 00:26:05,722
また、簡単な補足とし て、これまで見てきた写真には面積が

548
00:26:05,722 --> 00:26:08,738
0 のジュリア セットがありますが、これはこれ

549
00:26:08,738 --> 00:26:11,377
らの領域間の境界のようなもので、ジュリア

550
00:26:11,377 --> 00:26:13,387
セットが全体である例もあります。

551
00:26:13,387 --> 00:26:16,402
飛行機 では、すべてが無秩序に動作するので、ち

552
00:26:16,402 --> 00:26:17,659
ょっとワイルドです。

553
00:26:17,659 --> 00:26:20,362
この特定のセクションの 主なポイント

554
00:26:20,362 --> 00:26:23,214
は、カオスとフラクタルのつながりです。

555
00:26:23,214 --> 00:26:26,354
最初は、これらは単に互いに類似し ているように思えます。

556
00:26:26,354 --> 00:26:29,493
ニュートン法は、一部のシード値にとってはある種の厄介な

557
00:26:29,493 --> 00:26:31,399
プロセスであ ることが判明します。

558
00:26:31,399 --> 00:26:34,538
この厄介さは、ある点の軌跡をたどることによって、ある方

559
00:26:34,538 --> 00:26:37,565
法で見ることが でき、別の方法では見ることができます。

560
00:26:37,565 --> 00:26:40,704
図の複雑さのおかげで、それらは質的に異なる種類の乱雑

561
00:26:40,704 --> 00:26:42,050
さのように感じられます。

562
00:26:42,050 --> 00:26:43,536
もしかしたらそれは良い比喩にはなるかもし

563
00:26:43,536 --> 00:26:45,022
れませんが、それ以上の意味はありません。

564
00:26:45,022 --> 00:26:47,853
ただし、ここで 優れているのは、いくつかの点が

565
00:26:47,853 --> 00:26:51,175
どの程度カオスであるかを定量化すると、その定量化によ

566
00:26:51,175 --> 00:26:54,006
って、この境界特性を介して大まかなフラクタル形

567
00:26:54,006 --> 00:26:56,590
状の実際の説明が得られるということ です。

568
00:26:56,590 --> 00:26:59,182
数学ではカオスとフラクタルが一種の結婚生活をしているの

569
00:26:59,182 --> 00:27:01,775
をよく見かけま すが、少なくとも私にとっては、その結婚

570
00:27:01,775 --> 00:27:03,503
生活が偶然に一致した 2 つの現象

571
00:27:03,503 --> 00:27:06,095
としてではなく、論理的なつながりを伴っているときはいつ

572
00:27:06,095 --> 00:27:06,960
でも満足できます。

