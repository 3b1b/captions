[
 {
  "input": "Today I'd like to tell you about a piece of math known as holomorphic dynamics.",
  "translatedText": "오늘 저는 동형 역학(holomorphicdynamics)으로 알려진 수학에 대해 말씀드리고 싶습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 0.0,
  "end": 3.78
 },
 {
  "input": "This is the field which studies things like the Mandelbrot set, and in fact one of my main goals today is to show you how this iconic shape, the poster child of math, pops up in a more general way than the initial definition might suggest.",
  "translatedText": "이것은 만델브로 집합과 같은 것을 연구하는 분야입니다. 사실 오늘 나의 주요 목표 중 하나는 수학의 대표적인 형태인 이 상징적인 모양이 초기 정의에서 제안한 것보다 더 일반적인 방식으로 어떻게 나타나는지 보여주는 것입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 4.44,
  "end": 16.66
 },
 {
  "input": "Now this field is also intimately tied to what we talked about in the last video, with Newton's fractal, and another goal of ours towards the end of this video will be to help tie up some of the loose ends that we had there.",
  "translatedText": "이제 이 필드는 지난 비디오에서 뉴턴의 프랙탈을 통해 이야기한 내용과도 밀접하게 연결되어 있으며, 이 비디오 끝 부분에 있는 우리의 또 다른 목표는 우리가 거기에서 가졌던 느슨한 끝을 묶는 데 도움이 될 것입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 17.38,
  "end": 28.06
 },
 {
  "input": "So first of all, this word holomorphic might seem a little weird.",
  "translatedText": "그래서 우선, 홀로모픽(holomorphic)이라는 단어가 조금 이상하게 보일 수도 있습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 34.6,
  "end": 37.54
 },
 {
  "input": "It refers to functions that have complex number inputs and complex number outputs, and which you can also take a derivative of.",
  "translatedText": "이는 복소수 입력과 복소수 출력이 있고 도함수를 구할 수도 있는 함수를 나타냅니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 37.64,
  "end": 44.62
 },
 {
  "input": "Basically what it means to have a derivative in this context is that when you zoom in to how the function behaves near a given point, to the point and its neighbors, it looks roughly like scaling and rotating, like multiplying by some complex constant.",
  "translatedText": "기본적으로 이 맥락에서 도함수를 갖는다는 것은 함수가 주어진 점 근처, 점 및 그 이웃 근처에서 어떻게 동작하는지 확대하면 대략 복잡한 상수를 곱하는 것처럼 크기 조정 및 회전과 비슷하게 보인다는 것입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 45.18,
  "end": 57.6
 },
 {
  "input": "We'll talk more about that in just a bit, but for now know that it includes most of the ordinary functions you could write down, things like polynomials, exponentials, trig functions, all of that.",
  "translatedText": "이에 대해서는 잠시 후에 더 자세히 설명하겠지만 지금은 여기에 다항식, 지수, 삼각 함수 등 여러분이 적어둘 수 있는 대부분의 일반적인 함수가 포함되어 있다는 점만 알아두세요.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 58.24,
  "end": 66.74
 },
 {
  "input": "The relevant dynamics in the title here comes from asking what happens when you repeatedly apply one of these functions over and over, in the sense of evaluating on some input, then evaluating the same function on whatever you just got out, and then doing that again, and again and again and again.",
  "translatedText": "여기 제목의 관련 역학은 일부 입력을 평가한 다음 방금 얻은 내용에 대해 동일한 함수를 평가하고 다시 수행한다는 의미에서 이러한 기능 중 하나를 반복적으로 적용하면 어떤 일이 발생하는지 묻는 것에서 비롯됩니다. , 그리고 계속해서 또 다시.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 67.38,
  "end": 85.36
 },
 {
  "input": "Sometimes the pattern of points emerging from this gets trapped in a cycle.",
  "translatedText": "때때로 이로부터 나타나는 점의 패턴이 순환에 갇히게 됩니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 86.86,
  "end": 90.18
 },
 {
  "input": "Other times the sequence will just approach some kind of limiting point.",
  "translatedText": "다른 경우에는 시퀀스가 일종의 제한점에 접근할 수도 있습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 91.44,
  "end": 94.7
 },
 {
  "input": "Or maybe the sequence gets bigger and bigger and it flies off to infinity, which mathematicians also kind of think of as approaching a limit point, just the point at infinity.",
  "translatedText": "아니면 수열이 점점 더 커지고 무한대로 날아갈 수도 있습니다. 수학자들은 이를 한계점, 즉 무한점에 접근하는 것으로 생각합니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 95.74,
  "end": 103.88
 },
 {
  "input": "And other times still they have no pattern at all, and they behave chaotically.",
  "translatedText": "그리고 다른 때에는 여전히 패턴이 전혀 없고 혼란스럽게 행동합니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 105.24,
  "end": 108.86
 },
 {
  "input": "What's surprising is that for all sorts of functions that you might write down, when you try to do something to visualize when these different possible behaviors arise, it often results in some insanely intricate fractal pattern.",
  "translatedText": "놀라운 점은 기록할 수 있는 모든 종류의 함수에 대해 이러한 다양한 가능한 동작이 발생할 때 시각화하기 위해 무언가를 시도할 때 종종 엄청나게 복잡한 프랙탈 패턴이 발생한다는 것입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 110.52,
  "end": 122.28
 },
 {
  "input": "Those of you who watched the last video have already seen one neat example of this.",
  "translatedText": "지난 영상을 시청하신 분들은 이미 이에 대한 깔끔한 예를 한 가지 보신 적이 있습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 123.54,
  "end": 126.9
 },
 {
  "input": "There's this algorithm called Newton's method, which finds the root of some polynomial p, and the way it works is to basically repeatedly iterate the expression x minus p of x divided by p prime of x, p prime being the derivative.",
  "translatedText": "어떤 다항식 p의 근을 찾는 뉴턴의 방법이라는 알고리즘이 있는데, 그것이 작동하는 방식은 기본적으로 x 빼기 x의 p를 x의 p 프라임으로 나눈 식을 반복적으로 반복하는 것입니다. p 프라임은 도함수입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 127.4,
  "end": 139.12
 },
 {
  "input": "When your initial seed value is in the loose vicinity of a root to that polynomial, a value where p of x equals zero, this procedure produces a sequence of values that really quickly converges to that root.",
  "translatedText": "초기 시드 값이 해당 다항식의 근(x의 p가 0인 값)의 느슨한 근처에 있는 경우 이 절차는 해당 근에 정말 빠르게 수렴하는 일련의 값을 생성합니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 139.82,
  "end": 150.38
 },
 {
  "input": "This is what makes it a useful algorithm in practice.",
  "translatedText": "이것이 실제로 유용한 알고리즘이 되는 이유입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 150.66,
  "end": 152.62
 },
 {
  "input": "But then we tried to do this in the complex plane, looking at the many possible seed values and asking which root in the complex plane each one of these seed values might end up on.",
  "translatedText": "그러나 그런 다음 우리는 복소 평면에서 이 작업을 수행하려고 했습니다. 가능한 많은 시드 값을 살펴보고 이러한 시드 값 각각이 복소 평면의 어느 루트에 있을 수 있는지 묻습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 153.52,
  "end": 162.8
 },
 {
  "input": "Then we associated a color with each one of the roots, and then colored each pixel of the plane based on which root a seed value starting at that pixel would ultimately land on.",
  "translatedText": "그런 다음 각 루트에 색상을 연결한 다음 해당 픽셀에서 시작하는 시드 값이 최종적으로 도달할 루트를 기준으로 평면의 각 픽셀에 색상을 지정했습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 163.28,
  "end": 172.72
 },
 {
  "input": "The results we got were some of these insanely intricate pictures, with these rough fractal boundaries between the colors.",
  "translatedText": "우리가 얻은 결과는 색상 사이에 거친 프랙탈 경계가 있는 엄청나게 복잡한 사진 중 일부였습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 173.74,
  "end": 179.32
 },
 {
  "input": "Now in this example, if you look at the function that we're actually iterating, say for some specific choice of a polynomial, like z cubed minus one, you can rewrite the whole expression to look like one polynomial divided by another.",
  "translatedText": "이제 이 예에서 우리가 실제로 반복하고 있는 함수를 보면, 예를 들어 z 제곱 빼기 1과 같은 다항식의 특정 선택에 대해 전체 표현식을 하나의 다항식을 다른 다항식으로 나눈 것처럼 다시 작성할 수 있습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 182.08,
  "end": 194.12
 },
 {
  "input": "Mathematicians call these kinds of functions rational functions.",
  "translatedText": "수학자들은 이러한 종류의 함수를 합리적 함수(rational function)라고 부릅니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 195.02,
  "end": 198.04
 },
 {
  "input": "And if you forget the fact that this arose from Newton's method, you could reasonably ask what happens when you iterate any other rational function.",
  "translatedText": "그리고 이것이 뉴턴의 방법에서 비롯되었다는 사실을 잊어버린다면, 다른 합리적인 함수를 반복할 때 무슨 일이 일어나는지 합리적으로 물어볼 수 있습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 198.64,
  "end": 205.46
 },
 {
  "input": "And in fact, this is exactly what the mathematicians Pierre Fatou and Gaston Julia did in the years immediately following World War I.",
  "translatedText": "실제로 이것이 바로 제1차 세계 대전 직후 수학자 피에르 파투(Pierre Fatou)와 가스통 줄리아(Gaston Julia)가 했던 일입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 206.12,
  "end": 212.72
 },
 {
  "input": "And they built up a surprisingly rich theory of what happens when you iterate these rational functions, which is particularly impressive given that they had no computers to visualize any of this the way that you and I can.",
  "translatedText": "그리고 그들은 이러한 합리적인 함수를 반복할 때 어떤 일이 발생하는지에 대한 놀랍도록 풍부한 이론을 구축했습니다. 이는 여러분과 제가 할 수 있는 방식으로 시각화할 컴퓨터가 없다는 점을 고려하면 특히 인상적입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 213.1,
  "end": 223.92
 },
 {
  "input": "Remember those two names, they'll come up a bit later.",
  "translatedText": "이 두 이름을 기억하세요. 나중에 나올 것입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 224.4,
  "end": 226.38
 },
 {
  "input": "By far the most popularized example of a rational function that you might study like this, and the fractals that can ensue, is one of the simplest functions, z squared plus c, where c is some constant.",
  "translatedText": "이와 같이 연구할 수 있는 유리 함수와 그에 따른 프랙탈의 가장 대중화된 예는 가장 간단한 함수 중 하나인 z 제곱 + c입니다. 여기서 c는 상수입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 227.16,
  "end": 238.8
 },
 {
  "input": "I'm going to guess that this is at least somewhat familiar to many of you, but it certainly doesn't hurt to quickly summarize the story here, since it can help set the stage for what comes later.",
  "translatedText": "나는 이것이 적어도 여러분 중 많은 사람들에게 다소 친숙하다고 추측할 것입니다. 그러나 나중에 나올 내용을 위한 무대를 설정하는 데 도움이 될 수 있기 때문에 여기에서 이야기를 빠르게 요약하는 것이 확실히 나쁠 것은 없습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 239.88,
  "end": 248.42
 },
 {
  "input": "For this game, we're going to think of c as a value that can be changed, and it'll be visible as this moveable yellow dot.",
  "translatedText": "이 게임에서 우리는 c를 변경할 수 있는 값으로 생각하고 움직일 수 있는 노란색 점으로 표시됩니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 249.32,
  "end": 255.56
 },
 {
  "input": "For the actual iterative process, we will always start with an initial value of z equals zero.",
  "translatedText": "실제 반복 프로세스에서는 항상 z의 초기 값이 0인 것으로 시작합니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 256.2,
  "end": 261.74
 },
 {
  "input": "So after iterating this function once, doing z squared plus c, you get c.",
  "translatedText": "따라서 이 함수를 한 번 반복하고 z 제곱 + c를 수행하면 c를 얻습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 262.64,
  "end": 267.24
 },
 {
  "input": "If you iterate a second time, plugging in that value to the function, you get c squared plus c.",
  "translatedText": "두 번째 반복하여 해당 값을 함수에 연결하면 c 제곱에 c를 더한 결과가 나옵니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 267.9,
  "end": 273.36
 },
 {
  "input": "And as I change around the value c here, you can kind of see how the second value moves in lockstep.",
  "translatedText": "여기서 c 값을 변경하면 두 번째 값이 어떻게 고정적으로 움직이는지 볼 수 있습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 273.96,
  "end": 275.4
 },
 {
  "input": "Then we can plug in that second value to get z3, and that third value to get z4, and continue on like this, visualizing our chain of values.",
  "translatedText": "그런 다음 두 번째 값을 연결하여 z3을 얻고 세 번째 값을 연결하여 z4를 얻은 다음 계속해서 값 체인을 시각화할 수 있습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 275.4,
  "end": 287.4
 },
 {
  "input": "So if I keep doing this many different times for the first many values, for some choices of c, this process remains bounded.",
  "translatedText": "따라서 처음 많은 값, 즉 c의 일부 선택에 대해 이 작업을 여러 번 계속하면 이 프로세스는 계속 제한됩니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 289.92,
  "end": 296.8
 },
 {
  "input": "You can still see it all on the screen.",
  "translatedText": "여전히 화면에서 모든 것을 볼 수 있습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 297.06,
  "end": 298.56
 },
 {
  "input": "And other times it looks like it blows up, and you can actually show that if it gets as big as two, it'll blow up to infinity.",
  "translatedText": "그리고 다른 때에는 그것이 터지는 것처럼 보이며 실제로 그것이 2만큼 커지면 무한대로 터질 것이라는 것을 보여줄 수 있습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 299.06,
  "end": 304.4
 },
 {
  "input": "If you color the points of the plane where it stays bounded black, and you assign some other gradient of colors to the divergent values based on how quickly the process rushes off to infinity, you get one of the most iconic images in all of math, the Mandelbrot set.",
  "translatedText": "경계가 검은색으로 유지되는 평면의 점을 색칠하고 프로세스가 무한대로 돌진하는 속도에 따라 발산 값에 다른 색상 그라데이션을 할당하면 모든 수학에서 가장 상징적인 이미지 중 하나를 얻게 됩니다. 만델브로 집합.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 307.82,
  "end": 323.2
 },
 {
  "input": "Now this interactive dots and stick visualization of the trajectory, by the way, is heavily inspired by Ben Spark's illustration and the Numberphile video he did about the Mandelbrot set, which is great, you should watch it.",
  "translatedText": "그런데 이 궤적의 대화형 점과 막대 시각화는 Ben Spark의 일러스트레이션과 Mandelbrot 세트에 대해 그가 만든 Numberphile 비디오에서 많은 영감을 받았습니다. 훌륭합니다. 꼭 시청해 보세요.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 324.56,
  "end": 334.74
 },
 {
  "input": "I honestly thought it was just too fun not to re-implement here.",
  "translatedText": "솔직히 여기서 다시 구현하지 않는 것이 너무 재미 있다고 생각했습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 334.9,
  "end": 334.74
 },
 {
  "input": "I would also highly recommend the interactive article on ako.",
  "translatedText": "또한 ako의 대화형 기사를 적극 추천합니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 334.9,
  "end": 340.6
 },
 {
  "input": "net about all of this stuff for any of you who haven't had the pleasure of reading that yet.",
  "translatedText": "아직 읽어보지 못한 분들을 위해 이 모든 내용을 소개합니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 340.6,
  "end": 344.64
 },
 {
  "input": "What's nice about the Ben Spark's illustration is how it illuminates what each different part of the Mandelbrot set actually represents.",
  "translatedText": "Ben Spark의 그림에서 좋은 점은 Mandelbrot 집합의 서로 다른 부분이 실제로 나타내는 것을 어떻게 조명하는지입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 345.24,
  "end": 351.3
 },
 {
  "input": "This largest cardioid section includes the values of c so that the process eventually converges to some limit.",
  "translatedText": "이 가장 큰 카디오이드 섹션에는 c 값이 포함되므로 프로세스는 결국 특정 한계에 수렴됩니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 352.06,
  "end": 358.14
 },
 {
  "input": "The big circle on the left represents the values where the process gets trapped in a cycle between two values, and then the top and bottom circles show values where the process gets trapped in a cycle of three values, and so on like this.",
  "translatedText": "왼쪽의 큰 원은 프로세스가 두 값 사이의 순환에 갇히는 값을 나타내고, 위쪽과 아래쪽 원은 프로세스가 세 값의 순환에 갇히는 값을 나타냅니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 358.94,
  "end": 371.38
 },
 {
  "input": "Each one of these little islands kind of has its own meaning.",
  "translatedText": "이 작은 섬들은 각각 고유한 의미를 가지고 있습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 371.48,
  "end": 373.72
 },
 {
  "input": "Also notice there's an important difference between how this Mandelbrot set and the Newton fractals we were looking at before are each constructed, beyond just a different underlying function.",
  "translatedText": "또한 이 Mandelbrot 집합과 이전에 살펴본 Newton 도형이 서로 다른 기본 함수를 넘어 각각 구성되는 방식 사이에는 중요한 차이점이 있습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 376.4,
  "end": 385.34
 },
 {
  "input": "For the Mandelbrot set we have a consistent seed value z equals zero, but the thing we're tweaking is the parameter c, changing the function itself.",
  "translatedText": "Mandelbrot 집합의 경우 일관된 시드 값 z는 0과 같지만 우리가 조정하는 것은 함수 자체를 변경하는 매개변수 c입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 386.1,
  "end": 394.34
 },
 {
  "input": "So what you're looking at is what we might call a parameter space.",
  "translatedText": "그래서 여러분이 보고 있는 것은 매개변수 공간이라고 부를 수 있는 것입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 394.82,
  "end": 397.5
 },
 {
  "input": "But with Newton's fractal we have a single unchanging function, but what we associate with each pixel is a different seed value for the process.",
  "translatedText": "그러나 뉴턴의 프랙탈에는 변하지 않는 단일 함수가 있지만 각 픽셀과 연관시키는 것은 프로세스에 대한 다른 시드 값입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 398.16,
  "end": 406.02
 },
 {
  "input": "Of course we could play the same game with the map z squared plus c, we could fix c at some constant, and then let the pixels represent the different possible initial values z naught.",
  "translatedText": "물론 우리는 지도 z 제곱 + c를 사용하여 동일한 게임을 할 수 있고, c를 어떤 상수로 고정한 다음 픽셀이 다른 가능한 초기 값 z naught를 나타내도록 할 수 있습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 407.16,
  "end": 416.8
 },
 {
  "input": "So whereas each pixel of the Mandelbrot set corresponds to a unique function, the images on the right each just correspond to a single function.",
  "translatedText": "따라서 만델브로 집합의 각 픽셀은 고유한 기능에 해당하는 반면, 오른쪽의 이미지는 각각 단일 기능에 해당합니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 417.68,
  "end": 424.62
 },
 {
  "input": "As we change the parameter c, it changes the entire image on the right.",
  "translatedText": "매개변수 c를 변경하면 오른쪽 이미지 전체가 변경됩니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 425.46,
  "end": 429.22
 },
 {
  "input": "And again just to be clear, the rule being applied is that we color pixels black if the process remains bounded, and then apply some kind of gradient to the ones that diverge away to infinity based on how quickly they diverge to infinity.",
  "translatedText": "다시 한 번 명확하게 말하자면, 적용되는 규칙은 프로세스가 제한된 상태로 유지되면 픽셀을 검은색으로 지정한 다음, 무한대로 갈라지는 속도에 따라 무한대로 갈라지는 픽셀에 일종의 그라디언트를 적용한다는 것입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 430.02,
  "end": 442.34
 },
 {
  "input": "In principle, and it's kind of mind-warping to think about, there is some four-dimensional space of all combinations of c and z naught, and what we're doing here is kind of looking through individual two-dimensional slices of that unimaginable pattern.",
  "translatedText": "원칙적으로 생각해 보면 생각하기가 좀 이상합니다. c와 z의 모든 조합으로 이루어진 4차원 공간이 있습니다. 여기서 우리가 하는 일은 상상할 수 없는 개별적인 2차원 조각을 살펴보는 것과 같습니다. 무늬.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 443.38,
  "end": 456.38
 },
 {
  "input": "You'll often hear or read the images on the right being referred to as Julia sets or Julia fractals, and when I first learned about all this stuff I'll admit that I kind of was left with the misconception that this is what the term Julia set refers to, specifically the z squared plus c case, and moreover that it's referring to the black region on the inside.",
  "translatedText": "여러분은 줄리아 집합 또는 줄리아 프랙탈이라고 불리는 오른쪽의 이미지를 듣거나 읽게 될 것입니다. 이 모든 것에 대해 처음 배웠을 때 나는 이것이 용어라는 오해를 갖고 있었다는 것을 인정할 것입니다. Julia 집합은 특히 z 제곱에 c를 더한 경우를 나타내며, 게다가 내부의 검은색 영역을 나타냅니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 457.74,
  "end": 475.72
 },
 {
  "input": "However the term Julia set has a much more general definition, and it would refer just to the boundaries of these regions, not the interior.",
  "translatedText": "그러나 Julia 집합이라는 용어는 훨씬 더 일반적인 정의를 가지며 내부가 아닌 이러한 영역의 경계만을 나타냅니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 476.44,
  "end": 482.96
 },
 {
  "input": "To set the stage for a more specific definition, and to also make some headway towards the first goal that I mentioned at the start, it's worth stepping back and really just picturing yourself as a mathematician right now, discovering all of this.",
  "translatedText": "좀 더 구체적인 정의를 위한 기반을 마련하고 제가 처음에 언급한 첫 번째 목표를 향해 전진하기 위해서는 한 걸음 물러서서 지금 이 모든 것을 발견하는 수학자로서 자신을 상상해 보는 것이 좋습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 483.9,
  "end": 495.1
 },
 {
  "input": "What would you actually do to construct a theory around this?",
  "translatedText": "이에 관한 이론을 구성하기 위해 실제로 무엇을 하시겠습니까?",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 495.74,
  "end": 498.88
 },
 {
  "input": "It's one thing to look at some pretty pictures, but what sorts of questions would you ask if you actually want to understand it all?",
  "translatedText": "예쁜 그림을 보는 것도 중요하지만 실제로 다 이해하고 싶다면 어떤 질문을 하시겠습니까?",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 499.26,
  "end": 505.06
 },
 {
  "input": "In general, if you want to understand something complicated, a good place to start is to ask if there are any parts of the system that have some simple behavior, preferably the simplest possible behavior, and in our example that might mean asking when does the process just stay fixed in place, meaning f of z is equal to z.",
  "translatedText": "일반적으로 복잡한 것을 이해하고 싶다면 시작하기 좋은 곳은 시스템에 간단한 동작, 바람직하게는 가능한 가장 단순한 동작을 하는 부분이 있는지 물어보는 것입니다. 프로세스는 제자리에 고정되어 있습니다. 즉, z의 f는 z와 같습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 506.02,
  "end": 523.14
 },
 {
  "input": "That's a pretty boring set of dynamics I think you'd agree.",
  "translatedText": "그것은 꽤 지루한 역학 세트입니다. 제 생각에는 여러분도 동의하실 것입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 523.74,
  "end": 525.88
 },
 {
  "input": "We call a value with this property a fixed point of the function.",
  "translatedText": "우리는 이 속성을 가진 값을 함수의 고정점이라고 부릅니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 526.5,
  "end": 529.68
 },
 {
  "input": "In the case of the functions arising from Newton's method, by design they have a fixed point at the roots of the relevant polynomial.",
  "translatedText": "뉴턴의 방법에서 발생하는 함수의 경우 설계상 관련 다항식의 근에 고정점을 갖습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 529.68,
  "end": 537.24
 },
 {
  "input": "You can verify for yourself, if p of z is equal to zero, then the entire expression is simply equal to z.",
  "translatedText": "p/z가 0이면 전체 표현식이 단순히 z와 같다는 것을 직접 확인할 수 있습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 537.84,
  "end": 543.92
 },
 {
  "input": "That's what it means to be a fixed point.",
  "translatedText": "이것이 바로 고정점이 된다는 의미입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 544.3,
  "end": 545.66
 },
 {
  "input": "If you're into exercises, you may enjoy pausing for a moment and computing the fixed points of this Mandelbrot set function, z squared plus c.",
  "translatedText": "연습에 열중하고 있다면 잠시 멈추고 만델브로 집합 함수 z 제곱 더하기 c의 고정점을 계산하는 것을 즐길 수 있습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 546.56,
  "end": 548.24
 },
 {
  "input": "More generally, any rational function will always have fixed points, since asking when this expression equals z can always be rearranged as finding the roots of some polynomial expression, and from the fundamental theorem of algebra this must have solutions, typically as many solutions as the highest degree in this expression.",
  "translatedText": "더 일반적으로, 모든 유리 함수는 항상 고정점을 가지게 됩니다. 왜냐하면 이 식이 z와 같을 때 묻는 것은 항상 일부 다항식의 근을 찾는 것으로 재배치될 수 있고, 대수학의 기본 정리에서 이것은 일반적으로 다음 수만큼 많은 해를 가져야 하기 때문입니다. 이 표현에서 가장 높은 등급입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 548.24,
  "end": 573.82
 },
 {
  "input": "Incidentally, this means that you could also find those fixed points using Newton's method, maybe that's a little too meta for us right now.",
  "translatedText": "덧붙여서, 이것은 뉴턴의 방법을 사용하여 고정점을 찾을 수도 있다는 것을 의미합니다. 어쩌면 그것은 지금 우리에게 너무 메타적인 것일 수도 있습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 574.96,
  "end": 581.6
 },
 {
  "input": "Now just asking about fixed points is maybe easy, but a key idea for understanding the full dynamics, and hence the diagrams we're looking at, is to understand stability.",
  "translatedText": "이제 고정점에 대해 묻는 것이 쉬울 수도 있지만 전체 역학, 즉 우리가 보고 있는 다이어그램을 이해하기 위한 핵심 아이디어는 안정성을 이해하는 것입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 582.64,
  "end": 591.72
 },
 {
  "input": "We say that a fixed point is attracting if nearby points tend to get drawn in towards it, and repelling if they're pushed away.",
  "translatedText": "고정점은 가까운 점들이 그쪽으로 끌려가는 경향이 있으면 끌어당기고, 멀어지면 밀어내는 경향이 있다고 말합니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 592.88,
  "end": 599.68
 },
 {
  "input": "And this is something you can actually compute, explicitly, using the derivative of the function.",
  "translatedText": "그리고 이것은 함수의 도함수를 사용하여 명시적으로 실제로 계산할 수 있는 것입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 600.38,
  "end": 605.04
 },
 {
  "input": "Symbolically, when you take derivatives of complex functions, it looks exactly the same as it would for real functions, though something like z squared has a derivative of 2 times z.",
  "translatedText": "상징적으로, 복소 함수의 도함수를 취하면 실제 함수의 경우와 정확히 동일하게 보입니다. 단, z 제곱과 같은 함수는 2 x z의 도함수를 갖습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 606.04,
  "end": 615.02
 },
 {
  "input": "But geometrically, there's a really lovely way to interpret what this means.",
  "translatedText": "하지만 기하학적으로 이것이 의미하는 바를 해석하는 정말 멋진 방법이 있습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 615.9,
  "end": 619.02
 },
 {
  "input": "For example, at the input 1, the derivative of this particular function evaluates to be 2, and what that's telling us is that if you look at a very small neighborhood around that input, and you follow what happens to all the points in that little neighborhood as you apply the function, in this case z squared, then it looks just like you're multiplying by 2.",
  "translatedText": "예를 들어, 입력 1에서 이 특정 함수의 도함수는 2로 평가되며, 이것이 우리에게 알려주는 것은 입력 주위의 아주 작은 이웃을 보고 그 작은 영역의 모든 점에 무슨 일이 일어나는지 추적한다는 것입니다. 함수를 적용할 때 이웃(이 경우 z 제곱)은 2를 곱하는 것처럼 보입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 619.74,
  "end": 639.18
 },
 {
  "input": "This is what a derivative of 2 means.",
  "translatedText": "이것이 2의 도함수가 의미하는 바입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 639.58,
  "end": 641.4
 },
 {
  "input": "To take another example, let's look at the input i.",
  "translatedText": "또 다른 예를 들어 입력 i를 살펴보겠습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 643.24,
  "end": 645.9
 },
 {
  "input": "We know that this function moves that input to the value negative 1, that's i squared.",
  "translatedText": "우리는 이 함수가 해당 입력을 -1 값, 즉 i 제곱으로 이동한다는 것을 알고 있습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 646.5,
  "end": 650.86
 },
 {
  "input": "But the added information that its derivative at this value is 2 times i gives us the added picture that when you zoom in around that point, and you look at the action of the function on this tiny neighborhood, it looks like multiplication by 2i, which in this case is saying it looks like a 90 degree rotation combined with an expansion by a factor of 2.",
  "translatedText": "하지만 이 값의 도함수가 2배라는 추가 정보는 해당 지점 주위를 확대하고 이 작은 이웃에 대한 함수의 동작을 보면 2i를 곱한 것처럼 보이는 추가 그림을 제공합니다. 이 경우에는 2배의 확장과 결합된 90도 회전처럼 보입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 651.58,
  "end": 671.16
 },
 {
  "input": "For the purposes of analyzing stability, the only thing we care about here is the growing and shrinking factor, the rotational part doesn't matter.",
  "translatedText": "안정성 분석을 위해 여기서 우리가 관심을 갖는 유일한 것은 성장 및 축소 요소이며 회전 부분은 중요하지 않습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 674.86,
  "end": 682.04
 },
 {
  "input": "So if you compute the derivative of a function at its fixed point, and the absolute value of this result is less than 1, it tells you that the fixed point is attracting, that nearby points tend to come in towards it.",
  "translatedText": "따라서 고정점에서 함수의 도함수를 계산하고 이 결과의 절대값이 1보다 작은 경우 고정점이 끌어당기고 근처의 점이 고정점을 향해 들어오는 경향이 있음을 알려줍니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 682.52,
  "end": 693.9
 },
 {
  "input": "If that derivative has an absolute value bigger than 1, it tells you the fixed point is repelling, it pushes away its neighbors.",
  "translatedText": "해당 도함수의 절대값이 1보다 크면 고정점이 반발하고 이웃을 밀어낸다는 뜻입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 694.36,
  "end": 700.36
 },
 {
  "input": "For example, if you work out the derivative of our Newton's map expression, and you simplify a couple things a little bit, here's what you would get out.",
  "translatedText": "예를 들어, 뉴턴 지도 표현의 미분을 계산하고 몇 가지를 단순화하면 다음과 같은 결과를 얻을 수 있습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 701.64,
  "end": 709.36
 },
 {
  "input": "So if z is a fixed point, which in this context means that it's one of the roots of the polynomial p, this derivative is not only smaller than 1, it's equal to 0.",
  "translatedText": "따라서 z가 고정점이라면(이 문맥에서 이는 다항식 p의 근 중 하나임을 의미), 이 도함수는 1보다 작을 뿐만 아니라 0과 같습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 710.38,
  "end": 719.66
 },
 {
  "input": "These are sometimes called super-attracting fixed points, since it means that a neighborhood around these points doesn't merely shrink, it shrinks a lot.",
  "translatedText": "이는 때때로 초유인 고정점이라고도 하는데, 이는 이 점 주변의 이웃이 단지 축소되는 것이 아니라 많이 축소된다는 것을 의미하기 때문입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 720.84,
  "end": 727.78
 },
 {
  "input": "And again, this is kind of by design, since the intent of Newton's method is to produce iterations that fall towards a root as quickly as they can.",
  "translatedText": "그리고 다시 말하지만, 이는 일종의 설계에 따른 것입니다. 왜냐하면 뉴턴 방법의 의도는 가능한 한 빨리 루트를 향해 떨어지는 반복을 생성하는 것이기 때문입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 728.66,
  "end": 737.02
 },
 {
  "input": "Pulling up our z squared plus c example, if you did the first exercise to find its fixed points, the next step would be to ask, when is at least one of those fixed points attracting?",
  "translatedText": "z 제곱 + c 예를 살펴보면, 고정점을 찾기 위해 첫 번째 연습을 수행한 경우 다음 단계는 고정점 중 적어도 하나가 언제 끌어당기는지 묻는 것입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 738.02,
  "end": 747.2
 },
 {
  "input": "For what values of c is this going to be true?",
  "translatedText": "c의 어떤 값에 대해 이것이 참이 될까요?",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 747.82,
  "end": 750.1
 },
 {
  "input": "And then, if that's not enough of a challenge, try using the result that you find to show that this condition corresponds to the main cardioid shape of the Mandelbrot set.",
  "translatedText": "그런 다음 이것이 충분하지 않다면 찾은 결과를 사용하여 이 조건이 Mandelbrot 세트의 주요 카디오이드 모양에 해당한다는 것을 보여주십시오.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 751.04,
  "end": 760.06
 },
 {
  "input": "This is something you can compute explicitly, it's pretty cool.",
  "translatedText": "이것은 명시적으로 계산할 수 있는 것인데 꽤 멋지네요.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 760.68,
  "end": 763.4
 },
 {
  "input": "A natural next step would be to ask about cycles, and this is where things really start to get interesting.",
  "translatedText": "자연스러운 다음 단계는 주기에 관해 묻는 것입니다. 여기서부터 일이 정말 흥미로워지기 시작합니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 765.32,
  "end": 769.92
 },
 {
  "input": "If f of z is not z, but some other value, and then that value comes back to z, it means that you've fallen into a two cycle.",
  "translatedText": "z의 f가 z가 아니고 다른 값이고, 그 값이 다시 z로 돌아오면 이는 2주기에 빠졌음을 의미합니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 770.72,
  "end": 778.56
 },
 {
  "input": "You could explicitly find these kinds of two cycles by evaluating f of f of z, and then setting it equal to z.",
  "translatedText": "f/f/z를 평가한 다음 이를 z와 동일하게 설정하여 이러한 종류의 두 사이클을 명시적으로 찾을 수 있습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 779.32,
  "end": 786.3
 },
 {
  "input": "For example, with the z squared plus c map, f of f of z expands out to look like this.",
  "translatedText": "예를 들어, z 제곱 + c 맵의 경우 f of f of z는 다음과 같이 확장됩니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 787.12,
  "end": 792.7
 },
 {
  "input": "A little messy, but you know, it's not too terrible.",
  "translatedText": "조금 지저분하지만, 그렇게 끔찍하지는 않습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 793.34,
  "end": 795.08
 },
 {
  "input": "The main thing to highlight is that it boils down to solving some degree four equation.",
  "translatedText": "강조해야 할 가장 중요한 점은 어느 정도 4차 방정식을 푸는 것으로 귀결된다는 것입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 795.56,
  "end": 799.38
 },
 {
  "input": "You should note though that the fixed points will also be solutions to this equation, so technically the two cycles are the solutions to this minus the solutions to the original fixed point equation.",
  "translatedText": "고정 소수점은 이 방정식의 해이기도 하므로 기술적으로 두 사이클은 원래 고정 소수점 방정식의 해를 뺀 이에 대한 해입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 800.16,
  "end": 809.7
 },
 {
  "input": "And likewise, you can use the same idea to look for n cycles by composing f with itself n different times.",
  "translatedText": "마찬가지로, 동일한 아이디어를 사용하여 f를 n번 다른 방식으로 구성하여 n 사이클을 찾을 수 있습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 811.08,
  "end": 816.96
 },
 {
  "input": "The explicit expressions that you would get quickly become insanely messy, but it's still elucidating to ask how many cycles would you expect based on this hypothetical process.",
  "translatedText": "금방 얻을 수 있는 명시적인 표현은 엄청나게 지저분해집니다. 하지만 이 가상 프로세스를 기반으로 얼마나 많은 사이클을 예상할 것인지 묻는 것은 여전히 명쾌합니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 817.88,
  "end": 827.42
 },
 {
  "input": "If we stick with our simple z squared plus c example, as you compose it with itself, you'd get a polynomial with degree four, and then one with degree eight, and then degree 16, and so on and so on, exponentially growing the order of the polynomial.",
  "translatedText": "간단한 z 제곱 더하기 c 예를 고수하면 자체적으로 구성할 때 4차 다항식, 8차 다항식, 16차 다항식 등을 얻게 되며 기하급수적으로 증가합니다. 다항식의 순서.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 827.96,
  "end": 841.48
 },
 {
  "input": "So in principle, if I asked you how many cycles are there with a period of one million, you can know that it's equivalent to solving some just absolutely insane polynomial expression with a degree of two to the one million.",
  "translatedText": "따라서 원칙적으로 백만 주기에 몇 개의 사이클이 있는지 묻는다면 이는 2차에서 100만까지의 완전히 미친 다항식을 푸는 것과 동일하다는 것을 알 수 있습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 842.36,
  "end": 854.08
 },
 {
  "input": "So again, fundamental theorem of algebra, you would expect to find something on the order of two to the one million points in the complex plane, which cycle in exactly this way.",
  "translatedText": "다시 말하지만, 대수학의 기본 정리는 정확히 이런 방식으로 순환하는 복소 평면에서 2~100만 개의 점 정도에서 무언가를 찾을 것이라고 기대할 것입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 854.88,
  "end": 864.64
 },
 {
  "input": "And more generally, for any rational map, you'll always be able to find values whose behavior falls into a cycle with period n.",
  "translatedText": "그리고 더 일반적으로, 합리적인 맵의 경우, 주기 n의 주기에 해당하는 동작을 갖는 값을 항상 찾을 수 있습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 865.7,
  "end": 871.86
 },
 {
  "input": "It ultimately boils down to solving some probably insane polynomial expression.",
  "translatedText": "그것은 궁극적으로 아마도 미친 다항식 표현을 해결하는 것으로 귀결됩니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 872.36,
  "end": 876.48
 },
 {
  "input": "And just like with this example, the number of such periodic points will grow exponentially with n.",
  "translatedText": "그리고 이 예와 마찬가지로 이러한 주기점의 수는 n에 따라 기하급수적으로 증가합니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 877.18,
  "end": 882.68
 },
 {
  "input": "I didn't really talk about this in the last video about Newton's fractal, but it's sort of strange to think that there are infinitely many points that fall into some kind of cycle even for a process like this.",
  "translatedText": "지난 영상에서 뉴턴의 프랙탈에 대해서는 별로 이야기하지 않았지만, 이런 과정을 거치더라도 어떤 종류의 순환에 빠지는 지점이 무수히 많다고 생각하면 좀 이상합니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 883.98,
  "end": 893.34
 },
 {
  "input": "In almost all cases though, these points are somewhere on the boundary between those colored regions, and they don't really come up in practice because the probability of landing on one of them is zero.",
  "translatedText": "그러나 거의 모든 경우에 이러한 지점은 색상이 지정된 영역 사이의 경계 어딘가에 있으며 실제로는 그 중 하나에 도달할 확률이 0이기 때문에 실제로 나타나지 않습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 894.02,
  "end": 903.6
 },
 {
  "input": "What matters for actually falling into one of these is if one of the cycles is attracting, in the sense that a neighborhood of points around a value from that cycle would tend to get pulled in towards that cycle.",
  "translatedText": "실제로 이들 중 하나에 빠지는 데 중요한 것은 주기 중 하나가 매력을 느끼는지 여부입니다. 즉, 해당 주기의 값 주변 지점이 해당 주기로 끌려가는 경향이 있다는 의미입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 904.24,
  "end": 915.22
 },
 {
  "input": "A highly relevant question for someone interested in numerical methods is whether or not this Newton's map process ever has an attracting cycle, because if there is, it means there's a non-zero chance that your initial guess gets trapped in that cycle and it never finds a root.",
  "translatedText": "수치적 방법에 관심이 있는 사람에게 매우 관련성이 높은 질문은 이 뉴턴의 지도 프로세스에 유인 주기가 있는지 여부입니다. 왜냐하면 만약 존재한다면 초기 추측이 해당 주기에 갇혀 결코 찾지 못할 확률이 0이 아니라는 의미이기 때문입니다. 뿌리.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 916.46,
  "end": 930.16
 },
 {
  "input": "The answer here is actually yes.",
  "translatedText": "여기에 대한 대답은 실제로 '예'입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 931.16,
  "end": 932.8
 },
 {
  "input": "More explicitly, if you try to find the roots of z cubed minus 2z plus 2, and you're using Newton's method, watch what happens to a small cluster that starts around the value zero.",
  "translatedText": "좀 더 명확하게 말하면, z 세제곱 빼기 2z 더하기 2의 근을 찾으려고 하고 Newton의 방법을 사용하는 경우 값 0 주변에서 시작하는 작은 클러스터에 무슨 일이 일어나는지 살펴보세요.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 933.58,
  "end": 944.06
 },
 {
  "input": "It sort of bounces back and forth.",
  "translatedText": "앞뒤로 튀는 정도입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 944.06,
  "end": 946.26
 },
 {
  "input": "And well, okay, in this case the cluster we started with was a little bit too big, so some of the outer points get sprayed away.",
  "translatedText": "그리고 음, 좋습니다. 이 경우에는 우리가 시작한 클러스터가 약간 너무 커서 외부 점 중 일부가 흩어졌습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 947.26,
  "end": 952.44
 },
 {
  "input": "But here's what it looks like if we start with a smaller cluster.",
  "translatedText": "하지만 더 작은 클러스터로 시작하면 다음과 같습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 952.78,
  "end": 955.48
 },
 {
  "input": "Notice how all of the points genuinely do shrink in towards the cycle between zero and one.",
  "translatedText": "모든 포인트가 실제로 0과 1 사이의 순환을 향해 어떻게 축소되는지 확인하세요.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 956.12,
  "end": 960.94
 },
 {
  "input": "It's not likely that you hit this with a random seed, but it definitely is possible.",
  "translatedText": "무작위 시드로 이것을 칠 가능성은 없지만 확실히 가능합니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 961.48,
  "end": 965.04
 },
 {
  "input": "The exercise that you could do to verify that a cycle like this is attracting, by the way, would be to compute the derivative of f of f of z, and you check that at the input zero, this derivative has a magnitude less than one.",
  "translatedText": "그런데 이와 같은 순환이 유인되는지 확인하기 위해 할 수 있는 연습은 f(f)(z)의 도함수를 계산하고 입력 0에서 이 도함수가 1보다 작은 크기를 갖는지 확인하는 것입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 966.08,
  "end": 978.76
 },
 {
  "input": "The thing that blew my mind a little is what happens when you try to visualize which cubic polynomials have attracting cycles at all.",
  "translatedText": "내 마음을 조금 놀라게 한 것은 어떤 3차 다항식이 유인 사이클을 가지고 있는지 시각화하려고 할 때 어떤 일이 발생하는지입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 979.76,
  "end": 986.54
 },
 {
  "input": "Hopefully if Newton's method is going to be at all decent at finding roots, those attracting cycles should be rare.",
  "translatedText": "뉴턴의 방법이 뿌리를 찾는 데 전혀 적합하다면 이러한 유인 주기는 드물어야 합니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 987.08,
  "end": 992.82
 },
 {
  "input": "First of all, to better visualize the one example we're looking at, we could draw the same fractal that we had before, coloring each point based on what root the seed value starting at that point will tend to.",
  "translatedText": "우선, 우리가 보고 있는 하나의 예를 더 잘 시각화하기 위해 이전과 동일한 프랙탈을 그려서 해당 지점에서 시작하는 시드 값의 근이 무엇인지에 따라 각 지점을 색칠할 수 있습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 993.96,
  "end": 1003.76
 },
 {
  "input": "But this time we'll have an added condition of coloring points that says that if the seed value never gets close enough to a root at all, we will color the pixel black.",
  "translatedText": "하지만 이번에는 시드 값이 루트에 전혀 가까워지지 않으면 픽셀을 검정색으로 채색한다는 점 채색 조건이 추가됩니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1004.0,
  "end": 1012.8
 },
 {
  "input": "Notice if I tweak the roots, meaning that we're trying out different cubic polynomials, it's actually really hard to find any place to put them so that we see any black pixels at all.",
  "translatedText": "근을 조정하면(즉, 다양한 3차 다항식을 시도한다는 뜻) 검은색 픽셀이 전혀 보이지 않도록 배치할 위치를 찾는 것이 실제로 매우 어렵습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1013.76,
  "end": 1023.66
 },
 {
  "input": "I can find this one little sweet spot here, but it's definitely rare.",
  "translatedText": "여기에서 이 작은 지점을 찾을 수 있지만 확실히 드뭅니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1024.32,
  "end": 1027.66
 },
 {
  "input": "Now what I want is some kind of way to visualize every possible cubic polynomial at once with a single image in a way that shows which ones have attracting cycles.",
  "translatedText": "이제 제가 원하는 것은 하나의 이미지로 가능한 모든 3차 다항식을 한 번에 시각화하여 어느 이미지에 유인 주기가 있는지 보여주는 일종의 방법입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1028.68,
  "end": 1037.64
 },
 {
  "input": "Luckily it turns out that there is a really simple way to test whether or not one of these polynomials has an attracting cycle.",
  "translatedText": "운 좋게도 이러한 다항식 중 하나에 유인 주기가 있는지 여부를 테스트하는 정말 간단한 방법이 있다는 것이 밝혀졌습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1038.88,
  "end": 1044.4
 },
 {
  "input": "All you have to do is look at the seed value which sits at the average of the three roots, this center of mass here.",
  "translatedText": "여러분이 해야 할 일은 세 뿌리의 평균, 즉 여기 질량 중심에 있는 시드 값을 살펴보는 것입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1045.06,
  "end": 1051.46
 },
 {
  "input": "Turns out, this is not at all obvious, if there's an attracting cycle you can guarantee that this seed value will fall into that attracting cycle.",
  "translatedText": "밝혀진 바에 따르면, 이는 전혀 명확하지 않습니다. 만약 유인 주기가 있다면 이 종자 가치가 해당 유인 주기에 속할 것이라고 보장할 수 있습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1052.1,
  "end": 1059.64
 },
 {
  "input": "In other words, if there are any black points, this will be one of them.",
  "translatedText": "즉, 검은 점이 있다면 이것이 그 중 하나가 될 것입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1060.5,
  "end": 1064.42
 },
 {
  "input": "If you want to know where this magical fact comes from, it stems from a theorem of our good friend Fatou.",
  "translatedText": "이 마법같은 사실이 어디서 유래하는지 알고 싶다면, 그것은 우리의 좋은 친구 파투(Fatou)의 정리에서 비롯됩니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1065.34,
  "end": 1070.52
 },
 {
  "input": "He showed that if one of these rational maps has an attracting cycle, you can look at the values where the derivative of your iterated function equals zero, and at least one of those values has to fall into the cycle.",
  "translatedText": "그는 이러한 합리적인 지도 중 하나에 유인 주기가 있는 경우 반복 함수의 도함수가 0인 값을 볼 수 있으며 해당 값 중 적어도 하나가 주기에 속해야 함을 보여주었습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1070.92,
  "end": 1082.36
 },
 {
  "input": "That might seem like a little bit of a weird fact, but the loose intuition is that if a cycle is going to be attracting, at least one of its values should have a very small derivative, that's where the shrinking will come from.",
  "translatedText": "조금 이상한 사실처럼 보일 수도 있지만, 느슨한 직관은 주기가 매력적이려면 그 값 중 적어도 하나가 매우 작은 도함수를 가져야 하며, 여기서 수축이 발생한다는 것입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1083.44,
  "end": 1094.54
 },
 {
  "input": "And this in turn means that that value in the cycle sits near some point where the derivative is not merely small but equal to zero, and that point ends up being close enough to get sucked into the cycle.",
  "translatedText": "그리고 이는 결국 주기의 해당 값이 도함수가 작을 뿐만 아니라 0과 같은 지점 근처에 위치하며 그 지점이 결국 주기에 빨려 들어갈 만큼 충분히 가까워진다는 것을 의미합니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1095.1,
  "end": 1105.28
 },
 {
  "input": "This fact also justifies why with the Mandelbrot set, where we were only using one seed value z equals zero, it's still enough to get us a very full and interesting picture.",
  "translatedText": "이 사실은 또한 하나의 시드 값 z가 0인 Mandelbrot 집합을 사용하여 매우 완전하고 흥미로운 그림을 얻는 데 여전히 충분한 이유를 정당화합니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1106.56,
  "end": 1115.1
 },
 {
  "input": "If there's a stable cycle to be found, that one seed value is definitely going to find it.",
  "translatedText": "찾아야 할 안정적인 주기가 있다면 해당 하나의 시드 값이 확실히 그것을 찾을 것입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1115.32,
  "end": 1120.6
 },
 {
  "input": "I feel like maybe I'm assigning a little too much homework and exercises today, but if you're into that, yet another pleasing one would be to look back at the derivative expression that we found with our function that arises from Newton's method, and use this wonderful theorem of Fatou's to show our magical fact about cubic polynomials, that it suffices to just check this midpoint of the roots.",
  "translatedText": "오늘은 숙제와 연습문제를 너무 많이 내는 것 같지만, 그것에 관심이 있다면 또 다른 즐거운 점은 뉴턴의 방법에서 파생된 함수에서 찾은 미분 표현을 다시 살펴보는 것입니다. 그리고 이 놀라운 파투의 정리를 사용하여 삼차 다항식에 대한 우리의 마법적인 사실, 즉 근의 중간점을 확인하는 것만으로도 충분하다는 사실을 보여줍니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1121.5,
  "end": 1142.44
 },
 {
  "input": "Honestly though, all of those are details that you don't really have to worry about.",
  "translatedText": "하지만 솔직히 말해서, 이 모든 것들은 실제로 걱정할 필요가 없는 세부 사항입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1143.24,
  "end": 1146.54
 },
 {
  "input": "The upshot is that we can perform a test for whether or not one of these polynomials has an attracting cycle by looking at just a single point, not all of them.",
  "translatedText": "결론은 모든 다항식이 아닌 단 하나의 점을 살펴봄으로써 이러한 다항식 중 하나에 유인 주기가 있는지 여부에 대한 테스트를 수행할 수 있다는 것입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1146.84,
  "end": 1154.72
 },
 {
  "input": "And because of this, we can actually generate a really cool diagram.",
  "translatedText": "이 때문에 실제로 정말 멋진 다이어그램을 생성할 수 있습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1155.48,
  "end": 1158.6
 },
 {
  "input": "The way this will work is to fix two roots in place, let's say putting them at z equals negative one and z equals positive one, and then we'll move around that third root, which I'll call lambda.",
  "translatedText": "이것이 작동하는 방식은 두 개의 루트를 제자리에 고정하는 것입니다. z에 놓는 것은 음의 1이고 z는 양의 1과 같습니다. 그런 다음 세 번째 루트를 중심으로 이동합니다. 이를 람다라고 부르겠습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1159.38,
  "end": 1169.04
 },
 {
  "input": "Remember, the key feature that we're looking for is when the point at the center of mass is black.",
  "translatedText": "기억하세요. 우리가 찾고 있는 주요 특징은 질량 중심의 점이 검은색일 때입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1170.48,
  "end": 1175.16
 },
 {
  "input": "So what I'll do is draw a second diagram on the right where each pixel corresponds to one possible choice of lambda.",
  "translatedText": "그래서 제가 할 일은 오른쪽에 각 픽셀이 하나의 가능한 람다 선택에 해당하는 두 번째 다이어그램을 그리는 것입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1175.86,
  "end": 1182.94
 },
 {
  "input": "What we're going to do is color that pixel based on the color of this midpoint of the three roots.",
  "translatedText": "우리가 할 일은 세 루트의 중간점 색상을 기반으로 해당 픽셀에 색상을 지정하는 것입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1183.86,
  "end": 1188.6
 },
 {
  "input": "If this feels a little bit confusing, that's totally okay, there are kind of a lot of layers at play here.",
  "translatedText": "이것이 약간 혼란스럽게 느껴지더라도 괜찮습니다. 여기에는 많은 레이어가 작용하고 있습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1189.6,
  "end": 1194.44
 },
 {
  "input": "Just remember, each pixel on the right corresponds to a unique polynomial as determined by this parameter lambda.",
  "translatedText": "오른쪽의 각 픽셀은 이 매개변수 람다에 의해 결정된 고유 다항식에 해당한다는 점을 기억하세요.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1195.02,
  "end": 1201.28
 },
 {
  "input": "In fact, you might call this a parameter space.",
  "translatedText": "실제로 이것을 매개변수 공간이라고 부를 수도 있습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1202.0,
  "end": 1204.74
 },
 {
  "input": "Sound familiar?",
  "translatedText": "익숙한 것 같나요?",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1205.08,
  "end": 1205.58
 },
 {
  "input": "Points in this parameter space are colored black if, and only if, the Newton's method process for the corresponding polynomial produces an attracting cycle.",
  "translatedText": "이 매개변수 공간의 점은 해당 다항식에 대한 뉴턴 방법 프로세스가 유인 주기를 생성하는 경우에만 검은색으로 표시됩니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1213.74,
  "end": 1223.34
 },
 {
  "input": "Again, don't worry if that takes a little moment to digest.",
  "translatedText": "다시 한번 말씀드리지만, 소화하는 데 시간이 조금 걸리더라도 걱정하지 마세요.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1224.26,
  "end": 1226.4
 },
 {
  "input": "Now, at first glance, it might not look like there are any black points at all on this diagram, and this is good news.",
  "translatedText": "이제 언뜻 보면 이 다이어그램에 검은 점이 전혀 없어 보일 수도 있는데 이는 좋은 소식입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1227.84,
  "end": 1233.78
 },
 {
  "input": "It means that in most cases Newton's method will not get sucked into cycles like this.",
  "translatedText": "이는 대부분의 경우 뉴턴의 방법이 이와 같은 순환에 빠지지 않는다는 것을 의미합니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1233.94,
  "end": 1238.3
 },
 {
  "input": "But, and I think I've previewed this enough that you know exactly where this is going, if we zoom in we can find a black region, and that black region looks exactly like a Mandelbrot set.",
  "translatedText": "하지만 저는 이것이 어디로 가는지 정확히 알 수 있을 만큼 충분히 미리 보았다고 생각합니다. 확대하면 검은색 영역을 찾을 수 있고 그 검은색 영역은 정확히 만델브로트 세트처럼 보입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1239.0,
  "end": 1249.34
 },
 {
  "input": "Yet again, asking a question where we tweak a parameter for one of these functions yields this iconic cardioid and bubbles shape.",
  "translatedText": "그러나 다시 한번, 이러한 기능 중 하나에 대한 매개변수를 조정하는 질문을 하면 이 상징적인 카디오이드와 거품 모양이 생성됩니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1250.02,
  "end": 1257.16
 },
 {
  "input": "The upshot is that this shape is not as specific to the z squared plus c example as you might think.",
  "translatedText": "결론은 이 모양이 생각하는 것만큼 z 제곱 + c 예제에만 국한되지 않는다는 것입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1258.02,
  "end": 1262.9
 },
 {
  "input": "It seems to relate to something more general and universal about parameter spaces with processes like this.",
  "translatedText": "이는 이와 같은 프로세스를 갖는 매개변수 공간에 대한 보다 일반적이고 보편적인 것과 관련이 있는 것 같습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1263.4,
  "end": 1269.44
 },
 {
  "input": "Still, one pressing question is why we get fractals at all.",
  "translatedText": "그럼에도 불구하고 한 가지 긴급한 질문은 우리가 프랙탈을 얻는 이유입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1271.64,
  "end": 1275.52
 },
 {
  "input": "In the last video I talked about how the diagrams for Newton's method have this very peculiar property where if you draw a small circle around the boundary of a colored region, that circle must actually include all available colors from the picture.",
  "translatedText": "지난 비디오에서 나는 뉴턴 방법의 다이어그램이 색상이 있는 영역의 경계 주위에 작은 원을 그리면 그 원이 실제로 그림에서 사용 가능한 모든 색상을 포함해야 하는 매우 독특한 속성을 갖는 방법에 대해 설명했습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1276.22,
  "end": 1289.36
 },
 {
  "input": "And this is true more generally for any rational map.",
  "translatedText": "그리고 이것은 합리적인 지도에 있어서 더 일반적으로 사실입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1290.28,
  "end": 1292.74
 },
 {
  "input": "If you were to assign colors to regions based on which limiting behavior points fall into, like which limit point, or which limit cycle, or does it tend to infinity, then tiny circles that you draw either contain points with just one of those limiting behaviors, or they contain points with all of them.",
  "translatedText": "제한점, 제한 주기, 무한대 경향 등 제한 행동 지점이 속하는 영역에 색상을 할당하려는 경우 그리는 작은 원에는 이러한 제한 행동 중 하나만 포함하는 지점이 포함됩니다. , 또는 모두 포함된 포인트를 포함합니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1293.14,
  "end": 1309.64
 },
 {
  "input": "It's never anything in between.",
  "translatedText": "그 사이에는 결코 아무것도 없습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1309.82,
  "end": 1311.2
 },
 {
  "input": "So in the case where there's at least three colors, this property implies that our boundary could never be smooth, since along a smooth segment you can draw a small enough circle that touches just two colors, not all of them.",
  "translatedText": "따라서 최소한 세 가지 색상이 있는 경우 이 속성은 경계가 결코 매끄러울 수 없음을 의미합니다. 매끄러운 세그먼트를 따라 모든 색상이 아닌 두 가지 색상에만 닿는 작은 원을 그릴 수 있기 때문입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1311.96,
  "end": 1323.34
 },
 {
  "input": "And empirically this is what we see, no matter how far you zoom in these boundaries are always rough.",
  "translatedText": "그리고 경험적으로 이것이 우리가 보는 것입니다. 아무리 확대해도 이러한 경계는 항상 거칠습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1323.92,
  "end": 1328.36
 },
 {
  "input": "And furthermore, you might notice that as we zoom in you can always see all available colors within the frame.",
  "translatedText": "또한 확대하면 프레임 내에서 사용 가능한 모든 색상을 항상 볼 수 있다는 것을 알 수 있습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1328.88,
  "end": 1334.52
 },
 {
  "input": "This doesn't explain rough boundaries in the context where there's only two limiting behaviors, but still it's a loose end that I left in that video worth tying up, and it's a nice excuse to bring in two important bits of terminology, Julia sets and Fatou sets.",
  "translatedText": "이것은 두 가지 제한 동작만 있는 맥락에서 대략적인 경계를 설명하지는 않지만 여전히 묶을 가치가 있는 해당 비디오에 남겨둔 느슨한 끝이며 Julia 세트와 두 가지 중요한 용어를 가져오는 좋은 변명입니다. 파투 세트.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1336.16,
  "end": 1349.26
 },
 {
  "input": "If a point eventually falls into some stable predictable pattern, we say that it's part of the Fatou set of our iterated function.",
  "translatedText": "어떤 점이 결국 안정적이고 예측 가능한 패턴에 속하게 되면 반복 함수의 Fatou 집합의 일부라고 말합니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1349.94,
  "end": 1357.04
 },
 {
  "input": "And for all the maps that we've seen, this includes almost everything.",
  "translatedText": "그리고 우리가 본 모든 지도에는 거의 모든 것이 포함되어 있습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1357.74,
  "end": 1360.86
 },
 {
  "input": "The Julia set is everything else, which in the pictures we've seen would be the rough boundaries between the colored regions, what happens as you transition from one stable attractor to another.",
  "translatedText": "Julia 세트는 다른 모든 것입니다. 우리가 본 그림에서는 색상 영역 사이의 대략적인 경계, 즉 하나의 안정적인 어트랙터에서 다른 안정적인 어트랙터로 전환할 때 발생하는 일입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1361.64,
  "end": 1372.34
 },
 {
  "input": "For example, the Julia set will include all of the repelling cycles and the repelling fixed points.",
  "translatedText": "예를 들어 Julia 집합에는 모든 반발 주기와 반발 고정점이 포함됩니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1373.2,
  "end": 1378.16
 },
 {
  "input": "A typical point from the Julia set though will not be a cycle, it'll bounce around forever with no clear pattern.",
  "translatedText": "Julia 집합의 일반적인 지점은 순환이 아니지만 명확한 패턴 없이 영원히 튀어 오를 것입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1378.88,
  "end": 1384.34
 },
 {
  "input": "Now if you look at a point in the Fatou set and you draw a small enough disk around it, as you follow the process that small disk will eventually shrink as you fall into whatever the relevant stable behavior is.",
  "translatedText": "이제 Fatou 세트의 한 지점을 보고 그 주위에 충분히 작은 디스크를 그리면 관련 안정적인 동작이 무엇이든 관계 없이 작은 디스크가 결국 축소되는 프로세스를 따르면 됩니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1385.62,
  "end": 1395.72
 },
 {
  "input": "Unless you're going to infinity, but you could kind of think of that as the disk shrinking around infinity, but maybe that just confuses matters.",
  "translatedText": "무한대로 가는 것이 아니라면 디스크가 무한대 주변으로 줄어들고 있다고 생각할 수도 있지만 문제가 혼란스러울 수도 있습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1396.24,
  "end": 1402.02
 },
 {
  "input": "By contrast, if you draw a small disk around a point on the Julia set, it tends to expand over time as the points from within that circle go off and kind of do their own things.",
  "translatedText": "대조적으로, 줄리아 집합의 한 점 주위에 작은 원판을 그리는 경우, 해당 원 내의 점이 떨어져 나가고 자체 작업을 수행함에 따라 시간이 지남에 따라 디스크가 확장되는 경향이 있습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1404.5,
  "end": 1414.02
 },
 {
  "input": "In other words, points of the Julia set tend to behave chaotically.",
  "translatedText": "즉, Julia 집합의 점은 혼란스럽게 행동하는 경향이 있습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1415.54,
  "end": 1419.54
 },
 {
  "input": "Their nearby neighbors, even very nearby, will eventually fall into qualitatively different behaviors.",
  "translatedText": "가까운 이웃은 심지어 매우 가까운 곳에 있더라도 결국 질적으로 다른 행동을 하게 됩니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1420.08,
  "end": 1425.26
 },
 {
  "input": "But it's not merely that this disk expands.",
  "translatedText": "하지만 단순히 이 디스크가 팽창하는 것만은 아닙니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1426.42,
  "end": 1428.84
 },
 {
  "input": "A pretty surprising result, key to the multicolor property mentioned before, is that if you let this process play out, that little disk eventually expands so much that it hits every single point on the complex plane, with at most two exceptions.",
  "translatedText": "앞에서 언급한 다색 속성의 핵심인 매우 놀라운 결과는 이 프로세스를 실행하면 작은 디스크가 결국 너무 많이 팽창하여 최대 두 가지 예외를 제외하고 복잡한 평면의 모든 단일 지점에 도달한다는 것입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1429.36,
  "end": 1442.4
 },
 {
  "input": "This is known as the stuff-goes-everywhere principle of Julia sets.",
  "translatedText": "이것은 Julia가 설정한 모든 곳에 물건이 있다는 원칙으로 알려져 있습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1442.4,
  "end": 1446.88
 },
 {
  "input": "Okay, it's not actually called that.",
  "translatedText": "좋아요, 실제로는 그렇게 부르지 않습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1447.94,
  "end": 1449.36
 },
 {
  "input": "In the source I was reading from, it's mentioned as a corollary to something known as Montel's theorem.",
  "translatedText": "내가 읽은 자료에서 그것은 몬텔의 정리로 알려진 것에 대한 필연적인 결과로 언급되었습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1449.7,
  "end": 1453.8
 },
 {
  "input": "But it should be called that.",
  "translatedText": "하지만 그렇게 불러야 합니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1454.32,
  "end": 1455.7
 },
 {
  "input": "In some sense, what this is telling us is that the points of the Julia set are not merely chaotic, they're kind of as chaotic as they possibly can be.",
  "translatedText": "어떤 의미에서 이것이 우리에게 말하는 것은 Julia 집합의 포인트가 단순히 혼란스러운 것이 아니라 가능한 한 혼란스럽다는 것입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1456.12,
  "end": 1464.22
 },
 {
  "input": "Here, let me show you a little simulation using the Newton's map, with a cluster of a few thousand points all starting from within a tiny tiny distance, 1 one millionth, from a point on the Julia set.",
  "translatedText": "여기에서는 줄리아 집합의 한 지점에서 1백만 분의 1이라는 아주 작은 거리 내에서 시작하는 수천 개의 지점으로 구성된 클러스터가 포함된 뉴턴 지도를 사용한 약간의 시뮬레이션을 보여 드리겠습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1465.86,
  "end": 1476.28
 },
 {
  "input": "Of course, the stuff-goes-everywhere principle is about the uncountably infinitely many points that would lie within that distance, and that they eventually expand out to hit everything on the plane, except possibly two points.",
  "translatedText": "물론, 물건은 어디에나 있다는 원칙은 그 거리 내에 셀 수 없이 무한히 많은 점에 관한 것이며, 결국 두 점을 제외하고 평면의 모든 것을 도달하도록 확장된다는 것입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1482.68,
  "end": 1493.7
 },
 {
  "input": "But this little cluster should still give the general idea.",
  "translatedText": "하지만 이 작은 클러스터는 여전히 일반적인 아이디어를 제공해야 합니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1494.2,
  "end": 1496.78
 },
 {
  "input": "A small finite sample from that tiny disk gets sprayed all over the place in seemingly all directions.",
  "translatedText": "그 작은 디스크에서 나온 작은 유한 샘플이 겉보기에 모든 방향으로 여기저기에 뿌려집니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1496.78,
  "end": 1502.8
 },
 {
  "input": "What this means for our purposes is that if there's some attractive behavior of our map, something like an attracting fixed point or an attracting cycle, you can be guaranteed that the values from that tiny disk around the point on the Julia set, no matter how tiny it was, will eventually fall into that attracting behavior.",
  "translatedText": "이것이 우리의 목적에 있어 의미하는 바는, 끌어당기는 고정점이나 끌어당기는 주기와 같은 맵의 매력적인 동작이 있는 경우 Julia 집합의 점 주위에 있는 작은 디스크의 값이 어떻게든 보장될 수 있다는 것입니다. 아주 작았지만 결국에는 그 매력적인 행동에 빠지게 될 것입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1504.4,
  "end": 1520.12
 },
 {
  "input": "If we have a case with three or more attracting behaviors, this gives us some explanation for why the Julia set is not smooth, why it has to be complicated.",
  "translatedText": "세 개 이상의 유인 행동이 있는 경우 Julia 집합이 왜 매끄럽지 않고 복잡해야 하는지에 대한 설명을 제공합니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1520.86,
  "end": 1528.72
 },
 {
  "input": "Even still, this might not be entirely satisfying because it kicks the can one more step down the road, raising the question of why this stuff-goes-everywhere principle is true in the first place.",
  "translatedText": "그럼에도 불구하고 이것은 완전히 만족스럽지 않을 수 있습니다. 왜냐하면 이 원칙은 애초에 왜 어디에나 존재하는 원칙이 사실인지에 대한 의문을 제기하고 한 단계 더 나아갈 수 있기 때문입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1529.82,
  "end": 1538.36
 },
 {
  "input": "Like I mentioned, it comes from something called Montel's theorem, and I'm choosing not to go into the details there, because honestly it's a lot to cover.",
  "translatedText": "제가 언급한 것처럼, 이는 몬텔의 정리라는 것에서 유래합니다. 솔직히 다루어야 할 내용이 많기 때문에 여기서는 자세히 설명하지 않기로 했습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1539.18,
  "end": 1546.3
 },
 {
  "input": "The proof I could find ends up leaning on something known as the J function, which is a whole intricate story in its own right.",
  "translatedText": "내가 찾을 수 있는 증거는 결국 J 함수라고 알려진 것에 의존하게 되는데, 이는 그 자체로 완전히 복잡한 이야기입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1546.82,
  "end": 1552.54
 },
 {
  "input": "I will of course leave links and resources in the description for any of you who are hungry to learn more, and if you know of a simpler way to see why this principle is true, I'm definitely all ears.",
  "translatedText": "물론 더 많은 내용을 알고 싶어하는 분들을 위해 설명에 링크와 리소스를 남겨두겠습니다. 이 원칙이 왜 사실인지 확인할 수 있는 더 간단한 방법을 알고 계시다면 저는 귀를 기울일 것입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1552.8,
  "end": 1561.64
 },
 {
  "input": "I should also say as a brief side note that even though the pictures we've seen so far have a Julia set which has an area of zero, it's kind of the boundary between these regions, there are examples where the Julia set is the entire plane, everything behaves chaotically, which is kind of wild.",
  "translatedText": "또한 간단한 참고 사항으로 우리가 지금까지 본 그림에는 면적이 0인 Julia 집합이 있지만 이는 일종의 이 영역 사이의 경계이며 Julia 집합이 전체인 예가 있다는 점을 말씀드리고 싶습니다. 비행기에서는 모든 것이 혼란스러워서 일종의 거칠게 행동합니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1562.4,
  "end": 1576.8
 },
 {
  "input": "The main takeaway for this particular section is the link between the chaos and the fractal.",
  "translatedText": "이 특정 섹션의 주요 내용은 혼돈과 프랙탈 사이의 연결입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1578.18,
  "end": 1583.32
 },
 {
  "input": "At first it seems like these are merely analogous to each other, you know, Newton's method turns out to be a kind of messy process for some seed values, and this messiness is visible one way by following the trajectory of a particular point, and another way by the complexity of our diagrams, but those feel like qualitatively different kinds of messiness.",
  "translatedText": "처음에는 이것이 단지 서로 유사한 것처럼 보입니다. 아시다시피 뉴턴의 방법은 일부 시드 값에 대한 일종의 지저분한 과정으로 밝혀졌습니다. 그리고 이 지저분함은 특정 지점의 궤적을 따라가는 방식으로 볼 수 있고, 다이어그램의 복잡성으로 인해 질적으로 다른 종류의 지저분함처럼 느껴집니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1583.98,
  "end": 1601.94
 },
 {
  "input": "Maybe it makes for a nice metaphor, but nothing more.",
  "translatedText": "어쩌면 그것은 좋은 은유가 될 수도 있지만 그 이상은 아닙니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1602.52,
  "end": 1604.64
 },
 {
  "input": "However, what's neat here is that when you quantify just how chaotic some of the points are, well, that quantification leads us to an actual explanation for the rough fractal shape via this boundary property.",
  "translatedText": "그러나 여기서 깔끔한 점은 일부 점이 얼마나 혼란스러운지를 정량화하면 이 경계 속성을 통해 대략적인 프랙탈 모양에 대한 실제 설명으로 이어진다는 것입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1605.32,
  "end": 1616.62
 },
 {
  "input": "Quite often you see chaos and fractals sort of married together in math, and to me at least it's satisfying whenever that marriage comes with a logical link to it, rather than as two phenomena that just happen to coincide.",
  "translatedText": "수학에서 혼돈과 프랙탈이 함께 결합되는 경우를 자주 볼 수 있으며, 적어도 나에게는 두 가지 현상이 우연히 일치하는 것보다 그 결합이 논리적인 연결과 함께 올 때마다 만족스럽습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1617.64,
  "end": 1628.54
 }
]