1
00:00:00,000 --> 00:00:01,856
오늘 저는 동형 역학(holomorphicdynam

2
00:00:01,856 --> 00:00:03,780
ics)으로 알려진 수학에 대해 말씀드리고 싶습니다.

3
00:00:04,440 --> 00:00:07,396
이것은 만델브로 집합과 같은 것을 연구하는 분야입니다.

4
00:00:07,396 --> 00:00:09,564
 사실 오늘 나의 주요 목표 중 하나는 

5
00:00:09,564 --> 00:00:11,929
수학의 대표적인 형태인 이 상징적인 모양이 

6
00:00:11,929 --> 00:00:14,196
초기 정의에서 제안한 것보다 더 일반적인 

7
00:00:14,196 --> 00:00:16,660
방식으로 어떻게 나타나는지 보여주는 것입니다.

8
00:00:17,380 --> 00:00:20,072
이제 이 필드는 지난 비디오에서 뉴턴의 프랙탈을 통해 

9
00:00:20,072 --> 00:00:22,316
이야기한 내용과도 밀접하게 연결되어 있으며, 

10
00:00:22,316 --> 00:00:24,829
이 비디오 끝 부분에 있는 우리의 또 다른 목표는 

11
00:00:24,829 --> 00:00:27,431
우리가 거기에서 가졌던 느슨한 끝을 묶는 데 도움이 

12
00:00:27,431 --> 00:00:28,060
될 것입니다.

13
00:00:34,599 --> 00:00:36,239
그래서 우선, 홀로모픽(holomorphic)이라는 

14
00:00:36,239 --> 00:00:37,540
단어가 조금 이상하게 보일 수도 있습니다.

15
00:00:37,640 --> 00:00:40,978
이는 복소수 입력과 복소수 출력이 있고 

16
00:00:40,978 --> 00:00:44,620
도함수를 구할 수도 있는 함수를 나타냅니다.

17
00:00:45,180 --> 00:00:47,988
기본적으로 이 맥락에서 도함수를 갖는다는 것은 

18
00:00:47,988 --> 00:00:51,012
함수가 주어진 점 근처, 점 및 그 이웃 근처에서 

19
00:00:51,012 --> 00:00:53,820
어떻게 동작하는지 확대하면 대략 복잡한 상수를 

20
00:00:53,820 --> 00:00:57,060
곱하는 것처럼 크기 조정 및 회전과 비슷하게 보인다는 

21
00:00:57,060 --> 00:00:57,600
것입니다.

22
00:00:58,240 --> 00:01:00,581
이에 대해서는 잠시 후에 더 자세히 설명하겠지만 

23
00:01:00,581 --> 00:01:02,056
지금은 여기에 다항식, 지수, 

24
00:01:02,056 --> 00:01:03,964
삼각 함수 등 여러분이 적어둘 수 있는 

25
00:01:03,964 --> 00:01:05,959
대부분의 일반적인 함수가 포함되어 있다는 

26
00:01:05,959 --> 00:01:06,740
점만 알아두세요.

27
00:01:07,380 --> 00:01:10,734
여기 제목의 관련 역학은 일부 입력을 평가한 

28
00:01:10,734 --> 00:01:13,954
다음 방금 얻은 내용에 대해 동일한 함수를 

29
00:01:13,954 --> 00:01:17,443
평가하고 다시 수행한다는 의미에서 이러한 기능 

30
00:01:17,443 --> 00:01:20,529
중 하나를 반복적으로 적용하면 어떤 일이 

31
00:01:20,529 --> 00:01:23,481
발생하는지 묻는 것에서 비롯됩니다. , 

32
00:01:23,481 --> 00:01:25,360
그리고 계속해서 또 다시.

33
00:01:26,860 --> 00:01:28,570
때때로 이로부터 나타나는 점의 

34
00:01:28,570 --> 00:01:30,180
패턴이 순환에 갇히게 됩니다.

35
00:01:31,440 --> 00:01:33,070
다른 경우에는 시퀀스가 일종의 

36
00:01:33,070 --> 00:01:34,700
제한점에 접근할 수도 있습니다.

37
00:01:35,740 --> 00:01:38,262
아니면 수열이 점점 더 커지고 무한대로 

38
00:01:38,262 --> 00:01:41,357
날아갈 수도 있습니다. 수학자들은 이를 한계점, 

39
00:01:41,357 --> 00:01:43,880
즉 무한점에 접근하는 것으로 생각합니다.

40
00:01:45,240 --> 00:01:47,098
그리고 다른 때에는 여전히 패턴이 

41
00:01:47,098 --> 00:01:48,860
전혀 없고 혼란스럽게 행동합니다.

42
00:01:50,520 --> 00:01:53,146
놀라운 점은 기록할 수 있는 모든 종류의 

43
00:01:53,146 --> 00:01:55,772
함수에 대해 이러한 다양한 가능한 동작이 

44
00:01:55,772 --> 00:01:58,512
발생할 때 시각화하기 위해 무언가를 시도할 

45
00:01:58,512 --> 00:02:01,024
때 종종 엄청나게 복잡한 프랙탈 패턴이 

46
00:02:01,024 --> 00:02:02,280
발생한다는 것입니다.

47
00:02:03,540 --> 00:02:05,290
지난 영상을 시청하신 분들은 이미 이에 대한 

48
00:02:05,290 --> 00:02:06,900
깔끔한 예를 한 가지 보신 적이 있습니다.

49
00:02:07,400 --> 00:02:10,049
어떤 다항식 p의 근을 찾는 뉴턴의 방법이라는 

50
00:02:10,049 --> 00:02:13,107
알고리즘이 있는데, 그것이 작동하는 방식은 기본적으로 

51
00:02:13,107 --> 00:02:15,960
x 빼기 x의 p를 x의 p 프라임으로 나눈 식을 

52
00:02:15,960 --> 00:02:17,693
반복적으로 반복하는 것입니다. 

53
00:02:17,693 --> 00:02:19,120
p 프라임은 도함수입니다.

54
00:02:19,820 --> 00:02:23,382
초기 시드 값이 해당 다항식의 근(x의 p가 0인 

55
00:02:23,382 --> 00:02:26,817
값)의 느슨한 근처에 있는 경우 이 절차는 해당 

56
00:02:26,817 --> 00:02:30,380
근에 정말 빠르게 수렴하는 일련의 값을 생성합니다.

57
00:02:30,660 --> 00:02:32,620
이것이 실제로 유용한 알고리즘이 되는 이유입니다.

58
00:02:33,520 --> 00:02:35,643
그러나 그런 다음 우리는 복소 평면에서 이 

59
00:02:35,643 --> 00:02:37,678
작업을 수행하려고 했습니다. 가능한 많은 

60
00:02:37,678 --> 00:02:39,802
시드 값을 살펴보고 이러한 시드 값 각각이 

61
00:02:39,802 --> 00:02:42,280
복소 평면의 어느 루트에 있을 수 있는지 묻습니다.

62
00:02:42,280 --> 00:02:45,590
그런 다음 각 루트에 색상을 연결한 다음 해당 

63
00:02:45,590 --> 00:02:48,900
픽셀에서 시작하는 시드 값이 최종적으로 도달할 

64
00:02:48,900 --> 00:02:52,720
루트를 기준으로 평면의 각 픽셀에 색상을 지정했습니다.

65
00:02:53,740 --> 00:02:56,372
우리가 얻은 결과는 색상 사이에 거친 프랙탈 

66
00:02:56,372 --> 00:02:59,320
경계가 있는 엄청나게 복잡한 사진 중 일부였습니다.

67
00:03:02,080 --> 00:03:05,116
이제 이 예에서 우리가 실제로 반복하고 있는 함수를 

68
00:03:05,116 --> 00:03:08,152
보면, 예를 들어 z 제곱 빼기 1과 같은 다항식의 

69
00:03:08,152 --> 00:03:10,979
특정 선택에 대해 전체 표현식을 하나의 다항식을 

70
00:03:10,979 --> 00:03:14,120
다른 다항식으로 나눈 것처럼 다시 작성할 수 있습니다.

71
00:03:15,019 --> 00:03:16,322
수학자들은 이러한 종류의 함수를 합리적 

72
00:03:16,322 --> 00:03:18,040
함수(rational function)라고 부릅니다.

73
00:03:18,640 --> 00:03:20,940
그리고 이것이 뉴턴의 방법에서 비롯되었다는 사실을 

74
00:03:20,940 --> 00:03:23,077
잊어버린다면, 다른 합리적인 함수를 반복할 때 

75
00:03:23,077 --> 00:03:25,460
무슨 일이 일어나는지 합리적으로 물어볼 수 있습니다.

76
00:03:26,120 --> 00:03:28,297
실제로 이것이 바로 제1차 세계 대전 직후 수학자 

77
00:03:28,297 --> 00:03:30,320
피에르 파투(Pierre Fatou)와 가스통 

78
00:03:30,320 --> 00:03:32,420
줄리아(Gaston Julia)가 했던 일입니다.

79
00:03:32,420 --> 00:03:35,319
그리고 그들은 이러한 합리적인 함수를 반복할 때 어떤 

80
00:03:35,319 --> 00:03:37,831
일이 발생하는지에 대한 놀랍도록 풍부한 이론을 

81
00:03:37,831 --> 00:03:40,344
구축했습니다. 이는 여러분과 제가 할 수 있는 

82
00:03:40,344 --> 00:03:43,243
방식으로 시각화할 컴퓨터가 없다는 점을 고려하면 특히 

83
00:03:43,243 --> 00:03:43,920
인상적입니다.

84
00:03:44,400 --> 00:03:46,380
이 두 이름을 기억하세요. 나중에 나올 것입니다.

85
00:03:47,160 --> 00:03:50,949
이와 같이 연구할 수 있는 유리 함수와 그에 따른 

86
00:03:50,949 --> 00:03:54,739
프랙탈의 가장 대중화된 예는 가장 간단한 함수 중 

87
00:03:54,739 --> 00:03:58,800
하나인 z 제곱 + c입니다. 여기서 c는 상수입니다.

88
00:03:59,880 --> 00:04:01,551
나는 이것이 적어도 여러분 중 많은 사람들에게 

89
00:04:01,551 --> 00:04:02,772
다소 친숙하다고 추측할 것입니다. 

90
00:04:02,772 --> 00:04:04,508
그러나 나중에 나올 내용을 위한 무대를 설정하는 

91
00:04:04,508 --> 00:04:06,244
데 도움이 될 수 있기 때문에 여기에서 이야기를 

92
00:04:06,244 --> 00:04:07,980
빠르게 요약하는 것이 확실히 나쁠 것은 없습니다.

93
00:04:07,980 --> 00:04:11,701
이 게임에서 우리는 c를 변경할 수 있는 값으로 

94
00:04:11,701 --> 00:04:15,560
생각하고 움직일 수 있는 노란색 점으로 표시됩니다.

95
00:04:16,200 --> 00:04:19,041
실제 반복 프로세스에서는 항상 z의 

96
00:04:19,041 --> 00:04:21,740
초기 값이 0인 것으로 시작합니다.

97
00:04:22,640 --> 00:04:24,940
따라서 이 함수를 한 번 반복하고 z 

98
00:04:24,940 --> 00:04:27,240
제곱 + c를 수행하면 c를 얻습니다.

99
00:04:27,900 --> 00:04:30,867
두 번째 반복하여 해당 값을 함수에 연결하면 

100
00:04:30,867 --> 00:04:33,360
c 제곱에 c를 더한 결과가 나옵니다.

101
00:04:33,960 --> 00:04:39,286
여기서 c 값을 변경하면 두 번째 값이 

102
00:04:39,286 --> 00:04:45,340
어떻게 고정적으로 움직이는지 볼 수 있습니다.

103
00:04:45,340 --> 00:04:48,572
그런 다음 두 번째 값을 연결하여 z3을 

104
00:04:48,572 --> 00:04:51,805
얻고 세 번째 값을 연결하여 z4를 얻은 

105
00:04:51,805 --> 00:04:55,460
다음 계속해서 값 체인을 시각화할 수 있습니다.

106
00:04:55,460 --> 00:04:57,442
따라서 처음 많은 값, 즉 c의 일부 

107
00:04:57,442 --> 00:04:59,142
선택에 대해 이 작업을 여러 번 

108
00:04:59,142 --> 00:05:01,220
계속하면 이 프로세스는 계속 제한됩니다.

109
00:05:01,220 --> 00:05:02,020
여전히 화면에서 모든 것을 볼 수 있습니다.

110
00:05:02,020 --> 00:05:04,635
그리고 다른 때에는 그것이 터지는 것처럼 

111
00:05:04,635 --> 00:05:07,478
보이며 실제로 그것이 2만큼 커지면 무한대로 

112
00:05:07,478 --> 00:05:09,980
터질 것이라는 것을 보여줄 수 있습니다.

113
00:05:09,980 --> 00:05:13,606
경계가 검은색으로 유지되는 평면의 점을 색칠하고 

114
00:05:13,606 --> 00:05:17,501
프로세스가 무한대로 돌진하는 속도에 따라 발산 값에 

115
00:05:17,501 --> 00:05:21,396
다른 색상 그라데이션을 할당하면 모든 수학에서 가장 

116
00:05:21,396 --> 00:05:24,485
상징적인 이미지 중 하나를 얻게 됩니다. 

117
00:05:24,485 --> 00:05:25,560
만델브로 집합.

118
00:05:25,560 --> 00:05:27,953
그런데 이 궤적의 대화형 점과 막대 시각화는 Ben 

119
00:05:27,953 --> 00:05:30,182
Spark의 일러스트레이션과 Mandelbrot 

120
00:05:30,182 --> 00:05:32,245
세트에 대해 그가 만든 Numberphile 

121
00:05:32,245 --> 00:05:34,474
비디오에서 많은 영감을 받았습니다. 훌륭합니다. 

122
00:05:34,474 --> 00:05:35,300
꼭 시청해 보세요.

123
00:05:35,300 --> 00:05:38,447
솔직히 여기서 다시 구현하지 않는 

124
00:05:38,447 --> 00:05:41,760
것이 너무 재미 있다고 생각했습니다.

125
00:05:41,760 --> 00:05:45,440
또한 ako의 대화형 기사를 적극 추천합니다.

126
00:05:45,440 --> 00:05:47,763
아직 읽어보지 못한 분들을 위해 

127
00:05:47,763 --> 00:05:49,700
이 모든 내용을 소개합니다.

128
00:05:49,700 --> 00:05:52,278
Ben Spark의 그림에서 좋은 점은 

129
00:05:52,278 --> 00:05:55,209
Mandelbrot 집합의 서로 다른 부분이 

130
00:05:55,209 --> 00:05:58,140
실제로 나타내는 것을 어떻게 조명하는지입니다.

131
00:05:58,940 --> 00:06:01,429
이 가장 큰 카디오이드 섹션에는 c 값이 

132
00:06:01,429 --> 00:06:04,460
포함되므로 프로세스는 결국 특정 한계에 수렴됩니다.

133
00:06:05,280 --> 00:06:09,627
왼쪽의 큰 원은 프로세스가 두 값 사이의 순환에 

134
00:06:09,627 --> 00:06:13,491
갇히는 값을 나타내고, 위쪽과 아래쪽 원은 

135
00:06:13,491 --> 00:06:18,000
프로세스가 세 값의 순환에 갇히는 값을 나타냅니다.

136
00:06:18,000 --> 00:06:19,640
이 작은 섬들은 각각 고유한 의미를 가지고 있습니다.

137
00:06:19,640 --> 00:06:22,499
또한 이 Mandelbrot 집합과 이전에 살펴본 

138
00:06:22,499 --> 00:06:25,256
Newton 도형이 서로 다른 기본 함수를 넘어 

139
00:06:25,256 --> 00:06:28,320
각각 구성되는 방식 사이에는 중요한 차이점이 있습니다.

140
00:06:28,320 --> 00:06:30,606
Mandelbrot 집합의 경우 일관된 

141
00:06:30,606 --> 00:06:33,101
시드 값 z는 0과 같지만 우리가 조정하는 

142
00:06:33,101 --> 00:06:35,700
것은 함수 자체를 변경하는 매개변수 c입니다.

143
00:06:35,700 --> 00:06:37,780
그래서 여러분이 보고 있는 것은 매개변수 

144
00:06:37,780 --> 00:06:39,500
공간이라고 부를 수 있는 것입니다.

145
00:06:39,820 --> 00:06:42,158
그러나 뉴턴의 프랙탈에는 변하지 않는 

146
00:06:42,158 --> 00:06:44,719
단일 함수가 있지만 각 픽셀과 연관시키는 

147
00:06:44,719 --> 00:06:47,280
것은 프로세스에 대한 다른 시드 값입니다.

148
00:06:47,280 --> 00:06:49,684
물론 우리는 지도 z 제곱 + c를 사용하여 

149
00:06:49,684 --> 00:06:51,799
동일한 게임을 할 수 있고, c를 어떤 

150
00:06:51,799 --> 00:06:54,203
상수로 고정한 다음 픽셀이 다른 가능한 초기 

151
00:06:54,203 --> 00:06:56,800
값 z naught를 나타내도록 할 수 있습니다.

152
00:06:57,680 --> 00:06:59,806
따라서 만델브로 집합의 각 픽셀은 

153
00:06:59,806 --> 00:07:01,709
고유한 기능에 해당하는 반면, 

154
00:07:01,709 --> 00:07:04,620
오른쪽의 이미지는 각각 단일 기능에 해당합니다.

155
00:07:05,460 --> 00:07:07,521
매개변수 c를 변경하면 오른쪽 

156
00:07:07,521 --> 00:07:09,220
이미지 전체가 변경됩니다.

157
00:07:10,020 --> 00:07:11,915
다시 한 번 명확하게 말하자면, 

158
00:07:11,915 --> 00:07:14,863
적용되는 규칙은 프로세스가 제한된 상태로 유지되면 

159
00:07:14,863 --> 00:07:16,759
픽셀을 검은색으로 지정한 다음, 

160
00:07:16,759 --> 00:07:19,602
무한대로 갈라지는 속도에 따라 무한대로 갈라지는 

161
00:07:19,602 --> 00:07:22,340
픽셀에 일종의 그라디언트를 적용한다는 것입니다.

162
00:07:23,380 --> 00:07:26,572
원칙적으로 생각해 보면 생각하기가 좀 이상합니다. 

163
00:07:26,572 --> 00:07:29,651
c와 z의 모든 조합으로 이루어진 4차원 공간이 

164
00:07:29,651 --> 00:07:32,958
있습니다. 여기서 우리가 하는 일은 상상할 수 없는 

165
00:07:32,958 --> 00:07:36,380
개별적인 2차원 조각을 살펴보는 것과 같습니다. 무늬.

166
00:07:37,740 --> 00:07:40,506
여러분은 줄리아 집합 또는 줄리아 프랙탈이라고 

167
00:07:40,506 --> 00:07:43,591
불리는 오른쪽의 이미지를 듣거나 읽게 될 것입니다. 

168
00:07:43,591 --> 00:07:46,464
이 모든 것에 대해 처음 배웠을 때 나는 이것이 

169
00:07:46,464 --> 00:07:49,655
용어라는 오해를 갖고 있었다는 것을 인정할 것입니다. 

170
00:07:49,655 --> 00:07:52,741
Julia 집합은 특히 z 제곱에 c를 더한 경우를 

171
00:07:52,741 --> 00:07:55,720
나타내며, 게다가 내부의 검은색 영역을 나타냅니다.

172
00:07:56,440 --> 00:07:58,477
그러나 Julia 집합이라는 용어는 

173
00:07:58,477 --> 00:08:00,718
훨씬 더 일반적인 정의를 가지며 내부가 

174
00:08:00,718 --> 00:08:02,960
아닌 이러한 영역의 경계만을 나타냅니다.

175
00:08:03,900 --> 00:08:06,777
좀 더 구체적인 정의를 위한 기반을 마련하고 제가 

176
00:08:06,777 --> 00:08:09,345
처음에 언급한 첫 번째 목표를 향해 전진하기 

177
00:08:09,345 --> 00:08:12,017
위해서는 한 걸음 물러서서 지금 이 모든 것을 

178
00:08:12,017 --> 00:08:15,100
발견하는 수학자로서 자신을 상상해 보는 것이 좋습니다.

179
00:08:15,740 --> 00:08:17,452
이에 관한 이론을 구성하기 위해 

180
00:08:17,452 --> 00:08:18,880
실제로 무엇을 하시겠습니까?

181
00:08:19,260 --> 00:08:22,039
예쁜 그림을 보는 것도 중요하지만 실제로 

182
00:08:22,039 --> 00:08:25,060
다 이해하고 싶다면 어떤 질문을 하시겠습니까?

183
00:08:26,020 --> 00:08:29,603
일반적으로 복잡한 것을 이해하고 싶다면 시작하기 

184
00:08:29,603 --> 00:08:32,124
좋은 곳은 시스템에 간단한 동작, 

185
00:08:32,124 --> 00:08:35,442
바람직하게는 가능한 가장 단순한 동작을 하는 

186
00:08:35,442 --> 00:08:37,964
부분이 있는지 물어보는 것입니다. 

187
00:08:37,964 --> 00:08:41,282
프로세스는 제자리에 고정되어 있습니다. 즉, 

188
00:08:41,282 --> 00:08:43,140
z의 f는 z와 같습니다.

189
00:08:43,740 --> 00:08:44,759
그것은 꽤 지루한 역학 세트입니다. 

190
00:08:44,759 --> 00:08:45,880
제 생각에는 여러분도 동의하실 것입니다.

191
00:08:46,500 --> 00:08:48,089
우리는 이 속성을 가진 값을 

192
00:08:48,089 --> 00:08:49,680
함수의 고정점이라고 부릅니다.

193
00:08:49,680 --> 00:08:53,131
뉴턴의 방법에서 발생하는 함수의 경우 

194
00:08:53,131 --> 00:08:57,240
설계상 관련 다항식의 근에 고정점을 갖습니다.

195
00:08:57,840 --> 00:09:00,677
p/z가 0이면 전체 표현식이 단순히 

196
00:09:00,677 --> 00:09:03,920
z와 같다는 것을 직접 확인할 수 있습니다.

197
00:09:04,300 --> 00:09:05,660
이것이 바로 고정점이 된다는 의미입니다.

198
00:09:06,560 --> 00:09:10,717
연습에 열중하고 있다면 잠시 멈추고 

199
00:09:10,717 --> 00:09:15,498
만델브로 집합 함수 z 제곱 더하기 c의 

200
00:09:15,498 --> 00:09:20,280
고정점을 계산하는 것을 즐길 수 있습니다.

201
00:09:20,280 --> 00:09:23,560
더 일반적으로, 모든 유리 함수는 항상 고정점을 

202
00:09:23,560 --> 00:09:26,597
가지게 됩니다. 왜냐하면 이 식이 z와 같을 

203
00:09:26,597 --> 00:09:29,634
때 묻는 것은 항상 일부 다항식의 근을 찾는 

204
00:09:29,634 --> 00:09:33,036
것으로 재배치될 수 있고, 대수학의 기본 정리에서 

205
00:09:33,036 --> 00:09:36,316
이것은 일반적으로 다음 수만큼 많은 해를 가져야 

206
00:09:36,316 --> 00:09:39,840
하기 때문입니다. 이 표현에서 가장 높은 등급입니다.

207
00:09:39,840 --> 00:09:42,275
덧붙여서, 이것은 뉴턴의 방법을 사용하여 고정점을 

208
00:09:42,275 --> 00:09:44,015
찾을 수도 있다는 것을 의미합니다. 

209
00:09:44,015 --> 00:09:46,364
어쩌면 그것은 지금 우리에게 너무 메타적인 것일 

210
00:09:46,364 --> 00:09:47,060
수도 있습니다.

211
00:09:47,060 --> 00:09:50,719
이제 고정점에 대해 묻는 것이 쉬울 수도 있지만 

212
00:09:50,719 --> 00:09:54,243
전체 역학, 즉 우리가 보고 있는 다이어그램을 

213
00:09:54,243 --> 00:09:57,902
이해하기 위한 핵심 아이디어는 안정성을 이해하는 

214
00:09:57,902 --> 00:09:58,580
것입니다.

215
00:09:58,580 --> 00:10:00,202
고정점은 가까운 점들이 그쪽으로 

216
00:10:00,202 --> 00:10:02,006
끌려가는 경향이 있으면 끌어당기고, 

217
00:10:02,006 --> 00:10:04,080
멀어지면 밀어내는 경향이 있다고 말합니다.

218
00:10:04,080 --> 00:10:06,241
그리고 이것은 함수의 도함수를 사용하여 

219
00:10:06,241 --> 00:10:08,600
명시적으로 실제로 계산할 수 있는 것입니다.

220
00:10:08,980 --> 00:10:11,700
상징적으로, 복소 함수의 도함수를 취하면 실제 

221
00:10:11,700 --> 00:10:14,420
함수의 경우와 정확히 동일하게 보입니다. 단, 

222
00:10:14,420 --> 00:10:17,560
z 제곱과 같은 함수는 2 x z의 도함수를 갖습니다.

223
00:10:17,560 --> 00:10:18,983
하지만 기하학적으로 이것이 의미하는 

224
00:10:18,983 --> 00:10:20,620
바를 해석하는 정말 멋진 방법이 있습니다.

225
00:10:20,620 --> 00:10:23,391
예를 들어, 입력 1에서 이 특정 함수의 

226
00:10:23,391 --> 00:10:26,163
도함수는 2로 평가되며, 이것이 우리에게 

227
00:10:26,163 --> 00:10:29,176
알려주는 것은 입력 주위의 아주 작은 이웃을 

228
00:10:29,176 --> 00:10:32,069
보고 그 작은 영역의 모든 점에 무슨 일이 

229
00:10:32,069 --> 00:10:34,238
일어나는지 추적한다는 것입니다. 

230
00:10:34,238 --> 00:10:37,251
함수를 적용할 때 이웃(이 경우 z 제곱)은 

231
00:10:37,251 --> 00:10:39,180
2를 곱하는 것처럼 보입니다.

232
00:10:39,580 --> 00:10:41,400
이것이 2의 도함수가 의미하는 바입니다.

233
00:10:43,240 --> 00:10:45,900
또 다른 예를 들어 입력 i를 살펴보겠습니다.

234
00:10:46,500 --> 00:10:48,546
우리는 이 함수가 해당 입력을 -1 값, 

235
00:10:48,546 --> 00:10:50,860
즉 i 제곱으로 이동한다는 것을 알고 있습니다.

236
00:10:51,580 --> 00:10:55,620
하지만 이 값의 도함수가 2배라는 추가 정보는 

237
00:10:55,620 --> 00:10:59,349
해당 지점 주위를 확대하고 이 작은 이웃에 

238
00:10:59,349 --> 00:11:03,234
대한 함수의 동작을 보면 2i를 곱한 것처럼 

239
00:11:03,234 --> 00:11:06,031
보이는 추가 그림을 제공합니다. 

240
00:11:06,031 --> 00:11:09,606
이 경우에는 2배의 확장과 결합된 90도 

241
00:11:09,606 --> 00:11:11,160
회전처럼 보입니다.

242
00:11:14,860 --> 00:11:17,025
안정성 분석을 위해 여기서 우리가 

243
00:11:17,025 --> 00:11:19,532
관심을 갖는 유일한 것은 성장 및 축소 

244
00:11:19,532 --> 00:11:22,040
요소이며 회전 부분은 중요하지 않습니다.

245
00:11:22,520 --> 00:11:26,313
따라서 고정점에서 함수의 도함수를 계산하고 이 결과의 

246
00:11:26,313 --> 00:11:30,106
절대값이 1보다 작은 경우 고정점이 끌어당기고 근처의 

247
00:11:30,106 --> 00:11:33,900
점이 고정점을 향해 들어오는 경향이 있음을 알려줍니다.

248
00:11:34,360 --> 00:11:37,026
해당 도함수의 절대값이 1보다 크면 

249
00:11:37,026 --> 00:11:40,360
고정점이 반발하고 이웃을 밀어낸다는 뜻입니다.

250
00:11:41,640 --> 00:11:45,303
예를 들어, 뉴턴 지도 표현의 미분을 계산하고 몇 

251
00:11:45,303 --> 00:11:48,705
가지를 단순화하면 다음과 같은 결과를 얻을 수 

252
00:11:48,705 --> 00:11:49,360
있습니다.

253
00:11:50,380 --> 00:11:53,389
따라서 z가 고정점이라면(이 문맥에서 이는 

254
00:11:53,389 --> 00:11:56,023
다항식 p의 근 중 하나임을 의미), 

255
00:11:56,023 --> 00:11:59,660
이 도함수는 1보다 작을 뿐만 아니라 0과 같습니다.

256
00:12:00,840 --> 00:12:03,003
이는 때때로 초유인 고정점이라고도 하는데, 

257
00:12:03,003 --> 00:12:05,346
이는 이 점 주변의 이웃이 단지 축소되는 것이 

258
00:12:05,346 --> 00:12:07,780
아니라 많이 축소된다는 것을 의미하기 때문입니다.

259
00:12:08,660 --> 00:12:11,196
그리고 다시 말하지만, 이는 일종의 설계에 따른 

260
00:12:11,196 --> 00:12:13,826
것입니다. 왜냐하면 뉴턴 방법의 의도는 가능한 한 

261
00:12:13,826 --> 00:12:16,456
빨리 루트를 향해 떨어지는 반복을 생성하는 것이기 

262
00:12:16,456 --> 00:12:17,020
때문입니다.

263
00:12:18,020 --> 00:12:19,987
z 제곱 + c 예를 살펴보면, 

264
00:12:19,987 --> 00:12:22,937
고정점을 찾기 위해 첫 번째 연습을 수행한 경우 

265
00:12:22,937 --> 00:12:25,560
다음 단계는 고정점 중 적어도 하나가 언제 

266
00:12:25,560 --> 00:12:27,200
끌어당기는지 묻는 것입니다.

267
00:12:27,820 --> 00:12:30,100
c의 어떤 값에 대해 이것이 참이 될까요?

268
00:12:31,040 --> 00:12:33,935
그런 다음 이것이 충분하지 않다면 찾은 결과를 

269
00:12:33,935 --> 00:12:36,830
사용하여 이 조건이 Mandelbrot 세트의 

270
00:12:36,830 --> 00:12:40,060
주요 카디오이드 모양에 해당한다는 것을 보여주십시오.

271
00:12:40,680 --> 00:12:43,400
이것은 명시적으로 계산할 수 있는 것인데 꽤 멋지네요.

272
00:12:45,320 --> 00:12:47,790
자연스러운 다음 단계는 주기에 관해 묻는 것입니다. 

273
00:12:47,790 --> 00:12:49,920
여기서부터 일이 정말 흥미로워지기 시작합니다.

274
00:12:50,720 --> 00:12:53,660
z의 f가 z가 아니고 다른 값이고, 

275
00:12:53,660 --> 00:12:57,719
그 값이 다시 z로 돌아오면 이는 2주기에 빠졌음을 

276
00:12:57,719 --> 00:12:58,560
의미합니다.

277
00:12:59,320 --> 00:13:01,608
f/f/z를 평가한 다음 이를 z와 

278
00:13:01,608 --> 00:13:03,897
동일하게 설정하여 이러한 종류의 두 

279
00:13:03,897 --> 00:13:06,300
사이클을 명시적으로 찾을 수 있습니다.

280
00:13:07,120 --> 00:13:09,910
예를 들어, z 제곱 + c 맵의 경우 f 

281
00:13:09,910 --> 00:13:12,700
of f of z는 다음과 같이 확장됩니다.

282
00:13:13,340 --> 00:13:15,080
조금 지저분하지만, 그렇게 끔찍하지는 않습니다.

283
00:13:15,560 --> 00:13:17,353
강조해야 할 가장 중요한 점은 어느 정도 

284
00:13:17,353 --> 00:13:19,380
4차 방정식을 푸는 것으로 귀결된다는 것입니다.

285
00:13:20,160 --> 00:13:22,965
고정 소수점은 이 방정식의 해이기도 

286
00:13:22,965 --> 00:13:26,192
하므로 기술적으로 두 사이클은 원래 고정 

287
00:13:26,192 --> 00:13:29,700
소수점 방정식의 해를 뺀 이에 대한 해입니다.

288
00:13:31,080 --> 00:13:33,918
마찬가지로, 동일한 아이디어를 사용하여 f를 n번 

289
00:13:33,918 --> 00:13:36,960
다른 방식으로 구성하여 n 사이클을 찾을 수 있습니다.

290
00:13:37,880 --> 00:13:40,530
금방 얻을 수 있는 명시적인 표현은 엄청나게 

291
00:13:40,530 --> 00:13:43,604
지저분해집니다. 하지만 이 가상 프로세스를 기반으로 

292
00:13:43,604 --> 00:13:46,783
얼마나 많은 사이클을 예상할 것인지 묻는 것은 여전히 

293
00:13:46,783 --> 00:13:47,420
명쾌합니다.

294
00:13:47,960 --> 00:13:51,377
간단한 z 제곱 더하기 c 예를 고수하면 

295
00:13:51,377 --> 00:13:54,348
자체적으로 구성할 때 4차 다항식, 

296
00:13:54,348 --> 00:13:57,617
8차 다항식, 16차 다항식 등을 얻게 

297
00:13:57,617 --> 00:14:01,480
되며 기하급수적으로 증가합니다. 다항식의 순서.

298
00:14:02,360 --> 00:14:05,955
따라서 원칙적으로 백만 주기에 몇 개의 사이클이 

299
00:14:05,955 --> 00:14:09,818
있는지 묻는다면 이는 2차에서 100만까지의 완전히 

300
00:14:09,818 --> 00:14:13,414
미친 다항식을 푸는 것과 동일하다는 것을 알 수 

301
00:14:13,414 --> 00:14:14,080
있습니다.

302
00:14:14,880 --> 00:14:18,095
다시 말하지만, 대수학의 기본 정리는 정확히 이런 

303
00:14:18,095 --> 00:14:21,310
방식으로 순환하는 복소 평면에서 2~100만 개의 

304
00:14:21,310 --> 00:14:24,640
점 정도에서 무언가를 찾을 것이라고 기대할 것입니다.

305
00:14:25,700 --> 00:14:28,144
그리고 더 일반적으로, 합리적인 맵의 경우, 

306
00:14:28,144 --> 00:14:30,295
주기 n의 주기에 해당하는 동작을 갖는 

307
00:14:30,295 --> 00:14:31,860
값을 항상 찾을 수 있습니다.

308
00:14:32,360 --> 00:14:34,523
그것은 궁극적으로 아마도 미친 다항식 

309
00:14:34,523 --> 00:14:36,480
표현을 해결하는 것으로 귀결됩니다.

310
00:14:37,180 --> 00:14:39,988
그리고 이 예와 마찬가지로 이러한 주기점의 

311
00:14:39,988 --> 00:14:42,680
수는 n에 따라 기하급수적으로 증가합니다.

312
00:14:43,980 --> 00:14:46,579
지난 영상에서 뉴턴의 프랙탈에 대해서는 별로 

313
00:14:46,579 --> 00:14:49,492
이야기하지 않았지만, 이런 과정을 거치더라도 어떤 

314
00:14:49,492 --> 00:14:52,508
종류의 순환에 빠지는 지점이 무수히 많다고 생각하면 

315
00:14:52,508 --> 00:14:53,340
좀 이상합니다.

316
00:14:54,020 --> 00:14:56,310
그러나 거의 모든 경우에 이러한 지점은 

317
00:14:56,310 --> 00:14:58,705
색상이 지정된 영역 사이의 경계 어딘가에 

318
00:14:58,705 --> 00:15:00,892
있으며 실제로는 그 중 하나에 도달할 

319
00:15:00,892 --> 00:15:03,600
확률이 0이기 때문에 실제로 나타나지 않습니다.

320
00:15:04,240 --> 00:15:06,870
실제로 이들 중 하나에 빠지는 데 중요한 

321
00:15:06,870 --> 00:15:10,073
것은 주기 중 하나가 매력을 느끼는지 여부입니다. 

322
00:15:10,073 --> 00:15:12,589
즉, 해당 주기의 값 주변 지점이 해당 

323
00:15:12,589 --> 00:15:15,220
주기로 끌려가는 경향이 있다는 의미입니다.

324
00:15:16,460 --> 00:15:19,301
수치적 방법에 관심이 있는 사람에게 매우 관련성이 

325
00:15:19,301 --> 00:15:21,838
높은 질문은 이 뉴턴의 지도 프로세스에 유인 

326
00:15:21,838 --> 00:15:24,781
주기가 있는지 여부입니다. 왜냐하면 만약 존재한다면 

327
00:15:24,781 --> 00:15:27,420
초기 추측이 해당 주기에 갇혀 결코 찾지 못할 

328
00:15:27,420 --> 00:15:30,160
확률이 0이 아니라는 의미이기 때문입니다. 뿌리.

329
00:15:31,160 --> 00:15:32,360
여기에 대한 대답은 실제로 '예'입니다.

330
00:15:32,360 --> 00:15:35,257
좀 더 명확하게 말하면, z 세제곱 빼기 2z 

331
00:15:35,257 --> 00:15:38,154
더하기 2의 근을 찾으려고 하고 Newton의 

332
00:15:38,154 --> 00:15:41,051
방법을 사용하는 경우 값 0 주변에서 시작하는 

333
00:15:41,051 --> 00:15:44,060
작은 클러스터에 무슨 일이 일어나는지 살펴보세요.

334
00:15:44,060 --> 00:15:46,260
앞뒤로 튀는 정도입니다.

335
00:15:47,260 --> 00:15:48,958
그리고 음, 좋습니다. 이 경우에는 

336
00:15:48,958 --> 00:15:50,656
우리가 시작한 클러스터가 약간 너무 

337
00:15:50,656 --> 00:15:52,440
커서 외부 점 중 일부가 흩어졌습니다.

338
00:15:52,780 --> 00:15:55,480
하지만 더 작은 클러스터로 시작하면 다음과 같습니다.

339
00:15:56,120 --> 00:15:58,420
모든 포인트가 실제로 0과 1 사이의 

340
00:15:58,420 --> 00:16:00,940
순환을 향해 어떻게 축소되는지 확인하세요.

341
00:16:01,480 --> 00:16:03,529
무작위 시드로 이것을 칠 가능성은 

342
00:16:03,529 --> 00:16:05,040
없지만 확실히 가능합니다.

343
00:16:06,080 --> 00:16:09,348
그런데 이와 같은 순환이 유인되는지 확인하기 

344
00:16:09,348 --> 00:16:12,354
위해 할 수 있는 연습은 f(f)(z)의 

345
00:16:12,354 --> 00:16:15,491
도함수를 계산하고 입력 0에서 이 도함수가 

346
00:16:15,491 --> 00:16:18,760
1보다 작은 크기를 갖는지 확인하는 것입니다.

347
00:16:19,760 --> 00:16:22,051
내 마음을 조금 놀라게 한 것은 어떤 3차 

348
00:16:22,051 --> 00:16:24,057
다항식이 유인 사이클을 가지고 있는지 

349
00:16:24,057 --> 00:16:26,540
시각화하려고 할 때 어떤 일이 발생하는지입니다.

350
00:16:27,080 --> 00:16:29,575
뉴턴의 방법이 뿌리를 찾는 데 전혀 

351
00:16:29,575 --> 00:16:32,820
적합하다면 이러한 유인 주기는 드물어야 합니다.

352
00:16:33,960 --> 00:16:36,236
우선, 우리가 보고 있는 하나의 예를 더 

353
00:16:36,236 --> 00:16:38,612
잘 시각화하기 위해 이전과 동일한 프랙탈을 

354
00:16:38,612 --> 00:16:40,889
그려서 해당 지점에서 시작하는 시드 값의 

355
00:16:40,889 --> 00:16:43,760
근이 무엇인지에 따라 각 지점을 색칠할 수 있습니다.

356
00:16:44,000 --> 00:16:47,073
하지만 이번에는 시드 값이 루트에 전혀 

357
00:16:47,073 --> 00:16:49,866
가까워지지 않으면 픽셀을 검정색으로 

358
00:16:49,866 --> 00:16:52,800
채색한다는 점 채색 조건이 추가됩니다.

359
00:16:53,760 --> 00:16:56,679
근을 조정하면(즉, 다양한 3차 다항식을 

360
00:16:56,679 --> 00:16:59,725
시도한다는 뜻) 검은색 픽셀이 전혀 보이지 

361
00:16:59,725 --> 00:17:02,898
않도록 배치할 위치를 찾는 것이 실제로 매우 

362
00:17:02,898 --> 00:17:03,660
어렵습니다.

363
00:17:04,319 --> 00:17:06,094
여기에서 이 작은 지점을 찾을 

364
00:17:06,094 --> 00:17:07,660
수 있지만 확실히 드뭅니다.

365
00:17:08,680 --> 00:17:11,520
이제 제가 원하는 것은 하나의 이미지로 가능한 

366
00:17:11,520 --> 00:17:14,252
모든 3차 다항식을 한 번에 시각화하여 어느 

367
00:17:14,252 --> 00:17:16,984
이미지에 유인 주기가 있는지 보여주는 일종의 

368
00:17:16,984 --> 00:17:17,640
방법입니다.

369
00:17:18,880 --> 00:17:20,803
운 좋게도 이러한 다항식 중 하나에 유인 

370
00:17:20,803 --> 00:17:22,560
주기가 있는지 여부를 테스트하는 정말 

371
00:17:22,560 --> 00:17:24,400
간단한 방법이 있다는 것이 밝혀졌습니다.

372
00:17:25,060 --> 00:17:27,785
여러분이 해야 할 일은 세 뿌리의 평균, 

373
00:17:27,785 --> 00:17:30,867
즉 여기 질량 중심에 있는 시드 값을 살펴보는 

374
00:17:30,867 --> 00:17:31,460
것입니다.

375
00:17:32,100 --> 00:17:34,799
밝혀진 바에 따르면, 이는 전혀 명확하지 않습니다. 

376
00:17:34,799 --> 00:17:37,219
만약 유인 주기가 있다면 이 종자 가치가 해당 

377
00:17:37,219 --> 00:17:39,640
유인 주기에 속할 것이라고 보장할 수 있습니다.

378
00:17:40,500 --> 00:17:42,582
즉, 검은 점이 있다면 이것이 

379
00:17:42,582 --> 00:17:44,420
그 중 하나가 될 것입니다.

380
00:17:45,340 --> 00:17:47,651
이 마법같은 사실이 어디서 유래하는지 알고 싶다면, 

381
00:17:47,651 --> 00:17:49,643
그것은 우리의 좋은 친구 파투(Fatou)의 

382
00:17:49,643 --> 00:17:50,520
정리에서 비롯됩니다.

383
00:17:50,920 --> 00:17:53,840
그는 이러한 합리적인 지도 중 하나에 유인 

384
00:17:53,840 --> 00:17:56,518
주기가 있는 경우 반복 함수의 도함수가 

385
00:17:56,518 --> 00:17:59,074
0인 값을 볼 수 있으며 해당 값 중 

386
00:17:59,074 --> 00:18:02,360
적어도 하나가 주기에 속해야 함을 보여주었습니다.

387
00:18:03,440 --> 00:18:06,155
조금 이상한 사실처럼 보일 수도 있지만, 

388
00:18:06,155 --> 00:18:08,871
느슨한 직관은 주기가 매력적이려면 그 값 

389
00:18:08,871 --> 00:18:12,296
중 적어도 하나가 매우 작은 도함수를 가져야 하며, 

390
00:18:12,296 --> 00:18:14,540
여기서 수축이 발생한다는 것입니다.

391
00:18:15,100 --> 00:18:17,751
그리고 이는 결국 주기의 해당 값이 도함수가 

392
00:18:17,751 --> 00:18:20,190
작을 뿐만 아니라 0과 같은 지점 근처에 

393
00:18:20,190 --> 00:18:22,841
위치하며 그 지점이 결국 주기에 빨려 들어갈 

394
00:18:22,841 --> 00:18:25,280
만큼 충분히 가까워진다는 것을 의미합니다.

395
00:18:26,560 --> 00:18:28,971
이 사실은 또한 하나의 시드 값 z가 0인 

396
00:18:28,971 --> 00:18:31,784
Mandelbrot 집합을 사용하여 매우 완전하고 

397
00:18:31,784 --> 00:18:34,396
흥미로운 그림을 얻는 데 여전히 충분한 이유를 

398
00:18:34,396 --> 00:18:35,100
정당화합니다.

399
00:18:35,320 --> 00:18:37,739
찾아야 할 안정적인 주기가 있다면 해당 

400
00:18:37,739 --> 00:18:40,600
하나의 시드 값이 확실히 그것을 찾을 것입니다.

401
00:18:41,500 --> 00:18:44,990
오늘은 숙제와 연습문제를 너무 많이 내는 것 같지만, 

402
00:18:44,990 --> 00:18:48,247
그것에 관심이 있다면 또 다른 즐거운 점은 뉴턴의 

403
00:18:48,247 --> 00:18:51,388
방법에서 파생된 함수에서 찾은 미분 표현을 다시 

404
00:18:51,388 --> 00:18:54,762
살펴보는 것입니다. 그리고 이 놀라운 파투의 정리를 

405
00:18:54,762 --> 00:18:58,135
사용하여 삼차 다항식에 대한 우리의 마법적인 사실, 

406
00:18:58,135 --> 00:19:01,276
즉 근의 중간점을 확인하는 것만으로도 충분하다는 

407
00:19:01,276 --> 00:19:02,440
사실을 보여줍니다.

408
00:19:03,240 --> 00:19:04,818
하지만 솔직히 말해서, 이 모든 것들은 

409
00:19:04,818 --> 00:19:06,540
실제로 걱정할 필요가 없는 세부 사항입니다.

410
00:19:06,840 --> 00:19:09,118
결론은 모든 다항식이 아닌 단 하나의 점을 

411
00:19:09,118 --> 00:19:11,776
살펴봄으로써 이러한 다항식 중 하나에 유인 주기가 

412
00:19:11,776 --> 00:19:14,245
있는지 여부에 대한 테스트를 수행할 수 있다는 

413
00:19:14,245 --> 00:19:14,720
것입니다.

414
00:19:15,480 --> 00:19:16,948
이 때문에 실제로 정말 멋진 

415
00:19:16,948 --> 00:19:18,600
다이어그램을 생성할 수 있습니다.

416
00:19:19,380 --> 00:19:21,729
이것이 작동하는 방식은 두 개의 루트를 제자리에 

417
00:19:21,729 --> 00:19:24,079
고정하는 것입니다. z에 놓는 것은 음의 1이고 

418
00:19:24,079 --> 00:19:26,342
z는 양의 1과 같습니다. 그런 다음 세 번째 

419
00:19:26,342 --> 00:19:28,430
루트를 중심으로 이동합니다. 이를 람다라고 

420
00:19:28,430 --> 00:19:29,040
부르겠습니다.

421
00:19:30,480 --> 00:19:32,607
기억하세요. 우리가 찾고 있는 주요 

422
00:19:32,607 --> 00:19:35,160
특징은 질량 중심의 점이 검은색일 때입니다.

423
00:19:35,860 --> 00:19:37,961
그래서 제가 할 일은 오른쪽에 각 

424
00:19:37,961 --> 00:19:40,063
픽셀이 하나의 가능한 람다 선택에 

425
00:19:40,063 --> 00:19:42,940
해당하는 두 번째 다이어그램을 그리는 것입니다.

426
00:19:43,860 --> 00:19:46,084
우리가 할 일은 세 루트의 중간점 색상을 

427
00:19:46,084 --> 00:19:48,600
기반으로 해당 픽셀에 색상을 지정하는 것입니다.

428
00:19:49,600 --> 00:19:52,213
이것이 약간 혼란스럽게 느껴지더라도 괜찮습니다. 

429
00:19:52,213 --> 00:19:54,440
여기에는 많은 레이어가 작용하고 있습니다.

430
00:19:55,020 --> 00:19:58,029
오른쪽의 각 픽셀은 이 매개변수 람다에 의해 

431
00:19:58,029 --> 00:20:01,280
결정된 고유 다항식에 해당한다는 점을 기억하세요.

432
00:20:02,000 --> 00:20:04,740
실제로 이것을 매개변수 공간이라고 부를 수도 있습니다.

433
00:20:05,080 --> 00:20:05,580
익숙한 것 같나요?

434
00:20:13,740 --> 00:20:16,940
이 매개변수 공간의 점은 해당 다항식에 

435
00:20:16,940 --> 00:20:20,139
대한 뉴턴 방법 프로세스가 유인 주기를 

436
00:20:20,139 --> 00:20:23,340
생성하는 경우에만 검은색으로 표시됩니다.

437
00:20:24,260 --> 00:20:25,305
다시 한번 말씀드리지만, 소화하는 데 

438
00:20:25,305 --> 00:20:26,400
시간이 조금 걸리더라도 걱정하지 마세요.

439
00:20:27,840 --> 00:20:30,924
이제 언뜻 보면 이 다이어그램에 검은 점이 전혀 

440
00:20:30,924 --> 00:20:33,780
없어 보일 수도 있는데 이는 좋은 소식입니다.

441
00:20:33,940 --> 00:20:35,980
이는 대부분의 경우 뉴턴의 방법이 이와 

442
00:20:35,980 --> 00:20:38,300
같은 순환에 빠지지 않는다는 것을 의미합니다.

443
00:20:39,000 --> 00:20:41,509
하지만 저는 이것이 어디로 가는지 정확히 알 

444
00:20:41,509 --> 00:20:44,220
수 있을 만큼 충분히 미리 보았다고 생각합니다. 

445
00:20:44,220 --> 00:20:46,529
확대하면 검은색 영역을 찾을 수 있고 그 

446
00:20:46,529 --> 00:20:49,340
검은색 영역은 정확히 만델브로트 세트처럼 보입니다.

447
00:20:50,020 --> 00:20:52,400
그러나 다시 한번, 이러한 기능 중 하나에 

448
00:20:52,400 --> 00:20:54,680
대한 매개변수를 조정하는 질문을 하면 이 

449
00:20:54,680 --> 00:20:57,160
상징적인 카디오이드와 거품 모양이 생성됩니다.

450
00:20:58,020 --> 00:21:00,460
결론은 이 모양이 생각하는 것만큼 z 제곱 

451
00:21:00,460 --> 00:21:02,900
+ c 예제에만 국한되지 않는다는 것입니다.

452
00:21:03,400 --> 00:21:05,182
이는 이와 같은 프로세스를 갖는 

453
00:21:05,182 --> 00:21:07,261
매개변수 공간에 대한 보다 일반적이고 

454
00:21:07,261 --> 00:21:09,440
보편적인 것과 관련이 있는 것 같습니다.

455
00:21:11,640 --> 00:21:13,438
그럼에도 불구하고 한 가지 긴급한 

456
00:21:13,438 --> 00:21:15,520
질문은 우리가 프랙탈을 얻는 이유입니다.

457
00:21:16,220 --> 00:21:19,560
지난 비디오에서 나는 뉴턴 방법의 다이어그램이 색상이 

458
00:21:19,560 --> 00:21:22,790
있는 영역의 경계 주위에 작은 원을 그리면 그 원이 

459
00:21:22,790 --> 00:21:25,907
실제로 그림에서 사용 가능한 모든 색상을 포함해야 

460
00:21:25,907 --> 00:21:28,580
하는 매우 독특한 속성을 갖는 방법에 대해 

461
00:21:28,580 --> 00:21:29,360
설명했습니다.

462
00:21:30,280 --> 00:21:31,474
그리고 이것은 합리적인 지도에 

463
00:21:31,474 --> 00:21:32,740
있어서 더 일반적으로 사실입니다.

464
00:21:33,140 --> 00:21:36,915
제한점, 제한 주기, 무한대 경향 등 제한 행동 

465
00:21:36,915 --> 00:21:40,970
지점이 속하는 영역에 색상을 할당하려는 경우 그리는 

466
00:21:40,970 --> 00:21:44,885
작은 원에는 이러한 제한 행동 중 하나만 포함하는 

467
00:21:44,885 --> 00:21:48,801
지점이 포함됩니다. , 또는 모두 포함된 포인트를 

468
00:21:48,801 --> 00:21:49,640
포함합니다.

469
00:21:49,820 --> 00:21:51,200
그 사이에는 결코 아무것도 없습니다.

470
00:21:51,959 --> 00:21:54,523
따라서 최소한 세 가지 색상이 있는 경우 이 

471
00:21:54,523 --> 00:21:57,496
속성은 경계가 결코 매끄러울 수 없음을 의미합니다. 

472
00:21:57,496 --> 00:22:00,161
매끄러운 세그먼트를 따라 모든 색상이 아닌 두 

473
00:22:00,161 --> 00:22:02,724
가지 색상에만 닿는 작은 원을 그릴 수 있기 

474
00:22:02,724 --> 00:22:03,340
때문입니다.

475
00:22:03,920 --> 00:22:06,181
그리고 경험적으로 이것이 우리가 보는 것입니다. 

476
00:22:06,181 --> 00:22:08,360
아무리 확대해도 이러한 경계는 항상 거칠습니다.

477
00:22:08,880 --> 00:22:11,646
또한 확대하면 프레임 내에서 사용 가능한 모든 

478
00:22:11,646 --> 00:22:14,520
색상을 항상 볼 수 있다는 것을 알 수 있습니다.

479
00:22:16,160 --> 00:22:18,758
이것은 두 가지 제한 동작만 있는 맥락에서 

480
00:22:18,758 --> 00:22:21,248
대략적인 경계를 설명하지는 않지만 여전히 

481
00:22:21,248 --> 00:22:23,630
묶을 가치가 있는 해당 비디오에 남겨둔 

482
00:22:23,630 --> 00:22:26,120
느슨한 끝이며 Julia 세트와 두 가지 

483
00:22:26,120 --> 00:22:29,260
중요한 용어를 가져오는 좋은 변명입니다. 파투 세트.

484
00:22:29,940 --> 00:22:33,490
어떤 점이 결국 안정적이고 예측 가능한 패턴에 속하게 

485
00:22:33,490 --> 00:22:37,040
되면 반복 함수의 Fatou 집합의 일부라고 말합니다.

486
00:22:37,740 --> 00:22:39,257
그리고 우리가 본 모든 지도에는 

487
00:22:39,257 --> 00:22:40,860
거의 모든 것이 포함되어 있습니다.

488
00:22:41,640 --> 00:22:43,970
Julia 세트는 다른 모든 것입니다. 

489
00:22:43,970 --> 00:22:46,831
우리가 본 그림에서는 색상 영역 사이의 대략적인 

490
00:22:46,831 --> 00:22:49,479
경계, 즉 하나의 안정적인 어트랙터에서 다른 

491
00:22:49,479 --> 00:22:52,340
안정적인 어트랙터로 전환할 때 발생하는 일입니다.

492
00:22:53,200 --> 00:22:55,619
예를 들어 Julia 집합에는 모든 

493
00:22:55,619 --> 00:22:58,160
반발 주기와 반발 고정점이 포함됩니다.

494
00:22:58,880 --> 00:23:02,472
Julia 집합의 일반적인 지점은 순환이 아니지만 

495
00:23:02,472 --> 00:23:05,680
명확한 패턴 없이 영원히 튀어 오를 것입니다.

496
00:23:05,680 --> 00:23:08,164
이제 Fatou 세트의 한 지점을 보고 그 

497
00:23:08,164 --> 00:23:10,544
주위에 충분히 작은 디스크를 그리면 관련 

498
00:23:10,544 --> 00:23:12,925
안정적인 동작이 무엇이든 관계 없이 작은 

499
00:23:12,925 --> 00:23:15,720
디스크가 결국 축소되는 프로세스를 따르면 됩니다.

500
00:23:16,240 --> 00:23:18,025
무한대로 가는 것이 아니라면 디스크가 

501
00:23:18,025 --> 00:23:19,895
무한대 주변으로 줄어들고 있다고 생각할 

502
00:23:19,895 --> 00:23:22,020
수도 있지만 문제가 혼란스러울 수도 있습니다.

503
00:23:24,500 --> 00:23:26,926
대조적으로, 줄리아 집합의 한 점 주위에 작은 

504
00:23:26,926 --> 00:23:29,073
원판을 그리는 경우, 해당 원 내의 점이 

505
00:23:29,073 --> 00:23:31,220
떨어져 나가고 자체 작업을 수행함에 따라 

506
00:23:31,220 --> 00:23:34,020
시간이 지남에 따라 디스크가 확장되는 경향이 있습니다.

507
00:23:35,540 --> 00:23:37,317
즉, Julia 집합의 점은 

508
00:23:37,317 --> 00:23:39,540
혼란스럽게 행동하는 경향이 있습니다.

509
00:23:40,080 --> 00:23:42,405
가까운 이웃은 심지어 매우 가까운 곳에 

510
00:23:42,405 --> 00:23:45,260
있더라도 결국 질적으로 다른 행동을 하게 됩니다.

511
00:23:46,420 --> 00:23:48,840
하지만 단순히 이 디스크가 팽창하는 것만은 아닙니다.

512
00:23:49,360 --> 00:23:52,414
앞에서 언급한 다색 속성의 핵심인 매우 놀라운 

513
00:23:52,414 --> 00:23:55,703
결과는 이 프로세스를 실행하면 작은 디스크가 결국 

514
00:23:55,703 --> 00:23:58,993
너무 많이 팽창하여 최대 두 가지 예외를 제외하고 

515
00:23:58,993 --> 00:24:02,400
복잡한 평면의 모든 단일 지점에 도달한다는 것입니다.

516
00:24:02,400 --> 00:24:04,587
이것은 Julia가 설정한 모든 곳에 

517
00:24:04,587 --> 00:24:06,880
물건이 있다는 원칙으로 알려져 있습니다.

518
00:24:07,940 --> 00:24:09,360
좋아요, 실제로는 그렇게 부르지 않습니다.

519
00:24:09,700 --> 00:24:11,586
내가 읽은 자료에서 그것은 몬텔의 정리로 

520
00:24:11,586 --> 00:24:13,800
알려진 것에 대한 필연적인 결과로 언급되었습니다.

521
00:24:14,320 --> 00:24:15,700
하지만 그렇게 불러야 합니다.

522
00:24:16,120 --> 00:24:18,747
어떤 의미에서 이것이 우리에게 말하는 것은 

523
00:24:18,747 --> 00:24:21,483
Julia 집합의 포인트가 단순히 혼란스러운 

524
00:24:21,483 --> 00:24:24,220
것이 아니라 가능한 한 혼란스럽다는 것입니다.

525
00:24:25,860 --> 00:24:28,561
여기에서는 줄리아 집합의 한 지점에서 1백만 분의 

526
00:24:28,561 --> 00:24:31,070
1이라는 아주 작은 거리 내에서 시작하는 수천 

527
00:24:31,070 --> 00:24:33,482
개의 지점으로 구성된 클러스터가 포함된 뉴턴 

528
00:24:33,482 --> 00:24:36,280
지도를 사용한 약간의 시뮬레이션을 보여 드리겠습니다.

529
00:24:42,680 --> 00:24:45,376
물론, 물건은 어디에나 있다는 원칙은 그 

530
00:24:45,376 --> 00:24:48,072
거리 내에 셀 수 없이 무한히 많은 점에 

531
00:24:48,072 --> 00:24:50,534
관한 것이며, 결국 두 점을 제외하고 

532
00:24:50,534 --> 00:24:53,700
평면의 모든 것을 도달하도록 확장된다는 것입니다.

533
00:24:54,200 --> 00:24:55,456
하지만 이 작은 클러스터는 여전히 

534
00:24:55,456 --> 00:24:56,780
일반적인 아이디어를 제공해야 합니다.

535
00:24:56,780 --> 00:24:59,728
그 작은 디스크에서 나온 작은 유한 샘플이 

536
00:24:59,728 --> 00:25:02,800
겉보기에 모든 방향으로 여기저기에 뿌려집니다.

537
00:25:04,400 --> 00:25:06,865
이것이 우리의 목적에 있어 의미하는 바는, 

538
00:25:06,865 --> 00:25:09,434
끌어당기는 고정점이나 끌어당기는 주기와 같은 

539
00:25:09,434 --> 00:25:11,900
맵의 매력적인 동작이 있는 경우 Julia 

540
00:25:11,900 --> 00:25:14,366
집합의 점 주위에 있는 작은 디스크의 값이 

541
00:25:14,366 --> 00:25:16,523
어떻게든 보장될 수 있다는 것입니다. 

542
00:25:16,523 --> 00:25:18,989
아주 작았지만 결국에는 그 매력적인 행동에 

543
00:25:18,989 --> 00:25:20,120
빠지게 될 것입니다.

544
00:25:20,860 --> 00:25:23,439
세 개 이상의 유인 행동이 있는 경우 

545
00:25:23,439 --> 00:25:25,895
Julia 집합이 왜 매끄럽지 않고 

546
00:25:25,895 --> 00:25:28,720
복잡해야 하는지에 대한 설명을 제공합니다.

547
00:25:29,820 --> 00:25:31,995
그럼에도 불구하고 이것은 완전히 만족스럽지 않을 

548
00:25:31,995 --> 00:25:34,009
수 있습니다. 왜냐하면 이 원칙은 애초에 왜 

549
00:25:34,009 --> 00:25:36,184
어디에나 존재하는 원칙이 사실인지에 대한 의문을 

550
00:25:36,184 --> 00:25:38,360
제기하고 한 단계 더 나아갈 수 있기 때문입니다.

551
00:25:39,180 --> 00:25:41,315
제가 언급한 것처럼, 이는 몬텔의 정리라는 

552
00:25:41,315 --> 00:25:43,630
것에서 유래합니다. 솔직히 다루어야 할 내용이 

553
00:25:43,630 --> 00:25:46,300
많기 때문에 여기서는 자세히 설명하지 않기로 했습니다.

554
00:25:46,820 --> 00:25:48,553
내가 찾을 수 있는 증거는 결국 J 

555
00:25:48,553 --> 00:25:50,460
함수라고 알려진 것에 의존하게 되는데, 

556
00:25:50,460 --> 00:25:52,540
이는 그 자체로 완전히 복잡한 이야기입니다.

557
00:25:52,800 --> 00:25:55,095
물론 더 많은 내용을 알고 싶어하는 분들을 위해 

558
00:25:55,095 --> 00:25:56,965
설명에 링크와 리소스를 남겨두겠습니다. 

559
00:25:56,965 --> 00:25:59,005
이 원칙이 왜 사실인지 확인할 수 있는 더 

560
00:25:59,005 --> 00:26:01,215
간단한 방법을 알고 계시다면 저는 귀를 기울일 

561
00:26:01,215 --> 00:26:01,640
것입니다.

562
00:26:02,400 --> 00:26:05,018
또한 간단한 참고 사항으로 우리가 지금까지 본 

563
00:26:05,018 --> 00:26:07,938
그림에는 면적이 0인 Julia 집합이 있지만 이는 

564
00:26:07,938 --> 00:26:10,758
일종의 이 영역 사이의 경계이며 Julia 집합이 

565
00:26:10,758 --> 00:26:13,376
전체인 예가 있다는 점을 말씀드리고 싶습니다. 

566
00:26:13,376 --> 00:26:16,195
비행기에서는 모든 것이 혼란스러워서 일종의 거칠게 

567
00:26:16,195 --> 00:26:16,800
행동합니다.

568
00:26:18,180 --> 00:26:20,363
이 특정 섹션의 주요 내용은 

569
00:26:20,363 --> 00:26:22,820
혼돈과 프랙탈 사이의 연결입니다.

570
00:26:22,820 --> 00:26:26,307
처음에는 이것이 단지 서로 유사한 것처럼 보입니다. 

571
00:26:26,307 --> 00:26:29,433
아시다시피 뉴턴의 방법은 일부 시드 값에 대한 

572
00:26:29,433 --> 00:26:32,079
일종의 지저분한 과정으로 밝혀졌습니다. 

573
00:26:32,079 --> 00:26:35,446
그리고 이 지저분함은 특정 지점의 궤적을 따라가는 

574
00:26:35,446 --> 00:26:38,572
방식으로 볼 수 있고, 다이어그램의 복잡성으로 

575
00:26:38,572 --> 00:26:41,940
인해 질적으로 다른 종류의 지저분함처럼 느껴집니다.

576
00:26:42,520 --> 00:26:43,549
어쩌면 그것은 좋은 은유가 될 

577
00:26:43,549 --> 00:26:44,640
수도 있지만 그 이상은 아닙니다.

578
00:26:45,320 --> 00:26:48,604
그러나 여기서 깔끔한 점은 일부 점이 얼마나 

579
00:26:48,604 --> 00:26:52,021
혼란스러운지를 정량화하면 이 경계 속성을 통해 

580
00:26:52,021 --> 00:26:55,963
대략적인 프랙탈 모양에 대한 실제 설명으로 이어진다는 

581
00:26:55,963 --> 00:26:56,620
것입니다.

582
00:26:57,640 --> 00:27:00,445
수학에서 혼돈과 프랙탈이 함께 결합되는 경우를 

583
00:27:00,445 --> 00:27:03,251
자주 볼 수 있으며, 적어도 나에게는 두 가지 

584
00:27:03,251 --> 00:27:05,734
현상이 우연히 일치하는 것보다 그 결합이 

585
00:27:05,734 --> 00:27:08,540
논리적인 연결과 함께 올 때마다 만족스럽습니다.

