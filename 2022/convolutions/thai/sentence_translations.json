[
 {
  "input": "Suppose I give you two different lists of numbers, or maybe two different functions, and I ask you to think of all the ways you might combine those two lists to get a new list of numbers, or combine the two functions to get a new function. ",
  "translatedText": "สมมติว่าฉันให้รายการตัวเลขที่แตกต่างกันสองรายการกับคุณ หรืออาจเป็นสองฟังก์ชันที่แตกต่างกัน และฉันขอให้คุณคิดถึงวิธีทั้งหมดที่คุณอาจรวมทั้งสองรายการเข้าด้วยกันเพื่อให้ได้รายการตัวเลขใหม่ หรือรวมทั้งสองฟังก์ชันเพื่อให้ได้ฟังก์ชันใหม่ . ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 0.0,
  "end": 11.32
 },
 {
  "input": "Maybe one simple way that comes to mind is to simply add them together term by term. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 12.12,
  "end": 16.76
 },
 {
  "input": "Likewise with the functions, you can add all the corresponding outputs. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 17.16,
  "end": 19.92
 },
 {
  "input": "In a similar vein, you could also multiply the two lists term by term and do the same thing with the functions. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 20.54,
  "end": 25.68
 },
 {
  "input": "But there's another kind of combination just as fundamental as both of those, but a lot less commonly discussed, known as a convolution. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 26.36,
  "end": 33.5
 },
 {
  "input": "But unlike the previous two cases, it's not something that's merely inherited from an operation you can do to numbers. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 34.08,
  "end": 39.82
 },
 {
  "input": "It's something genuinely new for the context of lists of numbers or combining functions. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 39.98,
  "end": 44.7
 },
 {
  "input": "They show up all over the place, they are ubiquitous in image processing, it's a core construct in the theory of probability, they're used a lot in solving differential equations, and one context where you've almost certainly seen it, if not by this name, is multiplying two polynomials together. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 45.32,
  "end": 60.24
 },
 {
  "input": "As someone in the business of visual explanations, this is an especially great topic, because the formulaic definition in isolation and without context can look kind of intimidating, but if we take the time to really unpack what it's saying, and before that actually motivate why you would want something like this, it's an incredibly beautiful operation. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 60.74,
  "end": 78.32
 },
 {
  "input": "And I have to admit, I actually learned a little something while putting together the visuals for this project. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 78.96,
  "end": 83.54
 },
 {
  "input": "In the case of convolving two different functions, I was trying to think of different ways you might picture what that could mean, and with one of them I had a little bit of an aha moment for why it is that normal distributions play the role that they do in probability, why it's such a natural shape for a function. ",
  "translatedText": "บางทีวิธีง่ายๆ วิธีหนึ่งที่นึกถึงก็คือการรวมพวกมันเข้าด้วยกันทีละเทอม ในทำนองเดียวกันกับฟังก์ชัน คุณสามารถเพิ่มเอาต์พุตที่เกี่ยวข้องทั้งหมดได้ ในทำนองเดียวกัน คุณสามารถคูณทั้งสองรายการทีละเทอมและทำสิ่งเดียวกันกับฟังก์ชันต่างๆ ได้ แต่มีการรวมกันอีกแบบหนึ่ง ที่เป็นพื้นฐานพอๆ กับทั้งสองแบบ แต่มีการพูดถึงกันน้อยกว่ามาก เรียกว่าการบิดตัว แต่ต่างจากสองกรณีก่อนหน้านี้ ไม่ใช่สิ่งที่สืบทอดมาจากการดำเนินการที่คุณสามารถทำได้กับตัวเลขเท่านั้น เป็นสิ่งใหม่อย่างแท้จริงสำหรับบริบทของรายการตัวเลขหรือฟังก์ชันการรวม พวกมันปรากฏอยู่ทั่วทุกที่ แพร่หลายในการประมวลผลภาพ มันเป็นโครงสร้างหลักในทฤษฎีความน่าจะเป็น พวกมันถูกใช้มากมายในการแก้สมการเชิงอนุพันธ์ และบริบทหนึ่งที่คุณเกือบจะเห็นมันแน่นอน ถ้าไม่ใช่ โดยใช้ชื่อนี้ เป็นการคูณพหุนามสองตัวเข้าด้วยกัน ในฐานะคนในธุรกิจการอธิบายด้วยภาพ นี่เป็นหัวข้อที่ยอดเยี่ยมเป็นพิเศษ เนื่องจากคำจำกัดความเชิงสูตรโดยแยกจากกันและไม่มีบริบทอาจดูน่ากลัว แต่ถ้าเราใช้เวลาในการแกะสิ่งที่พูดออกมาจริงๆ และก่อนหน้านั้นจะเป็นแรงจูงใจว่าทำไม คุณคงอยากได้อะไรแบบนี้ มันเป็นการผ่าตัดที่สวยงามอย่างไม่น่าเชื่อ และฉันต้องยอมรับว่า จริง ๆ แล้วฉันได้เรียนรู้บางอย่างเล็กน้อยขณะรวบรวมภาพสำหรับโปรเจ็กต์นี้ ในกรณีของการรวมฟังก์ชันที่ต่างกันสองฟังก์ชันเข้าด้วยกัน ฉันพยายามคิดถึงวิธีต่างๆ ที่คุณจะนึกภาพว่ามันหมายถึงอะไร และหนึ่งในนั้น ฉันมีเวลานิดหน่อยว่าทำไมการแจกแจงแบบปกติจึงมีบทบาทที่ พวกเขาน่าจะเป็นไปได้ เพราะเหตุใดมันจึงเป็นรูปร่างตามธรรมชาติของฟังก์ชัน แต่ฉันกำลังก้าวไปข้างหน้า มีการตั้งค่ามากมายสำหรับสิ่งนั้น ในวิดีโอนี้ จุดสนใจหลักของเราอยู่ที่กรณีที่แยกกัน และโดยเฉพาะอย่างยิ่ง การสร้างอัลกอริธึมที่ไม่คาดคิดแต่ฉลาดมาก สำหรับการคำนวณสิ่งเหล่านี้ และผมจะดึงการอภิปรายสำหรับคดีต่อเนื่องออกเป็นตอนที่สอง เป็นเรื่องที่น่าสนใจมากที่จะเปิดตัวตัวอย่างการประมวลผลภาพ เนื่องจากพวกมันดูน่าสนใจที่สุดทางสายตา แต่มีความพิถีพิถันอยู่สองสามจุดที่ทำให้กรณีการประมวลผลภาพเป็นตัวแทนของการโน้มน้าวใจโดยรวมน้อยลง ดังนั้น เรามาเริ่มเรื่องต่างๆ กันด้วยความน่าจะเป็นกันดีกว่า และโดยเฉพาะอย่างยิ่งหนึ่งในตัวอย่างที่ง่ายที่สุดที่ฉันแน่ใจว่าทุกคนที่นี่เคยนึกถึงในช่วงหนึ่งของชีวิต ซึ่งคือการทอยลูกเต๋าคู่หนึ่งและหาโอกาสที่จะเห็นผลรวมต่างๆ และคุณอาจบอกว่า ไม่ใช่ปัญหา ไม่ใช่ปัญหา ลูกเต๋าสองลูกของคุณแต่ละลูกมีผลลัพธ์ที่เป็นไปได้ที่แตกต่างกันหกคู่ ซึ่งทำให้เรามีคู่ผลลัพธ์ที่เป็นไปได้ที่แตกต่างกันทั้งหมด 36 คู่ และถ้าเราพิจารณาดูทั้งหมด เราก็จะสามารถนับได้ว่ามีกี่คู่ที่มีผลรวมที่กำหนด และการจัดเรียงคู่ทั้งหมดในตารางแบบนี้ สิ่งที่ดีอย่างหนึ่งก็คือ คู่ทั้งหมดที่มีผลรวมคงที่ สามารถมองเห็นได้ในเส้นทแยงมุมที่แตกต่างกันเส้นใดเส้นหนึ่ง ดังนั้นเพียงแค่นับว่ามีกี่เส้นในแต่ละเส้นทแยงมุมก็จะบอกคุณได้ว่ามีแนวโน้มที่คุณจะเห็นผลรวมนั้นมากน้อยเพียงใด  และผมจะบอกว่า ดีมาก ดีมาก แต่คุณคิดวิธีอื่นที่คุณอาจเห็นภาพคำถามเดียวกันนี้ได้ไหม? ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 83.54,
  "end": 98.52
 },
 {
  "input": "But I'm getting ahead of myself, there's a lot of setup for that one. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 99.02,
  "end": 101.52
 },
 {
  "input": "In this video, our primary focus is just going to be on the discrete case, and in particular building up to a very unexpected but very clever algorithm for computing these. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 101.84,
  "end": 110.26
 },
 {
  "input": "And I'll pull out the discussion for the continuous case into a second part. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 110.26,
  "end": 114.48
 },
 {
  "input": "It's very tempting to open up with the image processing examples, since they're visually the most intriguing, but there are a couple bits of finickiness that make the image processing case less representative of convolutions overall, so instead let's kick things off with probability, and in particular one of the simplest examples that I'm sure everyone here has thought about at some point in their life, which is rolling a pair of dice and figuring out the chances of seeing various different sums. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 118.58,
  "end": 141.5
 },
 {
  "input": "And you might say, not a problem, not a problem. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 142.46,
  "end": 144.46
 },
 {
  "input": "Each of your two dice has six different possible outcomes, which gives us a total of 36 distinct possible pairs of outcomes, and if we just look through them all we can count up how many pairs have a given sum. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 144.68,
  "end": 155.86
 },
 {
  "input": "And arranging all the pairs in a grid like this, one pretty nice thing is that all of the pairs that have a constant sum are visible along one of these different diagonals. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 156.6,
  "end": 165.44
 },
 {
  "input": "So simply counting how many exist on each of those diagonals will tell you how likely you are to see a particular sum. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 165.44,
  "end": 172.12
 },
 {
  "input": "And I'd say, very good, very good, but can you think of any other ways that you might visualize the same question? ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 173.22,
  "end": 178.66
 },
 {
  "input": "Other images that can come to mind to think of all the distinct pairs that have a given sum? ",
  "translatedText": "ภาพอื่น ๆ ที่สามารถนึกถึงได้เมื่อนึกถึงคู่ที่แตกต่างทั้งหมดที่มีผลรวมที่กำหนด? ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 179.3,
  "end": 184.06
 },
 {
  "input": "And maybe one of you raises your hand and says, yeah, I've got one. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 184.86,
  "end": 187.98
 },
 {
  "input": "Let's say you picture these two different sets of possibilities each in a row, but you flip around that second row. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 188.28,
  "end": 193.76
 },
 {
  "input": "That way all of the different pairs which add up to seven line up vertically like this. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 193.76,
  "end": 198.76
 },
 {
  "input": "And if we slide that bottom row all the way to the right, then the unique pair that adds up to two, the snake eyes, are the only ones that align. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 199.36,
  "end": 206.28
 },
 {
  "input": "And if I schlunk that over one unit to the right, the pairs which align are the two different pairs that add up to three. ",
  "translatedText": "และบางทีพวกคุณคนใดคนหนึ่งยกมือขึ้นแล้วพูดว่า ใช่ ฉันมีอันหนึ่ง สมมติว่าคุณนึกภาพความเป็นไปได้สองชุดที่ต่างกันนี้แต่ละชุดติดกัน แต่คุณพลิกแถวที่สองนั้น ด้วยวิธีนี้คู่ต่าง ๆ ทั้งหมดซึ่งรวมกันได้เจ็ดคู่จะเรียงกันในแนวตั้งเช่นนี้ และถ้าเราเลื่อนแถวล่างไปทางขวา คู่เดียวที่รวมกันได้เป็นสองคู่ คือตางู จะเป็นคู่เดียวที่เรียงกัน และถ้าฉันแยกมันไปทางขวามากกว่าหนึ่งหน่วย คู่ที่เรียงกันก็คือคู่ที่แตกต่างกันสองคู่ที่รวมกันได้เป็นสามคู่ และโดยทั่วไป ค่าออฟเซ็ตที่แตกต่างกันของอาร์เรย์ที่ต่ำกว่านี้ ซึ่งจำได้ว่าฉันต้องพลิกกลับก่อน จะเผยให้เห็นคู่ที่แตกต่างกันทั้งหมดที่มีผลรวมที่กำหนด สำหรับคำถามเกี่ยวกับความน่าจะเป็น สิ่งนี้ยังคงไม่น่าสนใจนัก เพราะสิ่งที่เราทำคือนับจำนวนผลลัพธ์ในแต่ละหมวดหมู่เหล่านี้ แต่นั่นเป็นการสันนิษฐานโดยปริยายว่ามีโอกาสเท่ากันที่แต่ละหน้าจะเกิดขึ้น แต่จะเป็นอย่างไรถ้าฉันบอกคุณว่าฉันมีลูกเต๋าชุดพิเศษที่ไม่เหมือนกันล่ะ? ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 206.62,
  "end": 212.08
 },
 {
  "input": "And in general, different offset values of this lower array, which remember I had to flip around first, reveal all the distinct pairs that have a given sum. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 212.88,
  "end": 221.46
 },
 {
  "input": "As far as probability questions go, this still isn't especially interesting, because all we're doing is counting how many outcomes there are in each of these categories. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 224.82,
  "end": 232.64
 },
 {
  "input": "But that is with the implicit assumption that there's an equal chance for each of these faces to come up. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 232.98,
  "end": 238.12
 },
 {
  "input": "But what if I told you I have a special set of dice that's not uniform? ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 238.36,
  "end": 241.62
 },
 {
  "input": "Maybe the blue die has its own set of numbers describing the probabilities for each face coming up, and the red die has its own unique distinct set of numbers. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 242.06,
  "end": 249.76
 },
 {
  "input": "In that case, if you wanted to figure out, say, the probability of seeing a two, you would multiply the probability that the blue die is a one times the probability that the red die is a one. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 250.3,
  "end": 259.86
 },
 {
  "input": "And for the chances of seeing a three, you look at the two distinct pairs where that's possible, and again, multiply the corresponding probabilities, and then add those two products together. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 260.28,
  "end": 269.68
 },
 {
  "input": "Similarly, the chances of seeing a four involves multiplying together three different pairs of possibilities and adding them all together. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 270.1,
  "end": 276.82
 },
 {
  "input": "And in the spirit of setting up some formulas, let's name these top probabilities a1, a2, a3, and so on, and name the bottom ones b1, b2, b3, and so on. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 276.82,
  "end": 285.96
 },
 {
  "input": "And in general, this process, where we're taking two different arrays of numbers, flipping the second one around, and then lining them up at various different offset values, taking a bunch of pairwise products and adding them up, that's one of the fundamental ways to think about what a convolution is. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 286.4,
  "end": 301.62
 },
 {
  "input": "So just to spell it out a little more exactly, through this process, we just generated probabilities for seeing two, three, four, on and on up to 12, and we got them by mixing together one list of values, a, and another list of values, b. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 304.86,
  "end": 316.98
 },
 {
  "input": "In the lingo, we'd say the convolution of those two sequences gives us this new sequence, the new sequence of 11 values, each of which looks like some sum of pairwise products. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 317.44,
  "end": 327.34
 },
 {
  "input": "If you prefer, another way you could think about the same operation is to first create a table of all the pairwise products, and then add up along all these diagonals. ",
  "translatedText": "บางทีลูกเต๋าสีน้ำเงินอาจมีชุดตัวเลขของตัวเองซึ่งอธิบายความน่าจะเป็นของแต่ละหน้าที่กำลังจะมาถึง และลูกเต๋าสีแดงอาจมีชุดตัวเลขที่แตกต่างกันออกไป ในกรณีนั้น หากคุณอยากหา เช่น ความน่าจะเป็นที่จะมองเห็นเลข 2 คุณต้องคูณความน่าจะเป็นที่ลูกเต๋าสีน้ำเงินเป็น 1 คูณความน่าจะเป็นที่ลูกเต๋าสีแดงเป็น 1 และสำหรับโอกาสที่จะเห็นเลขสาม คุณดูคู่ที่ต่างกันสองคู่เมื่อเป็นไปได้ แล้วคูณความน่าจะเป็นที่สอดคล้องกันอีกครั้ง แล้วบวกผลคูณทั้งสองเข้าด้วยกัน ในทำนองเดียวกัน โอกาสในการเห็นสี่คู่นั้นเกี่ยวข้องกับการคูณความเป็นไปได้สามคู่เข้าด้วยกันแล้วบวกเข้าด้วยกัน และตามเจตนารมณ์ของการกำหนดสูตร ลองตั้งชื่อความน่าจะเป็นสูงสุดเหล่านี้ว่า a1, a2, a3 และอื่นๆ และตั้งชื่อความน่าจะเป็นอันดับล่างสุด b1, b2, b3 และอื่นๆ โดยทั่วไป กระบวนการนี้ โดยที่เราเอาตัวเลขสองตัวที่ต่างกัน พลิกอันที่สองไปรอบๆ แล้วเรียงกันด้วยค่าออฟเซ็ตต่างๆ กัน นำผลคูณคู่มารวมกัน นั่นคือหนึ่งใน วิธีพื้นฐานในการคิดว่าการบิดเบี้ยวคืออะไร เพื่อให้อธิบายให้ชัดเจนยิ่งขึ้นอีกหน่อย ผ่านกระบวนการนี้ เราเพิ่งสร้างความน่าจะเป็นที่จะเห็น 2, 3, 4 ต่อไปและจนถึง 12 และเราได้มันมาโดยการผสมรายการค่าหนึ่งรายการ a และอีกค่าหนึ่งเข้าด้วยกัน รายการค่าข ในศัพท์แสง เราจะบอกว่าการบิดของลำดับทั้งสองนั้นทำให้เรามีลำดับใหม่นี้ ซึ่งเป็นลำดับใหม่ที่มี 11 ค่า ซึ่งแต่ละค่าจะดูเหมือนผลรวมของผลคูณคู่ หากคุณต้องการ วิธีคิดอีกวิธีหนึ่งเกี่ยวกับการดำเนินการเดียวกันคือสร้างตารางของผลิตภัณฑ์แบบคู่ทั้งหมดก่อน แล้วจึงบวกตามเส้นทแยงมุมเหล่านี้ทั้งหมด ขอย้ำอีกครั้ง นั่นคือวิธีผสมลำดับตัวเลขทั้งสองนี้เข้าด้วยกัน เพื่อให้เราได้ลำดับใหม่ของตัวเลข 11 ตัว มันเป็นการทำงานแบบเดียวกับที่หน้าต่างบานเลื่อนคิด แต่เป็นอีกมุมมองหนึ่ง ใส่สัญลักษณ์เล็กๆ น้อยๆ ลงไป ต่อไปนี้คือวิธีที่คุณอาจเห็นมันถูกเขียนลงไป การม้วนตัวของ a และ b ซึ่งแสดงด้วยเครื่องหมายดอกจันเล็กๆ นี้ คือรายการใหม่ และองค์ประกอบที่ n ของรายการนั้นดูเหมือนผลรวม และผลรวมนั้นไปเหนือคู่ดัชนีต่างๆ ทั้งหมด i และ j ดังนั้นผลรวมของ ดัชนีเหล่านั้นเท่ากับ n มันเป็นคำหนึ่ง แต่ตัวอย่าง ถ้า n เป็น 6 คู่ที่เราจะไปคือ 1 และ 5, 2 และ 4, 3 และ 3, 4 และ 2, 5 และ 1 คู่ต่าง ๆ ทั้งหมดที่รวมกันเข้าด้วยกัน ถึง 6 แต่จริงๆ แล้ว ไม่ว่าคุณจะเขียนมันลงไปอย่างไร สัญลักษณ์นั้นมีความสำคัญรองลงมาต่อภาพที่คุณอาจจะนึกถึงในกระบวนการนี้ ตรงนี้ บางทีการทำตัวอย่างง่ายๆ อย่างหนึ่งอาจช่วยได้ โดยผมอาจถามคุณว่ารายการ 1, 2, 3 กับรายการ 4, 5, 6 จะมีการสลับกันเป็นเท่าใด คุณอาจลองนึกภาพการหยิบทั้งสองรายการนี้ พลิกไปรอบรายการที่สอง จากนั้นเริ่มโดยเริ่มจากฝาไปทางซ้าย จากนั้นคู่ของค่าที่เรียงกันคือ 1 และ 4 คูณเข้าด้วยกัน และนั่นให้เทอมแรกของผลลัพธ์ของเรา เลื่อนอาร์เรย์ด้านล่างไปทางขวาหนึ่งหน่วย คู่ที่จัดเรียงคือ 1 และ 5 และ 2 และ 4 คูณคู่เหล่านั้น แล้วบวกเข้าด้วยกัน และนั่นทำให้เราได้ 13 ซึ่งเป็นรายการถัดไปในเอาต์พุตของเรา เลื่อนสิ่งต่างๆ เข้ามาอีกครั้ง เราจะได้ 1 คูณ 6, บวก 2 คูณ 5, บวก 3 คูณ 4, ซึ่งเท่ากับ 28. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 327.34,
  "end": 336.98
 },
 {
  "input": "Again, that's a way of mixing together these two sequences of numbers to get us a new sequence of 11 numbers. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 337.46,
  "end": 342.76
 },
 {
  "input": "It's the same operation as the sliding windows thought, just another perspective. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 343.24,
  "end": 346.46
 },
 {
  "input": "Putting a little notation to it, here's how you might see it written down. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 347.14,
  "end": 349.8
 },
 {
  "input": "The convolution of a and b, denoted with this little asterisk, is a new list, and the nth element of that list looks like a sum, and that sum goes over all different pairs of indices, i and j, so that the sum of those indices is equal to n. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 350.22,
  "end": 364.86
 },
 {
  "input": "It's kind of a mouthful, but for example, if n was 6, the pairs we're going over are 1 and 5, 2 and 4, 3 and 3, 4 and 2, 5 and 1, all the different pairs that add up to 6. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 365.28,
  "end": 375.8
 },
 {
  "input": "But honestly, however you write it down, the notation is secondary in importance to the visual you might hold in your head for the process. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 376.62,
  "end": 382.34
 },
 {
  "input": "Here, maybe it helps to do a super simple example, where I might ask you what's the convolution of the list 1, 2, 3, with the list 4, 5, 6. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 383.28,
  "end": 390.78
 },
 {
  "input": "You might picture taking both of these lists, flipping around that second one, and then starting with its lid all the way over to the left. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 391.48,
  "end": 397.68
 },
 {
  "input": "Then the pair of values which align are 1 and 4, multiply them together, and that gives us our first term of our output. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 398.18,
  "end": 403.54
 },
 {
  "input": "Slide that bottom array one unit to the right, the pairs which align are 1 and 5, and 2 and 4, multiply those pairs, add them together, and that gives us 13, the next entry in our output. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 403.96,
  "end": 414.46
 },
 {
  "input": "Slide things over once more, and we'll take 1 times 6, plus 2 times 5, plus 3 times 4, which happens to be 28. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 414.96,
  "end": 421.56
 },
 {
  "input": "One more slide, and we get 2 times 6, plus 3 times 5, and that gives us 27, and finally the last term will look like 3 times 6. ",
  "translatedText": "อีกสไลด์หนึ่ง เราจะได้ 2 คูณ 6 บวก 3 คูณ 5 และนั่นทำให้เราได้ 27 และสุดท้ายเทอมสุดท้ายจะเป็น 3 คูณ 6. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 422.02,
  "end": 430.12
 },
 {
  "input": "If you'd like, you can pull up whatever your favorite programming language is, and your favorite library that includes various numerical operations, and you can confirm I'm not lying to you. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 430.66,
  "end": 438.98
 },
 {
  "input": "If you take the convolution of 1, 2, 3, against 4, 5, 6, this is indeed the result that you'll get. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 438.98,
  "end": 444.48
 },
 {
  "input": "We've seen one case where this is a natural and desirable operation, adding up to probability distributions, and another common example would be a moving average. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 445.92,
  "end": 453.66
 },
 {
  "input": "Imagine you have some long list of numbers, and you take another smaller list of numbers that all add up to 1. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 454.08,
  "end": 459.76
 },
 {
  "input": "In this case, I just have a little list of 5 values, and they're all equal to 1 5th. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 460.1,
  "end": 464.06
 },
 {
  "input": "Then if we do this sliding window convolution process, and kind of close our eyes and sweep under the rug what happens at the very beginning of it, once our smaller list of values entirely overlaps with the bigger one, think about what each term in this convolution really means. ",
  "translatedText": "หากคุณต้องการ คุณสามารถดึงภาษาโปรแกรมที่คุณชื่นชอบขึ้นมาได้ และไลบรารีที่คุณชื่นชอบซึ่งมีการดำเนินการทางตัวเลขต่างๆ และคุณสามารถยืนยันได้ว่าฉันไม่ได้โกหกคุณ ถ้าคุณหาการบิดของ 1, 2, 3, ต่อ 4, 5, 6, คุณจะได้ผลลัพธ์นี้อย่างแน่นอน เราเคยเห็นกรณีหนึ่งที่การดำเนินการนี้เป็นไปตามธรรมชาติและเป็นที่ต้องการ โดยบวกเข้ากับการแจกแจงความน่าจะเป็น และอีกตัวอย่างหนึ่งที่พบบ่อยคือค่าเฉลี่ยเคลื่อนที่ ลองนึกภาพคุณมีรายการตัวเลขยาวๆ แล้วคุณเอารายการตัวเลขเล็กๆ อีกอันมารวมกันเป็น 1 ในกรณีนี้ ผมมีรายการเล็กๆ น้อยๆ ของค่า 5 ค่า ซึ่งทั้งหมดเท่ากับ 1 ใน 5 จากนั้นถ้าเราทำกระบวนการบิดหน้าต่างบานเลื่อนนี้ และหลับตาแล้วกวาดใต้พรมจะเกิดอะไรขึ้นที่จุดเริ่มต้น เมื่อรายการค่าที่น้อยกว่าของเราซ้อนทับกับค่าที่ใหญ่กว่าทั้งหมด ลองคิดดูว่าแต่ละเทอมในนี้คืออะไร การบิดหมายถึงจริงๆ ในการวนซ้ำแต่ละครั้ง สิ่งที่คุณทำคือการคูณแต่ละค่าจากข้อมูลของคุณด้วย 1 ใน 5 แล้วบวกเข้าด้วยกัน ซึ่งก็คือว่าคุณนำข้อมูลโดยเฉลี่ยมาไว้ในหน้าต่างเล็กๆ นี้ โดยรวมแล้ว กระบวนการนี้จะทำให้คุณได้ข้อมูลต้นฉบับในเวอร์ชันที่ราบรื่น และคุณสามารถแก้ไขสิ่งนี้ได้โดยเริ่มจากรายการตัวเลขเล็กๆ น้อยๆ ที่แตกต่างกัน และตราบใดที่รายการเล็กๆ นั้นรวมกันเป็น 1 คุณยังคงสามารถตีความได้ว่าเป็นการเคลื่อนไหว เฉลี่ย. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 464.06,
  "end": 478.7
 },
 {
  "input": "At each iteration, what you're doing is multiplying each of the values from your data by 1 5th, and adding them all together, which is to say you're taking an average of your data inside this little window. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 479.4,
  "end": 490.52
 },
 {
  "input": "Overall, the process gives you a smoothed out version of the original data, and you could modify this starting with a different little list of numbers, and as long as that little list all adds up to 1, you can still interpret it as a moving average. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 491.1,
  "end": 502.72
 },
 {
  "input": "In the example shown here, that moving average would be giving more weight towards the central value. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 503.4,
  "end": 507.76
 },
 {
  "input": "This also results in a smoothed out version of the data. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 508.42,
  "end": 510.8
 },
 {
  "input": "If you do kind of a two-dimensional analog of this, it gives you a fun algorithm for blurring a given image. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 513.14,
  "end": 518.72
 },
 {
  "input": "And I should say the animations I'm about to show are modified from something I originally made for part of a set of lectures I did with the Julia Lab at MIT for a certain OpenCourseWare class that included an image processing unit. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 518.72,
  "end": 531.08
 },
 {
  "input": "There we did a little bit more to dive into the code behind all of this, so if you're curious I'll leave you some links. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 531.56,
  "end": 536.28
 },
 {
  "input": "But focusing back on this blurring example, what's going on is I've got this little 3x3 grid of values that's marching along our original image, and if we zoom in, each one of those values is 1 9th, and what I'm doing at each iteration is multiplying each of those values by the corresponding pixel that it sits on top of. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 536.62,
  "end": 553.62
 },
 {
  "input": "And of course in computer science we think of colors as little vectors of three values, representing the red, green, and blue components. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 553.9,
  "end": 560.2
 },
 {
  "input": "When I multiply all these little values by 1 9th and I add them together, it gives us an average along each color channel, and the corresponding pixel for the image on the right is defined to be that sum. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 560.56,
  "end": 571.2
 },
 {
  "input": "The overall effect, as we do this for every single pixel on the image, is that each one kind of bleeds into all of its neighbors, which gives us a blurrier version than the original. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 571.94,
  "end": 580.86
 },
 {
  "input": "In the lingo we'd say that the image on the right is a convolution of our original image with a little grid of values. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 581.72,
  "end": 587.74
 },
 {
  "input": "Or more technically maybe I should say that it's the convolution with a 180 degree rotated version of that little grid of values. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 588.14,
  "end": 594.4
 },
 {
  "input": "Not that it matters when the grid is symmetric, but it's just worth keeping in mind that the definition of a convolution, as inherited from the pure math context, should always invite you to think about flipping around that second array. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 594.62,
  "end": 605.24
 },
 {
  "input": "If we modify this slightly we can get a much more elegant blurring effect by choosing a different grid of values. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 605.96,
  "end": 611.1
 },
 {
  "input": "In this case I have a little 5x5 grid, but the distinction is not so much its size. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 611.44,
  "end": 615.78
 },
 {
  "input": "If we zoom in we notice that the value in the middle is a lot bigger than the value towards the edges, and where this is coming from is they're all sampled from a bell curve, known as a Gaussian distribution. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 615.98,
  "end": 625.94
 },
 {
  "input": "That way when we multiply all of these values by the corresponding pixel that they're sitting on top of, we're giving a lot more weight to that central pixel and much less towards the ones out at the edge. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 626.8,
  "end": 636.38
 },
 {
  "input": "And just as before the corresponding pixel on the right is defined to be this sum. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 636.8,
  "end": 640.56
 },
 {
  "input": "As we do this process for every single pixel it gives a blurring effect which much more authentically simulates the notion of putting your lens out of focus or something like that. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 641.32,
  "end": 649.72
 },
 {
  "input": "But blurring is far from the only thing that you can do with this idea. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 649.9,
  "end": 653.36
 },
 {
  "input": "For instance take a look at this little grid of values, which involves some positive numbers on the left and some negative numbers on the right, which I'll color with blue and red respectively. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 653.8,
  "end": 662.9
 },
 {
  "input": "Take a moment to see if you can predict and understand what effect this will have on the final image. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 663.64,
  "end": 668.48
 },
 {
  "input": "So in this case I'll just be thinking of the image as grayscale instead of colored, so each of the pixels is just represented by one number instead of three. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 670.72,
  "end": 678.12
 },
 {
  "input": "And one thing worth noticing is that as we do this convolution it's possible to get negative values. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 678.44,
  "end": 683.06
 },
 {
  "input": "For example at this point here if we zoom in the left half of our little grid sits entirely on top of black pixels, which would have a value of zero, but the right half of negative values all sit on top of white pixels, which would have a value of one. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 683.06,
  "end": 695.46
 },
 {
  "input": "So when we multiply corresponding terms and add them together the results will be very negative, and the way I'm displaying this with the image on the right is to color negative values red and positive values blue. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 696.18,
  "end": 706.36
 },
 {
  "input": "Another thing to notice is that when you're on a patch that's all the same color everything goes to zero since the sum of the values in our little grid is zero. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 706.88,
  "end": 714.08
 },
 {
  "input": "This is very different from the previous two examples where the sum of our little grid was one, which let us interpret it as a moving average and hence a blur. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 715.18,
  "end": 722.18
 },
 {
  "input": "All in all this little process basically detects wherever there's variation in the pixel value as you move from left to right, and so it gives you a kind of way to pick up on all the vertical edges from your image. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 723.64,
  "end": 733.92
 },
 {
  "input": "And similarly if we rotated that grid around so that it varies as you move from the top to the bottom this will be picking up on all the horizontal edges, which in the case of our little pie creature image does result in some pretty demonic eyes. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 736.5,
  "end": 749.34
 },
 {
  "input": "This smaller grid by the way is often called a kernel, and the beauty here is how just by choosing a different kernel you can get different image processing effects, not just blurring your edge detection but also things like sharpening. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 750.4,
  "end": 760.84
 },
 {
  "input": "For those of you who have heard of a convolutional neural network the idea there is to use data to figure out what the kernels should be in the first place as determined by whatever the neural network wants to detect. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 760.84,
  "end": 771.48
 },
 {
  "input": "Another thing I should maybe bring up is the length of the output. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 772.76,
  "end": 775.52
 },
 {
  "input": "For something like the moving average example you might only want to think about the terms when both of the windows fully align with each other, or in the image processing example maybe you want the final output to have the same size as the original. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 775.82,
  "end": 787.28
 },
 {
  "input": "Now convolutions as a pure math operation always produce an array that's bigger than the two arrays that you started with, at least assuming one of them doesn't have a length of one. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 787.28,
  "end": 796.18
 },
 {
  "input": "Just know that in certain computer science contexts you often want to deliberately truncate that output. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 796.72,
  "end": 801.52
 },
 {
  "input": "Another thing worth highlighting is that in the computer science context this notion of flipping around that kernel before you let it march across the original often feels really weird and just uncalled for, but again note that that's what's inherited from the pure math context where like we saw with the probabilities it's an incredibly natural thing to do. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 804.72,
  "end": 822.44
 },
 {
  "input": "And actually I can show you one more pure math example where even the programmers should care about this one because it opens the doors for a much faster algorithm to compute all of these. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 823.02,
  "end": 832.02
 },
 {
  "input": "To set up what I mean by faster here let me go back and pull up some python again and I'm going to create two different relatively big arrays. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 832.62,
  "end": 839.78
 },
 {
  "input": "Each one will have a hundred thousand random elements in it and I'm going to assess the runtime of the convolve function from the numpy library. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 839.94,
  "end": 847.54
 },
 {
  "input": "And in this case it runs it for multiple different iterations, tries to find an average, and it looks like on this computer at least it averages at 4.87 seconds. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 848.18,
  "end": 856.52
 },
 {
  "input": "By contrast if I use a different function from the scipy library called fftconvolve which is the same thing just implemented differently that only takes 4.3 milliseconds on average, so three orders of magnitude improvement. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 856.96,
  "end": 870.16
 },
 {
  "input": "And again even though it flies under a different name it's giving the same output that the other convolve function does, it's just doing something to go about it in a cleverer way. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 870.16,
  "end": 879.12
 },
 {
  "input": "Remember how with the probability example I said another way you could think about the convolution was to create this table of all the pairwise products and then add up those pairwise products along the diagonals. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 882.2,
  "end": 892.68
 },
 {
  "input": "There's of course nothing specific to probability anytime you're convolving two different lists of numbers you can think about it this way. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 893.66,
  "end": 899.04
 },
 {
  "input": "Create this kind of multiplication table with all pairwise products and then each sum along the diagonal corresponds to one of your final outputs. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 899.04,
  "end": 906.46
 },
 {
  "input": "One context where this view is especially natural is when you multiply together two polynomials. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 907.6,
  "end": 912.8
 },
 {
  "input": "For example let me take the little grid we already have and replace the top terms with 1, 2x, and 3x squared and replace the other terms with 4, 5x, and 6x squared. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 913.3,
  "end": 923.6
 },
 {
  "input": "Now think about what it means when we're creating all of these different pairwise products between the two lists. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 924.0,
  "end": 928.84
 },
 {
  "input": "What you're doing is essentially expanding out the full product of the two polynomials I have written down and then when you add up along the diagonal that corresponds to collecting all like terms which is pretty neat expanding a polynomial and collecting like terms is exactly the same process as a convolution. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 929.04,
  "end": 946.44
 },
 {
  "input": "But this allows us to do something that's pretty cool because think about what we're saying here. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 947.74,
  "end": 952.34
 },
 {
  "input": "We're saying if you take two different functions and you multiply them together which is a simple pointwise operation that's the same thing as if you had first extracted the coefficients from each one of those assuming they're polynomials and then taken a convolution of those two lists of coefficients. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 952.34,
  "end": 968.84
 },
 {
  "input": "What makes that so interesting is that convolutions feel in principle a lot more complicated than simple multiplication and I don't just mean conceptually they're harder to think about I mean computationally it requires more steps to perform a convolution than it does to perform a pointwise product of two different lists. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 969.62,
  "end": 985.76
 },
 {
  "input": "For example let's say I gave you two really big polynomials say each one with a hundred different coefficients then if the way you multiply them was to expand out this product you know filling in this entire 100 by 100 grid of pairwise products that would require you to perform 10,000 different products and then when you're collecting all the like terms along the diagonals that's another set of around 10,000 operations. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 986.32,
  "end": 1009.86
 },
 {
  "input": "More generally in the lingo we'd say the algorithm is O of n squared meaning for two lists of size n the way that the number of operations scales is in proportion to the square of n. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1010.7,
  "end": 1021.14
 },
 {
  "input": "On the other hand if I think of two polynomials in terms of their outputs for example sampling their values at some handful of inputs then multiplying them only requires as many operations as the number of samples since again it's a pointwise operation and with polynomials you only need finitely many samples to be able to recover the coefficients. ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1021.82,
  "end": 1040.54
 },
 {
  "input": "For example two outputs are enough to uniquely specify a linear polynomial.",
  "translatedText": "ตัวอย่างเช่น สองเอาต์พุตก็เพียงพอที่จะระบุพหุนามเชิงเส้นโดยไม่ซ้ำกัน",
  "n_reviews": 0,
  "start": 1040.54,
  "end": 1045.06
 },
 {
  "input": "Three outputs would be enough to uniquely specify a quadratic polynomial.",
  "translatedText": "เอาต์พุต 3 รายการจะเพียงพอที่จะระบุพหุนามกำลังสองโดยไม่ซ้ำกัน",
  "n_reviews": 0,
  "start": 1045.66,
  "end": 1049.4
 },
 {
  "input": "And in general if you know n distinct outputs that's enough to uniquely specify a polynomial that has n different coefficients.",
  "translatedText": "โดยทั่วไป หากคุณทราบผลลัพธ์ที่แตกต่างกัน n รายการ ก็เพียงพอแล้วที่จะระบุพหุนามเฉพาะที่ไม่มีสัมประสิทธิ์ต่างกัน",
  "n_reviews": 0,
  "start": 1049.64,
  "end": 1056.74
 },
 {
  "input": "Or if you prefer we could phrase this in the language of systems of equations.",
  "translatedText": "หรือถ้าคุณต้องการ เราก็ใช้วลีนี้เป็นภาษาของระบบสมการได้",
  "n_reviews": 0,
  "start": 1057.44,
  "end": 1060.72
 },
 {
  "input": "Imagine I tell you I have some polynomial but I don't tell you what the coefficients are, those are a mystery to you.",
  "translatedText": "ลองนึกภาพฉันบอกคุณว่าฉันมีพหุนาม แต่ฉันไม่บอกคุณว่าสัมประสิทธิ์คืออะไร นั่นเป็นปริศนาสำหรับคุณ",
  "n_reviews": 0,
  "start": 1061.2,
  "end": 1066.52
 },
 {
  "input": "In our example you might think of this as the product that we're trying to figure out.",
  "translatedText": "ในตัวอย่างของเรา คุณอาจคิดว่านี่เป็นผลคูณที่เรากำลังพยายามหา",
  "n_reviews": 0,
  "start": 1066.7,
  "end": 1070.18
 },
 {
  "input": "Then suppose I say I'll just tell you what the outputs of this polynomial would be if you inputted various different inputs like 0, 1, 2, 3, on and on, and I give you enough so that you have as many equations as you have unknowns.",
  "translatedText": "สมมติว่าฉันบอกว่าฉันจะบอกคุณว่าผลลัพธ์ของพหุนามนี้จะเป็นอย่างไรหากคุณป้อนอินพุตต่างๆ เช่น 0, 1, 2, 3 ไปเรื่อยๆ และฉันจะให้คุณเพียงพอเพื่อให้คุณมีสมการได้มากเท่ากับ คุณมีสิ่งไม่รู้",
  "n_reviews": 0,
  "start": 1070.18,
  "end": 1083.46
 },
 {
  "input": "It even happens to be a linear system of equations, so that's nice.",
  "translatedText": "มันยังเป็นระบบสมการเชิงเส้นด้วยซ้ำ เยี่ยมเลย",
  "n_reviews": 0,
  "start": 1084.14,
  "end": 1087.34
 },
 {
  "input": "And in principle at least, this should be enough to recover the coefficients.",
  "translatedText": "และโดยหลักการแล้ว อย่างน้อยที่สุด ก็ควรจะเพียงพอที่จะกู้คืนค่าสัมประสิทธิ์ได้",
  "n_reviews": 0,
  "start": 1087.78,
  "end": 1090.9
 },
 {
  "input": "So the rough algorithm outline then would be whenever you want to convolve two lists of numbers you treat them like they're coefficients of two polynomials.",
  "translatedText": "ดังนั้นโครงร่างอัลกอริธึมคร่าวๆ จะเป็นเมื่อใดก็ตามที่คุณต้องการรวมรายการตัวเลขสองรายการเข้าด้วยกัน คุณถือว่ามันเป็นสัมประสิทธิ์ของพหุนามสองตัว",
  "n_reviews": 0,
  "start": 1091.74,
  "end": 1099.0
 },
 {
  "input": "You sample those polynomials at enough outputs, multiply those samples point-wise, and then solve the system to recover the coefficients as a sneaky backdoor way to find the convolution.",
  "translatedText": "คุณสุ่มตัวอย่างพหุนามเหล่านั้นด้วยเอาต์พุตที่เพียงพอ คูณตัวอย่างเหล่านั้นตามจุด จากนั้นแก้ระบบเพื่อกู้คืนค่าสัมประสิทธิ์ ซึ่งเป็นวิธีลับๆ ในการค้นหาการบิดเบี้ยว",
  "n_reviews": 0,
  "start": 1099.42,
  "end": 1110.56
 },
 {
  "input": "And as I've stated it so far at least, some of you could rightfully complain \"Grant, that is an idiotic plan\".",
  "translatedText": "และอย่างที่ฉันได้กล่าวไปแล้ว อย่างน้อยพวกคุณบางคนอาจบ่นได้อย่างถูกต้องว่า &quot;แกรนท์ นั่นเป็นแผนที่งี่เง่า&quot;",
  "n_reviews": 0,
  "start": 1111.42,
  "end": 1117.34
 },
 {
  "input": "Because for one thing just calculating all these samples for one of the polynomials we know already takes on the order of n squared operations, not to mention solving that system is certainly going to be computationally as difficult as just doing the convolution in the first place.",
  "translatedText": "เพราะสิ่งหนึ่งที่แค่คำนวณตัวอย่างทั้งหมดนี้สำหรับพหุนามตัวใดตัวหนึ่งที่เรารู้ว่าใช้ลำดับของการดำเนินการ n กำลังสอง ไม่ต้องพูดถึงการแก้ระบบนั้นจะต้องคำนวณยากพอๆ กับการบิดเกลียวตั้งแต่แรกอย่างแน่นอน",
  "n_reviews": 0,
  "start": 1117.58,
  "end": 1132.1
 },
 {
  "input": "So, like, sure we have this connection between multiplication and convolutions, but all of the complexity happens in translating from one viewpoint to the other.",
  "translatedText": "แน่นอนว่าเรามีความเชื่อมโยงระหว่างการคูณและการโน้มน้าวใจ แต่ความซับซ้อนทั้งหมดเกิดขึ้นในการแปลจากมุมมองหนึ่งไปยังอีกมุมมองหนึ่ง",
  "n_reviews": 0,
  "start": 1132.6,
  "end": 1140.48
 },
 {
  "input": "But there is a trick, and those of you who know about Fourier transforms and the FFT algorithm might see where this is going.",
  "translatedText": "แต่มีเคล็ดลับอยู่ และบรรดาผู้ที่รู้เกี่ยวกับการแปลงฟูริเยร์และอัลกอริธึม FFT อาจเห็นว่าสิ่งนี้กำลังดำเนินไปอย่างไร",
  "n_reviews": 0,
  "start": 1141.6,
  "end": 1147.74
 },
 {
  "input": "If you're unfamiliar with these topics, what I'm about to say might seem completely out of the blue.",
  "translatedText": "หากคุณไม่คุ้นเคยกับหัวข้อเหล่านี้ สิ่งที่ฉันกำลังจะพูดอาจดูเหมือนไม่ชัดเจนเลย",
  "n_reviews": 0,
  "start": 1147.74,
  "end": 1152.18
 },
 {
  "input": "Just know that there are certain paths you could have walked in math that make this more of an expected step.",
  "translatedText": "เพิ่งรู้ว่ามีเส้นทางบางอย่างที่คุณสามารถเดินไปในทางคณิตศาสตร์ซึ่งทำให้ขั้นตอนนี้เป็นไปตามที่คาดหวังไว้",
  "n_reviews": 0,
  "start": 1152.26,
  "end": 1156.86
 },
 {
  "input": "Basically the idea is that we have a freedom of choice here.",
  "translatedText": "โดยพื้นฐานแล้วแนวคิดก็คือเรามีอิสระในการเลือกที่นี่",
  "n_reviews": 0,
  "start": 1157.72,
  "end": 1160.36
 },
 {
  "input": "If instead of evaluating at some arbitrary set of inputs like 0, 1, 2, 3, on and on, you choose to evaluate on a very specially selected set of complex numbers.",
  "translatedText": "ถ้าแทนที่จะประเมินชุดอินพุตที่กำหนดเอง เช่น 0, 1, 2, 3 ไปเรื่อยๆ คุณเลือกที่จะประเมินชุดจำนวนเชิงซ้อนที่เลือกมาเป็นพิเศษ",
  "n_reviews": 0,
  "start": 1160.54,
  "end": 1169.7
 },
 {
  "input": "Specifically the ones that sit evenly spaced on the unit circle, what are known as the roots of unity.",
  "translatedText": "โดยเฉพาะวงกลมที่มีระยะห่างเท่าๆ กันในวงกลมหนึ่งหน่วย ซึ่งเรียกว่ารากฐานของความสามัคคี",
  "n_reviews": 0,
  "start": 1170.24,
  "end": 1174.84
 },
 {
  "input": "This gives us a friendlier system.",
  "translatedText": "สิ่งนี้ทำให้เรามีระบบที่เป็นมิตรมากขึ้น",
  "n_reviews": 0,
  "start": 1175.2,
  "end": 1176.88
 },
 {
  "input": "The basic idea is that by finding a number where taking its powers falls into this cycling pattern, it means that the system we generate is going to have a lot of redundancy in the different terms that you're calculating, and by being clever about how you leverage that redundancy, you can save yourself a lot of work.",
  "translatedText": "แนวคิดพื้นฐานก็คือ การค้นหาตัวเลขที่รับพลังไปอยู่ในรูปแบบการวนรอบนี้ หมายความว่าระบบที่เราสร้างขึ้นจะมีความซ้ำซ้อนอย่างมากในแง่ต่างๆ ที่คุณคำนวณ และด้วยความฉลาดเกี่ยวกับวิธีการ คุณใช้ประโยชน์จากความซ้ำซ้อนนั้น คุณสามารถประหยัดงานได้มาก",
  "n_reviews": 0,
  "start": 1178.36,
  "end": 1194.46
 },
 {
  "input": "This set of outputs that I've written has a special name, it's called the discrete Fourier transform of the coefficients.",
  "translatedText": "ผลลัพธ์ชุดนี้ที่ผมเขียนมีชื่อพิเศษ เรียกว่าการแปลงฟูริเยร์แบบไม่ต่อเนื่องของสัมประสิทธิ์",
  "n_reviews": 0,
  "start": 1196.02,
  "end": 1202.28
 },
 {
  "input": "And if you want to learn more I actually did another lecture for that same Julia MIT class all about discrete Fourier transforms.",
  "translatedText": "และถ้าคุณต้องการเรียนรู้เพิ่มเติม ฉันได้บรรยายอีกครั้งสำหรับชั้นเรียน Julia MIT เดียวกันนั้น เกี่ยวกับการแปลงฟูริเยร์แบบแยกส่วน",
  "n_reviews": 0,
  "start": 1202.5,
  "end": 1209.14
 },
 {
  "input": "And there's also a really excellent video on the channel reducible talking about the fast Fourier transform, which is an algorithm for computing these more quickly.",
  "translatedText": "และยังมีวิดีโอที่ยอดเยี่ยมมากในช่องที่สามารถลดขนาดได้ โดยพูดถึงการแปลงฟูเรียร์ที่รวดเร็ว ซึ่งเป็นอัลกอริธึมสำหรับคำนวณสิ่งเหล่านี้ได้เร็วยิ่งขึ้น",
  "n_reviews": 0,
  "start": 1209.22,
  "end": 1217.12
 },
 {
  "input": "Also Veritasium recently did a really good video on FFT's, so you've got lots of options.",
  "translatedText": "นอกจากนี้ Veritasium ยังทำวิดีโอที่ดีเกี่ยวกับ FFT อีกด้วย ดังนั้นคุณจึงมีตัวเลือกมากมาย",
  "n_reviews": 0,
  "start": 1217.48,
  "end": 1221.76
 },
 {
  "input": "And that fast algorithm really is the point for us.",
  "translatedText": "และอัลกอริธึมที่รวดเร็วนั้นคือประเด็นสำหรับเราจริงๆ",
  "n_reviews": 0,
  "start": 1222.26,
  "end": 1224.66
 },
 {
  "input": "Again because of all this redundancy there exists a method to go from the coefficients to all of these outputs, where instead of doing on the order of n squared operations, you do on the order of n times the log of n operations, which is much much better as you scale to big lists.",
  "translatedText": "อีกครั้งเนื่องจากความซ้ำซ้อนทั้งหมดนี้ จึงมีวิธีเปลี่ยนจากสัมประสิทธิ์ไปเป็นเอาต์พุตทั้งหมด โดยที่แทนที่จะทำตามลำดับของการดำเนินการ n กำลังสอง คุณจะทำตามลำดับ n คูณบันทึกของการดำเนินการ n ซึ่งมีค่ามาก ดีขึ้นมากเมื่อคุณขยายไปสู่รายการใหญ่ๆ",
  "n_reviews": 0,
  "start": 1225.12,
  "end": 1239.2
 },
 {
  "input": "And importantly this fft algorithm goes both ways.",
  "translatedText": "และที่สำคัญ อัลกอริธึม fft นี้ใช้ได้ทั้งสองทาง",
  "n_reviews": 0,
  "start": 1239.66,
  "end": 1242.54
 },
 {
  "input": "It also lets you go from the outputs to the coefficients.",
  "translatedText": "นอกจากนี้ยังช่วยให้คุณเปลี่ยนจากเอาต์พุตเป็นค่าสัมประสิทธิ์ได้",
  "n_reviews": 0,
  "start": 1242.7,
  "end": 1245.48
 },
 {
  "input": "So bringing it all together, let's look back at our algorithm outline.",
  "translatedText": "เมื่อนำทุกอย่างมารวมกัน เราลองย้อนกลับไปที่โครงร่างอัลกอริทึมของเรากัน",
  "n_reviews": 0,
  "start": 1246.22,
  "end": 1249.06
 },
 {
  "input": "Now we can say whenever you're given two long lists of numbers and you want to take their convolution, first compute the fast Fourier transform of each one of them, which in the back of your mind you can just think of as treating them like they're the coefficients of a polynomial and evaluating it at a very specially selected set of points.",
  "translatedText": "ตอนนี้เราสามารถพูดได้ว่าเมื่อใดก็ตามที่คุณได้รับรายการตัวเลขยาวๆ สองรายการ และคุณต้องการจะแปลงตัวเลขเหล่านั้น ขั้นแรกให้คำนวณการแปลงฟูริเยร์ที่รวดเร็วของแต่ละตัว ซึ่งในใจคุณคงคิดได้ว่าปฏิบัติกับพวกมันเหมือน มันเป็นค่าสัมประสิทธิ์ของพหุนามและประเมินที่ชุดจุดที่เลือกมาเป็นพิเศษ",
  "n_reviews": 0,
  "start": 1249.42,
  "end": 1266.38
 },
 {
  "input": "Then multiply together the two results that you just got point-wise, which is nice and fast, and then do an inverse fast Fourier transform, and what that gives you is the sneaky backdoor way to compute the convolution that we were looking for.",
  "translatedText": "จากนั้นคูณผลลัพธ์ทั้งสองที่คุณเพิ่งได้มาเข้าด้วยกัน ซึ่งดีและรวดเร็ว จากนั้นทำการแปลงฟูริเยร์แบบผกผันอย่างรวดเร็ว และสิ่งที่ให้คุณได้คือวิธีลับๆ ล่อๆ ในการคำนวณการบิดงอที่เรากำลังมองหา",
  "n_reviews": 0,
  "start": 1266.9,
  "end": 1278.9
 },
 {
  "input": "But this time it only involves O of n log n operations.",
  "translatedText": "แต่คราวนี้มันเกี่ยวข้องกับการดำเนินการ O ของ n log n เท่านั้น",
  "n_reviews": 0,
  "start": 1279.04,
  "end": 1282.24
 },
 {
  "input": "That's really cool to me!",
  "translatedText": "นั่นเจ๋งจริงๆสำหรับฉัน!",
  "n_reviews": 0,
  "start": 1283.14,
  "end": 1284.74
 },
 {
  "input": "This very specific context where convolutions show up, multiplying two polynomials, opens the doors for an algorithm that's relevant everywhere else where convolutions might come up.",
  "translatedText": "บริบทที่เฉพาะเจาะจงมากนี้ ที่การโน้มน้าวใจปรากฏขึ้น คูณพหุนามสองตัว เปิดประตูสำหรับอัลกอริทึม ที่เกี่ยวข้องในทุกที่ที่อาจเกิดการโน้มน้าวใจ",
  "n_reviews": 0,
  "start": 1285.12,
  "end": 1294.1
 },
 {
  "input": "If you want to add probability distributions, do some large image processing, whatever it might be.",
  "translatedText": "หากคุณต้องการเพิ่มการแจกแจงความน่าจะเป็น ให้ประมวลผลภาพขนาดใหญ่ ไม่ว่าจะเป็นอะไรก็ตาม",
  "n_reviews": 0,
  "start": 1294.18,
  "end": 1299.0
 },
 {
  "input": "And I just think that's such a good example of why you should be excited when you see some operation or concept in math show up in a lot of seemingly unrelated areas.",
  "translatedText": "และฉันคิดว่านั่นเป็นตัวอย่างที่ดีว่าทำไมคุณถึงต้องตื่นเต้น เมื่อเห็นการดำเนินการหรือแนวคิดบางอย่างในวิชาคณิตศาสตร์ ปรากฏในหลายๆ ด้านที่ดูเหมือนจะไม่เกี่ยวข้องกัน",
  "n_reviews": 0,
  "start": 1299.22,
  "end": 1307.48
 },
 {
  "input": "If you want a little homework here's something that's fun to think about.",
  "translatedText": "หากคุณต้องการทำการบ้านเล็กๆ น้อยๆ ให้คิดทบทวนเรื่องต่างๆ เหล่านี้อย่างสนุกสนาน",
  "n_reviews": 0,
  "start": 1308.48,
  "end": 1311.5
 },
 {
  "input": "Explain why when you multiply two different numbers, just ordinary multiplication the way we all learn in elementary school, what you're doing is basically a convolution between the digits of those numbers.",
  "translatedText": "อธิบายว่าทำไมเมื่อคุณคูณตัวเลขสองตัวที่ต่างกัน แค่การคูณธรรมดาแบบที่เราเรียนกันในโรงเรียนประถม สิ่งที่คุณทำโดยพื้นฐานแล้วคือการบิดตัวเลขระหว่างตัวเลขเหล่านั้น",
  "n_reviews": 0,
  "start": 1311.72,
  "end": 1321.98
 },
 {
  "input": "There are some added steps with carries and the like, but the core step is a convolution.",
  "translatedText": "มีขั้นตอนเพิ่มเติมบางอย่างที่มีการยกและสิ่งที่คล้ายคลึงกัน แต่ขั้นตอนหลักคือการบิด",
  "n_reviews": 0,
  "start": 1322.5,
  "end": 1326.46
 },
 {
  "input": "In light of the existence of a fast algorithm, what that means is if you have two very large integers, then there exists a way to find their product that's faster than the method we learn in elementary school.",
  "translatedText": "ในแง่ของการมีอยู่ของอัลกอริธึมที่รวดเร็ว นั่นหมายความว่าถ้าคุณมีจำนวนเต็มขนาดใหญ่มากสองตัว ก็มีวิธีค้นหาผลลัพธ์ที่เร็วกว่าวิธีที่เราเรียนรู้ในโรงเรียนประถม",
  "n_reviews": 0,
  "start": 1327.28,
  "end": 1337.88
 },
 {
  "input": "That instead of requiring O of n squared operations only requires O of n log n, which doesn't even feel like it should be possible.",
  "translatedText": "แทนที่จะต้องดำเนินการ O ของ n กำลังสอง ต้องใช้ O ของ n log n เท่านั้น ซึ่งไม่รู้สึกว่าควรจะเป็นไปได้ด้วยซ้ำ",
  "n_reviews": 0,
  "start": 1338.14,
  "end": 1344.92
 },
 {
  "input": "The catch is that before this is actually useful in practice, your numbers would have to be absolutely monstrous.",
  "translatedText": "สิ่งที่จับได้ก็คือก่อนที่สิ่งนี้จะมีประโยชน์จริง ๆ ในทางปฏิบัติ ตัวเลขของคุณจะต้องน่ากลัวมากเสียก่อน",
  "n_reviews": 0,
  "start": 1345.38,
  "end": 1350.84
 },
 {
  "input": "But still, it's cool that such an algorithm exists.",
  "translatedText": "แต่ก็ยังดีที่มีอัลกอริธึมดังกล่าวอยู่",
  "n_reviews": 0,
  "start": 1351.22,
  "end": 1353.86
 },
 {
  "input": "Next up we'll turn our attention to the continuous case with a special focus on probability distributions.",
  "translatedText": "ต่อไปเราจะหันความสนใจไปที่กรณีต่อเนื่อง โดยเน้นไปที่การแจกแจงความน่าจะเป็นเป็นพิเศษ",
  "n_reviews": 0,
  "start": 1355.16,
  "end": 1359.64
 }
]