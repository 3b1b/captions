1
00:00:00,000 --> 00:00:02,853
Angenommen, ich gebe Ihnen zwei verschiedene Zahlenlisten oder vielleicht zwei

2
00:00:02,853 --> 00:00:05,778
verschiedene Funktionen und bitte Sie, über alle Möglichkeiten nachzudenken, wie

3
00:00:05,778 --> 00:00:08,775
Sie diese beiden Listen kombinieren könnten, um eine neue Zahlenliste zu erhalten,

4
00:00:08,775 --> 00:00:11,737
oder die beiden Funktionen kombinieren könnten, um eine neue Funktion zu erhalten.

5
00:00:11,737 --> 00:00:14,069
Vielleicht fällt mir eine einfache Möglichkeit ein,

6
00:00:14,069 --> 00:00:16,267
sie einfach Begriff für Begriff zusammenzuzählen.

7
00:00:16,267 --> 00:00:20,050
Ebenso können Sie bei den Funktionen alle entsprechenden Ausgänge hinzufügen.

8
00:00:20,050 --> 00:00:22,998
In ähnlicher Weise könnten Sie auch die beiden Listen Term

9
00:00:22,998 --> 00:00:26,145
für Term multiplizieren und dasselbe mit den Funktionen machen.

10
00:00:26,145 --> 00:00:29,969
Aber es gibt noch eine andere Art von Kombination, die ebenso grundlegend ist wie

11
00:00:29,969 --> 00:00:33,840
diese beiden, aber viel weniger häufig diskutiert wird und als Faltung bekannt ist.

12
00:00:33,840 --> 00:00:36,926
Aber im Gegensatz zu den beiden vorherigen Fällen ist es nicht einfach etwas,

13
00:00:36,926 --> 00:00:39,893
das von einer Operation geerbt wird, die Sie mit Zahlen durchführen können.

14
00:00:39,893 --> 00:00:42,280
Es ist etwas wirklich Neues für den Kontext von

15
00:00:42,280 --> 00:00:44,716
Zahlenlisten oder der Kombination von Funktionen.

16
00:00:44,716 --> 00:00:47,798
Sie tauchen überall auf, sie sind in der Bildverarbeitung allgegenwärtig,

17
00:00:47,798 --> 00:00:50,755
es ist ein Kernkonstrukt in der Wahrscheinlichkeitstheorie, sie werden

18
00:00:50,755 --> 00:00:53,796
häufig bei der Lösung von Differentialgleichungen verwendet und in einem

19
00:00:53,796 --> 00:00:56,920
Kontext, in dem Sie es mit ziemlicher Sicherheit gesehen haben, wenn nicht

20
00:00:56,920 --> 00:01:00,210
Unter diesem Namen versteht man die Multiplikation zweier Polynome miteinander.

21
00:01:00,210 --> 00:01:03,798
Als jemand, der sich mit visuellen Erklärungen beschäftigt, ist das ein

22
00:01:03,798 --> 00:01:07,486
besonders tolles Thema, denn die formelhafte Definition isoliert und ohne

23
00:01:07,486 --> 00:01:11,324
Kontext kann etwas einschüchternd wirken, aber wenn wir uns die Zeit nehmen,

24
00:01:11,324 --> 00:01:15,062
wirklich zu entschlüsseln, was sie sagt, und vorher tatsächlich begründen,

25
00:01:15,062 --> 00:01:18,800
warum Sie würden so etwas wollen, es ist eine unglaublich schöne Operation.

26
00:01:18,800 --> 00:01:21,157
Und ich muss zugeben, dass ich bei der Zusammenstellung der

27
00:01:21,157 --> 00:01:23,436
Visuals für dieses Projekt tatsächlich etwas gelernt habe.

28
00:01:23,436 --> 00:01:26,446
Im Fall der Faltung zweier verschiedener Funktionen habe ich versucht, mir

29
00:01:26,446 --> 00:01:29,335
verschiedene Möglichkeiten auszudenken, wie Sie sich vorstellen können,

30
00:01:29,335 --> 00:01:32,024
was das bedeuten könnte, und bei einer davon hatte ich ein kleines

31
00:01:32,024 --> 00:01:35,074
Aha-Erlebnis, weil ich wusste, warum Normalverteilungen diese Rolle spielen

32
00:01:35,074 --> 00:01:38,445
Sie tun es wahrscheinlich, weshalb es eine so natürliche Form für eine Funktion ist.

33
00:01:38,445 --> 00:01:41,580
Aber ich übertreibe es selbst, es gibt eine Menge Setup dafür.

34
00:01:41,580 --> 00:01:44,512
In diesem Video liegt unser Hauptaugenmerk nur auf dem diskreten

35
00:01:44,512 --> 00:01:47,534
Fall und insbesondere auf der Entwicklung eines sehr unerwarteten,

36
00:01:47,534 --> 00:01:50,196
aber sehr cleveren Algorithmus zur Berechnung dieser Fälle.

37
00:01:50,196 --> 00:01:57,840
Und ich werde die Diskussion für den fortlaufenden Fall in einen zweiten Teil ausdehnen.

38
00:01:57,840 --> 00:02:01,722
Es ist sehr verlockend, mit den Bildverarbeitungsbeispielen zu beginnen, da sie optisch

39
00:02:01,722 --> 00:02:04,854
am faszinierendsten sind, aber es gibt ein paar Kleinigkeiten, die den

40
00:02:04,854 --> 00:02:08,824
Bildverarbeitungsfall weniger repräsentativ für Windungen insgesamt machen, also beginnen

41
00:02:08,824 --> 00:02:12,486
wir stattdessen mit der Wahrscheinlichkeit, und insbesondere eines der einfachsten

42
00:02:12,486 --> 00:02:16,192
Beispiele, über das sicher jeder hier schon einmal in seinem Leben nachgedacht hat,

43
00:02:16,192 --> 00:02:20,030
nämlich ein paar Würfel zu würfeln und herauszufinden, wie hoch die Wahrscheinlichkeit

44
00:02:20,030 --> 00:02:21,530
ist, verschiedene Summen zu sehen.

45
00:02:21,530 --> 00:02:24,170
Und man könnte sagen: Kein Problem, kein Problem.

46
00:02:24,170 --> 00:02:28,210
Jeder Ihrer beiden Würfel hat sechs verschiedene mögliche Ergebnisse, was uns

47
00:02:28,210 --> 00:02:32,303
insgesamt 36 verschiedene mögliche Ergebnispaare ergibt, und wenn wir sie alle

48
00:02:32,303 --> 00:02:36,240
durchsehen, können wir zählen, wie viele Paare eine bestimmte Summe ergeben.

49
00:02:36,240 --> 00:02:39,243
Und wenn man alle Paare so in einem Raster anordnet, ist es

50
00:02:39,243 --> 00:02:42,296
eine schöne Sache, dass alle Paare, die eine konstante Summe

51
00:02:42,296 --> 00:02:45,650
haben, entlang einer dieser verschiedenen Diagonalen sichtbar sind.

52
00:02:45,650 --> 00:02:49,153
Wenn Sie also einfach zählen, wie viele auf jeder dieser Diagonalen vorhanden

53
00:02:49,153 --> 00:02:52,880
sind, erfahren Sie, wie wahrscheinlich es ist, dass Sie eine bestimmte Summe sehen.

54
00:02:52,880 --> 00:02:55,885
Und ich würde sagen: sehr gut, sehr gut, aber fällt Ihnen eine

55
00:02:55,885 --> 00:02:58,699
andere Möglichkeit ein, die gleiche Frage zu visualisieren?

56
00:02:58,699 --> 00:03:01,201
Andere Bilder, die Ihnen in den Sinn kommen, wenn Sie an alle

57
00:03:01,201 --> 00:03:03,744
unterschiedlichen Paare denken, die eine bestimmte Summe haben?

58
00:03:03,744 --> 00:03:07,550
Und vielleicht hebt einer von euch die Hand und sagt: „Ja, ich habe eine.

59
00:03:07,550 --> 00:03:10,819
“ Nehmen wir an, Sie stellen sich diese beiden unterschiedlichen Kombinationen

60
00:03:10,819 --> 00:03:14,046
von Möglichkeiten jeweils hintereinander vor, drehen aber die zweite Reihe um.

61
00:03:14,046 --> 00:03:16,417
Auf diese Weise richten sich alle verschiedenen Paare,

62
00:03:16,417 --> 00:03:18,960
die insgesamt sieben ergeben, vertikal auf diese Weise aus.

63
00:03:18,960 --> 00:03:22,724
Und wenn wir die untere Reihe ganz nach rechts schieben, dann ist das einzige Paar,

64
00:03:22,724 --> 00:03:26,309
das zusammen zwei ergibt, die Schlangenaugen, das einzige, das ausgerichtet ist.

65
00:03:26,309 --> 00:03:29,640
Und wenn ich das über eine Einheit nach rechts verschiebe, sind die Paare, die

66
00:03:29,640 --> 00:03:32,886
ausgerichtet werden, die zwei verschiedenen Paare, die zusammen drei ergeben.

67
00:03:32,886 --> 00:03:35,931
Und im Allgemeinen zeigen unterschiedliche Offset-Werte dieses

68
00:03:35,931 --> 00:03:38,927
unteren Arrays, bei dem ich mich zuerst umdrehen musste, alle

69
00:03:38,927 --> 00:03:41,778
unterschiedlichen Paare an, die eine bestimmte Summe haben.

70
00:03:41,778 --> 00:03:47,716
Was Wahrscheinlichkeitsfragen betrifft, ist dies immer noch nicht besonders interessant,

71
00:03:47,716 --> 00:03:53,120
da wir lediglich zählen, wie viele Ergebnisse es in jeder dieser Kategorien gibt.

72
00:03:53,120 --> 00:03:55,360
Aber das geschieht unter der impliziten Annahme, dass

73
00:03:55,360 --> 00:03:57,850
jedes dieser Gesichter die gleiche Chance hat, aufzutauchen.

74
00:03:57,850 --> 00:03:59,781
Aber was wäre, wenn ich Ihnen sagen würde, dass ich

75
00:03:59,781 --> 00:04:01,897
ein spezielles Würfelset habe, das nicht einheitlich ist?

76
00:04:01,897 --> 00:04:04,417
Vielleicht hat der blaue Würfel einen eigenen Zahlensatz, der

77
00:04:04,417 --> 00:04:07,180
die Wahrscheinlichkeiten für jedes auftauchende Gesicht beschreibt,

78
00:04:07,180 --> 00:04:09,740
und der rote Würfel hat seinen eigenen, eindeutigen Zahlensatz.

79
00:04:09,740 --> 00:04:13,085
Wenn Sie in diesem Fall beispielsweise die Wahrscheinlichkeit, eine Zwei zu sehen,

80
00:04:13,085 --> 00:04:16,550
ermitteln möchten, würden Sie die Wahrscheinlichkeit, dass der blaue Würfel eine Eins

81
00:04:16,550 --> 00:04:19,895
ist, mit der Wahrscheinlichkeit multiplizieren, dass der rote Würfel eine Eins ist.

82
00:04:19,895 --> 00:04:23,164
Und um die Wahrscheinlichkeit zu ermitteln, eine Drei zu sehen, schauen Sie sich

83
00:04:23,164 --> 00:04:26,593
die beiden unterschiedlichen Paare an, wo das möglich ist, multiplizieren Sie erneut

84
00:04:26,593 --> 00:04:29,983
die entsprechenden Wahrscheinlichkeiten und addieren Sie dann diese beiden Produkte.

85
00:04:29,983 --> 00:04:33,603
Ebenso besteht die Wahrscheinlichkeit, eine Vier zu sehen, darin, drei verschiedene

86
00:04:33,603 --> 00:04:36,748
Paarmöglichkeiten miteinander zu multiplizieren und sie alle zu addieren.

87
00:04:36,748 --> 00:04:40,861
Und um einige Formeln aufzustellen, benennen wir diese oberen

88
00:04:40,861 --> 00:04:45,903
Wahrscheinlichkeiten mit a1, a2, a3 usw. und die unteren mit b1, b2, b3 usw.

89
00:04:45,903 --> 00:04:49,665
Und im Allgemeinen ist dieser Prozess, bei dem wir zwei verschiedene Arrays von

90
00:04:49,665 --> 00:04:53,427
Zahlen nehmen, das zweite umdrehen und sie dann mit verschiedenen Offset-Werten

91
00:04:53,427 --> 00:04:57,283
aneinanderreihen, eine Reihe paarweiser Produkte nehmen und sie addieren, das ist

92
00:04:57,283 --> 00:05:01,139
einer der. grundlegende Möglichkeiten, darüber nachzudenken, was eine Faltung ist.

93
00:05:01,139 --> 00:05:05,221
Um es etwas genauer zu formulieren: Durch diesen Prozess haben wir einfach

94
00:05:05,221 --> 00:05:09,248
Wahrscheinlichkeiten für das Erkennen von zwei, drei, vier, so weiter und

95
00:05:09,248 --> 00:05:13,220
so weiter bis hin zu 12 generiert, und wir haben sie erhalten, indem wir

96
00:05:13,220 --> 00:05:17,084
eine Liste von Werten, a, und eine andere gemischt haben Werteliste, b.

97
00:05:17,084 --> 00:05:20,429
Im Fachjargon würden wir sagen, dass die Faltung dieser beiden

98
00:05:20,429 --> 00:05:23,934
Folgen uns diese neue Folge ergibt, die neue Folge von 11 Werten,

99
00:05:23,934 --> 00:05:27,120
von denen jeder wie eine Summe paarweiser Produkte aussieht.

100
00:05:27,120 --> 00:05:30,212
Wenn Sie möchten, können Sie sich die gleiche Operation auch

101
00:05:30,212 --> 00:05:33,305
anders vorstellen: Erstellen Sie zunächst eine Tabelle aller

102
00:05:33,305 --> 00:05:36,702
paarweisen Produkte und addieren Sie dann entlang aller Diagonalen.

103
00:05:36,702 --> 00:05:39,403
Auch das ist eine Möglichkeit, diese beiden Zahlenfolgen

104
00:05:39,403 --> 00:05:42,247
zu vermischen, um eine neue Folge von 11 Zahlen zu erhalten.

105
00:05:42,247 --> 00:05:46,960
Es ist der gleiche Vorgang wie bei den Schiebefenstern, nur eine andere Perspektive.

106
00:05:46,960 --> 00:05:48,603
Wenn Sie es mit einer kleinen Notation versehen,

107
00:05:48,603 --> 00:05:50,314
sehen Sie, wie Sie es aufgeschrieben sehen könnten.

108
00:05:50,314 --> 00:05:54,887
Die Faltung von a und b, gekennzeichnet mit diesem kleinen Sternchen, ist eine neue

109
00:05:54,887 --> 00:05:59,676
Liste, und das n-te Element dieser Liste sieht aus wie eine Summe, und diese Summe geht

110
00:05:59,676 --> 00:06:04,249
über alle verschiedenen Indexpaare i und j, sodass die Summe von diese Indizes sind

111
00:06:04,249 --> 00:06:04,738
gleich n.

112
00:06:04,738 --> 00:06:08,743
Es ist eine Art Übertreibung, aber wenn n zum Beispiel 6 wäre, sind

113
00:06:08,743 --> 00:06:12,689
die Paare, die wir durchgehen, 1 und 5, 2 und 4, 3 und 3, 4 und 2,

114
00:06:12,689 --> 00:06:16,400
5 und 1, all die verschiedenen Paare, die sich summieren bis 6.

115
00:06:16,400 --> 00:06:19,692
Aber ehrlich gesagt, egal wie Sie es aufschreiben, die Notation ist

116
00:06:19,692 --> 00:06:23,082
zweitrangig gegenüber dem Bild, das Sie für den Prozess im Kopf haben.

117
00:06:23,082 --> 00:06:27,024
Hier hilft es vielleicht, ein supereinfaches Beispiel zu machen, in dem ich Sie

118
00:06:27,024 --> 00:06:30,967
fragen könnte, wie die Faltung der Liste 1, 2, 3 mit der Liste 4, 5, 6 aussieht.

119
00:06:30,967 --> 00:06:34,439
Sie könnten sich vorstellen, beide Listen zu nehmen, die zweite

120
00:06:34,439 --> 00:06:37,857
umzudrehen und dann mit dem Deckel ganz nach links zu beginnen.

121
00:06:37,857 --> 00:06:40,835
Dann sind die beiden Werte, die übereinstimmen, 1 und 4, multiplizieren

122
00:06:40,835 --> 00:06:43,813
Sie sie miteinander, und das ergibt unseren ersten Term unserer Ausgabe.

123
00:06:43,813 --> 00:06:47,172
Schieben Sie das untere Array um eine Einheit nach rechts. Die Paare, die

124
00:06:47,172 --> 00:06:50,532
ausgerichtet werden, sind 1 und 5 sowie 2 und 4. Multiplizieren Sie diese

125
00:06:50,532 --> 00:06:54,300
Paare, addieren Sie sie und das ergibt 13, den nächsten Eintrag in unserer Ausgabe.

126
00:06:54,300 --> 00:06:57,881
Schieben Sie die Dinge noch einmal um, und wir nehmen 1

127
00:06:57,881 --> 00:07:01,591
mal 6, plus 2 mal 5, plus 3 mal 4, was zufällig 28 ergibt.

128
00:07:01,591 --> 00:07:06,040
Noch eine Folie, und wir erhalten 2 mal 6 plus 3 mal 5, und das

129
00:07:06,040 --> 00:07:10,560
ergibt 27, und schließlich sieht der letzte Term wie 3 mal 6 aus.

130
00:07:10,560 --> 00:07:13,295
Wenn Sie möchten, können Sie Ihre bevorzugte Programmiersprache und

131
00:07:13,295 --> 00:07:15,830
Ihre Lieblingsbibliothek aufrufen, die verschiedene numerische

132
00:07:15,830 --> 00:07:18,807
Operationen enthält, und Sie können bestätigen, dass ich Sie nicht anlüge.

133
00:07:18,807 --> 00:07:21,633
Wenn Sie die Faltung von 1, 2, 3 gegen 4, 5, 6

134
00:07:21,633 --> 00:07:24,880
durchführen, erhalten Sie tatsächlich dieses Ergebnis.

135
00:07:24,880 --> 00:07:27,311
Wir haben einen Fall gesehen, in dem dies eine natürliche und

136
00:07:27,311 --> 00:07:29,861
wünschenswerte Operation ist und Wahrscheinlichkeitsverteilungen

137
00:07:29,861 --> 00:07:32,881
addiert, und ein weiteres häufiges Beispiel wäre ein gleitender Durchschnitt.

138
00:07:32,881 --> 00:07:35,942
Stellen Sie sich vor, Sie haben eine lange Liste mit Zahlen und nehmen

139
00:07:35,942 --> 00:07:38,788
eine weitere kleinere Liste mit Zahlen, deren Summe alle 1 ergibt.

140
00:07:38,788 --> 00:07:41,108
In diesem Fall habe ich nur eine kleine Liste mit

141
00:07:41,108 --> 00:07:43,381
5 Werten, und sie entsprechen alle einem Fünftel.

142
00:07:43,381 --> 00:07:47,139
Wenn wir dann diesen Gleitfenster-Faltungsprozess durchführen und sozusagen die

143
00:07:47,139 --> 00:07:50,991
Augen schließen und unter den Teppich kehren, was ganz am Anfang passiert, denken

144
00:07:50,991 --> 00:07:54,983
wir darüber nach, was die einzelnen Begriffe darin sind, sobald sich unsere kleinere

145
00:07:54,983 --> 00:07:59,023
Liste von Werten vollständig mit der größeren überschneidet Faltung bedeutet wirklich.

146
00:07:59,023 --> 00:08:04,964
Bei jeder Iteration multiplizieren Sie jeden Wert Ihrer Daten mit 1/5 und addieren sie

147
00:08:04,964 --> 00:08:10,769
alle. Das heißt, Sie bilden einen Durchschnitt Ihrer Daten in diesem kleinen Fenster.

148
00:08:10,769 --> 00:08:13,645
Insgesamt erhalten Sie durch den Prozess eine geglättete Version der

149
00:08:13,645 --> 00:08:16,646
Originaldaten, und Sie können diese ändern, indem Sie mit einer anderen

150
00:08:16,646 --> 00:08:19,522
kleinen Liste von Zahlen beginnen. Solange diese kleine Liste alle 1

151
00:08:19,522 --> 00:08:22,816
ergibt, können Sie sie immer noch als Verschiebung interpretieren Durchschnitt.

152
00:08:22,816 --> 00:08:25,275
In dem hier gezeigten Beispiel würde dieser gleitende

153
00:08:25,275 --> 00:08:27,781
Durchschnitt dem zentralen Wert mehr Gewicht verleihen.

154
00:08:27,781 --> 00:08:33,200
Dies führt auch zu einer geglätteten Version der Daten.

155
00:08:33,200 --> 00:08:35,805
Wenn Sie eine Art zweidimensionales Analogon davon erstellen, erhalten

156
00:08:35,805 --> 00:08:38,594
Sie einen unterhaltsamen Algorithmus zum Verwischen eines bestimmten Bildes.

157
00:08:38,594 --> 00:08:41,409
Und ich sollte sagen, dass die Animationen, die ich zeigen werde, eine

158
00:08:41,409 --> 00:08:44,463
Modifikation von etwas sind, das ich ursprünglich für einen Teil einer Reihe

159
00:08:44,463 --> 00:08:47,318
von Vorlesungen gemacht habe, die ich mit dem Julia Lab am MIT für eine

160
00:08:47,318 --> 00:08:50,887
bestimmte OpenCourseWare-Klasse gehalten habe, die eine Bildverarbeitungseinheit enthielt.

161
00:08:50,887 --> 00:08:53,750
Dort haben wir uns noch ein wenig mit dem Code hinter all dem befasst.

162
00:08:53,750 --> 00:08:56,452
Wenn Sie also neugierig sind, hinterlasse ich Ihnen ein paar Links.

163
00:08:56,452 --> 00:09:00,571
Wenn ich mich aber noch einmal diesem unscharfen Beispiel zuwende, sehe ich, dass ich

164
00:09:00,571 --> 00:09:04,882
ein kleines 3x3-Werteraster habe, das sich entlang unseres Originalbilds bewegt, und wenn

165
00:09:04,882 --> 00:09:08,762
wir hineinzoomen, ist jeder dieser Werte 19tel, und das, was ich mache Bei jeder

166
00:09:08,762 --> 00:09:13,025
Iteration wird jeder dieser Werte mit dem entsprechenden Pixel multipliziert, auf dem er

167
00:09:13,025 --> 00:09:13,312
liegt.

168
00:09:13,312 --> 00:09:16,809
Und natürlich stellen wir uns in der Informatik Farben als kleine Vektoren

169
00:09:16,809 --> 00:09:20,400
mit drei Werten vor, die die roten, grünen und blauen Komponenten darstellen.

170
00:09:20,400 --> 00:09:23,992
Wenn ich all diese kleinen Werte mit 1/9 multipliziere und addiere,

171
00:09:23,992 --> 00:09:27,215
erhalten wir einen Durchschnitt für jeden Farbkanal, und das

172
00:09:27,215 --> 00:09:30,966
entsprechende Pixel für das Bild rechts wird als diese Summe definiert.

173
00:09:30,966 --> 00:09:34,589
Der Gesamteffekt, wenn wir dies für jedes einzelne Pixel im Bild tun,

174
00:09:34,589 --> 00:09:37,901
besteht darin, dass jedes einzelne Pixel in alle seine Nachbarn

175
00:09:37,901 --> 00:09:41,680
übergeht, wodurch wir eine unschärfere Version als das Original erhalten.

176
00:09:41,680 --> 00:09:44,566
Im Fachjargon würden wir sagen, dass das Bild rechts eine

177
00:09:44,566 --> 00:09:47,800
Faltung unseres Originalbildes mit einem kleinen Werteraster ist.

178
00:09:47,800 --> 00:09:50,992
Oder technischer ausgedrückt sollte ich vielleicht sagen, dass es sich um die

179
00:09:50,992 --> 00:09:54,430
Faltung mit einer um 180 Grad gedrehten Version dieses kleinen Werterasters handelt.

180
00:09:54,430 --> 00:09:58,148
Es spielt keine Rolle, ob das Gitter symmetrisch ist, aber man sollte bedenken, dass

181
00:09:58,148 --> 00:10:01,866
die Definition einer Faltung, wie sie aus dem rein mathematischen Kontext übernommen

182
00:10:01,866 --> 00:10:05,760
wurde, Sie immer dazu einladen sollte, darüber nachzudenken, das zweite Array umzudrehen.

183
00:10:05,760 --> 00:10:08,448
Wenn wir dies leicht modifizieren, können wir einen viel eleganteren

184
00:10:08,448 --> 00:10:11,059
Unschärfeeffekt erzielen, indem wir ein anderes Werteraster wählen.

185
00:10:11,059 --> 00:10:13,585
In diesem Fall habe ich ein kleines 5x5-Raster, aber

186
00:10:13,585 --> 00:10:15,920
der Unterschied liegt nicht so sehr in der Größe.

187
00:10:15,920 --> 00:10:19,268
Wenn wir hineinzoomen, bemerken wir, dass der Wert in der Mitte viel größer

188
00:10:19,268 --> 00:10:22,617
ist als der Wert an den Rändern, und der Grund dafür ist, dass sie alle aus

189
00:10:22,617 --> 00:10:26,010
einer Glockenkurve, einer sogenannten Gaußschen Verteilung, entnommen werden.

190
00:10:26,010 --> 00:10:29,316
Wenn wir also alle diese Werte mit dem entsprechenden Pixel

191
00:10:29,316 --> 00:10:32,621
multiplizieren, auf dem sie liegen, geben wir dem zentralen

192
00:10:32,621 --> 00:10:36,367
Pixel viel mehr Gewicht und den Pixeln am Rand viel weniger Gewicht.

193
00:10:36,367 --> 00:10:38,391
Und genau wie zuvor wird das entsprechende Pixel

194
00:10:38,391 --> 00:10:40,373
auf der rechten Seite als diese Summe definiert.

195
00:10:40,373 --> 00:10:45,066
Da wir diesen Vorgang für jedes einzelne Pixel durchführen, entsteht ein Unschärfeeffekt,

196
00:10:45,066 --> 00:10:49,760
der den Eindruck, das Objektiv sei unscharf oder so ähnlich, viel authentischer simuliert.

197
00:10:49,760 --> 00:10:53,474
Aber Unschärfe ist bei weitem nicht das Einzige, was man mit dieser Idee machen kann.

198
00:10:53,474 --> 00:10:58,300
Schauen Sie sich zum Beispiel dieses kleine Werteraster an, das links einige positive

199
00:10:58,300 --> 00:11:03,071
und rechts einige negative Zahlen enthält, die ich jeweils mit Blau und Rot einfärbe.

200
00:11:03,071 --> 00:11:06,263
Nehmen Sie sich einen Moment Zeit, um zu sehen, ob Sie vorhersagen und

201
00:11:06,263 --> 00:11:09,769
verstehen können, welche Auswirkungen dies auf das endgültige Bild haben wird.

202
00:11:09,769 --> 00:11:14,128
In diesem Fall stelle ich mir das Bild also nur als Graustufenbild statt als Farbbild

203
00:11:14,128 --> 00:11:18,082
vor, sodass jedes Pixel nur durch eine Zahl statt durch drei dargestellt wird.

204
00:11:18,082 --> 00:11:20,943
Und es ist erwähnenswert, dass es bei dieser Faltung

205
00:11:20,943 --> 00:11:23,102
möglich ist, negative Werte zu erhalten.

206
00:11:23,102 --> 00:11:26,315
Wenn wir an dieser Stelle beispielsweise hineinzoomen, liegt die linke

207
00:11:26,315 --> 00:11:29,437
Hälfte unseres kleinen Rasters vollständig auf schwarzen Pixeln, was

208
00:11:29,437 --> 00:11:32,651
einen Wert von Null hätte, aber die rechte Hälfte mit negativen Werten

209
00:11:32,651 --> 00:11:36,000
liegt alle auf weißen Pixeln, was der Fall wäre einen Wert von eins haben.

210
00:11:36,000 --> 00:11:39,163
Wenn wir also entsprechende Terme multiplizieren und addieren, werden die

211
00:11:39,163 --> 00:11:42,540
Ergebnisse sehr negativ sein, und die Art und Weise, wie ich dies mit dem Bild

212
00:11:42,540 --> 00:11:46,046
rechts zeige, besteht darin, negative Werte rot und positive Werte blau zu färben.

213
00:11:46,046 --> 00:11:50,420
Beachten Sie außerdem, dass bei einem Feld mit der gleichen Farbe alles

214
00:11:50,420 --> 00:11:54,854
auf Null geht, da die Summe der Werte in unserem kleinen Raster Null ist.

215
00:11:54,854 --> 00:11:57,529
Dies unterscheidet sich stark von den beiden vorherigen Beispielen, bei

216
00:11:57,529 --> 00:12:00,278
denen die Summe unseres kleinen Gitters eins war, was es uns ermöglichte,

217
00:12:00,278 --> 00:12:02,990
es als gleitenden Durchschnitt und damit als Unschärfe zu interpretieren.

218
00:12:02,990 --> 00:12:07,613
Alles in allem erkennt dieser kleine Prozess grundsätzlich alle Abweichungen

219
00:12:07,613 --> 00:12:12,176
im Pixelwert, wenn Sie sich von links nach rechts bewegen, und bietet Ihnen

220
00:12:12,176 --> 00:12:16,560
so eine Art Möglichkeit, alle vertikalen Kanten Ihres Bildes zu erfassen.

221
00:12:16,560 --> 00:12:20,691
Und wenn wir das Gitter so drehen, dass es sich von oben nach unten

222
00:12:20,691 --> 00:12:25,065
verändert, werden alle horizontalen Kanten erfasst, was im Fall unseres

223
00:12:25,065 --> 00:12:29,986
Bildes unserer kleinen Tortenkreatur zu einigen ziemlich dämonischen Augen führt.

224
00:12:29,986 --> 00:12:32,600
Dieses kleinere Raster wird übrigens oft als Kernel bezeichnet, und

225
00:12:32,600 --> 00:12:35,329
das Schöne daran ist, dass Sie durch die Auswahl eines anderen Kernels

226
00:12:35,329 --> 00:12:37,981
verschiedene Bildverarbeitungseffekte erzielen können, nicht nur die

227
00:12:37,981 --> 00:12:40,710
Unschärfe bei der Kantenerkennung, sondern auch Dinge wie das Schärfen.

228
00:12:40,710 --> 00:12:44,463
Für diejenigen unter Ihnen, die von einem Faltungs-Neuronalen Netzwerk gehört haben:

229
00:12:44,463 --> 00:12:48,129
Die Idee besteht darin, mithilfe von Daten herauszufinden, welche Kernel überhaupt

230
00:12:48,129 --> 00:12:51,618
vorhanden sein sollten, je nachdem, was das Neuronale Netzwerk erkennen möchte.

231
00:12:51,618 --> 00:12:55,378
Eine andere Sache, die ich vielleicht ansprechen sollte, ist die Länge der Ausgabe.

232
00:12:55,378 --> 00:12:58,674
Bei so etwas wie dem Beispiel des gleitenden Durchschnitts möchten Sie vielleicht

233
00:12:58,674 --> 00:13:01,971
erst dann über die Begriffe nachdenken, wenn beide Fenster vollständig aneinander

234
00:13:01,971 --> 00:13:05,066
ausgerichtet sind, oder im Bildverarbeitungsbeispiel möchten Sie vielleicht,

235
00:13:05,066 --> 00:13:07,760
dass die endgültige Ausgabe die gleiche Größe wie das Original hat.

236
00:13:07,760 --> 00:13:10,531
Nun erzeugen Faltungen als reine mathematische Operation immer ein

237
00:13:10,531 --> 00:13:13,344
Array, das größer ist als die beiden Arrays, mit denen Sie begonnen

238
00:13:13,344 --> 00:13:16,405
haben, zumindest vorausgesetzt, dass eines davon nicht die Länge eins hat.

239
00:13:16,405 --> 00:13:19,203
Beachten Sie jedoch, dass Sie in bestimmten Informatikkontexten

240
00:13:19,203 --> 00:13:21,520
diese Ausgabe häufig absichtlich abschneiden möchten.

241
00:13:21,520 --> 00:13:25,752
Hervorzuheben ist auch, dass sich im Informatikkontext die Vorstellung, den Kernel

242
00:13:25,752 --> 00:13:29,985
umzudrehen, bevor man ihn über das Original laufen lässt, oft wirklich seltsam und

243
00:13:29,985 --> 00:13:34,013
einfach unangebracht anfühlt. Beachten Sie jedoch auch hier, dass dies aus dem

244
00:13:34,013 --> 00:13:38,348
reinen Mathematikkontext übernommen wurde, in dem wir uns befanden Ich habe gesehen,

245
00:13:38,348 --> 00:13:42,530
dass es angesichts der Wahrscheinlichkeiten eine unglaublich natürliche Sache ist.

246
00:13:42,530 --> 00:13:45,879
Und tatsächlich kann ich Ihnen ein weiteres rein mathematisches Beispiel zeigen,

247
00:13:45,879 --> 00:13:49,104
bei dem sich sogar die Programmierer darum kümmern sollten, weil es die Türen

248
00:13:49,104 --> 00:13:52,370
für einen viel schnelleren Algorithmus zur Berechnung all dieser Punkte öffnet.

249
00:13:52,370 --> 00:13:54,773
Um hier einzurichten, was ich unter „schneller“ verstehe, gehe

250
00:13:54,773 --> 00:13:57,138
ich noch einmal zurück und rufe noch einmal etwas Python auf,

251
00:13:57,138 --> 00:13:59,579
und ich werde zwei verschiedene, relativ große Arrays erstellen.

252
00:13:59,579 --> 00:14:03,548
Jedes wird hunderttausend zufällige Elemente enthalten und ich werde

253
00:14:03,548 --> 00:14:07,575
die Laufzeit der Faltungsfunktion aus der Numpy-Bibliothek beurteilen.

254
00:14:07,575 --> 00:14:10,111
Und in diesem Fall wird es für mehrere verschiedene Iterationen

255
00:14:10,111 --> 00:14:12,766
ausgeführt, versucht, einen Durchschnitt zu finden, und auf diesem

256
00:14:12,766 --> 00:14:15,619
Computer sieht es so aus, als ob der Durchschnitt zumindest bei 4 liegt.

257
00:14:15,619 --> 00:14:16,321
87 Sekunden.

258
00:14:16,321 --> 00:14:20,778
Wenn ich dagegen eine andere Funktion aus der Scipy-Bibliothek namens

259
00:14:20,778 --> 00:14:26,061
fftconvolve verwende, die dasselbe ist, nur anders implementiert, dauert das nur 4.

260
00:14:26,061 --> 00:14:30,640
Durchschnittlich 3 Millisekunden, also eine Verbesserung um drei Größenordnungen.

261
00:14:30,640 --> 00:14:33,346
Und auch wenn sie unter einem anderen Namen läuft, liefert sie die

262
00:14:33,346 --> 00:14:35,931
gleiche Ausgabe wie die andere Faltungsfunktion, sie unternimmt

263
00:14:35,931 --> 00:14:38,880
lediglich etwas, um die Sache auf eine cleverere Art und Weise anzugehen.

264
00:14:38,880 --> 00:14:42,585
Denken Sie daran, dass ich im Zusammenhang mit dem Wahrscheinlichkeitsbeispiel

265
00:14:42,585 --> 00:14:46,055
gesagt habe, dass eine andere Möglichkeit, über die Faltung nachzudenken,

266
00:14:46,055 --> 00:14:49,432
darin besteht, diese Tabelle aller paarweisen Produkte zu erstellen und

267
00:14:49,432 --> 00:14:52,528
diese paarweisen Produkte dann entlang der Diagonalen zu addieren.

268
00:14:52,528 --> 00:14:55,815
Es gibt natürlich nichts Spezifisches für die Wahrscheinlichkeit. Wenn Sie

269
00:14:55,815 --> 00:14:59,321
zwei verschiedene Zahlenlisten falten, können Sie es auf diese Weise betrachten.

270
00:14:59,321 --> 00:15:02,893
Erstellen Sie eine solche Multiplikationstabelle mit allen paarweisen Produkten und

271
00:15:02,893 --> 00:15:06,381
dann entspricht jede Summe entlang der Diagonale einer Ihrer endgültigen Ausgaben.

272
00:15:06,381 --> 00:15:09,715
Ein Kontext, in dem diese Ansicht besonders natürlich

273
00:15:09,715 --> 00:15:12,431
ist, ist die Multiplikation zweier Polynome.

274
00:15:12,431 --> 00:15:16,126
Lassen Sie mich zum Beispiel das kleine Raster, das wir bereits

275
00:15:16,126 --> 00:15:19,878
haben, nehmen und die oberen Terme durch 1, 2x und 3x im Quadrat

276
00:15:19,878 --> 00:15:23,920
ersetzen und die anderen Terme durch 4, 5x und 6x im Quadrat ersetzen.

277
00:15:23,920 --> 00:15:26,518
Überlegen Sie nun, was es bedeutet, wenn wir all diese verschiedenen

278
00:15:26,518 --> 00:15:28,664
paarweisen Produkte zwischen den beiden Listen erstellen.

279
00:15:28,664 --> 00:15:32,309
Was Sie tun, besteht im Wesentlichen darin, das vollständige Produkt der

280
00:15:32,309 --> 00:15:36,003
beiden Polynome, die ich aufgeschrieben habe, zu entwickeln, und wenn Sie

281
00:15:36,003 --> 00:15:39,498
dann entlang der Diagonale addieren, entspricht das dem Sammeln aller

282
00:15:39,498 --> 00:15:43,192
gleichen Terme, was ziemlich ordentlich ist. Ein Polynom zu erweitern und

283
00:15:43,192 --> 00:15:46,937
ähnliche Terme zu sammeln, ist genau das Gleicher Vorgang wie eine Faltung.

284
00:15:46,937 --> 00:15:49,680
Aber das ermöglicht uns, etwas ziemlich Cooles zu

285
00:15:49,680 --> 00:15:52,642
tun, denn denken Sie darüber nach, was wir hier sagen.

286
00:15:52,642 --> 00:15:55,909
Wir sagen, wenn Sie zwei verschiedene Funktionen nehmen und sie miteinander

287
00:15:55,909 --> 00:15:59,262
multiplizieren, was eine einfache punktweise Operation ist, ist das dasselbe,

288
00:15:59,262 --> 00:16:02,442
als ob Sie zuerst die Koeffizienten aus jeder einzelnen dieser Funktionen

289
00:16:02,442 --> 00:16:05,752
extrahiert hätten, vorausgesetzt, es handelt sich um Polynome, und dann eine

290
00:16:05,752 --> 00:16:08,761
Faltung dieser Funktionen vorgenommen hätten zwei Koeffizientenlisten.

291
00:16:08,761 --> 00:16:12,082
Was das so interessant macht, ist, dass sich Faltungen im Prinzip viel

292
00:16:12,082 --> 00:16:15,544
komplizierter anfühlen als einfache Multiplikationen, und ich meine nicht

293
00:16:15,544 --> 00:16:18,912
nur, dass sie konzeptionell schwieriger zu bedenken sind, sondern auch,

294
00:16:18,912 --> 00:16:22,702
dass rechnerisch mehr Schritte erforderlich sind, um eine Faltung durchzuführen,

295
00:16:22,702 --> 00:16:26,070
als für die Durchführung einer Punktprodukt zweier verschiedener Listen.

296
00:16:26,070 --> 00:16:30,094
Nehmen wir zum Beispiel an, ich habe Ihnen zwei wirklich große Polynome gegeben,

297
00:16:30,094 --> 00:16:33,869
sagen wir, jedes mit hundert verschiedenen Koeffizienten. Wenn Sie sie dann

298
00:16:33,869 --> 00:16:37,843
multiplizieren würden, um dieses Produkt zu erweitern, wissen Sie, dass Sie das

299
00:16:37,843 --> 00:16:41,867
gesamte 100 x 100-Raster paarweiser Produkte ausfüllen müssten Führen Sie 10.000

300
00:16:41,867 --> 00:16:45,791
verschiedene Produkte durch, und wenn Sie dann alle ähnlichen Begriffe entlang

301
00:16:45,791 --> 00:16:49,666
der Diagonalen sammeln, ist das ein weiterer Satz von etwa 10.000 Operationen.

302
00:16:49,666 --> 00:16:53,269
Allgemeiner ausgedrückt würden wir sagen, dass der Algorithmus O von n im

303
00:16:53,269 --> 00:16:57,115
Quadrat ist, was bedeutet, dass für zwei Listen der Größe n die Art und Weise,

304
00:16:57,115 --> 00:17:00,816
wie die Anzahl der Operationen proportional zum Quadrat von n skaliert, ist.

305
00:17:00,816 --> 00:17:04,849
Wenn ich mir andererseits zwei Polynome im Hinblick auf ihre Ausgaben vorstelle, zum

306
00:17:04,849 --> 00:17:08,788
Beispiel die Abtastung ihrer Werte an einer Handvoll Eingaben, dann erfordert ihre

307
00:17:08,788 --> 00:17:12,727
Multiplikation nur so viele Operationen wie die Anzahl der Stichproben, da es sich

308
00:17:12,727 --> 00:17:16,855
wiederum um eine punktweise Operation handelt und man bei Polynomen nur die benötigten

309
00:17:16,855 --> 00:17:21,126
Werte benötigt endlich viele Stichproben, um die Koeffizienten wiederherstellen zu können.

310
00:17:21,126 --> 00:17:24,446
Zum Beispiel reichen zwei Ausgaben aus, um ein lineares Polynom eindeutig zu

311
00:17:24,446 --> 00:17:28,198
spezifizieren. Drei Ausgaben würden ausreichen, um ein quadratisches Polynom eindeutig

312
00:17:28,198 --> 00:17:31,519
zu spezifizieren. Wenn Sie n unterschiedliche Ausgaben kennen, reicht das im

313
00:17:31,519 --> 00:17:34,925
Allgemeinen aus, um ein Polynom mit n verschiedenen Koeffizienten eindeutig zu

314
00:17:34,925 --> 00:17:38,591
spezifizieren, oder wenn Sie es vorziehen, könnten wir das auch Formulieren Sie dies

315
00:17:38,591 --> 00:17:42,084
in der Sprache von Gleichungssystemen. Stellen Sie sich vor, ich sage Ihnen, ich

316
00:17:42,084 --> 00:17:45,706
habe ein Polynom, aber ich sage Ihnen nicht, welche Koeffizienten das sind, das ist

317
00:17:45,706 --> 00:17:46,439
Ihnen ein Rätsel.

318
00:17:46,439 --> 00:17:50,164
In unserem Beispiel könnten Sie sich das als das Produkt vorstellen, das wir

319
00:17:50,164 --> 00:17:54,227
herauszufinden versuchen, und dann sagen wir Ihnen einfach, was die Ausgaben dieses

320
00:17:54,227 --> 00:17:58,242
Polynoms wären, wenn Sie verschiedene Eingaben wie 0, 1, 2 eingeben würden , 3, so

321
00:17:58,242 --> 00:18:02,257
weiter und so weiter, und ich gebe Ihnen genug, damit Sie so viele Gleichungen wie

322
00:18:02,257 --> 00:18:06,224
Unbekannte haben, es handelt sich sogar um ein lineares Gleichungssystem, das ist

323
00:18:06,224 --> 00:18:10,142
also schön und im Prinzip sollte dies zumindest ausreichen, um die Koeffizienten

324
00:18:10,142 --> 00:18:11,061
wiederherzustellen.

