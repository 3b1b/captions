1
00:00:00,000 --> 00:00:02,853
Angenommen, ich gebe Ihnen zwei verschiedene Zahlenlisten oder vielleicht zwei

2
00:00:02,853 --> 00:00:05,633
verschiedene Funktionen und bitte Sie, über alle Möglichkeiten nachzudenken,

3
00:00:05,633 --> 00:00:08,775
wie Sie diese beiden Listen kombinieren könnten, um eine neue Zahlenliste zu erhalten,

4
00:00:08,775 --> 00:00:11,737
oder die beiden Funktionen kombinieren könnten, um eine neue Funktion zu erhalten.

5
00:00:11,737 --> 00:00:14,069
Vielleicht fällt mir eine einfache Möglichkeit ein,

6
00:00:14,069 --> 00:00:16,267
sie einfach Begriff für Begriff zusammenzuzählen.

7
00:00:16,267 --> 00:00:20,050
Ebenso können Sie bei den Funktionen alle entsprechenden Ausgänge hinzufügen.

8
00:00:20,050 --> 00:00:22,998
In ähnlicher Weise könnten Sie auch die beiden Listen Term

9
00:00:22,998 --> 00:00:26,145
für Term multiplizieren und dasselbe mit den Funktionen machen.

10
00:00:26,145 --> 00:00:28,523
Aber es gibt noch eine andere Art von Kombination,

11
00:00:28,523 --> 00:00:32,301
die ebenso grundlegend ist wie diese beiden, aber viel weniger häufig diskutiert

12
00:00:32,301 --> 00:00:33,840
wird und als Faltung bekannt ist.

13
00:00:33,840 --> 00:00:36,926
Aber im Gegensatz zu den beiden vorherigen Fällen ist es nicht einfach etwas,

14
00:00:36,926 --> 00:00:39,893
das von einer Operation geerbt wird, die Sie mit Zahlen durchführen können.

15
00:00:39,893 --> 00:00:42,280
Es ist etwas wirklich Neues für den Kontext von

16
00:00:42,280 --> 00:00:44,716
Zahlenlisten oder der Kombination von Funktionen.

17
00:00:44,716 --> 00:00:47,798
Sie tauchen überall auf, sie sind in der Bildverarbeitung allgegenwärtig,

18
00:00:47,798 --> 00:00:50,297
es ist ein Kernkonstrukt in der Wahrscheinlichkeitstheorie,

19
00:00:50,297 --> 00:00:53,421
sie werden häufig bei der Lösung von Differentialgleichungen verwendet und

20
00:00:53,421 --> 00:00:56,462
in einem Kontext, in dem Sie es mit ziemlicher Sicherheit gesehen haben,

21
00:00:56,462 --> 00:01:00,210
wenn nicht Unter diesem Namen versteht man die Multiplikation zweier Polynome miteinander.

22
00:01:00,210 --> 00:01:03,200
Als jemand, der sich mit visuellen Erklärungen beschäftigt,

23
00:01:03,200 --> 00:01:07,038
ist das ein besonders tolles Thema, denn die formelhafte Definition isoliert

24
00:01:07,038 --> 00:01:11,324
und ohne Kontext kann etwas einschüchternd wirken, aber wenn wir uns die Zeit nehmen,

25
00:01:11,324 --> 00:01:15,062
wirklich zu entschlüsseln, was sie sagt, und vorher tatsächlich begründen,

26
00:01:15,062 --> 00:01:18,800
warum Sie würden so etwas wollen, es ist eine unglaublich schöne Operation.

27
00:01:18,800 --> 00:01:21,157
Und ich muss zugeben, dass ich bei der Zusammenstellung der

28
00:01:21,157 --> 00:01:23,436
Visuals für dieses Projekt tatsächlich etwas gelernt habe.

29
00:01:23,436 --> 00:01:26,285
Im Fall der Faltung zweier verschiedener Funktionen habe ich versucht,

30
00:01:26,285 --> 00:01:29,335
mir verschiedene Möglichkeiten auszudenken, wie Sie sich vorstellen können,

31
00:01:29,335 --> 00:01:32,586
was das bedeuten könnte, und bei einer davon hatte ich ein kleines Aha-Erlebnis,

32
00:01:32,586 --> 00:01:36,158
weil ich wusste, warum Normalverteilungen diese Rolle spielen Sie tun es wahrscheinlich,

33
00:01:36,158 --> 00:01:38,445
weshalb es eine so natürliche Form für eine Funktion ist.

34
00:01:38,445 --> 00:01:41,580
Aber ich übertreibe es selbst, es gibt eine Menge Setup dafür.

35
00:01:41,580 --> 00:01:44,512
In diesem Video liegt unser Hauptaugenmerk nur auf dem diskreten

36
00:01:44,512 --> 00:01:47,534
Fall und insbesondere auf der Entwicklung eines sehr unerwarteten,

37
00:01:47,534 --> 00:01:50,196
aber sehr cleveren Algorithmus zur Berechnung dieser Fälle.

38
00:01:50,196 --> 00:01:57,840
Und ich werde die Diskussion für den fortlaufenden Fall in einen zweiten Teil ausdehnen.

39
00:01:57,840 --> 00:02:01,060
Es ist sehr verlockend, mit den Bildverarbeitungsbeispielen zu beginnen,

40
00:02:01,060 --> 00:02:04,501
da sie optisch am faszinierendsten sind, aber es gibt ein paar Kleinigkeiten,

41
00:02:04,501 --> 00:02:08,207
die den Bildverarbeitungsfall weniger repräsentativ für Windungen insgesamt machen,

42
00:02:08,207 --> 00:02:10,765
also beginnen wir stattdessen mit der Wahrscheinlichkeit,

43
00:02:10,765 --> 00:02:12,971
und insbesondere eines der einfachsten Beispiele,

44
00:02:12,971 --> 00:02:16,192
über das sicher jeder hier schon einmal in seinem Leben nachgedacht hat,

45
00:02:16,192 --> 00:02:18,618
nämlich ein paar Würfel zu würfeln und herauszufinden,

46
00:02:18,618 --> 00:02:21,530
wie hoch die Wahrscheinlichkeit ist, verschiedene Summen zu sehen.

47
00:02:21,530 --> 00:02:24,170
Und man könnte sagen: Kein Problem, kein Problem.

48
00:02:24,170 --> 00:02:27,796
Jeder Ihrer beiden Würfel hat sechs verschiedene mögliche Ergebnisse,

49
00:02:27,796 --> 00:02:31,163
was uns insgesamt 36 verschiedene mögliche Ergebnispaare ergibt,

50
00:02:31,163 --> 00:02:33,908
und wenn wir sie alle durchsehen, können wir zählen,

51
00:02:33,908 --> 00:02:36,240
wie viele Paare eine bestimmte Summe ergeben.

52
00:02:36,240 --> 00:02:38,892
Und wenn man alle Paare so in einem Raster anordnet,

53
00:02:38,892 --> 00:02:42,647
ist es eine schöne Sache, dass alle Paare, die eine konstante Summe haben,

54
00:02:42,647 --> 00:02:45,650
entlang einer dieser verschiedenen Diagonalen sichtbar sind.

55
00:02:45,650 --> 00:02:49,422
Wenn Sie also einfach zählen, wie viele auf jeder dieser Diagonalen vorhanden sind,

56
00:02:49,422 --> 00:02:52,880
erfahren Sie, wie wahrscheinlich es ist, dass Sie eine bestimmte Summe sehen.

57
00:02:52,880 --> 00:02:57,029
Und ich würde sagen: sehr gut, sehr gut, aber fällt Ihnen eine andere Möglichkeit ein,

58
00:02:57,029 --> 00:02:58,699
die gleiche Frage zu visualisieren?

59
00:02:58,699 --> 00:03:01,201
Andere Bilder, die Ihnen in den Sinn kommen, wenn Sie an alle

60
00:03:01,201 --> 00:03:03,744
unterschiedlichen Paare denken, die eine bestimmte Summe haben?

61
00:03:03,744 --> 00:03:07,550
Und vielleicht hebt einer von euch die Hand und sagt: „Ja, ich habe eine.

62
00:03:07,550 --> 00:03:10,819
“ Nehmen wir an, Sie stellen sich diese beiden unterschiedlichen Kombinationen

63
00:03:10,819 --> 00:03:14,046
von Möglichkeiten jeweils hintereinander vor, drehen aber die zweite Reihe um.

64
00:03:14,046 --> 00:03:16,417
Auf diese Weise richten sich alle verschiedenen Paare,

65
00:03:16,417 --> 00:03:18,960
die insgesamt sieben ergeben, vertikal auf diese Weise aus.

66
00:03:18,960 --> 00:03:22,724
Und wenn wir die untere Reihe ganz nach rechts schieben, dann ist das einzige Paar,

67
00:03:22,724 --> 00:03:26,309
das zusammen zwei ergibt, die Schlangenaugen, das einzige, das ausgerichtet ist.

68
00:03:26,309 --> 00:03:29,471
Und wenn ich das über eine Einheit nach rechts verschiebe, sind die Paare,

69
00:03:29,471 --> 00:03:32,886
die ausgerichtet werden, die zwei verschiedenen Paare, die zusammen drei ergeben.

70
00:03:32,886 --> 00:03:36,704
Und im Allgemeinen zeigen unterschiedliche Offset-Werte dieses unteren Arrays,

71
00:03:36,704 --> 00:03:40,280
bei dem ich mich zuerst umdrehen musste, alle unterschiedlichen Paare an,

72
00:03:40,280 --> 00:03:41,778
die eine bestimmte Summe haben.

73
00:03:41,778 --> 00:03:47,716
Was Wahrscheinlichkeitsfragen betrifft, ist dies immer noch nicht besonders interessant,

74
00:03:47,716 --> 00:03:53,120
da wir lediglich zählen, wie viele Ergebnisse es in jeder dieser Kategorien gibt.

75
00:03:53,120 --> 00:03:55,153
Aber das geschieht unter der impliziten Annahme,

76
00:03:55,153 --> 00:03:57,850
dass jedes dieser Gesichter die gleiche Chance hat, aufzutauchen.

77
00:03:57,850 --> 00:04:00,932
Aber was wäre, wenn ich Ihnen sagen würde, dass ich ein spezielles Würfelset habe,

78
00:04:00,932 --> 00:04:01,897
das nicht einheitlich ist?

79
00:04:01,897 --> 00:04:04,254
Vielleicht hat der blaue Würfel einen eigenen Zahlensatz,

80
00:04:04,254 --> 00:04:07,180
der die Wahrscheinlichkeiten für jedes auftauchende Gesicht beschreibt,

81
00:04:07,180 --> 00:04:09,740
und der rote Würfel hat seinen eigenen, eindeutigen Zahlensatz.

82
00:04:09,740 --> 00:04:13,085
Wenn Sie in diesem Fall beispielsweise die Wahrscheinlichkeit, eine Zwei zu sehen,

83
00:04:13,085 --> 00:04:15,261
ermitteln möchten, würden Sie die Wahrscheinlichkeit,

84
00:04:15,261 --> 00:04:18,485
dass der blaue Würfel eine Eins ist, mit der Wahrscheinlichkeit multiplizieren,

85
00:04:18,485 --> 00:04:19,895
dass der rote Würfel eine Eins ist.

86
00:04:19,895 --> 00:04:22,478
Und um die Wahrscheinlichkeit zu ermitteln, eine Drei zu sehen,

87
00:04:22,478 --> 00:04:25,544
schauen Sie sich die beiden unterschiedlichen Paare an, wo das möglich ist,

88
00:04:25,544 --> 00:04:28,893
multiplizieren Sie erneut die entsprechenden Wahrscheinlichkeiten und addieren Sie

89
00:04:28,893 --> 00:04:29,983
dann diese beiden Produkte.

90
00:04:29,983 --> 00:04:32,827
Ebenso besteht die Wahrscheinlichkeit, eine Vier zu sehen, darin,

91
00:04:32,827 --> 00:04:36,231
drei verschiedene Paarmöglichkeiten miteinander zu multiplizieren und sie alle

92
00:04:36,231 --> 00:04:36,748
zu addieren.

93
00:04:36,748 --> 00:04:40,861
Und um einige Formeln aufzustellen, benennen wir diese oberen

94
00:04:40,861 --> 00:04:45,903
Wahrscheinlichkeiten mit a1, a2, a3 usw. und die unteren mit b1, b2, b3 usw.

95
00:04:45,903 --> 00:04:49,665
Und im Allgemeinen ist dieser Prozess, bei dem wir zwei verschiedene Arrays von

96
00:04:49,665 --> 00:04:53,427
Zahlen nehmen, das zweite umdrehen und sie dann mit verschiedenen Offset-Werten

97
00:04:53,427 --> 00:04:56,907
aneinanderreihen, eine Reihe paarweiser Produkte nehmen und sie addieren,

98
00:04:56,907 --> 00:05:01,139
das ist einer der. grundlegende Möglichkeiten, darüber nachzudenken, was eine Faltung ist.

99
00:05:01,139 --> 00:05:05,221
Um es etwas genauer zu formulieren: Durch diesen Prozess haben wir einfach

100
00:05:05,221 --> 00:05:08,486
Wahrscheinlichkeiten für das Erkennen von zwei, drei, vier,

101
00:05:08,486 --> 00:05:12,676
so weiter und so weiter bis hin zu 12 generiert, und wir haben sie erhalten,

102
00:05:12,676 --> 00:05:17,084
indem wir eine Liste von Werten, a, und eine andere gemischt haben Werteliste, b.

103
00:05:17,084 --> 00:05:20,429
Im Fachjargon würden wir sagen, dass die Faltung dieser beiden

104
00:05:20,429 --> 00:05:23,934
Folgen uns diese neue Folge ergibt, die neue Folge von 11 Werten,

105
00:05:23,934 --> 00:05:27,120
von denen jeder wie eine Summe paarweiser Produkte aussieht.

106
00:05:27,120 --> 00:05:31,176
Wenn Sie möchten, können Sie sich die gleiche Operation auch anders vorstellen:

107
00:05:31,176 --> 00:05:34,319
Erstellen Sie zunächst eine Tabelle aller paarweisen Produkte

108
00:05:34,319 --> 00:05:36,702
und addieren Sie dann entlang aller Diagonalen.

109
00:05:36,702 --> 00:05:40,114
Auch das ist eine Möglichkeit, diese beiden Zahlenfolgen zu vermischen,

110
00:05:40,114 --> 00:05:42,247
um eine neue Folge von 11 Zahlen zu erhalten.

111
00:05:42,247 --> 00:05:46,960
Es ist der gleiche Vorgang wie bei den Schiebefenstern, nur eine andere Perspektive.

112
00:05:46,960 --> 00:05:48,603
Wenn Sie es mit einer kleinen Notation versehen,

113
00:05:48,603 --> 00:05:50,314
sehen Sie, wie Sie es aufgeschrieben sehen könnten.

114
00:05:50,314 --> 00:05:54,125
Die Faltung von a und b, gekennzeichnet mit diesem kleinen Sternchen,

115
00:05:54,125 --> 00:05:58,533
ist eine neue Liste, und das n-te Element dieser Liste sieht aus wie eine Summe,

116
00:05:58,533 --> 00:06:02,071
und diese Summe geht über alle verschiedenen Indexpaare i und j,

117
00:06:02,071 --> 00:06:04,738
sodass die Summe von diese Indizes sind gleich n.

118
00:06:04,738 --> 00:06:08,449
Es ist eine Art Übertreibung, aber wenn n zum Beispiel 6 wäre,

119
00:06:08,449 --> 00:06:12,159
sind die Paare, die wir durchgehen, 1 und 5, 2 und 4, 3 und 3,

120
00:06:12,159 --> 00:06:16,400
4 und 2, 5 und 1, all die verschiedenen Paare, die sich summieren bis 6.

121
00:06:16,400 --> 00:06:18,869
Aber ehrlich gesagt, egal wie Sie es aufschreiben,

122
00:06:18,869 --> 00:06:23,082
die Notation ist zweitrangig gegenüber dem Bild, das Sie für den Prozess im Kopf haben.

123
00:06:23,082 --> 00:06:26,285
Hier hilft es vielleicht, ein supereinfaches Beispiel zu machen,

124
00:06:26,285 --> 00:06:30,277
in dem ich Sie fragen könnte, wie die Faltung der Liste 1, 2, 3 mit der Liste 4,

125
00:06:30,277 --> 00:06:30,967
5, 6 aussieht.

126
00:06:30,967 --> 00:06:33,842
Sie könnten sich vorstellen, beide Listen zu nehmen,

127
00:06:33,842 --> 00:06:37,857
die zweite umzudrehen und dann mit dem Deckel ganz nach links zu beginnen.

128
00:06:37,857 --> 00:06:40,215
Dann sind die beiden Werte, die übereinstimmen, 1 und 4,

129
00:06:40,215 --> 00:06:43,813
multiplizieren Sie sie miteinander, und das ergibt unseren ersten Term unserer Ausgabe.

130
00:06:43,813 --> 00:06:46,991
Schieben Sie das untere Array um eine Einheit nach rechts. Die Paare,

131
00:06:46,991 --> 00:06:50,849
die ausgerichtet werden, sind 1 und 5 sowie 2 und 4. Multiplizieren Sie diese Paare,

132
00:06:50,849 --> 00:06:54,300
addieren Sie sie und das ergibt 13, den nächsten Eintrag in unserer Ausgabe.

133
00:06:54,300 --> 00:06:58,329
Schieben Sie die Dinge noch einmal um, und wir nehmen 1 mal 6,

134
00:06:58,329 --> 00:07:01,591
plus 2 mal 5, plus 3 mal 4, was zufällig 28 ergibt.

135
00:07:01,591 --> 00:07:05,484
Noch eine Folie, und wir erhalten 2 mal 6 plus 3 mal 5,

136
00:07:05,484 --> 00:07:10,560
und das ergibt 27, und schließlich sieht der letzte Term wie 3 mal 6 aus.

137
00:07:10,560 --> 00:07:13,295
Wenn Sie möchten, können Sie Ihre bevorzugte Programmiersprache und

138
00:07:13,295 --> 00:07:16,674
Ihre Lieblingsbibliothek aufrufen, die verschiedene numerische Operationen enthält,

139
00:07:16,674 --> 00:07:18,807
und Sie können bestätigen, dass ich Sie nicht anlüge.

140
00:07:18,807 --> 00:07:22,414
Wenn Sie die Faltung von 1, 2, 3 gegen 4, 5, 6 durchführen,

141
00:07:22,414 --> 00:07:24,880
erhalten Sie tatsächlich dieses Ergebnis.

142
00:07:24,880 --> 00:07:27,311
Wir haben einen Fall gesehen, in dem dies eine natürliche und

143
00:07:27,311 --> 00:07:30,214
wünschenswerte Operation ist und Wahrscheinlichkeitsverteilungen addiert,

144
00:07:30,214 --> 00:07:32,881
und ein weiteres häufiges Beispiel wäre ein gleitender Durchschnitt.

145
00:07:32,881 --> 00:07:35,942
Stellen Sie sich vor, Sie haben eine lange Liste mit Zahlen und nehmen

146
00:07:35,942 --> 00:07:38,788
eine weitere kleinere Liste mit Zahlen, deren Summe alle 1 ergibt.

147
00:07:38,788 --> 00:07:41,572
In diesem Fall habe ich nur eine kleine Liste mit 5 Werten,

148
00:07:41,572 --> 00:07:43,381
und sie entsprechen alle einem Fünftel.

149
00:07:43,381 --> 00:07:47,139
Wenn wir dann diesen Gleitfenster-Faltungsprozess durchführen und sozusagen die

150
00:07:47,139 --> 00:07:50,662
Augen schließen und unter den Teppich kehren, was ganz am Anfang passiert,

151
00:07:50,662 --> 00:07:53,668
denken wir darüber nach, was die einzelnen Begriffe darin sind,

152
00:07:53,668 --> 00:07:57,802
sobald sich unsere kleinere Liste von Werten vollständig mit der größeren überschneidet

153
00:07:57,802 --> 00:07:59,023
Faltung bedeutet wirklich.

154
00:07:59,023 --> 00:08:04,964
Bei jeder Iteration multiplizieren Sie jeden Wert Ihrer Daten mit 1/5 und addieren sie

155
00:08:04,964 --> 00:08:10,769
alle. Das heißt, Sie bilden einen Durchschnitt Ihrer Daten in diesem kleinen Fenster.

156
00:08:10,769 --> 00:08:14,270
Insgesamt erhalten Sie durch den Prozess eine geglättete Version der Originaldaten,

157
00:08:14,270 --> 00:08:17,230
und Sie können diese ändern, indem Sie mit einer anderen kleinen Liste

158
00:08:17,230 --> 00:08:19,856
von Zahlen beginnen. Solange diese kleine Liste alle 1 ergibt,

159
00:08:19,856 --> 00:08:22,816
können Sie sie immer noch als Verschiebung interpretieren Durchschnitt.

160
00:08:22,816 --> 00:08:25,275
In dem hier gezeigten Beispiel würde dieser gleitende

161
00:08:25,275 --> 00:08:27,781
Durchschnitt dem zentralen Wert mehr Gewicht verleihen.

162
00:08:27,781 --> 00:08:33,200
Dies führt auch zu einer geglätteten Version der Daten.

163
00:08:33,200 --> 00:08:35,475
Wenn Sie eine Art zweidimensionales Analogon davon erstellen,

164
00:08:35,475 --> 00:08:38,594
erhalten Sie einen unterhaltsamen Algorithmus zum Verwischen eines bestimmten Bildes.

165
00:08:38,594 --> 00:08:41,211
Und ich sollte sagen, dass die Animationen, die ich zeigen werde,

166
00:08:41,211 --> 00:08:44,225
eine Modifikation von etwas sind, das ich ursprünglich für einen Teil einer

167
00:08:44,225 --> 00:08:47,318
Reihe von Vorlesungen gemacht habe, die ich mit dem Julia Lab am MIT für eine

168
00:08:47,318 --> 00:08:50,887
bestimmte OpenCourseWare-Klasse gehalten habe, die eine Bildverarbeitungseinheit enthielt.

169
00:08:50,887 --> 00:08:53,750
Dort haben wir uns noch ein wenig mit dem Code hinter all dem befasst.

170
00:08:53,750 --> 00:08:56,452
Wenn Sie also neugierig sind, hinterlasse ich Ihnen ein paar Links.

171
00:08:56,452 --> 00:09:00,140
Wenn ich mich aber noch einmal diesem unscharfen Beispiel zuwende, sehe ich,

172
00:09:00,140 --> 00:09:04,451
dass ich ein kleines 3x3-Werteraster habe, das sich entlang unseres Originalbilds bewegt,

173
00:09:04,451 --> 00:09:07,612
und wenn wir hineinzoomen, ist jeder dieser Werte 19tel, und das,

174
00:09:07,612 --> 00:09:11,780
was ich mache Bei jeder Iteration wird jeder dieser Werte mit dem entsprechenden Pixel

175
00:09:11,780 --> 00:09:13,312
multipliziert, auf dem er liegt.

176
00:09:13,312 --> 00:09:16,809
Und natürlich stellen wir uns in der Informatik Farben als kleine Vektoren

177
00:09:16,809 --> 00:09:20,400
mit drei Werten vor, die die roten, grünen und blauen Komponenten darstellen.

178
00:09:20,400 --> 00:09:23,992
Wenn ich all diese kleinen Werte mit 1/9 multipliziere und addiere,

179
00:09:23,992 --> 00:09:26,792
erhalten wir einen Durchschnitt für jeden Farbkanal,

180
00:09:26,792 --> 00:09:30,966
und das entsprechende Pixel für das Bild rechts wird als diese Summe definiert.

181
00:09:30,966 --> 00:09:34,589
Der Gesamteffekt, wenn wir dies für jedes einzelne Pixel im Bild tun,

182
00:09:34,589 --> 00:09:38,419
besteht darin, dass jedes einzelne Pixel in alle seine Nachbarn übergeht,

183
00:09:38,419 --> 00:09:41,680
wodurch wir eine unschärfere Version als das Original erhalten.

184
00:09:41,680 --> 00:09:44,566
Im Fachjargon würden wir sagen, dass das Bild rechts eine

185
00:09:44,566 --> 00:09:47,800
Faltung unseres Originalbildes mit einem kleinen Werteraster ist.

186
00:09:47,800 --> 00:09:50,174
Oder technischer ausgedrückt sollte ich vielleicht sagen,

187
00:09:50,174 --> 00:09:53,571
dass es sich um die Faltung mit einer um 180 Grad gedrehten Version dieses kleinen

188
00:09:53,571 --> 00:09:54,430
Werterasters handelt.

189
00:09:54,430 --> 00:09:57,930
Es spielt keine Rolle, ob das Gitter symmetrisch ist, aber man sollte bedenken,

190
00:09:57,930 --> 00:10:01,866
dass die Definition einer Faltung, wie sie aus dem rein mathematischen Kontext übernommen

191
00:10:01,866 --> 00:10:05,760
wurde, Sie immer dazu einladen sollte, darüber nachzudenken, das zweite Array umzudrehen.

192
00:10:05,760 --> 00:10:08,448
Wenn wir dies leicht modifizieren, können wir einen viel eleganteren

193
00:10:08,448 --> 00:10:11,059
Unschärfeeffekt erzielen, indem wir ein anderes Werteraster wählen.

194
00:10:11,059 --> 00:10:13,346
In diesem Fall habe ich ein kleines 5x5-Raster,

195
00:10:13,346 --> 00:10:15,920
aber der Unterschied liegt nicht so sehr in der Größe.

196
00:10:15,920 --> 00:10:19,268
Wenn wir hineinzoomen, bemerken wir, dass der Wert in der Mitte viel größer

197
00:10:19,268 --> 00:10:21,824
ist als der Wert an den Rändern, und der Grund dafür ist,

198
00:10:21,824 --> 00:10:25,261
dass sie alle aus einer Glockenkurve, einer sogenannten Gaußschen Verteilung,

199
00:10:25,261 --> 00:10:26,010
entnommen werden.

200
00:10:26,010 --> 00:10:30,197
Wenn wir also alle diese Werte mit dem entsprechenden Pixel multiplizieren,

201
00:10:30,197 --> 00:10:33,503
auf dem sie liegen, geben wir dem zentralen Pixel viel mehr

202
00:10:33,503 --> 00:10:36,367
Gewicht und den Pixeln am Rand viel weniger Gewicht.

203
00:10:36,367 --> 00:10:38,391
Und genau wie zuvor wird das entsprechende Pixel

204
00:10:38,391 --> 00:10:40,373
auf der rechten Seite als diese Summe definiert.

205
00:10:40,373 --> 00:10:45,066
Da wir diesen Vorgang für jedes einzelne Pixel durchführen, entsteht ein Unschärfeeffekt,

206
00:10:45,066 --> 00:10:49,760
der den Eindruck, das Objektiv sei unscharf oder so ähnlich, viel authentischer simuliert.

207
00:10:49,760 --> 00:10:53,474
Aber Unschärfe ist bei weitem nicht das Einzige, was man mit dieser Idee machen kann.

208
00:10:53,474 --> 00:10:56,841
Schauen Sie sich zum Beispiel dieses kleine Werteraster an,

209
00:10:56,841 --> 00:11:00,714
das links einige positive und rechts einige negative Zahlen enthält,

210
00:11:00,714 --> 00:11:03,071
die ich jeweils mit Blau und Rot einfärbe.

211
00:11:03,071 --> 00:11:07,072
Nehmen Sie sich einen Moment Zeit, um zu sehen, ob Sie vorhersagen und verstehen können,

212
00:11:07,072 --> 00:11:09,769
welche Auswirkungen dies auf das endgültige Bild haben wird.

213
00:11:09,769 --> 00:11:14,128
In diesem Fall stelle ich mir das Bild also nur als Graustufenbild statt als Farbbild

214
00:11:14,128 --> 00:11:18,082
vor, sodass jedes Pixel nur durch eine Zahl statt durch drei dargestellt wird.

215
00:11:18,082 --> 00:11:21,644
Und es ist erwähnenswert, dass es bei dieser Faltung möglich ist,

216
00:11:21,644 --> 00:11:23,102
negative Werte zu erhalten.

217
00:11:23,102 --> 00:11:25,591
Wenn wir an dieser Stelle beispielsweise hineinzoomen,

218
00:11:25,591 --> 00:11:29,256
liegt die linke Hälfte unseres kleinen Rasters vollständig auf schwarzen Pixeln,

219
00:11:29,256 --> 00:11:32,334
was einen Wert von Null hätte, aber die rechte Hälfte mit negativen

220
00:11:32,334 --> 00:11:36,000
Werten liegt alle auf weißen Pixeln, was der Fall wäre einen Wert von eins haben.

221
00:11:36,000 --> 00:11:38,693
Wenn wir also entsprechende Terme multiplizieren und addieren,

222
00:11:38,693 --> 00:11:41,429
werden die Ergebnisse sehr negativ sein, und die Art und Weise,

223
00:11:41,429 --> 00:11:43,780
wie ich dies mit dem Bild rechts zeige, besteht darin,

224
00:11:43,780 --> 00:11:46,046
negative Werte rot und positive Werte blau zu färben.

225
00:11:46,046 --> 00:11:51,331
Beachten Sie außerdem, dass bei einem Feld mit der gleichen Farbe alles auf Null geht,

226
00:11:51,331 --> 00:11:54,854
da die Summe der Werte in unserem kleinen Raster Null ist.

227
00:11:54,854 --> 00:11:57,380
Dies unterscheidet sich stark von den beiden vorherigen Beispielen,

228
00:11:57,380 --> 00:12:00,278
bei denen die Summe unseres kleinen Gitters eins war, was es uns ermöglichte,

229
00:12:00,278 --> 00:12:02,990
es als gleitenden Durchschnitt und damit als Unschärfe zu interpretieren.

230
00:12:02,990 --> 00:12:07,613
Alles in allem erkennt dieser kleine Prozess grundsätzlich alle Abweichungen

231
00:12:07,613 --> 00:12:11,156
im Pixelwert, wenn Sie sich von links nach rechts bewegen,

232
00:12:11,156 --> 00:12:16,560
und bietet Ihnen so eine Art Möglichkeit, alle vertikalen Kanten Ihres Bildes zu erfassen.

233
00:12:16,560 --> 00:12:21,359
Und wenn wir das Gitter so drehen, dass es sich von oben nach unten verändert,

234
00:12:21,359 --> 00:12:25,976
werden alle horizontalen Kanten erfasst, was im Fall unseres Bildes unserer

235
00:12:25,976 --> 00:12:29,986
kleinen Tortenkreatur zu einigen ziemlich dämonischen Augen führt.

236
00:12:29,986 --> 00:12:32,446
Dieses kleinere Raster wird übrigens oft als Kernel bezeichnet,

237
00:12:32,446 --> 00:12:35,021
und das Schöne daran ist, dass Sie durch die Auswahl eines anderen

238
00:12:35,021 --> 00:12:37,443
Kernels verschiedene Bildverarbeitungseffekte erzielen können,

239
00:12:37,443 --> 00:12:40,710
nicht nur die Unschärfe bei der Kantenerkennung, sondern auch Dinge wie das Schärfen.

240
00:12:40,710 --> 00:12:44,463
Für diejenigen unter Ihnen, die von einem Faltungs-Neuronalen Netzwerk gehört haben:

241
00:12:44,463 --> 00:12:47,069
Die Idee besteht darin, mithilfe von Daten herauszufinden,

242
00:12:47,069 --> 00:12:49,719
welche Kernel überhaupt vorhanden sein sollten, je nachdem,

243
00:12:49,719 --> 00:12:51,618
was das Neuronale Netzwerk erkennen möchte.

244
00:12:51,618 --> 00:12:55,378
Eine andere Sache, die ich vielleicht ansprechen sollte, ist die Länge der Ausgabe.

245
00:12:55,378 --> 00:12:58,674
Bei so etwas wie dem Beispiel des gleitenden Durchschnitts möchten Sie vielleicht

246
00:12:58,674 --> 00:13:01,971
erst dann über die Begriffe nachdenken, wenn beide Fenster vollständig aneinander

247
00:13:01,971 --> 00:13:05,066
ausgerichtet sind, oder im Bildverarbeitungsbeispiel möchten Sie vielleicht,

248
00:13:05,066 --> 00:13:07,760
dass die endgültige Ausgabe die gleiche Größe wie das Original hat.

249
00:13:07,760 --> 00:13:10,821
Nun erzeugen Faltungen als reine mathematische Operation immer ein Array,

250
00:13:10,821 --> 00:13:13,634
das größer ist als die beiden Arrays, mit denen Sie begonnen haben,

251
00:13:13,634 --> 00:13:16,405
zumindest vorausgesetzt, dass eines davon nicht die Länge eins hat.

252
00:13:16,405 --> 00:13:19,203
Beachten Sie jedoch, dass Sie in bestimmten Informatikkontexten

253
00:13:19,203 --> 00:13:21,520
diese Ausgabe häufig absichtlich abschneiden möchten.

254
00:13:21,520 --> 00:13:25,191
Hervorzuheben ist auch, dass sich im Informatikkontext die Vorstellung,

255
00:13:25,191 --> 00:13:28,710
den Kernel umzudrehen, bevor man ihn über das Original laufen lässt,

256
00:13:28,710 --> 00:13:33,095
oft wirklich seltsam und einfach unangebracht anfühlt. Beachten Sie jedoch auch hier,

257
00:13:33,095 --> 00:13:36,206
dass dies aus dem reinen Mathematikkontext übernommen wurde,

258
00:13:36,206 --> 00:13:40,592
in dem wir uns befanden Ich habe gesehen, dass es angesichts der Wahrscheinlichkeiten

259
00:13:40,592 --> 00:13:42,530
eine unglaublich natürliche Sache ist.

260
00:13:42,530 --> 00:13:45,879
Und tatsächlich kann ich Ihnen ein weiteres rein mathematisches Beispiel zeigen,

261
00:13:45,879 --> 00:13:48,359
bei dem sich sogar die Programmierer darum kümmern sollten,

262
00:13:48,359 --> 00:13:51,502
weil es die Türen für einen viel schnelleren Algorithmus zur Berechnung all

263
00:13:51,502 --> 00:13:52,370
dieser Punkte öffnet.

264
00:13:52,370 --> 00:13:54,582
Um hier einzurichten, was ich unter „schneller“ verstehe,

265
00:13:54,582 --> 00:13:57,138
gehe ich noch einmal zurück und rufe noch einmal etwas Python auf,

266
00:13:57,138 --> 00:13:59,579
und ich werde zwei verschiedene, relativ große Arrays erstellen.

267
00:13:59,579 --> 00:14:03,548
Jedes wird hunderttausend zufällige Elemente enthalten und ich werde

268
00:14:03,548 --> 00:14:07,575
die Laufzeit der Faltungsfunktion aus der Numpy-Bibliothek beurteilen.

269
00:14:07,575 --> 00:14:10,667
Und in diesem Fall wird es für mehrere verschiedene Iterationen ausgeführt,

270
00:14:10,667 --> 00:14:13,962
versucht, einen Durchschnitt zu finden, und auf diesem Computer sieht es so aus,

271
00:14:13,962 --> 00:14:16,321
als ob der Durchschnitt zumindest bei 4 liegt.87 Sekunden.

272
00:14:16,321 --> 00:14:21,339
Wenn ich dagegen eine andere Funktion aus der Scipy-Bibliothek namens fftconvolve

273
00:14:21,339 --> 00:14:24,643
verwende, die dasselbe ist, nur anders implementiert,

274
00:14:24,643 --> 00:14:27,764
dauert das nur 4.Durchschnittlich 3 Millisekunden,

275
00:14:27,764 --> 00:14:30,640
also eine Verbesserung um drei Größenordnungen.

276
00:14:30,640 --> 00:14:32,700
Und auch wenn sie unter einem anderen Namen läuft,

277
00:14:32,700 --> 00:14:35,325
liefert sie die gleiche Ausgabe wie die andere Faltungsfunktion,

278
00:14:35,325 --> 00:14:38,880
sie unternimmt lediglich etwas, um die Sache auf eine cleverere Art und Weise anzugehen.

279
00:14:38,880 --> 00:14:42,585
Denken Sie daran, dass ich im Zusammenhang mit dem Wahrscheinlichkeitsbeispiel

280
00:14:42,585 --> 00:14:46,055
gesagt habe, dass eine andere Möglichkeit, über die Faltung nachzudenken,

281
00:14:46,055 --> 00:14:49,432
darin besteht, diese Tabelle aller paarweisen Produkte zu erstellen und

282
00:14:49,432 --> 00:14:52,528
diese paarweisen Produkte dann entlang der Diagonalen zu addieren.

283
00:14:52,528 --> 00:14:55,420
Es gibt natürlich nichts Spezifisches für die Wahrscheinlichkeit.

284
00:14:55,420 --> 00:14:59,321
Wenn Sie zwei verschiedene Zahlenlisten falten, können Sie es auf diese Weise betrachten.

285
00:14:59,321 --> 00:15:02,893
Erstellen Sie eine solche Multiplikationstabelle mit allen paarweisen Produkten und

286
00:15:02,893 --> 00:15:06,381
dann entspricht jede Summe entlang der Diagonale einer Ihrer endgültigen Ausgaben.

287
00:15:06,381 --> 00:15:10,023
Ein Kontext, in dem diese Ansicht besonders natürlich ist,

288
00:15:10,023 --> 00:15:12,431
ist die Multiplikation zweier Polynome.

289
00:15:12,431 --> 00:15:16,530
Lassen Sie mich zum Beispiel das kleine Raster, das wir bereits haben,

290
00:15:16,530 --> 00:15:20,398
nehmen und die oberen Terme durch 1, 2x und 3x im Quadrat ersetzen

291
00:15:20,398 --> 00:15:23,920
und die anderen Terme durch 4, 5x und 6x im Quadrat ersetzen.

292
00:15:23,920 --> 00:15:26,518
Überlegen Sie nun, was es bedeutet, wenn wir all diese verschiedenen

293
00:15:26,518 --> 00:15:28,664
paarweisen Produkte zwischen den beiden Listen erstellen.

294
00:15:28,664 --> 00:15:33,157
Was Sie tun, besteht im Wesentlichen darin, das vollständige Produkt der beiden Polynome,

295
00:15:33,157 --> 00:15:36,852
die ich aufgeschrieben habe, zu entwickeln, und wenn Sie dann entlang der

296
00:15:36,852 --> 00:15:40,297
Diagonale addieren, entspricht das dem Sammeln aller gleichen Terme,

297
00:15:40,297 --> 00:15:44,540
was ziemlich ordentlich ist. Ein Polynom zu erweitern und ähnliche Terme zu sammeln,

298
00:15:44,540 --> 00:15:46,937
ist genau das Gleicher Vorgang wie eine Faltung.

299
00:15:46,937 --> 00:15:49,954
Aber das ermöglicht uns, etwas ziemlich Cooles zu tun,

300
00:15:49,954 --> 00:15:52,642
denn denken Sie darüber nach, was wir hier sagen.

301
00:15:52,642 --> 00:15:55,909
Wir sagen, wenn Sie zwei verschiedene Funktionen nehmen und sie miteinander

302
00:15:55,909 --> 00:15:59,262
multiplizieren, was eine einfache punktweise Operation ist, ist das dasselbe,

303
00:15:59,262 --> 00:16:02,442
als ob Sie zuerst die Koeffizienten aus jeder einzelnen dieser Funktionen

304
00:16:02,442 --> 00:16:05,150
extrahiert hätten, vorausgesetzt, es handelt sich um Polynome,

305
00:16:05,150 --> 00:16:08,761
und dann eine Faltung dieser Funktionen vorgenommen hätten zwei Koeffizientenlisten.

306
00:16:08,761 --> 00:16:12,082
Was das so interessant macht, ist, dass sich Faltungen im Prinzip viel

307
00:16:12,082 --> 00:16:15,778
komplizierter anfühlen als einfache Multiplikationen, und ich meine nicht nur,

308
00:16:15,778 --> 00:16:18,912
dass sie konzeptionell schwieriger zu bedenken sind, sondern auch,

309
00:16:18,912 --> 00:16:22,702
dass rechnerisch mehr Schritte erforderlich sind, um eine Faltung durchzuführen,

310
00:16:22,702 --> 00:16:26,070
als für die Durchführung einer Punktprodukt zweier verschiedener Listen.

311
00:16:26,070 --> 00:16:30,094
Nehmen wir zum Beispiel an, ich habe Ihnen zwei wirklich große Polynome gegeben,

312
00:16:30,094 --> 00:16:32,975
sagen wir, jedes mit hundert verschiedenen Koeffizienten.

313
00:16:32,975 --> 00:16:36,601
Wenn Sie sie dann multiplizieren würden, um dieses Produkt zu erweitern,

314
00:16:36,601 --> 00:16:40,575
wissen Sie, dass Sie das gesamte 100 x 100-Raster paarweiser Produkte ausfüllen

315
00:16:40,575 --> 00:16:43,308
müssten Führen Sie 10.000 verschiedene Produkte durch,

316
00:16:43,308 --> 00:16:46,984
und wenn Sie dann alle ähnlichen Begriffe entlang der Diagonalen sammeln,

317
00:16:46,984 --> 00:16:49,666
ist das ein weiterer Satz von etwa 10.000 Operationen.

318
00:16:49,666 --> 00:16:53,902
Allgemeiner ausgedrückt würden wir sagen, dass der Algorithmus O von n im Quadrat ist,

319
00:16:53,902 --> 00:16:57,115
was bedeutet, dass für zwei Listen der Größe n die Art und Weise,

320
00:16:57,115 --> 00:17:00,816
wie die Anzahl der Operationen proportional zum Quadrat von n skaliert, ist.

321
00:17:00,816 --> 00:17:04,659
Wenn ich mir andererseits zwei Polynome im Hinblick auf ihre Ausgaben vorstelle,

322
00:17:04,659 --> 00:17:07,839
zum Beispiel die Abtastung ihrer Werte an einer Handvoll Eingaben,

323
00:17:07,839 --> 00:17:11,588
dann erfordert ihre Multiplikation nur so viele Operationen wie die Anzahl der

324
00:17:11,588 --> 00:17:15,479
Stichproben, da es sich wiederum um eine punktweise Operation handelt und man bei

325
00:17:15,479 --> 00:17:18,848
Polynomen nur die benötigten Werte benötigt endlich viele Stichproben,

326
00:17:18,848 --> 00:17:21,126
um die Koeffizienten wiederherstellen zu können.

327
00:17:21,152 --> 00:17:25,214
Beispielsweise reichen zwei Ausgaben aus, um ein lineares Polynom eindeutig anzugeben.

328
00:17:25,214 --> 00:17:29,360
Drei Ausgaben würden ausreichen, um ein quadratisches Polynom eindeutig zu spezifizieren.

329
00:17:29,360 --> 00:17:33,385
Und im Allgemeinen reicht es aus, wenn Sie n unterschiedliche Ausgaben kennen,

330
00:17:33,385 --> 00:17:36,901
um ein Polynom mit n verschiedenen Koeffizienten eindeutig anzugeben.

331
00:17:36,901 --> 00:17:41,188
Wenn Sie möchten, können wir dies auch in der Sprache von Gleichungssystemen formulieren.

332
00:17:41,188 --> 00:17:43,587
Stellen Sie sich vor, ich erzähle Ihnen, dass ich ein Polynom habe,

333
00:17:43,587 --> 00:17:46,480
aber ich sage Ihnen nicht, was die Koeffizienten sind, das ist für Sie ein Rätsel.

334
00:17:46,480 --> 00:17:49,427
In unserem Beispiel könnten Sie sich das als das Produkt vorstellen,

335
00:17:49,427 --> 00:17:50,666
das wir herausfinden möchten.

336
00:17:50,666 --> 00:17:54,984
Angenommen, ich sage Ihnen einfach, was die Ausgaben dieses Polynoms wären,

337
00:17:54,984 --> 00:17:58,848
wenn Sie verschiedene Eingaben wie 0, 1, 2, 3 usw. eingeben würden,

338
00:17:58,848 --> 00:18:03,791
und ich gebe Ihnen genug, damit Sie so viele Gleichungen haben wie Du hast Unbekanntes.

339
00:18:03,791 --> 00:18:07,245
Es handelt sich sogar um ein lineares Gleichungssystem, das ist also schön.

340
00:18:07,245 --> 00:18:11,137
Und im Prinzip sollte dies zumindest ausreichen, um die Koeffizienten wiederherzustellen.

341
00:18:11,137 --> 00:18:13,484
Die grobe Gliederung des Algorithmus wäre also,

342
00:18:13,484 --> 00:18:17,102
wann immer Sie zwei Zahlenlisten falten möchten, Sie sie so zu behandeln,

343
00:18:17,102 --> 00:18:19,253
als wären sie Koeffizienten zweier Polynome.

344
00:18:19,253 --> 00:18:22,252
Sie tasten diese Polynome mit genügend Ausgaben ab,

345
00:18:22,252 --> 00:18:26,347
multiplizieren diese Stichproben punktweise und lösen dann das System,

346
00:18:26,347 --> 00:18:31,364
um die Koeffizienten wiederherzustellen, um die Faltung durch eine Hintertür zu finden.

347
00:18:31,364 --> 00:18:34,372
Und wie ich es bisher zumindest gesagt habe, könnten sich einige

348
00:18:34,372 --> 00:18:37,564
von Ihnen zu Recht beschweren: „Grant, das ist ein idiotischer Plan.“

349
00:18:37,564 --> 00:18:41,212
Denn zum einen erfordert die Berechnung all dieser Stichproben für eines

350
00:18:41,212 --> 00:18:45,210
der uns bekannten Polynome bereits die Größenordnung von n-Quadrat-Operationen,

351
00:18:45,210 --> 00:18:49,157
ganz zu schweigen davon, dass die Lösung dieses Systems rechnerisch sicherlich

352
00:18:49,157 --> 00:18:52,656
genauso schwierig sein wird wie die einfache Durchführung der Faltung.

353
00:18:52,656 --> 00:18:56,588
Wir haben also sicher diesen Zusammenhang zwischen Multiplikation und Faltungen,

354
00:18:56,588 --> 00:19:00,666
aber die ganze Komplexität ergibt sich aus der Übersetzung von einem Standpunkt zum

355
00:19:00,666 --> 00:19:01,054
anderen.

356
00:19:01,054 --> 00:19:03,144
Aber es gibt einen Trick, und diejenigen unter Ihnen,

357
00:19:03,144 --> 00:19:05,970
die sich mit Fourier-Transformationen und dem FFT-Algorithmus auskennen,

358
00:19:05,970 --> 00:19:07,673
werden vielleicht erkennen, wohin das führt.

359
00:19:07,673 --> 00:19:10,002
Wenn Sie mit diesen Themen nicht vertraut sind, könnte das,

360
00:19:10,002 --> 00:19:12,176
was ich jetzt sagen werde, völlig unerwartet erscheinen.

361
00:19:12,176 --> 00:19:14,234
Seien Sie sich nur darüber im Klaren, dass es bestimmte Wege gibt,

362
00:19:14,234 --> 00:19:16,783
die Sie in der Mathematik hätten gehen können und die diesen Schritt eher zu einem

363
00:19:16,783 --> 00:19:17,582
erwarteten Schritt machen.

364
00:19:17,582 --> 00:19:20,697
Im Grunde geht es darum, dass wir hier die Wahlfreiheit haben.

365
00:19:20,697 --> 00:19:24,861
Anstatt eine beliebige Menge von Eingaben wie 0, 1, 2, 3 usw. auszuwerten,

366
00:19:24,861 --> 00:19:29,413
entscheiden Sie sich dafür, eine ganz speziell ausgewählte Menge komplexer Zahlen

367
00:19:29,413 --> 00:19:30,080
auszuwerten.

368
00:19:30,080 --> 00:19:33,473
Insbesondere diejenigen, die in gleichmäßigen Abständen auf dem Einheitskreis liegen,

369
00:19:33,473 --> 00:19:34,894
die sogenannten Wurzeln der Einheit.

370
00:19:34,894 --> 00:19:37,364
Dadurch erhalten wir ein benutzerfreundlicheres System.

371
00:19:37,364 --> 00:19:40,303
Die Grundidee besteht darin, dass das Finden einer Zahl,

372
00:19:40,303 --> 00:19:43,911
bei der die Leistungsentnahme in dieses Zyklusmuster fällt, bedeutet,

373
00:19:43,911 --> 00:19:48,344
dass das von uns generierte System in den verschiedenen Begriffen, die Sie berechnen,

374
00:19:48,344 --> 00:19:51,437
eine große Redundanz aufweist, und indem Sie klug vorgehen,

375
00:19:51,437 --> 00:19:55,252
wie Wenn Sie diese Redundanz nutzen, können Sie sich viel Arbeit ersparen.

376
00:19:55,252 --> 00:19:58,867
Dieser Satz von Ausgaben, den ich geschrieben habe, hat einen besonderen Namen:

377
00:19:58,867 --> 00:20:02,166
Er wird als diskrete Fourier-Transformation der Koeffizienten bezeichnet.

378
00:20:02,166 --> 00:20:05,436
Und wenn Sie mehr erfahren möchten, habe ich für denselben Julia-MIT-Kurs

379
00:20:05,436 --> 00:20:09,103
tatsächlich eine weitere Vorlesung über diskrete Fourier-Transformationen gehalten.

380
00:20:09,103 --> 00:20:12,332
Und es gibt auch ein wirklich hervorragendes Video zum Kanal Reduzierbar,

381
00:20:12,332 --> 00:20:14,732
in dem es um die schnelle Fourier-Transformation geht,

382
00:20:14,732 --> 00:20:17,263
einen Algorithmus zur schnelleren Berechnung dieser Werte.

383
00:20:17,263 --> 00:20:20,482
Außerdem hat Veritasium kürzlich ein wirklich gutes Video zu FFTs gemacht,

384
00:20:20,482 --> 00:20:21,984
Sie haben also viele Möglichkeiten.

385
00:20:21,984 --> 00:20:24,786
Und dieser schnelle Algorithmus ist für uns wirklich der Punkt.

386
00:20:24,786 --> 00:20:27,492
Aufgrund all dieser Redundanz gibt es wiederum eine Methode,

387
00:20:27,492 --> 00:20:30,198
um von den Koeffizienten zu all diesen Ausgaben zu gelangen,

388
00:20:30,198 --> 00:20:33,481
wobei Sie statt in der Größenordnung von n quadrierten Operationen in der

389
00:20:33,481 --> 00:20:36,542
Größenordnung von n-fach dem Logarithmus von n Operationen arbeiten,

390
00:20:36,542 --> 00:20:39,293
was viel ist viel besser, wenn Sie auf große Listen skalieren.

391
00:20:39,293 --> 00:20:42,386
Und was noch wichtiger ist: Dieser FFT-Algorithmus geht in beide Richtungen.

392
00:20:42,386 --> 00:20:45,515
Außerdem können Sie von den Ausgängen zu den Koeffizienten wechseln.

393
00:20:45,515 --> 00:20:47,214
Wenn wir also alles zusammenfassen, schauen wir

394
00:20:47,214 --> 00:20:49,054
noch einmal auf unsere Algorithmus-Übersicht zurück.

395
00:20:49,054 --> 00:20:52,469
Nun können wir sagen: Wann immer Sie zwei lange Listen mit Zahlen erhalten

396
00:20:52,469 --> 00:20:55,884
und deren Faltung durchführen möchten, berechnen Sie zunächst die schnelle

397
00:20:55,884 --> 00:20:58,161
Fourier-Transformation jeder einzelnen von ihnen,

398
00:20:58,161 --> 00:21:00,756
was Sie sich im Hinterkopf einfach so vorstellen können,

399
00:21:00,756 --> 00:21:04,307
sie so zu behandeln Sie sind die Koeffizienten eines Polynoms und bewerten es

400
00:21:04,307 --> 00:21:06,766
an einer ganz speziell ausgewählten Menge von Punkten.

401
00:21:06,766 --> 00:21:10,027
Dann multiplizieren Sie die beiden Ergebnisse, die Sie gerade erhalten haben,

402
00:21:10,027 --> 00:21:13,203
punktuell, was sehr schnell geht, und führen Sie dann eine inverse schnelle

403
00:21:13,203 --> 00:21:16,547
Fourier-Transformation durch. Damit erhalten Sie die hinterlistige Möglichkeit,

404
00:21:16,547 --> 00:21:18,847
die gesuchte Faltung durch eine Hintertür zu berechnen.

405
00:21:18,847 --> 00:21:22,957
Aber dieses Mal handelt es sich nur um O von n log n Operationen.

406
00:21:22,957 --> 00:21:24,865
Das finde ich wirklich cool!

407
00:21:24,865 --> 00:21:27,600
Dieser sehr spezifische Kontext, in dem Faltungen auftreten,

408
00:21:27,600 --> 00:21:31,456
bei denen zwei Polynome multipliziert werden, öffnet die Türen für einen Algorithmus,

409
00:21:31,456 --> 00:21:34,235
der überall dort relevant ist, wo Faltungen auftreten könnten.

410
00:21:34,235 --> 00:21:36,324
Wenn Sie Wahrscheinlichkeitsverteilungen hinzufügen möchten,

411
00:21:36,324 --> 00:21:38,822
führen Sie eine große Bildverarbeitung durch, was auch immer es sein mag.

412
00:21:38,822 --> 00:21:42,217
Und ich denke, das ist einfach ein gutes Beispiel dafür, warum man aufgeregt sein sollte,

413
00:21:42,217 --> 00:21:45,271
wenn man sieht, dass eine Operation oder ein Konzept in der Mathematik in vielen

414
00:21:45,271 --> 00:21:47,798
Bereichen auftaucht, die scheinbar nichts miteinander zu tun haben.

415
00:21:47,798 --> 00:21:49,646
Wenn Sie ein paar Hausaufgaben machen möchten,

416
00:21:49,646 --> 00:21:51,967
finden Sie hier etwas, worüber Sie gerne nachdenken können.

417
00:21:51,967 --> 00:21:55,242
Erklären Sie, warum Sie, wenn Sie zwei verschiedene Zahlen multiplizieren

418
00:21:55,242 --> 00:21:58,826
– eine gewöhnliche Multiplikation, wie wir sie alle in der Grundschule lernen –,

419
00:21:58,826 --> 00:22:01,924
im Grunde eine Faltung zwischen den Ziffern dieser Zahlen durchführen.

420
00:22:01,924 --> 00:22:05,043
Es gibt einige zusätzliche Schritte mit Überträgen und dergleichen,

421
00:22:05,043 --> 00:22:06,785
aber der Kernschritt ist eine Faltung.

422
00:22:06,785 --> 00:22:10,191
Angesichts der Existenz eines schnellen Algorithmus bedeutet das:

423
00:22:10,191 --> 00:22:13,854
Wenn Sie zwei sehr große ganze Zahlen haben, gibt es eine Möglichkeit,

424
00:22:13,854 --> 00:22:18,240
deren Produkt schneller zu finden als die Methode, die wir in der Grundschule lernen.

425
00:22:18,240 --> 00:22:22,963
Das erfordert statt O von n quadrierten Operationen nur O von n log n,

426
00:22:22,963 --> 00:22:25,291
was nicht einmal möglich erscheint.

427
00:22:25,291 --> 00:22:28,742
Der Haken daran ist, dass Ihre Zahlen absolut monströs sein müssen,

428
00:22:28,742 --> 00:22:31,280
bevor dies in der Praxis tatsächlich nützlich ist.

429
00:22:31,280 --> 00:22:34,445
Trotzdem ist es cool, dass es einen solchen Algorithmus gibt.

430
00:22:34,445 --> 00:22:43,017
Als nächstes richten wir unsere Aufmerksamkeit auf den kontinuierlichen

431
00:22:43,017 --> 00:22:50,400
Fall mit besonderem Fokus auf Wahrscheinlichkeitsverteilungen.

