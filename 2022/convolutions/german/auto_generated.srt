1
00:00:00,000 --> 00:00:04,480
Angenommen, ich gebe Ihnen zwei verschiedene Zahlenlisten oder vielleicht zwei verschiedene Funktionen und bitte Sie, über alle Möglichkeiten

2
00:00:04,480 --> 00:00:08,400
nachzudenken, wie Sie diese beiden Listen kombinieren könnten, um eine neue Zahlenliste zu erhalten, oder die beiden

3
00:00:08,400 --> 00:00:14,000
Funktionen kombinieren könnten, um eine neue Funktion zu erhalten . Vielleicht fällt mir eine einfache Möglichkeit

4
00:00:14,000 --> 00:00:18,640
ein, sie einfach Begriff für Begriff zusammenzuzählen. Ebenso können Sie bei den Funktionen alle

5
00:00:18,640 --> 00:00:24,000
entsprechenden Ausgänge hinzufügen. In ähnlicher Weise könnten Sie auch die beiden Listen Term für Term

6
00:00:24,000 --> 00:00:28,720
multiplizieren und dasselbe mit den Funktionen machen. Aber es gibt noch eine andere Art von Kombination, die

7
00:00:28,720 --> 00:00:33,840
ebenso grundlegend ist wie diese beiden, aber viel weniger häufig diskutiert wird und als Faltung bekannt ist.

8
00:00:33,840 --> 00:00:38,240
Aber im Gegensatz zu den beiden vorherigen Fällen ist es nicht einfach etwas, das von einer Operation geerbt wird,

9
00:00:38,240 --> 00:00:43,360
die Sie mit Zahlen durchführen können. Es ist etwas wirklich Neues für den Kontext von Zahlenlisten oder der

10
00:00:43,360 --> 00:00:49,280
Kombination von Funktionen. Sie tauchen überall auf, sie sind in der Bildverarbeitung allgegenwärtig, es ist ein

11
00:00:49,280 --> 00:00:53,760
Kernkonstrukt in der Wahrscheinlichkeitstheorie, sie werden häufig bei der Lösung von Differentialgleichungen verwendet und in einem

12
00:00:53,760 --> 00:00:58,240
Kontext, in dem Sie es mit ziemlicher Sicherheit gesehen haben, wenn nicht Unter diesem Namen versteht

13
00:00:58,240 --> 00:01:03,440
man die Multiplikation zweier Polynome miteinander. Als jemand, der sich mit visuellen Erklärungen beschäftigt, ist das

14
00:01:03,440 --> 00:01:08,800
ein besonders tolles Thema, denn die formelhafte Definition isoliert und ohne Kontext kann etwas einschüchternd

15
00:01:08,800 --> 00:01:14,080
wirken, aber wenn wir uns die Zeit nehmen, wirklich zu entschlüsseln, was sie sagt, und

16
00:01:14,080 --> 00:01:18,800
vorher tatsächlich begründen, warum Sie würden so etwas wollen, es ist eine unglaublich schöne Operation.

17
00:01:18,800 --> 00:01:22,880
Und ich muss zugeben, dass ich bei der Zusammenstellung der Visuals für dieses Projekt tatsächlich etwas

18
00:01:22,880 --> 00:01:26,960
gelernt habe. Im Fall der Faltung zweier verschiedener Funktionen habe ich versucht, mir verschiedene Möglichkeiten auszudenken,

19
00:01:26,960 --> 00:01:30,720
wie Sie sich vorstellen können, was das bedeuten könnte, und bei einer davon hatte ich ein

20
00:01:30,720 --> 00:01:35,840
kleines Aha-Erlebnis, weil ich wusste, warum Normalverteilungen diese Rolle spielen Sie tun es wahrscheinlich, weshalb

21
00:01:35,840 --> 00:01:40,320
es eine so natürliche Form für eine Funktion ist. Aber ich übertreibe es selbst, es gibt

22
00:01:40,320 --> 00:01:44,800
eine Menge Setup dafür. In diesem Video liegt unser Hauptaugenmerk nur auf dem diskreten Fall

23
00:01:44,800 --> 00:01:49,920
und insbesondere auf der Entwicklung eines sehr unerwarteten, aber sehr cleveren Algorithmus zur Berechnung dieser Fälle.

24
00:01:49,920 --> 00:01:54,400
Und ich werde die Diskussion für den fortlaufenden Fall in einen zweiten Teil ausdehnen.

25
00:01:57,840 --> 00:02:03,120
Es ist sehr verlockend, mit den Bildverarbeitungsbeispielen zu beginnen, da sie optisch am faszinierendsten

26
00:02:03,120 --> 00:02:06,880
sind, aber es gibt ein paar Kleinigkeiten, die den Bildverarbeitungsfall weniger repräsentativ für Windungen

27
00:02:06,880 --> 00:02:11,760
insgesamt machen, also beginnen wir stattdessen mit der Wahrscheinlichkeit, und insbesondere eines der einfachsten

28
00:02:11,760 --> 00:02:15,520
Beispiele, über das sicher jeder hier schon einmal in seinem Leben nachgedacht hat, nämlich

29
00:02:15,520 --> 00:02:20,320
ein paar Würfel zu würfeln und herauszufinden, wie hoch die Wahrscheinlichkeit ist, verschiedene

30
00:02:20,320 --> 00:02:25,600
Summen zu sehen. Und man könnte sagen: Kein Problem, kein Problem. Jeder Ihrer beiden Würfel

31
00:02:25,600 --> 00:02:31,600
hat sechs verschiedene mögliche Ergebnisse, was uns insgesamt 36 verschiedene mögliche Ergebnispaare ergibt, und wenn

32
00:02:31,600 --> 00:02:35,600
wir sie alle durchsehen, können wir zählen, wie viele Paare eine bestimmte Summe ergeben.

33
00:02:36,240 --> 00:02:41,120
Und wenn man alle Paare so in einem Raster anordnet, ist es eine schöne Sache, dass alle

34
00:02:41,120 --> 00:02:47,040
Paare, die eine konstante Summe haben, entlang einer dieser verschiedenen Diagonalen sichtbar sind. Wenn Sie also einfach zählen,

35
00:02:47,040 --> 00:02:51,920
wie viele auf jeder dieser Diagonalen vorhanden sind, erfahren Sie, wie wahrscheinlich es ist, dass Sie eine bestimmte Summe sehen.

36
00:02:52,880 --> 00:02:57,760
Und ich würde sagen: sehr gut, sehr gut, aber fällt Ihnen eine andere Möglichkeit ein, die gleiche Frage

37
00:02:57,760 --> 00:03:03,120
zu visualisieren? Andere Bilder, die Ihnen in den Sinn kommen, wenn Sie an alle unterschiedlichen Paare denken, die eine bestimmte

38
00:03:03,120 --> 00:03:08,800
Summe haben? Und vielleicht hebt einer von euch die Hand und sagt: „Ja, ich habe eine.“ Nehmen wir an, Sie stellen

39
00:03:08,800 --> 00:03:14,560
sich diese beiden unterschiedlichen Kombinationen von Möglichkeiten jeweils hintereinander vor, drehen aber die zweite Reihe um. Auf diese

40
00:03:14,560 --> 00:03:20,160
Weise richten sich alle verschiedenen Paare, die insgesamt sieben ergeben, vertikal auf diese Weise aus. Und wenn wir die

41
00:03:20,160 --> 00:03:24,880
untere Reihe ganz nach rechts schieben, dann ist das einzige Paar, das zusammen zwei ergibt, die Schlangenaugen,

42
00:03:24,880 --> 00:03:29,680
das einzige, das ausgerichtet ist. Und wenn ich das über eine Einheit nach rechts verschiebe, sind die Paare, die

43
00:03:29,680 --> 00:03:35,440
ausgerichtet werden, die zwei verschiedenen Paare, die zusammen drei ergeben. Und im Allgemeinen zeigen unterschiedliche Offset-Werte dieses

44
00:03:35,440 --> 00:03:40,320
unteren Arrays, bei dem ich mich zuerst umdrehen musste, alle unterschiedlichen Paare an, die eine bestimmte

45
00:03:40,320 --> 00:03:48,800
Summe haben. Was Wahrscheinlichkeitsfragen betrifft, ist dies immer noch nicht besonders interessant, da

46
00:03:48,800 --> 00:03:53,120
wir lediglich zählen, wie viele Ergebnisse es in jeder dieser Kategorien gibt.

47
00:03:53,120 --> 00:03:57,280
Aber das geschieht unter der impliziten Annahme, dass jedes dieser Gesichter die gleiche Chance hat,

48
00:03:57,280 --> 00:04:02,240
aufzutauchen. Aber was wäre, wenn ich Ihnen sagen würde, dass ich ein spezielles Würfelset habe, das nicht einheitlich ist? Vielleicht hat

49
00:04:02,240 --> 00:04:06,800
der blaue Würfel einen eigenen Zahlensatz, der die Wahrscheinlichkeiten für jedes auftauchende Gesicht beschreibt, und

50
00:04:06,800 --> 00:04:11,920
der rote Würfel hat seinen eigenen, eindeutigen Zahlensatz. Wenn Sie in diesem Fall beispielsweise die Wahrscheinlichkeit,

51
00:04:11,920 --> 00:04:17,360
eine Zwei zu sehen, ermitteln möchten, würden Sie die Wahrscheinlichkeit, dass der blaue Würfel eine Eins ist, mit der

52
00:04:17,360 --> 00:04:22,000
Wahrscheinlichkeit multiplizieren, dass der rote Würfel eine Eins ist. Und um die Wahrscheinlichkeit zu ermitteln, eine Drei

53
00:04:22,000 --> 00:04:26,880
zu sehen, schauen Sie sich die beiden unterschiedlichen Paare an, wo das möglich ist, multiplizieren Sie erneut die

54
00:04:26,880 --> 00:04:32,240
entsprechenden Wahrscheinlichkeiten und addieren Sie dann diese beiden Produkte. Ebenso besteht die Wahrscheinlichkeit, eine Vier

55
00:04:32,240 --> 00:04:36,320
zu sehen, darin, drei verschiedene Paarmöglichkeiten miteinander zu multiplizieren und sie alle zu

56
00:04:36,320 --> 00:04:41,360
addieren. Und um einige Formeln aufzustellen, benennen wir diese oberen Wahrscheinlichkeiten mit a1, a2, a3

57
00:04:41,360 --> 00:04:48,000
usw. und die unteren mit b1, b2, b3 usw. Und im Allgemeinen ist dieser

58
00:04:48,000 --> 00:04:52,080
Prozess, bei dem wir zwei verschiedene Arrays von Zahlen nehmen, das zweite umdrehen und

59
00:04:52,080 --> 00:04:56,160
sie dann mit verschiedenen Offset-Werten aneinanderreihen, eine Reihe paarweiser Produkte nehmen und sie

60
00:04:56,160 --> 00:05:00,960
addieren, das ist einer der ... grundlegende Möglichkeiten, darüber nachzudenken, was eine Faltung ist.

61
00:05:00,960 --> 00:05:08,960
Um es etwas genauer zu formulieren: Durch diesen Prozess haben wir einfach Wahrscheinlichkeiten für das Erkennen von zwei, drei, vier,

62
00:05:08,960 --> 00:05:13,840
so weiter und so weiter bis hin zu 12 generiert, und wir haben sie erhalten, indem wir eine Liste

63
00:05:13,840 --> 00:05:20,080
von Werten, a, und eine andere gemischt haben Werteliste, b. Im Fachjargon würden wir sagen, dass die Faltung dieser

64
00:05:20,080 --> 00:05:25,600
beiden Folgen uns diese neue Folge ergibt, die neue Folge von 11 Werten, von denen jeder wie

65
00:05:25,600 --> 00:05:30,160
eine Summe paarweiser Produkte aussieht. Wenn Sie möchten, können Sie sich die gleiche Operation auch anders

66
00:05:30,160 --> 00:05:36,240
vorstellen: Erstellen Sie zunächst eine Tabelle aller paarweisen Produkte und addieren Sie dann entlang aller

67
00:05:36,240 --> 00:05:41,120
Diagonalen. Auch das ist eine Möglichkeit, diese beiden Zahlenfolgen zu vermischen, um eine neue Folge von 11

68
00:05:41,120 --> 00:05:46,400
Zahlen zu erhalten. Es ist der gleiche Vorgang wie bei den Schiebefenstern, nur eine andere Perspektive.

69
00:05:46,960 --> 00:05:51,280
Wenn Sie es mit einer kleinen Notation versehen, sehen Sie, wie Sie es aufgeschrieben sehen könnten. Die Faltung von a und

70
00:05:51,280 --> 00:05:57,200
b, gekennzeichnet mit diesem kleinen Sternchen, ist eine neue Liste, und das n-te Element dieser Liste sieht aus wie

71
00:05:57,200 --> 00:06:03,440
eine Summe, und diese Summe geht über alle verschiedenen Indexpaare i und j, sodass die Summe von diese

72
00:06:03,440 --> 00:06:09,440
Indizes sind gleich n. Es ist eine Art Übertreibung, aber wenn n zum Beispiel 6 wäre, sind die Paare, die wir durchgehen, 1

73
00:06:09,440 --> 00:06:15,680
und 5, 2 und 4, 3 und 3, 4 und 2, 5 und 1, all die verschiedenen Paare, die sich summieren bis 6.

74
00:06:16,400 --> 00:06:20,640
Aber ehrlich gesagt, egal wie Sie es aufschreiben, die Notation ist zweitrangig gegenüber dem Bild, das Sie

75
00:06:20,640 --> 00:06:26,320
für den Prozess im Kopf haben. Hier hilft es vielleicht, ein supereinfaches Beispiel zu machen, in dem ich Sie

76
00:06:26,320 --> 00:06:32,000
fragen könnte, wie die Faltung der Liste 1, 2, 3 mit der Liste 4, 5, 6 aussieht. Sie könnten sich

77
00:06:32,000 --> 00:06:36,160
vorstellen, beide Listen zu nehmen, die zweite umzudrehen und dann mit dem Deckel ganz

78
00:06:36,160 --> 00:06:41,200
nach links zu beginnen. Dann sind die beiden Werte, die übereinstimmen, 1 und 4, multiplizieren Sie

79
00:06:41,200 --> 00:06:45,680
sie miteinander, und das ergibt unseren ersten Term unserer Ausgabe. Schieben Sie das untere Array um eine Einheit nach rechts.

80
00:06:45,680 --> 00:06:51,840
Die Paare, die ausgerichtet werden, sind 1 und 5 sowie 2 und 4. Multiplizieren Sie diese Paare, addieren Sie sie und

81
00:06:51,840 --> 00:06:57,600
das ergibt 13, den nächsten Eintrag in unserer Ausgabe. Schieben Sie die Dinge noch einmal um, und wir nehmen 1 mal 6,

82
00:06:57,600 --> 00:07:04,400
plus 2 mal 5, plus 3 mal 4, was zufällig 28 ergibt. Noch eine Folie, und wir erhalten 2 mal 6

83
00:07:04,400 --> 00:07:10,000
plus 3 mal 5, und das ergibt 27, und schließlich sieht der letzte Term wie 3 mal 6 aus.

84
00:07:10,560 --> 00:07:14,080
Wenn Sie möchten, können Sie Ihre bevorzugte Programmiersprache und Ihre Lieblingsbibliothek aufrufen, die

85
00:07:14,080 --> 00:07:18,640
verschiedene numerische Operationen enthält, und Sie können bestätigen, dass ich Sie nicht anlüge.

86
00:07:18,640 --> 00:07:24,320
Wenn Sie die Faltung von 1, 2, 3 gegen 4, 5, 6 durchführen, erhalten Sie tatsächlich dieses Ergebnis.

87
00:07:24,880 --> 00:07:29,200
Wir haben einen Fall gesehen, in dem dies eine natürliche und wünschenswerte Operation ist und Wahrscheinlichkeitsverteilungen

88
00:07:29,200 --> 00:07:34,640
addiert, und ein weiteres häufiges Beispiel wäre ein gleitender Durchschnitt. Stellen Sie sich vor, Sie haben eine

89
00:07:34,640 --> 00:07:39,920
lange Liste mit Zahlen und nehmen eine weitere kleinere Liste mit Zahlen, deren Summe alle 1 ergibt. In diesem Fall habe ich

90
00:07:39,920 --> 00:07:45,280
nur eine kleine Liste mit 5 Werten, und sie entsprechen alle einem Fünftel. Wenn wir dann diesen Gleitfenster-Faltungsprozess durchführen

91
00:07:45,280 --> 00:07:49,760
und sozusagen die Augen schließen und unter den Teppich kehren, was ganz am Anfang passiert,

92
00:07:50,560 --> 00:07:55,120
denken wir darüber nach, was die einzelnen Begriffe darin sind, sobald sich unsere kleinere Liste von

93
00:07:55,680 --> 00:08:01,120
Werten vollständig mit der größeren überschneidet Faltung bedeutet wirklich. Bei jeder Iteration multiplizieren Sie

94
00:08:01,120 --> 00:08:06,400
jeden Wert Ihrer Daten mit 1/5 und addieren sie alle. Das heißt, Sie

95
00:08:06,400 --> 00:08:12,080
bilden einen Durchschnitt Ihrer Daten in diesem kleinen Fenster. Insgesamt erhalten Sie durch

96
00:08:12,080 --> 00:08:16,800
den Prozess eine geglättete Version der Originaldaten, und Sie können diese ändern, indem Sie mit einer anderen

97
00:08:16,800 --> 00:08:21,280
kleinen Liste von Zahlen beginnen. Solange diese kleine Liste alle 1 ergibt, können Sie sie immer

98
00:08:21,280 --> 00:08:25,840
noch als Verschiebung interpretieren Durchschnitt. In dem hier gezeigten Beispiel würde dieser gleitende Durchschnitt dem

99
00:08:25,840 --> 00:08:30,720
zentralen Wert mehr Gewicht verleihen. Dies führt auch zu einer geglätteten Version der Daten.

100
00:08:33,200 --> 00:08:37,840
Wenn Sie eine Art zweidimensionales Analogon davon erstellen, erhalten Sie einen unterhaltsamen Algorithmus zum Verwischen eines

101
00:08:37,840 --> 00:08:43,120
bestimmten Bildes. Und ich sollte sagen, dass die Animationen, die ich zeigen werde, eine Modifikation von etwas sind,

102
00:08:43,120 --> 00:08:48,160
das ich ursprünglich für einen Teil einer Reihe von Vorlesungen gemacht habe, die ich mit dem Julia Lab

103
00:08:48,160 --> 00:08:52,320
am MIT für eine bestimmte OpenCourseWare-Klasse gehalten habe, die eine Bildverarbeitungseinheit enthielt. Dort haben wir uns noch ein wenig

104
00:08:52,320 --> 00:08:56,640
mit dem Code hinter all dem befasst. Wenn Sie also neugierig sind, hinterlasse ich Ihnen ein paar Links. Wenn

105
00:08:56,640 --> 00:09:01,440
ich mich aber noch einmal diesem unscharfen Beispiel zuwende, sehe ich, dass ich ein kleines 3x3-Werteraster

106
00:09:01,440 --> 00:09:06,480
habe, das sich entlang unseres Originalbilds bewegt, und wenn wir hineinzoomen, ist jeder dieser Werte

107
00:09:06,480 --> 00:09:11,120
19tel, und das, was ich mache Bei jeder Iteration wird jeder dieser Werte mit dem entsprechenden

108
00:09:11,120 --> 00:09:16,080
Pixel multipliziert, auf dem er liegt. Und natürlich stellen wir uns in der Informatik Farben

109
00:09:16,080 --> 00:09:20,400
als kleine Vektoren mit drei Werten vor, die die roten, grünen und blauen Komponenten darstellen.

110
00:09:20,400 --> 00:09:25,440
Wenn ich all diese kleinen Werte mit 1/9 multipliziere und addiere, erhalten wir einen Durchschnitt

111
00:09:25,440 --> 00:09:30,480
für jeden Farbkanal, und das entsprechende Pixel für das Bild rechts wird als diese Summe

112
00:09:30,480 --> 00:09:36,320
definiert. Der Gesamteffekt, wenn wir dies für jedes einzelne Pixel im Bild tun, besteht darin, dass jedes

113
00:09:36,320 --> 00:09:40,880
einzelne Pixel in alle seine Nachbarn übergeht, wodurch wir eine unschärfere Version als das Original erhalten.

114
00:09:41,680 --> 00:09:46,640
Im Fachjargon würden wir sagen, dass das Bild rechts eine Faltung unseres Originalbildes mit einem

115
00:09:46,640 --> 00:09:52,000
kleinen Werteraster ist. Oder technischer ausgedrückt sollte ich vielleicht sagen, dass es sich um die Faltung mit

116
00:09:52,000 --> 00:09:56,160
einer um 180 Grad gedrehten Version dieses kleinen Werterasters handelt. Es spielt keine Rolle, ob das Gitter

117
00:09:56,160 --> 00:10:00,720
symmetrisch ist, aber man sollte bedenken, dass die Definition einer Faltung, wie sie aus dem rein

118
00:10:00,720 --> 00:10:05,760
mathematischen Kontext übernommen wurde, Sie immer dazu einladen sollte, darüber nachzudenken, das zweite Array umzudrehen.

119
00:10:05,760 --> 00:10:10,240
Wenn wir dies leicht modifizieren, können wir einen viel eleganteren Unschärfeeffekt erzielen, indem wir ein anderes

120
00:10:10,240 --> 00:10:15,920
Werteraster wählen. In diesem Fall habe ich ein kleines 5x5-Raster, aber der Unterschied liegt nicht so sehr in der Größe.

121
00:10:15,920 --> 00:10:19,920
Wenn wir hineinzoomen, bemerken wir, dass der Wert in der Mitte viel größer ist als der Wert an

122
00:10:19,920 --> 00:10:25,360
den Rändern, und der Grund dafür ist, dass sie alle aus einer Glockenkurve, einer sogenannten Gaußschen Verteilung,

123
00:10:25,360 --> 00:10:30,240
entnommen werden. Wenn wir also alle diese Werte mit dem entsprechenden Pixel multiplizieren, auf dem

124
00:10:30,240 --> 00:10:35,200
sie liegen, geben wir dem zentralen Pixel viel mehr Gewicht und den Pixeln am Rand

125
00:10:35,200 --> 00:10:39,920
viel weniger Gewicht. Und genau wie zuvor wird das entsprechende Pixel auf der rechten Seite als diese Summe

126
00:10:39,920 --> 00:10:45,360
definiert. Da wir diesen Vorgang für jedes einzelne Pixel durchführen, entsteht ein Unschärfeeffekt,

127
00:10:45,360 --> 00:10:49,760
der den Eindruck, das Objektiv sei unscharf oder so ähnlich, viel authentischer simuliert.

128
00:10:49,760 --> 00:10:54,960
Aber Unschärfe ist bei weitem nicht das Einzige, was man mit dieser Idee machen kann. Schauen Sie sich zum

129
00:10:54,960 --> 00:10:59,600
Beispiel dieses kleine Werteraster an, das links einige positive und rechts einige negative Zahlen

130
00:10:59,600 --> 00:11:04,480
enthält, die ich jeweils mit Blau und Rot einfärbe. Nehmen Sie sich einen Moment Zeit, um

131
00:11:04,480 --> 00:11:11,680
zu sehen, ob Sie vorhersagen und verstehen können, welche Auswirkungen dies auf das endgültige Bild haben wird. In diesem Fall stelle ich

132
00:11:11,680 --> 00:11:16,560
mir das Bild also nur als Graustufenbild statt als Farbbild vor, sodass jedes Pixel nur durch eine Zahl

133
00:11:16,560 --> 00:11:21,280
statt durch drei dargestellt wird. Und es ist erwähnenswert, dass es bei dieser Faltung möglich

134
00:11:21,280 --> 00:11:26,240
ist, negative Werte zu erhalten. Wenn wir an dieser Stelle beispielsweise hineinzoomen, liegt die linke Hälfte

135
00:11:26,240 --> 00:11:30,960
unseres kleinen Rasters vollständig auf schwarzen Pixeln, was einen Wert von Null hätte, aber die rechte Hälfte

136
00:11:30,960 --> 00:11:35,360
mit negativen Werten liegt alle auf weißen Pixeln, was der Fall wäre einen Wert von eins haben.

137
00:11:36,000 --> 00:11:40,960
Wenn wir also entsprechende Terme multiplizieren und addieren, werden die Ergebnisse sehr negativ sein, und die Art und

138
00:11:40,960 --> 00:11:45,120
Weise, wie ich dies mit dem Bild rechts zeige, besteht darin, negative Werte rot und positive Werte

139
00:11:45,120 --> 00:11:49,520
blau zu färben. Beachten Sie außerdem, dass bei einem Feld mit der gleichen Farbe alles auf

140
00:11:49,520 --> 00:11:55,680
Null geht, da die Summe der Werte in unserem kleinen Raster Null ist. Dies unterscheidet sich

141
00:11:55,680 --> 00:11:59,680
stark von den beiden vorherigen Beispielen, bei denen die Summe unseres kleinen Gitters eins war, was es uns ermöglichte,

142
00:11:59,680 --> 00:12:05,760
es als gleitenden Durchschnitt und damit als Unschärfe zu interpretieren. Alles in allem erkennt dieser kleine Prozess

143
00:12:05,760 --> 00:12:10,240
grundsätzlich alle Abweichungen im Pixelwert, wenn Sie sich von links nach rechts bewegen, und

144
00:12:10,240 --> 00:12:13,760
bietet Ihnen so eine Art Möglichkeit, alle vertikalen Kanten Ihres Bildes zu erfassen.

145
00:12:16,560 --> 00:12:20,960
Und wenn wir das Gitter so drehen, dass es sich von oben nach

146
00:12:20,960 --> 00:12:26,000
unten verändert, werden alle horizontalen Kanten erfasst, was im Fall unseres Bildes

147
00:12:26,000 --> 00:12:31,520
unserer kleinen Tortenkreatur zu einigen ziemlich dämonischen Augen führt. Dieses kleinere Raster wird übrigens

148
00:12:31,520 --> 00:12:36,160
oft als Kernel bezeichnet, und das Schöne daran ist, dass Sie durch die Auswahl eines anderen

149
00:12:36,160 --> 00:12:40,240
Kernels verschiedene Bildverarbeitungseffekte erzielen können, nicht nur die Unschärfe bei der Kantenerkennung, sondern auch Dinge wie das

150
00:12:40,240 --> 00:12:44,800
Schärfen. Für diejenigen unter Ihnen, die von einem Faltungs-Neuronalen Netzwerk gehört haben: Die Idee besteht

151
00:12:44,800 --> 00:12:49,600
darin, mithilfe von Daten herauszufinden, welche Kernel überhaupt vorhanden sein sollten, je nachdem, was

152
00:12:49,600 --> 00:12:55,120
das Neuronale Netzwerk erkennen möchte. Eine andere Sache, die ich vielleicht ansprechen sollte, ist die Länge der

153
00:12:55,120 --> 00:12:59,040
Ausgabe. Bei so etwas wie dem Beispiel des gleitenden Durchschnitts möchten Sie vielleicht erst dann über

154
00:12:59,040 --> 00:13:04,080
die Begriffe nachdenken, wenn beide Fenster vollständig aneinander ausgerichtet sind, oder im Bildverarbeitungsbeispiel möchten Sie vielleicht,

155
00:13:04,080 --> 00:13:09,200
dass die endgültige Ausgabe die gleiche Größe wie das Original hat. Nun erzeugen Faltungen als reine

156
00:13:09,200 --> 00:13:13,920
mathematische Operation immer ein Array, das größer ist als die beiden Arrays, mit denen Sie begonnen

157
00:13:13,920 --> 00:13:17,520
haben, zumindest vorausgesetzt, dass eines davon nicht die Länge eins hat. Beachten Sie jedoch, dass

158
00:13:17,520 --> 00:13:21,440
Sie in bestimmten Informatikkontexten diese Ausgabe häufig absichtlich abschneiden möchten.

159
00:13:21,520 --> 00:13:29,200
Hervorzuheben ist auch, dass sich im Informatikkontext die Vorstellung, den Kernel umzudrehen, bevor man ihn über

160
00:13:29,200 --> 00:13:34,080
das Original laufen lässt, oft wirklich seltsam und einfach unangebracht anfühlt. Beachten Sie jedoch auch hier,

161
00:13:34,080 --> 00:13:38,960
dass dies aus dem reinen Mathematikkontext übernommen wurde, in dem wir uns befanden Ich habe

162
00:13:38,960 --> 00:13:44,000
gesehen, dass es angesichts der Wahrscheinlichkeiten eine unglaublich natürliche Sache ist. Und tatsächlich kann ich Ihnen ein

163
00:13:44,000 --> 00:13:48,480
weiteres rein mathematisches Beispiel zeigen, bei dem sich sogar die Programmierer darum kümmern sollten, weil es die

164
00:13:48,480 --> 00:13:53,760
Türen für einen viel schnelleren Algorithmus zur Berechnung all dieser Punkte öffnet. Um hier einzurichten, was ich unter

165
00:13:53,760 --> 00:13:58,560
„schneller“ verstehe, gehe ich noch einmal zurück und rufe noch einmal etwas Python auf, und ich werde zwei verschiedene,

166
00:13:58,560 --> 00:14:02,880
relativ große Arrays erstellen. Jedes wird hunderttausend zufällige Elemente enthalten und ich werde

167
00:14:02,880 --> 00:14:08,640
die Laufzeit der Faltungsfunktion aus der Numpy-Bibliothek beurteilen. Und in diesem Fall

168
00:14:08,640 --> 00:14:12,800
wird es für mehrere verschiedene Iterationen ausgeführt, versucht, einen Durchschnitt zu finden, und auf diesem Computer sieht es so

169
00:14:12,880 --> 00:14:18,640
aus, als ob der Durchschnitt zumindest bei 4 liegt. 87 Sekunden. Wenn ich dagegen eine andere Funktion

170
00:14:18,640 --> 00:14:24,080
aus der Scipy-Bibliothek namens fftconvolve verwende, die dasselbe ist, nur anders implementiert, dauert

171
00:14:24,080 --> 00:14:30,640
das nur 4. Durchschnittlich 3 Millisekunden, also eine Verbesserung um drei Größenordnungen.

172
00:14:30,640 --> 00:14:34,800
Und auch wenn sie unter einem anderen Namen läuft, liefert sie die gleiche Ausgabe wie die

173
00:14:34,800 --> 00:14:38,880
andere Faltungsfunktion, sie unternimmt lediglich etwas, um die Sache auf eine cleverere Art und Weise anzugehen.

174
00:14:38,880 --> 00:14:46,800
Denken Sie daran, dass ich im Zusammenhang mit dem Wahrscheinlichkeitsbeispiel gesagt habe, dass eine andere Möglichkeit, über die

175
00:14:46,800 --> 00:14:51,520
Faltung nachzudenken, darin besteht, diese Tabelle aller paarweisen Produkte zu erstellen und diese paarweisen Produkte dann entlang der

176
00:14:51,520 --> 00:14:56,560
Diagonalen zu addieren. Es gibt natürlich nichts Spezifisches für die Wahrscheinlichkeit. Wenn Sie zwei verschiedene

177
00:14:56,560 --> 00:15:00,880
Zahlenlisten falten, können Sie es auf diese Weise betrachten. Erstellen Sie eine solche Multiplikationstabelle mit

178
00:15:00,880 --> 00:15:05,520
allen paarweisen Produkten und dann entspricht jede Summe entlang der Diagonale einer Ihrer endgültigen

179
00:15:05,520 --> 00:15:11,680
Ausgaben. Ein Kontext, in dem diese Ansicht besonders natürlich ist, ist die Multiplikation

180
00:15:11,680 --> 00:15:16,240
zweier Polynome. Lassen Sie mich zum Beispiel das kleine Raster, das wir bereits haben, nehmen und die oberen Terme

181
00:15:16,240 --> 00:15:23,920
durch 1, 2x und 3x im Quadrat ersetzen und die anderen Terme durch 4, 5x und 6x im Quadrat ersetzen.

182
00:15:23,920 --> 00:15:27,920
Überlegen Sie nun, was es bedeutet, wenn wir all diese verschiedenen paarweisen Produkte zwischen den beiden

183
00:15:27,920 --> 00:15:32,960
Listen erstellen. Was Sie tun, besteht im Wesentlichen darin, das vollständige Produkt der beiden Polynome, die ich

184
00:15:32,960 --> 00:15:38,240
aufgeschrieben habe, zu entwickeln, und wenn Sie dann entlang der Diagonale addieren, entspricht das dem Sammeln

185
00:15:38,240 --> 00:15:43,920
aller gleichen Terme, was ziemlich ordentlich ist. Ein Polynom zu erweitern und ähnliche Terme zu sammeln, ist

186
00:15:43,920 --> 00:15:50,640
genau das Gleicher Vorgang wie eine Faltung. Aber das ermöglicht uns, etwas ziemlich Cooles zu tun, denn denken

187
00:15:50,640 --> 00:15:55,360
Sie darüber nach, was wir hier sagen. Wir sagen, wenn Sie zwei verschiedene Funktionen nehmen und sie

188
00:15:55,360 --> 00:16:00,560
miteinander multiplizieren, was eine einfache punktweise Operation ist, ist das dasselbe, als ob Sie zuerst die

189
00:16:00,560 --> 00:16:05,920
Koeffizienten aus jeder einzelnen dieser Funktionen extrahiert hätten, vorausgesetzt, es handelt sich um Polynome, und dann eine

190
00:16:05,920 --> 00:16:11,840
Faltung dieser Funktionen vorgenommen hätten zwei Koeffizientenlisten. Was das so interessant macht, ist, dass sich

191
00:16:11,840 --> 00:16:16,560
Faltungen im Prinzip viel komplizierter anfühlen als einfache Multiplikationen, und ich meine nicht nur, dass

192
00:16:16,560 --> 00:16:21,760
sie konzeptionell schwieriger zu bedenken sind, sondern auch, dass rechnerisch mehr Schritte erforderlich sind, um

193
00:16:21,760 --> 00:16:27,040
eine Faltung durchzuführen, als für die Durchführung einer Punktprodukt zweier verschiedener Listen. Nehmen wir zum

194
00:16:27,040 --> 00:16:31,920
Beispiel an, ich habe Ihnen zwei wirklich große Polynome gegeben, sagen wir, jedes mit hundert verschiedenen Koeffizienten.

195
00:16:32,480 --> 00:16:37,520
Wenn Sie sie dann multiplizieren würden, um dieses Produkt zu erweitern, wissen Sie, dass Sie das

196
00:16:37,520 --> 00:16:43,600
gesamte 100 x 100-Raster paarweiser Produkte ausfüllen müssten Führen Sie 10.000 verschiedene Produkte durch, und wenn

197
00:16:43,600 --> 00:16:48,560
Sie dann alle ähnlichen Begriffe entlang der Diagonalen sammeln, ist das ein weiterer Satz von etwa

198
00:16:48,560 --> 00:16:55,200
10.000 Operationen. Allgemeiner ausgedrückt würden wir sagen, dass der Algorithmus O von n im Quadrat ist, was bedeutet, dass für

199
00:16:55,200 --> 00:17:00,560
zwei Listen der Größe n die Art und Weise, wie die Anzahl der Operationen proportional zum Quadrat von n skaliert, ist.

200
00:17:00,560 --> 00:17:06,320
Wenn ich mir andererseits zwei Polynome im Hinblick auf ihre Ausgaben vorstelle, zum Beispiel die Abtastung

201
00:17:06,320 --> 00:17:11,680
ihrer Werte an einer Handvoll Eingaben, dann erfordert ihre Multiplikation nur so viele Operationen wie die Anzahl

202
00:17:11,680 --> 00:17:17,200
der Stichproben, da es sich wiederum um eine punktweise Operation handelt und man bei Polynomen nur die

203
00:17:17,200 --> 00:17:22,400
benötigten Werte benötigt endlich viele Stichproben, um die Koeffizienten wiederherstellen zu können. Zum Beispiel reichen zwei Ausgaben

204
00:17:22,400 --> 00:17:27,920
aus, um ein lineares Polynom eindeutig zu spezifizieren. Drei Ausgaben würden ausreichen, um ein quadratisches Polynom eindeutig zu

205
00:17:27,920 --> 00:17:33,680
spezifizieren. Wenn Sie n unterschiedliche Ausgaben kennen, reicht das im Allgemeinen aus, um ein Polynom mit n

206
00:17:33,680 --> 00:17:38,800
verschiedenen Koeffizienten eindeutig zu spezifizieren, oder wenn Sie es vorziehen, könnten wir das auch Formulieren Sie dies in

207
00:17:38,800 --> 00:17:43,680
der Sprache von Gleichungssystemen. Stellen Sie sich vor, ich sage Ihnen, ich habe ein Polynom, aber ich sage

208
00:17:43,680 --> 00:17:47,840
Ihnen nicht, welche Koeffizienten das sind, das ist Ihnen ein Rätsel. In unserem Beispiel könnten Sie sich

209
00:17:47,840 --> 00:17:52,960
das als das Produkt vorstellen, das wir herauszufinden versuchen, und dann sagen wir Ihnen einfach, was die Ausgaben

210
00:17:52,960 --> 00:17:59,600
dieses Polynoms wären, wenn Sie verschiedene Eingaben wie 0, 1, 2 eingeben würden , 3, so weiter

211
00:17:59,600 --> 00:18:04,800
und so weiter, und ich gebe Ihnen genug, damit Sie so viele Gleichungen wie Unbekannte haben, es handelt

212
00:18:04,800 --> 00:18:09,840
sich sogar um ein lineares Gleichungssystem, das ist also schön und im Prinzip sollte dies zumindest ausreichen,

213
00:18:09,840 --> 00:18:14,880
um die Koeffizienten wiederherzustellen.

214
00:18:14,880 --> 00:18:20,160


215
00:18:20,160 --> 00:18:26,560


216
00:18:26,560 --> 00:18:32,720


217
00:18:32,720 --> 00:18:38,000


218
00:18:38,000 --> 00:18:43,120


219
00:18:43,120 --> 00:18:47,760


220
00:18:47,760 --> 00:18:53,520


221
00:18:53,520 --> 00:18:58,400


222
00:18:58,400 --> 00:19:04,240


223
00:19:04,240 --> 00:19:09,200


224
00:19:09,200 --> 00:19:13,600


225
00:19:13,600 --> 00:19:18,720


226
00:19:18,720 --> 00:19:23,840


227
00:19:23,840 --> 00:19:30,080


228
00:19:30,080 --> 00:19:34,400


229
00:19:34,400 --> 00:19:41,600


230
00:19:41,600 --> 00:19:46,480


231
00:19:46,480 --> 00:19:51,360


232
00:19:51,360 --> 00:19:57,600


233
00:19:57,600 --> 00:20:03,200


234
00:20:03,200 --> 00:20:08,160


235
00:20:08,160 --> 00:20:12,640


236
00:20:12,640 --> 00:20:17,520


237
00:20:17,520 --> 00:20:22,720


238
00:20:22,720 --> 00:20:28,320


239
00:20:28,320 --> 00:20:33,040


240
00:20:33,040 --> 00:20:38,080


241
00:20:38,080 --> 00:20:43,600


242
00:20:43,600 --> 00:20:48,640


243
00:20:48,640 --> 00:20:53,200


244
00:20:53,200 --> 00:20:58,960


245
00:20:58,960 --> 00:21:03,280


246
00:21:03,280 --> 00:21:08,960


247
00:21:08,960 --> 00:21:14,480


248
00:21:14,480 --> 00:21:18,480


249
00:21:18,480 --> 00:21:25,600


250
00:21:25,600 --> 00:21:30,560


251
00:21:30,560 --> 00:21:35,120


252
00:21:35,120 --> 00:21:39,600


253
00:21:39,600 --> 00:21:44,480


254
00:21:44,480 --> 00:21:50,160


255
00:21:50,160 --> 00:21:54,800


256
00:21:54,800 --> 00:21:59,360


257
00:21:59,360 --> 00:22:04,640


258
00:22:04,640 --> 00:22:10,720


259
00:22:10,720 --> 00:22:16,000


260
00:22:16,000 --> 00:22:20,720


261
00:22:20,720 --> 00:22:26,320


262
00:22:26,320 --> 00:22:31,280


263
00:22:31,280 --> 00:22:36,880


264
00:22:36,880 --> 00:22:51,040


