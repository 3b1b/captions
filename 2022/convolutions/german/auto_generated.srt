1
00:00:00,000 --> 00:00:02,751
Angenommen, ich gebe Ihnen zwei verschiedene Zahlenlisten oder vielleicht zwei 

2
00:00:02,751 --> 00:00:05,433
verschiedene Funktionen und bitte Sie, über alle Möglichkeiten nachzudenken, 

3
00:00:05,433 --> 00:00:08,463
wie Sie diese beiden Listen kombinieren könnten, um eine neue Zahlenliste zu erhalten, 

4
00:00:08,463 --> 00:00:11,320
oder die beiden Funktionen kombinieren könnten, um eine neue Funktion zu erhalten.

5
00:00:12,120 --> 00:00:14,508
Vielleicht fällt mir eine einfache Möglichkeit ein, 

6
00:00:14,508 --> 00:00:16,760
sie einfach Begriff für Begriff zusammenzuzählen.

7
00:00:17,160 --> 00:00:19,920
Ebenso können Sie bei den Funktionen alle entsprechenden Ausgänge hinzufügen.

8
00:00:20,540 --> 00:00:23,025
In ähnlicher Weise könnten Sie auch die beiden Listen Term 

9
00:00:23,025 --> 00:00:25,680
für Term multiplizieren und dasselbe mit den Funktionen machen.

10
00:00:26,360 --> 00:00:28,566
Aber es gibt noch eine andere Art von Kombination, 

11
00:00:28,566 --> 00:00:32,072
die ebenso grundlegend ist wie diese beiden, aber viel weniger häufig diskutiert 

12
00:00:32,072 --> 00:00:33,500
wird und als Faltung bekannt ist.

13
00:00:34,080 --> 00:00:37,006
Aber im Gegensatz zu den beiden vorherigen Fällen ist es nicht einfach etwas, 

14
00:00:37,006 --> 00:00:39,820
das von einer Operation geerbt wird, die Sie mit Zahlen durchführen können.

15
00:00:39,980 --> 00:00:42,315
Es ist etwas wirklich Neues für den Kontext von 

16
00:00:42,315 --> 00:00:44,700
Zahlenlisten oder der Kombination von Funktionen.

17
00:00:45,320 --> 00:00:48,287
Sie tauchen überall auf, sie sind in der Bildverarbeitung allgegenwärtig, 

18
00:00:48,287 --> 00:00:50,694
es ist ein Kernkonstrukt in der Wahrscheinlichkeitstheorie, 

19
00:00:50,694 --> 00:00:53,702
sie werden häufig bei der Lösung von Differentialgleichungen verwendet und 

20
00:00:53,702 --> 00:00:56,630
in einem Kontext, in dem Sie es mit ziemlicher Sicherheit gesehen haben, 

21
00:00:56,630 --> 00:01:00,240
wenn nicht Unter diesem Namen versteht man die Multiplikation zweier Polynome miteinander.

22
00:01:00,740 --> 00:01:03,567
Als jemand, der sich mit visuellen Erklärungen beschäftigt, 

23
00:01:03,567 --> 00:01:07,196
ist das ein besonders tolles Thema, denn die formelhafte Definition isoliert 

24
00:01:07,196 --> 00:01:11,250
und ohne Kontext kann etwas einschüchternd wirken, aber wenn wir uns die Zeit nehmen, 

25
00:01:11,250 --> 00:01:14,785
wirklich zu entschlüsseln, was sie sagt, und vorher tatsächlich begründen, 

26
00:01:14,785 --> 00:01:18,320
warum Sie würden so etwas wollen, es ist eine unglaublich schöne Operation.

27
00:01:18,960 --> 00:01:21,288
Und ich muss zugeben, dass ich bei der Zusammenstellung der 

28
00:01:21,288 --> 00:01:23,540
Visuals für dieses Projekt tatsächlich etwas gelernt habe.

29
00:01:23,540 --> 00:01:26,383
Im Fall der Faltung zweier verschiedener Funktionen habe ich versucht, 

30
00:01:26,383 --> 00:01:29,427
mir verschiedene Möglichkeiten auszudenken, wie Sie sich vorstellen können, 

31
00:01:29,427 --> 00:01:32,672
was das bedeuten könnte, und bei einer davon hatte ich ein kleines Aha-Erlebnis, 

32
00:01:32,672 --> 00:01:36,236
weil ich wusste, warum Normalverteilungen diese Rolle spielen Sie tun es wahrscheinlich, 

33
00:01:36,236 --> 00:01:38,520
weshalb es eine so natürliche Form für eine Funktion ist.

34
00:01:39,020 --> 00:01:41,520
Aber ich übertreibe es selbst, es gibt eine Menge Setup dafür.

35
00:01:41,840 --> 00:01:44,705
In diesem Video liegt unser Hauptaugenmerk nur auf dem diskreten 

36
00:01:44,705 --> 00:01:47,659
Fall und insbesondere auf der Entwicklung eines sehr unerwarteten, 

37
00:01:47,659 --> 00:01:50,260
aber sehr cleveren Algorithmus zur Berechnung dieser Fälle.

38
00:01:50,260 --> 00:01:54,480
Und ich werde die Diskussion für den fortlaufenden Fall in einen zweiten Teil ausdehnen.

39
00:01:58,580 --> 00:02:01,695
Es ist sehr verlockend, mit den Bildverarbeitungsbeispielen zu beginnen, 

40
00:02:01,695 --> 00:02:05,024
da sie optisch am faszinierendsten sind, aber es gibt ein paar Kleinigkeiten, 

41
00:02:05,024 --> 00:02:08,610
die den Bildverarbeitungsfall weniger repräsentativ für Windungen insgesamt machen, 

42
00:02:08,610 --> 00:02:11,085
also beginnen wir stattdessen mit der Wahrscheinlichkeit, 

43
00:02:11,085 --> 00:02:13,219
und insbesondere eines der einfachsten Beispiele, 

44
00:02:13,219 --> 00:02:16,335
über das sicher jeder hier schon einmal in seinem Leben nachgedacht hat, 

45
00:02:16,335 --> 00:02:18,683
nämlich ein paar Würfel zu würfeln und herauszufinden, 

46
00:02:18,683 --> 00:02:21,500
wie hoch die Wahrscheinlichkeit ist, verschiedene Summen zu sehen.

47
00:02:22,460 --> 00:02:24,460
Und man könnte sagen: Kein Problem, kein Problem.

48
00:02:24,680 --> 00:02:28,038
Jeder Ihrer beiden Würfel hat sechs verschiedene mögliche Ergebnisse, 

49
00:02:28,038 --> 00:02:31,157
was uns insgesamt 36 verschiedene mögliche Ergebnispaare ergibt, 

50
00:02:31,157 --> 00:02:33,700
und wenn wir sie alle durchsehen, können wir zählen, 

51
00:02:33,700 --> 00:02:35,860
wie viele Paare eine bestimmte Summe ergeben.

52
00:02:36,600 --> 00:02:39,092
Und wenn man alle Paare so in einem Raster anordnet, 

53
00:02:39,092 --> 00:02:42,618
ist es eine schöne Sache, dass alle Paare, die eine konstante Summe haben, 

54
00:02:42,618 --> 00:02:45,440
entlang einer dieser verschiedenen Diagonalen sichtbar sind.

55
00:02:45,440 --> 00:02:48,925
Wenn Sie also einfach zählen, wie viele auf jeder dieser Diagonalen vorhanden sind, 

56
00:02:48,925 --> 00:02:52,120
erfahren Sie, wie wahrscheinlich es ist, dass Sie eine bestimmte Summe sehen.

57
00:02:53,220 --> 00:02:57,099
Und ich würde sagen: sehr gut, sehr gut, aber fällt Ihnen eine andere Möglichkeit ein, 

58
00:02:57,099 --> 00:02:58,660
die gleiche Frage zu visualisieren?

59
00:02:59,300 --> 00:03:01,660
Andere Bilder, die Ihnen in den Sinn kommen, wenn Sie an alle 

60
00:03:01,660 --> 00:03:04,060
unterschiedlichen Paare denken, die eine bestimmte Summe haben?

61
00:03:04,860 --> 00:03:07,980
Und vielleicht hebt einer von euch die Hand und sagt: „Ja, ich habe eine.

62
00:03:08,280 --> 00:03:11,037
“ Nehmen wir an, Sie stellen sich diese beiden unterschiedlichen Kombinationen 

63
00:03:11,037 --> 00:03:13,760
von Möglichkeiten jeweils hintereinander vor, drehen aber die zweite Reihe um.

64
00:03:13,760 --> 00:03:16,172
Auf diese Weise richten sich alle verschiedenen Paare, 

65
00:03:16,172 --> 00:03:18,760
die insgesamt sieben ergeben, vertikal auf diese Weise aus.

66
00:03:19,360 --> 00:03:22,904
Und wenn wir die untere Reihe ganz nach rechts schieben, dann ist das einzige Paar, 

67
00:03:22,904 --> 00:03:26,280
das zusammen zwei ergibt, die Schlangenaugen, das einzige, das ausgerichtet ist.

68
00:03:26,620 --> 00:03:29,245
Und wenn ich das über eine Einheit nach rechts verschiebe, sind die Paare, 

69
00:03:29,245 --> 00:03:32,080
die ausgerichtet werden, die zwei verschiedenen Paare, die zusammen drei ergeben.

70
00:03:32,880 --> 00:03:36,563
Und im Allgemeinen zeigen unterschiedliche Offset-Werte dieses unteren Arrays, 

71
00:03:36,563 --> 00:03:40,014
bei dem ich mich zuerst umdrehen musste, alle unterschiedlichen Paare an, 

72
00:03:40,014 --> 00:03:41,460
die eine bestimmte Summe haben.

73
00:03:44,820 --> 00:03:48,914
Was Wahrscheinlichkeitsfragen betrifft, ist dies immer noch nicht besonders interessant, 

74
00:03:48,914 --> 00:03:52,640
da wir lediglich zählen, wie viele Ergebnisse es in jeder dieser Kategorien gibt.

75
00:03:52,980 --> 00:03:55,189
Aber das geschieht unter der impliziten Annahme, 

76
00:03:55,189 --> 00:03:58,120
dass jedes dieser Gesichter die gleiche Chance hat, aufzutauchen.

77
00:03:58,360 --> 00:04:00,842
Aber was wäre, wenn ich Ihnen sagen würde, dass ich ein spezielles Würfelset habe, 

78
00:04:00,842 --> 00:04:01,620
das nicht einheitlich ist?

79
00:04:02,060 --> 00:04:04,373
Vielleicht hat der blaue Würfel einen eigenen Zahlensatz, 

80
00:04:04,373 --> 00:04:07,246
der die Wahrscheinlichkeiten für jedes auftauchende Gesicht beschreibt, 

81
00:04:07,246 --> 00:04:09,760
und der rote Würfel hat seinen eigenen, eindeutigen Zahlensatz.

82
00:04:10,299 --> 00:04:13,284
Wenn Sie in diesem Fall beispielsweise die Wahrscheinlichkeit, eine Zwei zu sehen, 

83
00:04:13,284 --> 00:04:15,225
ermitteln möchten, würden Sie die Wahrscheinlichkeit, 

84
00:04:15,225 --> 00:04:18,101
dass der blaue Würfel eine Eins ist, mit der Wahrscheinlichkeit multiplizieren, 

85
00:04:18,101 --> 00:04:19,360
dass der rote Würfel eine Eins ist.

86
00:04:19,360 --> 00:04:22,001
Und um die Wahrscheinlichkeit zu ermitteln, eine Drei zu sehen, 

87
00:04:22,001 --> 00:04:25,139
schauen Sie sich die beiden unterschiedlichen Paare an, wo das möglich ist, 

88
00:04:25,139 --> 00:04:28,565
multiplizieren Sie erneut die entsprechenden Wahrscheinlichkeiten und addieren Sie 

89
00:04:28,565 --> 00:04:29,680
dann diese beiden Produkte.

90
00:04:30,100 --> 00:04:32,924
Ebenso besteht die Wahrscheinlichkeit, eine Vier zu sehen, darin, 

91
00:04:32,924 --> 00:04:36,306
drei verschiedene Paarmöglichkeiten miteinander zu multiplizieren und sie alle 

92
00:04:36,306 --> 00:04:36,820
zu addieren.

93
00:04:36,820 --> 00:04:40,926
Und um einige Formeln aufzustellen, benennen wir diese oberen 

94
00:04:40,926 --> 00:04:45,960
Wahrscheinlichkeiten mit a1, a2, a3 usw. und die unteren mit b1, b2, b3 usw.

95
00:04:46,400 --> 00:04:49,940
Und im Allgemeinen ist dieser Prozess, bei dem wir zwei verschiedene Arrays von 

96
00:04:49,940 --> 00:04:53,481
Zahlen nehmen, das zweite umdrehen und sie dann mit verschiedenen Offset-Werten 

97
00:04:53,481 --> 00:04:56,756
aneinanderreihen, eine Reihe paarweiser Produkte nehmen und sie addieren, 

98
00:04:56,756 --> 00:05:00,740
das ist einer der. grundlegende Möglichkeiten, darüber nachzudenken, was eine Faltung ist.

99
00:05:00,740 --> 00:05:04,896
Um es etwas genauer zu formulieren: Durch diesen Prozess haben wir einfach 

100
00:05:04,896 --> 00:05:08,222
Wahrscheinlichkeiten für das Erkennen von zwei, drei, vier, 

101
00:05:08,222 --> 00:05:12,490
so weiter und so weiter bis hin zu 12 generiert, und wir haben sie erhalten, 

102
00:05:12,490 --> 00:05:16,980
indem wir eine Liste von Werten, a, und eine andere gemischt haben Werteliste, b.

103
00:05:17,440 --> 00:05:20,740
Im Fachjargon würden wir sagen, dass die Faltung dieser beiden 

104
00:05:20,740 --> 00:05:24,197
Folgen uns diese neue Folge ergibt, die neue Folge von 11 Werten, 

105
00:05:24,197 --> 00:05:27,340
von denen jeder wie eine Summe paarweiser Produkte aussieht.

106
00:05:27,340 --> 00:05:31,420
Wenn Sie möchten, können Sie sich die gleiche Operation auch anders vorstellen: 

107
00:05:31,420 --> 00:05:34,582
Erstellen Sie zunächst eine Tabelle aller paarweisen Produkte 

108
00:05:34,582 --> 00:05:36,980
und addieren Sie dann entlang aller Diagonalen.

109
00:05:37,460 --> 00:05:40,721
Auch das ist eine Möglichkeit, diese beiden Zahlenfolgen zu vermischen, 

110
00:05:40,721 --> 00:05:42,760
um eine neue Folge von 11 Zahlen zu erhalten.

111
00:05:43,240 --> 00:05:46,460
Es ist der gleiche Vorgang wie bei den Schiebefenstern, nur eine andere Perspektive.

112
00:05:47,140 --> 00:05:48,443
Wenn Sie es mit einer kleinen Notation versehen, 

113
00:05:48,443 --> 00:05:49,800
sehen Sie, wie Sie es aufgeschrieben sehen könnten.

114
00:05:50,220 --> 00:05:54,087
Die Faltung von a und b, gekennzeichnet mit diesem kleinen Sternchen, 

115
00:05:54,087 --> 00:05:58,562
ist eine neue Liste, und das n-te Element dieser Liste sieht aus wie eine Summe, 

116
00:05:58,562 --> 00:06:02,152
und diese Summe geht über alle verschiedenen Indexpaare i und j, 

117
00:06:02,152 --> 00:06:04,860
sodass die Summe von diese Indizes sind gleich n.

118
00:06:05,280 --> 00:06:08,627
Es ist eine Art Übertreibung, aber wenn n zum Beispiel 6 wäre, 

119
00:06:08,627 --> 00:06:11,974
sind die Paare, die wir durchgehen, 1 und 5, 2 und 4, 3 und 3, 

120
00:06:11,974 --> 00:06:15,800
4 und 2, 5 und 1, all die verschiedenen Paare, die sich summieren bis 6.

121
00:06:16,620 --> 00:06:18,733
Aber ehrlich gesagt, egal wie Sie es aufschreiben, 

122
00:06:18,733 --> 00:06:22,340
die Notation ist zweitrangig gegenüber dem Bild, das Sie für den Prozess im Kopf haben.

123
00:06:23,280 --> 00:06:26,326
Hier hilft es vielleicht, ein supereinfaches Beispiel zu machen, 

124
00:06:26,326 --> 00:06:30,123
in dem ich Sie fragen könnte, wie die Faltung der Liste 1, 2, 3 mit der Liste 4, 

125
00:06:30,123 --> 00:06:30,780
5, 6 aussieht.

126
00:06:31,480 --> 00:06:34,067
Sie könnten sich vorstellen, beide Listen zu nehmen, 

127
00:06:34,067 --> 00:06:37,680
die zweite umzudrehen und dann mit dem Deckel ganz nach links zu beginnen.

128
00:06:38,180 --> 00:06:40,301
Dann sind die beiden Werte, die übereinstimmen, 1 und 4, 

129
00:06:40,301 --> 00:06:43,540
multiplizieren Sie sie miteinander, und das ergibt unseren ersten Term unserer Ausgabe.

130
00:06:43,960 --> 00:06:47,141
Schieben Sie das untere Array um eine Einheit nach rechts. Die Paare, 

131
00:06:47,141 --> 00:06:51,005
die ausgerichtet werden, sind 1 und 5 sowie 2 und 4. Multiplizieren Sie diese Paare, 

132
00:06:51,005 --> 00:06:54,460
addieren Sie sie und das ergibt 13, den nächsten Eintrag in unserer Ausgabe.

133
00:06:54,960 --> 00:06:58,607
Schieben Sie die Dinge noch einmal um, und wir nehmen 1 mal 6, 

134
00:06:58,607 --> 00:07:01,560
plus 2 mal 5, plus 3 mal 4, was zufällig 28 ergibt.

135
00:07:02,020 --> 00:07:05,536
Noch eine Folie, und wir erhalten 2 mal 6 plus 3 mal 5, 

136
00:07:05,536 --> 00:07:10,120
und das ergibt 27, und schließlich sieht der letzte Term wie 3 mal 6 aus.

137
00:07:10,660 --> 00:07:13,419
Wenn Sie möchten, können Sie Ihre bevorzugte Programmiersprache und 

138
00:07:13,419 --> 00:07:16,828
Ihre Lieblingsbibliothek aufrufen, die verschiedene numerische Operationen enthält, 

139
00:07:16,828 --> 00:07:18,980
und Sie können bestätigen, dass ich Sie nicht anlüge.

140
00:07:18,980 --> 00:07:22,247
Wenn Sie die Faltung von 1, 2, 3 gegen 4, 5, 6 durchführen, 

141
00:07:22,247 --> 00:07:24,480
erhalten Sie tatsächlich dieses Ergebnis.

142
00:07:25,920 --> 00:07:28,272
Wir haben einen Fall gesehen, in dem dies eine natürliche und 

143
00:07:28,272 --> 00:07:31,080
wünschenswerte Operation ist und Wahrscheinlichkeitsverteilungen addiert, 

144
00:07:31,080 --> 00:07:33,660
und ein weiteres häufiges Beispiel wäre ein gleitender Durchschnitt.

145
00:07:34,080 --> 00:07:37,023
Stellen Sie sich vor, Sie haben eine lange Liste mit Zahlen und nehmen 

146
00:07:37,023 --> 00:07:39,760
eine weitere kleinere Liste mit Zahlen, deren Summe alle 1 ergibt.

147
00:07:40,100 --> 00:07:42,500
In diesem Fall habe ich nur eine kleine Liste mit 5 Werten, 

148
00:07:42,500 --> 00:07:44,060
und sie entsprechen alle einem Fünftel.

149
00:07:44,060 --> 00:07:47,577
Wenn wir dann diesen Gleitfenster-Faltungsprozess durchführen und sozusagen die 

150
00:07:47,577 --> 00:07:50,874
Augen schließen und unter den Teppich kehren, was ganz am Anfang passiert, 

151
00:07:50,874 --> 00:07:53,688
denken wir darüber nach, was die einzelnen Begriffe darin sind, 

152
00:07:53,688 --> 00:07:57,556
sobald sich unsere kleinere Liste von Werten vollständig mit der größeren überschneidet 

153
00:07:57,556 --> 00:07:58,700
Faltung bedeutet wirklich.

154
00:07:59,400 --> 00:08:05,024
Bei jeder Iteration multiplizieren Sie jeden Wert Ihrer Daten mit 1/5 und addieren sie 

155
00:08:05,024 --> 00:08:10,520
alle. Das heißt, Sie bilden einen Durchschnitt Ihrer Daten in diesem kleinen Fenster.

156
00:08:11,100 --> 00:08:14,477
Insgesamt erhalten Sie durch den Prozess eine geglättete Version der Originaldaten, 

157
00:08:14,477 --> 00:08:17,332
und Sie können diese ändern, indem Sie mit einer anderen kleinen Liste 

158
00:08:17,332 --> 00:08:19,865
von Zahlen beginnen. Solange diese kleine Liste alle 1 ergibt, 

159
00:08:19,865 --> 00:08:22,720
können Sie sie immer noch als Verschiebung interpretieren Durchschnitt.

160
00:08:23,400 --> 00:08:25,560
In dem hier gezeigten Beispiel würde dieser gleitende 

161
00:08:25,560 --> 00:08:27,760
Durchschnitt dem zentralen Wert mehr Gewicht verleihen.

162
00:08:28,420 --> 00:08:30,800
Dies führt auch zu einer geglätteten Version der Daten.

163
00:08:33,140 --> 00:08:35,493
Wenn Sie eine Art zweidimensionales Analogon davon erstellen, 

164
00:08:35,493 --> 00:08:38,720
erhalten Sie einen unterhaltsamen Algorithmus zum Verwischen eines bestimmten Bildes.

165
00:08:38,720 --> 00:08:41,351
Und ich sollte sagen, dass die Animationen, die ich zeigen werde, 

166
00:08:41,351 --> 00:08:44,381
eine Modifikation von etwas sind, das ich ursprünglich für einen Teil einer 

167
00:08:44,381 --> 00:08:47,491
Reihe von Vorlesungen gemacht habe, die ich mit dem Julia Lab am MIT für eine 

168
00:08:47,491 --> 00:08:51,080
bestimmte OpenCourseWare-Klasse gehalten habe, die eine Bildverarbeitungseinheit enthielt.

169
00:08:51,560 --> 00:08:53,988
Dort haben wir uns noch ein wenig mit dem Code hinter all dem befasst. 

170
00:08:53,988 --> 00:08:56,280
Wenn Sie also neugierig sind, hinterlasse ich Ihnen ein paar Links.

171
00:08:56,620 --> 00:09:00,338
Wenn ich mich aber noch einmal diesem unscharfen Beispiel zuwende, sehe ich, 

172
00:09:00,338 --> 00:09:04,685
dass ich ein kleines 3x3-Werteraster habe, das sich entlang unseres Originalbilds bewegt, 

173
00:09:04,685 --> 00:09:07,872
und wenn wir hineinzoomen, ist jeder dieser Werte 19tel, und das, 

174
00:09:07,872 --> 00:09:12,074
was ich mache Bei jeder Iteration wird jeder dieser Werte mit dem entsprechenden Pixel 

175
00:09:12,074 --> 00:09:13,620
multipliziert, auf dem er liegt.

176
00:09:13,900 --> 00:09:17,008
Und natürlich stellen wir uns in der Informatik Farben als kleine Vektoren 

177
00:09:17,008 --> 00:09:20,200
mit drei Werten vor, die die roten, grünen und blauen Komponenten darstellen.

178
00:09:20,560 --> 00:09:24,177
Wenn ich all diese kleinen Werte mit 1/9 multipliziere und addiere, 

179
00:09:24,177 --> 00:09:26,997
erhalten wir einen Durchschnitt für jeden Farbkanal, 

180
00:09:26,997 --> 00:09:31,200
und das entsprechende Pixel für das Bild rechts wird als diese Summe definiert.

181
00:09:31,940 --> 00:09:34,956
Der Gesamteffekt, wenn wir dies für jedes einzelne Pixel im Bild tun, 

182
00:09:34,956 --> 00:09:38,145
besteht darin, dass jedes einzelne Pixel in alle seine Nachbarn übergeht, 

183
00:09:38,145 --> 00:09:40,860
wodurch wir eine unschärfere Version als das Original erhalten.

184
00:09:41,720 --> 00:09:44,558
Im Fachjargon würden wir sagen, dass das Bild rechts eine 

185
00:09:44,558 --> 00:09:47,740
Faltung unseres Originalbildes mit einem kleinen Werteraster ist.

186
00:09:48,140 --> 00:09:50,381
Oder technischer ausgedrückt sollte ich vielleicht sagen, 

187
00:09:50,381 --> 00:09:53,588
dass es sich um die Faltung mit einer um 180 Grad gedrehten Version dieses kleinen 

188
00:09:53,588 --> 00:09:54,400
Werterasters handelt.

189
00:09:54,620 --> 00:09:57,900
Es spielt keine Rolle, ob das Gitter symmetrisch ist, aber man sollte bedenken, 

190
00:09:57,900 --> 00:10:01,590
dass die Definition einer Faltung, wie sie aus dem rein mathematischen Kontext übernommen 

191
00:10:01,590 --> 00:10:05,240
wurde, Sie immer dazu einladen sollte, darüber nachzudenken, das zweite Array umzudrehen.

192
00:10:05,960 --> 00:10:08,567
Wenn wir dies leicht modifizieren, können wir einen viel eleganteren 

193
00:10:08,567 --> 00:10:11,100
Unschärfeeffekt erzielen, indem wir ein anderes Werteraster wählen.

194
00:10:11,440 --> 00:10:13,482
In diesem Fall habe ich ein kleines 5x5-Raster, 

195
00:10:13,482 --> 00:10:15,780
aber der Unterschied liegt nicht so sehr in der Größe.

196
00:10:15,980 --> 00:10:19,285
Wenn wir hineinzoomen, bemerken wir, dass der Wert in der Mitte viel größer 

197
00:10:19,285 --> 00:10:21,808
ist als der Wert an den Rändern, und der Grund dafür ist, 

198
00:10:21,808 --> 00:10:25,200
dass sie alle aus einer Glockenkurve, einer sogenannten Gaußschen Verteilung, 

199
00:10:25,200 --> 00:10:25,940
entnommen werden.

200
00:10:26,800 --> 00:10:30,672
Wenn wir also alle diese Werte mit dem entsprechenden Pixel multiplizieren, 

201
00:10:30,672 --> 00:10:33,730
auf dem sie liegen, geben wir dem zentralen Pixel viel mehr 

202
00:10:33,730 --> 00:10:36,380
Gewicht und den Pixeln am Rand viel weniger Gewicht.

203
00:10:36,800 --> 00:10:38,699
Und genau wie zuvor wird das entsprechende Pixel 

204
00:10:38,699 --> 00:10:40,560
auf der rechten Seite als diese Summe definiert.

205
00:10:41,320 --> 00:10:45,520
Da wir diesen Vorgang für jedes einzelne Pixel durchführen, entsteht ein Unschärfeeffekt, 

206
00:10:45,520 --> 00:10:49,720
der den Eindruck, das Objektiv sei unscharf oder so ähnlich, viel authentischer simuliert.

207
00:10:49,900 --> 00:10:53,360
Aber Unschärfe ist bei weitem nicht das Einzige, was man mit dieser Idee machen kann.

208
00:10:53,800 --> 00:10:56,992
Schauen Sie sich zum Beispiel dieses kleine Werteraster an, 

209
00:10:56,992 --> 00:11:00,664
das links einige positive und rechts einige negative Zahlen enthält, 

210
00:11:00,664 --> 00:11:02,900
die ich jeweils mit Blau und Rot einfärbe.

211
00:11:03,640 --> 00:11:06,531
Nehmen Sie sich einen Moment Zeit, um zu sehen, ob Sie vorhersagen und verstehen können, 

212
00:11:06,531 --> 00:11:08,480
welche Auswirkungen dies auf das endgültige Bild haben wird.

213
00:11:10,720 --> 00:11:14,600
In diesem Fall stelle ich mir das Bild also nur als Graustufenbild statt als Farbbild 

214
00:11:14,600 --> 00:11:18,120
vor, sodass jedes Pixel nur durch eine Zahl statt durch drei dargestellt wird.

215
00:11:18,440 --> 00:11:21,718
Und es ist erwähnenswert, dass es bei dieser Faltung möglich ist, 

216
00:11:21,718 --> 00:11:23,060
negative Werte zu erhalten.

217
00:11:23,060 --> 00:11:25,452
Wenn wir an dieser Stelle beispielsweise hineinzoomen, 

218
00:11:25,452 --> 00:11:28,977
liegt die linke Hälfte unseres kleinen Rasters vollständig auf schwarzen Pixeln, 

219
00:11:28,977 --> 00:11:31,935
was einen Wert von Null hätte, aber die rechte Hälfte mit negativen 

220
00:11:31,935 --> 00:11:35,460
Werten liegt alle auf weißen Pixeln, was der Fall wäre einen Wert von eins haben.

221
00:11:36,180 --> 00:11:38,909
Wenn wir also entsprechende Terme multiplizieren und addieren, 

222
00:11:38,909 --> 00:11:41,681
werden die Ergebnisse sehr negativ sein, und die Art und Weise, 

223
00:11:41,681 --> 00:11:44,064
wie ich dies mit dem Bild rechts zeige, besteht darin, 

224
00:11:44,064 --> 00:11:46,360
negative Werte rot und positive Werte blau zu färben.

225
00:11:46,880 --> 00:11:51,200
Beachten Sie außerdem, dass bei einem Feld mit der gleichen Farbe alles auf Null geht, 

226
00:11:51,200 --> 00:11:54,080
da die Summe der Werte in unserem kleinen Raster Null ist.

227
00:11:55,180 --> 00:11:57,353
Dies unterscheidet sich stark von den beiden vorherigen Beispielen, 

228
00:11:57,353 --> 00:11:59,846
bei denen die Summe unseres kleinen Gitters eins war, was es uns ermöglichte, 

229
00:11:59,846 --> 00:12:02,180
es als gleitenden Durchschnitt und damit als Unschärfe zu interpretieren.

230
00:12:03,640 --> 00:12:07,142
Alles in allem erkennt dieser kleine Prozess grundsätzlich alle Abweichungen 

231
00:12:07,142 --> 00:12:09,826
im Pixelwert, wenn Sie sich von links nach rechts bewegen, 

232
00:12:09,826 --> 00:12:13,920
und bietet Ihnen so eine Art Möglichkeit, alle vertikalen Kanten Ihres Bildes zu erfassen.

233
00:12:16,500 --> 00:12:21,089
Und wenn wir das Gitter so drehen, dass es sich von oben nach unten verändert, 

234
00:12:21,089 --> 00:12:25,505
werden alle horizontalen Kanten erfasst, was im Fall unseres Bildes unserer 

235
00:12:25,505 --> 00:12:29,340
kleinen Tortenkreatur zu einigen ziemlich dämonischen Augen führt.

236
00:12:30,400 --> 00:12:32,794
Dieses kleinere Raster wird übrigens oft als Kernel bezeichnet, 

237
00:12:32,794 --> 00:12:35,301
und das Schöne daran ist, dass Sie durch die Auswahl eines anderen 

238
00:12:35,301 --> 00:12:37,659
Kernels verschiedene Bildverarbeitungseffekte erzielen können, 

239
00:12:37,659 --> 00:12:40,840
nicht nur die Unschärfe bei der Kantenerkennung, sondern auch Dinge wie das Schärfen.

240
00:12:40,840 --> 00:12:44,501
Für diejenigen unter Ihnen, die von einem Faltungs-Neuronalen Netzwerk gehört haben: 

241
00:12:44,501 --> 00:12:47,043
Die Idee besteht darin, mithilfe von Daten herauszufinden, 

242
00:12:47,043 --> 00:12:49,627
welche Kernel überhaupt vorhanden sein sollten, je nachdem, 

243
00:12:49,627 --> 00:12:51,480
was das Neuronale Netzwerk erkennen möchte.

244
00:12:52,760 --> 00:12:55,520
Eine andere Sache, die ich vielleicht ansprechen sollte, ist die Länge der Ausgabe.

245
00:12:55,820 --> 00:12:58,871
Bei so etwas wie dem Beispiel des gleitenden Durchschnitts möchten Sie vielleicht 

246
00:12:58,871 --> 00:13:01,922
erst dann über die Begriffe nachdenken, wenn beide Fenster vollständig aneinander 

247
00:13:01,922 --> 00:13:04,787
ausgerichtet sind, oder im Bildverarbeitungsbeispiel möchten Sie vielleicht, 

248
00:13:04,787 --> 00:13:07,280
dass die endgültige Ausgabe die gleiche Größe wie das Original hat.

249
00:13:07,280 --> 00:13:10,431
Nun erzeugen Faltungen als reine mathematische Operation immer ein Array, 

250
00:13:10,431 --> 00:13:13,326
das größer ist als die beiden Arrays, mit denen Sie begonnen haben, 

251
00:13:13,326 --> 00:13:16,180
zumindest vorausgesetzt, dass eines davon nicht die Länge eins hat.

252
00:13:16,720 --> 00:13:19,345
Beachten Sie jedoch, dass Sie in bestimmten Informatikkontexten 

253
00:13:19,345 --> 00:13:21,520
diese Ausgabe häufig absichtlich abschneiden möchten.

254
00:13:24,720 --> 00:13:27,816
Hervorzuheben ist auch, dass sich im Informatikkontext die Vorstellung, 

255
00:13:27,816 --> 00:13:30,784
den Kernel umzudrehen, bevor man ihn über das Original laufen lässt, 

256
00:13:30,784 --> 00:13:34,483
oft wirklich seltsam und einfach unangebracht anfühlt. Beachten Sie jedoch auch hier, 

257
00:13:34,483 --> 00:13:37,106
dass dies aus dem reinen Mathematikkontext übernommen wurde, 

258
00:13:37,106 --> 00:13:40,805
in dem wir uns befanden Ich habe gesehen, dass es angesichts der Wahrscheinlichkeiten 

259
00:13:40,805 --> 00:13:42,440
eine unglaublich natürliche Sache ist.

260
00:13:43,020 --> 00:13:46,083
Und tatsächlich kann ich Ihnen ein weiteres rein mathematisches Beispiel zeigen, 

261
00:13:46,083 --> 00:13:48,351
bei dem sich sogar die Programmierer darum kümmern sollten, 

262
00:13:48,351 --> 00:13:51,225
weil es die Türen für einen viel schnelleren Algorithmus zur Berechnung all 

263
00:13:51,225 --> 00:13:52,020
dieser Punkte öffnet.

264
00:13:52,620 --> 00:13:54,817
Um hier einzurichten, was ich unter „schneller“ verstehe, 

265
00:13:54,817 --> 00:13:57,355
gehe ich noch einmal zurück und rufe noch einmal etwas Python auf, 

266
00:13:57,355 --> 00:13:59,780
und ich werde zwei verschiedene, relativ große Arrays erstellen.

267
00:13:59,940 --> 00:14:03,712
Jedes wird hunderttausend zufällige Elemente enthalten und ich werde 

268
00:14:03,712 --> 00:14:07,540
die Laufzeit der Faltungsfunktion aus der Numpy-Bibliothek beurteilen.

269
00:14:08,180 --> 00:14:11,128
Und in diesem Fall wird es für mehrere verschiedene Iterationen ausgeführt, 

270
00:14:11,128 --> 00:14:14,270
versucht, einen Durchschnitt zu finden, und auf diesem Computer sieht es so aus, 

271
00:14:14,270 --> 00:14:16,520
als ob der Durchschnitt zumindest bei 4 liegt.87 Sekunden.

272
00:14:16,960 --> 00:14:21,585
Wenn ich dagegen eine andere Funktion aus der Scipy-Bibliothek namens fftconvolve 

273
00:14:21,585 --> 00:14:24,631
verwende, die dasselbe ist, nur anders implementiert, 

274
00:14:24,631 --> 00:14:27,508
dauert das nur 4.Durchschnittlich 3 Millisekunden, 

275
00:14:27,508 --> 00:14:30,160
also eine Verbesserung um drei Größenordnungen.

276
00:14:30,160 --> 00:14:32,400
Und auch wenn sie unter einem anderen Namen läuft, 

277
00:14:32,400 --> 00:14:35,254
liefert sie die gleiche Ausgabe wie die andere Faltungsfunktion, 

278
00:14:35,254 --> 00:14:39,120
sie unternimmt lediglich etwas, um die Sache auf eine cleverere Art und Weise anzugehen.

279
00:14:42,200 --> 00:14:45,045
Denken Sie daran, dass ich im Zusammenhang mit dem Wahrscheinlichkeitsbeispiel 

280
00:14:45,045 --> 00:14:47,710
gesagt habe, dass eine andere Möglichkeit, über die Faltung nachzudenken, 

281
00:14:47,710 --> 00:14:50,303
darin besteht, diese Tabelle aller paarweisen Produkte zu erstellen und 

282
00:14:50,303 --> 00:14:52,680
diese paarweisen Produkte dann entlang der Diagonalen zu addieren.

283
00:14:53,660 --> 00:14:55,950
Es gibt natürlich nichts Spezifisches für die Wahrscheinlichkeit. 

284
00:14:55,950 --> 00:14:59,040
Wenn Sie zwei verschiedene Zahlenlisten falten, können Sie es auf diese Weise betrachten.

285
00:14:59,040 --> 00:15:02,794
Erstellen Sie eine solche Multiplikationstabelle mit allen paarweisen Produkten und 

286
00:15:02,794 --> 00:15:06,460
dann entspricht jede Summe entlang der Diagonale einer Ihrer endgültigen Ausgaben.

287
00:15:07,600 --> 00:15:10,730
Ein Kontext, in dem diese Ansicht besonders natürlich ist, 

288
00:15:10,730 --> 00:15:12,800
ist die Multiplikation zweier Polynome.

289
00:15:13,300 --> 00:15:16,974
Lassen Sie mich zum Beispiel das kleine Raster, das wir bereits haben, 

290
00:15:16,974 --> 00:15:20,442
nehmen und die oberen Terme durch 1, 2x und 3x im Quadrat ersetzen 

291
00:15:20,442 --> 00:15:23,600
und die anderen Terme durch 4, 5x und 6x im Quadrat ersetzen.

292
00:15:24,000 --> 00:15:26,650
Überlegen Sie nun, was es bedeutet, wenn wir all diese verschiedenen 

293
00:15:26,650 --> 00:15:28,840
paarweisen Produkte zwischen den beiden Listen erstellen.

294
00:15:29,040 --> 00:15:33,318
Was Sie tun, besteht im Wesentlichen darin, das vollständige Produkt der beiden Polynome, 

295
00:15:33,318 --> 00:15:36,836
die ich aufgeschrieben habe, zu entwickeln, und wenn Sie dann entlang der 

296
00:15:36,836 --> 00:15:40,117
Diagonale addieren, entspricht das dem Sammeln aller gleichen Terme, 

297
00:15:40,117 --> 00:15:44,158
was ziemlich ordentlich ist. Ein Polynom zu erweitern und ähnliche Terme zu sammeln, 

298
00:15:44,158 --> 00:15:46,440
ist genau das Gleicher Vorgang wie eine Faltung.

299
00:15:47,740 --> 00:15:50,172
Aber das ermöglicht uns, etwas ziemlich Cooles zu tun, 

300
00:15:50,172 --> 00:15:52,340
denn denken Sie darüber nach, was wir hier sagen.

301
00:15:52,340 --> 00:15:55,684
Wir sagen, wenn Sie zwei verschiedene Funktionen nehmen und sie miteinander 

302
00:15:55,684 --> 00:15:59,116
multiplizieren, was eine einfache punktweise Operation ist, ist das dasselbe, 

303
00:15:59,116 --> 00:16:02,372
als ob Sie zuerst die Koeffizienten aus jeder einzelnen dieser Funktionen 

304
00:16:02,372 --> 00:16:05,144
extrahiert hätten, vorausgesetzt, es handelt sich um Polynome, 

305
00:16:05,144 --> 00:16:08,840
und dann eine Faltung dieser Funktionen vorgenommen hätten zwei Koeffizientenlisten.

306
00:16:09,620 --> 00:16:12,717
Was das so interessant macht, ist, dass sich Faltungen im Prinzip viel 

307
00:16:12,717 --> 00:16:16,163
komplizierter anfühlen als einfache Multiplikationen, und ich meine nicht nur, 

308
00:16:16,163 --> 00:16:19,085
dass sie konzeptionell schwieriger zu bedenken sind, sondern auch, 

309
00:16:19,085 --> 00:16:22,619
dass rechnerisch mehr Schritte erforderlich sind, um eine Faltung durchzuführen, 

310
00:16:22,619 --> 00:16:25,760
als für die Durchführung einer Punktprodukt zweier verschiedener Listen.

311
00:16:26,319 --> 00:16:30,334
Nehmen wir zum Beispiel an, ich habe Ihnen zwei wirklich große Polynome gegeben, 

312
00:16:30,334 --> 00:16:33,208
sagen wir, jedes mit hundert verschiedenen Koeffizienten. 

313
00:16:33,208 --> 00:16:36,826
Wenn Sie sie dann multiplizieren würden, um dieses Produkt zu erweitern, 

314
00:16:36,826 --> 00:16:40,790
wissen Sie, dass Sie das gesamte 100 x 100-Raster paarweiser Produkte ausfüllen 

315
00:16:40,790 --> 00:16:43,516
müssten Führen Sie 10.000 verschiedene Produkte durch, 

316
00:16:43,516 --> 00:16:47,183
und wenn Sie dann alle ähnlichen Begriffe entlang der Diagonalen sammeln, 

317
00:16:47,183 --> 00:16:49,860
ist das ein weiterer Satz von etwa 10.000 Operationen.

318
00:16:50,700 --> 00:16:54,666
Allgemeiner ausgedrückt würden wir sagen, dass der Algorithmus O von n im Quadrat ist, 

319
00:16:54,666 --> 00:16:57,675
was bedeutet, dass für zwei Listen der Größe n die Art und Weise, 

320
00:16:57,675 --> 00:17:01,140
wie die Anzahl der Operationen proportional zum Quadrat von n skaliert, ist.

321
00:17:01,820 --> 00:17:05,362
Wenn ich mir andererseits zwei Polynome im Hinblick auf ihre Ausgaben vorstelle, 

322
00:17:05,362 --> 00:17:08,293
zum Beispiel die Abtastung ihrer Werte an einer Handvoll Eingaben, 

323
00:17:08,293 --> 00:17:11,748
dann erfordert ihre Multiplikation nur so viele Operationen wie die Anzahl der 

324
00:17:11,748 --> 00:17:15,335
Stichproben, da es sich wiederum um eine punktweise Operation handelt und man bei 

325
00:17:15,335 --> 00:17:18,440
Polynomen nur die benötigten Werte benötigt endlich viele Stichproben, 

326
00:17:18,440 --> 00:17:20,540
um die Koeffizienten wiederherstellen zu können.

327
00:17:20,540 --> 00:17:25,060
Beispielsweise reichen zwei Ausgaben aus, um ein lineares Polynom eindeutig anzugeben.

328
00:17:25,660 --> 00:17:29,400
Drei Ausgaben würden ausreichen, um ein quadratisches Polynom eindeutig zu spezifizieren.

329
00:17:29,640 --> 00:17:33,910
Und im Allgemeinen reicht es aus, wenn Sie n unterschiedliche Ausgaben kennen, 

330
00:17:33,910 --> 00:17:37,640
um ein Polynom mit n verschiedenen Koeffizienten eindeutig anzugeben.

331
00:17:37,780 --> 00:17:40,720
Wenn Sie möchten, können wir dies auch in der Sprache von Gleichungssystemen formulieren.

332
00:17:41,200 --> 00:17:43,611
Stellen Sie sich vor, ich erzähle Ihnen, dass ich ein Polynom habe, 

333
00:17:43,611 --> 00:17:46,520
aber ich sage Ihnen nicht, was die Koeffizienten sind, das ist für Sie ein Rätsel.

334
00:17:46,700 --> 00:17:49,586
In unserem Beispiel könnten Sie sich das als das Produkt vorstellen, 

335
00:17:49,586 --> 00:17:50,800
das wir herausfinden möchten.

336
00:17:50,800 --> 00:17:54,965
Angenommen, ich sage Ihnen einfach, was die Ausgaben dieses Polynoms wären, 

337
00:17:54,965 --> 00:17:58,691
wenn Sie verschiedene Eingaben wie 0, 1, 2, 3 usw. eingeben würden, 

338
00:17:58,691 --> 00:18:03,460
und ich gebe Ihnen genug, damit Sie so viele Gleichungen haben wie Du hast Unbekanntes.

339
00:18:04,140 --> 00:18:07,340
Es handelt sich sogar um ein lineares Gleichungssystem, das ist also schön.

340
00:18:07,780 --> 00:18:10,900
Und im Prinzip sollte dies zumindest ausreichen, um die Koeffizienten wiederherzustellen.

341
00:18:11,740 --> 00:18:13,839
Die grobe Gliederung des Algorithmus wäre also, 

342
00:18:13,839 --> 00:18:17,075
wann immer Sie zwei Zahlenlisten falten möchten, Sie sie so zu behandeln, 

343
00:18:17,075 --> 00:18:19,000
als wären sie Koeffizienten zweier Polynome.

344
00:18:19,420 --> 00:18:22,178
Sie tasten diese Polynome mit genügend Ausgaben ab, 

345
00:18:22,178 --> 00:18:25,944
multiplizieren diese Stichproben punktweise und lösen dann das System, 

346
00:18:25,944 --> 00:18:30,560
um die Koeffizienten wiederherzustellen, um die Faltung durch eine Hintertür zu finden.

347
00:18:31,420 --> 00:18:34,291
Und wie ich es bisher zumindest gesagt habe, könnten sich einige 

348
00:18:34,291 --> 00:18:37,340
von Ihnen zu Recht beschweren: „Grant, das ist ein idiotischer Plan.“

349
00:18:37,580 --> 00:18:41,089
Denn zum einen erfordert die Berechnung all dieser Stichproben für eines 

350
00:18:41,089 --> 00:18:44,936
der uns bekannten Polynome bereits die Größenordnung von n-Quadrat-Operationen, 

351
00:18:44,936 --> 00:18:48,734
ganz zu schweigen davon, dass die Lösung dieses Systems rechnerisch sicherlich 

352
00:18:48,734 --> 00:18:52,100
genauso schwierig sein wird wie die einfache Durchführung der Faltung.

353
00:18:52,600 --> 00:18:56,289
Wir haben also sicher diesen Zusammenhang zwischen Multiplikation und Faltungen, 

354
00:18:56,289 --> 00:19:00,115
aber die ganze Komplexität ergibt sich aus der Übersetzung von einem Standpunkt zum 

355
00:19:00,115 --> 00:19:00,480
anderen.

356
00:19:01,600 --> 00:19:03,538
Aber es gibt einen Trick, und diejenigen unter Ihnen, 

357
00:19:03,538 --> 00:19:06,160
die sich mit Fourier-Transformationen und dem FFT-Algorithmus auskennen, 

358
00:19:06,160 --> 00:19:07,740
werden vielleicht erkennen, wohin das führt.

359
00:19:07,740 --> 00:19:10,036
Wenn Sie mit diesen Themen nicht vertraut sind, könnte das, 

360
00:19:10,036 --> 00:19:12,180
was ich jetzt sagen werde, völlig unerwartet erscheinen.

361
00:19:12,260 --> 00:19:14,011
Seien Sie sich nur darüber im Klaren, dass es bestimmte Wege gibt, 

362
00:19:14,011 --> 00:19:16,180
die Sie in der Mathematik hätten gehen können und die diesen Schritt eher zu einem 

363
00:19:16,180 --> 00:19:16,860
erwarteten Schritt machen.

364
00:19:17,720 --> 00:19:20,360
Im Grunde geht es darum, dass wir hier die Wahlfreiheit haben.

365
00:19:20,540 --> 00:19:24,605
Anstatt eine beliebige Menge von Eingaben wie 0, 1, 2, 3 usw. auszuwerten, 

366
00:19:24,605 --> 00:19:29,049
entscheiden Sie sich dafür, eine ganz speziell ausgewählte Menge komplexer Zahlen 

367
00:19:29,049 --> 00:19:29,700
auszuwerten.

368
00:19:30,240 --> 00:19:33,482
Insbesondere diejenigen, die in gleichmäßigen Abständen auf dem Einheitskreis liegen, 

369
00:19:33,482 --> 00:19:34,840
die sogenannten Wurzeln der Einheit.

370
00:19:35,200 --> 00:19:36,880
Dadurch erhalten wir ein benutzerfreundlicheres System.

371
00:19:38,360 --> 00:19:41,004
Die Grundidee besteht darin, dass das Finden einer Zahl, 

372
00:19:41,004 --> 00:19:44,252
bei der die Leistungsentnahme in dieses Zyklusmuster fällt, bedeutet, 

373
00:19:44,252 --> 00:19:48,242
dass das von uns generierte System in den verschiedenen Begriffen, die Sie berechnen, 

374
00:19:48,242 --> 00:19:51,026
eine große Redundanz aufweist, und indem Sie klug vorgehen, 

375
00:19:51,026 --> 00:19:54,460
wie Wenn Sie diese Redundanz nutzen, können Sie sich viel Arbeit ersparen.

376
00:19:56,020 --> 00:19:59,293
Dieser Satz von Ausgaben, den ich geschrieben habe, hat einen besonderen Namen: 

377
00:19:59,293 --> 00:20:02,280
Er wird als diskrete Fourier-Transformation der Koeffizienten bezeichnet.

378
00:20:02,500 --> 00:20:05,629
Und wenn Sie mehr erfahren möchten, habe ich für denselben Julia-MIT-Kurs 

379
00:20:05,629 --> 00:20:09,140
tatsächlich eine weitere Vorlesung über diskrete Fourier-Transformationen gehalten.

380
00:20:09,220 --> 00:20:12,346
Und es gibt auch ein wirklich hervorragendes Video zum Kanal Reduzierbar, 

381
00:20:12,346 --> 00:20:14,669
in dem es um die schnelle Fourier-Transformation geht, 

382
00:20:14,669 --> 00:20:17,120
einen Algorithmus zur schnelleren Berechnung dieser Werte.

383
00:20:17,480 --> 00:20:20,398
Außerdem hat Veritasium kürzlich ein wirklich gutes Video zu FFTs gemacht, 

384
00:20:20,398 --> 00:20:21,760
Sie haben also viele Möglichkeiten.

385
00:20:22,260 --> 00:20:24,660
Und dieser schnelle Algorithmus ist für uns wirklich der Punkt.

386
00:20:25,120 --> 00:20:27,746
Aufgrund all dieser Redundanz gibt es wiederum eine Methode, 

387
00:20:27,746 --> 00:20:30,373
um von den Koeffizienten zu all diesen Ausgaben zu gelangen, 

388
00:20:30,373 --> 00:20:33,559
wobei Sie statt in der Größenordnung von n quadrierten Operationen in der 

389
00:20:33,559 --> 00:20:36,530
Größenordnung von n-fach dem Logarithmus von n Operationen arbeiten, 

390
00:20:36,530 --> 00:20:39,200
was viel ist viel besser, wenn Sie auf große Listen skalieren.

391
00:20:39,660 --> 00:20:42,540
Und was noch wichtiger ist: Dieser FFT-Algorithmus geht in beide Richtungen.

392
00:20:42,700 --> 00:20:45,480
Außerdem können Sie von den Ausgängen zu den Koeffizienten wechseln.

393
00:20:46,220 --> 00:20:47,583
Wenn wir also alles zusammenfassen, schauen wir 

394
00:20:47,583 --> 00:20:49,060
noch einmal auf unsere Algorithmus-Übersicht zurück.

395
00:20:49,420 --> 00:20:52,689
Nun können wir sagen: Wann immer Sie zwei lange Listen mit Zahlen erhalten 

396
00:20:52,689 --> 00:20:55,959
und deren Faltung durchführen möchten, berechnen Sie zunächst die schnelle 

397
00:20:55,959 --> 00:20:58,139
Fourier-Transformation jeder einzelnen von ihnen, 

398
00:20:58,139 --> 00:21:00,624
was Sie sich im Hinterkopf einfach so vorstellen können, 

399
00:21:00,624 --> 00:21:04,025
sie so zu behandeln Sie sind die Koeffizienten eines Polynoms und bewerten es 

400
00:21:04,025 --> 00:21:06,380
an einer ganz speziell ausgewählten Menge von Punkten.

401
00:21:06,899 --> 00:21:10,138
Dann multiplizieren Sie die beiden Ergebnisse, die Sie gerade erhalten haben, 

402
00:21:10,138 --> 00:21:13,294
punktuell, was sehr schnell geht, und führen Sie dann eine inverse schnelle 

403
00:21:13,294 --> 00:21:16,616
Fourier-Transformation durch. Damit erhalten Sie die hinterlistige Möglichkeit, 

404
00:21:16,616 --> 00:21:18,900
die gesuchte Faltung durch eine Hintertür zu berechnen.

405
00:21:19,040 --> 00:21:22,240
Aber dieses Mal handelt es sich nur um O von n log n Operationen.

406
00:21:23,139 --> 00:21:24,740
Das finde ich wirklich cool!

407
00:21:25,120 --> 00:21:27,740
Dieser sehr spezifische Kontext, in dem Faltungen auftreten, 

408
00:21:27,740 --> 00:21:31,436
bei denen zwei Polynome multipliziert werden, öffnet die Türen für einen Algorithmus, 

409
00:21:31,436 --> 00:21:34,100
der überall dort relevant ist, wo Faltungen auftreten könnten.

410
00:21:34,180 --> 00:21:36,374
Wenn Sie Wahrscheinlichkeitsverteilungen hinzufügen möchten, 

411
00:21:36,374 --> 00:21:39,000
führen Sie eine große Bildverarbeitung durch, was auch immer es sein mag.

412
00:21:39,220 --> 00:21:42,343
Und ich denke, das ist einfach ein gutes Beispiel dafür, warum man aufgeregt sein sollte, 

413
00:21:42,343 --> 00:21:45,154
wenn man sieht, dass eine Operation oder ein Konzept in der Mathematik in vielen 

414
00:21:45,154 --> 00:21:47,480
Bereichen auftaucht, die scheinbar nichts miteinander zu tun haben.

415
00:21:48,480 --> 00:21:49,819
Wenn Sie ein paar Hausaufgaben machen möchten, 

416
00:21:49,819 --> 00:21:51,500
finden Sie hier etwas, worüber Sie gerne nachdenken können.

417
00:21:51,720 --> 00:21:55,094
Erklären Sie, warum Sie, wenn Sie zwei verschiedene Zahlen multiplizieren 

418
00:21:55,094 --> 00:21:58,788
– eine gewöhnliche Multiplikation, wie wir sie alle in der Grundschule lernen –, 

419
00:21:58,788 --> 00:22:01,980
im Grunde eine Faltung zwischen den Ziffern dieser Zahlen durchführen.

420
00:22:02,500 --> 00:22:05,040
Es gibt einige zusätzliche Schritte mit Überträgen und dergleichen, 

421
00:22:05,040 --> 00:22:06,460
aber der Kernschritt ist eine Faltung.

422
00:22:07,280 --> 00:22:10,431
Angesichts der Existenz eines schnellen Algorithmus bedeutet das: 

423
00:22:10,431 --> 00:22:13,821
Wenn Sie zwei sehr große ganze Zahlen haben, gibt es eine Möglichkeit, 

424
00:22:13,821 --> 00:22:17,880
deren Produkt schneller zu finden als die Methode, die wir in der Grundschule lernen.

425
00:22:18,140 --> 00:22:22,681
Das erfordert statt O von n quadrierten Operationen nur O von n log n, 

426
00:22:22,681 --> 00:22:24,920
was nicht einmal möglich erscheint.

427
00:22:25,380 --> 00:22:28,526
Der Haken daran ist, dass Ihre Zahlen absolut monströs sein müssen, 

428
00:22:28,526 --> 00:22:30,840
bevor dies in der Praxis tatsächlich nützlich ist.

429
00:22:31,220 --> 00:22:35,340
Trotzdem ist es cool, dass es einen solchen Algorithmus gibt.

430
00:22:35,340 --> 00:22:37,650
Als nächstes richten wir unsere Aufmerksamkeit auf den kontinuierlichen 

431
00:22:37,650 --> 00:22:39,640
Fall mit besonderem Fokus auf Wahrscheinlichkeitsverteilungen.

