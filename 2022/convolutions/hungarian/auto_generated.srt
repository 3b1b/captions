1
00:00:00,000 --> 00:00:03,961
Tegyük fel, hogy adok neked két különböző számlistát, vagy esetleg két különböző

2
00:00:03,961 --> 00:00:07,922
függvényt, és arra kérlek, gondold végig, hogyan kombinálhatod ezt a két listát,

3
00:00:07,922 --> 00:00:11,737
hogy új számlistát kapj, vagy a két függvény kombinálásával új függvényt kapj.

4
00:00:11,737 --> 00:00:16,267
Talán az egyik egyszerű módszer, ami eszünkbe jut, az, hogy szóról szóra összeadjuk őket.

5
00:00:16,267 --> 00:00:20,050
Hasonlóan a függvényekhez, hozzáadhatja az összes megfelelő kimenetet.

6
00:00:20,050 --> 00:00:23,876
Hasonló módon megszorozhatja a két listát kifejezésenként,

7
00:00:23,876 --> 00:00:26,145
és ugyanezt teheti a függvényekkel.

8
00:00:26,145 --> 00:00:30,111
De van egy másik fajta kombináció, amely ugyanolyan alapvető, mint

9
00:00:30,111 --> 00:00:33,840
a kettő, de sokkal ritkábban tárgyalják, konvolúcióként ismert.

10
00:00:33,840 --> 00:00:37,032
De az előző két esettől eltérően ez nem pusztán

11
00:00:37,032 --> 00:00:39,893
egy számokkal végzett műveletből öröklődik.

12
00:00:39,893 --> 00:00:44,716
Ez valami igazán új a számlisták vagy a függvények kombinálása szempontjából.

13
00:00:44,716 --> 00:00:48,863
Mindenhol megjelennek, mindenütt jelen vannak a képfeldolgozásban, ez a

14
00:00:48,863 --> 00:00:53,701
valószínűségelmélet alapvető konstrukciója, sokat használják differenciálegyenletek

15
00:00:53,701 --> 00:00:58,712
megoldásában, és egy olyan kontextus, ahol szinte biztosan láttad, ha nem ezen a néven

16
00:00:58,712 --> 00:01:00,210
két polinomot összeszoroz.

17
00:01:00,210 --> 00:01:04,720
A vizuális magyarázatokkal foglalkozó emberként ez egy különösen jó téma,

18
00:01:04,720 --> 00:01:09,352
mert a képletes definíció elszigetelten és kontextus nélkül megfélemlítőnek

19
00:01:09,352 --> 00:01:14,106
tűnhet, de ha szánunk időt arra, hogy valóban kibontsuk, amit mond, és előtte

20
00:01:14,106 --> 00:01:18,800
megindítjuk, hogy miért. valami ilyesmit szeretne, hihetetlenül szép művelet.

21
00:01:18,800 --> 00:01:21,370
És be kell vallanom, tanultam egy kicsit, miközben

22
00:01:21,370 --> 00:01:23,436
összeállítottam a projekt látványvilágát.

23
00:01:23,436 --> 00:01:28,476
Két különböző függvény összevonása esetén különböző módokon próbáltam elképzelni, hogy ez

24
00:01:28,476 --> 00:01:33,405
mit jelenthet, és az egyiknél volt egy kis aha pillanatom, hogy miért játsszák a normál

25
00:01:33,405 --> 00:01:38,445
eloszlások azt a szerepet, valószínű, hogy miért olyan természetes alakja egy függvénynek.

26
00:01:38,445 --> 00:01:41,580
De előre haladok, nagyon sok beállítás van ehhez.

27
00:01:41,580 --> 00:01:46,096
Ebben a videóban elsősorban a diszkrét esetre összpontosítunk, és különösen

28
00:01:46,096 --> 00:01:50,196
egy nagyon váratlan, de nagyon okos algoritmusra ezek kiszámításához.

29
00:01:50,196 --> 00:01:57,840
A folyamatos eset vitáját pedig kihúzom egy második részbe.

30
00:01:57,840 --> 00:02:01,564
Nagyon csábító a képfeldolgozási példákkal nyitni, mivel vizuálisan ezek a

31
00:02:01,564 --> 00:02:05,587
legérdekesebbek, de van néhány apróság, ami miatt a képfeldolgozási eset kevésbé

32
00:02:05,587 --> 00:02:09,411
reprezentálja a konvolúciókat összességében, ezért inkább kezdjük a dolgokat

33
00:02:09,411 --> 00:02:13,484
valószínűséggel, és különösen az egyik legegyszerűbb példa, amelyre biztos vagyok

34
00:02:13,484 --> 00:02:17,407
benne, hogy itt mindenki elgondolkodott az élete egy bizonyos pontján, ami egy

35
00:02:17,407 --> 00:02:21,530
pár kockával dobott, és a különböző összegek megtekintésének esélyeinek kitalálása.

36
00:02:21,530 --> 00:02:24,170
És mondhatod, nem probléma, nem probléma.

37
00:02:24,170 --> 00:02:28,420
Mind a két kockádnak hat különböző lehetséges kimenetele van, ami összesen

38
00:02:28,420 --> 00:02:32,273
36 különböző lehetséges kimenetelpárt ad, és ha csak végignézzük az

39
00:02:32,273 --> 00:02:36,240
összeset, meg tudjuk számolni, hogy hány párnak van egy adott összege.

40
00:02:36,240 --> 00:02:40,945
És az összes párt így egy rácsba rendezve, egy nagyon szép dolog az,

41
00:02:40,945 --> 00:02:45,650
hogy az összes állandó összegű pár látható a különböző átlók egyikén.

42
00:02:45,650 --> 00:02:49,265
Tehát egyszerűen csak megszámolja, hány van az egyes átlókon,

43
00:02:49,265 --> 00:02:52,880
megmutatja, mekkora valószínűséggel lát egy bizonyos összeget.

44
00:02:52,880 --> 00:02:58,699
És azt mondanám, nagyon jó, nagyon jó, de tud más módon elképzelni ugyanezt a kérdést?

45
00:02:58,699 --> 00:03:01,176
Egyéb képek, amelyek eszünkbe juthatnak, ha az összes

46
00:03:01,176 --> 00:03:03,744
különálló párra gondolunk, amelyeknek adott összege van?

47
00:03:03,744 --> 00:03:07,550
És lehet, hogy egyikőtök felemeli a kezét, és azt mondja: igen, van egy.

48
00:03:07,550 --> 00:03:10,857
Tegyük fel, hogy ezt a két különböző lehetőségkészletet

49
00:03:10,857 --> 00:03:14,046
egymás után képzeli el, de megfordítja a második sort.

50
00:03:14,046 --> 00:03:18,960
Így az összes különböző pár, amely összesen hét, így függőlegesen sorakozik.

51
00:03:18,960 --> 00:03:22,713
És ha ezt az alsó sort egészen jobbra csúsztatjuk, akkor az egyedülálló

52
00:03:22,713 --> 00:03:26,309
pár, amely kettőt ad, a kígyószemek az egyetlenek, amelyek igazodnak.

53
00:03:26,309 --> 00:03:29,598
És ha ezt egy egységnél jobbra csúsztatom, akkor az egymáshoz

54
00:03:29,598 --> 00:03:32,886
igazodó párok a két különböző pár, amelyek összeadódnak három.

55
00:03:32,886 --> 00:03:35,710
Általánosságban elmondható, hogy ennek az alsó tömbnek a különböző

56
00:03:35,710 --> 00:03:38,576
eltolási értékei, amelyek emlékeznek arra, hogy először meg kellett

57
00:03:38,576 --> 00:03:41,778
fordítanom, felfedik az összes különálló párt, amelyeknek adott összege van.

58
00:03:41,778 --> 00:03:47,253
Ami a valószínűségi kérdéseket illeti, ez még mindig nem különösebben

59
00:03:47,253 --> 00:03:53,120
érdekes, mert csak azt számoljuk, hány eredmény van az egyes kategóriákban.

60
00:03:53,120 --> 00:03:55,411
De ez azzal a burkolt feltételezéssel van így,

61
00:03:55,411 --> 00:03:57,850
hogy minden arcnak egyenlő esélye van felbukkanni.

62
00:03:57,850 --> 00:04:01,897
De mi lenne, ha azt mondanám, hogy van egy speciális kockakészletem, ami nem egységes?

63
00:04:01,897 --> 00:04:05,686
Lehet, hogy a kék kocka saját számkészlettel rendelkezik, amely leírja az egyes arcok

64
00:04:05,686 --> 00:04:09,211
felbukkanásának valószínűségét, a piros kocka pedig saját egyedi számkészlettel

65
00:04:09,211 --> 00:04:09,740
rendelkezik.

66
00:04:09,740 --> 00:04:12,820
Ebben az esetben, ha például azt akarná kitalálni, hogy mekkora

67
00:04:12,820 --> 00:04:16,285
valószínűséggel lát egy kettőt, akkor megszorozná annak valószínűségét,

68
00:04:16,285 --> 00:04:19,895
hogy a kék kocka 1-szerese annak a valószínűségnek, hogy a piros kocka egy.

69
00:04:19,895 --> 00:04:23,149
És annak esélye érdekében, hogy hármast lásson, nézze meg a

70
00:04:23,149 --> 00:04:26,458
két különálló párt, ahol ez lehetséges, és ismét megszorozza

71
00:04:26,458 --> 00:04:29,983
a megfelelő valószínűségeket, majd összeadja ezt a két szorzatot.

72
00:04:29,983 --> 00:04:33,395
Hasonlóképpen, annak az esélye, hogy négyet látunk, három

73
00:04:33,395 --> 00:04:36,748
különböző lehetőségpárt össze kell szorozni és összeadni.

74
00:04:36,748 --> 00:04:40,817
Néhány képlet felállításának szellemében nevezzük el ezeket a felső

75
00:04:40,817 --> 00:04:45,903
valószínűségeket a1, a2, a3 és így tovább, az alsókat pedig b1, b2, b3 és így tovább.

76
00:04:45,903 --> 00:04:49,590
És általában, ez a folyamat, ahol veszünk két különböző számtömböt,

77
00:04:49,590 --> 00:04:53,440
megfordítjuk a másodikat, majd sorba rendezzük őket különböző eltolási

78
00:04:53,440 --> 00:04:57,181
értékekkel, veszünk egy csomó páros szorzatot és összeadjuk őket, ez

79
00:04:57,181 --> 00:05:01,139
az egyik alapvető módja annak, hogy gondolkodjunk arról, mi a konvolúció.

80
00:05:01,139 --> 00:05:05,228
Tehát, hogy egy kicsit pontosabban fogalmazzuk meg, ezen a folyamaton

81
00:05:05,228 --> 00:05:09,316
keresztül csak valószínűségeket generáltunk, hogy kettő, három, négy,

82
00:05:09,316 --> 00:05:13,113
12-ig és 12-ig láthatók legyenek, és ezeket úgy kaptuk meg, hogy

83
00:05:13,113 --> 00:05:17,084
összekevertünk egy értéklistát, a-t és egy másikat. értékjegyzék, b.

84
00:05:17,084 --> 00:05:20,261
A szóhasználatban azt mondanánk, hogy ennek a két sorozatnak a

85
00:05:20,261 --> 00:05:23,539
konvolúciója adja nekünk ezt az új sorozatot, a 11 értékből álló

86
00:05:23,539 --> 00:05:27,120
új sorozatot, amelyek mindegyike páronkénti szorzatok összegének tűnik.

87
00:05:27,120 --> 00:05:31,804
Ha úgy tetszik, egy másik módja annak, hogy ugyanarra a műveletre gondoljon, ha először

88
00:05:31,804 --> 00:05:36,382
hozzon létre egy táblázatot az összes páronkénti szorzatról, majd összeadja az összes

89
00:05:36,382 --> 00:05:36,702
átlót.

90
00:05:36,702 --> 00:05:39,150
Ez egy módja annak, hogy összekeverjük ezt a két

91
00:05:39,150 --> 00:05:42,247
számsorozatot, hogy egy új, 11 számból álló sorozatot kapjunk.

92
00:05:42,247 --> 00:05:46,960
Ez ugyanaz a művelet, mint a tolóablakok gondolták, csak egy másik perspektíva.

93
00:05:46,960 --> 00:05:50,314
Egy kis jelöléssel a következőképpen láthatod leírva.

94
00:05:50,314 --> 00:05:55,143
Az a és b konvolúciója, amelyet ezzel a kis csillaggal jelölünk, egy új lista,

95
00:05:55,143 --> 00:06:00,032
és ennek a lista n-edik eleme összegnek tűnik, és ez az összeg átmegy az összes

96
00:06:00,032 --> 00:06:04,738
különböző indexpáron, az i-n és a j-n, így az ezek az indexek egyenlők n-nel.

97
00:06:04,738 --> 00:06:10,569
Ez amolyan falat, de például ha n 6, akkor a párok, amelyeken átmegyünk, az 1 és

98
00:06:10,569 --> 00:06:16,400
5, 2 és 4, 3 és 3, 4 és 2, 5 és 1, a különböző párok, amelyek összeadódnak. 6-ra.

99
00:06:16,400 --> 00:06:19,850
De őszintén szólva, bárhogyan írja is le, a jelölés másodlagos

100
00:06:19,850 --> 00:06:23,082
fontosságú ahhoz képest, amit a folyamathoz a fejében tart.

101
00:06:23,082 --> 00:06:27,024
Itt talán segít egy szuper egyszerű példa, ahol megkérdezhetem, mi

102
00:06:27,024 --> 00:06:30,967
a konvolúciója az 1. , 2. , 3. listának és a 4. , 5. , 6. listának.

103
00:06:30,967 --> 00:06:34,607
Elképzelheti, hogy mindkét listát felveszi, megfordítja

104
00:06:34,607 --> 00:06:37,857
a másodikat, majd a fedelével kezdi egészen balra.

105
00:06:37,857 --> 00:06:41,100
Ezután az egymáshoz igazodó értékpár 1 és 4, szorozzuk

106
00:06:41,100 --> 00:06:43,813
meg őket, és ez adja a kimenetünk első tagját.

107
00:06:43,813 --> 00:06:47,413
Csúsztassa az alsó tömböt egy egységgel jobbra, az egymáshoz igazodó

108
00:06:47,413 --> 00:06:50,804
párok 1 és 5, valamint 2 és 4, szorozd meg ezeket a párokat, add

109
00:06:50,804 --> 00:06:54,300
össze, és így 13-at kapunk, a következő bejegyzést a kimenetünkben.

110
00:06:54,300 --> 00:06:57,945
Csúsztassa át a dolgokat még egyszer, és 1-szer 6-ot, plusz

111
00:06:57,945 --> 00:07:01,591
2-szer 5-öt, plusz 3-szor 4-et veszünk, ami történetesen 28.

112
00:07:01,591 --> 00:07:06,075
Még egy dia, és 2-szer 6-ot kapunk, plusz 3-szor 5-öt, és így

113
00:07:06,075 --> 00:07:10,560
27-et kapunk, és végül az utolsó tag 3-szor 6-nak fog kinézni.

114
00:07:10,560 --> 00:07:14,732
Ha szeretné, előhívhatja a kedvenc programozási nyelvét, és kedvenc könyvtárát, amely

115
00:07:14,732 --> 00:07:18,807
különféle numerikus műveleteket tartalmaz, és megerősítheti, hogy nem hazudok neked.

116
00:07:18,807 --> 00:07:24,880
Ha az 1, 2, 3 és 4, 5, 6 konvolúcióját felveszi, akkor valóban ezt az eredményt kapja.

117
00:07:24,880 --> 00:07:28,596
Láttunk egy olyan esetet, amikor ez természetes és kívánatos művelet, a

118
00:07:28,596 --> 00:07:32,881
valószínűségi eloszlások összeadásával, egy másik gyakori példa pedig a mozgóátlag.

119
00:07:32,881 --> 00:07:35,781
Képzeld el, hogy van egy hosszú számlistád, és veszel

120
00:07:35,781 --> 00:07:38,788
egy másik kisebb számlistát, amelyek mindegyike 1-et ad.

121
00:07:38,788 --> 00:07:43,381
Ebben az esetben csak van egy kis listám 5 értékből, és mindegyik egyenlő 15-tel.

122
00:07:43,381 --> 00:07:47,241
Aztán ha végrehajtjuk ezt a csúszóablak-konvolúciós folyamatot, és valahogy

123
00:07:47,241 --> 00:07:51,304
becsukjuk a szemünket, és a szőnyeg alá söpörjük azt, ami a legelején történik,

124
00:07:51,304 --> 00:07:55,112
ha a kisebb értéklistánk teljesen átfedésben van a nagyobb értékkel, akkor

125
00:07:55,112 --> 00:07:59,023
gondoljuk át, hogy mi az egyes kifejezések. a konvolúció valóban azt jelenti.

126
00:07:59,023 --> 00:08:05,037
Minden iterációnál megszorozod az adataidból származó értékeket 15-tel, és összeadod

127
00:08:05,037 --> 00:08:10,769
az összeset, ami azt jelenti, hogy ebben a kis ablakban az adatok átlagát veszed.

128
00:08:10,769 --> 00:08:14,878
Összességében a folyamat az eredeti adatok kiegyenlített változatát adja

129
00:08:14,878 --> 00:08:18,875
meg, és ezt módosíthatja egy másik kis számlistával kezdve, és amíg ez

130
00:08:18,875 --> 00:08:22,816
a kis lista összesen 1-et tesz ki, akkor is értelmezheti mozgóképként.

131
00:08:22,816 --> 00:08:25,653
átlagos. Az itt bemutatott példában ez a mozgóátlag

132
00:08:25,653 --> 00:08:27,781
nagyobb súlyt adna a központi értéknek.

133
00:08:27,781 --> 00:08:33,200
Ez egyben az adatok kisimított változatát is eredményezi.

134
00:08:33,200 --> 00:08:35,873
Ha ennek egyfajta kétdimenziós analógját készíti, akkor

135
00:08:35,873 --> 00:08:38,594
egy szórakoztató algoritmust ad egy adott kép elmosására.

136
00:08:38,594 --> 00:08:41,667
És azt kell mondanom, hogy az animációk, amelyeket most mutatok, olyan

137
00:08:41,667 --> 00:08:44,654
módosítások, amelyeket eredetileg egy olyan előadássorozat részeként

138
00:08:44,654 --> 00:08:47,684
készítettem, amelyet a Julia Laborral tartottam az MIT-n egy bizonyos

139
00:08:47,684 --> 00:08:50,887
OpenCourseWare osztály számára, amely képfeldolgozó egységet tartalmazott.

140
00:08:50,887 --> 00:08:53,802
Ott egy kicsit többet tettünk, hogy belemerüljünk az egész mögött

141
00:08:53,802 --> 00:08:56,452
meghúzódó kódba, így ha kíváncsi vagy, hagyok néhány linket.

142
00:08:56,452 --> 00:09:00,597
De visszagondolva erre az elmosódó példára, az történik, hogy megvan ez a

143
00:09:00,597 --> 00:09:04,798
kis 3x3-as értékrács, ami az eredeti képünk mentén halad, és ha nagyítunk,

144
00:09:04,798 --> 00:09:08,831
ezek az értékek mindegyike 19. , és mit csinálok. minden iterációnál az

145
00:09:08,831 --> 00:09:13,312
értékek mindegyikét megszorozza a megfelelő pixellel, amelyik tetején található.

146
00:09:13,312 --> 00:09:16,992
És természetesen az informatikában a színekre úgy gondolunk, mint három értékből

147
00:09:16,992 --> 00:09:20,400
álló kis vektorokra, amelyek a piros, zöld és kék komponenseket képviselik.

148
00:09:20,400 --> 00:09:25,213
Ha ezeket a kis értékeket megszorzom 1 9-eddel, és összeadom őket, akkor az egyes

149
00:09:25,213 --> 00:09:30,144
színcsatornákon átlagot kapunk, és a jobb oldali kép megfelelő pixelét ez az összeg

150
00:09:30,144 --> 00:09:30,966
határozza meg.

151
00:09:30,966 --> 00:09:35,992
Az általános hatás, ahogy ezt a kép minden egyes pixelére tesszük, az, hogy

152
00:09:35,992 --> 00:09:41,680
mindegyik beszivárog az összes szomszédjába, ami az eredetinél homályosabb verziót ad.

153
00:09:41,680 --> 00:09:44,740
A szóhasználatban azt mondanánk, hogy a jobb oldali kép az

154
00:09:44,740 --> 00:09:47,800
eredeti képünk egy kis értékrácsával egybeeső konvolúciója.

155
00:09:47,800 --> 00:09:51,217
Vagy technikailag talán azt kellene mondanom, hogy ez a konvolúció

156
00:09:51,217 --> 00:09:54,430
ennek a kis értékrácsnak a 180 fokkal elforgatott változatával.

157
00:09:54,430 --> 00:09:58,157
Nem mintha az számít, mikor szimmetrikus a rács, de érdemes észben tartani,

158
00:09:58,157 --> 00:10:01,836
hogy a konvolúció definíciója, amint azt a tiszta matematikai kontextusból

159
00:10:01,836 --> 00:10:05,760
örökölte, mindig arra ösztönözze Önt, hogy gondolkodjon el a második tömb körül.

160
00:10:05,760 --> 00:10:08,725
Ha ezt kissé módosítjuk, akkor más értékrács kiválasztásával

161
00:10:08,725 --> 00:10:11,059
sokkal elegánsabb elmosódási hatást érhetünk el.

162
00:10:11,059 --> 00:10:15,920
Ebben az esetben van egy kis 5x5-ös rácsom, de a különbség nem annyira a méret.

163
00:10:15,920 --> 00:10:19,316
Ha ráközelítünk, észrevesszük, hogy a középső érték sokkal nagyobb,

164
00:10:19,316 --> 00:10:22,563
mint a szélek felé eső érték, és ahonnan ez származik, az összes

165
00:10:22,563 --> 00:10:26,010
mintát egy haranggörbéből vettük, amelyet Gauss-eloszlásnak neveznek.

166
00:10:26,010 --> 00:10:31,160
Így amikor ezeket az értékeket megszorozzuk a megfelelő pixellel, amelyik tetején ülnek,

167
00:10:31,160 --> 00:10:36,367
sokkal nagyobb súlyt adunk ennek a központi pixelnek, és sokkal kevésbé a szélén lévőknek.

168
00:10:36,367 --> 00:10:40,373
És csakúgy, mint korábban, a jobb oldali megfelelő pixelt ez az összeg határozza meg.

169
00:10:40,373 --> 00:10:43,313
Mivel ezt a folyamatot minden egyes pixelnél elvégezzük,

170
00:10:43,313 --> 00:10:46,459
elmosódási hatást ad, ami sokkal hitelesebben szimulálja azt

171
00:10:46,459 --> 00:10:49,760
a gondolatot, hogy az objektívet eltünteti vagy valami hasonlót.

172
00:10:49,760 --> 00:10:53,474
De az elmosódás messze nem az egyetlen dolog, amit ezzel az ötlettel tehet.

173
00:10:53,474 --> 00:10:56,638
Például vessünk egy pillantást erre a kis értékrácsra, amely

174
00:10:56,638 --> 00:10:59,958
tartalmaz néhány pozitív számot a bal oldalon és néhány negatív

175
00:10:59,958 --> 00:11:03,071
számot a jobb oldalon, amelyeket kékre és pirosra színezünk.

176
00:11:03,071 --> 00:11:06,451
Szánjon rá egy pillanatot, hogy meg tudja-e jósolni és

177
00:11:06,451 --> 00:11:09,769
megérteni, hogy ez milyen hatással lesz a végső képre.

178
00:11:09,769 --> 00:11:13,786
Tehát ebben az esetben a képre csak szürkeárnyalatosnak fogok gondolni,

179
00:11:13,786 --> 00:11:18,082
nem pedig színesre, tehát minden képpontot három helyett csak egy szám jelöl.

180
00:11:18,082 --> 00:11:20,465
És egy dolog, amit érdemes megjegyezni, az az,

181
00:11:20,465 --> 00:11:23,102
hogy a konvolúció során negatív értékeket kaphatunk.

182
00:11:23,102 --> 00:11:27,364
Például ezen a ponton, ha nagyítunk, a kis rácsunk bal fele teljes egészében

183
00:11:27,364 --> 00:11:31,405
a fekete pixelek tetején helyezkedik el, aminek értéke nulla lenne, de a

184
00:11:31,405 --> 00:11:36,000
negatív értékek jobb fele mind a fehér képpontok tetején található, ami értéke egy.

185
00:11:36,000 --> 00:11:39,456
Tehát ha a megfelelő kifejezéseket megszorozzuk és összeadjuk, az eredmény

186
00:11:39,456 --> 00:11:42,820
nagyon negatív lesz, és ezt a jobb oldali képpel úgy jelenítem meg, hogy

187
00:11:42,820 --> 00:11:46,046
a negatív értékeket pirosra, a pozitív értékeket pedig kékre színezem.

188
00:11:46,046 --> 00:11:50,050
Egy másik dolog, amit észre kell venni, hogy ha egy olyan foltot használ, amely

189
00:11:50,050 --> 00:11:54,554
ugyanolyan színű, akkor minden nullára megy, mivel a mi kis rácsunkban az értékek összege

190
00:11:54,554 --> 00:11:54,854
nulla.

191
00:11:54,854 --> 00:11:58,922
Ez nagyban különbözik az előző két példától, ahol a mi kis rácsunk összege egy

192
00:11:58,922 --> 00:12:02,990
volt, ami lehetővé tette, hogy mozgóátlagként és így elmosódásként értelmezzük.

193
00:12:02,990 --> 00:12:07,440
Összességében ez a kis folyamat alapvetően észleli, hogy hol

194
00:12:07,440 --> 00:12:12,036
van eltérés a pixelértékben, ahogy balról jobbra mozog, és így

195
00:12:12,036 --> 00:12:16,560
egyfajta módot ad a kép függőleges széleinek feltérképezésére.

196
00:12:16,560 --> 00:12:20,835
És hasonlóképpen, ha megforgattuk a rácsot úgy, hogy a felülről

197
00:12:20,835 --> 00:12:25,310
lefelé haladva változik, ez az összes vízszintes élt felveszi, ami

198
00:12:25,310 --> 00:12:29,986
a mi kis pite lényképünk esetében igencsak démoni szemeket eredményez.

199
00:12:29,986 --> 00:12:33,698
Ezt a kisebb rácsot egyébként gyakran kernelnek is nevezik, és itt az a szépség,

200
00:12:33,698 --> 00:12:37,227
hogy egy másik kernel kiválasztásával különböző képfeldolgozási effektusokat

201
00:12:37,227 --> 00:12:40,710
érhet el, nem csak az élészlelés elmosódását, hanem például az élesítést is.

202
00:12:40,710 --> 00:12:44,196
Azok számára, akik hallottak a konvolúciós neurális hálózatról, az az

203
00:12:44,196 --> 00:12:47,782
ötlet, hogy adatokat használjanak annak kiderítésére, hogy mik legyenek

204
00:12:47,782 --> 00:12:51,618
a kernelek, amit az határozza meg, hogy a neurális hálózat mit akar észlelni.

205
00:12:51,618 --> 00:12:55,378
Egy másik dolog, amit talán fel kell emelnem, az a kimenet hossza.

206
00:12:55,378 --> 00:12:59,152
A mozgóátlagos példához hasonló eseteknél előfordulhat, hogy csak akkor érdemes a

207
00:12:59,152 --> 00:13:02,881
kifejezésekre gondolni, amikor mindkét ablak teljesen egymáshoz igazodik, vagy a

208
00:13:02,881 --> 00:13:06,655
képfeldolgozási példában esetleg azt szeretné, hogy a végső kimenet az eredetivel

209
00:13:06,655 --> 00:13:07,760
megegyező méretű legyen.

210
00:13:07,760 --> 00:13:10,568
A konvolúciók, mint pusztán matematikai műveletek, mindig olyan

211
00:13:10,568 --> 00:13:13,289
tömböt hoznak létre, amely nagyobb, mint a két tömb, amellyel

212
00:13:13,289 --> 00:13:16,405
elkezdte, legalábbis feltételezve, hogy az egyiknek nem egy hosszúsága.

213
00:13:16,405 --> 00:13:19,078
Csak tudd, hogy bizonyos számítástechnikai kontextusokban

214
00:13:19,078 --> 00:13:21,520
gyakran akarod szándékosan csonkolni ezt a kimenetet.

215
00:13:21,520 --> 00:13:25,812
Egy másik dolog, amit érdemes kiemelni, hogy számítástechnikai kontextusban

216
00:13:25,812 --> 00:13:29,935
az az elképzelés, hogy a kernelt körül kell forgatni, mielőtt átengednéd

217
00:13:29,935 --> 00:13:34,340
az eredetit, gyakran nagyon furcsának és szükségtelennek tűnik, de ismételten

218
00:13:34,340 --> 00:13:38,745
jegyezzük meg, hogy ez az, amit a tiszta matematikai kontextusból örököltünk.

219
00:13:38,745 --> 00:13:42,530
nagy valószínűséggel látta, hogy ez hihetetlenül természetes dolog.

220
00:13:42,530 --> 00:13:45,858
És tulajdonképpen mutathatok még egy tiszta matematikai példát, ahol

221
00:13:45,858 --> 00:13:49,186
még a programozóknak is törődniük kell ezzel, mert megnyitja a kaput

222
00:13:49,186 --> 00:13:52,370
egy sokkal gyorsabb algoritmus előtt, amely mindezeket kiszámítja.

223
00:13:52,370 --> 00:13:56,018
Ahhoz, hogy beállítsam, mit értek itt gyorsabb alatt, hadd menjek vissza, és húzzak

224
00:13:56,018 --> 00:13:59,579
fel megint egy pythont, és két különböző, viszonylag nagy tömböt fogok létrehozni.

225
00:13:59,579 --> 00:14:03,754
Mindegyikben százezer véletlenszerű elem lesz, és felmérem

226
00:14:03,754 --> 00:14:07,575
a convolve függvény futási idejét a numpy könyvtárból.

227
00:14:07,575 --> 00:14:11,869
És ebben az esetben több különböző iterációra futtatja, megpróbálja megtalálni

228
00:14:11,869 --> 00:14:15,619
az átlagot, és úgy tűnik, ezen a számítógépen legalább 4-es az átlag.

229
00:14:15,619 --> 00:14:16,321
87 másodperc.

230
00:14:16,321 --> 00:14:20,850
Ezzel szemben, ha a scipy könyvtártól eltérő, fftconvolve nevű függvényt

231
00:14:20,850 --> 00:14:26,061
használok, ami ugyanaz, csak másképp van megvalósítva, akkor csak 4-et vesz igénybe.

232
00:14:26,061 --> 00:14:30,640
Átlagosan 3 ezredmásodperc, tehát három nagyságrendű javulás.

233
00:14:30,640 --> 00:14:34,672
És még egyszer, bár más néven repül, ugyanazt a kimenetet adja, mint

234
00:14:34,672 --> 00:14:38,880
a másik convolve függvény, csak tesz valamit, hogy ügyesebben járjon el.

235
00:14:38,880 --> 00:14:43,549
Emlékezzen arra, hogy a valószínűségi példában azt mondtam, hogy a konvolúció

236
00:14:43,549 --> 00:14:48,038
másik módja az volt, hogy létrehozza ezt a táblázatot az összes páronkénti

237
00:14:48,038 --> 00:14:52,528
szorzatról, majd összeadja ezeket a páronkénti szorzatokat az átlók mentén.

238
00:14:52,528 --> 00:14:55,898
Természetesen nincs semmi konkrét a valószínűségre vonatkozóan,

239
00:14:55,898 --> 00:14:59,321
amikor két különböző számlistát von össze, és így gondolhatja át.

240
00:14:59,321 --> 00:15:02,851
Hozzon létre egy ilyen szorzótáblát az összes páronkénti szorzattal,

241
00:15:02,851 --> 00:15:06,381
majd az átló mentén minden összeg megfelel az egyik végső kimenetnek.

242
00:15:06,381 --> 00:15:09,294
Az egyik olyan kontextus, ahol ez a nézet különösen

243
00:15:09,294 --> 00:15:12,431
természetes, az az, amikor két polinomot összeszorozunk.

244
00:15:12,431 --> 00:15:18,055
Például hadd vegyem a már meglévő kis rácsot, és cseréljem le a felső

245
00:15:18,055 --> 00:15:23,920
tagokat 1, 2x és 3x négyzetre, a többi tagot pedig 4, 5x és 6x négyzetre.

246
00:15:23,920 --> 00:15:26,397
Most gondolja át, mit jelent az, amikor ezeket a különböző

247
00:15:26,397 --> 00:15:28,664
páronkénti termékeket hozzuk létre a két lista között.

248
00:15:28,664 --> 00:15:33,090
Amit csinálsz, az lényegében az általam felírt két polinom teljes szorzatának

249
00:15:33,090 --> 00:15:37,517
kiterjesztése, majd amikor összeadod az átló mentén, amely megfelel az összes

250
00:15:37,517 --> 00:15:42,113
hasonló kifejezés összegyűjtésének, ami elég ügyes, egy polinom kiterjesztése és

251
00:15:42,113 --> 00:15:46,937
a hasonló kifejezések összegyűjtése pontosan a ugyanaz a folyamat, mint a konvolúció.

252
00:15:46,937 --> 00:15:49,708
De ez lehetővé teszi számunkra, hogy valami nagyon

253
00:15:49,708 --> 00:15:52,642
menőt tegyünk, mert gondoljunk arra, amit itt mondunk.

254
00:15:52,642 --> 00:15:56,785
Azt mondjuk, ha veszünk két különböző függvényt, és összeszorozzuk őket,

255
00:15:56,785 --> 00:16:01,099
ami egy egyszerű pontszerű művelet, az ugyanaz, mintha először mindegyikből

256
00:16:01,099 --> 00:16:05,242
kivontuk volna az együtthatókat, feltételezve, hogy ezek polinomok, majd

257
00:16:05,242 --> 00:16:08,761
konvolúciót vettünk volna ezekből. az együtthatók két listája.

258
00:16:08,761 --> 00:16:13,316
Az teszi ezt olyan érdekessé, hogy a konvolúciók elvileg sokkal bonyolultabbnak

259
00:16:13,316 --> 00:16:17,757
tűnnek, mint az egyszerű szorzás, és nem csak fogalmilag értem, hogy nehezebb

260
00:16:17,757 --> 00:16:21,913
elgondolkodni rajtuk, hanem számítási szempontból, több lépést igényel a

261
00:16:21,913 --> 00:16:26,070
konvolúció végrehajtása, mint egy két különböző lista pontszerű szorzata.

262
00:16:26,070 --> 00:16:30,855
Például tegyük fel, hogy adtam neked két igazán nagy polinomot, mondjuk mindegyik száz

263
00:16:30,855 --> 00:16:35,640
különböző együtthatóval, akkor ha a szorzás módja ennek a szorzatnak a kibontása volt,

264
00:16:35,640 --> 00:16:40,371
akkor tudod, hogy kitöltöd a teljes 100x100-as páros szorzatok rácsát, amihez szükség

265
00:16:40,371 --> 00:16:45,156
lenne végezzen el 10 000 különböző terméket, majd amikor összegyűjti az összes hasonló

266
00:16:45,156 --> 00:16:49,666
kifejezést az átlók mentén, az egy újabb körülbelül 10 000 műveletből álló halmaz.

267
00:16:49,666 --> 00:16:54,978
Általánosabban a nyelvhasználatban azt mondanánk, hogy az algoritmus n négyzetes

268
00:16:54,978 --> 00:17:00,816
jelentése O két n méretű lista esetén, úgy, hogy a műveletek száma arányos n négyzetével.

269
00:17:00,816 --> 00:17:05,371
Másrészt, ha két polinomra gondolok a kimeneteik szempontjából, például

270
00:17:05,371 --> 00:17:10,243
mintavételezzük az értékeket néhány bemenetnél, akkor a szorzásuk csak annyi

271
00:17:10,243 --> 00:17:15,115
műveletet igényel, ahány minta van, mivel ez ismét egy pontszerű művelet, és

272
00:17:15,115 --> 00:17:20,240
polinomokkal csak annyi kell. véges sok mintát, hogy vissza lehessen állítani az

273
00:17:20,240 --> 00:17:21,126
együtthatókat.

274
00:17:21,126 --> 00:17:25,280
Például két kimenet elegendő egy lineáris polinom egyedi meghatározásához,

275
00:17:25,280 --> 00:17:29,490
három kimenet elegendő lenne egy másodfokú polinom egyedi meghatározásához,

276
00:17:29,490 --> 00:17:33,533
és általában ha n különböző kimenetet ismer, az elegendő egy n különböző

277
00:17:33,533 --> 00:17:37,964
együtthatójú polinom egyedi meghatározásához, vagy ha úgy tetszik, megtehetjük.

278
00:17:37,964 --> 00:17:42,063
Fogalmazd meg ezt az egyenletrendszerek nyelvén. Képzeld el, hogy van egy

279
00:17:42,063 --> 00:17:46,439
polinomom, de nem mondom meg, hogy mik az együtthatók, ezek rejtélyek számodra.

280
00:17:46,439 --> 00:17:50,717
Példánkban ezt úgy gondolhatja, mint a szorzatot, amelyet megpróbálunk kitalálni,

281
00:17:50,717 --> 00:17:54,681
majd tegyük fel, hogy azt mondom, hogy csak megmondom, mik lennének ennek a

282
00:17:54,681 --> 00:17:58,698
polinomnak a kimenetei, ha különféle bemeneteket adna meg, például 0, 1, 2 ,

283
00:17:58,698 --> 00:18:02,819
3, tovább és tovább, és adok neked annyit, hogy annyi egyenleted legyen, ahány

284
00:18:02,819 --> 00:18:06,836
ismeretlened, sőt előfordul, hogy lineáris egyenletrendszer, szóval ez szép,

285
00:18:06,836 --> 00:18:11,061
és elvileg legalább ennyi elég kell, hogy legyen az együtthatók visszanyeréséhez.

