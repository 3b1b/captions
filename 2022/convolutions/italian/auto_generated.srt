1
00:00:00,000 --> 00:00:03,505
Supponiamo che ti dia due diversi elenchi di numeri, o forse due diverse funzioni, 

2
00:00:03,505 --> 00:00:07,180
e ti chieda di pensare a tutti i modi in cui potresti combinare questi due elenchi per 

3
00:00:07,180 --> 00:00:10,855
ottenere un nuovo elenco di numeri, o combinare le due funzioni per ottenere una nuova 

4
00:00:10,855 --> 00:00:11,320
funzione . 

5
00:00:12,120 --> 00:00:16,709
Forse un modo semplice che mi viene in mente è semplicemente sommarli termine per termine.

6
00:00:16,709 --> 00:00:16,760
 

7
00:00:17,160 --> 00:00:19,920
Allo stesso modo con le funzioni è possibile aggiungere tutte le uscite corrispondenti. 

8
00:00:20,540 --> 00:00:23,131
Allo stesso modo, potresti anche moltiplicare i due elenchi 

9
00:00:23,131 --> 00:00:25,680
termine per termine e fare la stessa cosa con le funzioni. 

10
00:00:26,360 --> 00:00:30,395
Ma esiste un altro tipo di combinazione altrettanto fondamentale di entrambi, 

11
00:00:30,395 --> 00:00:33,500
ma molto meno comunemente discussa, nota come convoluzione. 

12
00:00:34,080 --> 00:00:36,838
Ma a differenza dei due casi precedenti, non è qualcosa che è 

13
00:00:36,838 --> 00:00:39,820
semplicemente ereditato da un'operazione che puoi fare sui numeri. 

14
00:00:39,980 --> 00:00:42,340
È qualcosa di veramente nuovo nel contesto di 

15
00:00:42,340 --> 00:00:44,700
elenchi di numeri o combinazioni di funzioni. 

16
00:00:45,320 --> 00:00:48,849
Si presentano ovunque, sono onnipresenti nell'elaborazione delle immagini, 

17
00:00:48,849 --> 00:00:51,673
è un costrutto fondamentale nella teoria della probabilità, 

18
00:00:51,673 --> 00:00:55,392
sono usati molto nella risoluzione di equazioni differenziali e in un contesto 

19
00:00:55,392 --> 00:00:58,310
in cui quasi sicuramente l'hai visto, se non con questo nome, 

20
00:00:58,310 --> 00:01:00,240
sta moltiplicando due polinomi tra loro. 

21
00:01:00,740 --> 00:01:03,096
Come qualcuno nel settore delle spiegazioni visive, 

22
00:01:03,096 --> 00:01:05,452
questo è un argomento particolarmente interessante, 

23
00:01:05,452 --> 00:01:08,895
perché la definizione stereotipata isolata e senza contesto può sembrare un 

24
00:01:08,895 --> 00:01:12,384
po' intimidatoria, ma se ci prendiamo il tempo per scompattare veramente ciò 

25
00:01:12,384 --> 00:01:16,009
che sta dicendo, e prima di motivare effettivamente il perché vorresti qualcosa 

26
00:01:16,009 --> 00:01:18,320
del genere, è un'operazione incredibilmente bella. 

27
00:01:18,960 --> 00:01:21,165
E devo ammettere che in realtà ho imparato qualcosa 

28
00:01:21,165 --> 00:01:23,540
mentre mettevo insieme le immagini per questo progetto. 

29
00:01:23,540 --> 00:01:25,895
Nel caso della convoluzione di due funzioni diverse, 

30
00:01:25,895 --> 00:01:29,718
stavo cercando di pensare a diversi modi in cui potresti immaginare cosa ciò potrebbe 

31
00:01:29,718 --> 00:01:33,185
significare, e con uno di essi ho avuto un piccolo momento ahah sul perché le 

32
00:01:33,185 --> 00:01:36,252
distribuzioni normali svolgono il ruolo che lo fanno in probabilità, 

33
00:01:36,252 --> 00:01:38,520
perché è una forma così naturale per una funzione. 

34
00:01:39,020 --> 00:01:41,520
Ma sto andando troppo avanti, c'è molta preparazione per quello. 

35
00:01:41,840 --> 00:01:45,149
In questo video, il nostro focus principale sarà sul caso discreto, 

36
00:01:45,149 --> 00:01:49,481
e in particolare sulla creazione di un algoritmo molto inaspettato ma molto intelligente 

37
00:01:49,481 --> 00:01:50,260
per calcolarli. 

38
00:01:50,260 --> 00:01:54,480
E tirerò fuori la discussione per il caso continuo in una seconda parte. 

39
00:01:58,580 --> 00:02:02,221
È molto forte la tentazione di aprire con gli esempi di elaborazione delle immagini, 

40
00:02:02,221 --> 00:02:04,406
dal momento che sono visivamente i più intriganti, 

41
00:02:04,406 --> 00:02:08,176
ma ci sono un paio di pignoli che rendono il caso dell'elaborazione delle immagini meno 

42
00:02:08,176 --> 00:02:10,232
rappresentativo delle convoluzioni in generale, 

43
00:02:10,232 --> 00:02:14,088
quindi iniziamo invece con la probabilità, e in particolare uno degli esempi più semplici 

44
00:02:14,088 --> 00:02:17,644
a cui sono sicuro che tutti qui abbiano pensato ad un certo punto della loro vita, 

45
00:02:17,644 --> 00:02:21,500
ovvero lanciare un paio di dadi e calcolare le possibilità di vedere varie somme diverse. 

46
00:02:22,460 --> 00:02:24,460
E potresti dire, non è un problema, non è un problema. 

47
00:02:24,680 --> 00:02:27,925
Ciascuno dei tuoi due dadi ha sei diversi risultati possibili, 

48
00:02:27,925 --> 00:02:31,480
il che ci dà un totale di 36 distinte coppie di risultati possibili, 

49
00:02:31,480 --> 00:02:35,860
e se li esaminiamo tutti possiamo contare quante coppie hanno una determinata somma. 

50
00:02:36,600 --> 00:02:39,446
E disponendo tutte le coppie in una griglia come questa, 

51
00:02:39,446 --> 00:02:43,791
una cosa carina è che tutte le coppie che hanno una somma costante sono visibili lungo 

52
00:02:43,791 --> 00:02:45,440
una di queste diverse diagonali. 

53
00:02:45,440 --> 00:02:48,756
Quindi semplicemente contando quanti ne esistono su ciascuna di quelle 

54
00:02:48,756 --> 00:02:52,120
diagonali ti dirà quanto è probabile che tu veda una somma particolare. 

55
00:02:53,220 --> 00:02:55,844
E direi molto bene, molto bene, ma riesci a pensare ad 

56
00:02:55,844 --> 00:02:58,660
altri modi in cui potresti visualizzare la stessa domanda? 

57
00:02:59,300 --> 00:03:01,616
Altre immagini che possono venirvi in mente pensando a 

58
00:03:01,616 --> 00:03:04,060
tutte le coppie distinte che hanno una determinata somma? 

59
00:03:04,860 --> 00:03:07,980
E forse uno di voi alza la mano e dice: sì, ne ho uno. 

60
00:03:08,280 --> 00:03:12,467
Diciamo che immagini questi due diversi insiemi di possibilità ciascuno in fila, 

61
00:03:12,467 --> 00:03:13,760
ma giri la seconda fila. 

62
00:03:13,760 --> 00:03:16,282
In questo modo tutte le diverse coppie che sommate danno 

63
00:03:16,282 --> 00:03:18,760
fino a sette si allineano verticalmente in questo modo. 

64
00:03:19,360 --> 00:03:22,145
E se facciamo scorrere la riga in basso completamente a destra, 

65
00:03:22,145 --> 00:03:24,974
allora l'unica coppia che sommata dà due, gli occhi di serpente, 

66
00:03:24,974 --> 00:03:26,280
sono gli unici ad allinearsi. 

67
00:03:26,620 --> 00:03:29,206
E se lo sposto su un'unità a destra, le coppie che si 

68
00:03:29,206 --> 00:03:32,080
allineano sono le due coppie diverse che sommate danno tre. 

69
00:03:32,880 --> 00:03:36,222
E in generale, diversi valori di offset di questo array inferiore, 

70
00:03:36,222 --> 00:03:40,512
che ricorda che dovevo prima girarlo, rivelano tutte le coppie distinte che hanno una 

71
00:03:40,512 --> 00:03:41,460
determinata somma. 

72
00:03:44,820 --> 00:03:46,736
Per quanto riguarda le domande sulla probabilità, 

73
00:03:46,736 --> 00:03:48,653
questo non è ancora particolarmente interessante, 

74
00:03:48,653 --> 00:03:51,183
perché tutto ciò che stiamo facendo è contare quanti risultati ci 

75
00:03:51,183 --> 00:03:52,640
sono in ciascuna di queste categorie. 

76
00:03:52,980 --> 00:03:55,528
Ma questo avviene con il presupposto implicito che ci sia 

77
00:03:55,528 --> 00:03:58,120
la stessa possibilità che ciascuno di questi volti emerga. 

78
00:03:58,360 --> 00:04:01,620
E se ti dicessi che ho un set speciale di dadi che non è uniforme? 

79
00:04:02,060 --> 00:04:05,820
Forse il dado blu ha il proprio insieme di numeri che descrivono le probabilità che 

80
00:04:05,820 --> 00:04:09,760
esca ciascuna faccia, e il dado rosso ha il proprio insieme di numeri unico e distinto. 

81
00:04:10,299 --> 00:04:12,639
In tal caso, se volessi calcolare, ad esempio, 

82
00:04:12,639 --> 00:04:15,875
la probabilità di vedere un due, moltiplicheresti la probabilità 

83
00:04:15,875 --> 00:04:19,360
che il dado blu sia uno per la probabilità che il dado rosso sia uno. 

84
00:04:19,360 --> 00:04:24,320
E per le probabilità di vedere un tre, guardi le due coppie distinte dove è possibile, 

85
00:04:24,320 --> 00:04:27,342
e ancora, moltiplichi le probabilità corrispondenti, 

86
00:04:27,342 --> 00:04:29,680
e poi sommi questi due prodotti insieme. 

87
00:04:30,100 --> 00:04:33,668
Allo stesso modo, le possibilità di vedere un quattro implicano moltiplicare 

88
00:04:33,668 --> 00:04:36,820
insieme tre diverse coppie di possibilità e sommarle tutte insieme. 

89
00:04:36,820 --> 00:04:41,858
E nello spirito di impostare alcune formule, chiamiamo queste probabilità massime a1, 

90
00:04:41,858 --> 00:04:45,960
a2, a3 e così via, e chiamiamo quelle in basso b1, b2, b3 e così via. 

91
00:04:46,400 --> 00:04:50,310
E in generale, questo processo, in cui prendiamo due diversi array di numeri, 

92
00:04:50,310 --> 00:04:54,171
capovolgiamo il secondo e poi li allineiamo a vari valori di offset diversi, 

93
00:04:54,171 --> 00:04:56,929
prendendo un gruppo di prodotti a coppie e sommandoli, 

94
00:04:56,929 --> 00:05:00,740
questo è uno dei Modi fondamentali per pensare a cosa sia una convoluzione. 

95
00:05:00,740 --> 00:05:05,858
Quindi, giusto per spiegarlo un po' più esattamente, attraverso questo processo, 

96
00:05:05,858 --> 00:05:10,850
abbiamo appena generato le probabilità di vedere due, tre, quattro, fino a 12, 

97
00:05:10,850 --> 00:05:14,768
e le abbiamo ottenute mescolando insieme una lista di valori, 

98
00:05:14,768 --> 00:05:16,980
a e un'altra elenco dei valori, b. 

99
00:05:17,440 --> 00:05:20,740
Nel gergo, diremmo che la convoluzione di queste due sequenze 

100
00:05:20,740 --> 00:05:23,986
ci dà questa nuova sequenza, la nuova sequenza di 11 valori, 

101
00:05:23,986 --> 00:05:27,340
ognuno dei quali assomiglia ad una somma di prodotti a coppie. 

102
00:05:27,340 --> 00:05:31,995
Se preferisci, un altro modo in cui potresti pensare alla stessa operazione è creare 

103
00:05:31,995 --> 00:05:36,925
prima una tabella di tutti i prodotti a coppie e poi sommare lungo tutte queste diagonali.

104
00:05:36,925 --> 00:05:36,980
 

105
00:05:37,460 --> 00:05:40,150
Ancora una volta, questo è un modo di mescolare insieme queste due 

106
00:05:40,150 --> 00:05:42,760
sequenze di numeri per ottenere una nuova sequenza di 11 numeri. 

107
00:05:43,240 --> 00:05:46,460
È lo stesso funzionamento pensato per le finestre scorrevoli, solo un'altra prospettiva. 

108
00:05:47,140 --> 00:05:49,800
Mettendogli una piccola annotazione, ecco come potresti vederlo scritto. 

109
00:05:50,220 --> 00:05:55,119
La convoluzione di a e b, indicata con questo piccolo asterisco, è una nuova lista, 

110
00:05:55,119 --> 00:05:58,385
e l'ennesimo elemento di quella lista sembra una somma, 

111
00:05:58,385 --> 00:06:02,060
e quella somma va su tutte le diverse coppie di indici, i e j, 

112
00:06:02,060 --> 00:06:04,860
in modo che la somma di tali indici è pari a n. 

113
00:06:05,280 --> 00:06:10,944
È un po' lungo, ma per esempio, se n fosse 6, le coppie che esamineremo sono 1 e 5, 

114
00:06:10,944 --> 00:06:15,800
2 e 4, 3 e 3, 4 e 2, 5 e 1, tutte le diverse coppie che si sommano a 6. 

115
00:06:16,620 --> 00:06:19,557
Ma onestamente, comunque la scrivi, la notazione è di importanza secondaria 

116
00:06:19,557 --> 00:06:22,340
rispetto all'immagine che potresti tenere in testa durante il processo. 

117
00:06:23,280 --> 00:06:26,280
Ecco, forse può essere utile fare un esempio semplicissimo, 

118
00:06:26,280 --> 00:06:30,780
in cui potrei chiederti qual è la convoluzione della lista 1, 2, 3, con la lista 4, 5, 6. 

119
00:06:31,480 --> 00:06:34,078
Potresti immaginare di prendere entrambi questi elenchi, 

120
00:06:34,078 --> 00:06:37,680
sfogliare il secondo e poi iniziare con il coperchio completamente a sinistra. 

121
00:06:38,180 --> 00:06:40,525
Quindi la coppia di valori che si allineano sono 1 e 4, 

122
00:06:40,525 --> 00:06:43,540
moltiplicali insieme e questo ci dà il primo termine del nostro output. 

123
00:06:43,960 --> 00:06:47,104
Fai scorrere la matrice in basso di un'unità verso destra, 

124
00:06:47,104 --> 00:06:50,995
le coppie che si allineano sono 1 e 5 e 2 e 4, moltiplica quelle coppie, 

125
00:06:50,995 --> 00:06:54,460
sommale e questo ci dà 13, la voce successiva nel nostro output. 

126
00:06:54,960 --> 00:06:58,420
Scorri le cose ancora una volta e prenderemo 1 per 6, 

127
00:06:58,420 --> 00:07:01,560
più 2 per 5, più 3 per 4, che risulta essere 28. 

128
00:07:02,020 --> 00:07:05,795
Un'altra diapositiva e otteniamo 2 per 6, più 3 per 5, 

129
00:07:05,795 --> 00:07:10,120
e questo ci dà 27, e infine l'ultimo termine sembrerà 3 per 6. 

130
00:07:10,660 --> 00:07:13,446
Se lo desideri, puoi visualizzare qualunque sia il tuo linguaggio di 

131
00:07:13,446 --> 00:07:16,072
programmazione preferito e la tua libreria preferita che include 

132
00:07:16,072 --> 00:07:18,980
varie operazioni numeriche e potrai confermare che non ti sto mentendo. 

133
00:07:18,980 --> 00:07:21,673
Se prendi la convoluzione di 1, 2, 3, contro 4, 

134
00:07:21,673 --> 00:07:24,480
5, 6, questo è davvero il risultato che otterrai. 

135
00:07:25,920 --> 00:07:29,231
Abbiamo visto un caso in cui questa è un'operazione naturale e desiderabile, 

136
00:07:29,231 --> 00:07:31,424
che si aggiunge alle distribuzioni di probabilità, 

137
00:07:31,424 --> 00:07:33,660
e un altro esempio comune sarebbe una media mobile. 

138
00:07:34,080 --> 00:07:36,825
Immagina di avere una lunga lista di numeri e di prendere 

139
00:07:36,825 --> 00:07:39,760
un'altra lista più piccola di numeri la cui somma dà tutti 1. 

140
00:07:40,100 --> 00:07:44,060
In questo caso, ho solo una piccola lista di 5 valori, e sono tutti uguali a un quinto. 

141
00:07:44,060 --> 00:07:47,525
Quindi, se eseguiamo questo processo di convoluzione della finestra scorrevole, 

142
00:07:47,525 --> 00:07:50,903
e chiudiamo gli occhi e spazziamo sotto il tappeto ciò che accade all'inizio, 

143
00:07:50,903 --> 00:07:54,498
una volta che il nostro elenco più piccolo di valori si sovrappone completamente a 

144
00:07:54,498 --> 00:07:58,310
quello più grande, pensa a cosa significa ogni termine in questo convoluzione significa 

145
00:07:58,310 --> 00:07:58,700
davvero. 

146
00:07:59,400 --> 00:08:03,006
Ad ogni iterazione, quello che stai facendo è moltiplicare ciascuno dei 

147
00:08:03,006 --> 00:08:05,761
valori dei tuoi dati per 1 5 e sommarli tutti insieme, 

148
00:08:05,761 --> 00:08:09,618
vale a dire che stai prendendo una media dei tuoi dati all'interno di questa 

149
00:08:09,618 --> 00:08:10,520
piccola finestra. 

150
00:08:11,100 --> 00:08:14,896
Nel complesso, il processo ti fornisce una versione attenuata dei dati originali, 

151
00:08:14,896 --> 00:08:18,136
e puoi modificarla iniziando con un piccolo elenco di numeri diverso, 

152
00:08:18,136 --> 00:08:21,932
e finché quel piccolo elenco dà come somma 1, puoi comunque interpretarlo come un 

153
00:08:21,932 --> 00:08:22,720
movimento media. 

154
00:08:23,400 --> 00:08:27,760
Nell'esempio mostrato qui, la media mobile darebbe più peso al valore centrale. 

155
00:08:28,420 --> 00:08:30,800
Ciò si traduce anche in una versione livellata dei dati. 

156
00:08:33,140 --> 00:08:35,575
Se crei una sorta di analogo bidimensionale di questo, 

157
00:08:35,575 --> 00:08:38,720
otterrai un algoritmo divertente per sfocare una determinata immagine. 

158
00:08:38,720 --> 00:08:41,776
E dovrei dire che le animazioni che sto per mostrare sono modificate 

159
00:08:41,776 --> 00:08:44,700
da qualcosa che avevo originariamente realizzato per parte di una 

160
00:08:44,700 --> 00:08:47,713
serie di lezioni che ho tenuto con il Julia Lab al MIT per un certo 

161
00:08:47,713 --> 00:08:51,080
corso OpenCourseWare che includeva un'unità di elaborazione delle immagini. 

162
00:08:51,560 --> 00:08:54,567
Lì abbiamo fatto un po' di più per approfondire il codice dietro tutto questo, 

163
00:08:54,567 --> 00:08:56,280
quindi se sei curioso ti lascio alcuni link. 

164
00:08:56,620 --> 00:09:00,780
Ma tornando a questo esempio sfocato, quello che succede è che ho questa piccola 

165
00:09:00,780 --> 00:09:05,248
griglia di valori 3x3 che marcia lungo la nostra immagine originale, e se ingrandiamo, 

166
00:09:05,248 --> 00:09:09,665
ognuno di questi valori è 1 9, e quello che sto facendo ad ogni iterazione moltiplica 

167
00:09:09,665 --> 00:09:13,620
ciascuno di questi valori per il pixel corrispondente su cui si trova sopra. 

168
00:09:13,900 --> 00:09:17,773
E ovviamente in informatica pensiamo ai colori come piccoli vettori di tre valori, 

169
00:09:17,773 --> 00:09:20,200
che rappresentano le componenti rosso, verde e blu. 

170
00:09:20,560 --> 00:09:24,327
Quando moltiplico tutti questi piccoli valori per 19° e li somma insieme, 

171
00:09:24,327 --> 00:09:27,483
otteniamo una media lungo ciascun canale di colore e il pixel 

172
00:09:27,483 --> 00:09:31,200
corrispondente per l'immagine a destra viene definito come quella somma. 

173
00:09:31,940 --> 00:09:35,715
L'effetto complessivo, mentre lo facciamo per ogni singolo pixel dell'immagine, 

174
00:09:35,715 --> 00:09:37,933
è che ognuno si fonde con tutti i suoi vicini, 

175
00:09:37,933 --> 00:09:40,860
il che ci dà una versione più sfocata rispetto all'originale. 

176
00:09:41,720 --> 00:09:44,588
Nel gergo diremmo che l'immagine a destra è una convoluzione 

177
00:09:44,588 --> 00:09:47,740
della nostra immagine originale con una piccola griglia di valori. 

178
00:09:48,140 --> 00:09:51,270
O più tecnicamente forse dovrei dire che è la convoluzione con una 

179
00:09:51,270 --> 00:09:54,400
versione ruotata di 180 gradi di quella piccola griglia di valori. 

180
00:09:54,620 --> 00:09:57,041
Non che abbia importanza quando la griglia è simmetrica, 

181
00:09:57,041 --> 00:10:00,524
ma vale semplicemente la pena tenere presente che la definizione di convoluzione, 

182
00:10:00,524 --> 00:10:03,880
ereditata dal contesto matematico puro, dovrebbe sempre invitarti a pensare di 

183
00:10:03,880 --> 00:10:05,240
capovolgere quel secondo array. 

184
00:10:05,960 --> 00:10:08,396
Se lo modifichiamo leggermente, possiamo ottenere un effetto di 

185
00:10:08,396 --> 00:10:11,100
sfocatura molto più elegante scegliendo una diversa griglia di valori. 

186
00:10:11,440 --> 00:10:13,563
In questo caso ho una piccola griglia 5x5, ma 

187
00:10:13,563 --> 00:10:15,780
la differenza non è tanto nelle sue dimensioni. 

188
00:10:15,980 --> 00:10:19,300
Se ingrandiamo notiamo che il valore al centro è molto più grande 

189
00:10:19,300 --> 00:10:22,418
del valore verso i bordi, e da dove proviene è che sono tutti 

190
00:10:22,418 --> 00:10:25,940
campionati da una curva a campana, nota come distribuzione gaussiana. 

191
00:10:26,800 --> 00:10:29,976
In questo modo, quando moltiplichiamo tutti questi valori per 

192
00:10:29,976 --> 00:10:32,486
il pixel corrispondente su cui si trovano sopra, 

193
00:10:32,486 --> 00:10:36,380
diamo molto più peso a quel pixel centrale e molto meno a quelli sul bordo. 

194
00:10:36,800 --> 00:10:40,560
E proprio come prima, il pixel corrispondente a destra è definito come questa somma. 

195
00:10:41,320 --> 00:10:43,826
Poiché eseguiamo questo processo per ogni singolo pixel, 

196
00:10:43,826 --> 00:10:46,421
si ottiene un effetto sfocato che simula in modo molto più 

197
00:10:46,421 --> 00:10:49,720
autentico l'idea di mettere l'obiettivo fuori fuoco o qualcosa del genere. 

198
00:10:49,900 --> 00:10:53,360
Ma la sfocatura non è l'unica cosa che puoi fare con questa idea. 

199
00:10:53,800 --> 00:10:56,817
Ad esempio, dai un'occhiata a questa piccola griglia di valori, 

200
00:10:56,817 --> 00:11:00,731
che coinvolge alcuni numeri positivi a sinistra e alcuni numeri negativi a destra, 

201
00:11:00,731 --> 00:11:02,900
che colorerò rispettivamente con blu e rosso. 

202
00:11:03,640 --> 00:11:06,060
Prenditi un momento per vedere se riesci a prevedere e 

203
00:11:06,060 --> 00:11:08,480
capire quale effetto questo avrà sull'immagine finale. 

204
00:11:10,720 --> 00:11:13,227
Quindi in questo caso penserò all'immagine semplicemente come 

205
00:11:13,227 --> 00:11:15,734
in scala di grigi anziché a colori, quindi ciascuno dei pixel 

206
00:11:15,734 --> 00:11:18,120
è rappresentato semplicemente da un numero anziché da tre. 

207
00:11:18,440 --> 00:11:20,837
E una cosa degna di nota è che mentre eseguiamo questa 

208
00:11:20,837 --> 00:11:23,060
convoluzione è possibile ottenere valori negativi. 

209
00:11:23,060 --> 00:11:25,990
Ad esempio, a questo punto se ingrandiamo la metà sinistra della 

210
00:11:25,990 --> 00:11:28,876
nostra piccola griglia si trova interamente sopra i pixel neri, 

211
00:11:28,876 --> 00:11:31,852
che avrebbero un valore pari a zero, ma la metà destra dei valori 

212
00:11:31,852 --> 00:11:35,460
negativi si trova tutta sopra i pixel bianchi, il che avrebbe hanno valore uno. 

213
00:11:36,180 --> 00:11:39,588
Quindi quando moltiplichiamo i termini corrispondenti e li sommiamo insieme 

214
00:11:39,588 --> 00:11:43,086
i risultati saranno molto negativi, e il modo in cui lo mostro con l'immagine 

215
00:11:43,086 --> 00:11:46,360
a destra è colorare i valori negativi in rosso e quelli positivi in blu. 

216
00:11:46,880 --> 00:11:50,480
Un'altra cosa da notare è che quando sei su una patch tutta dello stesso colore 

217
00:11:50,480 --> 00:11:54,080
tutto va a zero poiché la somma dei valori nella nostra piccola griglia è zero. 

218
00:11:55,180 --> 00:11:57,412
Questo è molto diverso dai due esempi precedenti in cui la 

219
00:11:57,412 --> 00:11:59,796
somma della nostra piccola griglia era uno, il che ci permette 

220
00:11:59,796 --> 00:12:02,180
di interpretarla come una media mobile e quindi una sfocatura. 

221
00:12:03,640 --> 00:12:07,066
Tutto sommato, questo piccolo processo rileva fondamentalmente ovunque ci sia una 

222
00:12:07,066 --> 00:12:10,033
variazione nel valore dei pixel mentre ti sposti da sinistra a destra, 

223
00:12:10,033 --> 00:12:13,502
e quindi ti offre una sorta di modo per rilevare tutti i bordi verticali della tua 

224
00:12:13,502 --> 00:12:13,920
immagine. 

225
00:12:16,500 --> 00:12:20,764
E allo stesso modo, se ruotassimo la griglia in modo che vari mentre ti sposti dall'alto 

226
00:12:20,764 --> 00:12:24,069
verso il basso, questo riprenderà tutti i bordi orizzontali, il che, 

227
00:12:24,069 --> 00:12:27,088
nel caso della nostra immagine della piccola creatura a torta, 

228
00:12:27,088 --> 00:12:29,340
si traduce in degli occhi piuttosto demoniaci. 

229
00:12:30,400 --> 00:12:33,049
Questa griglia più piccola, tra l'altro, è spesso chiamata kernel, 

230
00:12:33,049 --> 00:12:36,608
e il bello è che semplicemente scegliendo un kernel diverso puoi ottenere diversi effetti 

231
00:12:36,608 --> 00:12:40,088
di elaborazione delle immagini, non solo sfocare il rilevamento dei bordi ma anche cose 

232
00:12:40,088 --> 00:12:40,840
come la nitidezza. 

233
00:12:40,840 --> 00:12:44,431
Per quelli di voi che hanno sentito parlare di una rete neurale convoluzionale, 

234
00:12:44,431 --> 00:12:48,068
l'idea è quella di utilizzare i dati per capire quali dovrebbero essere i kernel 

235
00:12:48,068 --> 00:12:51,480
in primo luogo, come determinato da ciò che la rete neurale vuole rilevare. 

236
00:12:52,760 --> 00:12:55,520
Un'altra cosa che forse dovrei sollevare è la lunghezza dell'output. 

237
00:12:55,820 --> 00:12:58,758
Per qualcosa come l'esempio della media mobile potresti voler pensare 

238
00:12:58,758 --> 00:13:02,242
ai termini solo quando entrambe le finestre sono completamente allineate tra loro, 

239
00:13:02,242 --> 00:13:05,181
o nell'esempio di elaborazione delle immagini forse vuoi che l'output 

240
00:13:05,181 --> 00:13:07,280
finale abbia la stessa dimensione dell'originale. 

241
00:13:07,280 --> 00:13:10,381
Ora le convoluzioni come operazione matematica pura producono sempre 

242
00:13:10,381 --> 00:13:12,898
un array più grande dei due array con cui hai iniziato, 

243
00:13:12,898 --> 00:13:16,180
almeno presupponendo che uno di essi non abbia una lunghezza pari a uno. 

244
00:13:16,720 --> 00:13:19,319
Sappi solo che in certi contesti informatici spesso 

245
00:13:19,319 --> 00:13:21,520
vuoi troncare deliberatamente quell'output. 

246
00:13:24,720 --> 00:13:28,302
Un'altra cosa che vale la pena sottolineare è che nel contesto informatico 

247
00:13:28,302 --> 00:13:31,693
l'idea di girare il kernel prima di lasciarlo attraversare l'originale 

248
00:13:31,693 --> 00:13:34,463
spesso sembra davvero strana e semplicemente fuori luogo, 

249
00:13:34,463 --> 00:13:38,093
ma ancora una volta nota che questo è ciò che è ereditato dal puro contesto 

250
00:13:38,093 --> 00:13:42,392
matematico dove come noi visto le probabilità è una cosa incredibilmente naturale da fare.

251
00:13:42,392 --> 00:13:42,440
 

252
00:13:43,020 --> 00:13:46,065
E in realtà posso mostrarti un altro esempio di matematica pura di 

253
00:13:46,065 --> 00:13:49,020
cui anche i programmatori dovrebbero interessarsi perché apre le 

254
00:13:49,020 --> 00:13:52,020
porte a un algoritmo molto più veloce per calcolare tutti questi. 

255
00:13:52,620 --> 00:13:54,829
Per impostare ciò che intendo per più veloce qui, 

256
00:13:54,829 --> 00:13:58,542
lasciami tornare indietro e richiamare di nuovo qualche Python e creerò due diversi 

257
00:13:58,542 --> 00:13:59,780
array relativamente grandi. 

258
00:13:59,940 --> 00:14:03,832
Ognuno conterrà centomila elementi casuali e valuterò il tempo 

259
00:14:03,832 --> 00:14:07,540
di esecuzione della funzione convolve dalla libreria Numpy. 

260
00:14:08,180 --> 00:14:11,279
E in questo caso lo esegue per più iterazioni diverse, 

261
00:14:11,279 --> 00:14:15,505
cerca di trovare una media e sembra che su questo computer almeno la media 

262
00:14:15,505 --> 00:14:16,520
sia 4.87 secondi. 

263
00:14:16,960 --> 00:14:21,177
Al contrario, se utilizzo una funzione diversa dalla libreria scipy chiamata 

264
00:14:21,177 --> 00:14:25,559
fftconvolve che è la stessa cosa solo implementata in modo diverso che richiede 

265
00:14:25,559 --> 00:14:30,160
solo 4.3 millisecondi in media, quindi un miglioramento di tre ordini di grandezza. 

266
00:14:30,160 --> 00:14:34,406
E ancora, anche se vola con un nome diverso, fornisce lo stesso output dell'altra 

267
00:14:34,406 --> 00:14:39,068
funzione di convoluzione, sta solo facendo qualcosa per farlo in un modo più intelligente.

268
00:14:39,068 --> 00:14:39,120
 

269
00:14:42,200 --> 00:14:45,616
Ricorda che con l'esempio della probabilità ho detto che un altro modo in 

270
00:14:45,616 --> 00:14:49,032
cui potresti pensare alla convoluzione era creare questa tabella di tutti 

271
00:14:49,032 --> 00:14:52,680
i prodotti a coppie e poi sommare questi prodotti a coppie lungo le diagonali. 

272
00:14:53,660 --> 00:14:56,422
Ovviamente non c'è nulla di specifico nella probabilità ogni volta che stai 

273
00:14:56,422 --> 00:14:59,040
convolgendo due diversi elenchi di numeri puoi pensarci in questo modo. 

274
00:14:59,040 --> 00:15:02,725
Crea questo tipo di tavola pitagorica con tutti i prodotti a coppie e poi 

275
00:15:02,725 --> 00:15:06,460
ogni somma lungo la diagonale corrisponde a uno dei tuoi risultati finali. 

276
00:15:07,600 --> 00:15:10,103
Un contesto in cui questa visione è particolarmente 

277
00:15:10,103 --> 00:15:12,800
naturale è quando si moltiplicano insieme due polinomi. 

278
00:15:13,300 --> 00:15:18,508
Ad esempio, prendiamo la piccola griglia che abbiamo già e sostituiamo i termini in alto 

279
00:15:18,508 --> 00:15:23,600
con 1, 2x e 3x al quadrato e sostituiamo gli altri termini con 4, 5x e 6x al quadrato. 

280
00:15:24,000 --> 00:15:26,323
Ora pensa a cosa significa quando creiamo tutti 

281
00:15:26,323 --> 00:15:28,840
questi diversi prodotti a coppie tra i due elenchi. 

282
00:15:29,040 --> 00:15:33,245
Quello che stai facendo è essenzialmente espandere il prodotto completo dei due 

283
00:15:33,245 --> 00:15:37,450
polinomi che ho scritto e poi quando sommi lungo la diagonale ciò corrisponde a 

284
00:15:37,450 --> 00:15:41,551
raccogliere tutti i termini simili, il che è abbastanza accurato espandere un 

285
00:15:41,551 --> 00:15:45,704
polinomio e raccogliere termini simili è esattamente il stesso processo di una 

286
00:15:45,704 --> 00:15:46,440
convoluzione. 

287
00:15:47,740 --> 00:15:49,850
Ma questo ci permette di fare qualcosa di davvero 

288
00:15:49,850 --> 00:15:52,340
interessante perché pensa a quello che stiamo dicendo qui. 

289
00:15:52,340 --> 00:15:56,492
Stiamo dicendo che se prendi due funzioni diverse e le moltiplichi insieme, 

290
00:15:56,492 --> 00:16:00,535
che è una semplice operazione puntuale che è la stessa cosa che se avessi 

291
00:16:00,535 --> 00:16:04,851
prima estratto i coefficienti da ciascuno di essi assumendo che siano polinomi 

292
00:16:04,851 --> 00:16:08,840
e poi avessi preso una convoluzione di quelli due liste di coefficienti. 

293
00:16:09,620 --> 00:16:12,927
Ciò che lo rende così interessante è che le convoluzioni sembrano in linea 

294
00:16:12,927 --> 00:16:16,058
di principio molto più complicate della semplice moltiplicazione e non 

295
00:16:16,058 --> 00:16:18,880
intendo solo concettualmente che sono più difficili da pensare, 

296
00:16:18,880 --> 00:16:21,923
intendo che a livello computazionale sono necessari più passaggi per 

297
00:16:21,923 --> 00:16:25,760
eseguire una convoluzione che per eseguire una prodotto puntuale di due liste diverse. 

298
00:16:26,319 --> 00:16:29,736
Ad esempio, diciamo che ti ho dato due polinomi davvero grandi, 

299
00:16:29,736 --> 00:16:32,458
ciascuno con un centinaio di coefficienti diversi, 

300
00:16:32,458 --> 00:16:36,888
quindi se il modo in cui li moltiplichi fosse quello di espandere questo prodotto, 

301
00:16:36,888 --> 00:16:41,479
sai riempire l'intera griglia 100 per 100 di prodotti a coppie che richiederebbero di 

302
00:16:41,479 --> 00:16:46,176
farlo esegui 10.000 prodotti diversi e poi quando raccogli tutti i termini simili lungo 

303
00:16:46,176 --> 00:16:49,860
le diagonali si ottiene un altro insieme di circa 10.000 operazioni. 

304
00:16:50,700 --> 00:16:54,384
Più in generale nel gergo diremmo che l'algoritmo è O di n al quadrato, 

305
00:16:54,384 --> 00:16:57,864
il che significa che per due elenchi di dimensione n il modo in cui 

306
00:16:57,864 --> 00:17:01,140
il numero di operazioni scala è proporzionale al quadrato di n. 

307
00:17:01,820 --> 00:17:05,110
D'altra parte, se penso a due polinomi in termini di output, 

308
00:17:05,110 --> 00:17:08,509
ad esempio campionando i loro valori in una manciata di input, 

309
00:17:08,509 --> 00:17:13,257
moltiplicarli richiede solo tante operazioni quanto il numero di campioni poiché ancora 

310
00:17:13,257 --> 00:17:17,896
una volta è un'operazione puntuale e con i polinomi hai solo bisogno un numero finito 

311
00:17:17,896 --> 00:17:20,540
di campioni per poter recuperare i coefficienti. 

312
00:17:20,540 --> 00:17:23,242
Ad esempio sono sufficienti due output per specificare 

313
00:17:23,242 --> 00:17:25,060
in modo univoco un polinomio lineare.

314
00:17:25,660 --> 00:17:29,400
Tre output sarebbero sufficienti per specificare in modo univoco un polinomio quadratico.

315
00:17:29,640 --> 00:17:33,287
E in generale se si conoscono n output distinti è sufficiente 

316
00:17:33,287 --> 00:17:37,640
specificare in modo univoco un polinomio che abbia n coefficienti diversi.

317
00:17:37,780 --> 00:17:40,720
O se preferisci, potremmo esprimerlo nel linguaggio dei sistemi di equazioni.

318
00:17:41,200 --> 00:17:45,107
Immagina che ti dica che ho un polinomio ma non ti dico quali sono i coefficienti, 

319
00:17:45,107 --> 00:17:46,520
quelli sono un mistero per te.

320
00:17:46,700 --> 00:17:48,928
Nel nostro esempio potresti pensare a questo come 

321
00:17:48,928 --> 00:17:50,800
al prodotto che stiamo cercando di capire.

322
00:17:50,800 --> 00:17:54,840
Quindi supponiamo che ti dica semplicemente quali sarebbero i risultati di 

323
00:17:54,840 --> 00:17:59,042
questo polinomio se inserisci vari input diversi come 0, 1, 2, 3, e così via, 

324
00:17:59,042 --> 00:18:03,460
e te ne do abbastanza in modo da avere tante equazioni quante hai delle incognite.

325
00:18:04,140 --> 00:18:07,340
Sembra anche che sia un sistema lineare di equazioni, quindi è carino.

326
00:18:07,780 --> 00:18:09,340
E questo, almeno in linea di principio, dovrebbe 

327
00:18:09,340 --> 00:18:10,900
essere sufficiente per recuperare i coefficienti.

328
00:18:11,740 --> 00:18:15,328
Quindi lo schema approssimativo dell'algoritmo sarebbe quindi che ogni volta che vuoi 

329
00:18:15,328 --> 00:18:19,000
convolvere due elenchi di numeri li tratti come se fossero coefficienti di due polinomi.

330
00:18:19,420 --> 00:18:22,602
Campioni quei polinomi con un numero sufficiente di output, 

331
00:18:22,602 --> 00:18:26,369
moltiplichi quei campioni in modo puntuale e quindi risolvi il sistema 

332
00:18:26,369 --> 00:18:30,560
per recuperare i coefficienti come un modo subdolo per trovare la convoluzione.

333
00:18:31,420 --> 00:18:35,305
E almeno come ho affermato finora, alcuni di voi potrebbero giustamente lamentarsi: 

334
00:18:35,305 --> 00:18:37,340
&quot;Grant, questo è un piano idiota&quot;.

335
00:18:37,580 --> 00:18:41,104
Perché per prima cosa il solo calcolo di tutti questi campioni per uno dei 

336
00:18:41,104 --> 00:18:44,628
polinomi che conosciamo già richiede l'ordine di n operazioni al quadrato, 

337
00:18:44,628 --> 00:18:47,870
per non parlare del fatto che risolvere quel sistema sarà certamente 

338
00:18:47,870 --> 00:18:52,100
computazionalmente difficile quanto eseguire semplicemente la convoluzione in primo luogo.

339
00:18:52,600 --> 00:18:56,591
Quindi, certo, abbiamo questa connessione tra moltiplicazione e convoluzioni, 

340
00:18:56,591 --> 00:19:00,480
ma tutta la complessità avviene nel tradurre da un punto di vista all'altro.

341
00:19:01,600 --> 00:19:04,717
Ma c’è un trucco, e quelli di voi che conoscono le trasformate di 

342
00:19:04,717 --> 00:19:07,740
Fourier e l’algoritmo FFT potrebbero capire dove stiamo andando.

343
00:19:07,740 --> 00:19:09,858
Se non hai familiarità con questi argomenti, quello 

344
00:19:09,858 --> 00:19:12,180
che sto per dire potrebbe sembrare del tutto inaspettato.

345
00:19:12,260 --> 00:19:14,502
Sappi solo che ci sono alcuni percorsi che avresti potuto 

346
00:19:14,502 --> 00:19:16,860
percorrere in matematica che rendono questo passo più atteso.

347
00:19:17,720 --> 00:19:20,360
Fondamentalmente l’idea è che qui abbiamo libertà di scelta.

348
00:19:20,540 --> 00:19:25,265
Se invece di valutare un insieme arbitrario di input come 0, 1, 2, 3 e così via, 

349
00:19:25,265 --> 00:19:29,700
scegli di valutare un insieme di numeri complessi appositamente selezionati.

350
00:19:30,240 --> 00:19:33,020
In particolare quelli che si trovano equamente distanziati sul cerchio unitario, 

351
00:19:33,020 --> 00:19:34,840
quelli che sono conosciuti come le radici dell'unità.

352
00:19:35,200 --> 00:19:36,880
Questo ci dà un sistema più amichevole.

353
00:19:38,360 --> 00:19:42,307
L'idea di base è che trovando un numero in cui l'assunzione dei suoi poteri 

354
00:19:42,307 --> 00:19:46,409
rientra in questo modello ciclico, significa che il sistema che generiamo avrà 

355
00:19:46,409 --> 00:19:49,422
molta ridondanza nei diversi termini che stai calcolando, 

356
00:19:49,422 --> 00:19:52,590
e essendo intelligente su come Sfruttando questa ridondanza, 

357
00:19:52,590 --> 00:19:54,460
puoi risparmiare un sacco di lavoro.

358
00:19:56,020 --> 00:19:59,202
Questo insieme di output che ho scritto ha un nome speciale, 

359
00:19:59,202 --> 00:20:02,280
si chiama trasformata discreta di Fourier dei coefficienti.

360
00:20:02,500 --> 00:20:05,727
E se vuoi saperne di più, in realtà ho tenuto un'altra lezione per lo 

361
00:20:05,727 --> 00:20:09,140
stesso corso di Julia al MIT, tutta sulle trasformate discrete di Fourier.

362
00:20:09,220 --> 00:20:13,095
E c'è anche un video davvero eccellente sul canale riducibile che parla della 

363
00:20:13,095 --> 00:20:17,120
trasformata veloce di Fourier, che è un algoritmo per calcolarli più velocemente.

364
00:20:17,480 --> 00:20:20,668
Inoltre Veritasium ha recentemente realizzato un ottimo video sulle FFT, 

365
00:20:20,668 --> 00:20:21,760
quindi hai molte opzioni.

366
00:20:22,260 --> 00:20:24,660
E questo algoritmo veloce è davvero il punto per noi.

367
00:20:25,120 --> 00:20:27,533
Ancora una volta, a causa di tutta questa ridondanza, 

368
00:20:27,533 --> 00:20:30,617
esiste un metodo per passare dai coefficienti a tutti questi output, 

369
00:20:30,617 --> 00:20:33,344
dove invece di fare nell'ordine di n operazioni al quadrato, 

370
00:20:33,344 --> 00:20:36,160
si esegue nell'ordine di n volte il logaritmo di n operazioni, 

371
00:20:36,160 --> 00:20:39,200
che è molto molto meglio se si passa a elenchi di grandi dimensioni.

372
00:20:39,660 --> 00:20:42,540
E, cosa più importante, questo algoritmo FFT funziona in entrambe le direzioni.

373
00:20:42,700 --> 00:20:45,480
Permette anche di passare dagli output ai coefficienti.

374
00:20:46,220 --> 00:20:49,060
Quindi, riunendo il tutto, diamo un'occhiata allo schema del nostro algoritmo.

375
00:20:49,420 --> 00:20:52,738
Ora possiamo dire che ogni volta che ti vengono dati due lunghi elenchi 

376
00:20:52,738 --> 00:20:56,102
di numeri e vuoi fare la loro convoluzione, calcola prima la trasformata 

377
00:20:56,102 --> 00:20:59,420
veloce di Fourier di ciascuno di essi, che nel profondo della tua mente 

378
00:20:59,420 --> 00:21:02,785
puoi semplicemente pensare come se li trattassi come sono i coefficienti 

379
00:21:02,785 --> 00:21:06,380
di un polinomio e lo valutano in una serie di punti appositamente selezionati.

380
00:21:06,899 --> 00:21:10,791
Poi moltiplica insieme i due risultati che hai appena ottenuto in termini di punti, 

381
00:21:10,791 --> 00:21:14,405
il che è bello e veloce, e poi fai una trasformata di Fourier veloce inversa, 

382
00:21:14,405 --> 00:21:18,483
e quello che ti dà è il subdolo modo backdoor per calcolare la convoluzione che stavamo 

383
00:21:18,483 --> 00:21:18,900
cercando.

384
00:21:19,040 --> 00:21:22,240
Ma questa volta si tratta solo di O di n log n operazioni.

385
00:21:23,139 --> 00:21:24,740
Per me è davvero fantastico!

386
00:21:25,120 --> 00:21:28,468
Questo contesto molto specifico in cui compaiono le convoluzioni, 

387
00:21:28,468 --> 00:21:32,983
moltiplicando due polinomi, apre le porte a un algoritmo che è rilevante ovunque possano 

388
00:21:32,983 --> 00:21:34,100
emergere convoluzioni.

389
00:21:34,180 --> 00:21:36,069
Se vuoi aggiungere distribuzioni di probabilità, 

390
00:21:36,069 --> 00:21:39,000
esegui un'elaborazione di immagini di grandi dimensioni, qualunque essa sia.

391
00:21:39,220 --> 00:21:42,003
E penso che sia un ottimo esempio del perché dovresti essere 

392
00:21:42,003 --> 00:21:44,559
emozionato quando vedi qualche operazione o concetto in 

393
00:21:44,559 --> 00:21:47,480
matematica comparire in molte aree apparentemente non correlate.

394
00:21:48,480 --> 00:21:51,500
Se vuoi fare qualche compito a casa, ecco qualcosa a cui è divertente pensare.

395
00:21:51,720 --> 00:21:54,169
Spiega perché quando moltiplichi due numeri diversi, 

396
00:21:54,169 --> 00:21:57,912
semplicemente la moltiplicazione ordinaria come tutti impariamo alle elementari, 

397
00:21:57,912 --> 00:22:01,980
quello che stai facendo è fondamentalmente una convoluzione tra le cifre di quei numeri.

398
00:22:02,500 --> 00:22:04,656
Ci sono alcuni passaggi aggiuntivi con carry e simili, 

399
00:22:04,656 --> 00:22:06,460
ma il passaggio principale è una convoluzione.

400
00:22:07,280 --> 00:22:09,695
Alla luce dell'esistenza di un algoritmo veloce, 

401
00:22:09,695 --> 00:22:12,506
ciò significa che se hai due numeri interi molto grandi, 

402
00:22:12,506 --> 00:22:16,055
allora esiste un modo per trovare il loro prodotto che è più veloce del 

403
00:22:16,055 --> 00:22:17,880
metodo che impariamo alle elementari.

404
00:22:18,140 --> 00:22:22,188
Che invece di richiedere O di n operazioni al quadrato richiede solo O di n log n, 

405
00:22:22,188 --> 00:22:24,920
il che non sembra nemmeno che dovrebbe essere possibile.

406
00:22:25,380 --> 00:22:28,451
Il problema è che prima che ciò sia effettivamente utile nella pratica, 

407
00:22:28,451 --> 00:22:30,840
i tuoi numeri dovrebbero essere assolutamente mostruosi.

408
00:22:31,220 --> 00:22:35,340
Ma è comunque bello che esista un simile algoritmo.

409
00:22:35,340 --> 00:22:37,332
Successivamente rivolgeremo la nostra attenzione al caso 

410
00:22:37,332 --> 00:22:39,640
continuo con un focus speciale sulle distribuzioni di probabilità.

