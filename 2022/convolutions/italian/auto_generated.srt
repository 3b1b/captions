1
00:00:00,000 --> 00:00:03,648
Supponiamo che ti dia due diversi elenchi di numeri, o forse due diverse funzioni,

2
00:00:03,648 --> 00:00:07,473
e ti chieda di pensare a tutti i modi in cui potresti combinare questi due elenchi per

3
00:00:07,473 --> 00:00:11,298
ottenere un nuovo elenco di numeri, o combinare le due funzioni per ottenere una nuova

4
00:00:11,298 --> 00:00:11,782
funzione .

5
00:00:11,782 --> 00:00:16,270
Forse un modo semplice che mi viene in mente è semplicemente sommarli termine per termine.

6
00:00:16,270 --> 00:00:16,320


7
00:00:16,320 --> 00:00:20,131
Allo stesso modo con le funzioni è possibile aggiungere tutte le uscite corrispondenti.

8
00:00:20,131 --> 00:00:23,192
Allo stesso modo, potresti anche moltiplicare i due elenchi

9
00:00:23,192 --> 00:00:26,202
termine per termine e fare la stessa cosa con le funzioni.

10
00:00:26,202 --> 00:00:30,519
Ma esiste un altro tipo di combinazione altrettanto fondamentale di entrambi,

11
00:00:30,519 --> 00:00:33,840
ma molto meno comunemente discussa, nota come convoluzione.

12
00:00:33,840 --> 00:00:36,694
Ma a differenza dei due casi precedenti, non è qualcosa che è

13
00:00:36,694 --> 00:00:39,964
semplicemente ereditato da un&#39;operazione che puoi fare sui numeri.

14
00:00:39,964 --> 00:00:42,386
È qualcosa di veramente nuovo nel contesto di

15
00:00:42,386 --> 00:00:44,809
elenchi di numeri o combinazioni di funzioni.

16
00:00:44,809 --> 00:00:48,569
Si presentano ovunque, sono onnipresenti nell&#39;elaborazione delle immagini,

17
00:00:48,569 --> 00:00:51,425
è un costrutto fondamentale nella teoria della probabilità,

18
00:00:51,425 --> 00:00:55,327
sono usati molto nella risoluzione di equazioni differenziali e in un contesto in

19
00:00:55,327 --> 00:00:58,325
cui quasi sicuramente l&#39;hai visto, se non con questo nome,

20
00:00:58,325 --> 00:01:00,277
sta moltiplicando due polinomi tra loro.

21
00:01:00,277 --> 00:01:02,709
Come qualcuno nel settore delle spiegazioni visive,

22
00:01:02,709 --> 00:01:05,141
questo è un argomento particolarmente interessante,

23
00:01:05,141 --> 00:01:09,070
perché la definizione stereotipata isolata e senza contesto può sembrare un po&#39;

24
00:01:09,070 --> 00:01:13,280
intimidatoria, ma se ci prendiamo il tempo per scompattare veramente ciò che sta dicendo,

25
00:01:13,280 --> 00:01:16,788
e prima di motivare effettivamente il perché vorresti qualcosa del genere,

26
00:01:16,788 --> 00:01:18,800
è un&#39;operazione incredibilmente bella.

27
00:01:18,800 --> 00:01:21,070
E devo ammettere che in realtà ho imparato qualcosa

28
00:01:21,070 --> 00:01:23,514
mentre mettevo insieme le immagini per questo progetto.

29
00:01:23,514 --> 00:01:25,868
Nel caso della convoluzione di due funzioni diverse,

30
00:01:25,868 --> 00:01:29,688
stavo cercando di pensare a diversi modi in cui potresti immaginare cosa ciò potrebbe

31
00:01:29,688 --> 00:01:33,153
significare, e con uno di essi ho avuto un piccolo momento ahah sul perché le

32
00:01:33,153 --> 00:01:36,217
distribuzioni normali svolgono il ruolo che lo fanno in probabilità,

33
00:01:36,217 --> 00:01:38,483
perché è una forma così naturale per una funzione.

34
00:01:38,483 --> 00:01:41,645
Ma sto andando troppo avanti, c&#39;è molta preparazione per quello.

35
00:01:41,645 --> 00:01:45,044
In questo video, il nostro focus principale sarà sul caso discreto,

36
00:01:45,044 --> 00:01:49,493
e in particolare sulla creazione di un algoritmo molto inaspettato ma molto intelligente

37
00:01:49,493 --> 00:01:50,293
per calcolarli.

38
00:01:50,293 --> 00:01:54,400
E tirerò fuori la discussione per il caso continuo in una seconda parte.

39
00:01:54,400 --> 00:01:58,689
È molto forte la tentazione di aprire con gli esempi di elaborazione delle immagini,

40
00:01:58,689 --> 00:02:01,263
dal momento che sono visivamente i più intriganti,

41
00:02:01,263 --> 00:02:05,653
ma ci sono un paio di pignoli che rendono il caso dell&#39;elaborazione delle immagini

42
00:02:05,653 --> 00:02:08,328
meno rappresentativo delle convoluzioni in generale,

43
00:02:08,328 --> 00:02:12,869
quindi iniziamo invece con la probabilità, e in particolare uno degli esempi più semplici

44
00:02:12,869 --> 00:02:17,058
a cui sono sicuro che tutti qui abbiano pensato ad un certo punto della loro vita,

45
00:02:17,058 --> 00:02:21,600
ovvero lanciare un paio di dadi e calcolare le possibilità di vedere varie somme diverse.

46
00:02:21,600 --> 00:02:24,213
E potresti dire, non è un problema, non è un problema.

47
00:02:24,213 --> 00:02:27,519
Ciascuno dei tuoi due dadi ha sei diversi risultati possibili,

48
00:02:27,519 --> 00:02:31,139
il che ci dà un totale di 36 distinte coppie di risultati possibili,

49
00:02:31,139 --> 00:02:35,600
e se li esaminiamo tutti possiamo contare quante coppie hanno una determinata somma.

50
00:02:35,600 --> 00:02:38,845
E disponendo tutte le coppie in una griglia come questa,

51
00:02:38,845 --> 00:02:43,799
una cosa carina è che tutte le coppie che hanno una somma costante sono visibili lungo

52
00:02:43,799 --> 00:02:45,678
una di queste diverse diagonali.

53
00:02:45,678 --> 00:02:48,777
Quindi semplicemente contando quanti ne esistono su ciascuna di quelle

54
00:02:48,777 --> 00:02:51,920
diagonali ti dirà quanto è probabile che tu veda una somma particolare.

55
00:02:51,920 --> 00:02:55,233
E direi molto bene, molto bene, ma riesci a pensare ad

56
00:02:55,233 --> 00:02:58,788
altri modi in cui potresti visualizzare la stessa domanda?

57
00:02:58,788 --> 00:03:01,245
Altre immagini che possono venirvi in mente pensando a

58
00:03:01,245 --> 00:03:03,836
tutte le coppie distinte che hanno una determinata somma?

59
00:03:03,836 --> 00:03:07,586
E forse uno di voi alza la mano e dice: sì, ne ho uno.

60
00:03:07,586 --> 00:03:12,530
Diciamo che immagini questi due diversi insiemi di possibilità ciascuno in fila,

61
00:03:12,530 --> 00:03:14,056
ma giri la seconda fila.

62
00:03:14,056 --> 00:03:16,542
In questo modo tutte le diverse coppie che sommate danno

63
00:03:16,542 --> 00:03:18,984
fino a sette si allineano verticalmente in questo modo.

64
00:03:18,984 --> 00:03:21,887
E se facciamo scorrere la riga in basso completamente a destra,

65
00:03:21,887 --> 00:03:25,018
allora l&#39;unica coppia che sommata dà due, gli occhi di serpente,

66
00:03:25,018 --> 00:03:26,380
sono gli unici ad allinearsi.

67
00:03:26,380 --> 00:03:29,603
E se lo sposto su un&#39;unità a destra, le coppie che si

68
00:03:29,603 --> 00:03:32,938
allineano sono le due coppie diverse che sommate danno tre.

69
00:03:32,938 --> 00:03:36,439
E in generale, diversi valori di offset di questo array inferiore,

70
00:03:36,439 --> 00:03:40,933
che ricorda che dovevo prima girarlo, rivelano tutte le coppie distinte che hanno una

71
00:03:40,933 --> 00:03:41,926
determinata somma.

72
00:03:41,926 --> 00:03:44,670
Per quanto riguarda le domande sulla probabilità,

73
00:03:44,670 --> 00:03:47,413
questo non è ancora particolarmente interessante,

74
00:03:47,413 --> 00:03:51,034
perché tutto ciò che stiamo facendo è contare quanti risultati ci

75
00:03:51,034 --> 00:03:53,120
sono in ciascuna di queste categorie.

76
00:03:53,120 --> 00:03:55,510
Ma questo avviene con il presupposto implicito che ci sia

77
00:03:55,510 --> 00:03:57,941
la stessa possibilità che ciascuno di questi volti emerga.

78
00:03:57,941 --> 00:04:01,909
E se ti dicessi che ho un set speciale di dadi che non è uniforme?

79
00:04:01,909 --> 00:04:05,754
Forse il dado blu ha il proprio insieme di numeri che descrivono le probabilità che

80
00:04:05,754 --> 00:04:09,782
esca ciascuna faccia, e il dado rosso ha il proprio insieme di numeri unico e distinto.

81
00:04:09,782 --> 00:04:12,406
In tal caso, se volessi calcolare, ad esempio,

82
00:04:12,406 --> 00:04:16,035
la probabilità di vedere un due, moltiplicheresti la probabilità

83
00:04:16,035 --> 00:04:19,943
che il dado blu sia uno per la probabilità che il dado rosso sia uno.

84
00:04:19,943 --> 00:04:24,791
E per le probabilità di vedere un tre, guardi le due coppie distinte dove è possibile,

85
00:04:24,791 --> 00:04:27,745
e ancora, moltiplichi le probabilità corrispondenti,

86
00:04:27,745 --> 00:04:30,029
e poi sommi questi due prodotti insieme.

87
00:04:30,029 --> 00:04:33,648
Allo stesso modo, le possibilità di vedere un quattro implicano moltiplicare

88
00:04:33,648 --> 00:04:36,845
insieme tre diverse coppie di possibilità e sommarle tutte insieme.

89
00:04:36,845 --> 00:04:41,862
E nello spirito di impostare alcune formule, chiamiamo queste probabilità massime a1,

90
00:04:41,862 --> 00:04:45,946
a2, a3 e così via, e chiamiamo quelle in basso b1, b2, b3 e così via.

91
00:04:45,946 --> 00:04:50,136
E in generale, questo processo, in cui prendiamo due diversi array di numeri,

92
00:04:50,136 --> 00:04:54,273
capovolgiamo il secondo e poi li allineiamo a vari valori di offset diversi,

93
00:04:54,273 --> 00:04:57,228
prendendo un gruppo di prodotti a coppie e sommandoli,

94
00:04:57,228 --> 00:05:01,311
questo è uno dei Modi fondamentali per pensare a cosa sia una convoluzione.

95
00:05:01,311 --> 00:05:06,389
Quindi, giusto per spiegarlo un po&#39; più esattamente, attraverso questo processo,

96
00:05:06,389 --> 00:05:11,109
abbiamo appena generato le probabilità di vedere due, tre, quattro, fino a 12,

97
00:05:11,109 --> 00:05:14,813
e le abbiamo ottenute mescolando insieme una lista di valori,

98
00:05:14,813 --> 00:05:17,143
a e un&#39;altra elenco dei valori, b.

99
00:05:17,143 --> 00:05:20,491
Nel gergo, diremmo che la convoluzione di queste due sequenze

100
00:05:20,491 --> 00:05:23,786
ci dà questa nuova sequenza, la nuova sequenza di 11 valori,

101
00:05:23,786 --> 00:05:27,188
ognuno dei quali assomiglia ad una somma di prodotti a coppie.

102
00:05:27,188 --> 00:05:31,827
Se preferisci, un altro modo in cui potresti pensare alla stessa operazione è creare

103
00:05:31,827 --> 00:05:36,738
prima una tabella di tutti i prodotti a coppie e poi sommare lungo tutte queste diagonali.

104
00:05:36,738 --> 00:05:36,793


105
00:05:36,793 --> 00:05:39,596
Ancora una volta, questo è un modo di mescolare insieme queste due

106
00:05:39,596 --> 00:05:42,315
sequenze di numeri per ottenere una nuova sequenza di 11 numeri.

107
00:05:42,315 --> 00:05:45,038
È lo stesso funzionamento pensato per le finestre scorrevoli,

108
00:05:45,038 --> 00:05:46,400
solo un&#39;altra prospettiva.

109
00:05:46,400 --> 00:05:50,335
Mettendogli una piccola annotazione, ecco come potresti vederlo scritto.

110
00:05:50,335 --> 00:05:55,111
La convoluzione di a e b, indicata con questo piccolo asterisco, è una nuova lista,

111
00:05:55,111 --> 00:05:58,522
e l&#39;ennesimo elemento di quella lista sembra una somma,

112
00:05:58,522 --> 00:06:02,104
e quella somma va su tutte le diverse coppie di indici, i e j,

113
00:06:02,104 --> 00:06:04,833
in modo che la somma di tali indici è pari a n.

114
00:06:04,833 --> 00:06:10,799
È un po&#39; lungo, ma per esempio, se n fosse 6, le coppie che esamineremo sono 1 e 5,

115
00:06:10,799 --> 00:06:15,680
2 e 4, 3 e 3, 4 e 2, 5 e 1, tutte le diverse coppie che si sommano a 6.

116
00:06:15,680 --> 00:06:19,412
Ma onestamente, comunque la scrivi, la notazione è di importanza secondaria

117
00:06:19,412 --> 00:06:23,145
rispetto all&#39;immagine che potresti tenere in testa durante il processo.

118
00:06:23,145 --> 00:06:26,282
Ecco, forse può essere utile fare un esempio semplicissimo,

119
00:06:26,282 --> 00:06:30,987
in cui potrei chiederti qual è la convoluzione della lista 1, 2, 3, con la lista 4, 5, 6.

120
00:06:30,987 --> 00:06:33,895
Potresti immaginare di prendere entrambi questi elenchi,

121
00:06:33,895 --> 00:06:37,926
sfogliare il secondo e poi iniziare con il coperchio completamente a sinistra.

122
00:06:37,926 --> 00:06:40,518
Quindi la coppia di valori che si allineano sono 1 e 4,

123
00:06:40,518 --> 00:06:43,851
moltiplicali insieme e questo ci dà il primo termine del nostro output.

124
00:06:43,851 --> 00:06:47,147
Fai scorrere la matrice in basso di un&#39;unità verso destra,

125
00:06:47,147 --> 00:06:50,966
le coppie che si allineano sono 1 e 5 e 2 e 4, moltiplica quelle coppie,

126
00:06:50,966 --> 00:06:54,367
sommale e questo ci dà 13, la voce successiva nel nostro output.

127
00:06:54,367 --> 00:06:58,185
Scorri le cose ancora una volta e prenderemo 1 per 6,

128
00:06:58,185 --> 00:07:01,651
più 2 per 5, più 3 per 4, che risulta essere 28.

129
00:07:01,651 --> 00:07:05,560
Un&#39;altra diapositiva e otteniamo 2 per 6, più 3 per 5,

130
00:07:05,560 --> 00:07:10,000
e questo ci dà 27, e infine l&#39;ultimo termine sembrerà 3 per 6.

131
00:07:10,000 --> 00:07:12,984
Se lo desideri, puoi visualizzare qualunque sia il tuo linguaggio di

132
00:07:12,984 --> 00:07:15,796
programmazione preferito e la tua libreria preferita che include

133
00:07:15,796 --> 00:07:18,910
varie operazioni numeriche e potrai confermare che non ti sto mentendo.

134
00:07:18,910 --> 00:07:21,560
Se prendi la convoluzione di 1, 2, 3, contro 4,

135
00:07:21,560 --> 00:07:24,320
5, 6, questo è davvero il risultato che otterrai.

136
00:07:24,320 --> 00:07:28,104
Abbiamo visto un caso in cui questa è un&#39;operazione naturale e desiderabile,

137
00:07:28,104 --> 00:07:30,487
che si aggiunge alle distribuzioni di probabilità,

138
00:07:30,487 --> 00:07:32,916
e un altro esempio comune sarebbe una media mobile.

139
00:07:32,916 --> 00:07:35,673
Immagina di avere una lunga lista di numeri e di prendere

140
00:07:35,673 --> 00:07:38,811
un&#39;altra lista più piccola di numeri la cui somma dà tutti 1.

141
00:07:38,811 --> 00:07:43,420
In questo caso, ho solo una piccola lista di 5 valori, e sono tutti uguali a 1 5°.

142
00:07:43,420 --> 00:07:47,080
Quindi, se eseguiamo questo processo di convoluzione della finestra scorrevole,

143
00:07:47,080 --> 00:07:50,831
e chiudiamo gli occhi e spazziamo sotto il tappeto ciò che accade all&#39;inizio,

144
00:07:50,831 --> 00:07:54,628
una volta che il nostro elenco più piccolo di valori si sovrappone completamente a

145
00:07:54,628 --> 00:07:58,654
quello più grande, pensa a cosa significa ogni termine in questo convoluzione significa

146
00:07:58,654 --> 00:07:59,066
davvero.

147
00:07:59,066 --> 00:08:02,803
Ad ogni iterazione, quello che stai facendo è moltiplicare ciascuno dei

148
00:08:02,803 --> 00:08:05,658
valori dei tuoi dati per 1 5 e sommarli tutti insieme,

149
00:08:05,658 --> 00:08:09,499
vale a dire che stai prendendo una media dei tuoi dati all&#39;interno di

150
00:08:09,499 --> 00:08:10,797
questa piccola finestra.

151
00:08:10,797 --> 00:08:14,744
Nel complesso, il processo ti fornisce una versione attenuata dei dati originali,

152
00:08:14,744 --> 00:08:18,113
e puoi modificarla iniziando con un piccolo elenco di numeri diverso,

153
00:08:18,113 --> 00:08:22,060
e finché quel piccolo elenco dà come somma 1, puoi comunque interpretarlo come un

154
00:08:22,060 --> 00:08:22,878
movimento media.

155
00:08:22,878 --> 00:08:27,822
Nell&#39;esempio mostrato qui, la media mobile darebbe più peso al valore centrale.

156
00:08:27,822 --> 00:08:30,720
Ciò si traduce anche in una versione livellata dei dati.

157
00:08:30,720 --> 00:08:34,199
Se crei una sorta di analogo bidimensionale di questo,

158
00:08:34,199 --> 00:08:38,691
otterrai un algoritmo divertente per sfocare una determinata immagine.

159
00:08:38,691 --> 00:08:41,672
E dovrei dire che le animazioni che sto per mostrare sono modificate

160
00:08:41,672 --> 00:08:44,783
da qualcosa che avevo originariamente realizzato per parte di una serie

161
00:08:44,783 --> 00:08:47,721
di lezioni che ho tenuto con il Julia Lab al MIT per un certo corso

162
00:08:47,721 --> 00:08:50,918
OpenCourseWare che includeva un&#39;unità di elaborazione delle immagini.

163
00:08:50,918 --> 00:08:54,509
Lì abbiamo fatto un po&#39; di più per approfondire il codice dietro tutto questo,

164
00:08:54,509 --> 00:08:56,456
quindi se sei curioso ti lascio alcuni link.

165
00:08:56,456 --> 00:09:00,595
Ma tornando a questo esempio sfocato, quello che succede è che ho questa piccola

166
00:09:00,595 --> 00:09:05,040
griglia di valori 3x3 che marcia lungo la nostra immagine originale, e se ingrandiamo,

167
00:09:05,040 --> 00:09:09,435
ognuno di questi valori è 1 9, e quello che sto facendo ad ogni iterazione moltiplica

168
00:09:09,435 --> 00:09:13,369
ciascuno di questi valori per il pixel corrispondente su cui si trova sopra.

169
00:09:13,369 --> 00:09:17,692
E ovviamente in informatica pensiamo ai colori come piccoli vettori di tre valori,

170
00:09:17,692 --> 00:09:20,400
che rappresentano le componenti rosso, verde e blu.

171
00:09:20,400 --> 00:09:24,109
Quando moltiplico tutti questi piccoli valori per 19° e li somma insieme,

172
00:09:24,109 --> 00:09:27,968
otteniamo una media lungo ciascun canale di colore e il pixel corrispondente

173
00:09:27,968 --> 00:09:31,075
per l&#39;immagine a destra viene definito come quella somma.

174
00:09:31,075 --> 00:09:35,368
L&#39;effetto complessivo, mentre lo facciamo per ogni singolo pixel dell&#39;immagine,

175
00:09:35,368 --> 00:09:37,660
è che ognuno si fonde con tutti i suoi vicini,

176
00:09:37,660 --> 00:09:40,880
il che ci dà una versione più sfocata rispetto all&#39;originale.

177
00:09:40,880 --> 00:09:44,329
Nel gergo diremmo che l&#39;immagine a destra è una convoluzione

178
00:09:44,329 --> 00:09:47,885
della nostra immagine originale con una piccola griglia di valori.

179
00:09:47,885 --> 00:09:51,176
O più tecnicamente forse dovrei dire che è la convoluzione con una

180
00:09:51,176 --> 00:09:54,468
versione ruotata di 180 gradi di quella piccola griglia di valori.

181
00:09:54,468 --> 00:09:57,043
Non che abbia importanza quando la griglia è simmetrica,

182
00:09:57,043 --> 00:10:00,746
ma vale semplicemente la pena tenere presente che la definizione di convoluzione,

183
00:10:00,746 --> 00:10:04,314
ereditata dal contesto matematico puro, dovrebbe sempre invitarti a pensare di

184
00:10:04,314 --> 00:10:05,760
capovolgere quel secondo array.

185
00:10:05,760 --> 00:10:08,314
Se lo modifichiamo leggermente, possiamo ottenere un effetto di

186
00:10:08,314 --> 00:10:11,148
sfocatura molto più elegante scegliendo una diversa griglia di valori.

187
00:10:11,148 --> 00:10:13,483
In questo caso ho una piccola griglia 5x5, ma

188
00:10:13,483 --> 00:10:15,920
la differenza non è tanto nelle sue dimensioni.

189
00:10:15,920 --> 00:10:19,314
Se ingrandiamo notiamo che il valore al centro è molto più grande

190
00:10:19,314 --> 00:10:22,502
del valore verso i bordi, e da dove proviene è che sono tutti

191
00:10:22,502 --> 00:10:26,102
campionati da una curva a campana, nota come distribuzione gaussiana.

192
00:10:26,102 --> 00:10:29,529
In questo modo, quando moltiplichiamo tutti questi valori per

193
00:10:29,529 --> 00:10:32,238
il pixel corrispondente su cui si trovano sopra,

194
00:10:32,238 --> 00:10:36,439
diamo molto più peso a quel pixel centrale e molto meno a quelli sul bordo.

195
00:10:36,439 --> 00:10:40,475
E proprio come prima, il pixel corrispondente a destra è definito come questa somma.

196
00:10:40,475 --> 00:10:43,134
Poiché eseguiamo questo processo per ogni singolo pixel,

197
00:10:43,134 --> 00:10:46,353
si ottiene un effetto sfocato che simula in modo molto più autentico

198
00:10:46,353 --> 00:10:49,760
l&#39;idea di mettere l&#39;obiettivo fuori fuoco o qualcosa del genere.

199
00:10:49,760 --> 00:10:53,504
Ma la sfocatura non è l&#39;unica cosa che puoi fare con questa idea.

200
00:10:53,504 --> 00:10:56,816
Ad esempio, dai un&#39;occhiata a questa piccola griglia di valori,

201
00:10:56,816 --> 00:11:00,859
che coinvolge alcuni numeri positivi a sinistra e alcuni numeri negativi a destra,

202
00:11:00,859 --> 00:11:03,099
che colorerò rispettivamente con blu e rosso.

203
00:11:03,099 --> 00:11:06,336
Prenditi un momento per vedere se riesci a prevedere e

204
00:11:06,336 --> 00:11:09,808
capire quale effetto questo avrà sull&#39;immagine finale.

205
00:11:09,808 --> 00:11:12,529
Quindi in questo caso penserò all&#39;immagine semplicemente

206
00:11:12,529 --> 00:11:15,250
come in scala di grigi anziché a colori, quindi ciascuno dei

207
00:11:15,250 --> 00:11:18,149
pixel è rappresentato semplicemente da un numero anziché da tre.

208
00:11:18,149 --> 00:11:20,751
E una cosa degna di nota è che mentre eseguiamo questa

209
00:11:20,751 --> 00:11:23,164
convoluzione è possibile ottenere valori negativi.

210
00:11:23,164 --> 00:11:26,047
Ad esempio, a questo punto se ingrandiamo la metà sinistra della

211
00:11:26,047 --> 00:11:28,885
nostra piccola griglia si trova interamente sopra i pixel neri,

212
00:11:28,885 --> 00:11:31,812
che avrebbero un valore pari a zero, ma la metà destra dei valori

213
00:11:31,812 --> 00:11:35,360
negativi si trova tutta sopra i pixel bianchi, il che avrebbe hanno valore uno.

214
00:11:35,360 --> 00:11:38,899
Quindi quando moltiplichiamo i termini corrispondenti e li sommiamo insieme

215
00:11:38,899 --> 00:11:42,718
i risultati saranno molto negativi, e il modo in cui lo mostro con l&#39;immagine

216
00:11:42,718 --> 00:11:46,117
a destra è colorare i valori negativi in rosso e quelli positivi in blu.

217
00:11:46,117 --> 00:11:50,601
Un&#39;altra cosa da notare è che quando sei su una patch tutta dello stesso colore

218
00:11:50,601 --> 00:11:54,871
tutto va a zero poiché la somma dei valori nella nostra piccola griglia è zero.

219
00:11:54,871 --> 00:11:57,479
Questo è molto diverso dai due esempi precedenti in cui la

220
00:11:57,479 --> 00:12:00,265
somma della nostra piccola griglia era uno, il che ci permette

221
00:12:00,265 --> 00:12:03,050
di interpretarla come una media mobile e quindi una sfocatura.

222
00:12:03,050 --> 00:12:06,620
Tutto sommato, questo piccolo processo rileva fondamentalmente ovunque ci sia una

223
00:12:06,620 --> 00:12:09,711
variazione nel valore dei pixel mentre ti sposti da sinistra a destra,

224
00:12:09,711 --> 00:12:13,324
e quindi ti offre una sorta di modo per rilevare tutti i bordi verticali della tua

225
00:12:13,324 --> 00:12:13,760
immagine.

226
00:12:13,760 --> 00:12:17,884
E allo stesso modo, se ruotassimo la griglia in modo che vari mentre

227
00:12:17,884 --> 00:12:22,966
ti sposti dall&#39;alto verso il basso, questo riprenderà tutti i bordi orizzontali,

228
00:12:22,966 --> 00:12:27,210
il che, nel caso della nostra immagine della piccola creatura a torta,

229
00:12:27,210 --> 00:12:30,020
si traduce in degli occhi piuttosto demoniaci.

230
00:12:30,020 --> 00:12:32,873
Questa griglia più piccola, tra l&#39;altro, è spesso chiamata kernel,

231
00:12:32,873 --> 00:12:36,491
e il bello è che semplicemente scegliendo un kernel diverso puoi ottenere diversi effetti

232
00:12:36,491 --> 00:12:40,028
di elaborazione delle immagini, non solo sfocare il rilevamento dei bordi ma anche cose

233
00:12:40,028 --> 00:12:40,792
come la nitidezza.

234
00:12:40,792 --> 00:12:44,410
Per quelli di voi che hanno sentito parlare di una rete neurale convoluzionale,

235
00:12:44,410 --> 00:12:47,938
l&#39;idea è quella di utilizzare i dati per capire quali dovrebbero essere i

236
00:12:47,938 --> 00:12:51,691
kernel in primo luogo, come determinato da ciò che la rete neurale vuole rilevare.

237
00:12:51,691 --> 00:12:55,457
Un&#39;altra cosa che forse dovrei sollevare è la lunghezza dell&#39;output.

238
00:12:55,457 --> 00:12:58,614
Per qualcosa come l&#39;esempio della media mobile potresti voler pensare

239
00:12:58,614 --> 00:13:02,156
ai termini solo quando entrambe le finestre sono completamente allineate tra loro,

240
00:13:02,156 --> 00:13:05,485
o nell&#39;esempio di elaborazione delle immagini forse vuoi che l&#39;output

241
00:13:05,485 --> 00:13:07,789
finale abbia la stessa dimensione dell&#39;originale.

242
00:13:07,789 --> 00:13:10,801
Ora le convoluzioni come operazione matematica pura producono sempre

243
00:13:10,801 --> 00:13:13,245
un array più grande dei due array con cui hai iniziato,

244
00:13:13,245 --> 00:13:16,431
almeno presupponendo che uno di essi non abbia una lunghezza pari a uno.

245
00:13:16,431 --> 00:13:19,035
Sappi solo che in certi contesti informatici spesso

246
00:13:19,035 --> 00:13:21,440
vuoi troncare deliberatamente quell&#39;output.

247
00:13:21,440 --> 00:13:25,796
Un&#39;altra cosa che vale la pena sottolineare è che nel contesto informatico

248
00:13:25,796 --> 00:13:30,152
l&#39;idea di girare il kernel prima di lasciarlo attraversare l&#39;originale

249
00:13:30,152 --> 00:13:33,351
spesso sembra davvero strana e semplicemente fuori luogo,

250
00:13:33,351 --> 00:13:37,541
ma ancora una volta nota che questo è ciò che è ereditato dal puro contesto

251
00:13:37,541 --> 00:13:42,504
matematico dove come noi visto le probabilità è una cosa incredibilmente naturale da fare.

252
00:13:42,504 --> 00:13:42,560


253
00:13:42,560 --> 00:13:45,889
E in realtà posso mostrarti un altro esempio di matematica pura di

254
00:13:45,889 --> 00:13:49,119
cui anche i programmatori dovrebbero interessarsi perché apre le

255
00:13:49,119 --> 00:13:52,399
porte a un algoritmo molto più veloce per calcolare tutti questi.

256
00:13:52,399 --> 00:13:54,637
Per impostare ciò che intendo per più veloce qui,

257
00:13:54,637 --> 00:13:58,398
lasciami tornare indietro e richiamare di nuovo qualche Python e creerò due diversi

258
00:13:58,398 --> 00:13:59,651
array relativamente grandi.

259
00:13:59,651 --> 00:14:03,721
Ognuno conterrà centomila elementi casuali e valuterò il tempo

260
00:14:03,721 --> 00:14:07,598
di esecuzione della funzione convolve dalla libreria Numpy.

261
00:14:07,598 --> 00:14:10,870
E in questo caso lo esegue per più iterazioni diverse,

262
00:14:10,870 --> 00:14:15,332
cerca di trovare una media e sembra che su questo computer almeno la media

263
00:14:15,332 --> 00:14:16,403
sia 4.87 secondi.

264
00:14:16,403 --> 00:14:20,896
Al contrario, se utilizzo una funzione diversa dalla libreria scipy chiamata

265
00:14:20,896 --> 00:14:26,147
fftconvolve che è la stessa cosa solo implementata in modo diverso che ne richiede solo 4.

266
00:14:26,147 --> 00:14:30,640
3 millisecondi in media, quindi un miglioramento di tre ordini di grandezza.

267
00:14:30,640 --> 00:14:34,643
E ancora, anche se vola con un nome diverso, fornisce lo stesso output dell&#39;altra

268
00:14:34,643 --> 00:14:38,833
funzione di convoluzione, sta solo facendo qualcosa per farlo in un modo più intelligente.

269
00:14:38,833 --> 00:14:38,880


270
00:14:38,880 --> 00:14:43,516
Ricorda che con l&#39;esempio della probabilità ho detto che un altro modo in

271
00:14:43,516 --> 00:14:48,034
cui potresti pensare alla convoluzione era creare questa tabella di tutti i

272
00:14:48,034 --> 00:14:52,611
prodotti a coppie e poi sommare questi prodotti a coppie lungo le diagonali.

273
00:14:52,611 --> 00:14:55,937
Ovviamente non c&#39;è nulla di specifico nella probabilità ogni volta che

274
00:14:55,937 --> 00:14:59,352
stai convolgendo due diversi elenchi di numeri puoi pensarci in questo modo.

275
00:14:59,352 --> 00:15:02,898
Crea questo tipo di tavola pitagorica con tutti i prodotti a coppie e poi

276
00:15:02,898 --> 00:15:06,492
ogni somma lungo la diagonale corrisponde a uno dei tuoi risultati finali.

277
00:15:06,492 --> 00:15:09,391
Un contesto in cui questa visione è particolarmente

278
00:15:09,391 --> 00:15:12,513
naturale è quando si moltiplicano insieme due polinomi.

279
00:15:12,513 --> 00:15:18,281
Ad esempio, prendiamo la piccola griglia che abbiamo già e sostituiamo i termini in alto

280
00:15:18,281 --> 00:15:23,920
con 1, 2x e 3x al quadrato e sostituiamo gli altri termini con 4, 5x e 6x al quadrato.

281
00:15:23,920 --> 00:15:26,243
Ora pensa a cosa significa quando creiamo tutti

282
00:15:26,243 --> 00:15:28,760
questi diversi prodotti a coppie tra i due elenchi.

283
00:15:28,760 --> 00:15:33,171
Quello che stai facendo è essenzialmente espandere il prodotto completo dei due

284
00:15:33,171 --> 00:15:37,582
polinomi che ho scritto e poi quando sommi lungo la diagonale ciò corrisponde a

285
00:15:37,582 --> 00:15:41,883
raccogliere tutti i termini simili, il che è abbastanza accurato espandere un

286
00:15:41,883 --> 00:15:46,239
polinomio e raccogliere termini simili è esattamente il stesso processo di una

287
00:15:46,239 --> 00:15:47,011
convoluzione.

288
00:15:47,011 --> 00:15:49,619
Ma questo ci permette di fare qualcosa di davvero

289
00:15:49,619 --> 00:15:52,696
interessante perché pensa a quello che stiamo dicendo qui.

290
00:15:52,696 --> 00:15:56,754
Stiamo dicendo che se prendi due funzioni diverse e le moltiplichi insieme,

291
00:15:56,754 --> 00:16:00,705
che è una semplice operazione puntuale che è la stessa cosa che se avessi

292
00:16:00,705 --> 00:16:04,924
prima estratto i coefficienti da ciascuno di essi assumendo che siano polinomi

293
00:16:04,924 --> 00:16:08,821
e poi avessi preso una convoluzione di quelli due liste di coefficienti.

294
00:16:08,821 --> 00:16:12,360
Ciò che lo rende così interessante è che le convoluzioni sembrano in linea

295
00:16:12,360 --> 00:16:15,710
di principio molto più complicate della semplice moltiplicazione e non

296
00:16:15,710 --> 00:16:18,729
intendo solo concettualmente che sono più difficili da pensare,

297
00:16:18,729 --> 00:16:21,984
intendo che a livello computazionale sono necessari più passaggi per

298
00:16:21,984 --> 00:16:26,089
eseguire una convoluzione che per eseguire una prodotto puntuale di due liste diverse.

299
00:16:26,089 --> 00:16:29,495
Ad esempio, diciamo che ti ho dato due polinomi davvero grandi,

300
00:16:29,495 --> 00:16:32,210
ciascuno con un centinaio di coefficienti diversi,

301
00:16:32,210 --> 00:16:36,627
quindi se il modo in cui li moltiplichi fosse quello di espandere questo prodotto,

302
00:16:36,627 --> 00:16:41,417
sai riempire l&#39;intera griglia 100 per 100 di prodotti a coppie che richiederebbero di

303
00:16:41,417 --> 00:16:46,100
farlo esegui 10.000 prodotti diversi e poi quando raccogli tutti i termini simili lungo

304
00:16:46,100 --> 00:16:49,773
le diagonali si ottiene un altro insieme di circa 10.000 operazioni.

305
00:16:49,773 --> 00:16:53,851
Più in generale nel gergo diremmo che l&#39;algoritmo è O di n al quadrato,

306
00:16:53,851 --> 00:16:57,501
il che significa che per due elenchi di dimensione n il modo in cui

307
00:16:57,501 --> 00:17:00,935
il numero di operazioni scala è proporzionale al quadrato di n.

308
00:17:00,935 --> 00:17:04,637
D&#39;altra parte, se penso a due polinomi in termini di output,

309
00:17:04,637 --> 00:17:08,224
ad esempio campionando i loro valori in una manciata di input,

310
00:17:08,224 --> 00:17:13,236
moltiplicarli richiede solo tante operazioni quanto il numero di campioni poiché ancora

311
00:17:13,236 --> 00:17:18,361
una volta è un&#39;operazione puntuale e con i polinomi hai solo bisogno un numero finito

312
00:17:18,361 --> 00:17:21,152
di campioni per poter recuperare i coefficienti.

313
00:17:21,152 --> 00:17:23,580
Ad esempio sono sufficienti due output per specificare

314
00:17:23,580 --> 00:17:25,214
in modo univoco un polinomio lineare.

315
00:17:25,214 --> 00:17:29,360
Tre output sarebbero sufficienti per specificare in modo univoco un polinomio quadratico.

316
00:17:29,360 --> 00:17:32,798
E in generale se si conoscono n output distinti è sufficiente

317
00:17:32,798 --> 00:17:36,901
specificare in modo univoco un polinomio che abbia n coefficienti diversi.

318
00:17:36,901 --> 00:17:41,188
O se preferisci, potremmo esprimerlo nel linguaggio dei sistemi di equazioni.

319
00:17:41,188 --> 00:17:45,075
Immagina che ti dica che ho un polinomio ma non ti dico quali sono i coefficienti,

320
00:17:45,075 --> 00:17:46,480
quelli sono un mistero per te.

321
00:17:46,480 --> 00:17:48,755
Nel nostro esempio potresti pensare a questo come

322
00:17:48,755 --> 00:17:50,666
al prodotto che stiamo cercando di capire.

323
00:17:50,666 --> 00:17:54,855
Quindi supponiamo che ti dica semplicemente quali sarebbero i risultati di

324
00:17:54,855 --> 00:17:59,211
questo polinomio se inserisci vari input diversi come 0, 1, 2, 3, e così via,

325
00:17:59,211 --> 00:18:03,791
e te ne do abbastanza in modo da avere tante equazioni quante hai delle incognite.

326
00:18:03,791 --> 00:18:07,245
Sembra anche che sia un sistema lineare di equazioni, quindi è carino.

327
00:18:07,245 --> 00:18:09,191
E questo, almeno in linea di principio, dovrebbe

328
00:18:09,191 --> 00:18:11,137
essere sufficiente per recuperare i coefficienti.

329
00:18:11,137 --> 00:18:15,240
Quindi lo schema approssimativo dell&#39;algoritmo sarebbe quindi che ogni volta che vuoi

330
00:18:15,240 --> 00:18:19,253
convolvere due elenchi di numeri li tratti come se fossero coefficienti di due polinomi.

331
00:18:19,253 --> 00:18:22,713
Campioni quei polinomi con un numero sufficiente di output,

332
00:18:22,713 --> 00:18:26,808
moltiplichi quei campioni in modo puntuale e quindi risolvi il sistema

333
00:18:26,808 --> 00:18:31,364
per recuperare i coefficienti come un modo subdolo per trovare la convoluzione.

334
00:18:31,364 --> 00:18:35,433
E almeno come ho affermato finora, alcuni di voi potrebbero giustamente lamentarsi:

335
00:18:35,433 --> 00:18:37,564
&quot;Grant, questo è un piano idiota&quot;.

336
00:18:37,564 --> 00:18:41,180
Perché per prima cosa il solo calcolo di tutti questi campioni per uno dei

337
00:18:41,180 --> 00:18:44,989
polinomi che conosciamo già richiede l&#39;ordine di n operazioni al quadrato,

338
00:18:44,989 --> 00:18:48,316
per non parlare del fatto che risolvere quel sistema sarà certamente

339
00:18:48,316 --> 00:18:52,656
computazionalmente difficile quanto eseguire semplicemente la convoluzione in primo luogo.

340
00:18:52,656 --> 00:18:56,802
Quindi, certo, abbiamo questa connessione tra moltiplicazione e convoluzioni,

341
00:18:56,802 --> 00:19:01,054
ma tutta la complessità avviene nel tradurre da un punto di vista all&#39;altro.

342
00:19:01,054 --> 00:19:04,415
Ma c’è un trucco, e quelli di voi che conoscono le trasformate di

343
00:19:04,415 --> 00:19:07,673
Fourier e l’algoritmo FFT potrebbero capire dove stiamo andando.

344
00:19:07,673 --> 00:19:09,821
Se non hai familiarità con questi argomenti, quello

345
00:19:09,821 --> 00:19:12,176
che sto per dire potrebbe sembrare del tutto inaspettato.

346
00:19:12,176 --> 00:19:14,811
Sappi solo che ci sono alcuni percorsi che avresti potuto

347
00:19:14,811 --> 00:19:17,582
percorrere in matematica che rendono questo passo più atteso.

348
00:19:17,582 --> 00:19:20,697
Fondamentalmente l’idea è che qui abbiamo libertà di scelta.

349
00:19:20,697 --> 00:19:25,537
Se invece di valutare un insieme arbitrario di input come 0, 1, 2, 3 e così via,

350
00:19:25,537 --> 00:19:30,080
scegli di valutare un insieme di numeri complessi appositamente selezionati.

351
00:19:30,080 --> 00:19:32,905
In particolare quelli che si trovano equamente distanziati sul cerchio unitario,

352
00:19:32,905 --> 00:19:34,894
quelli che sono conosciuti come le radici dell&#39;unità.

353
00:19:34,894 --> 00:19:37,364
Questo ci dà un sistema più amichevole.

354
00:19:37,364 --> 00:19:41,695
L&#39;idea di base è che trovando un numero in cui l&#39;assunzione dei suoi

355
00:19:41,695 --> 00:19:46,252
poteri rientra in questo modello ciclico, significa che il sistema che generiamo

356
00:19:46,252 --> 00:19:49,796
avrà molta ridondanza nei diversi termini che stai calcolando,

357
00:19:49,796 --> 00:19:53,227
e essendo intelligente su come Sfruttando questa ridondanza,

358
00:19:53,227 --> 00:19:55,252
puoi risparmiare un sacco di lavoro.

359
00:19:55,252 --> 00:19:58,767
Questo insieme di output che ho scritto ha un nome speciale,

360
00:19:58,767 --> 00:20:02,166
si chiama trasformata discreta di Fourier dei coefficienti.

361
00:20:02,166 --> 00:20:05,635
E se vuoi saperne di più, in realtà ho tenuto un&#39;altra lezione per lo

362
00:20:05,635 --> 00:20:09,103
stesso corso di Julia al MIT, tutta sulle trasformate discrete di Fourier.

363
00:20:09,103 --> 00:20:13,208
E c&#39;è anche un video davvero eccellente sul canale riducibile che parla della

364
00:20:13,208 --> 00:20:17,263
trasformata veloce di Fourier, che è un algoritmo per calcolarli più velocemente.

365
00:20:17,263 --> 00:20:20,780
Inoltre Veritasium ha recentemente realizzato un ottimo video sulle FFT,

366
00:20:20,780 --> 00:20:21,984
quindi hai molte opzioni.

367
00:20:21,984 --> 00:20:24,786
E questo algoritmo veloce è davvero il punto per noi.

368
00:20:24,786 --> 00:20:27,211
Ancora una volta, a causa di tutta questa ridondanza,

369
00:20:27,211 --> 00:20:30,310
esiste un metodo per passare dai coefficienti a tutti questi output,

370
00:20:30,310 --> 00:20:33,229
dove invece di fare nell&#39;ordine di n operazioni al quadrato,

371
00:20:33,229 --> 00:20:36,239
si esegue nell&#39;ordine di n volte il logaritmo di n operazioni,

372
00:20:36,239 --> 00:20:39,293
che è molto molto meglio se si passa a elenchi di grandi dimensioni.

373
00:20:39,293 --> 00:20:42,386
E, cosa più importante, questo algoritmo FFT funziona in entrambe le direzioni.

374
00:20:42,386 --> 00:20:45,515
Permette anche di passare dagli output ai coefficienti.

375
00:20:45,515 --> 00:20:49,054
Quindi, riunendo il tutto, diamo un&#39;occhiata allo schema del nostro algoritmo.

376
00:20:49,054 --> 00:20:52,519
Ora possiamo dire che ogni volta che ti vengono dati due lunghi elenchi

377
00:20:52,519 --> 00:20:56,033
di numeri e vuoi fare la loro convoluzione, calcola prima la trasformata

378
00:20:56,033 --> 00:20:59,498
veloce di Fourier di ciascuno di essi, che nel profondo della tua mente

379
00:20:59,498 --> 00:21:03,012
puoi semplicemente pensare come se li trattassi come sono i coefficienti

380
00:21:03,012 --> 00:21:06,766
di un polinomio e lo valutano in una serie di punti appositamente selezionati.

381
00:21:06,766 --> 00:21:10,684
Poi moltiplica insieme i due risultati che hai appena ottenuto in termini di punti,

382
00:21:10,684 --> 00:21:14,322
il che è bello e veloce, e poi fai una trasformata di Fourier veloce inversa,

383
00:21:14,322 --> 00:21:18,427
e quello che ti dà è il subdolo modo backdoor per calcolare la convoluzione che stavamo

384
00:21:18,427 --> 00:21:18,847
cercando.

385
00:21:18,847 --> 00:21:22,957
Ma questa volta si tratta solo di O di n log n operazioni.

386
00:21:22,957 --> 00:21:24,865
Per me è davvero fantastico!

387
00:21:24,865 --> 00:21:28,359
Questo contesto molto specifico in cui compaiono le convoluzioni,

388
00:21:28,359 --> 00:21:33,071
moltiplicando due polinomi, apre le porte a un algoritmo che è rilevante ovunque possano

389
00:21:33,071 --> 00:21:34,235
emergere convoluzioni.

390
00:21:34,235 --> 00:21:35,978
Se vuoi aggiungere distribuzioni di probabilità,

391
00:21:35,978 --> 00:21:38,822
esegui un&#39;elaborazione di immagini di grandi dimensioni, qualunque essa sia.

392
00:21:38,822 --> 00:21:41,847
E penso che sia un ottimo esempio del perché dovresti essere

393
00:21:41,847 --> 00:21:44,624
emozionato quando vedi qualche operazione o concetto in

394
00:21:44,624 --> 00:21:47,798
matematica comparire in molte aree apparentemente non correlate.

395
00:21:47,798 --> 00:21:51,967
Se vuoi fare qualche compito a casa, ecco qualcosa a cui è divertente pensare.

396
00:21:51,967 --> 00:21:54,344
Spiega perché quando moltiplichi due numeri diversi,

397
00:21:54,344 --> 00:21:57,977
semplicemente la moltiplicazione ordinaria come tutti impariamo alle elementari,

398
00:21:57,977 --> 00:22:01,924
quello che stai facendo è fondamentalmente una convoluzione tra le cifre di quei numeri.

399
00:22:01,924 --> 00:22:04,571
Ci sono alcuni passaggi aggiuntivi con carry e simili,

400
00:22:04,571 --> 00:22:06,785
ma il passaggio principale è una convoluzione.

401
00:22:06,785 --> 00:22:09,558
Alla luce dell&#39;esistenza di un algoritmo veloce,

402
00:22:09,558 --> 00:22:12,539
ciò significa che se hai due numeri interi molto grandi,

403
00:22:12,539 --> 00:22:16,305
allora esiste un modo per trovare il loro prodotto che è più veloce del

404
00:22:16,305 --> 00:22:18,240
metodo che impariamo alle elementari.

405
00:22:18,240 --> 00:22:22,450
Che invece di richiedere O di n operazioni al quadrato richiede solo O di n log n,

406
00:22:22,450 --> 00:22:25,291
il che non sembra nemmeno che dovrebbe essere possibile.

407
00:22:25,291 --> 00:22:28,660
Il problema è che prima che ciò sia effettivamente utile nella pratica,

408
00:22:28,660 --> 00:22:31,280
i tuoi numeri dovrebbero essere assolutamente mostruosi.

409
00:22:31,280 --> 00:22:34,445
Ma è comunque bello che esista un simile algoritmo.

410
00:22:34,445 --> 00:22:41,838
Successivamente rivolgeremo la nostra attenzione al caso

411
00:22:41,838 --> 00:22:50,400
continuo con un focus speciale sulle distribuzioni di probabilità.

