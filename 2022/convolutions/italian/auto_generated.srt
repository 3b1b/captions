1
00:00:00,000 --> 00:00:03,868
Supponiamo che ti dia due diversi elenchi di numeri, o forse due diverse funzioni, e ti

2
00:00:03,868 --> 00:00:07,473
chieda di pensare a tutti i modi in cui potresti combinare questi due elenchi per

3
00:00:07,473 --> 00:00:11,298
ottenere un nuovo elenco di numeri, o combinare le due funzioni per ottenere una nuova

4
00:00:11,298 --> 00:00:11,782
funzione .

5
00:00:11,782 --> 00:00:14,125
Forse un modo semplice che mi viene in mente è

6
00:00:14,125 --> 00:00:16,320
semplicemente sommarli termine per termine.

7
00:00:16,320 --> 00:00:20,131
Allo stesso modo con le funzioni è possibile aggiungere tutte le uscite corrispondenti.

8
00:00:20,131 --> 00:00:23,192
Allo stesso modo, potresti anche moltiplicare i due elenchi

9
00:00:23,192 --> 00:00:26,202
termine per termine e fare la stessa cosa con le funzioni.

10
00:00:26,202 --> 00:00:29,965
Ma esiste un altro tipo di combinazione altrettanto fondamentale di

11
00:00:29,965 --> 00:00:33,840
entrambi, ma molto meno comunemente discussa, nota come convoluzione.

12
00:00:33,840 --> 00:00:36,694
Ma a differenza dei due casi precedenti, non è qualcosa che è

13
00:00:36,694 --> 00:00:39,964
semplicemente ereditato da un&#39;operazione che puoi fare sui numeri.

14
00:00:39,964 --> 00:00:42,386
È qualcosa di veramente nuovo nel contesto di

15
00:00:42,386 --> 00:00:44,809
elenchi di numeri o combinazioni di funzioni.

16
00:00:44,809 --> 00:00:48,664
Si presentano ovunque, sono onnipresenti nell&#39;elaborazione delle immagini, è

17
00:00:48,664 --> 00:00:52,519
un costrutto fondamentale nella teoria della probabilità, sono usati molto nella

18
00:00:52,519 --> 00:00:56,374
risoluzione di equazioni differenziali e in un contesto in cui quasi sicuramente

19
00:00:56,374 --> 00:01:00,277
l&#39;hai visto, se non con questo nome, sta moltiplicando due polinomi tra loro.

20
00:01:00,277 --> 00:01:03,738
Come qualcuno nel settore delle spiegazioni visive, questo è un argomento

21
00:01:03,738 --> 00:01:07,527
particolarmente interessante, perché la definizione stereotipata isolata e senza

22
00:01:07,527 --> 00:01:11,269
contesto può sembrare un po&#39; intimidatoria, ma se ci prendiamo il tempo per

23
00:01:11,269 --> 00:01:14,917
scompattare veramente ciò che sta dicendo, e prima di motivare effettivamente

24
00:01:14,917 --> 00:01:18,800
il perché vorresti qualcosa del genere, è un&#39;operazione incredibilmente bella.

25
00:01:18,800 --> 00:01:21,070
E devo ammettere che in realtà ho imparato qualcosa

26
00:01:21,070 --> 00:01:23,514
mentre mettevo insieme le immagini per questo progetto.

27
00:01:23,514 --> 00:01:27,112
Nel caso della convoluzione di due funzioni diverse, stavo cercando di pensare a

28
00:01:27,112 --> 00:01:30,843
diversi modi in cui potresti immaginare cosa ciò potrebbe significare, e con uno di

29
00:01:30,843 --> 00:01:34,530
essi ho avuto un piccolo momento ahah sul perché le distribuzioni normali svolgono

30
00:01:34,530 --> 00:01:38,483
il ruolo che lo fanno in probabilità, perché è una forma così naturale per una funzione.

31
00:01:38,483 --> 00:01:41,645
Ma sto andando troppo avanti, c&#39;è molta preparazione per quello.

32
00:01:41,645 --> 00:01:45,894
In questo video, il nostro focus principale sarà sul caso discreto, e in particolare

33
00:01:45,894 --> 00:01:50,293
sulla creazione di un algoritmo molto inaspettato ma molto intelligente per calcolarli.

34
00:01:50,293 --> 00:01:54,400
E tirerò fuori la discussione per il caso continuo in una seconda parte.

35
00:01:54,400 --> 00:01:58,891
È molto forte la tentazione di aprire con gli esempi di elaborazione delle immagini, dal

36
00:01:58,891 --> 00:02:03,382
momento che sono visivamente i più intriganti, ma ci sono un paio di pignoli che rendono

37
00:02:03,382 --> 00:02:07,823
il caso dell&#39;elaborazione delle immagini meno rappresentativo delle convoluzioni in

38
00:02:07,823 --> 00:02:12,213
generale, quindi iniziamo invece con la probabilità, e in particolare uno degli esempi

39
00:02:12,213 --> 00:02:16,755
più semplici a cui sono sicuro che tutti qui abbiano pensato ad un certo punto della loro

40
00:02:16,755 --> 00:02:21,145
vita, ovvero lanciare un paio di dadi e calcolare le possibilità di vedere varie somme

41
00:02:21,145 --> 00:02:21,600
diverse.

42
00:02:21,600 --> 00:02:24,213
E potresti dire, non è un problema, non è un problema.

43
00:02:24,213 --> 00:02:28,043
Ciascuno dei tuoi due dadi ha sei diversi risultati possibili, il che ci

44
00:02:28,043 --> 00:02:31,559
dà un totale di 36 distinte coppie di risultati possibili, e se li

45
00:02:31,559 --> 00:02:35,600
esaminiamo tutti possiamo contare quante coppie hanno una determinata somma.

46
00:02:35,600 --> 00:02:40,610
E disponendo tutte le coppie in una griglia come questa, una cosa carina è che tutte le

47
00:02:40,610 --> 00:02:45,678
coppie che hanno una somma costante sono visibili lungo una di queste diverse diagonali.

48
00:02:45,678 --> 00:02:48,777
Quindi semplicemente contando quanti ne esistono su ciascuna di quelle

49
00:02:48,777 --> 00:02:51,920
diagonali ti dirà quanto è probabile che tu veda una somma particolare.

50
00:02:51,920 --> 00:02:55,233
E direi molto bene, molto bene, ma riesci a pensare ad

51
00:02:55,233 --> 00:02:58,788
altri modi in cui potresti visualizzare la stessa domanda?

52
00:02:58,788 --> 00:03:01,245
Altre immagini che possono venirvi in mente pensando a

53
00:03:01,245 --> 00:03:03,836
tutte le coppie distinte che hanno una determinata somma?

54
00:03:03,836 --> 00:03:07,586
E forse uno di voi alza la mano e dice: sì, ne ho uno.

55
00:03:07,586 --> 00:03:10,699
Diciamo che immagini questi due diversi insiemi di

56
00:03:10,699 --> 00:03:14,056
possibilità ciascuno in fila, ma giri la seconda fila.

57
00:03:14,056 --> 00:03:16,542
In questo modo tutte le diverse coppie che sommate danno

58
00:03:16,542 --> 00:03:18,984
fino a sette si allineano verticalmente in questo modo.

59
00:03:18,984 --> 00:03:22,750
E se facciamo scorrere la riga in basso completamente a destra, allora l&#39;unica

60
00:03:22,750 --> 00:03:26,380
coppia che sommata dà due, gli occhi di serpente, sono gli unici ad allinearsi.

61
00:03:26,380 --> 00:03:29,603
E se lo sposto su un&#39;unità a destra, le coppie che si

62
00:03:29,603 --> 00:03:32,938
allineano sono le due coppie diverse che sommate danno tre.

63
00:03:32,938 --> 00:03:37,275
E in generale, diversi valori di offset di questo array inferiore, che ricorda che

64
00:03:37,275 --> 00:03:41,926
dovevo prima girarlo, rivelano tutte le coppie distinte che hanno una determinata somma.

65
00:03:41,926 --> 00:03:45,767
Per quanto riguarda le domande sulla probabilità, questo non è ancora

66
00:03:45,767 --> 00:03:49,498
particolarmente interessante, perché tutto ciò che stiamo facendo è

67
00:03:49,498 --> 00:03:53,120
contare quanti risultati ci sono in ciascuna di queste categorie.

68
00:03:53,120 --> 00:03:55,510
Ma questo avviene con il presupposto implicito che ci sia

69
00:03:55,510 --> 00:03:57,941
la stessa possibilità che ciascuno di questi volti emerga.

70
00:03:57,941 --> 00:04:01,909
E se ti dicessi che ho un set speciale di dadi che non è uniforme?

71
00:04:01,909 --> 00:04:05,754
Forse il dado blu ha il proprio insieme di numeri che descrivono le probabilità che

72
00:04:05,754 --> 00:04:09,782
esca ciascuna faccia, e il dado rosso ha il proprio insieme di numeri unico e distinto.

73
00:04:09,782 --> 00:04:13,244
In tal caso, se volessi calcolare, ad esempio, la probabilità

74
00:04:13,244 --> 00:04:16,705
di vedere un due, moltiplicheresti la probabilità che il dado

75
00:04:16,705 --> 00:04:19,943
blu sia uno per la probabilità che il dado rosso sia uno.

76
00:04:19,943 --> 00:04:23,287
E per le probabilità di vedere un tre, guardi le due coppie

77
00:04:23,287 --> 00:04:26,853
distinte dove è possibile, e ancora, moltiplichi le probabilità

78
00:04:26,853 --> 00:04:30,029
corrispondenti, e poi sommi questi due prodotti insieme.

79
00:04:30,029 --> 00:04:33,648
Allo stesso modo, le possibilità di vedere un quattro implicano moltiplicare

80
00:04:33,648 --> 00:04:36,845
insieme tre diverse coppie di possibilità e sommarle tutte insieme.

81
00:04:36,845 --> 00:04:41,162
E nello spirito di impostare alcune formule, chiamiamo queste probabilità

82
00:04:41,162 --> 00:04:45,946
massime a1, a2, a3 e così via, e chiamiamo quelle in basso b1, b2, b3 e così via.

83
00:04:45,946 --> 00:04:49,707
E in generale, questo processo, in cui prendiamo due diversi array di

84
00:04:49,707 --> 00:04:53,414
numeri, capovolgiamo il secondo e poi li allineiamo a vari valori di

85
00:04:53,414 --> 00:04:57,228
offset diversi, prendendo un gruppo di prodotti a coppie e sommandoli,

86
00:04:57,228 --> 00:05:01,311
questo è uno dei Modi fondamentali per pensare a cosa sia una convoluzione.

87
00:05:01,311 --> 00:05:06,389
Quindi, giusto per spiegarlo un po&#39; più esattamente, attraverso questo processo,

88
00:05:06,389 --> 00:05:11,408
abbiamo appena generato le probabilità di vedere due, tre, quattro, fino a 12, e le

89
00:05:11,408 --> 00:05:16,486
abbiamo ottenute mescolando insieme una lista di valori, a e un&#39;altra elenco dei

90
00:05:16,486 --> 00:05:17,143
valori, b.

91
00:05:17,143 --> 00:05:20,491
Nel gergo, diremmo che la convoluzione di queste due sequenze

92
00:05:20,491 --> 00:05:23,786
ci dà questa nuova sequenza, la nuova sequenza di 11 valori,

93
00:05:23,786 --> 00:05:27,188
ognuno dei quali assomiglia ad una somma di prodotti a coppie.

94
00:05:27,188 --> 00:05:31,827
Se preferisci, un altro modo in cui potresti pensare alla stessa operazione è creare

95
00:05:31,827 --> 00:05:36,193
prima una tabella di tutti i prodotti a coppie e poi sommare lungo tutte queste

96
00:05:36,193 --> 00:05:36,793
diagonali.

97
00:05:36,793 --> 00:05:39,596
Ancora una volta, questo è un modo di mescolare insieme queste due

98
00:05:39,596 --> 00:05:42,315
sequenze di numeri per ottenere una nuova sequenza di 11 numeri.

99
00:05:42,315 --> 00:05:44,511
È lo stesso funzionamento pensato per le finestre

100
00:05:44,511 --> 00:05:46,400
scorrevoli, solo un&#39;altra prospettiva.

101
00:05:46,400 --> 00:05:50,335
Mettendogli una piccola annotazione, ecco come potresti vederlo scritto.

102
00:05:50,335 --> 00:05:55,111
La convoluzione di a e b, indicata con questo piccolo asterisco, è una nuova lista,

103
00:05:55,111 --> 00:06:00,057
e l&#39;ennesimo elemento di quella lista sembra una somma, e quella somma va su tutte

104
00:06:00,057 --> 00:06:04,833
le diverse coppie di indici, i e j, in modo che la somma di tali indici è pari a n.

105
00:06:04,833 --> 00:06:10,324
È un po&#39; lungo, ma per esempio, se n fosse 6, le coppie che esamineremo sono

106
00:06:10,324 --> 00:06:15,680
1 e 5, 2 e 4, 3 e 3, 4 e 2, 5 e 1, tutte le diverse coppie che si sommano a 6.

107
00:06:15,680 --> 00:06:19,412
Ma onestamente, comunque la scrivi, la notazione è di importanza secondaria

108
00:06:19,412 --> 00:06:23,145
rispetto all&#39;immagine che potresti tenere in testa durante il processo.

109
00:06:23,145 --> 00:06:27,014
Ecco, forse può essere utile fare un esempio semplicissimo, in cui potrei

110
00:06:27,014 --> 00:06:30,987
chiederti qual è la convoluzione della lista 1, 2, 3, con la lista 4, 5, 6.

111
00:06:30,987 --> 00:06:34,406
Potresti immaginare di prendere entrambi questi elenchi, sfogliare

112
00:06:34,406 --> 00:06:37,926
il secondo e poi iniziare con il coperchio completamente a sinistra.

113
00:06:37,926 --> 00:06:41,120
Quindi la coppia di valori che si allineano sono 1 e 4, moltiplicali

114
00:06:41,120 --> 00:06:43,851
insieme e questo ci dà il primo termine del nostro output.

115
00:06:43,851 --> 00:06:47,304
Fai scorrere la matrice in basso di un&#39;unità verso destra, le

116
00:06:47,304 --> 00:06:50,966
coppie che si allineano sono 1 e 5 e 2 e 4, moltiplica quelle coppie,

117
00:06:50,966 --> 00:06:54,367
sommale e questo ci dà 13, la voce successiva nel nostro output.

118
00:06:54,367 --> 00:06:57,973
Scorri le cose ancora una volta e prenderemo 1 per

119
00:06:57,973 --> 00:07:01,651
6, più 2 per 5, più 3 per 4, che risulta essere 28.

120
00:07:01,651 --> 00:07:05,693
Un&#39;altra diapositiva e otteniamo 2 per 6, più 3 per 5, e

121
00:07:05,693 --> 00:07:10,000
questo ci dà 27, e infine l&#39;ultimo termine sembrerà 3 per 6.

122
00:07:10,000 --> 00:07:12,984
Se lo desideri, puoi visualizzare qualunque sia il tuo linguaggio di

123
00:07:12,984 --> 00:07:15,796
programmazione preferito e la tua libreria preferita che include

124
00:07:15,796 --> 00:07:18,910
varie operazioni numeriche e potrai confermare che non ti sto mentendo.

125
00:07:18,910 --> 00:07:21,560
Se prendi la convoluzione di 1, 2, 3, contro 4,

126
00:07:21,560 --> 00:07:24,320
5, 6, questo è davvero il risultato che otterrai.

127
00:07:24,320 --> 00:07:27,356
Abbiamo visto un caso in cui questa è un&#39;operazione naturale

128
00:07:27,356 --> 00:07:30,487
e desiderabile, che si aggiunge alle distribuzioni di probabilità,

129
00:07:30,487 --> 00:07:32,916
e un altro esempio comune sarebbe una media mobile.

130
00:07:32,916 --> 00:07:35,673
Immagina di avere una lunga lista di numeri e di prendere

131
00:07:35,673 --> 00:07:38,811
un&#39;altra lista più piccola di numeri la cui somma dà tutti 1.

132
00:07:38,811 --> 00:07:43,420
In questo caso, ho solo una piccola lista di 5 valori, e sono tutti uguali a 1 5°.

133
00:07:43,420 --> 00:07:47,171
Quindi, se eseguiamo questo processo di convoluzione della finestra scorrevole, e

134
00:07:47,171 --> 00:07:51,014
chiudiamo gli occhi e spazziamo sotto il tappeto ciò che accade all&#39;inizio, una

135
00:07:51,014 --> 00:07:54,948
volta che il nostro elenco più piccolo di valori si sovrappone completamente a quello

136
00:07:54,948 --> 00:07:59,066
più grande, pensa a cosa significa ogni termine in questo convoluzione significa davvero.

137
00:07:59,066 --> 00:08:02,803
Ad ogni iterazione, quello che stai facendo è moltiplicare ciascuno dei

138
00:08:02,803 --> 00:08:06,748
valori dei tuoi dati per 1 5 e sommarli tutti insieme, vale a dire che stai

139
00:08:06,748 --> 00:08:10,797
prendendo una media dei tuoi dati all&#39;interno di questa piccola finestra.

140
00:08:10,797 --> 00:08:14,744
Nel complesso, il processo ti fornisce una versione attenuata dei dati originali,

141
00:08:14,744 --> 00:08:18,787
e puoi modificarla iniziando con un piccolo elenco di numeri diverso, e finché quel

142
00:08:18,787 --> 00:08:22,878
piccolo elenco dà come somma 1, puoi comunque interpretarlo come un movimento media.

143
00:08:22,878 --> 00:08:27,822
Nell&#39;esempio mostrato qui, la media mobile darebbe più peso al valore centrale.

144
00:08:27,822 --> 00:08:30,720
Ciò si traduce anche in una versione livellata dei dati.

145
00:08:30,720 --> 00:08:34,769
Se crei una sorta di analogo bidimensionale di questo, otterrai

146
00:08:34,769 --> 00:08:38,691
un algoritmo divertente per sfocare una determinata immagine.

147
00:08:38,691 --> 00:08:41,672
E dovrei dire che le animazioni che sto per mostrare sono modificate

148
00:08:41,672 --> 00:08:44,783
da qualcosa che avevo originariamente realizzato per parte di una serie

149
00:08:44,783 --> 00:08:47,721
di lezioni che ho tenuto con il Julia Lab al MIT per un certo corso

150
00:08:47,721 --> 00:08:50,918
OpenCourseWare che includeva un&#39;unità di elaborazione delle immagini.

151
00:08:50,918 --> 00:08:53,600
Lì abbiamo fatto un po&#39; di più per approfondire il codice

152
00:08:53,600 --> 00:08:56,456
dietro tutto questo, quindi se sei curioso ti lascio alcuni link.

153
00:08:56,456 --> 00:09:00,595
Ma tornando a questo esempio sfocato, quello che succede è che ho questa piccola

154
00:09:00,595 --> 00:09:05,040
griglia di valori 3x3 che marcia lungo la nostra immagine originale, e se ingrandiamo,

155
00:09:05,040 --> 00:09:09,435
ognuno di questi valori è 1 9, e quello che sto facendo ad ogni iterazione moltiplica

156
00:09:09,435 --> 00:09:13,369
ciascuno di questi valori per il pixel corrispondente su cui si trova sopra.

157
00:09:13,369 --> 00:09:16,910
E ovviamente in informatica pensiamo ai colori come piccoli vettori

158
00:09:16,910 --> 00:09:20,400
di tre valori, che rappresentano le componenti rosso, verde e blu.

159
00:09:20,400 --> 00:09:24,109
Quando moltiplico tutti questi piccoli valori per 19° e li somma insieme,

160
00:09:24,109 --> 00:09:27,968
otteniamo una media lungo ciascun canale di colore e il pixel corrispondente

161
00:09:27,968 --> 00:09:31,075
per l&#39;immagine a destra viene definito come quella somma.

162
00:09:31,075 --> 00:09:34,441
L&#39;effetto complessivo, mentre lo facciamo per ogni singolo pixel

163
00:09:34,441 --> 00:09:37,660
dell&#39;immagine, è che ognuno si fonde con tutti i suoi vicini,

164
00:09:37,660 --> 00:09:40,880
il che ci dà una versione più sfocata rispetto all&#39;originale.

165
00:09:40,880 --> 00:09:44,329
Nel gergo diremmo che l&#39;immagine a destra è una convoluzione

166
00:09:44,329 --> 00:09:47,885
della nostra immagine originale con una piccola griglia di valori.

167
00:09:47,885 --> 00:09:51,176
O più tecnicamente forse dovrei dire che è la convoluzione con una

168
00:09:51,176 --> 00:09:54,468
versione ruotata di 180 gradi di quella piccola griglia di valori.

169
00:09:54,468 --> 00:09:58,172
Non che abbia importanza quando la griglia è simmetrica, ma vale semplicemente la

170
00:09:58,172 --> 00:10:01,785
pena tenere presente che la definizione di convoluzione, ereditata dal contesto

171
00:10:01,785 --> 00:10:05,760
matematico puro, dovrebbe sempre invitarti a pensare di capovolgere quel secondo array.

172
00:10:05,760 --> 00:10:08,314
Se lo modifichiamo leggermente, possiamo ottenere un effetto di

173
00:10:08,314 --> 00:10:11,148
sfocatura molto più elegante scegliendo una diversa griglia di valori.

174
00:10:11,148 --> 00:10:13,483
In questo caso ho una piccola griglia 5x5, ma

175
00:10:13,483 --> 00:10:15,920
la differenza non è tanto nelle sue dimensioni.

176
00:10:15,920 --> 00:10:19,314
Se ingrandiamo notiamo che il valore al centro è molto più grande

177
00:10:19,314 --> 00:10:22,502
del valore verso i bordi, e da dove proviene è che sono tutti

178
00:10:22,502 --> 00:10:26,102
campionati da una curva a campana, nota come distribuzione gaussiana.

179
00:10:26,102 --> 00:10:29,529
In questo modo, quando moltiplichiamo tutti questi valori per

180
00:10:29,529 --> 00:10:32,901
il pixel corrispondente su cui si trovano sopra, diamo molto

181
00:10:32,901 --> 00:10:36,439
più peso a quel pixel centrale e molto meno a quelli sul bordo.

182
00:10:36,439 --> 00:10:40,475
E proprio come prima, il pixel corrispondente a destra è definito come questa somma.

183
00:10:40,475 --> 00:10:43,647
Poiché eseguiamo questo processo per ogni singolo pixel, si ottiene

184
00:10:43,647 --> 00:10:46,867
un effetto sfocato che simula in modo molto più autentico l&#39;idea

185
00:10:46,867 --> 00:10:49,760
di mettere l&#39;obiettivo fuori fuoco o qualcosa del genere.

186
00:10:49,760 --> 00:10:53,504
Ma la sfocatura non è l&#39;unica cosa che puoi fare con questa idea.

187
00:10:53,504 --> 00:10:56,816
Ad esempio, dai un&#39;occhiata a questa piccola griglia di valori,

188
00:10:56,816 --> 00:10:59,933
che coinvolge alcuni numeri positivi a sinistra e alcuni numeri

189
00:10:59,933 --> 00:11:03,099
negativi a destra, che colorerò rispettivamente con blu e rosso.

190
00:11:03,099 --> 00:11:06,336
Prenditi un momento per vedere se riesci a prevedere e

191
00:11:06,336 --> 00:11:09,808
capire quale effetto questo avrà sull&#39;immagine finale.

192
00:11:09,808 --> 00:11:12,529
Quindi in questo caso penserò all&#39;immagine semplicemente

193
00:11:12,529 --> 00:11:15,250
come in scala di grigi anziché a colori, quindi ciascuno dei

194
00:11:15,250 --> 00:11:18,149
pixel è rappresentato semplicemente da un numero anziché da tre.

195
00:11:18,149 --> 00:11:20,751
E una cosa degna di nota è che mentre eseguiamo questa

196
00:11:20,751 --> 00:11:23,164
convoluzione è possibile ottenere valori negativi.

197
00:11:23,164 --> 00:11:26,047
Ad esempio, a questo punto se ingrandiamo la metà sinistra della

198
00:11:26,047 --> 00:11:29,062
nostra piccola griglia si trova interamente sopra i pixel neri, che

199
00:11:29,062 --> 00:11:32,211
avrebbero un valore pari a zero, ma la metà destra dei valori negativi

200
00:11:32,211 --> 00:11:35,360
si trova tutta sopra i pixel bianchi, il che avrebbe hanno valore uno.

201
00:11:35,360 --> 00:11:38,899
Quindi quando moltiplichiamo i termini corrispondenti e li sommiamo insieme

202
00:11:38,899 --> 00:11:42,718
i risultati saranno molto negativi, e il modo in cui lo mostro con l&#39;immagine

203
00:11:42,718 --> 00:11:46,117
a destra è colorare i valori negativi in rosso e quelli positivi in blu.

204
00:11:46,117 --> 00:11:50,601
Un&#39;altra cosa da notare è che quando sei su una patch tutta dello stesso colore

205
00:11:50,601 --> 00:11:54,871
tutto va a zero poiché la somma dei valori nella nostra piccola griglia è zero.

206
00:11:54,871 --> 00:11:57,479
Questo è molto diverso dai due esempi precedenti in cui la

207
00:11:57,479 --> 00:12:00,265
somma della nostra piccola griglia era uno, il che ci permette

208
00:12:00,265 --> 00:12:03,050
di interpretarla come una media mobile e quindi una sfocatura.

209
00:12:03,050 --> 00:12:06,620
Tutto sommato, questo piccolo processo rileva fondamentalmente ovunque ci sia una

210
00:12:06,620 --> 00:12:10,233
variazione nel valore dei pixel mentre ti sposti da sinistra a destra, e quindi ti

211
00:12:10,233 --> 00:12:13,760
offre una sorta di modo per rilevare tutti i bordi verticali della tua immagine.

212
00:12:13,760 --> 00:12:17,884
E allo stesso modo, se ruotassimo la griglia in modo che vari mentre

213
00:12:17,884 --> 00:12:21,830
ti sposti dall&#39;alto verso il basso, questo riprenderà tutti i

214
00:12:21,830 --> 00:12:25,656
bordi orizzontali, il che, nel caso della nostra immagine della

215
00:12:25,656 --> 00:12:30,020
piccola creatura a torta, si traduce in degli occhi piuttosto demoniaci.

216
00:12:30,020 --> 00:12:33,557
Questa griglia più piccola, tra l&#39;altro, è spesso chiamata kernel, e il bello è che

217
00:12:33,557 --> 00:12:37,134
semplicemente scegliendo un kernel diverso puoi ottenere diversi effetti di elaborazione

218
00:12:37,134 --> 00:12:40,350
delle immagini, non solo sfocare il rilevamento dei bordi ma anche cose come la

219
00:12:40,350 --> 00:12:40,792
nitidezza.

220
00:12:40,792 --> 00:12:44,410
Per quelli di voi che hanno sentito parlare di una rete neurale convoluzionale,

221
00:12:44,410 --> 00:12:47,938
l&#39;idea è quella di utilizzare i dati per capire quali dovrebbero essere i

222
00:12:47,938 --> 00:12:51,691
kernel in primo luogo, come determinato da ciò che la rete neurale vuole rilevare.

223
00:12:51,691 --> 00:12:55,457
Un&#39;altra cosa che forse dovrei sollevare è la lunghezza dell&#39;output.

224
00:12:55,457 --> 00:12:58,614
Per qualcosa come l&#39;esempio della media mobile potresti voler pensare

225
00:12:58,614 --> 00:13:01,729
ai termini solo quando entrambe le finestre sono completamente allineate

226
00:13:01,729 --> 00:13:04,759
tra loro, o nell&#39;esempio di elaborazione delle immagini forse vuoi

227
00:13:04,759 --> 00:13:07,789
che l&#39;output finale abbia la stessa dimensione dell&#39;originale.

228
00:13:07,789 --> 00:13:10,801
Ora le convoluzioni come operazione matematica pura producono sempre

229
00:13:10,801 --> 00:13:13,550
un array più grande dei due array con cui hai iniziato, almeno

230
00:13:13,550 --> 00:13:16,431
presupponendo che uno di essi non abbia una lunghezza pari a uno.

231
00:13:16,431 --> 00:13:19,035
Sappi solo che in certi contesti informatici spesso

232
00:13:19,035 --> 00:13:21,440
vuoi troncare deliberatamente quell&#39;output.

233
00:13:21,440 --> 00:13:25,796
Un&#39;altra cosa che vale la pena sottolineare è che nel contesto informatico

234
00:13:25,796 --> 00:13:30,152
l&#39;idea di girare il kernel prima di lasciarlo attraversare l&#39;originale

235
00:13:30,152 --> 00:13:34,453
spesso sembra davvero strana e semplicemente fuori luogo, ma ancora una volta

236
00:13:34,453 --> 00:13:38,699
nota che questo è ciò che è ereditato dal puro contesto matematico dove come

237
00:13:38,699 --> 00:13:42,560
noi visto le probabilità è una cosa incredibilmente naturale da fare.

238
00:13:42,560 --> 00:13:45,889
E in realtà posso mostrarti un altro esempio di matematica pura di

239
00:13:45,889 --> 00:13:49,119
cui anche i programmatori dovrebbero interessarsi perché apre le

240
00:13:49,119 --> 00:13:52,399
porte a un algoritmo molto più veloce per calcolare tutti questi.

241
00:13:52,399 --> 00:13:55,891
Per impostare ciò che intendo per più veloce qui, lasciami tornare indietro e

242
00:13:55,891 --> 00:13:59,651
richiamare di nuovo qualche Python e creerò due diversi array relativamente grandi.

243
00:13:59,651 --> 00:14:03,721
Ognuno conterrà centomila elementi casuali e valuterò il tempo

244
00:14:03,721 --> 00:14:07,598
di esecuzione della funzione convolve dalla libreria Numpy.

245
00:14:07,598 --> 00:14:11,882
E in questo caso lo esegue per più iterazioni diverse, cerca di trovare

246
00:14:11,882 --> 00:14:16,403
una media e sembra che su questo computer almeno la media sia 4.87 secondi.

247
00:14:16,403 --> 00:14:20,896
Al contrario, se utilizzo una funzione diversa dalla libreria scipy chiamata

248
00:14:20,896 --> 00:14:25,739
fftconvolve che è la stessa cosa solo implementata in modo diverso che ne richiede

249
00:14:25,739 --> 00:14:30,640
solo 4.3 millisecondi in media, quindi un miglioramento di tre ordini di grandezza.

250
00:14:30,640 --> 00:14:34,643
E ancora, anche se vola con un nome diverso, fornisce lo stesso output dell&#39;altra

251
00:14:34,643 --> 00:14:38,228
funzione di convoluzione, sta solo facendo qualcosa per farlo in un modo più

252
00:14:38,228 --> 00:14:38,880
intelligente.

253
00:14:38,880 --> 00:14:43,516
Ricorda che con l&#39;esempio della probabilità ho detto che un altro modo in

254
00:14:43,516 --> 00:14:48,034
cui potresti pensare alla convoluzione era creare questa tabella di tutti i

255
00:14:48,034 --> 00:14:52,611
prodotti a coppie e poi sommare questi prodotti a coppie lungo le diagonali.

256
00:14:52,611 --> 00:14:55,937
Ovviamente non c&#39;è nulla di specifico nella probabilità ogni volta che

257
00:14:55,937 --> 00:14:59,352
stai convolgendo due diversi elenchi di numeri puoi pensarci in questo modo.

258
00:14:59,352 --> 00:15:02,898
Crea questo tipo di tavola pitagorica con tutti i prodotti a coppie e poi

259
00:15:02,898 --> 00:15:06,492
ogni somma lungo la diagonale corrisponde a uno dei tuoi risultati finali.

260
00:15:06,492 --> 00:15:09,391
Un contesto in cui questa visione è particolarmente

261
00:15:09,391 --> 00:15:12,513
naturale è quando si moltiplicano insieme due polinomi.

262
00:15:12,513 --> 00:15:18,281
Ad esempio, prendiamo la piccola griglia che abbiamo già e sostituiamo i termini in alto

263
00:15:18,281 --> 00:15:23,920
con 1, 2x e 3x al quadrato e sostituiamo gli altri termini con 4, 5x e 6x al quadrato.

264
00:15:23,920 --> 00:15:26,243
Ora pensa a cosa significa quando creiamo tutti

265
00:15:26,243 --> 00:15:28,760
questi diversi prodotti a coppie tra i due elenchi.

266
00:15:28,760 --> 00:15:33,171
Quello che stai facendo è essenzialmente espandere il prodotto completo dei due

267
00:15:33,171 --> 00:15:37,582
polinomi che ho scritto e poi quando sommi lungo la diagonale ciò corrisponde a

268
00:15:37,582 --> 00:15:41,883
raccogliere tutti i termini simili, il che è abbastanza accurato espandere un

269
00:15:41,883 --> 00:15:46,239
polinomio e raccogliere termini simili è esattamente il stesso processo di una

270
00:15:46,239 --> 00:15:47,011
convoluzione.

271
00:15:47,011 --> 00:15:49,619
Ma questo ci permette di fare qualcosa di davvero

272
00:15:49,619 --> 00:15:52,696
interessante perché pensa a quello che stiamo dicendo qui.

273
00:15:52,696 --> 00:15:56,754
Stiamo dicendo che se prendi due funzioni diverse e le moltiplichi insieme,

274
00:15:56,754 --> 00:16:00,705
che è una semplice operazione puntuale che è la stessa cosa che se avessi

275
00:16:00,705 --> 00:16:04,924
prima estratto i coefficienti da ciascuno di essi assumendo che siano polinomi

276
00:16:04,924 --> 00:16:08,821
e poi avessi preso una convoluzione di quelli due liste di coefficienti.

277
00:16:08,821 --> 00:16:12,360
Ciò che lo rende così interessante è che le convoluzioni sembrano in linea

278
00:16:12,360 --> 00:16:15,710
di principio molto più complicate della semplice moltiplicazione e non

279
00:16:15,710 --> 00:16:19,107
intendo solo concettualmente che sono più difficili da pensare, intendo

280
00:16:19,107 --> 00:16:22,598
che a livello computazionale sono necessari più passaggi per eseguire una

281
00:16:22,598 --> 00:16:26,089
convoluzione che per eseguire una prodotto puntuale di due liste diverse.

282
00:16:26,089 --> 00:16:30,879
Ad esempio, diciamo che ti ho dato due polinomi davvero grandi, ciascuno con un centinaio

283
00:16:30,879 --> 00:16:35,190
di coefficienti diversi, quindi se il modo in cui li moltiplichi fosse quello di

284
00:16:35,190 --> 00:16:39,820
espandere questo prodotto, sai riempire l&#39;intera griglia 100 per 100 di prodotti a

285
00:16:39,820 --> 00:16:44,557
coppie che richiederebbero di farlo esegui 10.000 prodotti diversi e poi quando raccogli

286
00:16:44,557 --> 00:16:49,134
tutti i termini simili lungo le diagonali si ottiene un altro insieme di circa 10.000

287
00:16:49,134 --> 00:16:49,773
operazioni.

288
00:16:49,773 --> 00:16:53,315
Più in generale nel gergo diremmo che l&#39;algoritmo è O di n al

289
00:16:53,315 --> 00:16:57,125
quadrato, il che significa che per due elenchi di dimensione n il modo

290
00:16:57,125 --> 00:17:00,935
in cui il numero di operazioni scala è proporzionale al quadrato di n.

291
00:17:00,935 --> 00:17:05,947
D&#39;altra parte, se penso a due polinomi in termini di output, ad esempio campionando

292
00:17:05,947 --> 00:17:10,787
i loro valori in una manciata di input, moltiplicarli richiede solo tante operazioni

293
00:17:10,787 --> 00:17:15,798
quanto il numero di campioni poiché ancora una volta è un&#39;operazione puntuale e con

294
00:17:15,798 --> 00:17:20,354
i polinomi hai solo bisogno un numero finito di campioni per poter recuperare i

295
00:17:20,354 --> 00:17:21,152
coefficienti.

296
00:17:21,152 --> 00:17:23,554
Ad esempio sono sufficienti due output per specificare

297
00:17:23,554 --> 00:17:25,214
in modo univoco un polinomio lineare.

298
00:17:25,214 --> 00:17:29,360
Tre output sarebbero sufficienti per specificare in modo univoco un polinomio quadratico.

299
00:17:29,360 --> 00:17:32,772
E in generale se si conoscono n output distinti è sufficiente

300
00:17:32,772 --> 00:17:36,901
specificare in modo univoco un polinomio che abbia n coefficienti diversi.

301
00:17:36,901 --> 00:17:41,188
O se preferisci, potremmo esprimerlo nel linguaggio dei sistemi di equazioni.

302
00:17:41,188 --> 00:17:43,787
Immagina che ti dica che ho un polinomio ma non ti dico

303
00:17:43,787 --> 00:17:46,480
quali sono i coefficienti, quelli sono un mistero per te.

304
00:17:46,480 --> 00:17:48,730
Nel nostro esempio potresti pensare a questo come

305
00:17:48,730 --> 00:17:50,666
al prodotto che stiamo cercando di capire.

306
00:17:50,666 --> 00:17:54,837
Quindi supponiamo che ti dica semplicemente quali sarebbero i risultati di

307
00:17:54,837 --> 00:17:59,175
questo polinomio se inserisci vari input diversi come 0, 1, 2, 3, e così via,

308
00:17:59,175 --> 00:18:03,791
e te ne do abbastanza in modo da avere tante equazioni quante hai delle incognite.

309
00:18:03,791 --> 00:18:07,245
Sembra anche che sia un sistema lineare di equazioni, quindi è carino.

310
00:18:07,245 --> 00:18:09,171
E questo, almeno in linea di principio, dovrebbe

311
00:18:09,171 --> 00:18:11,137
essere sufficiente per recuperare i coefficienti.

312
00:18:11,137 --> 00:18:15,218
Quindi lo schema approssimativo dell&#39;algoritmo sarebbe quindi che ogni volta che vuoi

313
00:18:15,218 --> 00:18:19,253
convolvere due elenchi di numeri li tratti come se fossero coefficienti di due polinomi.

314
00:18:19,253 --> 00:18:23,386
Campioni quei polinomi con un numero sufficiente di output, moltiplichi

315
00:18:23,386 --> 00:18:27,633
quei campioni in modo puntuale e quindi risolvi il sistema per recuperare

316
00:18:27,633 --> 00:18:31,364
i coefficienti come un modo subdolo per trovare la convoluzione.

317
00:18:31,364 --> 00:18:34,248
E almeno come ho affermato finora, alcuni di voi potrebbero

318
00:18:34,248 --> 00:18:37,564
giustamente lamentarsi: &quot;Grant, questo è un piano idiota&quot;.

319
00:18:37,564 --> 00:18:41,169
Perché per prima cosa il solo calcolo di tutti questi campioni per uno dei

320
00:18:41,169 --> 00:18:44,966
polinomi che conosciamo già richiede l&#39;ordine di n operazioni al quadrato,

321
00:18:44,966 --> 00:18:48,282
per non parlare del fatto che risolvere quel sistema sarà certamente

322
00:18:48,282 --> 00:18:52,031
computazionalmente difficile quanto eseguire semplicemente la convoluzione in

323
00:18:52,031 --> 00:18:52,656
primo luogo.

324
00:18:52,656 --> 00:18:56,776
Quindi, certo, abbiamo questa connessione tra moltiplicazione e convoluzioni,

325
00:18:56,776 --> 00:19:01,054
ma tutta la complessità avviene nel tradurre da un punto di vista all&#39;altro.

326
00:19:01,054 --> 00:19:04,389
Ma c’è un trucco, e quelli di voi che conoscono le trasformate di

327
00:19:04,389 --> 00:19:07,673
Fourier e l’algoritmo FFT potrebbero capire dove stiamo andando.

328
00:19:07,673 --> 00:19:09,966
Se non hai familiarità con questi argomenti, quello che

329
00:19:09,966 --> 00:19:12,176
sto per dire potrebbe sembrare del tutto inaspettato.

330
00:19:12,176 --> 00:19:14,789
Sappi solo che ci sono alcuni percorsi che avresti potuto

331
00:19:14,789 --> 00:19:17,582
percorrere in matematica che rendono questo passo più atteso.

332
00:19:17,582 --> 00:19:20,697
Fondamentalmente l’idea è che qui abbiamo libertà di scelta.

333
00:19:20,697 --> 00:19:25,507
Se invece di valutare un insieme arbitrario di input come 0, 1, 2, 3 e così via,

334
00:19:25,507 --> 00:19:30,080
scegli di valutare un insieme di numeri complessi appositamente selezionati.

335
00:19:30,080 --> 00:19:32,539
In particolare quelli che si trovano equamente distanziati sul cerchio

336
00:19:32,539 --> 00:19:34,894
unitario, quelli che sono conosciuti come le radici dell&#39;unità.

337
00:19:34,894 --> 00:19:37,364
Questo ci dà un sistema più amichevole.

338
00:19:37,364 --> 00:19:41,682
L&#39;idea di base è che trovando un numero in cui l&#39;assunzione dei suoi

339
00:19:41,682 --> 00:19:46,224
poteri rientra in questo modello ciclico, significa che il sistema che generiamo

340
00:19:46,224 --> 00:19:50,317
avrà molta ridondanza nei diversi termini che stai calcolando, e essendo

341
00:19:50,317 --> 00:19:55,252
intelligente su come Sfruttando questa ridondanza, puoi risparmiare un sacco di lavoro.

342
00:19:55,252 --> 00:19:58,738
Questo insieme di output che ho scritto ha un nome speciale,

343
00:19:58,738 --> 00:20:02,166
si chiama trasformata discreta di Fourier dei coefficienti.

344
00:20:02,166 --> 00:20:05,611
E se vuoi saperne di più, in realtà ho tenuto un&#39;altra lezione per lo

345
00:20:05,611 --> 00:20:09,103
stesso corso di Julia al MIT, tutta sulle trasformate discrete di Fourier.

346
00:20:09,103 --> 00:20:13,183
E c&#39;è anche un video davvero eccellente sul canale riducibile che parla della

347
00:20:13,183 --> 00:20:17,263
trasformata veloce di Fourier, che è un algoritmo per calcolarli più velocemente.

348
00:20:17,263 --> 00:20:19,600
Inoltre Veritasium ha recentemente realizzato un

349
00:20:19,600 --> 00:20:21,984
ottimo video sulle FFT, quindi hai molte opzioni.

350
00:20:21,984 --> 00:20:24,786
E questo algoritmo veloce è davvero il punto per noi.

351
00:20:24,786 --> 00:20:28,502
Ancora una volta, a causa di tutta questa ridondanza, esiste un metodo per passare

352
00:20:28,502 --> 00:20:32,129
dai coefficienti a tutti questi output, dove invece di fare nell&#39;ordine di n

353
00:20:32,129 --> 00:20:35,666
operazioni al quadrato, si esegue nell&#39;ordine di n volte il logaritmo di n

354
00:20:35,666 --> 00:20:39,293
operazioni, che è molto molto meglio se si passa a elenchi di grandi dimensioni.

355
00:20:39,293 --> 00:20:42,386
E, cosa più importante, questo algoritmo FFT funziona in entrambe le direzioni.

356
00:20:42,386 --> 00:20:45,515
Permette anche di passare dagli output ai coefficienti.

357
00:20:45,515 --> 00:20:49,054
Quindi, riunendo il tutto, diamo un&#39;occhiata allo schema del nostro algoritmo.

358
00:20:49,054 --> 00:20:52,510
Ora possiamo dire che ogni volta che ti vengono dati due lunghi elenchi

359
00:20:52,510 --> 00:20:56,014
di numeri e vuoi fare la loro convoluzione, calcola prima la trasformata

360
00:20:56,014 --> 00:20:59,470
veloce di Fourier di ciascuno di essi, che nel profondo della tua mente

361
00:20:59,470 --> 00:21:02,974
puoi semplicemente pensare come se li trattassi come sono i coefficienti

362
00:21:02,974 --> 00:21:06,766
di un polinomio e lo valutano in una serie di punti appositamente selezionati.

363
00:21:06,766 --> 00:21:10,808
Poi moltiplica insieme i due risultati che hai appena ottenuto in termini di punti, il

364
00:21:10,808 --> 00:21:14,711
che è bello e veloce, e poi fai una trasformata di Fourier veloce inversa, e quello

365
00:21:14,711 --> 00:21:18,847
che ti dà è il subdolo modo backdoor per calcolare la convoluzione che stavamo cercando.

366
00:21:18,847 --> 00:21:22,957
Ma questa volta si tratta solo di O di n log n operazioni.

367
00:21:22,957 --> 00:21:24,865
Per me è davvero fantastico!

368
00:21:24,865 --> 00:21:29,287
Questo contesto molto specifico in cui compaiono le convoluzioni, moltiplicando due

369
00:21:29,287 --> 00:21:33,498
polinomi, apre le porte a un algoritmo che è rilevante ovunque possano emergere

370
00:21:33,498 --> 00:21:34,235
convoluzioni.

371
00:21:34,235 --> 00:21:36,211
Se vuoi aggiungere distribuzioni di probabilità, esegui

372
00:21:36,211 --> 00:21:38,822
un&#39;elaborazione di immagini di grandi dimensioni, qualunque essa sia.

373
00:21:38,822 --> 00:21:41,831
E penso che sia un ottimo esempio del perché dovresti essere

374
00:21:41,831 --> 00:21:44,593
emozionato quando vedi qualche operazione o concetto in

375
00:21:44,593 --> 00:21:47,798
matematica comparire in molte aree apparentemente non correlate.

376
00:21:47,798 --> 00:21:51,967
Se vuoi fare qualche compito a casa, ecco qualcosa a cui è divertente pensare.

377
00:21:51,967 --> 00:21:55,092
Spiega perché quando moltiplichi due numeri diversi, semplicemente la

378
00:21:55,092 --> 00:21:58,441
moltiplicazione ordinaria come tutti impariamo alle elementari, quello che

379
00:21:58,441 --> 00:22:01,924
stai facendo è fondamentalmente una convoluzione tra le cifre di quei numeri.

380
00:22:01,924 --> 00:22:04,164
Ci sono alcuni passaggi aggiuntivi con carry e

381
00:22:04,164 --> 00:22:06,785
simili, ma il passaggio principale è una convoluzione.

382
00:22:06,785 --> 00:22:10,638
Alla luce dell&#39;esistenza di un algoritmo veloce, ciò significa che se

383
00:22:10,638 --> 00:22:14,439
hai due numeri interi molto grandi, allora esiste un modo per trovare il

384
00:22:14,439 --> 00:22:18,240
loro prodotto che è più veloce del metodo che impariamo alle elementari.

385
00:22:18,240 --> 00:22:21,715
Che invece di richiedere O di n operazioni al quadrato richiede solo

386
00:22:21,715 --> 00:22:25,291
O di n log n, il che non sembra nemmeno che dovrebbe essere possibile.

387
00:22:25,291 --> 00:22:28,216
Il problema è che prima che ciò sia effettivamente utile nella

388
00:22:28,216 --> 00:22:31,280
pratica, i tuoi numeri dovrebbero essere assolutamente mostruosi.

389
00:22:31,280 --> 00:22:34,445
Ma è comunque bello che esista un simile algoritmo.

390
00:22:34,445 --> 00:22:42,937
Successivamente rivolgeremo la nostra attenzione al caso continuo

391
00:22:42,937 --> 00:22:50,400
con un focus speciale sulle distribuzioni di probabilità.

