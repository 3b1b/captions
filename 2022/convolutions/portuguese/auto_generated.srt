1
00:00:00,000 --> 00:00:03,029
Suponha que eu lhe dê duas listas diferentes de números, ou talvez duas

2
00:00:03,029 --> 00:00:05,933
funções diferentes, e peça que você pense em todas as maneiras pelas

3
00:00:05,933 --> 00:00:08,836
quais você pode combinar essas duas listas para obter uma nova lista

4
00:00:08,836 --> 00:00:11,782
de números, ou combinar as duas funções para obter uma nova função. .

5
00:00:11,782 --> 00:00:14,221
Talvez uma maneira simples que venha à mente seja

6
00:00:14,221 --> 00:00:16,320
simplesmente adicioná-los termo por termo.

7
00:00:16,320 --> 00:00:20,131
Da mesma forma com as funções, você pode adicionar todas as saídas correspondentes.

8
00:00:20,131 --> 00:00:23,327
Na mesma linha, você também pode multiplicar as duas listas

9
00:00:23,327 --> 00:00:26,202
termo por termo e fazer a mesma coisa com as funções.

10
00:00:26,202 --> 00:00:30,052
Mas há outro tipo de combinação tão fundamental quanto essas

11
00:00:30,052 --> 00:00:33,840
duas, mas muito menos discutida, conhecida como convolução.

12
00:00:33,840 --> 00:00:36,681
Mas, diferentemente dos dois casos anteriores, não é algo

13
00:00:36,681 --> 00:00:39,964
meramente herdado de uma operação que você pode fazer com números.

14
00:00:39,964 --> 00:00:42,679
É algo genuinamente novo para o contexto de listas

15
00:00:42,679 --> 00:00:44,809
de números ou de combinação de funções.

16
00:00:44,809 --> 00:00:48,449
Eles aparecem em todos os lugares, são onipresentes no processamento de

17
00:00:48,449 --> 00:00:52,189
imagens, são uma construção central na teoria da probabilidade, são muito

18
00:00:52,189 --> 00:00:55,879
usados na resolução de equações diferenciais e são um contexto onde você

19
00:00:55,879 --> 00:01:00,277
quase certamente já os viu, se não. com este nome, está multiplicando dois polinômios.

20
00:01:00,277 --> 00:01:04,714
Como alguém no ramo de explicações visuais, este é um tópico especialmente excelente,

21
00:01:04,714 --> 00:01:08,790
porque a definição formulada isoladamente e sem contexto pode parecer um pouco

22
00:01:08,790 --> 00:01:13,330
intimidante, mas se reservarmos um tempo para realmente desvendar o que está dizendo e,

23
00:01:13,330 --> 00:01:17,664
antes disso, realmente motivar o porquê você gostaria de algo assim, é uma operação

24
00:01:17,664 --> 00:01:18,800
incrivelmente bonita.

25
00:01:18,800 --> 00:01:23,514
E tenho que admitir, na verdade aprendi uma coisinha ao montar o visual deste projeto.

26
00:01:23,514 --> 00:01:27,423
No caso da convolução de duas funções diferentes, eu estava tentando pensar em maneiras

27
00:01:27,423 --> 00:01:31,243
diferentes de imaginar o que isso poderia significar, e com uma delas tive um momento

28
00:01:31,243 --> 00:01:35,018
de surpresa para saber por que as distribuições normais desempenham o papel que eles

29
00:01:35,018 --> 00:01:38,483
fazem isso em probabilidade, por que é uma forma tão natural para uma função.

30
00:01:38,483 --> 00:01:41,645
Mas estou me adiantando, há muita configuração para isso.

31
00:01:41,645 --> 00:01:45,918
Neste vídeo, nosso foco principal será apenas no caso discreto e, em particular, na

32
00:01:45,918 --> 00:01:50,293
construção de um algoritmo muito inesperado, mas muito inteligente, para calculá-los.

33
00:01:50,293 --> 00:01:54,400
E vou estender a discussão do caso contínuo para uma segunda parte.

34
00:01:54,400 --> 00:01:58,868
É muito tentador começar com os exemplos de processamento de imagem, já que eles

35
00:01:58,868 --> 00:02:03,337
são visualmente os mais intrigantes, mas há alguns detalhes que tornam o caso de

36
00:02:03,337 --> 00:02:07,806
processamento de imagem menos representativo das convoluções em geral, então, em

37
00:02:07,806 --> 00:02:12,275
vez disso, vamos começar com probabilidade, e em particular um dos exemplos mais

38
00:02:12,275 --> 00:02:16,965
simples que tenho certeza que todos aqui já pensaram em algum momento de suas vidas,

39
00:02:16,965 --> 00:02:21,600
que é lançar um par de dados e descobrir as chances de ver várias somas diferentes.

40
00:02:21,600 --> 00:02:24,213
E você pode dizer, não é um problema, não é um problema.

41
00:02:24,213 --> 00:02:27,959
Cada um dos seus dois dados tem seis resultados possíveis diferentes, o que

42
00:02:27,959 --> 00:02:31,656
nos dá um total de 36 pares distintos de resultados possíveis, e se apenas

43
00:02:31,656 --> 00:02:35,600
olharmos para todos eles podemos contar quantos pares têm uma determinada soma.

44
00:02:35,600 --> 00:02:40,525
E organizando todos os pares numa grelha como esta, uma coisa muito boa é que todos os

45
00:02:40,525 --> 00:02:44,998
pares que têm uma soma constante são visíveis ao longo de uma destas diagonais

46
00:02:44,998 --> 00:02:45,678
diferentes.

47
00:02:45,678 --> 00:02:48,706
Portanto, simplesmente contar quantos existem em cada uma dessas

48
00:02:48,706 --> 00:02:51,920
diagonais lhe dirá a probabilidade de você ver uma determinada soma.

49
00:02:51,920 --> 00:02:55,443
E eu diria, muito bom, muito bom, mas você consegue pensar

50
00:02:55,443 --> 00:02:58,788
em alguma outra maneira de visualizar a mesma pergunta?

51
00:02:58,788 --> 00:03:01,382
Outras imagens que podem vir à mente ao pensar em todos

52
00:03:01,382 --> 00:03:03,836
os pares distintos que possuem uma determinada soma?

53
00:03:03,836 --> 00:03:07,586
E talvez um de vocês levante a mão e diga: sim, tenho um.

54
00:03:07,586 --> 00:03:10,643
Digamos que você imagine esses dois conjuntos diferentes de

55
00:03:10,643 --> 00:03:14,056
possibilidades, cada um seguido, mas você inverte a segunda linha.

56
00:03:14,056 --> 00:03:18,984
Dessa forma, todos os pares diferentes que somam sete se alinham verticalmente assim.

57
00:03:18,984 --> 00:03:22,552
E se deslizarmos a linha inferior totalmente para a direita, então o

58
00:03:22,552 --> 00:03:26,380
único par que soma dois, os olhos de cobra, são os únicos que se alinham.

59
00:03:26,380 --> 00:03:29,631
E se eu deslocar isso uma unidade para a direita, os pares

60
00:03:29,631 --> 00:03:32,938
que se alinham são os dois pares diferentes que somam três.

61
00:03:32,938 --> 00:03:37,280
E, em geral, diferentes valores de deslocamento desta matriz inferior, que lembro que

62
00:03:37,280 --> 00:03:41,623
tive que virar primeiro, revelam todos os pares distintos que possuem uma determinada

63
00:03:41,623 --> 00:03:41,926
soma.

64
00:03:41,926 --> 00:03:45,638
No que diz respeito às questões de probabilidade, isto ainda não

65
00:03:45,638 --> 00:03:49,293
é especialmente interessante, porque tudo o que estamos a fazer

66
00:03:49,293 --> 00:03:53,120
é contar quantos resultados existem em cada uma destas categorias.

67
00:03:53,120 --> 00:03:55,530
Mas isso ocorre com a suposição implícita de que há

68
00:03:55,530 --> 00:03:57,941
uma chance igual de cada uma dessas faces aparecer.

69
00:03:57,941 --> 00:04:01,909
Mas e se eu lhe dissesse que tenho um conjunto especial de dados que não é uniforme?

70
00:04:01,909 --> 00:04:05,758
Talvez o dado azul tenha seu próprio conjunto de números que descreve as probabilidades

71
00:04:05,758 --> 00:04:09,388
de cada face que aparece, e o dado vermelho tenha seu próprio conjunto distinto de

72
00:04:09,388 --> 00:04:09,782
números.

73
00:04:09,782 --> 00:04:14,981
Nesse caso, se quiser descobrir, digamos, a probabilidade de ver um dois, multiplicaria

74
00:04:14,981 --> 00:04:19,943
a probabilidade de o dado azul ser um pela probabilidade de o dado vermelho ser um.

75
00:04:19,943 --> 00:04:23,323
E para as chances de ver um três, você olha para os dois pares

76
00:04:23,323 --> 00:04:26,488
distintos onde isso é possível e, novamente, multiplica as

77
00:04:26,488 --> 00:04:30,029
probabilidades correspondentes e depois soma esses dois produtos.

78
00:04:30,029 --> 00:04:33,517
Da mesma forma, as chances de ver um quatro envolvem multiplicar

79
00:04:33,517 --> 00:04:36,845
três pares diferentes de possibilidades e adicioná-los todos.

80
00:04:36,845 --> 00:04:39,765
E no espírito de estabelecer algumas fórmulas, vamos nomear

81
00:04:39,765 --> 00:04:42,685
essas probabilidades superiores como a1, a2, a3 e assim por

82
00:04:42,685 --> 00:04:45,946
diante, e nomear as inferiores como b1, b2, b3 e assim por diante.

83
00:04:45,946 --> 00:04:49,540
E, em geral, este processo, onde pegamos duas matrizes diferentes de

84
00:04:49,540 --> 00:04:53,342
números, invertemos a segunda e depois as alinhamos em vários valores de

85
00:04:53,342 --> 00:04:57,353
deslocamento diferentes, pegamos um monte de produtos em pares e os somamos,

86
00:04:57,353 --> 00:05:01,311
esse é um dos maneiras fundamentais de pensar sobre o que é uma convolução.

87
00:05:01,311 --> 00:05:06,635
Então, só para explicar com mais exatidão, por meio desse processo, geramos

88
00:05:06,635 --> 00:05:11,819
probabilidades de ver dois, três, quatro, e assim por diante até 12, e as

89
00:05:11,819 --> 00:05:17,143
obtivemos misturando uma lista de valores, a, e outra. lista de valores, b.

90
00:05:17,143 --> 00:05:21,607
Na linguagem, diríamos que a convolução dessas duas sequências nos dá esta nova

91
00:05:21,607 --> 00:05:26,574
sequência, a nova sequência de 11 valores, cada um dos quais parece uma soma de produtos

92
00:05:26,574 --> 00:05:27,188
aos pares.

93
00:05:27,188 --> 00:05:32,049
Se preferir, outra maneira de pensar na mesma operação é primeiro criar uma tabela

94
00:05:32,049 --> 00:05:36,793
de todos os produtos aos pares e depois somar ao longo de todas essas diagonais.

95
00:05:36,793 --> 00:05:39,738
Novamente, essa é uma maneira de misturar essas duas sequências

96
00:05:39,738 --> 00:05:42,315
de números para obter uma nova sequência de 11 números.

97
00:05:42,315 --> 00:05:46,400
É a mesma operação que se pensava nas janelas de correr, apenas outra perspectiva.

98
00:05:46,400 --> 00:05:50,335
Colocando uma pequena notação nisso, veja como você pode vê-lo escrito.

99
00:05:50,335 --> 00:05:55,069
A convolução de a e b, denotada por este pequeno asterisco, é uma nova lista, e

100
00:05:55,069 --> 00:05:59,626
o enésimo elemento dessa lista parece uma soma, e essa soma abrange todos os

101
00:05:59,626 --> 00:06:04,833
diferentes pares de índices, i e j, de modo que a soma de esses índices são iguais a n.

102
00:06:04,833 --> 00:06:10,127
É meio complicado, mas por exemplo, se n fosse 6, os pares que estamos examinando

103
00:06:10,127 --> 00:06:15,680
são 1 e 5, 2 e 4, 3 e 3, 4 e 2, 5 e 1, todos os pares diferentes que se somam para 6.

104
00:06:15,680 --> 00:06:19,437
Mas, honestamente, não importa como você escreva, a notação é de importância

105
00:06:19,437 --> 00:06:23,145
secundária em relação ao visual que você pode ter em mente para o processo.

106
00:06:23,145 --> 00:06:26,857
Aqui, talvez ajude fazer um exemplo super simples, onde posso

107
00:06:26,857 --> 00:06:30,987
perguntar qual é a convolução da lista 1, 2, 3, com a lista 4, 5, 6.

108
00:06:30,987 --> 00:06:34,267
Você pode imaginar pegar essas duas listas, virar a

109
00:06:34,267 --> 00:06:37,926
segunda e começar com a tampa totalmente para a esquerda.

110
00:06:37,926 --> 00:06:41,190
Então, o par de valores que se alinham são 1 e 4, multiplique-os

111
00:06:41,190 --> 00:06:43,851
e isso nos dará nosso primeiro termo de nossa saída.

112
00:06:43,851 --> 00:06:47,144
Deslize a matriz inferior uma unidade para a direita, os

113
00:06:47,144 --> 00:06:50,496
pares que se alinham são 1 e 5 e 2 e 4, multiplique esses

114
00:06:50,496 --> 00:06:54,367
pares, some-os e isso nos dá 13, a próxima entrada em nossa saída.

115
00:06:54,367 --> 00:06:58,119
Deslize as coisas mais uma vez e pegaremos 1 vezes

116
00:06:58,119 --> 00:07:01,651
6, mais 2 vezes 5, mais 3 vezes 4, o que dá 28.

117
00:07:01,651 --> 00:07:05,726
Mais um slide e obtemos 2 vezes 6, mais 3 vezes 5, e isso nos

118
00:07:05,726 --> 00:07:10,000
dá 27 e, finalmente, o último termo será parecido com 3 vezes 6.

119
00:07:10,000 --> 00:07:12,867
Se desejar, você pode acessar qualquer que seja sua linguagem de

120
00:07:12,867 --> 00:07:15,734
programação favorita e sua biblioteca favorita que inclui várias

121
00:07:15,734 --> 00:07:18,910
operações numéricas, e pode confirmar que não estou mentindo para você.

122
00:07:18,910 --> 00:07:21,587
Se você pegar a convolução de 1, 2, 3, contra 4,

123
00:07:21,587 --> 00:07:24,320
5, 6, este é de fato o resultado que você obterá.

124
00:07:24,320 --> 00:07:28,561
Vimos um caso em que esta é uma operação natural e desejável, somando-se a

125
00:07:28,561 --> 00:07:32,916
distribuições de probabilidade, e outro exemplo comum seria uma média móvel.

126
00:07:32,916 --> 00:07:35,833
Imagine que você tem uma longa lista de números

127
00:07:35,833 --> 00:07:38,811
e pega outra lista menor de números que somam 1.

128
00:07:38,811 --> 00:07:43,420
Nesse caso, tenho apenas uma pequena lista de 5 valores, e todos são iguais a 1 quinto.

129
00:07:43,420 --> 00:07:47,130
Então, se fizermos esse processo de convolução de janela deslizante,

130
00:07:47,130 --> 00:07:51,108
fecharmos os olhos e varrermos para debaixo do tapete o que acontece logo

131
00:07:51,108 --> 00:07:55,248
no início, uma vez que nossa lista menor de valores se sobrepõe inteiramente

132
00:07:55,248 --> 00:07:59,066
à maior, pense no que cada termo neste convolução realmente significa.

133
00:07:59,066 --> 00:08:02,899
A cada iteração, o que você faz é multiplicar cada um dos valores

134
00:08:02,899 --> 00:08:06,732
dos seus dados por 1/5 e somá-los todos, o que significa que você

135
00:08:06,732 --> 00:08:10,797
está calculando uma média dos seus dados dentro desta pequena janela.

136
00:08:10,797 --> 00:08:14,857
No geral, o processo fornece uma versão suavizada dos dados originais, e você pode

137
00:08:14,857 --> 00:08:18,769
modificar isso começando com uma pequena lista diferente de números, e contanto

138
00:08:18,769 --> 00:08:22,878
que toda essa pequena lista some 1, você ainda pode interpretá-la como uma mudança.

139
00:08:22,878 --> 00:08:27,822
média. No exemplo mostrado aqui, essa média móvel daria mais peso ao valor central.

140
00:08:27,822 --> 00:08:30,720
Isso também resulta em uma versão suavizada dos dados.

141
00:08:30,720 --> 00:08:34,563
Se você fizer um análogo bidimensional disso, terá um

142
00:08:34,563 --> 00:08:38,691
algoritmo divertido para desfocar uma determinada imagem.

143
00:08:38,691 --> 00:08:42,767
E devo dizer que as animações que estou prestes a mostrar são modificadas de algo que fiz

144
00:08:42,767 --> 00:08:46,797
originalmente para parte de um conjunto de palestras que fiz com o Julia Lab no MIT para

145
00:08:46,797 --> 00:08:50,555
uma determinada aula do OpenCourseWare que incluía uma unidade de processamento de

146
00:08:50,555 --> 00:08:50,918
imagem.

147
00:08:50,918 --> 00:08:53,600
Lá fizemos um pouco mais para mergulhar no código por trás de

148
00:08:53,600 --> 00:08:56,456
tudo isso, então se você estiver curioso vou deixar alguns links.

149
00:08:56,456 --> 00:09:00,587
Mas focando novamente neste exemplo desfocado, o que está acontecendo é que eu tenho

150
00:09:00,587 --> 00:09:04,670
uma pequena grade 3x3 de valores que marcha ao longo de nossa imagem original, e se

151
00:09:04,670 --> 00:09:08,947
aumentarmos o zoom, cada um desses valores é 19, e o que estou fazendo em cada iteração

152
00:09:08,947 --> 00:09:13,078
está multiplicando cada um desses valores pelo pixel correspondente sobre o qual ele

153
00:09:13,078 --> 00:09:13,369
está.

154
00:09:13,369 --> 00:09:16,744
E é claro que na ciência da computação pensamos nas cores como pequenos

155
00:09:16,744 --> 00:09:20,400
vetores de três valores, representando os componentes vermelho, verde e azul.

156
00:09:20,400 --> 00:09:23,646
Quando multiplico todos esses pequenos valores por 19 e os

157
00:09:23,646 --> 00:09:27,113
adiciono, obtemos uma média ao longo de cada canal de cor, e o

158
00:09:27,113 --> 00:09:31,075
pixel correspondente para a imagem à direita é definido como essa soma.

159
00:09:31,075 --> 00:09:36,006
O efeito geral, ao fazermos isso para cada pixel da imagem, é que cada um se infiltra

160
00:09:36,006 --> 00:09:40,880
em todos os seus vizinhos, o que nos dá uma versão mais desfocada do que a original.

161
00:09:40,880 --> 00:09:44,469
Na linguagem diríamos que a imagem à direita é uma convolução

162
00:09:44,469 --> 00:09:47,885
da nossa imagem original com uma pequena grade de valores.

163
00:09:47,885 --> 00:09:51,103
Ou, mais tecnicamente, talvez eu devesse dizer que é a convolução

164
00:09:51,103 --> 00:09:54,468
com uma versão girada em 180 graus daquela pequena grade de valores.

165
00:09:54,468 --> 00:09:58,249
Não que isso importe quando a grade é simétrica, mas vale a pena ter em

166
00:09:58,249 --> 00:10:02,031
mente que a definição de uma convolução, herdada do contexto matemático

167
00:10:02,031 --> 00:10:05,760
puro, deve sempre convidá-lo a pensar em inverter essa segunda matriz.

168
00:10:05,760 --> 00:10:08,555
Se modificarmos um pouco isso, poderemos obter um efeito de desfoque

169
00:10:08,555 --> 00:10:11,148
muito mais elegante, escolhendo uma grade de valores diferente.

170
00:10:11,148 --> 00:10:15,920
Neste caso tenho uma pequena grade 5x5, mas a distinção não é tanto o seu tamanho.

171
00:10:15,920 --> 00:10:19,314
Se aumentarmos o zoom, notamos que o valor no meio é muito maior do que o

172
00:10:19,314 --> 00:10:22,570
valor nas bordas, e de onde isso vem é que todos eles são amostrados a

173
00:10:22,570 --> 00:10:26,102
partir de uma curva em forma de sino, conhecida como distribuição gaussiana.

174
00:10:26,102 --> 00:10:29,566
Dessa forma, quando multiplicamos todos esses valores pelo pixel

175
00:10:29,566 --> 00:10:33,029
correspondente sobre o qual eles estão, estamos dando muito mais

176
00:10:33,029 --> 00:10:36,439
peso a esse pixel central e muito menos aos que estão na borda.

177
00:10:36,439 --> 00:10:40,475
E assim como antes, o pixel correspondente à direita é definido como esta soma.

178
00:10:40,475 --> 00:10:45,063
À medida que fazemos esse processo para cada pixel, ocorre um efeito de desfoque que

179
00:10:45,063 --> 00:10:49,760
simula com muito mais autenticidade a noção de tirar o foco da lente ou algo parecido.

180
00:10:49,760 --> 00:10:53,504
Mas desfocar está longe de ser a única coisa que você pode fazer com essa ideia.

181
00:10:53,504 --> 00:10:56,541
Por exemplo, dê uma olhada nesta pequena grade de valores, que

182
00:10:56,541 --> 00:10:59,483
envolve alguns números positivos à esquerda e alguns números

183
00:10:59,483 --> 00:11:03,099
negativos à direita, que irei colorir com azul e vermelho respectivamente.

184
00:11:03,099 --> 00:11:06,486
Reserve um momento para ver se você consegue prever

185
00:11:06,486 --> 00:11:09,808
e entender o efeito que isso terá na imagem final.

186
00:11:09,808 --> 00:11:14,028
Então, neste caso, pensarei na imagem apenas em tons de cinza em vez de colorida, de

187
00:11:14,028 --> 00:11:18,149
modo que cada um dos pixels seja representado apenas por um número em vez de três.

188
00:11:18,149 --> 00:11:20,502
E uma coisa que vale a pena notar é que à medida que

189
00:11:20,502 --> 00:11:23,164
fazemos esta convolução é possível obter valores negativos.

190
00:11:23,164 --> 00:11:26,070
Por exemplo, neste ponto aqui, se ampliarmos a metade esquerda de

191
00:11:26,070 --> 00:11:29,240
nossa pequena grade, ela ficará inteiramente em cima dos pixels pretos,

192
00:11:29,240 --> 00:11:32,322
o que teria um valor zero, mas a metade direita dos valores negativos

193
00:11:32,322 --> 00:11:35,360
ficaria toda em cima dos pixels brancos, o que teria tem o valor um.

194
00:11:35,360 --> 00:11:39,082
Então, quando multiplicamos os termos correspondentes e os somamos, os resultados

195
00:11:39,082 --> 00:11:42,713
serão muito negativos, e a maneira como estou exibindo isso na imagem à direita

196
00:11:42,713 --> 00:11:46,117
é colorir os valores negativos em vermelho e os valores positivos em azul.

197
00:11:46,117 --> 00:11:50,578
Outra coisa a notar é que quando você está em um patch que é todo da mesma cor,

198
00:11:50,578 --> 00:11:54,871
tudo vai para zero, já que a soma dos valores em nossa pequena grade é zero.

199
00:11:54,871 --> 00:11:59,007
Isto é muito diferente dos dois exemplos anteriores, onde a soma da nossa pequena grelha

200
00:11:59,007 --> 00:12:03,050
era um, o que nos permite interpretá-la como uma média móvel e, portanto, um desfoque.

201
00:12:03,050 --> 00:12:06,477
Resumindo, esse pequeno processo basicamente detecta onde quer que haja

202
00:12:06,477 --> 00:12:10,094
variação no valor do pixel conforme você se move da esquerda para a direita

203
00:12:10,094 --> 00:12:13,760
e, assim, oferece uma maneira de captar todas as bordas verticais da imagem.

204
00:12:13,760 --> 00:12:19,201
E da mesma forma, se girarmos essa grade de modo que ela varie conforme você se move

205
00:12:19,201 --> 00:12:24,578
de cima para baixo, isso será captado em todas as bordas horizontais, o que no caso

206
00:12:24,578 --> 00:12:30,020
da imagem da nossa pequena criatura torta resulta em alguns lindos olhos demoníacos.

207
00:12:30,020 --> 00:12:33,501
A propósito, essa grade menor costuma ser chamada de kernel, e a beleza aqui é como,

208
00:12:33,501 --> 00:12:36,655
apenas escolhendo um kernel diferente, você pode obter diferentes efeitos de

209
00:12:36,655 --> 00:12:40,219
processamento de imagem, não apenas desfocando a detecção de bordas, mas também coisas

210
00:12:40,219 --> 00:12:40,792
como nitidez.

211
00:12:40,792 --> 00:12:44,461
Para aqueles que já ouviram falar de uma rede neural convolucional,

212
00:12:44,461 --> 00:12:48,076
a ideia é usar dados para descobrir quais deveriam ser os kernels,

213
00:12:48,076 --> 00:12:51,691
conforme determinado por tudo o que a rede neural deseja detectar.

214
00:12:51,691 --> 00:12:55,457
Outra coisa que talvez eu deva mencionar é a duração da saída.

215
00:12:55,457 --> 00:12:59,583
Para algo como o exemplo da média móvel, você pode querer pensar apenas nos termos quando

216
00:12:59,583 --> 00:13:03,342
ambas as janelas estiverem totalmente alinhadas uma com a outra ou, no exemplo de

217
00:13:03,342 --> 00:13:07,330
processamento de imagem, talvez você queira que a saída final tenha o mesmo tamanho do

218
00:13:07,330 --> 00:13:07,789
original.

219
00:13:07,789 --> 00:13:10,795
Agora, as convoluções como uma operação matemática pura sempre produzem

220
00:13:10,795 --> 00:13:13,717
um array que é maior do que os dois arrays com os quais você começou,

221
00:13:13,717 --> 00:13:16,431
pelo menos assumindo que um deles não tenha o comprimento de um.

222
00:13:16,431 --> 00:13:18,995
Saiba apenas que, em certos contextos da ciência da computação,

223
00:13:18,995 --> 00:13:21,440
muitas vezes você deseja truncar deliberadamente essa saída.

224
00:13:21,440 --> 00:13:25,392
Outra coisa que vale a pena destacar é que, no contexto da ciência da

225
00:13:25,392 --> 00:13:29,571
computação, essa noção de inverter o kernel antes de deixá-lo percorrer o

226
00:13:29,571 --> 00:13:33,920
original muitas vezes parece muito estranha e desnecessária, mas, novamente,

227
00:13:33,920 --> 00:13:38,042
observe que é isso que é herdado do contexto matemático puro, onde, como

228
00:13:38,042 --> 00:13:42,560
nós Vi com as probabilidades que é uma coisa incrivelmente natural de se fazer.

229
00:13:42,560 --> 00:13:45,823
E na verdade posso mostrar mais um exemplo de matemática pura onde

230
00:13:45,823 --> 00:13:49,086
até os programadores deveriam se preocupar com este porque abre as

231
00:13:49,086 --> 00:13:52,399
portas para um algoritmo muito mais rápido para calcular tudo isso.

232
00:13:52,399 --> 00:13:56,003
Para configurar o que quero dizer com mais rápido aqui, deixe-me voltar e puxar um

233
00:13:56,003 --> 00:13:59,651
pouco de python novamente e vou criar dois arrays relativamente grandes diferentes.

234
00:13:59,651 --> 00:14:03,625
Cada um terá cem mil elementos aleatórios e vou avaliar o

235
00:14:03,625 --> 00:14:07,598
tempo de execução da função convolve da biblioteca numpy.

236
00:14:07,598 --> 00:14:12,030
E neste caso ele executa várias iterações diferentes, tenta encontrar uma

237
00:14:12,030 --> 00:14:16,403
média, e parece que neste computador pelo menos a média é 4.87 segundos.

238
00:14:16,403 --> 00:14:20,893
Por outro lado, se eu usar uma função diferente da biblioteca scipy chamada

239
00:14:20,893 --> 00:14:25,559
fftconvolve, que é a mesma coisa, apenas implementada de forma diferente, leva

240
00:14:25,559 --> 00:14:30,640
apenas 4.3 milissegundos em média, ou seja, uma melhoria de três ordens de magnitude.

241
00:14:30,640 --> 00:14:33,269
E, novamente, mesmo que voe com um nome diferente, ele está

242
00:14:33,269 --> 00:14:35,855
fornecendo a mesma saída que a outra função convolve, está

243
00:14:35,855 --> 00:14:38,880
apenas fazendo algo para fazer isso de uma maneira mais inteligente.

244
00:14:38,880 --> 00:14:43,377
Lembre-se de como, no exemplo da probabilidade, eu disse que outra maneira

245
00:14:43,377 --> 00:14:47,814
de pensar sobre a convolução seria criar esta tabela de todos os produtos

246
00:14:47,814 --> 00:14:52,611
aos pares e, em seguida, somar esses produtos aos pares ao longo das diagonais.

247
00:14:52,611 --> 00:14:55,981
É claro que não há nada específico para probabilidade. Sempre que você está

248
00:14:55,981 --> 00:14:59,352
reunindo duas listas diferentes de números, você pode pensar dessa maneira.

249
00:14:59,352 --> 00:15:02,947
Crie esse tipo de tabuada com todos os produtos aos pares e então cada

250
00:15:02,947 --> 00:15:06,492
soma ao longo da diagonal corresponde a um de seus resultados finais.

251
00:15:06,492 --> 00:15:09,823
Um contexto onde esta visão é especialmente natural

252
00:15:09,823 --> 00:15:12,513
é quando você multiplica dois polinômios.

253
00:15:12,513 --> 00:15:17,698
Por exemplo, deixe-me pegar a pequena grade que já temos e substituir os termos

254
00:15:17,698 --> 00:15:23,271
superiores por 1, 2x e 3x ao quadrado e substituir os outros termos por 4, 5x e 6x ao

255
00:15:23,271 --> 00:15:23,920
quadrado.

256
00:15:23,920 --> 00:15:26,181
Agora pense no que significa quando criamos todos

257
00:15:26,181 --> 00:15:28,760
esses produtos diferentes em pares entre as duas listas.

258
00:15:28,760 --> 00:15:33,087
O que você está fazendo é essencialmente expandir o produto completo dos dois

259
00:15:33,087 --> 00:15:37,303
polinômios que escrevi e então, quando você soma ao longo da diagonal, isso

260
00:15:37,303 --> 00:15:41,907
corresponde à coleta de todos os termos semelhantes, o que é muito legal, expandir

261
00:15:41,907 --> 00:15:46,345
um polinômio e coletar termos semelhantes é exatamente o mesmo processo que uma

262
00:15:46,345 --> 00:15:47,011
convolução.

263
00:15:47,011 --> 00:15:52,696
Mas isso nos permite fazer algo muito legal, porque pense no que estamos dizendo aqui.

264
00:15:52,696 --> 00:15:56,879
Estamos dizendo que se você pegar duas funções diferentes e multiplicá-las,

265
00:15:56,879 --> 00:16:01,006
o que é uma operação pontual simples, é a mesma coisa que se você primeiro

266
00:16:01,006 --> 00:16:05,079
extraísse os coeficientes de cada uma delas, assumindo que são polinômios

267
00:16:05,079 --> 00:16:08,821
e depois fizesse uma convolução dessas duas listas de coeficientes.

268
00:16:08,821 --> 00:16:12,501
O que torna isso tão interessante é que as convoluções parecem, em princípio,

269
00:16:12,501 --> 00:16:15,898
muito mais complicadas do que a simples multiplicação e não quero dizer

270
00:16:15,898 --> 00:16:19,248
apenas conceitualmente, elas são mais difíceis de pensar, quero dizer,

271
00:16:19,248 --> 00:16:22,881
computacionalmente, são necessárias mais etapas para realizar uma convolução

272
00:16:22,881 --> 00:16:26,089
do que para realizar uma produto pontual de duas listas diferentes.

273
00:16:26,089 --> 00:16:29,801
Por exemplo, digamos que eu lhe dei dois polinômios realmente grandes,

274
00:16:29,801 --> 00:16:33,670
digamos, cada um com cem coeficientes diferentes, então se a maneira como

275
00:16:33,670 --> 00:16:37,643
você os multiplicou fosse expandindo este produto, você sabe preencher toda

276
00:16:37,643 --> 00:16:41,721
essa grade de 100 por 100 de produtos pareados que exigiriam que você execute

277
00:16:41,721 --> 00:16:45,799
10.000 produtos diferentes e, quando você coletar todos os termos semelhantes

278
00:16:45,799 --> 00:16:49,773
ao longo das diagonais, haverá outro conjunto de cerca de 10.000 operações.

279
00:16:49,773 --> 00:16:53,457
De maneira mais geral, no jargão, diríamos que o algoritmo é O de n

280
00:16:53,457 --> 00:16:57,142
ao quadrado, significando para duas listas de tamanho n, da maneira

281
00:16:57,142 --> 00:17:00,935
que o número de escalas de operações é proporcional ao quadrado de n.

282
00:17:00,935 --> 00:17:05,946
Por outro lado, se eu pensar em dois polinômios em termos de suas saídas, por exemplo,

283
00:17:05,946 --> 00:17:10,842
amostrar seus valores em algumas entradas, então multiplicá-los requer apenas tantas

284
00:17:10,842 --> 00:17:15,737
operações quanto o número de amostras, já que novamente é uma operação pontual e com

285
00:17:15,737 --> 00:17:20,345
polinômios você só precisa um número finito de amostras para poder recuperar os

286
00:17:20,345 --> 00:17:21,152
coeficientes.

287
00:17:21,152 --> 00:17:23,139
Por exemplo, duas saídas são suficientes para

288
00:17:23,139 --> 00:17:25,214
especificar exclusivamente um polinômio linear.

289
00:17:25,214 --> 00:17:29,360
Três saídas seriam suficientes para especificar exclusivamente um polinômio quadrático.

290
00:17:29,360 --> 00:17:32,979
E, em geral, se você conhece n saídas distintas, isso é suficiente para

291
00:17:32,979 --> 00:17:36,901
especificar exclusivamente um polinômio que possui n coeficientes diferentes.

292
00:17:36,901 --> 00:17:41,188
Ou, se preferir, poderíamos expressar isso na linguagem dos sistemas de equações.

293
00:17:41,188 --> 00:17:43,748
Imagine que eu lhe diga que tenho um polinômio, mas não lhe

294
00:17:43,748 --> 00:17:46,480
diga quais são os coeficientes, eles são um mistério para você.

295
00:17:46,480 --> 00:17:50,666
Em nosso exemplo, você pode pensar nisso como o produto que estamos tentando descobrir.

296
00:17:50,666 --> 00:17:54,974
Então suponha que eu diga que vou apenas dizer quais seriam as saídas deste polinômio

297
00:17:54,974 --> 00:17:59,333
se você inserisse várias entradas diferentes como 0, 1, 2, 3, e assim por diante, e eu

298
00:17:59,333 --> 00:18:03,791
lhe daria o suficiente para que você tivesse tantas equações quanto você tem incógnitas.

299
00:18:03,791 --> 00:18:07,245
Acontece que é até um sistema linear de equações, então isso é legal.

300
00:18:07,245 --> 00:18:11,137
E, pelo menos em princípio, isto deveria ser suficiente para recuperar os coeficientes.

301
00:18:11,137 --> 00:18:15,244
Portanto, o esboço aproximado do algoritmo seria: sempre que você quiser convolver

302
00:18:15,244 --> 00:18:19,253
duas listas de números, trate-as como se fossem coeficientes de dois polinômios.

303
00:18:19,253 --> 00:18:23,290
Você amostra esses polinômios com saídas suficientes, multiplica essas

304
00:18:23,290 --> 00:18:27,327
amostras ponto a ponto e, em seguida, resolve o sistema para recuperar

305
00:18:27,327 --> 00:18:31,364
os coeficientes como uma maneira sorrateira de encontrar a convolução.

306
00:18:31,364 --> 00:18:34,464
E como afirmei até agora, pelo menos, alguns de vocês poderiam

307
00:18:34,464 --> 00:18:37,564
reclamar com razão: &quot;Grant, esse é um plano idiota&quot;.

308
00:18:37,564 --> 00:18:41,323
Porque, por um lado, apenas calcular todas essas amostras para um dos

309
00:18:41,323 --> 00:18:45,190
polinômios que conhecemos já assume a ordem de n operações ao quadrado,

310
00:18:45,190 --> 00:18:49,218
sem mencionar que resolver esse sistema certamente será computacionalmente

311
00:18:49,218 --> 00:18:52,656
tão difícil quanto apenas fazer a convolução em primeiro lugar.

312
00:18:52,656 --> 00:18:56,883
Então, claro que temos essa conexão entre multiplicação e convoluções, mas

313
00:18:56,883 --> 00:19:01,054
toda a complexidade acontece na tradução de um ponto de vista para outro.

314
00:19:01,054 --> 00:19:04,364
Mas há um truque, e aqueles que conhecem as transformadas

315
00:19:04,364 --> 00:19:07,673
de Fourier e o algoritmo FFT podem ver onde isso vai dar.

316
00:19:07,673 --> 00:19:09,828
Se você não está familiarizado com esses tópicos, o que

317
00:19:09,828 --> 00:19:12,176
estou prestes a dizer pode parecer completamente inesperado.

318
00:19:12,176 --> 00:19:14,923
Apenas saiba que existem certos caminhos que você poderia ter

319
00:19:14,923 --> 00:19:17,582
trilhado na matemática que tornam esse passo mais esperado.

320
00:19:17,582 --> 00:19:20,697
Basicamente, a ideia é que tenhamos liberdade de escolha aqui.

321
00:19:20,697 --> 00:19:23,892
Se, em vez de avaliar em algum conjunto arbitrário de entradas

322
00:19:23,892 --> 00:19:27,036
como 0, 1, 2, 3 e assim por diante, você optar por avaliar em

323
00:19:27,036 --> 00:19:30,080
um conjunto especialmente selecionado de números complexos.

324
00:19:30,080 --> 00:19:32,529
Especificamente aqueles que ficam uniformemente espaçados

325
00:19:32,529 --> 00:19:34,894
no círculo unitário, conhecidos como raízes da unidade.

326
00:19:34,894 --> 00:19:37,364
Isso nos dá um sistema mais amigável.

327
00:19:37,364 --> 00:19:41,523
A ideia básica é que, ao encontrar um número em que as suas potências se

328
00:19:41,523 --> 00:19:46,023
enquadram neste padrão de ciclo, isso significa que o sistema que geramos terá

329
00:19:46,023 --> 00:19:50,239
muita redundância nos diferentes termos que você está calculando, e sendo

330
00:19:50,239 --> 00:19:55,252
inteligente sobre como você aproveita essa redundância, pode economizar muito trabalho.

331
00:19:55,252 --> 00:19:58,654
Este conjunto de resultados que escrevi tem um nome especial,

332
00:19:58,654 --> 00:20:02,166
é chamado de transformada discreta de Fourier dos coeficientes.

333
00:20:02,166 --> 00:20:05,533
E se você quiser saber mais, na verdade fiz outra palestra para a

334
00:20:05,533 --> 00:20:09,103
mesma aula da Julia no MIT, sobre transformadas discretas de Fourier.

335
00:20:09,103 --> 00:20:12,931
E também há um vídeo realmente excelente no canal Redutível falando sobre a

336
00:20:12,931 --> 00:20:17,263
transformada rápida de Fourier, que é um algoritmo para calculá-los mais rapidamente.

337
00:20:17,263 --> 00:20:19,623
Além disso, o Veritasium fez recentemente um vídeo

338
00:20:19,623 --> 00:20:21,984
muito bom sobre FFT, então você tem muitas opções.

339
00:20:21,984 --> 00:20:24,786
E esse algoritmo rápido é realmente o que importa para nós.

340
00:20:24,786 --> 00:20:28,350
Novamente, por causa de toda essa redundância, existe um método para ir

341
00:20:28,350 --> 00:20:31,915
dos coeficientes a todas essas saídas, onde em vez de fazer na ordem de

342
00:20:31,915 --> 00:20:35,678
n operações ao quadrado, você faz na ordem de n vezes o log de n operações,

343
00:20:35,678 --> 00:20:39,293
o que é muito muito melhor à medida que você escala para listas grandes.

344
00:20:39,293 --> 00:20:42,386
E o mais importante, esse algoritmo fft funciona nos dois sentidos.

345
00:20:42,386 --> 00:20:45,515
Também permite passar das saídas aos coeficientes.

346
00:20:45,515 --> 00:20:49,054
Então, juntando tudo, vamos dar uma olhada no esboço do nosso algoritmo.

347
00:20:49,054 --> 00:20:53,406
Agora podemos dizer que sempre que você recebe duas longas listas de números e deseja

348
00:20:53,406 --> 00:20:57,758
calcular sua convolução, primeiro calcule a transformada rápida de Fourier de cada um

349
00:20:57,758 --> 00:21:02,009
deles, o que no fundo da sua mente você pode pensar como tratá-los como eles são os

350
00:21:02,009 --> 00:21:06,108
coeficientes de um polinômio e avaliam-no em um conjunto de pontos especialmente

351
00:21:06,108 --> 00:21:06,766
selecionado.

352
00:21:06,766 --> 00:21:10,715
Em seguida, multiplique os dois resultados que você acabou de obter pontualmente, o

353
00:21:10,715 --> 00:21:14,757
que é bom e rápido, e então faça uma transformação rápida inversa de Fourier, e o que

354
00:21:14,757 --> 00:21:18,847
isso fornece é a maneira sorrateira de calcular a convolução que estávamos procurando.

355
00:21:18,847 --> 00:21:22,957
Mas desta vez envolve apenas O de n log n operações.

356
00:21:22,957 --> 00:21:24,865
Isso é muito legal para mim!

357
00:21:24,865 --> 00:21:27,723
Este contexto muito específico onde as convoluções aparecem,

358
00:21:27,723 --> 00:21:30,722
multiplicando dois polinômios, abre as portas para um algoritmo

359
00:21:30,722 --> 00:21:34,235
que é relevante em qualquer outro lugar onde as convoluções possam surgir.

360
00:21:34,235 --> 00:21:36,489
Se você quiser adicionar distribuições de probabilidade,

361
00:21:36,489 --> 00:21:38,822
faça um grande processamento de imagem, seja ela qual for.

362
00:21:38,822 --> 00:21:41,765
E eu acho que esse é um bom exemplo de por que você deveria

363
00:21:41,765 --> 00:21:45,002
ficar animado quando vê alguma operação ou conceito em matemática

364
00:21:45,002 --> 00:21:47,798
aparecer em muitas áreas aparentemente não relacionadas.

365
00:21:47,798 --> 00:21:51,967
Se você quiser um pouco de lição de casa, aqui está algo divertido de se pensar.

366
00:21:51,967 --> 00:21:55,286
Explique por que quando você multiplica dois números diferentes, apenas

367
00:21:55,286 --> 00:21:58,651
uma multiplicação comum, como todos aprendemos na escola primária, o que

368
00:21:58,651 --> 00:22:01,924
você faz é basicamente uma convolução entre os dígitos desses números.

369
00:22:01,924 --> 00:22:04,332
Existem algumas etapas adicionais com carregamentos

370
00:22:04,332 --> 00:22:06,785
e similares, mas a etapa principal é uma convolução.

371
00:22:06,785 --> 00:22:10,573
Tendo em conta a existência de um algoritmo rápido, o que isso significa é que se

372
00:22:10,573 --> 00:22:14,407
tivermos dois números inteiros muito grandes, então existe uma forma de determinar

373
00:22:14,407 --> 00:22:18,240
o seu produto que é mais rápida do que o método que aprendemos na escola primária.

374
00:22:18,240 --> 00:22:21,562
Que, em vez de exigir O de n operações quadradas, requer

375
00:22:21,562 --> 00:22:25,291
apenas O de n log n, o que nem parece que deveria ser possível.

376
00:22:25,291 --> 00:22:28,059
O problema é que antes que isso seja realmente útil na

377
00:22:28,059 --> 00:22:31,280
prática, seus números teriam que ser absolutamente monstruosos.

378
00:22:31,280 --> 00:22:34,445
Mesmo assim, é legal que tal algoritmo exista.

379
00:22:34,445 --> 00:22:42,495
A seguir voltaremos nossa atenção para o caso contínuo

380
00:22:42,495 --> 00:22:50,400
com foco especial nas distribuições de probabilidade.

