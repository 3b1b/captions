1
00:00:00,000 --> 00:00:04,480
Supposons que je vous donne deux listes de nombres différentes, ou peut-être deux fonctions différentes, et que je vous demande

2
00:00:04,480 --> 00:00:08,400
de réfléchir à toutes les façons dont vous pourriez combiner ces deux listes pour obtenir une nouvelle liste de nombres,

3
00:00:08,400 --> 00:00:14,000
ou combiner les deux fonctions pour obtenir une nouvelle fonction. . Peut-être qu’une façon simple qui me vient à

4
00:00:14,000 --> 00:00:18,640
l’esprit est de simplement les additionner terme par terme. De même avec les fonctions, vous pouvez ajouter

5
00:00:18,640 --> 00:00:24,000
toutes les sorties correspondantes. Dans le même esprit, vous pouvez également multiplier les deux listes terme par terme

6
00:00:24,000 --> 00:00:28,720
et faire la même chose avec les fonctions. Mais il existe un autre type de combinaison tout

7
00:00:28,720 --> 00:00:33,840
aussi fondamentale que les deux, mais beaucoup moins souvent évoquée, connue sous le nom de convolution.

8
00:00:33,840 --> 00:00:38,240
Mais contrairement aux deux cas précédents, il ne s’agit pas d’un simple héritage d’une opération que vous

9
00:00:38,240 --> 00:00:43,360
pouvez effectuer sur des nombres. C'est quelque chose de véritablement nouveau dans le contexte de listes de nombres ou

10
00:00:43,360 --> 00:00:49,280
de combinaisons de fonctions. Ils apparaissent partout, ils sont omniprésents dans le traitement d'images, c'est une

11
00:00:49,280 --> 00:00:53,760
construction centrale dans la théorie des probabilités, ils sont beaucoup utilisés dans la résolution

12
00:00:53,760 --> 00:00:58,240
d'équations différentielles, et c'est un contexte où vous l'avez presque certainement vu, sinon par ce

13
00:00:58,240 --> 00:01:03,440
nom, multiplie deux polynômes ensemble. En tant que personne travaillant dans le domaine des explications visuelles,

14
00:01:03,440 --> 00:01:08,800
c'est un sujet particulièrement intéressant, car la définition formelle prise isolément et sans contexte peut sembler

15
00:01:08,800 --> 00:01:14,080
plutôt intimidante, mais si nous prenons le temps de vraiment comprendre ce qu'elle dit, et avant

16
00:01:14,080 --> 00:01:18,800
cela, de réellement motiver pourquoi vous voudriez quelque chose comme ça, c'est une opération incroyablement belle.

17
00:01:18,800 --> 00:01:22,880
Et je dois admettre que j’ai appris un petit quelque chose en assemblant les visuels de

18
00:01:22,880 --> 00:01:26,960
ce projet. Dans le cas de la convolution de deux fonctions différentes, j'essayais de réfléchir à différentes

19
00:01:26,960 --> 00:01:30,720
manières d'imaginer ce que cela pourrait signifier, et avec l'une d'elles, j'ai eu un petit moment de

20
00:01:30,720 --> 00:01:35,840
compréhension sur la raison pour laquelle les distributions normales jouent le rôle qui ils le font en probabilité,

21
00:01:35,840 --> 00:01:40,320
pourquoi c'est une forme si naturelle pour une fonction. Mais je prends de l'avance, il y a

22
00:01:40,320 --> 00:01:44,800
beaucoup de configuration pour celui-là. Dans cette vidéo, nous allons nous concentrer principalement sur le cas discret,

23
00:01:44,800 --> 00:01:49,920
et en particulier sur la création d'un algorithme très inattendu mais très intelligent pour les calculer.

24
00:01:49,920 --> 00:01:54,400
Et je vais retirer la discussion du cas continu dans une deuxième partie.

25
00:01:57,840 --> 00:02:03,120
Il est très tentant de s'ouvrir avec les exemples de traitement d'image, car ils sont visuellement les

26
00:02:03,120 --> 00:02:06,880
plus intrigants, mais il y a quelques subtilités qui rendent le cas de traitement d'image moins représentatif

27
00:02:06,880 --> 00:02:11,760
des convolutions dans leur ensemble, alors commençons plutôt par la probabilité, et en particulier l'un des

28
00:02:11,760 --> 00:02:15,520
exemples les plus simples auxquels, je suis sûr, tout le monde ici a pensé à un moment

29
00:02:15,520 --> 00:02:20,320
donné de sa vie, qui consiste à lancer une paire de dés et à déterminer les chances

30
00:02:20,320 --> 00:02:25,600
d'obtenir différentes sommes. Et on pourrait dire, pas un problème, pas un problème. Chacun de vos deux dés

31
00:02:25,600 --> 00:02:31,600
a six résultats possibles différents, ce qui nous donne un total de 36 paires de résultats possibles

32
00:02:31,600 --> 00:02:35,600
distinctes, et si nous les examinons toutes, nous pouvons compter combien de paires ont une somme donnée.

33
00:02:36,240 --> 00:02:41,120
Et en disposant toutes les paires dans une grille comme celle-ci, ce qui est plutôt sympa, c'est que toutes les

34
00:02:41,120 --> 00:02:47,040
paires qui ont une somme constante sont visibles le long d'une de ces différentes diagonales. Ainsi, le simple fait de compter

35
00:02:47,040 --> 00:02:51,920
combien il y en a sur chacune de ces diagonales vous indiquera quelle est la probabilité que vous voyiez une somme particulière.

36
00:02:52,880 --> 00:02:57,760
Et je dirais, très bien, très bien, mais pouvez-vous penser à d’autres façons de visualiser la même

37
00:02:57,760 --> 00:03:03,120
question ? D'autres images qui peuvent venir à l'esprit pour penser à toutes les paires distinctes qui ont une somme

38
00:03:03,120 --> 00:03:08,800
donnée ? Et peut-être que l'un de vous lève la main et dit : oui, j'en ai un. Disons que vous imaginez ces

39
00:03:08,800 --> 00:03:14,560
deux ensembles différents de possibilités chacun dans une rangée, mais que vous inversez cette deuxième rangée. De cette

40
00:03:14,560 --> 00:03:20,160
façon, toutes les différentes paires qui totalisent sept s'alignent verticalement comme ceci. Et si nous faisons glisser

41
00:03:20,160 --> 00:03:24,880
cette rangée du bas complètement vers la droite, alors la paire unique qui totalise deux, les yeux du serpent,

42
00:03:24,880 --> 00:03:29,680
est la seule à s'aligner. Et si je place cela sur une unité vers la droite, les paires

43
00:03:29,680 --> 00:03:35,440
qui s'alignent sont les deux paires différentes qui totalisent trois. Et en général, différentes valeurs de décalage de ce

44
00:03:35,440 --> 00:03:40,320
tableau inférieur, dont je me souviens que j'ai dû d'abord le retourner, révèlent toutes les paires distinctes qui ont

45
00:03:40,320 --> 00:03:48,800
une somme donnée. En ce qui concerne les questions de probabilité, cela n’est toujours pas particulièrement intéressant, car

46
00:03:48,800 --> 00:03:53,120
tout ce que nous faisons, c’est compter le nombre de résultats dans chacune de ces catégories.

47
00:03:53,120 --> 00:03:57,280
Mais cela suppose implicitement qu’il y a une chance égale pour chacun de ces visages

48
00:03:57,280 --> 00:04:02,240
d’apparaître. Mais et si je vous disais que j'ai un jeu de dés spécial qui n'est pas uniforme ? Peut-être que

49
00:04:02,240 --> 00:04:06,800
le dé bleu a son propre ensemble de nombres décrivant les probabilités pour chaque face à venir, et que

50
00:04:06,800 --> 00:04:11,920
le dé rouge a son propre ensemble de nombres distincts. Dans ce cas, si vous vouliez déterminer, par

51
00:04:11,920 --> 00:04:17,360
exemple, la probabilité de voir un deux, vous multiplieriez la probabilité que le dé bleu soit un par

52
00:04:17,360 --> 00:04:22,000
la probabilité que le dé rouge soit un un. Et pour avoir des chances d'obtenir un trois,

53
00:04:22,000 --> 00:04:26,880
vous regardez les deux paires distinctes lorsque cela est possible, et encore une fois, vous multipliez les

54
00:04:26,880 --> 00:04:32,240
probabilités correspondantes, puis vous additionnez ces deux produits ensemble. De même, les chances de voir un

55
00:04:32,240 --> 00:04:36,320
quatre impliquent de multiplier trois paires de possibilités différentes et de les additionner toutes

56
00:04:36,320 --> 00:04:41,360
ensemble. Et dans l'esprit de la mise en place de certaines formules, nommons ces probabilités supérieures a1, a2, a3, et ainsi

57
00:04:41,360 --> 00:04:48,000
de suite, et nommons les probabilités inférieures b1, b2, b3, et ainsi de suite. Et en général, ce processus,

58
00:04:48,000 --> 00:04:52,080
où nous prenons deux tableaux différents de nombres, retournons le second, puis les alignons

59
00:04:52,080 --> 00:04:56,160
à différentes valeurs de décalage, prenons un tas de produits par paires et

60
00:04:56,160 --> 00:05:00,960
les additionnons, c'est l'un des façons fondamentales de réfléchir à ce qu’est une convolution.

61
00:05:00,960 --> 00:05:08,960
Donc, pour l'exprimer un peu plus précisément, grâce à ce processus, nous avons simplement généré des probabilités de voir

62
00:05:08,960 --> 00:05:13,840
deux, trois, quatre, ainsi de suite jusqu'à 12, et nous les avons obtenues en mélangeant une liste de

63
00:05:13,840 --> 00:05:20,080
valeurs, a et une autre. liste de valeurs, b. Dans le jargon, nous dirions que la convolution de

64
00:05:20,080 --> 00:05:25,600
ces deux séquences nous donne cette nouvelle séquence, la nouvelle séquence de 11 valeurs, dont chacune ressemble à

65
00:05:25,600 --> 00:05:30,160
une somme de produits par paires. Si vous préférez, une autre façon de penser à la même opération est

66
00:05:30,160 --> 00:05:36,240
de créer d’abord un tableau de tous les produits par paires, puis de les additionner le long de toutes ces

67
00:05:36,240 --> 00:05:41,120
diagonales. Encore une fois, c'est une façon de mélanger ces deux séquences de nombres pour obtenir une nouvelle

68
00:05:41,120 --> 00:05:46,400
séquence de 11 nombres. C'est le même fonctionnement que celui pensé pour les fenêtres coulissantes, juste une autre perspective.

69
00:05:46,960 --> 00:05:51,280
En y mettant une petite note, voici comment vous pourriez le voir écrit. La convolution de a et

70
00:05:51,280 --> 00:05:57,200
b, notée par ce petit astérisque, est une nouvelle liste, et le nième élément de cette liste ressemble à une somme,

71
00:05:57,200 --> 00:06:03,440
et cette somme s'étend sur toutes les différentes paires d'indices, i et j, de sorte que la somme de ces indices

72
00:06:03,440 --> 00:06:09,440
sont égaux à n. C'est un peu long, mais par exemple, si n était 6, les paires que nous examinons sont 1

73
00:06:09,440 --> 00:06:15,680
et 5, 2 et 4, 3 et 3, 4 et 2, 5 et 1, toutes les différentes paires qui s'additionnent à 6.

74
00:06:16,400 --> 00:06:20,640
Mais honnêtement, quelle que soit la manière dont vous l’écrivez, la notation est secondaire en importance par rapport au visuel que

75
00:06:20,640 --> 00:06:26,320
vous pourriez avoir en tête pendant le processus. Ici, il serait peut-être utile de faire un exemple très simple, dans lequel je

76
00:06:26,320 --> 00:06:32,000
pourrais vous demander quelle est la convolution de la liste 1, 2, 3 avec la liste 4, 5, 6. Vous pourriez imaginer

77
00:06:32,000 --> 00:06:36,160
prendre ces deux listes, retourner la seconde, puis commencer avec son couvercle

78
00:06:36,160 --> 00:06:41,200
complètement à gauche. Ensuite, la paire de valeurs qui s'alignent sont 1 et 4, multipliez-les ensemble,

79
00:06:41,200 --> 00:06:45,680
et cela nous donne notre premier terme de notre sortie. Faites glisser ce tableau inférieur d'une unité vers la

80
00:06:45,680 --> 00:06:51,840
droite, les paires qui s'alignent sont 1 et 5, et 2 et 4, multipliez ces paires, additionnez-les ensemble, et cela

81
00:06:51,840 --> 00:06:57,600
nous donne 13, l'entrée suivante dans notre sortie. Faites glisser les choses une fois de plus, et nous prendrons 1 fois 6,

82
00:06:57,600 --> 00:07:04,400
plus 2 fois 5, plus 3 fois 4, ce qui se trouve être 28. Encore une slide, et on obtient 2 fois 6,

83
00:07:04,400 --> 00:07:10,000
plus 3 fois 5, et ça nous donne 27, et finalement le dernier terme ressemblera à 3 fois 6.

84
00:07:10,560 --> 00:07:14,080
Si vous le souhaitez, vous pouvez afficher votre langage de programmation préféré et votre bibliothèque préférée

85
00:07:14,080 --> 00:07:18,640
qui comprend diverses opérations numériques, et vous pouvez confirmer que je ne vous mens pas.

86
00:07:18,640 --> 00:07:24,320
Si vous prenez la convolution de 1, 2, 3, contre 4, 5, 6, c'est bien le résultat que vous obtiendrez.

87
00:07:24,880 --> 00:07:29,200
Nous avons vu un cas où il s'agit d'une opération naturelle et souhaitable, qui s'additionne aux distributions

88
00:07:29,200 --> 00:07:34,640
de probabilité, et un autre exemple courant serait une moyenne mobile. Imaginez que vous avez une longue liste de

89
00:07:34,640 --> 00:07:39,920
nombres et que vous prenez une autre liste plus petite de nombres dont la somme donne tous 1. Dans ce cas, j'ai juste

90
00:07:39,920 --> 00:07:45,280
une petite liste de 5 valeurs, et elles sont toutes égales à 1 5ème. Ensuite, si nous effectuons ce processus de

91
00:07:45,280 --> 00:07:49,760
convolution par fenêtre coulissante, fermons en quelque sorte les yeux et balayons sous le tapis ce qui se passe

92
00:07:50,560 --> 00:07:55,120
au tout début, une fois que notre plus petite liste de valeurs chevauche entièrement la plus grande, réfléchissez à ce

93
00:07:55,680 --> 00:08:01,120
que signifie chaque terme de cette liste. la convolution signifie vraiment. À chaque itération, vous multipliez chacune

94
00:08:01,120 --> 00:08:06,400
des valeurs de vos données par 1 5 et les additionnez toutes, c'est-à-dire que

95
00:08:06,400 --> 00:08:12,080
vous prenez une moyenne de vos données dans cette petite fenêtre. Dans l'ensemble, le processus

96
00:08:12,080 --> 00:08:16,800
vous donne une version lissée des données d'origine, et vous pouvez la modifier en commençant par une

97
00:08:16,800 --> 00:08:21,280
petite liste de nombres différente, et tant que cette petite liste totalise 1, vous pouvez toujours l'interpréter

98
00:08:21,280 --> 00:08:25,840
comme une valeur mobile. moyenne. Dans l'exemple présenté ici, cette moyenne mobile accorderait plus de

99
00:08:25,840 --> 00:08:30,720
poids à la valeur centrale. Cela se traduit également par une version lissée des données.

100
00:08:33,200 --> 00:08:37,840
Si vous faites une sorte d’analogue bidimensionnel, cela vous donne un algorithme amusant pour rendre floue une

101
00:08:37,840 --> 00:08:43,120
image donnée. Et je dois dire que les animations que je m'apprête à montrer sont modifiées à partir de quelque

102
00:08:43,120 --> 00:08:48,160
chose que j'ai initialement créé pour une partie d'une série de conférences que j'ai données avec le Julia Lab au

103
00:08:48,160 --> 00:08:52,320
MIT pour un certain cours OpenCourseWare qui comprenait une unité de traitement d'image. Là, nous avons fait un peu plus

104
00:08:52,320 --> 00:08:56,640
pour plonger dans le code derrière tout cela, donc si vous êtes curieux, je vous laisse quelques liens. Mais

105
00:08:56,640 --> 00:09:01,440
en revenant sur cet exemple de flou, ce qui se passe, c'est que j'ai cette petite grille de

106
00:09:01,440 --> 00:09:06,480
valeurs 3x3 qui défile le long de notre image d'origine, et si nous zoomons, chacune de ces valeurs

107
00:09:06,480 --> 00:09:11,120
est 1 9ème, et ce que je fais à chaque itération, on multiplie chacune de ces valeurs par le

108
00:09:11,120 --> 00:09:16,080
pixel correspondant sur lequel elle se trouve. Et bien sûr, en informatique, nous considérons les couleurs

109
00:09:16,080 --> 00:09:20,400
comme de petits vecteurs de trois valeurs, représentant les composantes rouge, verte et bleue.

110
00:09:20,400 --> 00:09:25,440
Lorsque je multiplie toutes ces petites valeurs par 1 9 et que je les additionne, cela nous donne une

111
00:09:25,440 --> 00:09:30,480
moyenne pour chaque canal de couleur, et le pixel correspondant pour l'image de droite est défini comme étant cette

112
00:09:30,480 --> 00:09:36,320
somme. L'effet global, lorsque nous faisons cela pour chaque pixel de l'image, est que chacun d'entre eux

113
00:09:36,320 --> 00:09:40,880
se reflète dans tous ses voisins, ce qui nous donne une version plus floue que l'originale.

114
00:09:41,680 --> 00:09:46,640
Dans le jargon, nous dirions que l'image de droite est une convolution de notre image originale avec une petite

115
00:09:46,640 --> 00:09:52,000
grille de valeurs. Ou plus techniquement, je devrais peut-être dire que c'est la convolution avec une version

116
00:09:52,000 --> 00:09:56,160
tournée à 180 degrés de cette petite grille de valeurs. Cela n'a pas d'importance lorsque la grille

117
00:09:56,160 --> 00:10:00,720
est symétrique, mais il convient simplement de garder à l'esprit que la définition d'une convolution, héritée

118
00:10:00,720 --> 00:10:05,760
du contexte mathématique pur, devrait toujours vous inviter à penser à retourner ce deuxième tableau.

119
00:10:05,760 --> 00:10:10,240
Si nous modifions légèrement cela, nous pouvons obtenir un effet de flou beaucoup plus élégant en choisissant une grille de

120
00:10:10,240 --> 00:10:15,920
valeurs différente. Dans ce cas, j'ai une petite grille 5x5, mais la distinction n'est pas tant sa taille.

121
00:10:15,920 --> 00:10:19,920
Si nous zoomons, nous remarquons que la valeur au milieu est beaucoup plus grande que la valeur vers les bords,

122
00:10:19,920 --> 00:10:25,360
et cela vient du fait qu'elles sont toutes échantillonnées à partir d'une courbe en cloche, connue sous le nom de

123
00:10:25,360 --> 00:10:30,240
distribution gaussienne. De cette façon, lorsque nous multiplions toutes ces valeurs par le pixel correspondant sur lequel

124
00:10:30,240 --> 00:10:35,200
elles se trouvent, nous accordons beaucoup plus de poids à ce pixel central et beaucoup moins à

125
00:10:35,200 --> 00:10:39,920
ceux situés en périphérie. Et comme auparavant, le pixel correspondant à droite est défini comme étant cette

126
00:10:39,920 --> 00:10:45,360
somme. Comme nous effectuons ce processus pour chaque pixel, cela donne un effet de flou qui simule

127
00:10:45,360 --> 00:10:49,760
de manière beaucoup plus authentique la notion de flou de votre objectif ou quelque chose comme ça.

128
00:10:49,760 --> 00:10:54,960
Mais le flou est loin d’être la seule chose que l’on peut faire avec cette idée. Par exemple, jetez un œil

129
00:10:54,960 --> 00:10:59,600
à cette petite grille de valeurs, qui implique des nombres positifs à gauche et des nombres négatifs

130
00:10:59,600 --> 00:11:04,480
à droite, que je colorierai respectivement en bleu et en rouge. Prenez un moment pour voir si

131
00:11:04,480 --> 00:11:11,680
vous pouvez prédire et comprendre quel effet cela aura sur l'image finale. Donc, dans ce cas, je penserai

132
00:11:11,680 --> 00:11:16,560
simplement à l'image en niveaux de gris plutôt qu'en couleur, donc chacun des pixels est simplement représenté par

133
00:11:16,560 --> 00:11:21,280
un nombre au lieu de trois. Et une chose à noter est que lorsque nous effectuons cette convolution, il

134
00:11:21,280 --> 00:11:26,240
est possible d'obtenir des valeurs négatives. Par exemple, à ce stade, si nous zoomons sur la moitié gauche de notre

135
00:11:26,240 --> 00:11:30,960
petite grille, elle se trouve entièrement au-dessus des pixels noirs, ce qui aurait une valeur de zéro, mais la moitié droite des

136
00:11:30,960 --> 00:11:35,360
valeurs négatives se trouve entièrement au-dessus des pixels blancs, ce qui aurait une valeur de zéro. avoir une valeur de un.

137
00:11:36,000 --> 00:11:40,960
Ainsi, lorsque nous multiplions les termes correspondants et les additionnons, les résultats seront très négatifs, et la façon

138
00:11:40,960 --> 00:11:45,120
dont j'affiche cela avec l'image de droite est de colorer les valeurs négatives en rouge et les valeurs

139
00:11:45,120 --> 00:11:49,520
positives en bleu. Une autre chose à remarquer est que lorsque vous êtes sur un patch qui est tout de même

140
00:11:49,520 --> 00:11:55,680
de la même couleur, tout va à zéro puisque la somme des valeurs de notre petite grille est nulle. Ceci est très

141
00:11:55,680 --> 00:11:59,680
différent des deux exemples précédents où la somme de notre petite grille était une, ce qui nous permettait

142
00:11:59,680 --> 00:12:05,760
de l'interpréter comme une moyenne mobile et donc un flou. Dans l'ensemble, ce petit processus détecte essentiellement les

143
00:12:05,760 --> 00:12:10,240
variations de la valeur des pixels lorsque vous vous déplacez de gauche à droite, ce qui

144
00:12:10,240 --> 00:12:13,760
vous donne une sorte de moyen de détecter tous les bords verticaux de votre image.

145
00:12:16,560 --> 00:12:20,960
Et de même, si nous faisons pivoter cette grille pour qu'elle varie à mesure que vous vous déplacez

146
00:12:20,960 --> 00:12:26,000
de haut en bas, cela reprendra tous les bords horizontaux, ce qui dans le cas de notre petite

147
00:12:26,000 --> 00:12:31,520
image de créature en tarte se traduira par des yeux assez démoniaques. D'ailleurs, cette grille plus petite est

148
00:12:31,520 --> 00:12:36,160
souvent appelée noyau, et la beauté ici réside dans la façon dont, en choisissant simplement un noyau différent, vous

149
00:12:36,160 --> 00:12:40,240
pouvez obtenir différents effets de traitement d'image, non seulement en brouillant votre détection de contour, mais également en améliorant la

150
00:12:40,240 --> 00:12:44,800
netteté. Pour ceux d'entre vous qui ont entendu parler d'un réseau neuronal convolutif, l'idée est d'utiliser des

151
00:12:44,800 --> 00:12:49,600
données pour déterminer ce que devraient être les noyaux en premier lieu, en fonction de ce

152
00:12:49,600 --> 00:12:55,120
que le réseau neuronal veut détecter. Une autre chose que je devrais peut-être aborder est la durée de la

153
00:12:55,120 --> 00:12:59,040
sortie. Pour quelque chose comme l'exemple de moyenne mobile, vous voudrez peut-être penser aux termes uniquement lorsque

154
00:12:59,040 --> 00:13:04,080
les deux fenêtres s'alignent complètement l'une avec l'autre, ou dans l'exemple de traitement d'image, vous souhaiterez

155
00:13:04,080 --> 00:13:09,200
peut-être que la sortie finale ait la même taille que l'original. Désormais, les convolutions en tant qu'opération

156
00:13:09,200 --> 00:13:13,920
mathématique pure produisent toujours un tableau plus grand que les deux tableaux avec lesquels vous avez commencé, du

157
00:13:13,920 --> 00:13:17,520
moins en supposant que l'un d'eux n'a pas une longueur de un. Sachez simplement que dans

158
00:13:17,520 --> 00:13:21,440
certains contextes informatiques, vous souhaitez souvent délibérément tronquer cette sortie.

159
00:13:21,520 --> 00:13:29,200
Une autre chose qui mérite d'être soulignée est que dans le contexte informatique, cette notion de retourner

160
00:13:29,200 --> 00:13:34,080
ce noyau avant de le laisser parcourir l'original semble souvent vraiment étrange et tout simplement déplacée, mais

161
00:13:34,080 --> 00:13:38,960
encore une fois, notez que c'est ce qui est hérité du contexte mathématique pur où, comme nous,

162
00:13:38,960 --> 00:13:44,000
vu avec les probabilités, c'est une chose incroyablement naturelle à faire. Et en fait, je peux vous

163
00:13:44,000 --> 00:13:48,480
montrer un autre exemple mathématique pur où même les programmeurs devraient s'intéresser à celui-ci, car il ouvre

164
00:13:48,480 --> 00:13:53,760
la porte à un algorithme beaucoup plus rapide pour calculer tout cela. Pour configurer ce que j'entends

165
00:13:53,760 --> 00:13:58,560
par plus rapidement ici, permettez-moi de revenir en arrière et de récupérer du python et je vais créer deux

166
00:13:58,560 --> 00:14:02,880
tableaux différents relativement grands. Chacun contiendra cent mille éléments aléatoires et je vais évaluer le

167
00:14:02,880 --> 00:14:08,640
temps d'exécution de la fonction de convolution de la bibliothèque numpy. Et dans ce cas,

168
00:14:08,640 --> 00:14:12,800
il l'exécute pendant plusieurs itérations différentes, essaie de trouver une moyenne, et il semble que sur cet

169
00:14:12,880 --> 00:14:18,640
ordinateur, au moins, la moyenne est de 4. 87 secondes. En revanche, si j'utilise une fonction

170
00:14:18,640 --> 00:14:24,080
différente de la bibliothèque scipy appelée fftconvolve, c'est la même chose, juste implémentée différemment, cela

171
00:14:24,080 --> 00:14:30,640
ne prend que 4. 3 millisecondes en moyenne, donc une amélioration de trois ordres de grandeur.

172
00:14:30,640 --> 00:14:34,800
Et encore une fois, même si elle porte un nom différent, elle donne le même résultat que

173
00:14:34,800 --> 00:14:38,880
l'autre fonction de convolution, elle fait simplement quelque chose pour y parvenir de manière plus intelligente.

174
00:14:38,880 --> 00:14:46,800
Rappelez-vous comment, avec l'exemple de probabilité, j'ai dit qu'une autre façon de penser à la convolution était

175
00:14:46,800 --> 00:14:51,520
de créer ce tableau de tous les produits par paires, puis d'additionner ces produits par paires le

176
00:14:51,520 --> 00:14:56,560
long des diagonales. Il n'y a bien sûr rien de spécifique à la probabilité. Chaque fois que vous convoquez

177
00:14:56,560 --> 00:15:00,880
deux listes différentes de nombres, vous pouvez y penser de cette façon. Créez ce type de table de multiplication

178
00:15:00,880 --> 00:15:05,520
avec tous les produits par paires, puis chaque somme le long de la diagonale correspond à l'un de vos

179
00:15:05,520 --> 00:15:11,680
résultats finaux. Un contexte dans lequel cette vue est particulièrement naturelle est celui où vous multipliez

180
00:15:11,680 --> 00:15:16,240
deux polynômes. Par exemple, permettez-moi de prendre la petite grille que nous avons déjà et de remplacer les termes supérieurs

181
00:15:16,240 --> 00:15:23,920
par 1, 2x et 3x au carré et de remplacer les autres termes par 4, 5x et 6x au carré.

182
00:15:23,920 --> 00:15:27,920
Pensez maintenant à ce que cela signifie lorsque nous créons tous ces différents produits par paires entre les

183
00:15:27,920 --> 00:15:32,960
deux listes. Ce que vous faites consiste essentiellement à étendre le produit complet des deux polynômes que

184
00:15:32,960 --> 00:15:38,240
j'ai écrits, puis lorsque vous additionnez le long de la diagonale qui correspond à la collecte de

185
00:15:38,240 --> 00:15:43,920
tous les termes similaires, ce qui est plutôt intéressant, étendre un polynôme et collecter des termes similaires est

186
00:15:43,920 --> 00:15:50,640
exactement le résultat. même processus qu’une convolution. Mais cela nous permet de faire quelque chose de plutôt cool,

187
00:15:50,640 --> 00:15:55,360
car pensez à ce que nous disons ici. Nous disons que si vous prenez deux fonctions différentes et

188
00:15:55,360 --> 00:16:00,560
que vous les multipliez ensemble, ce qui est une simple opération ponctuelle, c'est la même chose que si

189
00:16:00,560 --> 00:16:05,920
vous aviez d'abord extrait les coefficients de chacune d'elles en supposant qu'il s'agit de polynômes, puis pris

190
00:16:05,920 --> 00:16:11,840
une convolution de ceux-ci. deux listes de coefficients. Ce qui rend cela si intéressant, c'est que les convolutions

191
00:16:11,840 --> 00:16:16,560
semblent en principe beaucoup plus compliquées qu'une simple multiplication et je ne veux pas seulement dire que sur le

192
00:16:16,560 --> 00:16:21,760
plan conceptuel, il est plus difficile d'y penser, je veux dire que sur le plan informatique, il faut plus

193
00:16:21,760 --> 00:16:27,040
d'étapes pour effectuer une convolution que pour effectuer une produit ponctuel de deux listes différentes. Par exemple, disons que

194
00:16:27,040 --> 00:16:31,920
je vous ai donné deux très gros polynômes, disons chacun avec une centaine de coefficients différents, alors

195
00:16:32,480 --> 00:16:37,520
si la façon dont vous les multipliez était d'étendre ce produit, vous savez, en remplissant toute cette grille

196
00:16:37,520 --> 00:16:43,600
de 100 par 100 de produits par paires qui vous obligeraient à effectuez 10 000 produits différents, puis

197
00:16:43,600 --> 00:16:48,560
lorsque vous collectez tous les termes similaires le long des diagonales, vous obtenez un autre ensemble d'environ 10

198
00:16:48,560 --> 00:16:55,200
000 opérations. Plus généralement, dans le jargon, nous dirions que l'algorithme est O de n au carré, ce qui

199
00:16:55,200 --> 00:17:00,560
signifie pour deux listes de taille n de la manière dont le nombre d'opérations est proportionnel au carré de n.

200
00:17:00,560 --> 00:17:06,320
D'un autre côté, si je pense à deux polynômes en termes de leurs sorties, par exemple

201
00:17:06,320 --> 00:17:11,680
en échantillonnant leurs valeurs sur une poignée d'entrées, leur multiplication ne nécessite qu'autant d'opérations que le

202
00:17:11,680 --> 00:17:17,200
nombre d'échantillons, car encore une fois, c'est une opération ponctuelle et avec les polynômes, vous n'avez

203
00:17:17,200 --> 00:17:22,400
besoin que de un nombre fini d'échantillons pour pouvoir récupérer les coefficients. Par exemple, deux sorties suffisent

204
00:17:22,400 --> 00:17:27,920
pour spécifier de manière unique un polynôme linéaire, trois sorties suffiraient pour spécifier de manière unique un

205
00:17:27,920 --> 00:17:33,680
polynôme quadratique et en général, si vous connaissez n sorties distinctes, cela suffit pour spécifier de manière unique

206
00:17:33,680 --> 00:17:38,800
un polynôme qui a n coefficients différents ou si vous préférez, nous pourrions Exprimez ceci dans le

207
00:17:38,800 --> 00:17:43,680
langage des systèmes d'équations. Imaginez que je vous dis que j'ai un polynôme mais je ne vous dis

208
00:17:43,680 --> 00:17:47,840
pas quels sont les coefficients, ils sont un mystère pour vous. Dans notre exemple, vous pourriez considérer cela

209
00:17:47,840 --> 00:17:52,960
comme le produit que nous essayons de comprendre, puis supposez que je dis que je vais simplement vous dire

210
00:17:52,960 --> 00:17:59,600
quelles seraient les sorties de ce polynôme si vous saisissiez différentes entrées telles que 0, 1, 2. , 3,

211
00:17:59,600 --> 00:18:04,800
encore et encore et je vous en donne assez pour que vous ayez autant d'équations que d'inconnues il se trouve

212
00:18:04,800 --> 00:18:09,840
même que ce soit un système d'équations linéaire donc c'est sympa et en principe au moins cela devrait suffire

213
00:18:09,840 --> 00:18:14,880
à récupérer les coefficients.

214
00:18:14,880 --> 00:18:20,160


215
00:18:20,160 --> 00:18:26,560


216
00:18:26,560 --> 00:18:32,720


217
00:18:32,720 --> 00:18:38,000


218
00:18:38,000 --> 00:18:43,120


219
00:18:43,120 --> 00:18:47,760


220
00:18:47,760 --> 00:18:53,520


221
00:18:53,520 --> 00:18:58,400


222
00:18:58,400 --> 00:19:04,240


223
00:19:04,240 --> 00:19:09,200


224
00:19:09,200 --> 00:19:13,600


225
00:19:13,600 --> 00:19:18,720


226
00:19:18,720 --> 00:19:23,840


227
00:19:23,840 --> 00:19:30,080


228
00:19:30,080 --> 00:19:34,400


229
00:19:34,400 --> 00:19:41,600


230
00:19:41,600 --> 00:19:46,480


231
00:19:46,480 --> 00:19:51,360


232
00:19:51,360 --> 00:19:57,600


233
00:19:57,600 --> 00:20:03,200


234
00:20:03,200 --> 00:20:08,160


235
00:20:08,160 --> 00:20:12,640


236
00:20:12,640 --> 00:20:17,520


237
00:20:17,520 --> 00:20:22,720


238
00:20:22,720 --> 00:20:28,320


239
00:20:28,320 --> 00:20:33,040


240
00:20:33,040 --> 00:20:38,080


241
00:20:38,080 --> 00:20:43,600


242
00:20:43,600 --> 00:20:48,640


243
00:20:48,640 --> 00:20:53,200


244
00:20:53,200 --> 00:20:58,960


245
00:20:58,960 --> 00:21:03,280


246
00:21:03,280 --> 00:21:08,960


247
00:21:08,960 --> 00:21:14,480


248
00:21:14,480 --> 00:21:18,480


249
00:21:18,480 --> 00:21:25,600


250
00:21:25,600 --> 00:21:30,560


251
00:21:30,560 --> 00:21:35,120


252
00:21:35,120 --> 00:21:39,600


253
00:21:39,600 --> 00:21:44,480


254
00:21:44,480 --> 00:21:50,160


255
00:21:50,160 --> 00:21:54,800


256
00:21:54,800 --> 00:21:59,360


257
00:21:59,360 --> 00:22:04,640


258
00:22:04,640 --> 00:22:10,720


259
00:22:10,720 --> 00:22:16,000


260
00:22:16,000 --> 00:22:20,720


261
00:22:20,720 --> 00:22:26,320


262
00:22:26,320 --> 00:22:31,280


263
00:22:31,280 --> 00:22:36,880


264
00:22:36,880 --> 00:22:51,040


