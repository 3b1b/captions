[
 {
  "input": "Suppose I give you two different lists of numbers, or maybe two different functions, and I ask you to think of all the ways you might combine those two lists to get a new list of numbers, or combine the two functions to get a new function.",
  "model": "nmt",
  "translatedText": "Припустімо, я даю вам два різні списки чисел або, можливо, дві різні функції, і я прошу вас подумати про всі способи, якими ви можете поєднати ці два списки, щоб отримати новий список чисел, або поєднати дві функції, щоб отримати нову функцію.",
  "time_range": [
   0.0,
   11.737373737373737
  ]
 },
 {
  "input": "Maybe one simple way that comes to mind is to simply add them together term by term.",
  "model": "nmt",
  "translatedText": "Можливо, один простий спосіб, який спадає на думку, це просто скласти їх разом термін за терміном.",
  "time_range": [
   11.737373737373737,
   16.26727272727273
  ]
 },
 {
  "input": "Likewise with the functions, you can add all the corresponding outputs.",
  "model": "nmt",
  "translatedText": "Так само з функціями ви можете додати всі відповідні виходи.",
  "time_range": [
   16.26727272727273,
   20.050526315789476
  ]
 },
 {
  "input": "In a similar vein, you could also multiply the two lists term by term and do the same thing with the functions.",
  "model": "nmt",
  "translatedText": "У подібному ключі ви також можете помножити два списки термін за терміном і зробити те саме з функціями.",
  "time_range": [
   20.050526315789476,
   26.14545454545454
  ]
 },
 {
  "input": "But there's another kind of combination just as fundamental as both of those, but a lot less commonly discussed, known as a convolution.",
  "model": "nmt",
  "translatedText": "Але є ще один вид комбінації, такий же фундаментальний, як обидва, але набагато рідше обговорюваний, відомий як згортка.",
  "time_range": [
   26.14545454545454,
   33.84
  ]
 },
 {
  "input": "But unlike the previous two cases, it's not something that's merely inherited from an operation you can do to numbers.",
  "model": "nmt",
  "translatedText": "Але на відміну від попередніх двох випадків, це не те, що просто успадковано від операції, яку ви можете виконати з числами.",
  "time_range": [
   33.84,
   39.89333333333333
  ]
 },
 {
  "input": "It's something genuinely new for the context of lists of numbers or combining functions.",
  "model": "nmt",
  "translatedText": "Це щось справді нове для контексту списків чисел або комбінування функцій.",
  "time_range": [
   39.89333333333333,
   44.71666666666667
  ]
 },
 {
  "input": "They show up all over the place, they are ubiquitous in image processing, it's a core construct in the theory of probability, they're used a lot in solving differential equations, and one context where you've almost certainly seen it, if not by this name, is multiplying two polynomials together.",
  "model": "nmt",
  "translatedText": "Вони з’являються скрізь, вони всюдисущі в обробці зображень, це основна конструкція в теорії ймовірності, вони часто використовуються під час розв’язування диференціальних рівнянь, і в одному контексті ви майже напевно це бачили, якщо ні під цією назвою множить два поліноми разом.",
  "time_range": [
   44.71666666666667,
   60.210526315789465
  ]
 },
 {
  "input": "As someone in the business of visual explanations, this is an especially great topic, because the formulaic definition in isolation and without context can look kind of intimidating, but if we take the time to really unpack what it's saying, and before that actually motivate why you would want something like this, it's an incredibly beautiful operation.",
  "model": "nmt",
  "translatedText": "Для тих, хто займається візуальними поясненнями, це особливо чудова тема, тому що шаблонне визначення в ізоляції та без контексту може виглядати дещо лякаюче, але якщо ми приділимо час, щоб справді розгадати, що воно говорить, а перед тим фактично мотивувати, чому ви б хотіли щось подібне, це неймовірно красива операція.",
  "time_range": [
   60.210526315789465,
   78.8
  ]
 },
 {
  "input": "And I have to admit, I actually learned a little something while putting together the visuals for this project.",
  "model": "nmt",
  "translatedText": "І я повинен визнати, що я дійсно дещо навчився, збираючи візуальні елементи для цього проекту.",
  "time_range": [
   78.8,
   83.43636363636364
  ]
 },
 {
  "input": "In the case of convolving two different functions, I was trying to think of different ways you might picture what that could mean, and with one of them I had a little bit of an aha moment for why it is that normal distributions play the role that they do in probability, why it's such a natural shape for a function.",
  "model": "nmt",
  "translatedText": "У випадку згортання двох різних функцій я намагався придумати різні способи, якими можна уявити, що це може означати, і з одним із них у мене виник невеликий момент, чому нормальні розподіли відіграють таку роль. вони ймовірно, чому це така природна форма для функції.",
  "time_range": [
   83.43636363636364,
   98.44571428571427
  ]
 },
 {
  "input": "But I'm getting ahead of myself, there's a lot of setup for that one.",
  "model": "nmt",
  "translatedText": "Але я забігаю вперед, там багато налаштувань для цього.",
  "time_range": [
   98.44571428571427,
   101.57999999999998
  ]
 },
 {
  "input": "In this video, our primary focus is just going to be on the discrete case, and in particular building up to a very unexpected but very clever algorithm for computing these.",
  "model": "nmt",
  "translatedText": "У цьому відео наша основна увага буде зосереджена лише на дискретному випадку, і, зокрема, на розробці дуже несподіваного, але дуже розумного алгоритму для їх обчислення.",
  "time_range": [
   101.57999999999998,
   110.19654320987655
  ]
 },
 {
  "input": "And I'll pull out the discussion for the continuous case into a second part.",
  "model": "nmt",
  "translatedText": "І я витягну обговорення безперервного випадку в другу частину.",
  "time_range": [
   110.19654320987655,
   117.84
  ]
 },
 {
  "input": "It's very tempting to open up with the image processing examples, since they're visually the most intriguing, but there are a couple bits of finickiness that make the image processing case less representative of convolutions overall, so instead let's kick things off with probability, and in particular one of the simplest examples that I'm sure everyone here has thought about at some point in their life, which is rolling a pair of dice and figuring out the chances of seeing various different sums.",
  "model": "nmt",
  "translatedText": "Дуже спокусливо розпочати приклади обробки зображень, оскільки вони візуально найбільш інтригуючі, але є кілька тонкощів, які роблять процес обробки зображень менш репрезентативним для звивин, тому замість цього давайте почнемо з ймовірності, і, зокрема, один із найпростіших прикладів, про який, я впевнений, кожен тут думав колись у своєму житті, а це кидання пари кубиків і визначення шансів побачити різні суми.",
  "time_range": [
   117.84,
   141.53
  ]
 },
 {
  "input": "And you might say, not a problem, not a problem.",
  "model": "nmt",
  "translatedText": "І ви можете сказати, не проблема, не проблема.",
  "time_range": [
   141.53,
   144.17000000000002
  ]
 },
 {
  "input": "Each of your two dice has six different possible outcomes, which gives us a total of 36 distinct possible pairs of outcomes, and if we just look through them all we can count up how many pairs have a given sum.",
  "model": "nmt",
  "translatedText": "Кожен із ваших двох кубиків має шість різних можливих результатів, що дає нам загалом 36 різних можливих пар результатів, і якщо ми просто переглянемо їх усі, то зможемо порахувати, скільки пар мають певну суму.",
  "time_range": [
   144.17000000000002,
   156.24
  ]
 },
 {
  "input": "And arranging all the pairs in a grid like this, one pretty nice thing is that all of the pairs that have a constant sum are visible along one of these different diagonals.",
  "model": "nmt",
  "translatedText": "І якщо розташувати всі пари в подібній сітці, то одна дуже приємна річ полягає в тому, що всі пари, які мають постійну суму, видно вздовж однієї з цих різних діагоналей.",
  "time_range": [
   156.24,
   165.65061224489793
  ]
 },
 {
  "input": "So simply counting how many exist on each of those diagonals will tell you how likely you are to see a particular sum.",
  "model": "nmt",
  "translatedText": "Тож простий підрахунок кількості на кожній із цих діагоналей покаже вам, наскільки ймовірно ви побачите певну суму.",
  "time_range": [
   165.65061224489793,
   172.88
  ]
 },
 {
  "input": "And I'd say, very good, very good, but can you think of any other ways that you might visualize the same question?",
  "model": "nmt",
  "translatedText": "І я б сказав, дуже добре, дуже добре, але чи можете ви придумати якісь інші способи візуалізації того самого питання?",
  "time_range": [
   172.88,
   178.699381443299
  ]
 },
 {
  "input": "Other images that can come to mind to think of all the distinct pairs that have a given sum?",
  "model": "nmt",
  "translatedText": "Інші образи, які можуть прийти в голову, щоб подумати про всі різні пари, які мають задану суму?",
  "time_range": [
   178.699381443299,
   183.7448
  ]
 },
 {
  "input": "And maybe one of you raises your hand and says, yeah, I've got one.",
  "model": "nmt",
  "translatedText": "І, можливо, хтось із вас підніме руку і скаже: «Так, у мене є».",
  "time_range": [
   183.7448,
   187.55040000000002
  ]
 },
 {
  "input": "Let's say you picture these two different sets of possibilities each in a row, but you flip around that second row.",
  "model": "nmt",
  "translatedText": "Скажімо, ви уявляєте ці два різні набори можливостей кожен у рядку, але ви гортаєте другий рядок.",
  "time_range": [
   187.55040000000002,
   194.04673267326731
  ]
 },
 {
  "input": "That way all of the different pairs which add up to seven line up vertically like this.",
  "model": "nmt",
  "translatedText": "Таким чином усі різні пари, які в сумі становлять сім, вишиковуються вертикально таким чином.",
  "time_range": [
   194.04673267326731,
   198.95999999999998
  ]
 },
 {
  "input": "And if we slide that bottom row all the way to the right, then the unique pair that adds up to two, the snake eyes, are the only ones that align.",
  "model": "nmt",
  "translatedText": "І якщо ми зсунемо цей нижній рядок до кінця вправо, тоді унікальна пара, яка в сумі додає два, очі змії, будуть єдиними, які вирівнюються.",
  "time_range": [
   198.95999999999998,
   206.30978723404257
  ]
 },
 {
  "input": "And if I schlunk that over one unit to the right, the pairs which align are the two different pairs that add up to three.",
  "model": "nmt",
  "translatedText": "І якщо я переставлю це на одну одиницю праворуч, пари, які вирівнюються, є двома різними парами, які в сумі дають три.",
  "time_range": [
   206.30978723404257,
   212.88659793814435
  ]
 },
 {
  "input": "And in general, different offset values of this lower array, which remember I had to flip around first, reveal all the distinct pairs that have a given sum.",
  "model": "nmt",
  "translatedText": "І загалом, різні значення зміщення цього нижнього масиву, які пам’ятають, що я мав спочатку перевернути, виявляють усі різні пари, які мають задану суму.",
  "time_range": [
   212.88659793814435,
   221.77892473118277
  ]
 },
 {
  "input": "As far as probability questions go, this still isn't especially interesting, because all we're doing is counting how many outcomes there are in each of these categories.",
  "model": "nmt",
  "translatedText": "Що стосується ймовірнісних питань, це все ще не особливо цікаво, тому що все, що ми робимо, це підраховуємо, скільки результатів є в кожній із цих категорій.",
  "time_range": [
   221.77892473118277,
   233.12
  ]
 },
 {
  "input": "But that is with the implicit assumption that there's an equal chance for each of these faces to come up.",
  "model": "nmt",
  "translatedText": "Але це з неявним припущенням, що для кожного з цих облич є однакові шанси з’явитися.",
  "time_range": [
   233.12,
   237.85011494252873
  ]
 },
 {
  "input": "But what if I told you I have a special set of dice that's not uniform?",
  "model": "nmt",
  "translatedText": "Але що, якби я сказав вам, що у мене є спеціальний набір неоднорідних кубиків?",
  "time_range": [
   237.85011494252873,
   241.89793103448275
  ]
 },
 {
  "input": "Maybe the blue die has its own set of numbers describing the probabilities for each face coming up, and the red die has its own unique distinct set of numbers.",
  "model": "nmt",
  "translatedText": "Можливо, блакитний кубик має свій власний набір чисел, що описує ймовірності для кожної грані, що випадає, а червоний кубик має свій унікальний набір чисел.",
  "time_range": [
   241.89793103448275,
   249.740198019802
  ]
 },
 {
  "input": "In that case, if you wanted to figure out, say, the probability of seeing a two, you would multiply the probability that the blue die is a one times the probability that the red die is a one.",
  "model": "nmt",
  "translatedText": "У такому випадку, якби ви хотіли обчислити, скажімо, ймовірність побачити двійку, ви б помножили ймовірність того, що синій кубик дорівнює одиниці, на ймовірність того, що червоний кубик дорівнює одиниці.",
  "time_range": [
   249.740198019802,
   259.89581395348836
  ]
 },
 {
  "input": "And for the chances of seeing a three, you look at the two distinct pairs where that's possible, and again, multiply the corresponding probabilities, and then add those two products together.",
  "model": "nmt",
  "translatedText": "І щоб отримати шанси побачити трійку, ви дивитеся на дві різні пари, де це можливо, і знову множите відповідні ймовірності, а потім додаєте ці два добутки разом.",
  "time_range": [
   259.89581395348836,
   269.9831578947369
  ]
 },
 {
  "input": "Similarly, the chances of seeing a four involves multiplying together three different pairs of possibilities and adding them all together.",
  "model": "nmt",
  "translatedText": "Подібним чином шанси побачити четвірку включають множення разом трьох різних пар можливостей і додавання їх усіх разом.",
  "time_range": [
   269.9831578947369,
   276.74893617021274
  ]
 },
 {
  "input": "And in the spirit of setting up some formulas, let's name these top probabilities a1, a2, a3, and so on, and name the bottom ones b1, b2, b3, and so on.",
  "model": "nmt",
  "translatedText": "І в дусі створення деяких формул давайте назвемо ці найвищі ймовірності a1, a2, a3 і так далі, а нижні — b1, b2, b3 і так далі.",
  "time_range": [
   276.74893617021274,
   285.90315789473686
  ]
 },
 {
  "input": "And in general, this process, where we're taking two different arrays of numbers, flipping the second one around, and then lining them up at various different offset values, taking a bunch of pairwise products and adding them up, that's one of the fundamental ways to think about what a convolution is.",
  "model": "nmt",
  "translatedText": "І загалом, цей процес, коли ми беремо два різні масиви чисел, повертаємо другий, а потім шикуємо їх за різними значеннями зміщення, беремо купу попарних добутків і додаємо їх, це один із основні способи уявлення про те, що таке згортка.",
  "time_range": [
   285.90315789473686,
   301.13977528089885
  ]
 },
 {
  "input": "So just to spell it out a little more exactly, through this process, we just generated probabilities for seeing two, three, four, on and on up to 12, and we got them by mixing together one list of values, a, and another list of values, b.",
  "model": "nmt",
  "translatedText": "Щоб сформулювати це трохи точніше, за допомогою цього процесу ми просто згенерували ймовірності для того, щоб побачити два, три, чотири, і далі до 12, і ми отримали їх, змішавши разом один список значень, a та інший список значень, б.",
  "time_range": [
   301.13977528089885,
   317.0848
  ]
 },
 {
  "input": "In the lingo, we'd say the convolution of those two sequences gives us this new sequence, the new sequence of 11 values, each of which looks like some sum of pairwise products.",
  "model": "nmt",
  "translatedText": "На жаргоні ми б сказали, що згортка цих двох послідовностей дає нам цю нову послідовність, нову послідовність з 11 значень, кожне з яких виглядає як деяка сума попарних добутків.",
  "time_range": [
   317.0848,
   327.12
  ]
 },
 {
  "input": "If you prefer, another way you could think about the same operation is to first create a table of all the pairwise products, and then add up along all these diagonals.",
  "model": "nmt",
  "translatedText": "Якщо ви віддаєте перевагу, інший спосіб, яким ви можете подумати про ту саму операцію, це спочатку створити таблицю всіх попарних добутків, а потім підсумувати всі ці діагоналі.",
  "time_range": [
   327.12,
   336.7023157894737
  ]
 },
 {
  "input": "Again, that's a way of mixing together these two sequences of numbers to get us a new sequence of 11 numbers.",
  "model": "nmt",
  "translatedText": "Знову ж таки, це спосіб змішування цих двох послідовностей чисел, щоб отримати нову послідовність з 11 чисел.",
  "time_range": [
   336.7023157894737,
   342.2477669902912
  ]
 },
 {
  "input": "It's the same operation as the sliding windows thought, just another perspective.",
  "model": "nmt",
  "translatedText": "Це та сама операція, що і розсувні вікна, просто інша перспектива.",
  "time_range": [
   342.2477669902912,
   346.96
  ]
 },
 {
  "input": "Putting a little notation to it, here's how you might see it written down.",
  "model": "nmt",
  "translatedText": "Додавши до цього невеликі позначки, ось як ви можете це побачити.",
  "time_range": [
   346.96,
   350.3148936170212
  ]
 },
 {
  "input": "The convolution of a and b, denoted with this little asterisk, is a new list, and the nth element of that list looks like a sum, and that sum goes over all different pairs of indices, i and j, so that the sum of those indices is equal to n.",
  "model": "nmt",
  "translatedText": "Згортка a і b, позначена цією маленькою зірочкою, є новим списком, і n-й елемент цього списку виглядає як сума, і ця сума охоплює всі різні пари індексів, i і j, так що сума ці індекси дорівнюють n.",
  "time_range": [
   350.3148936170212,
   364.738969072165
  ]
 },
 {
  "input": "It's kind of a mouthful, but for example, if n was 6, the pairs we're going over are 1 and 5, 2 and 4, 3 and 3, 4 and 2, 5 and 1, all the different pairs that add up to 6.",
  "model": "nmt",
  "translatedText": "Це наче ковток, але, наприклад, якщо n дорівнює 6, то пари, які ми розглядаємо, це 1 і 5, 2 і 4, 3 і 3, 4 і 2, 5 і 1, усі різні пари, які складаються до 6.",
  "time_range": [
   364.738969072165,
   376.4
  ]
 },
 {
  "input": "But honestly, however you write it down, the notation is secondary in importance to the visual you might hold in your head for the process.",
  "model": "nmt",
  "translatedText": "Але чесно кажучи, як би ви це не записали, нотація має другорядне значення порівняно з візуалом, який ви можете тримати в голові під час процесу.",
  "time_range": [
   376.4,
   383.0824
  ]
 },
 {
  "input": "Here, maybe it helps to do a super simple example, where I might ask you what's the convolution of the list 1, 2, 3, with the list 4, 5, 6.",
  "model": "nmt",
  "translatedText": "Тут, можливо, допоможе зробити дуже простий приклад, де я можу запитати вас, яка згортка списку 1, 2, 3 зі списком 4, 5, 6.",
  "time_range": [
   383.0824,
   390.9672727272727
  ]
 },
 {
  "input": "You might picture taking both of these lists, flipping around that second one, and then starting with its lid all the way over to the left.",
  "model": "nmt",
  "translatedText": "Ви можете собі уявити, як ви берете обидва ці списки, гортаєте другий, а потім починаєте з його кришки до кінця ліворуч.",
  "time_range": [
   390.9672727272727,
   397.8576842105264
  ]
 },
 {
  "input": "Then the pair of values which align are 1 and 4, multiply them together, and that gives us our first term of our output.",
  "model": "nmt",
  "translatedText": "Тоді пара значень, які вирівнюються, це 1 і 4, перемножуємо їх разом, і це дає нам перший член нашого результату.",
  "time_range": [
   397.8576842105264,
   403.8133333333333
  ]
 },
 {
  "input": "Slide that bottom array one unit to the right, the pairs which align are 1 and 5, and 2 and 4, multiply those pairs, add them together, and that gives us 13, the next entry in our output.",
  "model": "nmt",
  "translatedText": "Посуньте цей нижній масив на одну одиницю вправо, пари, які вирівнюються, це 1 і 5, а також 2 і 4, помножте ці пари, додайте їх разом, і це дасть нам 13, наступний запис у наших виводах.",
  "time_range": [
   403.8133333333333,
   414.29999999999995
  ]
 },
 {
  "input": "Slide things over once more, and we'll take 1 times 6, plus 2 times 5, plus 3 times 4, which happens to be 28.",
  "model": "nmt",
  "translatedText": "Пересуньте все ще раз, і ми візьмемо 1 помножити на 6, плюс 2 помножити на 5, плюс 3 помножити на 4, що дорівнює 28.",
  "time_range": [
   414.29999999999995,
   421.59130434782605
  ]
 },
 {
  "input": "One more slide, and we get 2 times 6, plus 3 times 5, and that gives us 27, and finally the last term will look like 3 times 6.",
  "model": "nmt",
  "translatedText": "Ще один слайд, і ми отримаємо 2 помножити на 6 плюс 3 помножити на 5, і це дає нам 27, і нарешті останній член виглядатиме як 3 помножити на 6.",
  "time_range": [
   421.59130434782605,
   430.56
  ]
 },
 {
  "input": "If you'd like, you can pull up whatever your favorite programming language is, and your favorite library that includes various numerical operations, and you can confirm I'm not lying to you.",
  "model": "nmt",
  "translatedText": "Якщо ви хочете, ви можете вибрати будь-яку вашу улюблену мову програмування та вашу улюблену бібліотеку, яка містить різноманітні числові операції, і ви можете підтвердити, що я вам не брешу.",
  "time_range": [
   430.56,
   438.8070588235294
  ]
 },
 {
  "input": "If you take the convolution of 1, 2, 3, against 4, 5, 6, this is indeed the result that you'll get.",
  "model": "nmt",
  "translatedText": "Якщо ви візьмете згортку 1, 2, 3 проти 4, 5, 6, це справді результат, який ви отримаєте.",
  "time_range": [
   438.8070588235294,
   444.88
  ]
 },
 {
  "input": "We've seen one case where this is a natural and desirable operation, adding up to probability distributions, and another common example would be a moving average.",
  "model": "nmt",
  "translatedText": "Ми бачили один випадок, коли це природна і бажана операція, що додає до розподілу ймовірностей, і іншим поширеним прикладом було б ковзне середнє.",
  "time_range": [
   444.88,
   452.8816161616162
  ]
 },
 {
  "input": "Imagine you have some long list of numbers, and you take another smaller list of numbers that all add up to 1.",
  "model": "nmt",
  "translatedText": "Уявіть, що у вас є довгий список чисел, і ви берете ще один менший список чисел, які в сумі дають 1.",
  "time_range": [
   452.8816161616162,
   458.78857142857146
  ]
 },
 {
  "input": "In this case, I just have a little list of 5 values, and they're all equal to 1 5th.",
  "model": "nmt",
  "translatedText": "У цьому випадку я маю невеликий список із 5 значень, і всі вони дорівнюють 15-му.",
  "time_range": [
   458.78857142857146,
   463.38166666666666
  ]
 },
 {
  "input": "Then if we do this sliding window convolution process, and kind of close our eyes and sweep under the rug what happens at the very beginning of it, once our smaller list of values entirely overlaps with the bigger one, think about what each term in this convolution really means.",
  "model": "nmt",
  "translatedText": "Тоді, якщо ми зробимо цей процес згортання ковзного вікна, закриємо очі та заховаємо те, що відбувається на самому початку, як тільки наш менший список значень повністю збігається з більшим, подумайте про те, що означає кожен термін у цьому згортка насправді означає.",
  "time_range": [
   463.38166666666666,
   479.0233333333333
  ]
 },
 {
  "input": "At each iteration, what you're doing is multiplying each of the values from your data by 1 5th, and adding them all together, which is to say you're taking an average of your data inside this little window.",
  "model": "nmt",
  "translatedText": "На кожній ітерації ви множите кожне значення з ваших даних на 15 і додаєте їх усі разом, що означає, що ви берете середнє значення своїх даних у цьому маленькому вікні.",
  "time_range": [
   479.0233333333333,
   490.76923076923083
  ]
 },
 {
  "input": "Overall, the process gives you a smoothed out version of the original data, and you could modify this starting with a different little list of numbers, and as long as that little list all adds up to 1, you can still interpret it as a moving average.",
  "model": "nmt",
  "translatedText": "Загалом, процес дає вам згладжену версію вихідних даних, і ви можете змінити це, починаючи з іншого невеликого списку чисел, і доки цей невеликий список у сумі дорівнює 1, ви все одно можете інтерпретувати це як рухливий середній.",
  "time_range": [
   490.76923076923083,
   502.816
  ]
 },
 {
  "input": "In the example shown here, that moving average would be giving more weight towards the central value.",
  "model": "nmt",
  "translatedText": "У наведеному тут прикладі ковзне середнє надає більшу вагу центральному значенню.",
  "time_range": [
   502.816,
   507.78150537634406
  ]
 },
 {
  "input": "This also results in a smoothed out version of the data.",
  "model": "nmt",
  "translatedText": "Це також призводить до згладженої версії даних.",
  "time_range": [
   507.78150537634406,
   513.2
  ]
 },
 {
  "input": "If you do kind of a two-dimensional analog of this, it gives you a fun algorithm for blurring a given image.",
  "model": "nmt",
  "translatedText": "Якщо ви зробите такий собі двовимірний аналог, ви отримаєте цікавий алгоритм для розмивання певного зображення.",
  "time_range": [
   513.2,
   518.5942857142858
  ]
 },
 {
  "input": "And I should say the animations I'm about to show are modified from something I originally made for part of a set of lectures I did with the Julia Lab at MIT for a certain OpenCourseWare class that included an image processing unit.",
  "model": "nmt",
  "translatedText": "І я повинен сказати, що анімації, які я збираюся показати, змінені з того, що я спочатку створив для частини серії лекцій, які я проводив у Julia Lab в MIT для певного класу OpenCourseWare, який включав блок обробки зображень.",
  "time_range": [
   518.5942857142858,
   530.8871111111112
  ]
 },
 {
  "input": "There we did a little bit more to dive into the code behind all of this, so if you're curious I'll leave you some links.",
  "model": "nmt",
  "translatedText": "Там ми зробили трохи більше, щоб зануритися в код, що стоїть за всім цим, тому, якщо вам цікаво, я залишу вам кілька посилань.",
  "time_range": [
   530.8871111111112,
   536.4521739130435
  ]
 },
 {
  "input": "But focusing back on this blurring example, what's going on is I've got this little 3x3 grid of values that's marching along our original image, and if we zoom in, each one of those values is 1 9th, and what I'm doing at each iteration is multiplying each of those values by the corresponding pixel that it sits on top of.",
  "model": "nmt",
  "translatedText": "Але повернемося до цього прикладу розмиття. Що відбувається, я маю маленьку сітку значень 3x3, яка рухається вздовж нашого оригінального зображення, і якщо ми збільшимо масштаб, кожне з цих значень буде 19-м, і що я роблю на кожній ітерації кожне з цих значень множиться на відповідний піксель, над яким воно знаходиться.",
  "time_range": [
   536.4521739130435,
   553.3128421052633
  ]
 },
 {
  "input": "And of course in computer science we think of colors as little vectors of three values, representing the red, green, and blue components.",
  "model": "nmt",
  "translatedText": "І, звичайно, в інформатиці ми розглядаємо кольори як маленькі вектори трьох значень, що представляють червоний, зелений і синій компоненти.",
  "time_range": [
   553.3128421052633,
   560.4
  ]
 },
 {
  "input": "When I multiply all these little values by 1 9th and I add them together, it gives us an average along each color channel, and the corresponding pixel for the image on the right is defined to be that sum.",
  "model": "nmt",
  "translatedText": "Коли я множу всі ці маленькі значення на 19 і додаю їх разом, це дає нам середнє значення по кожному колірному каналу, і відповідний піксель для зображення праворуч визначається як ця сума.",
  "time_range": [
   560.4,
   570.9666666666666
  ]
 },
 {
  "input": "The overall effect, as we do this for every single pixel on the image, is that each one kind of bleeds into all of its neighbors, which gives us a blurrier version than the original.",
  "model": "nmt",
  "translatedText": "Загальний ефект, оскільки ми робимо це для кожного окремого пікселя на зображенні, полягає в тому, що кожен піксель перетікає в усіх своїх сусідів, що дає нам більш розмиту версію, ніж оригінальна.",
  "time_range": [
   570.9666666666666,
   581.68
  ]
 },
 {
  "input": "In the lingo we'd say that the image on the right is a convolution of our original image with a little grid of values.",
  "model": "nmt",
  "translatedText": "На жаргоні ми б сказали, що зображення праворуч є згорткою нашого оригінального зображення з невеликою сіткою значень.",
  "time_range": [
   581.68,
   587.800412371134
  ]
 },
 {
  "input": "Or more technically maybe I should say that it's the convolution with a 180 degree rotated version of that little grid of values.",
  "model": "nmt",
  "translatedText": "Або більш технічно, можливо, я повинен сказати, що це згортка з поверненою на 180 градусів версією цієї маленької сітки значень.",
  "time_range": [
   587.800412371134,
   594.4305617977527
  ]
 },
 {
  "input": "Not that it matters when the grid is symmetric, but it's just worth keeping in mind that the definition of a convolution, as inherited from the pure math context, should always invite you to think about flipping around that second array.",
  "model": "nmt",
  "translatedText": "Не те, щоб це мало значення, коли сітка є симетричною, але просто варто пам’ятати, що визначення згортки, успадковане з чистого математичного контексту, має завжди спонукати вас подумати про гортання цього другого масиву.",
  "time_range": [
   594.4305617977527,
   605.76
  ]
 },
 {
  "input": "If we modify this slightly we can get a much more elegant blurring effect by choosing a different grid of values.",
  "model": "nmt",
  "translatedText": "Якщо ми трохи змінимо це, ми зможемо отримати набагато елегантніший ефект розмиття, вибравши іншу сітку значень.",
  "time_range": [
   605.76,
   611.059793814433
  ]
 },
 {
  "input": "In this case I have a little 5x5 grid, but the distinction is not so much its size.",
  "model": "nmt",
  "translatedText": "У цьому випадку у мене невелика сітка 5x5, але відмінність полягає не стільки в її розмірі.",
  "time_range": [
   611.059793814433,
   615.92
  ]
 },
 {
  "input": "If we zoom in we notice that the value in the middle is a lot bigger than the value towards the edges, and where this is coming from is they're all sampled from a bell curve, known as a Gaussian distribution.",
  "model": "nmt",
  "translatedText": "Якщо ми збільшимо масштаб, то помітимо, що значення в середині набагато більше, ніж значення до країв, і це відбувається з того, що всі вони взяті з дзвоноподібної кривої, відомої як розподіл Гауса.",
  "time_range": [
   615.92,
   626.0106666666667
  ]
 },
 {
  "input": "That way when we multiply all of these values by the corresponding pixel that they're sitting on top of, we're giving a lot more weight to that central pixel and much less towards the ones out at the edge.",
  "model": "nmt",
  "translatedText": "Таким чином, коли ми множимо всі ці значення на відповідний піксель, над яким вони сидять, ми надаємо набагато більшої ваги цьому центральному пікселю, а тим, що знаходяться на краю, набагато менше.",
  "time_range": [
   626.0106666666667,
   636.3678350515464
  ]
 },
 {
  "input": "And just as before the corresponding pixel on the right is defined to be this sum.",
  "model": "nmt",
  "translatedText": "І так само, як і раніше, відповідний піксель праворуч визначається як ця сума.",
  "time_range": [
   636.3678350515464,
   640.3733333333332
  ]
 },
 {
  "input": "As we do this process for every single pixel it gives a blurring effect which much more authentically simulates the notion of putting your lens out of focus or something like that.",
  "model": "nmt",
  "translatedText": "Оскільки ми виконуємо цей процес для кожного окремого пікселя, це дає ефект розмиття, який набагато достовірніше імітує поняття розміщення вашого об’єктива поза фокусом або щось подібне.",
  "time_range": [
   640.3733333333332,
   649.76
  ]
 },
 {
  "input": "But blurring is far from the only thing that you can do with this idea.",
  "model": "nmt",
  "translatedText": "Але розмиття - далеко не єдине, що ви можете зробити з цією ідеєю.",
  "time_range": [
   649.76,
   653.4742857142857
  ]
 },
 {
  "input": "For instance take a look at this little grid of values, which involves some positive numbers on the left and some negative numbers on the right, which I'll color with blue and red respectively.",
  "model": "nmt",
  "translatedText": "Подивіться, наприклад, на цю невелику сітку значень, яка містить кілька додатних чисел ліворуч і кілька від’ємних чисел праворуч, які я розфарбую синім і червоним кольором відповідно.",
  "time_range": [
   653.4742857142857,
   663.0713402061855
  ]
 },
 {
  "input": "Take a moment to see if you can predict and understand what effect this will have on the final image.",
  "model": "nmt",
  "translatedText": "Знайдіть хвилинку, щоб перевірити, чи можете ви передбачити та зрозуміти, який вплив це матиме на кінцеве зображення.",
  "time_range": [
   663.0713402061855,
   669.7697959183673
  ]
 },
 {
  "input": "So in this case I'll just be thinking of the image as grayscale instead of colored, so each of the pixels is just represented by one number instead of three.",
  "model": "nmt",
  "translatedText": "Тож у цьому випадку я буду думати про зображення як у градаціях сірого, а не як кольорове, тому кожен піксель буде представлено лише одним числом, а не трьома.",
  "time_range": [
   669.7697959183673,
   678.0825806451612
  ]
 },
 {
  "input": "And one thing worth noticing is that as we do this convolution it's possible to get negative values.",
  "model": "nmt",
  "translatedText": "І одна річ, яку варто зауважити, це те, що коли ми виконуємо цю згортку, можна отримати від’ємні значення.",
  "time_range": [
   678.0825806451612,
   683.1020408163265
  ]
 },
 {
  "input": "For example at this point here if we zoom in the left half of our little grid sits entirely on top of black pixels, which would have a value of zero, but the right half of negative values all sit on top of white pixels, which would have a value of one.",
  "model": "nmt",
  "translatedText": "Наприклад, у цій точці тут, якщо ми збільшимо ліву половину нашої маленької сітки, вона буде повністю розташована поверх чорних пікселів, які матимуть нульове значення, але права половина від’ємних значень буде розташована поверх білих пікселів, що буде мають значення одиниці.",
  "time_range": [
   683.1020408163265,
   696.0
  ]
 },
 {
  "input": "So when we multiply corresponding terms and add them together the results will be very negative, and the way I'm displaying this with the image on the right is to color negative values red and positive values blue.",
  "model": "nmt",
  "translatedText": "Отже, коли ми перемножуємо відповідні члени та додаємо їх разом, результати будуть дуже негативними, і я відображаю це на зображенні праворуч — це фарбую від’ємні значення в червоний колір, а додатні — у синій.",
  "time_range": [
   696.0,
   706.0463157894737
  ]
 },
 {
  "input": "Another thing to notice is that when you're on a patch that's all the same color everything goes to zero since the sum of the values in our little grid is zero.",
  "model": "nmt",
  "translatedText": "Ще одна річ, яку слід зауважити, це те, що коли ви перебуваєте на патчі, який має один колір, усе стає нульовим, оскільки сума значень у нашій маленькій сітці дорівнює нулю.",
  "time_range": [
   706.0463157894737,
   714.8544329896907
  ]
 },
 {
  "input": "This is very different from the previous two examples where the sum of our little grid was one, which let us interpret it as a moving average and hence a blur.",
  "model": "nmt",
  "translatedText": "Це дуже відрізняється від двох попередніх прикладів, де сума нашої маленької сітки була одиницею, що дозволило нам інтерпретувати її як ковзне середнє і, отже, розмиття.",
  "time_range": [
   714.8544329896907,
   722.9902222222222
  ]
 },
 {
  "input": "All in all this little process basically detects wherever there's variation in the pixel value as you move from left to right, and so it gives you a kind of way to pick up on all the vertical edges from your image.",
  "model": "nmt",
  "translatedText": "Загалом, цей маленький процес виявляє будь-які коливання значення пікселів під час руху зліва направо, і тому він дає вам своєрідний спосіб виявити всі вертикальні краї вашого зображення.",
  "time_range": [
   722.9902222222222,
   736.56
  ]
 },
 {
  "input": "And similarly if we rotated that grid around so that it varies as you move from the top to the bottom this will be picking up on all the horizontal edges, which in the case of our little pie creature image does result in some pretty demonic eyes.",
  "model": "nmt",
  "translatedText": "І так само, якщо ми обертаємо цю сітку так, щоб вона змінювалася, коли ви рухаєтеся від верху до низу, це буде підбиратися на всіх горизонтальних краях, що у випадку з нашим маленьким зображенням пиріжкової істоти призведе до гарних демонічних очей.",
  "time_range": [
   736.56,
   749.9866666666667
  ]
 },
 {
  "input": "This smaller grid by the way is often called a kernel, and the beauty here is how just by choosing a different kernel you can get different image processing effects, not just blurring your edge detection but also things like sharpening.",
  "model": "nmt",
  "translatedText": "Цю меншу сітку, до речі, часто називають ядром, і принадність тут полягає в тому, що просто вибравши інше ядро, ви можете отримати різні ефекти обробки зображень, не лише розмиваючи виявлення країв, але й такі речі, як збільшення різкості.",
  "time_range": [
   749.9866666666667,
   760.7101030927836
  ]
 },
 {
  "input": "For those of you who have heard of a convolutional neural network the idea there is to use data to figure out what the kernels should be in the first place as determined by whatever the neural network wants to detect.",
  "model": "nmt",
  "translatedText": "Для тих із вас, хто чув про згорточну нейронну мережу, ідея полягає в тому, щоб використовувати дані, щоб з’ясувати, якими мають бути ядра в першу чергу, як це визначається тим, що нейронна мережа хоче виявити.",
  "time_range": [
   760.7101030927836,
   771.6180645161292
  ]
 },
 {
  "input": "Another thing I should maybe bring up is the length of the output.",
  "model": "nmt",
  "translatedText": "Інша річ, яку я, можливо, повинен згадати, це довжина виводу.",
  "time_range": [
   771.6180645161292,
   775.3784615384616
  ]
 },
 {
  "input": "For something like the moving average example you might only want to think about the terms when both of the windows fully align with each other, or in the image processing example maybe you want the final output to have the same size as the original.",
  "model": "nmt",
  "translatedText": "Для чогось на кшталт прикладу ковзного середнього ви можете думати лише про терміни, коли обидва вікна повністю вирівнюються одне з одним, або у прикладі обробки зображення, можливо, ви хочете, щоб кінцевий результат мав такий самий розмір, як і оригінал.",
  "time_range": [
   775.3784615384616,
   787.7600000000001
  ]
 },
 {
  "input": "Now convolutions as a pure math operation always produce an array that's bigger than the two arrays that you started with, at least assuming one of them doesn't have a length of one.",
  "model": "nmt",
  "translatedText": "Тепер згортки як чиста математична операція завжди створюють масив, більший за два масиви, з яких ви почали, принаймні припускаючи, що один із них не має довжини одиниці.",
  "time_range": [
   787.7600000000001,
   796.4057142857143
  ]
 },
 {
  "input": "Just know that in certain computer science contexts you often want to deliberately truncate that output.",
  "model": "nmt",
  "translatedText": "Просто знайте, що в певних контекстах інформатики ви часто хочете навмисно скоротити цей вихід.",
  "time_range": [
   796.4057142857143,
   801.52
  ]
 },
 {
  "input": "Another thing worth highlighting is that in the computer science context this notion of flipping around that kernel before you let it march across the original often feels really weird and just uncalled for, but again note that that's what's inherited from the pure math context where like we saw with the probabilities it's an incredibly natural thing to do.",
  "model": "nmt",
  "translatedText": "Ще одна річ, яку варто підкреслити, полягає в тому, що в контексті інформатики це поняття гортати ядро перед тим, як ви дасте йому пройти через оригінал, часто здається дуже дивним і просто непотрібним, але знову зауважте, що це те, що успадковано від чистого математичного контексту, де, як ми бачив з ймовірністю, що це неймовірно природна річ.",
  "time_range": [
   801.52,
   822.5300000000001
  ]
 },
 {
  "input": "And actually I can show you one more pure math example where even the programmers should care about this one because it opens the doors for a much faster algorithm to compute all of these.",
  "model": "nmt",
  "translatedText": "І фактично я можу показати вам ще один чистий математичний приклад, про який навіть програмісти повинні піклуватися, тому що він відкриває двері для набагато швидшого алгоритму для обчислення всього цього.",
  "time_range": [
   822.5300000000001,
   832.3705263157894
  ]
 },
 {
  "input": "To set up what I mean by faster here let me go back and pull up some python again and I'm going to create two different relatively big arrays.",
  "model": "nmt",
  "translatedText": "Щоб налаштувати те, що я маю на увазі під швидшим тут, дозвольте мені повернутися і знову витягнути якийсь пітон, і я збираюся створити два різні відносно великі масиви.",
  "time_range": [
   832.3705263157894,
   839.5793258426966
  ]
 },
 {
  "input": "Each one will have a hundred thousand random elements in it and I'm going to assess the runtime of the convolve function from the numpy library.",
  "model": "nmt",
  "translatedText": "У кожному з них буде сто тисяч випадкових елементів, і я збираюся оцінити час виконання функції convolve з бібліотеки numpy.",
  "time_range": [
   839.5793258426966,
   847.575652173913
  ]
 },
 {
  "input": "And in this case it runs it for multiple different iterations, tries to find an average, and it looks like on this computer at least it averages at 4.",
  "model": "nmt",
  "translatedText": "І в цьому випадку він запускає його для кількох різних ітерацій, намагається знайти середнє значення, і виглядає, що на цьому комп’ютері принаймні середнє значення становить 4.",
  "time_range": [
   847.575652173913,
   855.6195121951218
  ]
 },
 {
  "input": "87 seconds.",
  "model": "nmt",
  "translatedText": "87 секунд.",
  "time_range": [
   855.6195121951218,
   856.3219512195121
  ]
 },
 {
  "input": "By contrast if I use a different function from the scipy library called fftconvolve which is the same thing just implemented differently that only takes 4.",
  "model": "nmt",
  "translatedText": "На відміну від цього, якщо я використовую іншу функцію з бібліотеки scipy під назвою fftconvolve, яка є тією самою, лише реалізованою по-іншому, що займає лише 4.",
  "time_range": [
   856.3219512195121,
   866.0616666666667
  ]
 },
 {
  "input": "3 milliseconds on average, so three orders of magnitude improvement.",
  "model": "nmt",
  "translatedText": "У середньому 3 мілісекунди, тобто покращення на три порядки.",
  "time_range": [
   866.0616666666667,
   870.64
  ]
 },
 {
  "input": "And again even though it flies under a different name it's giving the same output that the other convolve function does, it's just doing something to go about it in a cleverer way.",
  "model": "nmt",
  "translatedText": "І знову ж таки, незважаючи на те, що він літає під іншою назвою, він видає той самий результат, що й інша функція convolve, але він просто робить щось, щоб зробити це більш розумним способом.",
  "time_range": [
   870.64,
   878.88
  ]
 },
 {
  "input": "Remember how with the probability example I said another way you could think about the convolution was to create this table of all the pairwise products and then add up those pairwise products along the diagonals.",
  "model": "nmt",
  "translatedText": "Пам’ятайте, як у прикладі ймовірності я сказав, що ще один спосіб, яким ви можете думати про згортку, це створити цю таблицю всіх попарних добутків, а потім додати ці попарні добутки вздовж діагоналей.",
  "time_range": [
   878.88,
   892.5279999999999
  ]
 },
 {
  "input": "There's of course nothing specific to probability anytime you're convolving two different lists of numbers you can think about it this way.",
  "model": "nmt",
  "translatedText": "Звичайно, немає нічого конкретного щодо ймовірності, коли ви складаєте два різні списки чисел, ви можете думати про це таким чином.",
  "time_range": [
   892.5279999999999,
   899.3212371134019
  ]
 },
 {
  "input": "Create this kind of multiplication table with all pairwise products and then each sum along the diagonal corresponds to one of your final outputs.",
  "model": "nmt",
  "translatedText": "Створіть таку таблицю множення з усіма попарними продуктами, а потім кожна сума по діагоналі відповідає одному з ваших кінцевих результатів.",
  "time_range": [
   899.3212371134019,
   906.3810752688172
  ]
 },
 {
  "input": "One context where this view is especially natural is when you multiply together two polynomials.",
  "model": "nmt",
  "translatedText": "Один контекст, де цей погляд особливо природний, це коли ви множите разом два поліноми.",
  "time_range": [
   906.3810752688172,
   912.4316483516483
  ]
 },
 {
  "input": "For example let me take the little grid we already have and replace the top terms with 1, 2x, and 3x squared and replace the other terms with 4, 5x, and 6x squared.",
  "model": "nmt",
  "translatedText": "Наприклад, дозвольте мені взяти маленьку сітку, яку ми вже маємо, і замінити верхні члени на 1, 2x і 3x у квадраті, а інші члени на 4, 5x і 6x у квадраті.",
  "time_range": [
   912.4316483516483,
   923.92
  ]
 },
 {
  "input": "Now think about what it means when we're creating all of these different pairwise products between the two lists.",
  "model": "nmt",
  "translatedText": "А тепер подумайте, що це означає, коли ми створюємо всі ці різні попарні продукти між двома списками.",
  "time_range": [
   923.92,
   928.6645454545454
  ]
 },
 {
  "input": "What you're doing is essentially expanding out the full product of the two polynomials I have written down and then when you add up along the diagonal that corresponds to collecting all like terms which is pretty neat expanding a polynomial and collecting like terms is exactly the same process as a convolution.",
  "model": "nmt",
  "translatedText": "Те, що ви робите, по суті, розширюєте повний добуток двох поліномів, які я записав, а потім, коли ви додаєте вздовж діагоналі, яка відповідає збору всіх подібних доданків, що є досить акуратним, розширюючи поліном і збираючи подібні доданки, це точно той самий процес, що й згортка.",
  "time_range": [
   928.6645454545454,
   946.9371428571429
  ]
 },
 {
  "input": "But this allows us to do something that's pretty cool because think about what we're saying here.",
  "model": "nmt",
  "translatedText": "Але це дозволяє нам робити щось дуже круте, тому що подумайте про те, що ми тут говоримо.",
  "time_range": [
   946.9371428571429,
   952.6424242424243
  ]
 },
 {
  "input": "We're saying if you take two different functions and you multiply them together which is a simple pointwise operation that's the same thing as if you had first extracted the coefficients from each one of those assuming they're polynomials and then taken a convolution of those two lists of coefficients.",
  "model": "nmt",
  "translatedText": "Ми говоримо, що якщо ви берете дві різні функції та перемножуєте їх разом, що є простою поточковою операцією, це те ж саме, що якби ви спочатку витягли коефіцієнти з кожної з них, припускаючи, що вони є поліномами, а потім зробили згортку цих два списки коефіцієнтів.",
  "time_range": [
   952.6424242424243,
   968.7615999999999
  ]
 },
 {
  "input": "What makes that so interesting is that convolutions feel in principle a lot more complicated than simple multiplication and I don't just mean conceptually they're harder to think about I mean computationally it requires more steps to perform a convolution than it does to perform a pointwise product of two different lists.",
  "model": "nmt",
  "translatedText": "Що робить це таким цікавим, так це те, що згортки в принципі здаються набагато складнішими, ніж просте множення, і я маю на увазі не просто концептуально, що про них важче думати, я маю на увазі, що з обчислювальної точки зору для виконання згортки потрібно більше кроків, ніж для виконання поточковий добуток двох різних списків.",
  "time_range": [
   968.7615999999999,
   986.0702040816327
  ]
 },
 {
  "input": "For example let's say I gave you two really big polynomials say each one with a hundred different coefficients then if the way you multiply them was to expand out this product you know filling in this entire 100 by 100 grid of pairwise products that would require you to perform 10,000 different products and then when you're collecting all the like terms along the diagonals that's another set of around 10,000 operations.",
  "model": "nmt",
  "translatedText": "Наприклад, скажімо, я дав вам два справді великі поліноми, скажімо, кожен із сотнею різних коефіцієнтів, тоді, якби ви їх помножили, щоб розширити цей добуток, який ви знаєте, заповнивши всю цю сітку 100 на 100 попарних добутків, що вимагатиме від вас виконайте 10 000 різних продуктів, а потім, коли ви збираєте всі подібні терміни вздовж діагоналей, це ще один набір приблизно з 10 000 операцій.",
  "time_range": [
   986.0702040816327,
   1009.6666666666665
  ]
 },
 {
  "input": "More generally in the lingo we'd say the algorithm is O of n squared meaning for two lists of size n the way that the number of operations scales is in proportion to the square of n.",
  "model": "nmt",
  "translatedText": "У більш загальному жаргоні ми б сказали, що алгоритм є O з n у квадраті, що означає для двох списків розміром n таким чином, що кількість масштабів операцій пропорційна квадрату n.",
  "time_range": [
   1009.6666666666665,
   1020.816
  ]
 },
 {
  "input": "On the other hand if I think of two polynomials in terms of their outputs for example sampling their values at some handful of inputs then multiplying them only requires as many operations as the number of samples since again it's a pointwise operation and with polynomials you only need finitely many samples to be able to recover the coefficients.",
  "model": "nmt",
  "translatedText": "З іншого боку, якщо я думаю про два поліноми в термінах їхніх виходів, наприклад, вибірка їхніх значень на кількох вхідних даних, тоді їх множення потребує лише стільки операцій, скільки вибірок, оскільки це знову ж таки поточкова операція, а з поліномами вам потрібно лише кінцеву кількість вибірок, щоб мати можливість відновити коефіцієнти.",
  "time_range": [
   1020.816,
   1041.126530612245
  ]
 },
 {
  "input": "For example two outputs are enough to uniquely specify a linear polynomial three outputs would be enough to uniquely specify a quadratic polynomial and in general if you know n distinct outputs that's enough to uniquely specify a polynomial that has n different coefficients or if you prefer we could phrase this in the language of systems of equations imagine I tell you I have some polynomial but I don't tell you what the coefficients are those are a mystery to you.",
  "model": "nmt",
  "translatedText": "Наприклад, двох виходів достатньо, щоб однозначно вказати лінійний поліном, трьох виходів буде достатньо, щоб однозначно вказати квадратичний поліном, і загалом, якщо ви знаєте n різних виходів, цього достатньо, щоб унікально вказати поліном, який має n різних коефіцієнтів, або, якщо хочете, ми можемо сформулюйте це мовою систем рівнянь, уявіть, я кажу вам, що у мене є якийсь поліном, але я не скажу вам, що це за коефіцієнти, для вас це загадка.",
  "time_range": [
   1041.126530612245,
   1066.439603960396
  ]
 },
 {
  "input": "In our example you might think of this as the product that we're trying to figure out and then suppose I say I'll just tell you what the outputs of this polynomial would be if you inputted various different inputs like 0, 1, 2, 3, on and on and I give you enough so that you have as many equations as you have unknowns it even happens to be a linear system of equations so that's nice and in principle at least this should be enough to recover the coefficients.",
  "model": "nmt",
  "translatedText": "У нашому прикладі ви можете подумати про це як про добуток, який ми намагаємося з’ясувати, а потім припустимо, я скажу, що я просто скажу вам, якими були б виходи цього полінома, якби ви ввели різні вхідні дані, наприклад 0, 1, 2 , 3, і далі, і я даю вам достатньо, щоб у вас було стільки ж рівнянь, скільки невідомих. Це навіть лінійна система рівнянь, так що це добре, і в принципі принаймні цього має бути достатньо для відновлення коефіцієнтів.",
  "time_range": [
   1066.439603960396,
   1091.0618181818181
  ]
 }
]