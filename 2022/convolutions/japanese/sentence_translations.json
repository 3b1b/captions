[
 {
  "input": "Suppose I give you two different lists of numbers, or maybe two different functions, and I ask you to think of all the ways you might combine those two lists to get a new list of numbers, or combine the two functions to get a new function.",
  "translatedText": "2 つの異なる数値リスト、あるいはおそらく 2 つの異なる関数を与え、これら 2 つのリ ストを組み合わせて新しい数値リストを得る方法、または 2 つの関数を組み合わせて新しい関 数を得る方法をすべて考えてもらいたいとします。 。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 0.0,
  "end": 11.32
 },
 {
  "input": "Maybe one simple way that comes to mind is to simply add them together term by term.",
  "translatedText": "おそらく思い浮かぶ簡単な方法の 1 つは 、それらを用語ごとに単純に加算することです。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 12.12,
  "end": 16.76
 },
 {
  "input": "Likewise with the functions, you can add all the corresponding outputs.",
  "translatedText": "関数と同様に、対応するすべての出力 を追加できます。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 17.16,
  "end": 19.92
 },
 {
  "input": "In a similar vein, you could also multiply the two lists term by term and do the same thing with the functions.",
  "translatedText": "同様に、2 つのリストを項ごとに乗算し、関数で同 じことを行うこともできます。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 20.54,
  "end": 25.68
 },
 {
  "input": "But there's another kind of combination just as fundamental as both of those, but a lot less commonly discussed, known as a convolution.",
  "translatedText": "しかし、これらの両方と同じくらい基本的であるも のの、あまり議論されていない、畳み込みとして知られる別の種類の組み合わせがあります。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 26.36,
  "end": 33.5
 },
 {
  "input": "But unlike the previous two cases, it's not something that's merely inherited from an operation you can do to numbers.",
  "translatedText": "ただし、前の 2 つのケースとは異なり、数値に対して実行できる操作から単に継承さ れるものではありません。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 34.08,
  "end": 39.82
 },
 {
  "input": "It's something genuinely new for the context of lists of numbers or combining functions.",
  "translatedText": "これは、数値のリストや関数の組み合わせのコンテキストにおいては、ま ったく新しいものです。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 39.98,
  "end": 44.7
 },
 {
  "input": "They show up all over the place, they are ubiquitous in image processing, it's a core construct in the theory of probability, they're used a lot in solving differential equations, and one context where you've almost certainly seen it, if not by this name, is multiplying two polynomials together.",
  "translatedText": "それらはあらゆる場所に現れ、画像処理で遍在し、確率論の中 核となる構成要素であり、微分方程式を解く際によく使用され、そうでないとし てもほぼ確実に目にしたことがある文脈の 1 つです。 この名前では、2 つ の多項式を掛け合わせます。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 45.32,
  "end": 60.24
 },
 {
  "input": "As someone in the business of visual explanations, this is an especially great topic, because the formulaic definition in isolation and without context can look kind of intimidating, but if we take the time to really unpack what it's saying, and before that actually motivate why you would want something like this, it's an incredibly beautiful operation.",
  "translatedText": "視覚的な説明を仕事にしている者として、これは特に素晴らしいトピ ックです。 なぜなら、文脈なしに孤立した定型的な定義は、ある意味威圧的に見えるかもしれないからです。 しかし、時間をかけてそれが何を言っているのかを実際に解き明かし、その前に実際にその理由を動機づ けることができれば、あなたはこのようなものを望むでしょう、それは信じられないほど美しい操作です。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 60.74,
  "end": 78.32
 },
 {
  "input": "And I have to admit, I actually learned a little something while putting together the visuals for this project.",
  "translatedText": "そして、正直に言うと、このプロジェクトのビジュアルをまとめているときに、実際に少し学んだこと があります。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 78.96,
  "end": 83.54
 },
 {
  "input": "In the case of convolving two different functions, I was trying to think of different ways you might picture what that could mean, and with one of them I had a little bit of an aha moment for why it is that normal distributions play the role that they do in probability, why it's such a natural shape for a function.",
  "translatedText": "2 つの異なる関数を畳み込む場合、私はそれが何を意味するのかを皆さんが想像でき るさまざまな方法を考えようとしていたのですが、そのうちの 1 つについて、なぜ正規分布が 次のような役割を果たすのかについて少し納得した瞬間がありました。 確率的にそうなるのですが 、なぜそれが関数にとって自然な形状なのでしょうか。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 83.54,
  "end": 98.52
 },
 {
  "input": "But I'm getting ahead of myself, there's a lot of setup for that one.",
  "translatedText": "しかし、私は先を行っています。 そのためのセッ トアップはたくさんあります。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 99.02,
  "end": 101.52
 },
 {
  "input": "In this video, our primary focus is just going to be on the discrete case, and in particular building up to a very unexpected but very clever algorithm for computing these.",
  "translatedText": "このビデオでは、離散的なケース、特にこれらを計算するた めの非常に予想外だが非常に賢いアルゴリズムを構築することに主に焦点を当てま す。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 101.84,
  "end": 110.26
 },
 {
  "input": "And I'll pull out the discussion for the continuous case into a second part.",
  "translatedText": "そして、継続的なケースの議論を第 2 部に引き出します。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 110.26,
  "end": 114.48
 },
 {
  "input": "It's very tempting to open up with the image processing examples, since they're visually the most intriguing, but there are a couple bits of finickiness that make the image processing case less representative of convolutions overall, so instead let's kick things off with probability, and in particular one of the simplest examples that I'm sure everyone here has thought about at some point in their life, which is rolling a pair of dice and figuring out the chances of seeing various different sums.",
  "translatedText": "画像処理の例は視覚的に最も興味深いものであるため、画像処理の例から始めたくな るのは非常に魅力的ですが、画像処理の例が全体的に畳み込みをあまり表現してい ないようにするいくつかの注意点があるため、代わりに確率論的に物事を始めまし ょう。 特に、ここにいる誰もが人生のある時点で考えたことがあると確信する最も 単純な例の 1 つは、サイコロを振って、さまざまな異なる金額が出る確率を計 算することです。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 118.58,
  "end": 141.5
 },
 {
  "input": "And you might say, not a problem, not a problem.",
  "translatedText": "そして、あなたは、問題ではない、問題ではない、と言うかもしれません。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 142.46,
  "end": 144.46
 },
 {
  "input": "Each of your two dice has six different possible outcomes, which gives us a total of 36 distinct possible pairs of outcomes, and if we just look through them all we can count up how many pairs have a given sum.",
  "translatedText": "2 つのサイコロにはそれ ぞれ 6 つの異なる出目があるため、合計 36 通りの異なる出目のペアが得られます。 それ らをすべて確認するだけで、指定された合計を持つペアがいくつあるかを数えることができます。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 144.68,
  "end": 155.86
 },
 {
  "input": "And arranging all the pairs in a grid like this, one pretty nice thing is that all of the pairs that have a constant sum are visible along one of these different diagonals.",
  "translatedText": "このようにすべてのペアをグリッドに配置すると、合計が一定であるすべてのペアがこれらの異なる対角 線の 1 つに沿って表示されるという非常に優れた点が 1 つあります。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 156.6,
  "end": 165.44
 },
 {
  "input": "So simply counting how many exist on each of those diagonals will tell you how likely you are to see a particular sum.",
  "translatedText": "したがって、これらの対角 線のそれぞれにいくつ存在するかを単純に数えるだけで、特定の合計が表示される可能性がわかります。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 165.44,
  "end": 172.12
 },
 {
  "input": "And I'd say, very good, very good, but can you think of any other ways that you might visualize the same question?",
  "translatedText": "非常に良い、非常に良いと思いますが、同じ質問を視覚化する他の方法は考え られますか?",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 173.22,
  "end": 178.66
 },
 {
  "input": "Other images that can come to mind to think of all the distinct pairs that have a given sum?",
  "translatedText": "特定の合計を持つすべての個別のペアについて考える他のイメージが思い浮かび ますか?",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 179.3,
  "end": 184.06
 },
 {
  "input": "And maybe one of you raises your hand and says, yeah, I've got one.",
  "translatedText": "そしておそらく、皆さんのうちの 1 人が手を挙げて、「はい、持っています」と言うかもしれません。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 184.86,
  "end": 187.98
 },
 {
  "input": "Let's say you picture these two different sets of possibilities each in a row, but you flip around that second row.",
  "translatedText": "これら 2 つの異なる可 能性のセットをそれぞれ 1 行に並べて描いたとしましょう。 ただし、2 番目の行を反転するとします。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 188.28,
  "end": 193.76
 },
 {
  "input": "That way all of the different pairs which add up to seven line up vertically like this.",
  "translatedText": "そうすれ ば、合計 7 になるさまざまなペアがすべてこのように縦に並びます。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 193.76,
  "end": 198.76
 },
 {
  "input": "And if we slide that bottom row all the way to the right, then the unique pair that adds up to two, the snake eyes, are the only ones that align.",
  "translatedText": "そして、その一番 下の行を右端までスライドすると、合計で 2 になるユニークなペア、つまり蛇 の目だけが一致します。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 199.36,
  "end": 206.28
 },
 {
  "input": "And if I schlunk that over one unit to the right, the pairs which align are the two different pairs that add up to three.",
  "translatedText": "そして、それを 1 単位上に右にずらしてみると、整列するペアは 2 つの異なるペアであり、合計すると 3 になります。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 206.62,
  "end": 212.08
 },
 {
  "input": "And in general, different offset values of this lower array, which remember I had to flip around first, reveal all the distinct pairs that have a given sum.",
  "translatedText": "そして一般に、この下の配列のさまざまなオフセッ ト値により、最初に反転する必要があったことを覚えていますが、指定された合計を持つすべての個別のペアが明 らかになります。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 212.88,
  "end": 221.46
 },
 {
  "input": "As far as probability questions go, this still isn't especially interesting, because all we're doing is counting how many outcomes there are in each of these categories.",
  "translatedText": "確率に関する質問に関する限り、これはまだ特に興味深いものではありません。 なぜなら 、私たちがやっているのはこれらの各カテゴリーにどれだけの結果があるかを数えているだけだからです。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 224.82,
  "end": 232.64
 },
 {
  "input": "But that is with the implicit assumption that there's an equal chance for each of these faces to come up.",
  "translatedText": "しかし、それは、これらの顔のそれぞれが出現する機会が等しいという暗黙の前提があ ります。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 232.98,
  "end": 238.12
 },
 {
  "input": "But what if I told you I have a special set of dice that's not uniform?",
  "translatedText": "しかし、統一されていない特別なサイコロのセットがあると言ったらどうなるでしょうか?",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 238.36,
  "end": 241.62
 },
 {
  "input": "Maybe the blue die has its own set of numbers describing the probabilities for each face coming up, and the red die has its own unique distinct set of numbers.",
  "translatedText": "おそら く、青いサイコロには、出現する各面の確率を表す独自の数字のセットがあり、赤いサイコロ には、独自の異なる数字のセットがあるでしょう。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 242.06,
  "end": 249.76
 },
 {
  "input": "In that case, if you wanted to figure out, say, the probability of seeing a two, you would multiply the probability that the blue die is a one times the probability that the red die is a one.",
  "translatedText": "その場合、たとえば 2 の目が出 る確率を計算したい場合は、青いサイコロが 1 になる確率と、赤いサイコ ロが 1 になる確率を 1 倍します。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 250.3,
  "end": 259.86
 },
 {
  "input": "And for the chances of seeing a three, you look at the two distinct pairs where that's possible, and again, multiply the corresponding probabilities, and then add those two products together.",
  "translatedText": "そして、3 が表示される確率につい ては、それが可能な場合は 2 つの異なるペアを調べ、対応する確率を再度乗 算して、それら 2 つの積を加算します。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 260.28,
  "end": 269.68
 },
 {
  "input": "Similarly, the chances of seeing a four involves multiplying together three different pairs of possibilities and adding them all together.",
  "translatedText": "同様に、4 が表示される確率には 、3 つの異なる可能性のペアを掛け合わせ、それらをすべて加算することが含まれ ます。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 270.1,
  "end": 276.82
 },
 {
  "input": "And in the spirit of setting up some formulas, let's name these top probabilities a1, a2, a3, and so on, and name the bottom ones b1, b2, b3, and so on.",
  "translatedText": "そして、いくつかの式を設定するという精神で、これらの上位の確率に a1、a2、a3 などの名 前を付け、下位の確率に b1、b2、b3 などの名前を付けましょう。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 276.82,
  "end": 285.96
 },
 {
  "input": "And in general, this process, where we're taking two different arrays of numbers, flipping the second one around, and then lining them up at various different offset values, taking a bunch of pairwise products and adding them up, that's one of the fundamental ways to think about what a convolution is.",
  "translatedText": "そして一般に、このプロセ スでは、2 つの異なる数値配列を取得し、2 番目の配列を反転して、それらを さまざまなオフセット値で並べ、多数のペアごとの積を取得してそれらを加算し ます。 これは、次の 1 つです。 畳み込みとは何かについての基本的な考え方。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 286.4,
  "end": 301.62
 },
 {
  "input": "So just to spell it out a little more exactly, through this process, we just generated probabilities for seeing two, three, four, on and on up to 12, and we got them by mixing together one list of values, a, and another list of values, b.",
  "translatedText": "もう少し正確に説明すると、このプロセスを通じて、2 つ、3 つ、4 つ、そして最 大 12 まで表示される確率を生成し、1 つの値のリスト a と別の値を混ぜ合わ せてそれらを取得しました。 値のリスト、b.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 304.86,
  "end": 316.98
 },
 {
  "input": "In the lingo, we'd say the convolution of those two sequences gives us this new sequence, the new sequence of 11 values, each of which looks like some sum of pairwise products.",
  "translatedText": "専門用語では、これら 2 つのシーケンスの畳み込 みにより、この新しいシーケンス、つまり 11 個の値の新しいシーケンスが得られ、それぞれがペアごとの 積の和のように見えると言えます。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 317.44,
  "end": 327.34
 },
 {
  "input": "If you prefer, another way you could think about the same operation is to first create a table of all the pairwise products, and then add up along all these diagonals.",
  "translatedText": "必要に応じて、同じ演算を考える別の方法として、最初にすべて のペアごとの積の表を作成し、次にこれらすべての対角線に沿って合計するという方法もあり ます。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 327.34,
  "end": 336.98
 },
 {
  "input": "Again, that's a way of mixing together these two sequences of numbers to get us a new sequence of 11 numbers.",
  "translatedText": "繰り返しますが、これは、これら 2 つの数値シーケンスを混ぜ合わせて、11 個の新しい数値シーケン スを取得する方法です。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 337.46,
  "end": 342.76
 },
 {
  "input": "It's the same operation as the sliding windows thought, just another perspective.",
  "translatedText": "これは、スライド窓が考えた操作と同じですが、別の視点にすぎません。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 343.24,
  "end": 346.46
 },
 {
  "input": "Putting a little notation to it, here's how you might see it written down.",
  "translatedText": "それにちょっとした注釈を付けて、次のように書きます。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 347.14,
  "end": 349.8
 },
 {
  "input": "The convolution of a and b, denoted with this little asterisk, is a new list, and the nth element of that list looks like a sum, and that sum goes over all different pairs of indices, i and j, so that the sum of those indices is equal to n.",
  "translatedText": "この小さなアスタリスクで示 されている a と b の畳み込みは新しいリストであり、そのリストの n 番目の要素は合計のように見えます。 その 合計は、すべての異なるインデックスのペア i と j にまたがります。 つまり、次の合計はそれらのインデックスは n に等しくなります。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 350.22,
  "end": 364.86
 },
 {
  "input": "It's kind of a mouthful, but for example, if n was 6, the pairs we're going over are 1 and 5, 2 and 4, 3 and 3, 4 and 2, 5 and 1, all the different pairs that add up to 6.",
  "translatedText": "ちょっと長めの話ですが、たとえば、n が 6 の場合、ここで検討するペアは、1 と 5、2 と 4、3 と 3、4 と 2、5 と 1 であり、すべての異なるペアを合計します。 6まで。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 365.28,
  "end": 375.8
 },
 {
  "input": "But honestly, however you write it down, the notation is secondary in importance to the visual you might hold in your head for the process.",
  "translatedText": "しかし正直なところ、どのように書き留めても、プロセス中に頭の中に保持するビジュアルに比べれば、 表記法は二の次の重要性を持っています。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 376.62,
  "end": 382.34
 },
 {
  "input": "Here, maybe it helps to do a super simple example, where I might ask you what's the convolution of the list 1, 2, 3, with the list 4, 5, 6.",
  "translatedText": "ここで、非常に単純な例を行うと役立つかもしれません。 リス ト 1、2、3 とリスト 4、5、6 の畳み込みは何かと尋ねるかもしれません。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 383.28,
  "end": 390.78
 },
 {
  "input": "You might picture taking both of these lists, flipping around that second one, and then starting with its lid all the way over to the left.",
  "translatedText": "これらのリストを 両方とも取得し、2 番目のリストを裏返し、次にその蓋から左端まで進めていく様子 を想像するかもしれません。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 391.48,
  "end": 397.68
 },
 {
  "input": "Then the pair of values which align are 1 and 4, multiply them together, and that gives us our first term of our output.",
  "translatedText": "次に、整列する値のペアは 1 と 4 であり、それら を乗算すると、出力の最初の項が得られます。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 398.18,
  "end": 403.54
 },
 {
  "input": "Slide that bottom array one unit to the right, the pairs which align are 1 and 5, and 2 and 4, multiply those pairs, add them together, and that gives us 13, the next entry in our output.",
  "translatedText": "一番下の配列を 1 単位右にスライドさせま す。 整列するペアは 1 と 5、および 2 と 4 です。 これらのペアを掛け合わせて加算すると、出力 の次のエントリである 13 が得られます。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 403.96,
  "end": 414.46
 },
 {
  "input": "Slide things over once more, and we'll take 1 times 6, plus 2 times 5, plus 3 times 4, which happens to be 28.",
  "translatedText": "もう一度スライドしてみると、1 × 6、プラス 2 × 5、プラス 3 × 4 で、たまたま 28 になります。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 414.96,
  "end": 421.56
 },
 {
  "input": "One more slide, and we get 2 times 6, plus 3 times 5, and that gives us 27, and finally the last term will look like 3 times 6.",
  "translatedText": "もう 1 枚スライドすると、2 × 6、 プラス 3 × 5、つまり 27 が得られ、最終的に最後の項は 3 × 6 のようになります。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 422.02,
  "end": 430.12
 },
 {
  "input": "If you'd like, you can pull up whatever your favorite programming language is, and your favorite library that includes various numerical operations, and you can confirm I'm not lying to you.",
  "translatedText": "必要に応じて、お気に入りのプログラミング言語や、さまざまな数値演算を含むお気 に入りのライブラリを呼び出して、私が嘘をついていないことを確認してください。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 430.66,
  "end": 438.98
 },
 {
  "input": "If you take the convolution of 1, 2, 3, against 4, 5, 6, this is indeed the result that you'll get.",
  "translatedText": "1、2、3 と 4、5、6 の畳み込みを行うと、実際にこのような結果が得られます。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 438.98,
  "end": 444.48
 },
 {
  "input": "We've seen one case where this is a natural and desirable operation, adding up to probability distributions, and another common example would be a moving average.",
  "translatedText": "これが自然で望ましい操作である確率分布への加算であるケースを 1 つ見てき ました。 もう 1 つの一般的な例は移動平均です。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 445.92,
  "end": 453.66
 },
 {
  "input": "Imagine you have some long list of numbers, and you take another smaller list of numbers that all add up to 1.",
  "translatedText": "数値の長いリストがあり、すべて 足すと 1 になる小さな数値の別のリストを取得すると想像してください。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 454.08,
  "end": 459.76
 },
 {
  "input": "In this case, I just have a little list of 5 values, and they're all equal to 1 5th.",
  "translatedText": "この場合、5 つの値の 小さなリストがあり、それらはすべて 5 分の 1 に等しいです。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 460.1,
  "end": 464.06
 },
 {
  "input": "Then if we do this sliding window convolution process, and kind of close our eyes and sweep under the rug what happens at the very beginning of it, once our smaller list of values entirely overlaps with the bigger one, think about what each term in this convolution really means.",
  "translatedText": "次に、このスライディング ウィ ンドウの畳み込みプロセスを実行し、目を閉じてその最初で何が起こっているかを徹底的に調べ 、小さい値のリストが大きい値のリストと完全に重なったら、この中の各項が何であるかを考 えてください。 畳み込みというのは本当に意味します。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 464.06,
  "end": 478.7
 },
 {
  "input": "At each iteration, what you're doing is multiplying each of the values from your data by 1 5th, and adding them all together, which is to say you're taking an average of your data inside this little window.",
  "translatedText": "各反復では、データの各値を 1/5 で乗算し、それらをすべて加算することになります。 つまり、この小 さなウィンドウ内のデータの平均を取ることになります。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 479.4,
  "end": 490.52
 },
 {
  "input": "Overall, the process gives you a smoothed out version of the original data, and you could modify this starting with a different little list of numbers, and as long as that little list all adds up to 1, you can still interpret it as a moving average.",
  "translatedText": "全体として、このプロセ スにより、元のデータの平滑化されたバージョンが得られます。 これを、別の小さな数値リストか ら始めて変更することができます。 その小さなリストの合計が 1 になる限り、それを移動デー タとして解釈できます。 平均。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 491.1,
  "end": 502.72
 },
 {
  "input": "In the example shown here, that moving average would be giving more weight towards the central value.",
  "translatedText": "ここに示す例では、移動平均により中心値により 大きな重みが与えられます。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 503.4,
  "end": 507.76
 },
 {
  "input": "This also results in a smoothed out version of the data.",
  "translatedText": "これにより、データが平滑化されたバージョンになります。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 508.42,
  "end": 510.8
 },
 {
  "input": "If you do kind of a two-dimensional analog of this, it gives you a fun algorithm for blurring a given image.",
  "translatedText": "これを 2 次元で類似したものにすると、特定の画像をぼかすための楽しいアルゴリズムが 得られます。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 513.14,
  "end": 518.72
 },
 {
  "input": "And I should say the animations I'm about to show are modified from something I originally made for part of a set of lectures I did with the Julia Lab at MIT for a certain OpenCourseWare class that included an image processing unit.",
  "translatedText": "そして、これから紹介するアニメーションは、画像処理ユニットを含む特定の OpenCo urseWare クラスのために MIT の Julia Lab と行った一連の講義の一部として 元々作成したものを変更したものであると言わなければなりません。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 518.72,
  "end": 531.08
 },
 {
  "input": "There we did a little bit more to dive into the code behind all of this, so if you're curious I'll leave you some links.",
  "translatedText": "そこで、このすべての背後にあるコー ドを詳しく調べるためにもう少し作業を行ったので、興味があればいくつかのリンクを残しておきます。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 531.56,
  "end": 536.28
 },
 {
  "input": "But focusing back on this blurring example, what's going on is I've got this little 3x3 grid of values that's marching along our original image, and if we zoom in, each one of those values is 1 9th, and what I'm doing at each iteration is multiplying each of those values by the corresponding pixel that it sits on top of.",
  "translatedText": "しか し、このぼやけた例に焦点を戻すと、何が起こっているのかというと、元の画像に沿って進んでい る値の小さな 3x3 グリッドがあり、ズームインすると、これらの値のそれぞれが 1 9 であり、私が何をしているのかということです。 各反復で、それらの値のそれぞれに、その上 にある対応するピクセルが乗算されます。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 536.62,
  "end": 553.62
 },
 {
  "input": "And of course in computer science we think of colors as little vectors of three values, representing the red, green, and blue components.",
  "translatedText": "そしてもちろん、コンピューター サイエンスで は、色を、赤、緑、青の成分を表す 3 つの値の小さなベクトルとして考えます。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 553.9,
  "end": 560.2
 },
 {
  "input": "When I multiply all these little values by 1 9th and I add them together, it gives us an average along each color channel, and the corresponding pixel for the image on the right is defined to be that sum.",
  "translatedText": "これらすべての小さな値に 1 9 を乗算して加算すると、各カラー チャネル に沿った平均が得られ、右側の画像の対応するピクセルはその合計として定義され ます。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 560.56,
  "end": 571.2
 },
 {
  "input": "The overall effect, as we do this for every single pixel on the image, is that each one kind of bleeds into all of its neighbors, which gives us a blurrier version than the original.",
  "translatedText": "画像上のすべてのピクセルに対してこれを行うと、全体的な効果として、それぞれの種類が 隣接するすべてのピクセルににじみ出て、元のピクセルよりもぼやけたバージョンが得られます。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 571.94,
  "end": 580.86
 },
 {
  "input": "In the lingo we'd say that the image on the right is a convolution of our original image with a little grid of values.",
  "translatedText": "専門用語では、右側の画像は、元の画像と値の小さなグリッドを畳み込んだもので あると言えます。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 581.72,
  "end": 587.74
 },
 {
  "input": "Or more technically maybe I should say that it's the convolution with a 180 degree rotated version of that little grid of values.",
  "translatedText": "あるいは、より専門的に言えば、これは、値の小さなグリッドを 180 度回転させ たバージョンとの畳み込みであると言うべきかもしれません。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 588.14,
  "end": 594.4
 },
 {
  "input": "Not that it matters when the grid is symmetric, but it's just worth keeping in mind that the definition of a convolution, as inherited from the pure math context, should always invite you to think about flipping around that second array.",
  "translatedText": "グリッドが対称であるかどうかは重要 ではありませんが、純粋な数学のコンテキストから継承された畳み込みの定義では、常に 2 番目の配列を反転することを考慮する必要があることに留意する価値があります。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 594.62,
  "end": 605.24
 },
 {
  "input": "If we modify this slightly we can get a much more elegant blurring effect by choosing a different grid of values.",
  "translatedText": "これを少し変更すると、別の値のグリッドを選択することで、よりエレガントなぼかし効果を得ること ができます。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 605.96,
  "end": 611.1
 },
 {
  "input": "In this case I have a little 5x5 grid, but the distinction is not so much its size.",
  "translatedText": "この場合、小さな 5x5 グリッドがありますが、違いはそのサイズではありません。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 611.44,
  "end": 615.78
 },
 {
  "input": "If we zoom in we notice that the value in the middle is a lot bigger than the value towards the edges, and where this is coming from is they're all sampled from a bell curve, known as a Gaussian distribution.",
  "translatedText": "ズームインすると、中央の値が端に向かう値よりもはるかに大きいことがわかります。 これは、ガウス分布として知られる釣鐘曲線からすべてサンプリングされていることが 原因です。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 615.98,
  "end": 625.94
 },
 {
  "input": "That way when we multiply all of these values by the corresponding pixel that they're sitting on top of, we're giving a lot more weight to that central pixel and much less towards the ones out at the edge.",
  "translatedText": "そうすることで、これらすべての値に、その上にある対応するピクセルを乗算 するときに、その中央のピクセルに多くの重みを与え、端のピクセルには重みをあまり 与えなくなります。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 626.8,
  "end": 636.38
 },
 {
  "input": "And just as before the corresponding pixel on the right is defined to be this sum.",
  "translatedText": "そして、前と同様に、右側の対応するピクセルがこの合計になるように定義され ます。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 636.8,
  "end": 640.56
 },
 {
  "input": "As we do this process for every single pixel it gives a blurring effect which much more authentically simulates the notion of putting your lens out of focus or something like that.",
  "translatedText": "このプロセスをすべてのピクセルに対して実行することで、レンズの焦点を 外したときなどの概念をより忠実にシミュレートするぼかし効果が得られます。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 641.32,
  "end": 649.72
 },
 {
  "input": "But blurring is far from the only thing that you can do with this idea.",
  "translatedText": "しかし、このアイデアでできることはぼかしだけではありません。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 649.9,
  "end": 653.36
 },
 {
  "input": "For instance take a look at this little grid of values, which involves some positive numbers on the left and some negative numbers on the right, which I'll color with blue and red respectively.",
  "translatedText": "たとえば、この小さな値 のグリッドを見てください。 左側にはいくつかの正の数値が、右側にはいくつかの負 の数値が含まれています。 それぞれ青と赤で色付けします。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 653.8,
  "end": 662.9
 },
 {
  "input": "Take a moment to see if you can predict and understand what effect this will have on the final image.",
  "translatedText": "これが最終的な画像にどのような影 響を与えるかを予測して理解できるかどうか、少し時間を取って確認してください。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 663.64,
  "end": 668.48
 },
 {
  "input": "So in this case I'll just be thinking of the image as grayscale instead of colored, so each of the pixels is just represented by one number instead of three.",
  "translatedText": "したがって、この場合、画 像は色付きではなくグレースケールであると考えているため、各ピクセルは 3 つの数値ではなく 1 つの数値で表されます。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 670.72,
  "end": 678.12
 },
 {
  "input": "And one thing worth noticing is that as we do this convolution it's possible to get negative values.",
  "translatedText": "そして、注目すべき点の 1 つは、この畳み込みを行うときに負の値 が得られる可能性があることです。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 678.44,
  "end": 683.06
 },
 {
  "input": "For example at this point here if we zoom in the left half of our little grid sits entirely on top of black pixels, which would have a value of zero, but the right half of negative values all sit on top of white pixels, which would have a value of one.",
  "translatedText": "たとえば、この時点でズームインすると、小さなグ リッドの左半分は完全に黒いピクセルの上にあり、その値はゼロになりますが 、負の値の右半分はすべて白いピクセルの上にあります。 値は 1 です。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 683.06,
  "end": 695.46
 },
 {
  "input": "So when we multiply corresponding terms and add them together the results will be very negative, and the way I'm displaying this with the image on the right is to color negative values red and positive values blue.",
  "translatedText": "したがって、対応する項を乗算して加算すると、結果は非常に負の値になり ます。 これを右の画像で表示する方法は、負の値を赤、正の値を青に色付 けることです。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 696.18,
  "end": 706.36
 },
 {
  "input": "Another thing to notice is that when you're on a patch that's all the same color everything goes to zero since the sum of the values in our little grid is zero.",
  "translatedText": "もう 1 つ注意すべき点は、すべて同じ色のパッチを使用している場合、 小さなグリッド内の値の合計がゼロになるため、すべてがゼロになることです。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 706.88,
  "end": 714.08
 },
 {
  "input": "This is very different from the previous two examples where the sum of our little grid was one, which let us interpret it as a moving average and hence a blur.",
  "translatedText": "これは、小さ なグリッドの合計が 1 だった前の 2 つの例とは大きく異なります。 この例では、それを移 動平均として解釈し、したがってぼやけています。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 715.18,
  "end": 722.18
 },
 {
  "input": "All in all this little process basically detects wherever there's variation in the pixel value as you move from left to right, and so it gives you a kind of way to pick up on all the vertical edges from your image.",
  "translatedText": "全体として、この小さなプロセスは 基本的に、左から右に移動するときにピクセル値に変化がある場所を検出す るため、画像からすべての垂直エッジを検出する一種の方法を提供します。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 723.64,
  "end": 733.92
 },
 {
  "input": "And similarly if we rotated that grid around so that it varies as you move from the top to the bottom this will be picking up on all the horizontal edges, which in the case of our little pie creature image does result in some pretty demonic eyes.",
  "translatedText": "同様に、上から下に移動するにつれてグリッドが変化するようにグリッド を回転すると、すべての水平エッジが検出され、小さなパイの生き物の画 像の場合、かなり悪魔のような目が表示されます。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 736.5,
  "end": 749.34
 },
 {
  "input": "This smaller grid by the way is often called a kernel, and the beauty here is how just by choosing a different kernel you can get different image processing effects, not just blurring your edge detection but also things like sharpening.",
  "translatedText": "ちなみに、この小さなグリ ッドはカーネルと呼ばれることが多く、ここでの利点は、別のカーネルを選択するだけで、エ ッジ検出をぼかすだけでなくシャープ化などのさまざまな画像処理効果を得ることができるこ とです。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 750.4,
  "end": 760.84
 },
 {
  "input": "For those of you who have heard of a convolutional neural network the idea there is to use data to figure out what the kernels should be in the first place as determined by whatever the neural network wants to detect.",
  "translatedText": "畳み込みニューラル ネットワークについて聞いたことがある方は、ニューラル ネットワー クが検出したいものによって決定される、そもそもカーネルがどうあるべきかをデータを使用して判断 するという概念があると思います。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 760.84,
  "end": 771.48
 },
 {
  "input": "Another thing I should maybe bring up is the length of the output.",
  "translatedText": "もう 1 つ取り上げるべき点は、出力の長さで す。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 772.76,
  "end": 775.52
 },
 {
  "input": "For something like the moving average example you might only want to think about the terms when both of the windows fully align with each other, or in the image processing example maybe you want the final output to have the same size as the original.",
  "translatedText": "移動平均の例のような場合は、両方のウィンドウが互いに完全に一致するとき の項のみを考慮する必要があるかもしれません。 または、画像処理の例では、最終 出力を元のサイズと同じサイズにしたいかもしれません。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 775.82,
  "end": 787.28
 },
 {
  "input": "Now convolutions as a pure math operation always produce an array that's bigger than the two arrays that you started with, at least assuming one of them doesn't have a length of one.",
  "translatedText": "純粋な数学演算としての畳 み込みは、少なくともそのうちの 1 つの長さが 1 ではないと仮定すると、最初に 開始した 2 つの配列よりも大きな配列を常に生成します。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 787.28,
  "end": 796.18
 },
 {
  "input": "Just know that in certain computer science contexts you often want to deliberately truncate that output.",
  "translatedText": "特定のコンピューター サイエン スのコンテキストでは、その出力を意図的に切り捨てたいことがよくあることを知っておいてください。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 796.72,
  "end": 801.52
 },
 {
  "input": "Another thing worth highlighting is that in the computer science context this notion of flipping around that kernel before you let it march across the original often feels really weird and just uncalled for, but again note that that's what's inherited from the pure math context where like we saw with the probabilities it's an incredibly natural thing to do.",
  "translatedText": "もう 1 つ強調すべき価値があるのは、コンピューター サイエンスの文脈では、元のカーネルを実 行する前にそのカーネルを反転するというこの概念は、非常に奇妙で必要のないものに感じることが よくありますが、それが純粋な数学の文脈から受け継がれているものであることにもう一度注意して ください。 確率的に見て、それは信じられないほど自然なことです。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 804.72,
  "end": 822.44
 },
 {
  "input": "And actually I can show you one more pure math example where even the programmers should care about this one because it opens the doors for a much faster algorithm to compute all of these.",
  "translatedText": "そして実際に、もう 1 つ純 粋な数学の例をお見せします。 これは、これらすべてを計算するためのより高速なアルゴリズムへの扉 を開くものであるため、プログラマーでもこれに注意する必要があります。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 823.02,
  "end": 832.02
 },
 {
  "input": "To set up what I mean by faster here let me go back and pull up some python again and I'm going to create two different relatively big arrays.",
  "translatedText": "ここで言う「高速化」をセ ットアップするために、戻って Python を再度起動し、2 つの異なる比較的大きな 配列を作成します。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 832.62,
  "end": 839.78
 },
 {
  "input": "Each one will have a hundred thousand random elements in it and I'm going to assess the runtime of the convolve function from the numpy library.",
  "translatedText": "それぞれには 10 万個のランダムな要素が含まれており、nump y ライブラリから convolve 関数の実行時間を評価します。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 839.94,
  "end": 847.54
 },
 {
  "input": "And in this case it runs it for multiple different iterations, tries to find an average, and it looks like on this computer at least it averages at 4.87 seconds.",
  "translatedText": "この場合、複数の 異なる反復で実行し、平均値を見つけようとします。 このコンピュータでは、少な くとも平均値は 4 であるようです。87秒。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 848.18,
  "end": 856.52
 },
 {
  "input": "By contrast if I use a different function from the scipy library called fftconvolve which is the same thing just implemented differently that only takes 4.3 milliseconds on average, so three orders of magnitude improvement.",
  "translatedText": "対照的に、fftconvolve と いう scipy ライブラリの別の関数を使用すると、同じものを別の方法で実装しただけで、 必要な値は 4 だけです。平均 3 ミリ秒なので、3 桁も改善されます。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 856.96,
  "end": 870.16
 },
 {
  "input": "And again even though it flies under a different name it's giving the same output that the other convolve function does, it's just doing something to go about it in a cleverer way.",
  "translatedText": "また、別の名前で実行されているにもかかわらず、他の convolve 関数 が行うのと同じ出力を提供しており、より賢い方法で何かを行っているだけです。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 870.16,
  "end": 879.12
 },
 {
  "input": "Remember how with the probability example I said another way you could think about the convolution was to create this table of all the pairwise products and then add up those pairwise products along the diagonals.",
  "translatedText": "確率の例で、畳み込みについて考える別の方法として、すべてのペアごとの積のテーブルを作 成し、それらのペアごとの積を対角線に沿って合計するという方法があると述べたことを思い 出してください。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 882.2,
  "end": 892.68
 },
 {
  "input": "There's of course nothing specific to probability anytime you're convolving two different lists of numbers you can think about it this way.",
  "translatedText": "もちろん、このように考えることができる 2 つの異なる数値リストを 畳み込むときは、確率に特有のものは何もありません。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 893.66,
  "end": 899.04
 },
 {
  "input": "Create this kind of multiplication table with all pairwise products and then each sum along the diagonal corresponds to one of your final outputs.",
  "translatedText": "すべてのペアごとの積を使用し てこの種の乗算表を作成すると、対角線に沿った各合計が最終出力の 1 つに対 応します。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 899.04,
  "end": 906.46
 },
 {
  "input": "One context where this view is especially natural is when you multiply together two polynomials.",
  "translatedText": "この見方が特に自然である状況の 1 つは、2 つの多項式を乗算す る場合です。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 907.6,
  "end": 912.8
 },
 {
  "input": "For example let me take the little grid we already have and replace the top terms with 1, 2x, and 3x squared and replace the other terms with 4, 5x, and 6x squared.",
  "translatedText": "たとえば、すでにある小さなグリッドを使用して、最上位の項を 1、2x、および 3 x の 2 乗に置き換え、他の項を 4、5x、および 6x の 2 乗に置き換えてみましょう。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 913.3,
  "end": 923.6
 },
 {
  "input": "Now think about what it means when we're creating all of these different pairwise products between the two lists.",
  "translatedText": "ここで、2 つのリスト間でこれらの異なるペアごとの積をすべて作成することが何を意味するかを考えて みましょう。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 924.0,
  "end": 928.84
 },
 {
  "input": "What you're doing is essentially expanding out the full product of the two polynomials I have written down and then when you add up along the diagonal that corresponds to collecting all like terms which is pretty neat expanding a polynomial and collecting like terms is exactly the same process as a convolution.",
  "translatedText": "あなたがやっていることは、基本的に、私が書き留めた2つの多項式の全積を展 開することであり、次に、対角線に沿って合計すると、すべての類似項を収集することに相 当します。 これは非常にきれいですが、多項式を拡張して類似項を収集すると、まさに次の とおりです。 畳み込みと同じ処理です。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 929.04,
  "end": 946.44
 },
 {
  "input": "But this allows us to do something that's pretty cool because think about what we're saying here.",
  "translatedText": "しかし、これにより、非常に素晴らしいことができるようになります。 なぜなら 、ここで私たちが言っていることを考えてみてください。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 947.74,
  "end": 952.34
 },
 {
  "input": "We're saying if you take two different functions and you multiply them together which is a simple pointwise operation that's the same thing as if you had first extracted the coefficients from each one of those assuming they're polynomials and then taken a convolution of those two lists of coefficients.",
  "translatedText": "2 つの異なる関数を取得し、それらを乗算す る場合、これは単純な点単位の演算ですが、最初にそれらが多項式であると仮定し てそれぞれの関数から係数を抽出し、次にそれらの畳み込みを計算したのと同じ ことです。 係数の 2 つのリスト。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 952.34,
  "end": 968.84
 },
 {
  "input": "What makes that so interesting is that convolutions feel in principle a lot more complicated than simple multiplication and I don't just mean conceptually they're harder to think about I mean computationally it requires more steps to perform a convolution than it does to perform a pointwise product of two different lists.",
  "translatedText": "これが非常に興味深いのは、畳み込みは原理的 に単純な乗算よりもはるかに複雑に感じられることです。 概念的に考えるのが難しいという だけではなく、計算上、畳み込みを実行する方が、演算を実行するよりも多くのステップ が必要になるということです。 2 つの異なるリストの点ごとの積。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 969.62,
  "end": 985.76
 },
 {
  "input": "For example let's say I gave you two really big polynomials say each one with a hundred different coefficients then if the way you multiply them was to expand out this product you know filling in this entire 100 by 100 grid of pairwise products that would require you to perform 10,000 different products and then when you're collecting all the like terms along the diagonals that's another set of around 10,000 operations.",
  "translatedText": "たとえば、それぞ れが 100 の異なる係数を持つ 2 つの非常に大きな多項式を与えたとしましょう。 その場 合、それらを乗算する方法がこの積を拡張することである場合、このペア積の 100 x 1 00 グリッド全体を埋める必要があることがわかります。 10,000 の異なる製品を実 行し、対角線に沿って同様の用語をすべて収集すると、さらに約 10,000 の操作のセッ トになります。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 986.32,
  "end": 1009.86
 },
 {
  "input": "More generally in the lingo we'd say the algorithm is O of n squared meaning for two lists of size n the way that the number of operations scales is in proportion to the square of n.",
  "translatedText": "より一般的には、このアルゴリズムは、サイズ n の 2 つのリストの場合、演算数 が n の 2 乗に比例するという意味で、アルゴリズムは O of n の 2 乗であると言えま す。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1010.7,
  "end": 1021.14
 },
 {
  "input": "On the other hand if I think of two polynomials in terms of their outputs for example sampling their values at some handful of inputs then multiplying them only requires as many operations as the number of samples since again it's a pointwise operation and with polynomials you only need finitely many samples to be able to recover the coefficients.",
  "translatedText": "一方、出力の観点から 2 つの多項式について考える場合、たとえば、いく つかの入力で値をサンプリングし、それらを乗算する場合、これも点単位の演算で あり、多項式を使用する場合のみ必要となるため、サンプルの数と同じ数の演算 のみが必要です。 係数を回復できる有限の多くのサンプル。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1021.82,
  "end": 1040.54
 },
 {
  "input": "For example two outputs are enough to uniquely specify a linear polynomial.",
  "translatedText": "たとえば、線形多項式を一意に指定するには、2 つの出力で十分です。",
  "n_reviews": 0,
  "start": 1040.54,
  "end": 1045.06
 },
 {
  "input": "Three outputs would be enough to uniquely specify a quadratic polynomial.",
  "translatedText": "2 次多項式を一意に指定するには、出力が 3 つあれば十分です。",
  "n_reviews": 0,
  "start": 1045.66,
  "end": 1049.4
 },
 {
  "input": "And in general if you know n distinct outputs that's enough to uniquely specify a polynomial that has n different coefficients.",
  "translatedText": "一般に、n 個の異なる出力がわかっていれば、n 個の異なる係数を持つ多項式を一意に指定するには十分です。",
  "n_reviews": 0,
  "start": 1049.64,
  "end": 1056.74
 },
 {
  "input": "Or if you prefer we could phrase this in the language of systems of equations.",
  "translatedText": "あるいは、お好みであれば、これを方程式系の言語で表現することもできます。",
  "n_reviews": 0,
  "start": 1057.44,
  "end": 1060.72
 },
 {
  "input": "Imagine I tell you I have some polynomial but I don't tell you what the coefficients are, those are a mystery to you.",
  "translatedText": "多項式があると言うが、その係数が何であるかはあなたには謎なので、私は教えていないことを想像してください。",
  "n_reviews": 0,
  "start": 1061.2,
  "end": 1066.52
 },
 {
  "input": "In our example you might think of this as the product that we're trying to figure out.",
  "translatedText": "この例では、これが私たちが理解しようとしている製品であると考えることができます。",
  "n_reviews": 0,
  "start": 1066.7,
  "end": 1070.18
 },
 {
  "input": "Then suppose I say I'll just tell you what the outputs of this polynomial would be if you inputted various different inputs like 0, 1, 2, 3, on and on, and I give you enough so that you have as many equations as you have unknowns.",
  "translatedText": "次に、0、1、2、3 などのさまざまな入力を入力した場合に、この多項式の出力がどのようになるかを説明します。そして、できるだけ多くの方程式が得られるように十分な情報を与えるとします。あなたには未知の部分があります。",
  "n_reviews": 0,
  "start": 1070.18,
  "end": 1083.46
 },
 {
  "input": "It even happens to be a linear system of equations, so that's nice.",
  "translatedText": "それはたまたま線形連立方程式であることさえあるので、それは素晴らしいことです。",
  "n_reviews": 0,
  "start": 1084.14,
  "end": 1087.34
 },
 {
  "input": "And in principle at least, this should be enough to recover the coefficients.",
  "translatedText": "そして、少なくとも原理的には、係数を回復するにはこれで十分なはずです。",
  "n_reviews": 0,
  "start": 1087.78,
  "end": 1090.9
 },
 {
  "input": "So the rough algorithm outline then would be whenever you want to convolve two lists of numbers you treat them like they're coefficients of two polynomials.",
  "translatedText": "したがって、大まかなアルゴリズムの概要は、2 つの数値リストを畳み込みたいときは常に、それらを 2 つの多項式の係数であるかのように扱うことになります。",
  "n_reviews": 0,
  "start": 1091.74,
  "end": 1099.0
 },
 {
  "input": "You sample those polynomials at enough outputs, multiply those samples point-wise, and then solve the system to recover the coefficients as a sneaky backdoor way to find the convolution.",
  "translatedText": "十分な出力でこれらの多項式をサンプリングし、それらのサンプルを点単位で乗算し、畳み込みを見つけるための卑劣なバックドア方法としてシステムを解いて係数を回復します。",
  "n_reviews": 0,
  "start": 1099.42,
  "end": 1110.56
 },
 {
  "input": "And as I've stated it so far at least, some of you could rightfully complain \"Grant, that is an idiotic plan\".",
  "translatedText": "そして、少なくとも私がこれまで述べてきたように、皆さんの中には「グラント、それは愚かな計画だ」と当然のことながら文句を言う人もいるでしょう。",
  "n_reviews": 0,
  "start": 1111.42,
  "end": 1117.34
 },
 {
  "input": "Because for one thing just calculating all these samples for one of the polynomials we know already takes on the order of n squared operations, not to mention solving that system is certainly going to be computationally as difficult as just doing the convolution in the first place.",
  "translatedText": "なぜなら、すでにわかっている多項式の 1 つについてこれらすべてのサンプルを計算するだけでも、n 乗のオーダーの演算が必要になるためです。言うまでもなく、その系を解くことは、最初に畳み込みを行うのと同じくらい計算的に困難になることは確かです。",
  "n_reviews": 0,
  "start": 1117.58,
  "end": 1132.1
 },
 {
  "input": "So, like, sure we have this connection between multiplication and convolutions, but all of the complexity happens in translating from one viewpoint to the other.",
  "translatedText": "確かに、乗算と畳み込みの間には関連性がありますが、すべての複雑さは、ある視点から別の視点に変換する際に発生します。",
  "n_reviews": 0,
  "start": 1132.6,
  "end": 1140.48
 },
 {
  "input": "But there is a trick, and those of you who know about Fourier transforms and the FFT algorithm might see where this is going.",
  "translatedText": "しかし、トリックがあります。フーリエ変換と FFT アルゴリズムについて知っている人なら、これがどこに向かうのかわかるかもしれません。",
  "n_reviews": 0,
  "start": 1141.6,
  "end": 1147.74
 },
 {
  "input": "If you're unfamiliar with these topics, what I'm about to say might seem completely out of the blue.",
  "translatedText": "これらのトピックに慣れていない場合は、私がこれから言おうとしていることは全くの唐突に思えるかもしれません。",
  "n_reviews": 0,
  "start": 1147.74,
  "end": 1152.18
 },
 {
  "input": "Just know that there are certain paths you could have walked in math that make this more of an expected step.",
  "translatedText": "数学において、これをより期待されたステップにすることができる特定の道があることを知っておいてください。",
  "n_reviews": 0,
  "start": 1152.26,
  "end": 1156.86
 },
 {
  "input": "Basically the idea is that we have a freedom of choice here.",
  "translatedText": "基本的に、ここでは私たちには選択の自由があるという考えです。",
  "n_reviews": 0,
  "start": 1157.72,
  "end": 1160.36
 },
 {
  "input": "If instead of evaluating at some arbitrary set of inputs like 0, 1, 2, 3, on and on, you choose to evaluate on a very specially selected set of complex numbers.",
  "translatedText": "0、1、2、3 などの入力の任意のセットで評価する代わりに、非常に特別に選択された複素数のセットで評価することを選択した場合。",
  "n_reviews": 0,
  "start": 1160.54,
  "end": 1169.7
 },
 {
  "input": "Specifically the ones that sit evenly spaced on the unit circle, what are known as the roots of unity.",
  "translatedText": "具体的には、単位円上に等間隔に配置されているもの、いわゆる統一の根と呼ばれるものです。",
  "n_reviews": 0,
  "start": 1170.24,
  "end": 1174.84
 },
 {
  "input": "This gives us a friendlier system.",
  "translatedText": "これにより、よりフレンドリーなシステムが実現します。",
  "n_reviews": 0,
  "start": 1175.2,
  "end": 1176.88
 },
 {
  "input": "The basic idea is that by finding a number where taking its powers falls into this cycling pattern, it means that the system we generate is going to have a lot of redundancy in the different terms that you're calculating, and by being clever about how you leverage that redundancy, you can save yourself a lot of work.",
  "translatedText": "基本的な考え方は、べき乗がこの循環パターンに該当する数値を見つけることによって、計算するさまざまな条件において、生成されるシステムが多くの冗長性を持つことを意味し、その方法を賢くすることで、その冗長性を活用すれば、多くの作業を節約できます。",
  "n_reviews": 0,
  "start": 1178.36,
  "end": 1194.46
 },
 {
  "input": "This set of outputs that I've written has a special name, it's called the discrete Fourier transform of the coefficients.",
  "translatedText": "私が作成したこの出力セットには特別な名前があり、係数の離散フーリエ変換と呼ばれます。",
  "n_reviews": 0,
  "start": 1196.02,
  "end": 1202.28
 },
 {
  "input": "And if you want to learn more I actually did another lecture for that same Julia MIT class all about discrete Fourier transforms.",
  "translatedText": "さらに詳しく知りたい場合は、私は実際に同じ Julia MIT クラスで離散フーリエ変換に関する別の講義を行いました。",
  "n_reviews": 0,
  "start": 1202.5,
  "end": 1209.14
 },
 {
  "input": "And there's also a really excellent video on the channel reducible talking about the fast Fourier transform, which is an algorithm for computing these more quickly.",
  "translatedText": "また、チャンネル reducible には、これらをより迅速に計算するためのアルゴリズムである高速フーリエ変換について説明している非常に優れたビデオもあります。",
  "n_reviews": 0,
  "start": 1209.22,
  "end": 1217.12
 },
 {
  "input": "Also Veritasium recently did a really good video on FFT's, so you've got lots of options.",
  "translatedText": "また、Veritasium は最近、FFT に関する非常に優れたビデオを作成したため、選択肢がたくさんあります。",
  "n_reviews": 0,
  "start": 1217.48,
  "end": 1221.76
 },
 {
  "input": "And that fast algorithm really is the point for us.",
  "translatedText": "そして、その高速アルゴリズムが私たちにとって本当に重要なのです。",
  "n_reviews": 0,
  "start": 1222.26,
  "end": 1224.66
 },
 {
  "input": "Again because of all this redundancy there exists a method to go from the coefficients to all of these outputs, where instead of doing on the order of n squared operations, you do on the order of n times the log of n operations, which is much much better as you scale to big lists.",
  "translatedText": "繰り返しになりますが、このすべての冗長性により、係数からこれらの出力すべてに到達する方法が存在します。この方法では、n 乗の演算を行う代わりに、n の演算の対数を n 倍することになります。大きなリストにスケールアップするとさらに良くなります。",
  "n_reviews": 0,
  "start": 1225.12,
  "end": 1239.2
 },
 {
  "input": "And importantly this fft algorithm goes both ways.",
  "translatedText": "そして重要なのは、この FFT アルゴリズムは双方向に対応することです。",
  "n_reviews": 0,
  "start": 1239.66,
  "end": 1242.54
 },
 {
  "input": "It also lets you go from the outputs to the coefficients.",
  "translatedText": "また、出力から係数に進むこともできます。",
  "n_reviews": 0,
  "start": 1242.7,
  "end": 1245.48
 },
 {
  "input": "So bringing it all together, let's look back at our algorithm outline.",
  "translatedText": "それでは、すべてをまとめて、アルゴリズムの概要を振り返ってみましょう。",
  "n_reviews": 0,
  "start": 1246.22,
  "end": 1249.06
 },
 {
  "input": "Now we can say whenever you're given two long lists of numbers and you want to take their convolution, first compute the fast Fourier transform of each one of them, which in the back of your mind you can just think of as treating them like they're the coefficients of a polynomial and evaluating it at a very specially selected set of points.",
  "translatedText": "これで、数値の 2 つの長いリストが与えられ、それらの畳み込みを行いたいときはいつでも、まずそれらのそれぞれの高速フーリエ変換を計算することができます。頭の片隅では、それらを次のように扱うと考えることができます。それらは多項式の係数であり、非常に特別に選択された点のセットで評価されます。",
  "n_reviews": 0,
  "start": 1249.42,
  "end": 1266.38
 },
 {
  "input": "Then multiply together the two results that you just got point-wise, which is nice and fast, and then do an inverse fast Fourier transform, and what that gives you is the sneaky backdoor way to compute the convolution that we were looking for.",
  "translatedText": "次に、点ごとに得られた 2 つの結果を掛け合わせます (これは高速で優れています)。その後、逆高速フーリエ変換を実行します。これにより、私たちが探していた畳み込みを計算するための卑劣なバックドア方法が得られます。",
  "n_reviews": 0,
  "start": 1266.9,
  "end": 1278.9
 },
 {
  "input": "But this time it only involves O of n log n operations.",
  "translatedText": "ただし、今回は n log n 回中 O 回の操作のみが必要です。",
  "n_reviews": 0,
  "start": 1279.04,
  "end": 1282.24
 },
 {
  "input": "That's really cool to me!",
  "translatedText": "それは私にとって本当にクールです！",
  "n_reviews": 0,
  "start": 1283.14,
  "end": 1284.74
 },
 {
  "input": "This very specific context where convolutions show up, multiplying two polynomials, opens the doors for an algorithm that's relevant everywhere else where convolutions might come up.",
  "translatedText": "2 つの多項式を乗算するという畳み込みが現れるこの非常に特殊な状況は、畳み込みが発生する可能性のある他のあらゆる場所に関連するアルゴリズムへの扉を開きます。",
  "n_reviews": 0,
  "start": 1285.12,
  "end": 1294.1
 },
 {
  "input": "If you want to add probability distributions, do some large image processing, whatever it might be.",
  "translatedText": "確率分布を追加したい場合は、それが何であれ、大規模な画像処理を実行します。",
  "n_reviews": 0,
  "start": 1294.18,
  "end": 1299.0
 },
 {
  "input": "And I just think that's such a good example of why you should be excited when you see some operation or concept in math show up in a lot of seemingly unrelated areas.",
  "translatedText": "これは、一見無関係に見える多くの分野で数学の演算や概念が登場するのを見たときになぜ興奮するのかを示す好例だと思います。",
  "n_reviews": 0,
  "start": 1299.22,
  "end": 1307.48
 },
 {
  "input": "If you want a little homework here's something that's fun to think about.",
  "translatedText": "ちょっとした宿題が必要な場合は、ここで考えるのが楽しいものがあります。",
  "n_reviews": 0,
  "start": 1308.48,
  "end": 1311.5
 },
 {
  "input": "Explain why when you multiply two different numbers, just ordinary multiplication the way we all learn in elementary school, what you're doing is basically a convolution between the digits of those numbers.",
  "translatedText": "2 つの異なる数値を掛けるとき、つまり小学校で習う普通の掛け算では、基本的にこれらの数値の桁間の畳み込みが行われることになる理由を説明してください。",
  "n_reviews": 0,
  "start": 1311.72,
  "end": 1321.98
 },
 {
  "input": "There are some added steps with carries and the like, but the core step is a convolution.",
  "translatedText": "キャリーなどの追加ステップがいくつかありますが、中心となるステップは畳み込みです。",
  "n_reviews": 0,
  "start": 1322.5,
  "end": 1326.46
 },
 {
  "input": "In light of the existence of a fast algorithm, what that means is if you have two very large integers, then there exists a way to find their product that's faster than the method we learn in elementary school.",
  "translatedText": "高速なアルゴリズムの存在を考慮すると、これが意味するのは、2 つの非常に大きな整数がある場合、小学校で習う方法よりも速くその積を求める方法が存在するということです。",
  "n_reviews": 0,
  "start": 1327.28,
  "end": 1337.88
 },
 {
  "input": "That instead of requiring O of n squared operations only requires O of n log n, which doesn't even feel like it should be possible.",
  "translatedText": "これは、O of n の 2 乗演算を必要とするのではなく、O of n log n だけを必要とするものであり、それが可能であるとは思えません。",
  "n_reviews": 0,
  "start": 1338.14,
  "end": 1344.92
 },
 {
  "input": "The catch is that before this is actually useful in practice, your numbers would have to be absolutely monstrous.",
  "translatedText": "問題は、これが実際に役立つ前に、数値がまったく巨大になる必要があるということです。",
  "n_reviews": 0,
  "start": 1345.38,
  "end": 1350.84
 },
 {
  "input": "But still, it's cool that such an algorithm exists.",
  "translatedText": "しかし、それでも、このようなアルゴリズムが存在することは素晴らしいことです。",
  "n_reviews": 0,
  "start": 1351.22,
  "end": 1353.86
 },
 {
  "input": "Next up we'll turn our attention to the continuous case with a special focus on probability distributions.",
  "translatedText": "次に、確率分布に特に焦点を当てた連続事例に注目していきます。",
  "n_reviews": 0,
  "start": 1355.16,
  "end": 1359.64
 }
]