1
00:00:00,000 --> 00:00:03,117
A Wurdle című játék az elmúlt egy-két hónapban eléggé elterjedt, 

2
00:00:03,117 --> 00:00:06,569
és mivel sosem hagyok ki egy matematikaórai lehetőséget, úgy gondoltam, 

3
00:00:06,569 --> 00:00:10,310
hogy ez a játék nagyon jó központi példát szolgáltat az információelméletről, 

4
00:00:10,310 --> 00:00:12,660
és különösen az entrópia nevű témáról szóló órán.

5
00:00:13,920 --> 00:00:16,673
Tudod, mint sok embert, engem is beszippantott a rejtvény, 

6
00:00:16,673 --> 00:00:18,960
és mint sok programozót, engem is beszippantott, 

7
00:00:18,960 --> 00:00:22,740
hogy olyan algoritmust írjak, amely a lehető legoptimálisabban játssza a játékot.

8
00:00:23,180 --> 00:00:25,300
Arra gondoltam, hogy itt most átbeszélném veletek, 

9
00:00:25,300 --> 00:00:27,920
hogy hogyan dolgoztam ezen, és elmagyaráznám a matematikát is, 

10
00:00:27,920 --> 00:00:31,080
ami ebbe belekerült, mivel az egész algoritmus az entrópia gondolatára épül.

11
00:00:38,700 --> 00:00:41,640
Először is, ha még nem hallottál róla, mi az a Wurdle?

12
00:00:42,040 --> 00:00:45,537
És hogy két legyet üssünk egy csapásra, miközben a játékszabályokon végigmegyünk, 

13
00:00:45,537 --> 00:00:49,077
hadd nézzem meg, hogy hova is megyünk ezzel, ami egy kis algoritmus kifejlesztése, 

14
00:00:49,077 --> 00:00:51,040
amely alapvetően a játékot játssza helyettünk.

15
00:00:51,360 --> 00:00:53,551
Bár a mai Wurdle-t még nem csináltam meg, ez február 4-e, 

16
00:00:53,551 --> 00:00:55,100
és majd meglátjuk, hogyan teljesít a bot.

17
00:00:55,480 --> 00:00:58,243
A Wurdle célja, hogy kitalálj egy rejtélyes ötbetűs szót, 

18
00:00:58,243 --> 00:01:00,340
és hat különböző esélyt kapsz a kitalálásra.

19
00:01:00,840 --> 00:01:04,379
A Wurdle botom például azt javasolja, hogy a kitaláló daruval kezdjem.

20
00:01:05,180 --> 00:01:08,172
Minden egyes alkalommal, amikor kitalálsz valamit, információt kapsz arról, 

21
00:01:08,172 --> 00:01:10,220
hogy a tipped mennyire van közel a valódi válaszhoz.

22
00:01:10,920 --> 00:01:14,100
Itt a szürke doboz azt mondja, hogy nincs C a tényleges válaszban.

23
00:01:14,520 --> 00:01:17,840
A sárga doboz azt mondja, hogy van egy R, de nincs abban a pozícióban.

24
00:01:18,240 --> 00:01:22,240
A zöld doboz azt mondja, hogy a titkos szónak van egy A betűje, és a harmadik helyen áll.

25
00:01:22,720 --> 00:01:24,580
És akkor nincs N és nincs E.

26
00:01:25,200 --> 00:01:27,340
Szóval hadd menjek be és mondjam el ezt az információt a Wurdle botnak.

27
00:01:27,340 --> 00:01:30,320
Daruval kezdtük, szürke, sárga, zöld, szürke, szürke, szürke.

28
00:01:31,420 --> 00:01:34,940
Ne aggódj az összes adat miatt, amit most mutat, majd időben elmagyarázom.

29
00:01:35,460 --> 00:01:38,820
De a második választásunk első számú javaslata a shtick.

30
00:01:39,560 --> 00:01:42,503
És a találgatásodnak egy tényleges ötbetűs szónak kell lennie, 

31
00:01:42,503 --> 00:01:45,400
de mint látni fogod, elég liberális, hogy mit enged kitalálni.

32
00:01:46,200 --> 00:01:47,440
Ebben az esetben megpróbáljuk a shtick-et.

33
00:01:48,780 --> 00:01:50,180
És rendben, a dolgok elég jól néznek ki.

34
00:01:50,260 --> 00:01:53,980
Eltaláltuk az S-t és a H-t, tehát ismerjük az első három betűt, tudjuk, hogy van egy R.

35
00:01:53,980 --> 00:01:58,700
És így ez olyan lesz, mint S-H-A valami R, vagy S-H-A R valami.

36
00:01:59,620 --> 00:02:03,072
És úgy tűnik, hogy a Wurdle bot tudja, hogy csak két lehetőség van, 

37
00:02:03,072 --> 00:02:04,240
vagy szilánk vagy éles.

38
00:02:05,100 --> 00:02:07,610
Ez egyfajta feldobás közöttük ezen a ponton, így azt hiszem, 

39
00:02:07,610 --> 00:02:10,080
valószínűleg csak azért, mert ábécé sorrendben megy a shard.

40
00:02:11,220 --> 00:02:13,780
Ami hurrá, ez a tényleges válasz, tehát háromban kaptuk meg.

41
00:02:14,600 --> 00:02:16,948
Ha kíváncsi vagy, hogy ez jó-e, akkor úgy hallottam, 

42
00:02:16,948 --> 00:02:20,360
hogy egy ember úgy fogalmazott, hogy Wurdle-nál négy a par és három a birdie.

43
00:02:20,680 --> 00:02:22,480
Ami szerintem elég találó hasonlat.

44
00:02:22,480 --> 00:02:27,020
Ahhoz, hogy négyet kapj, következetesen kell játszanod, de ez egyáltalán nem őrültség.

45
00:02:27,180 --> 00:02:29,920
De amikor háromban kapod meg, az egyszerűen nagyszerű érzés.

46
00:02:30,880 --> 00:02:33,082
Szóval, ha benne vagy, akkor azt szeretném, hogy beszéljünk a 

47
00:02:33,082 --> 00:02:35,960
gondolatmenetemről a kezdetektől fogva, hogy hogyan közelítem meg a Wurdle botot.

48
00:02:36,480 --> 00:02:39,440
És mint mondtam, ez valójában csak egy ürügy egy információelméleti leckére.

49
00:02:39,740 --> 00:02:42,820
A fő cél az, hogy elmagyarázzuk, mi az információ és mi az entrópia.

50
00:02:48,220 --> 00:02:51,245
Az első gondolatom az volt, hogy megnézzem a különböző 

51
00:02:51,245 --> 00:02:53,720
betűk relatív gyakoriságát az angol nyelvben.

52
00:02:54,380 --> 00:02:57,503
Ezért arra gondoltam, hogy van-e olyan nyitó tipp vagy tipppár, 

53
00:02:57,503 --> 00:02:59,260
ami sok ilyen gyakori betűt eltalál?

54
00:02:59,960 --> 00:03:03,000
És az egyik, amit nagyon szerettem, az volt, hogy mást csináltam, amit a körmök követtek.

55
00:03:03,760 --> 00:03:06,866
Az a gondolat, hogy ha eltalálsz egy betűt, tudod, kapsz egy zöldet vagy egy sárgát, 

56
00:03:06,866 --> 00:03:08,840
az mindig jó érzés, úgy érzed, hogy információt kapsz.

57
00:03:09,340 --> 00:03:11,465
De ezekben az esetekben, még ha nem is találsz, 

58
00:03:11,465 --> 00:03:14,300
és mindig szürke betűket kapsz, ez akkor is sok információt ad, 

59
00:03:14,300 --> 00:03:17,400
hiszen elég ritka az olyan szó, amelyben nem szerepelnek ezek a betűk.

60
00:03:18,140 --> 00:03:20,746
De még ez sem tűnik szuper szisztematikusnak, mert 

61
00:03:20,746 --> 00:03:23,200
például nem veszi figyelembe a betűk sorrendjét.

62
00:03:23,560 --> 00:03:25,300
Miért írnék körmöket, ha írhatnék csigát is?

63
00:03:26,080 --> 00:03:27,500
Jobb, ha az S betű a végén van?

64
00:03:27,820 --> 00:03:28,680
Nem vagyok benne biztos.

65
00:03:29,240 --> 00:03:32,726
Egy barátom azt mondta, hogy a fáradtság szóval szereti nyitni, 

66
00:03:32,726 --> 00:03:36,540
ami meglepett, mert van benne néhány szokatlan betű, mint a W és az Y.

67
00:03:37,120 --> 00:03:39,000
De ki tudja, lehet, hogy ez egy jobb nyitány.

68
00:03:39,320 --> 00:03:42,092
Van valamilyen mennyiségi pontszám, amelyet megadhatunk 

69
00:03:42,092 --> 00:03:44,320
a lehetséges tippek minőségének megítélésére?

70
00:03:45,340 --> 00:03:48,416
Most, hogy felkészüljünk arra, hogy hogyan fogjuk rangsorolni a lehetséges tippeket, 

71
00:03:48,416 --> 00:03:51,420
menjünk vissza, és tisztázzuk egy kicsit, hogy pontosan hogyan is épül fel a játék.

72
00:03:51,420 --> 00:03:54,085
Tehát van egy lista a szavakról, amelyeket meg lehet adni, 

73
00:03:54,085 --> 00:03:57,880
és amelyek érvényes találgatásnak számítanak, és amely körülbelül 13 000 szó hosszú.

74
00:03:58,320 --> 00:04:01,577
De ha megnézed, egy csomó igazán szokatlan dolog van benne, olyanok, 

75
00:04:01,577 --> 00:04:05,590
mint a fej vagy Ali és az ARG, olyan szavak, amelyek családi vitákat váltanak ki egy 

76
00:04:05,590 --> 00:04:06,440
Scrabble-játékban.

77
00:04:06,960 --> 00:04:10,540
De a játék hangulata az, hogy a válasz mindig egy tisztességesen gyakori szó lesz.

78
00:04:10,960 --> 00:04:14,065
És valójában van egy másik lista, amely körülbelül 2300 szót tartalmaz, 

79
00:04:14,065 --> 00:04:15,360
amelyek a lehetséges válaszok.

80
00:04:15,940 --> 00:04:18,274
És ez egy ember által összeállított lista, azt hiszem, 

81
00:04:18,274 --> 00:04:21,160
kifejezetten a játékkészítők barátnője által, ami elég szórakoztató.

82
00:04:21,820 --> 00:04:25,173
De amit szeretnék tenni, a kihívásunk a projektben az, hogy megnézzük, 

83
00:04:25,173 --> 00:04:27,440
tudunk-e olyan wordle-t megoldó programot írni, 

84
00:04:27,440 --> 00:04:30,180
amely nem foglalja magában a listáról való korábbi tudást.

85
00:04:30,720 --> 00:04:34,640
Először is, rengeteg olyan gyakori ötbetűs szó van, amelyet nem találsz meg ezen a listán.

86
00:04:34,940 --> 00:04:37,930
Szóval jobb lenne egy olyan programot írni, ami egy kicsit rugalmasabb, 

87
00:04:37,930 --> 00:04:41,460
és bárki ellen játszana wordle-t, nem csak ami történetesen a hivatalos honlapon van.

88
00:04:41,920 --> 00:04:47,000
És azért tudjuk, hogy mi ez a lehetséges válaszok listája, mert látható a forráskódban.

89
00:04:47,000 --> 00:04:51,267
De a forráskódban látható, hogy a válaszok napról-napra meghatározott 

90
00:04:51,267 --> 00:04:55,840
sorrendben jelennek meg, hogy mindig megnézheted, mi lesz a holnapi válasz.

91
00:04:56,420 --> 00:04:58,880
Tehát nyilvánvaló, hogy a lista használata bizonyos értelemben csalásnak minősül.

92
00:04:59,100 --> 00:05:02,012
Érdekesebb rejtvényt és gazdagabb információelméleti leckét adna, 

93
00:05:02,012 --> 00:05:04,439
ha ehelyett olyan univerzálisabb adatokat használnánk, 

94
00:05:04,439 --> 00:05:07,704
mint például a relatív szófrekvenciák, hogy megragadjuk ezt az intuíciót, 

95
00:05:07,704 --> 00:05:10,440
miszerint a gyakrabban használt szavakat előnyben részesítjük.

96
00:05:11,600 --> 00:05:15,900
Tehát ebből a 13 000 lehetőségből hogyan válasszuk ki a nyitó tippet?

97
00:05:16,400 --> 00:05:19,780
Ha például a barátom fáradtságot javasol, hogyan elemezzük annak minőségét?

98
00:05:20,520 --> 00:05:23,580
Nos, azért mondta, hogy szereti ezt a valószínűtlen W-t, 

99
00:05:23,580 --> 00:05:27,340
mert szereti, hogy mennyire jó érzés, ha sikerül eltalálnod azt a W-t.

100
00:05:27,920 --> 00:05:31,267
Ha például az első felfedezett minta valami ilyesmi, akkor kiderül, 

101
00:05:31,267 --> 00:05:35,600
hogy ebben a hatalmas lexikonban csak 58 olyan szó van, amely megfelel ennek a mintának.

102
00:05:36,060 --> 00:05:38,400
Ez tehát hatalmas csökkenés a 13 000-hez képest.

103
00:05:38,780 --> 00:05:43,020
De ennek persze az a másik oldala, hogy nagyon ritka az ilyen minta.

104
00:05:43,020 --> 00:05:46,860
Pontosabban, ha minden szó egyforma valószínűséggel lenne a válasz, 

105
00:05:46,860 --> 00:05:51,040
akkor a minta eltalálásának valószínűsége 58 osztva körülbelül 13 000-rel.

106
00:05:51,580 --> 00:05:53,600
Természetesen nem egyformán valószínű, hogy ezek a válaszok.

107
00:05:53,720 --> 00:05:56,220
Ezek többsége nagyon homályos, sőt megkérdőjelezhető szavak.

108
00:05:56,600 --> 00:06:00,048
De legalábbis az első körben feltételezzük, hogy mindegyik egyformán valószínű, 

109
00:06:00,048 --> 00:06:01,600
és ezt később finomítsuk egy kicsit.

110
00:06:02,020 --> 00:06:06,048
A lényeg az, hogy a sok információval rendelkező minta természeténél fogva nem valószínű, 

111
00:06:06,048 --> 00:06:06,720
hogy előfordul.

112
00:06:07,280 --> 00:06:10,800
Valójában azt jelenti, hogy informatív, hogy valószínűtlen.

113
00:06:11,720 --> 00:06:16,349
Sokkal valószínűbb, hogy valami ilyesmit látnánk ezzel a nyitással, 

114
00:06:16,349 --> 00:06:18,120
ahol persze nincs benne W.

115
00:06:18,240 --> 00:06:21,400
Talán van egy E, és talán nincs A, nincs R, nincs Y.

116
00:06:22,080 --> 00:06:24,560
Ebben az esetben 1400 lehetséges találat van.

117
00:06:25,080 --> 00:06:27,993
Ha mindegyik egyformán valószínű lenne, akkor körülbelül 

118
00:06:27,993 --> 00:06:30,600
11%-os valószínűséggel ez a mintázat lenne látható.

119
00:06:30,900 --> 00:06:33,340
Tehát a legvalószínűbb eredmények egyben a legkevésbé informatívak is.

120
00:06:34,240 --> 00:06:37,690
Hogy átfogó képet kapjunk, hadd mutassam meg a valószínűségek 

121
00:06:37,690 --> 00:06:41,140
teljes eloszlását az összes különböző mintára, amit láthatunk.

122
00:06:41,740 --> 00:06:45,827
Tehát minden egyes sáv, amelyet nézel, megfelel a színek egy lehetséges mintázatának, 

123
00:06:45,827 --> 00:06:48,679
amely feltárulhat, és amelyből 3-tól az 5. lehetőségig van, 

124
00:06:48,679 --> 00:06:52,340
és balról jobbra vannak elrendezve, a leggyakoribbtól a legkevésbé gyakoriig.

125
00:06:52,920 --> 00:06:56,000
Tehát a leggyakoribb lehetőség itt az, hogy minden szürke lesz.

126
00:06:56,100 --> 00:06:58,120
Ez az esetek körülbelül 14%-ában fordul elő.

127
00:06:58,580 --> 00:07:03,097
És azt reméljük, hogy amikor tippelünk, akkor valahol a hosszú farokban kötünk ki, 

128
00:07:03,097 --> 00:07:07,561
például itt, ahol csak 18 lehetőség van arra, hogy mi felel meg ennek a mintának, 

129
00:07:07,561 --> 00:07:09,140
ami nyilvánvalóan így néz ki.

130
00:07:09,920 --> 00:07:13,800
Vagy ha egy kicsit balra merészkedünk, tudod, talán egészen idáig megyünk.

131
00:07:14,940 --> 00:07:16,180
Oké, itt egy jó kis rejtvény.

132
00:07:16,540 --> 00:07:19,816
Melyik az a három szó az angol nyelvben, amely W-vel kezdődik, 

133
00:07:19,816 --> 00:07:22,000
Y-nal végződik és valahol van benne egy R?

134
00:07:22,480 --> 00:07:26,800
Kiderült, hogy a válaszok, lássuk csak, szókimondó, kukacos és kukacos.

135
00:07:27,500 --> 00:07:30,512
Tehát annak megítéléséhez, hogy mennyire jó ez a szó összességében, 

136
00:07:30,512 --> 00:07:34,145
szükségünk van valamilyen mérőszámra, amely a várható információmennyiséget méri, 

137
00:07:34,145 --> 00:07:35,740
amelyet ebből az eloszlásból kapunk.

138
00:07:35,740 --> 00:07:38,518
Ha végigmegyünk minden egyes mintán, és megszorozzuk az 

139
00:07:38,518 --> 00:07:41,147
előfordulási valószínűségét valamivel, ami azt méri, 

140
00:07:41,147 --> 00:07:44,720
hogy mennyire informatív, akkor talán kaphatunk egy objektív pontszámot.

141
00:07:45,960 --> 00:07:49,840
Most az első megérzésed, hogy mi legyen ez a valami, lehet, hogy a mérkőzések száma.

142
00:07:50,160 --> 00:07:52,400
Alacsonyabb átlagos mérkőzésszámot szeretne.

143
00:07:52,800 --> 00:07:55,904
Ehelyett azonban egy univerzálisabb mérőszámot szeretnék használni, 

144
00:07:55,904 --> 00:07:59,329
amelyet gyakran tulajdonítunk az információnak, és amely rugalmasabb lesz, 

145
00:07:59,329 --> 00:08:02,753
ha egyszer mind a 13 000 szóhoz különböző valószínűséggel rendeljük hozzá, 

146
00:08:02,753 --> 00:08:04,260
hogy valóban a válasz-e vagy sem.

147
00:08:10,320 --> 00:08:14,616
Az információ szabványos egysége a bit, amelynek egy kicsit furcsa képlete van, 

148
00:08:14,616 --> 00:08:16,980
de igazán intuitív, ha csak példákat nézünk.

149
00:08:17,780 --> 00:08:21,078
Ha van egy olyan megfigyelésünk, amely a lehetőségek terét a felére csökkenti, 

150
00:08:21,078 --> 00:08:23,500
akkor azt mondjuk, hogy egy bit információval rendelkezik.

151
00:08:24,180 --> 00:08:27,201
A példánkban a lehetőségek tere az összes lehetséges szó, és kiderül, 

152
00:08:27,201 --> 00:08:30,223
hogy az ötbetűs szavak körülbelül felében van egy S, kicsit kevesebb, 

153
00:08:30,223 --> 00:08:31,260
de körülbelül a felében.

154
00:08:31,780 --> 00:08:34,320
Ez a megfigyelés tehát egy kis információt adna.

155
00:08:34,880 --> 00:08:38,500
Ha ehelyett egy új tény négyszeresére csökkenti a lehetőségek számát, 

156
00:08:38,500 --> 00:08:41,500
akkor azt mondjuk, hogy két bit információval rendelkezik.

157
00:08:41,980 --> 00:08:44,460
Kiderült például, hogy ezeknek a szavaknak körülbelül egynegyedében van egy T betű.

158
00:08:45,020 --> 00:08:48,210
Ha a megfigyelés nyolcszorosára csökkenti ezt a helyet, akkor azt mondjuk, 

159
00:08:48,210 --> 00:08:50,720
hogy ez három bit információ, és így tovább, és így tovább.

160
00:08:50,900 --> 00:08:53,880
Négy bitből tizenhatod, öt bitből harminc másodperc lesz.

161
00:08:54,960 --> 00:08:58,418
Tehát most érdemes egy pillanatra megállni és megkérdezni magunktól, 

162
00:08:58,418 --> 00:09:02,278
hogy mi a bitek számának információs képlete az előfordulás valószínűségének 

163
00:09:02,278 --> 00:09:02,980
szempontjából?

164
00:09:03,920 --> 00:09:07,569
Nos, itt alapvetően azt mondjuk, hogy ha a bitek számának felét vesszük, 

165
00:09:07,569 --> 00:09:11,270
akkor az ugyanaz, mint a valószínűség, ami ugyanaz, mintha azt mondanánk, 

166
00:09:11,270 --> 00:09:14,670
hogy a bitek számának kétszeres hatványa egy a valószínűség felett, 

167
00:09:14,670 --> 00:09:18,920
ami azt jelenti, hogy az információ az egynek a logaritmusa osztva a valószínűséggel.

168
00:09:19,620 --> 00:09:21,801
És néha ezt még egy átrendeződéssel is láthatjuk, 

169
00:09:21,801 --> 00:09:24,900
ahol az információ a valószínűség negatív logaritmusának kettes bázisa.

170
00:09:25,660 --> 00:09:28,691
Így kifejezve kicsit furcsának tűnhet a beavatatlanok számára, 

171
00:09:28,691 --> 00:09:32,107
de valójában ez csak az a nagyon intuitív gondolat, hogy megkérdezzük, 

172
00:09:32,107 --> 00:09:34,080
hányszor vágtuk felére a lehetőségeinket.

173
00:09:35,180 --> 00:09:38,006
Ha most azon tűnődsz, tudod, azt hittem, hogy csak egy vicces szójátékot játszunk, 

174
00:09:38,006 --> 00:09:39,300
miért kerülnek a képbe a logaritmusok?

175
00:09:39,780 --> 00:09:43,000
Az egyik ok, amiért ez egy szebb egység, hogy sokkal könnyebb nagyon 

176
00:09:43,000 --> 00:09:46,079
valószínűtlen eseményekről beszélni, sokkal könnyebb azt mondani, 

177
00:09:46,079 --> 00:09:49,113
hogy egy megfigyelés 20 bit információval rendelkezik, mint azt, 

178
00:09:49,113 --> 00:09:52,940
hogy az ilyen és ehhez hasonló események bekövetkezésének valószínűsége 0,0000095.

179
00:09:53,300 --> 00:09:57,185
De egy sokkal lényegesebb ok, amiért ez a logaritmikus kifejezés nagyon hasznos 

180
00:09:57,185 --> 00:10:01,460
kiegészítésnek bizonyult a valószínűségelmélethez, az az információ összeadásának módja.

181
00:10:02,060 --> 00:10:04,747
Például, ha egy megfigyelés két bit információt ad, 

182
00:10:04,747 --> 00:10:08,262
ami négyszeresére csökkenti a helyet, majd egy második megfigyelés, 

183
00:10:08,262 --> 00:10:12,294
például a Wordle-ben a második találgatásod további három bit információt ad, 

184
00:10:12,294 --> 00:10:16,740
ami még nyolcszorosára csökkenti a helyet, akkor a kettő együtt öt bit információt ad.

185
00:10:17,160 --> 00:10:21,020
Ahogy a valószínűségek szeretnek szorozni, úgy az információ is szeret összeadni.

186
00:10:21,960 --> 00:10:24,774
Tehát amint olyan dolgok birodalmába kerülünk, mint például egy várható érték, 

187
00:10:24,774 --> 00:10:27,980
ahol egy csomó számot adunk össze, a naplók sokkal könnyebben kezelhetővé teszik a dolgot.

188
00:10:28,480 --> 00:10:32,127
Menjünk vissza a fáradt eloszlásunkhoz, és adjunk hozzá egy másik kis nyomkövetőt, 

189
00:10:32,127 --> 00:10:34,940
amely megmutatja, hogy mennyi információ van az egyes mintákhoz.

190
00:10:35,580 --> 00:10:37,647
A legfontosabb dolog, amit szeretném, ha észrevennétek, 

191
00:10:37,647 --> 00:10:40,712
hogy minél nagyobb a valószínűség, ahogy eljutunk ezekhez a valószínűbb mintákhoz, 

192
00:10:40,712 --> 00:10:42,780
annál kisebb az információ, annál kevesebb bitet kaptok.

193
00:10:43,500 --> 00:10:48,020
Ennek a találgatásnak a minőségét úgy mérjük, hogy az információ várható értékét vesszük.

194
00:10:48,420 --> 00:10:51,562
Amikor végigmegyünk minden egyes mintán, megmondjuk, hogy mennyire valószínű, 

195
00:10:51,562 --> 00:10:54,060
majd ezt megszorozzuk azzal, hogy hány bit információt kapunk.

196
00:10:54,710 --> 00:10:58,120
A weary példájában ez 4,9 bit.

197
00:10:58,560 --> 00:11:02,172
Tehát átlagosan az ebből a nyitó tippből származó információ olyan jó, 

198
00:11:02,172 --> 00:11:05,480
mintha a lehetőségek körét körülbelül ötször felére csökkentenéd.

199
00:11:05,960 --> 00:11:08,827
Ezzel szemben a magasabb várható információértékkel 

200
00:11:08,827 --> 00:11:11,640
rendelkező találgatásra példa lehet például a pala.

201
00:11:13,120 --> 00:11:15,620
Ebben az esetben észreveheti, hogy az eloszlás sokkal laposabbnak tűnik.

202
00:11:15,940 --> 00:11:20,600
Különösen az összes szürke szín legvalószínűbb előfordulásának csak 

203
00:11:20,600 --> 00:11:25,260
körülbelül 6% az esélye, így legalább 3,9 bitnyi információt kapunk.

204
00:11:25,920 --> 00:11:28,560
De ez a minimum, ennél jellemzőbb, hogy ennél jobbat kapunk.

205
00:11:29,100 --> 00:11:31,577
És kiderül, hogy ha összeszámoljuk a számokat, 

206
00:11:31,577 --> 00:11:35,900
és összeadjuk az összes releváns kifejezést, az átlagos információ körülbelül 5,8.

207
00:11:37,360 --> 00:11:40,450
Tehát a fáradtakkal ellentétben a lehetőségek tere 

208
00:11:40,450 --> 00:11:43,540
átlagosan fele akkora lesz az első találgatás után.

209
00:11:44,420 --> 00:11:46,714
Az információmennyiség várható értékének elnevezéséhez 

210
00:11:46,714 --> 00:11:48,300
valójában egy vicces történet fűződik.

211
00:11:48,300 --> 00:11:50,794
Az információelméletet Claude Shannon dolgozta ki, 

212
00:11:50,794 --> 00:11:53,777
aki az 1940-es években a Bell Labs-nél dolgozott, de néhány, 

213
00:11:53,777 --> 00:11:57,054
még publikálásra váró ötletéről John von Neumann-nal beszélgetett, 

214
00:11:57,054 --> 00:12:00,087
aki a kor szellemi óriása volt, aki a matematika és a fizika, 

215
00:12:00,087 --> 00:12:03,560
valamint az informatika kezdeteinek kezdeteinél nagyon kiemelkedő volt.

216
00:12:04,100 --> 00:12:06,943
És amikor megemlítette, hogy nincs igazán jó neve erre az 

217
00:12:06,943 --> 00:12:10,424
információmennyiség várható értékére, von Neumann állítólag azt mondta 

218
00:12:10,424 --> 00:12:14,200
- így szól a történet -, nos, akkor nevezzük entrópiának, mégpedig két okból.

219
00:12:14,540 --> 00:12:18,847
Először is, a bizonytalansági függvényedet már használták a statisztikai mechanikában 

220
00:12:18,847 --> 00:12:23,204
ezen a néven, tehát már van neve, másodszor pedig, ami még fontosabb, senki sem tudja, 

221
00:12:23,204 --> 00:12:26,760
mi is az entrópia valójában, így egy vitában mindig te leszel előnyben.

222
00:12:27,700 --> 00:12:29,662
Ha tehát a név egy kicsit titokzatosnak tűnik, 

223
00:12:29,662 --> 00:12:32,460
és ha hinni lehet ennek a történetnek, akkor ez egyfajta szándékos.

224
00:12:33,280 --> 00:12:37,405
Ha a fizikából a termodinamika második törvényével való kapcsolatára kíváncsiak, 

225
00:12:37,405 --> 00:12:40,971
akkor határozottan van kapcsolat, de eredetileg Shannon csak a tiszta 

226
00:12:40,971 --> 00:12:43,875
valószínűségelmélettel foglalkozott, és a mi céljainkra, 

227
00:12:43,875 --> 00:12:46,269
amikor az entrópia szót használom, azt akarom, 

228
00:12:46,269 --> 00:12:49,580
hogy egy adott találgatás várható információértékére gondoljanak.

229
00:12:50,700 --> 00:12:53,780
Az entrópiára úgy is gondolhatunk, mint két dolog egyidejű mérésére.

230
00:12:54,240 --> 00:12:56,780
Az első az, hogy mennyire lapos az eloszlás?

231
00:12:57,320 --> 00:13:01,120
Minél közelebb van egy eloszlás az egyenleteshez, annál nagyobb lesz az entrópia.

232
00:13:01,580 --> 00:13:06,752
A mi esetünkben, ahol összesen 3-5 minta van, egy egyenletes eloszlás esetén 

233
00:13:06,752 --> 00:13:11,321
bármelyik megfigyelése a 3-5 logaritmusának 2-es bázisát jelentené, 

234
00:13:11,321 --> 00:13:17,300
ami történetesen 7,92, tehát ez az abszolút maximum, amit az entrópia esetében kaphatunk.

235
00:13:17,840 --> 00:13:22,080
De az entrópia egyfajta mérőszáma annak is, hogy egyáltalán hány lehetőség van.

236
00:13:22,320 --> 00:13:26,709
Ha például van egy olyan szó, amelyben csak 16 lehetséges minta van, 

237
00:13:26,709 --> 00:13:32,180
és mindegyik egyformán valószínű, akkor ez az entrópia, ez a várható információ 4 bit.

238
00:13:32,580 --> 00:13:36,530
De ha van egy másik szó, ahol 64 lehetséges minta jöhet létre, 

239
00:13:36,530 --> 00:13:40,480
és mindegyik egyformán valószínű, akkor az entrópia 6 bit lesz.

240
00:13:41,500 --> 00:13:45,535
Ha tehát a természetben olyan eloszlást látunk, amelynek entrópiája 6 bit, 

241
00:13:45,535 --> 00:13:50,056
az olyan, mintha azt mondaná, hogy ugyanannyi variáció és bizonytalanság van abban, 

242
00:13:50,056 --> 00:13:53,500
ami történni fog, mintha 64 egyformán valószínű kimenetel lenne.

243
00:13:54,360 --> 00:13:57,960
A Wurtelebot első átadásakor alapvetően csak ezt csináltam vele.

244
00:13:57,960 --> 00:14:02,257
Végigmegy az összes lehetséges találgatáson, mind a 13 000 szón, 

245
00:14:02,257 --> 00:14:07,083
kiszámítja mindegyiknek az entrópiáját, pontosabban az összes lehetséges 

246
00:14:07,083 --> 00:14:11,314
minta eloszlásának entrópiáját, és kiválasztja a legmagasabbat, 

247
00:14:11,314 --> 00:14:16,140
mivel ez az, amelyik a lehető legjobban lecsökkenti a lehetőségek számát.

248
00:14:17,140 --> 00:14:21,100
És bár itt csak az első tippről beszéltem, ugyanezt teszi a következő tippeknél is.

249
00:14:21,560 --> 00:14:24,172
Például miután az első találgatáson meglát valamilyen mintát, 

250
00:14:24,172 --> 00:14:27,923
ami a lehetséges szavak kisebb számára korlátozná a lehetséges szavak számát az alapján, 

251
00:14:27,923 --> 00:14:31,252
hogy mi egyezik ezzel, csak ugyanazt a játékot játssza a szavak kisebb halmaza 

252
00:14:31,252 --> 00:14:31,800
tekintetében.

253
00:14:32,260 --> 00:14:36,388
A javasolt második találgatáshoz megnézzük az összes olyan minta eloszlását, 

254
00:14:36,388 --> 00:14:40,891
amely a szavak szűkebb halmazából előfordulhat, átnézzük mind a 13 000 lehetőséget, 

255
00:14:40,891 --> 00:14:43,840
és megtaláljuk azt, amelyik maximalizálja az entrópiát.

256
00:14:45,420 --> 00:14:47,475
Hogy megmutassam, hogyan működik ez a gyakorlatban, 

257
00:14:47,475 --> 00:14:49,887
hadd mutassam meg Wurtele egy kis változatát, amit én írtam, 

258
00:14:49,887 --> 00:14:52,180
és amely a margón mutatja az elemzés legfontosabb elemeit.

259
00:14:53,680 --> 00:14:56,629
Tehát miután elvégezte az entrópia számításokat, itt jobbra megmutatja, 

260
00:14:56,629 --> 00:14:59,660
hogy melyek azok, amelyek a legnagyobb várható információval rendelkeznek.

261
00:15:00,280 --> 00:15:05,623
Kiderült, hogy a legjobb válasz, legalábbis jelenleg, ezt majd később pontosítjuk, 

262
00:15:05,623 --> 00:15:10,580
a Tares, ami azt jelenti, hogy, öhm, persze, bükköny, a leggyakoribb bükköny.

263
00:15:11,040 --> 00:15:13,101
Minden egyes alkalommal, amikor itt tippelünk, 

264
00:15:13,101 --> 00:15:16,391
ahol talán figyelmen kívül hagyom az ajánlásait, és a pala mellett döntök, 

265
00:15:16,391 --> 00:15:19,550
mert szeretem a pala-t, láthatjuk, hogy mennyi várható információ volt, 

266
00:15:19,550 --> 00:15:22,972
de aztán itt a szó jobb oldalán megmutatja, hogy mennyi tényleges információt 

267
00:15:22,972 --> 00:15:24,420
kaptunk az adott mintát tekintve.

268
00:15:25,000 --> 00:15:27,244
Szóval itt úgy néz ki, hogy egy kicsit pechesek voltunk, 

269
00:15:27,244 --> 00:15:30,120
5,8-as értéket vártunk, de történetesen ennél kevesebbel kaptunk valamit.

270
00:15:30,600 --> 00:15:35,020
A bal oldalon pedig megmutatja az összes lehetséges szót, tekintve, hogy hol vagyunk most.

271
00:15:35,800 --> 00:15:39,061
A kék sávok azt mutatják, hogy az egyes szavak milyen valószínűséggel fordulnak elő, 

272
00:15:39,061 --> 00:15:42,323
tehát jelenleg azt feltételezi, hogy minden szó egyforma valószínűséggel fordul elő, 

273
00:15:42,323 --> 00:15:43,360
de ezt mindjárt finomítjuk.

274
00:15:44,060 --> 00:15:47,662
Ez a bizonytalansági mérés pedig a lehetséges szavak eloszlásának 

275
00:15:47,662 --> 00:15:51,647
entrópiáját mutatja meg, ami jelenleg, mivel ez egy egyenletes eloszlás, 

276
00:15:51,647 --> 00:15:55,960
csak egy szükségtelenül bonyolult módja a lehetőségek számának megszámlálására.

277
00:15:56,560 --> 00:16:02,180
Ha például a 2-t 13,66 hatványára emelnénk, akkor ez a 13 000 lehetőség körül lenne.

278
00:16:02,900 --> 00:16:06,140
Um, itt egy kicsit eltértem, de csak azért, mert nem mutatom az összes tizedesjegyet.

279
00:16:06,720 --> 00:16:09,683
Jelenleg úgy tűnhet, hogy ez felesleges és túlságosan bonyolítja a dolgokat, 

280
00:16:09,683 --> 00:16:12,340
de egy perc múlva látni fogod, miért hasznos, ha mindkét szám megvan.

281
00:16:12,760 --> 00:16:17,308
Tehát itt úgy tűnik, hogy a második tippünkhöz a legmagasabb entrópiát a Raman jelöli, 

282
00:16:17,308 --> 00:16:19,400
ami megint csak nem igazán tűnik szónak.

283
00:16:19,980 --> 00:16:24,060
Szóval, hogy erkölcsileg magasra tegyem a lécet, megyek előre és beírom Rains-t.

284
00:16:25,440 --> 00:16:27,340
És megint úgy tűnik, hogy egy kicsit pechesek voltunk.

285
00:16:27,520 --> 00:16:31,360
Mi 4,3 bitet vártunk, és csak 3,39 bit információt kaptunk.

286
00:16:31,940 --> 00:16:33,940
Így már csak 55 lehetőségünk van.

287
00:16:34,900 --> 00:16:37,701
És itt talán tényleg csak azt fogom követni, amit sugall, 

288
00:16:37,701 --> 00:16:39,440
ami a kombó, bármit is jelentsen ez.

289
00:16:40,040 --> 00:16:42,920
És, oké, ez tulajdonképpen egy jó lehetőség egy rejtvényre.

290
00:16:42,920 --> 00:16:46,380
Azt mondja nekünk, hogy ez a minta 4,7 bit információt ad.

291
00:16:47,060 --> 00:16:51,720
De a bal oldalon, mielőtt ezt a mintát látnánk, 5,78 bit bizonytalanság volt.

292
00:16:52,420 --> 00:16:56,340
Tehát kvízkérdésként: mit jelent ez a fennmaradó lehetőségek számával kapcsolatban?

293
00:16:58,040 --> 00:17:01,388
Nos, ez azt jelenti, hogy 1 bizonytalansági tényezőre redukálódunk, 

294
00:17:01,388 --> 00:17:04,540
ami ugyanaz, mintha azt mondanánk, hogy 2 lehetséges válasz van.

295
00:17:04,700 --> 00:17:05,700
Ez egy 50-50%-os választás.

296
00:17:06,500 --> 00:17:08,840
És innen, mivel te és én tudjuk, hogy melyik szó a leggyakoribb, 

297
00:17:08,840 --> 00:17:10,640
tudjuk, hogy a válasznak a mélységnek kell lennie.

298
00:17:11,180 --> 00:17:13,280
De ahogyan most meg van írva, a program ezt nem tudja.

299
00:17:13,540 --> 00:17:16,442
Tehát csak megy tovább, megpróbál annyi információt szerezni, 

300
00:17:16,442 --> 00:17:19,859
amennyit csak tud, amíg csak egy lehetőség marad, és akkor kitalálja azt.

301
00:17:20,380 --> 00:17:22,993
Tehát nyilvánvalóan szükségünk van egy jobb végjáték-stratégiára, 

302
00:17:22,993 --> 00:17:25,527
de mondjuk, hogy a wordle megoldónk 1. verziójának nevezzük el, 

303
00:17:25,527 --> 00:17:28,260
majd lefuttatunk néhány szimulációt, hogy megnézzük, hogyan teljesít.

304
00:17:30,360 --> 00:17:34,120
Tehát ez úgy működik, hogy minden lehetséges wordle játékot lejátszik.

305
00:17:34,240 --> 00:17:38,540
Végigmegy mindazon a 2315 szón, amelyek a tényleges wordle válaszok.

306
00:17:38,540 --> 00:17:40,580
Alapvetően ezt használja tesztkészletként.

307
00:17:41,360 --> 00:17:44,767
És ezzel a naiv módszerrel, amely nem veszi figyelembe, hogy egy szó mennyire gyakori, 

308
00:17:44,767 --> 00:17:48,096
és csak megpróbálja maximalizálni az információt minden egyes lépésnél az út mentén, 

309
00:17:48,096 --> 00:17:49,820
amíg le nem jut egy és csak egy választásig.

310
00:17:50,360 --> 00:17:54,300
A szimuláció végére az átlagos pontszám 4,124 körül alakul.

311
00:17:55,320 --> 00:17:59,240
Ami nem rossz, hogy őszinte legyek, én valahogy rosszabbra számítottam.

312
00:17:59,660 --> 00:18:01,280
De azok, akik wordle-t játszanak, azt fogják mondani, 

313
00:18:01,280 --> 00:18:02,600
hogy általában 4-ben is meg tudják csinálni.

314
00:18:02,860 --> 00:18:05,380
Az igazi kihívás az, hogy minél többet szerezz 3-ban.

315
00:18:05,380 --> 00:18:08,080
Elég nagy ugrás a 4-es és a 3-as pontszám között.

316
00:18:08,860 --> 00:18:12,026
A nyilvánvalóan alacsonyan lógó gyümölcs itt az, hogy valahogy beépítsük, 

317
00:18:12,026 --> 00:18:14,980
hogy egy szó gyakori-e vagy sem, és pontosan hogyan is csináljuk ezt.

318
00:18:22,800 --> 00:18:26,418
Én úgy közelítettem meg a dolgot, hogy az angol nyelv összes szavának relatív 

319
00:18:26,418 --> 00:18:29,943
gyakoriságát tartalmazó listát kaptam, és csak a Mathematica szógyakorisági 

320
00:18:29,943 --> 00:18:33,654
adatfüggvényét használtam, amely maga is a Google Books English Ngram nyilvános 

321
00:18:33,654 --> 00:18:34,860
adatkészletéből származik.

322
00:18:35,460 --> 00:18:37,857
És elég szórakoztató megnézni, például ha a leggyakoribb 

323
00:18:37,857 --> 00:18:39,960
szavaktól a legkevésbé gyakori szavakig rendezzük.

324
00:18:40,120 --> 00:18:43,080
Nyilvánvalóan ezek a leggyakoribb, 5 betűs szavak az angol nyelvben.

325
00:18:43,700 --> 00:18:45,840
Vagy inkább ezek a 8. leggyakoribbak.

326
00:18:46,280 --> 00:18:48,880
Az első az, ami, utána pedig az ott és az ott.

327
00:18:49,260 --> 00:18:52,044
Maga az első nem első, hanem 9., és van értelme, 

328
00:18:52,044 --> 00:18:56,647
hogy ezek a többi szó gyakrabban fordulhat elő, ahol az első után az után, ahol, 

329
00:18:56,647 --> 00:18:58,580
és azok csak egy kicsit ritkábban.

330
00:18:59,160 --> 00:19:02,585
Most, amikor ezeket az adatokat arra használjuk, hogy modellezzük, 

331
00:19:02,585 --> 00:19:06,061
hogy az egyes szavak milyen valószínűséggel lesznek a végső válasz, 

332
00:19:06,061 --> 00:19:08,567
nem csak a gyakorisággal kell arányosnak lennie, 

333
00:19:08,567 --> 00:19:11,634
mert például a ami 0,002 pontot kap ebben az adathalmazban, 

334
00:19:11,634 --> 00:19:15,060
míg a fonás szó bizonyos értelemben 1000-szer kisebb valószínűségű.

335
00:19:15,560 --> 00:19:17,806
De mindkettő elég gyakori szó ahhoz, hogy szinte biztos, 

336
00:19:17,806 --> 00:19:21,000
hogy érdemes figyelembe venni őket, ezért inkább bináris elválasztást szeretnénk.

337
00:19:21,860 --> 00:19:26,229
Úgy jártam el, hogy elképzeltem, hogy veszem ezt az egész szavak rendezett listáját, 

338
00:19:26,229 --> 00:19:29,725
majd elrendezem az x-tengelyen, és alkalmazom a szigmoid függvényt, 

339
00:19:29,725 --> 00:19:32,913
ami a szokásos módja annak, hogy egy olyan függvényt kapjunk, 

340
00:19:32,913 --> 00:19:35,689
amelynek kimenete alapvetően bináris, vagy 0, vagy 1, 

341
00:19:35,689 --> 00:19:38,260
de van egy simítás a bizonytalansági tartományban.

342
00:19:39,160 --> 00:19:42,809
Tehát lényegében az a valószínűség, amit az egyes szavakhoz rendelek, 

343
00:19:42,809 --> 00:19:46,354
hogy a végső listán szerepeljenek, a szigmoid függvény értéke lesz, 

344
00:19:46,354 --> 00:19:48,440
bárhol is helyezkedik el az x-tengelyen.

345
00:19:49,520 --> 00:19:52,172
Ez nyilvánvalóan függ néhány paramétertől, például attól, 

346
00:19:52,172 --> 00:19:55,235
hogy az x-tengelyen milyen széles teret töltenek ki ezek a szavak, 

347
00:19:55,235 --> 00:19:58,802
meghatározza, hogy mennyire fokozatosan vagy meredeken csökkenünk 1-től 0-ig, 

348
00:19:58,802 --> 00:20:02,140
és hogy hol helyezzük el őket balról jobbra, meghatározza a határértéket.

349
00:20:02,980 --> 00:20:05,966
És hogy őszinte legyek, én ezt úgy csináltam, hogy megnyaltam az ujjam, 

350
00:20:05,966 --> 00:20:06,920
és beledugtam a szélbe.

351
00:20:07,140 --> 00:20:10,043
Végignéztem a rendezett listát, és megpróbáltam megtalálni azt az ablakot, 

352
00:20:10,043 --> 00:20:12,984
ahol, amikor ránéztem, úgy gondoltam, hogy ezeknek a szavaknak körülbelül a 

353
00:20:12,984 --> 00:20:16,120
fele valószínűbb, mint hogy nem a végső válasz, és ezt használtam határértékként.

354
00:20:17,100 --> 00:20:19,603
Ha már van egy ilyen eloszlásunk a szavak között, 

355
00:20:19,603 --> 00:20:23,860
akkor egy újabb helyzetet kapunk, ahol az entrópia igazán hasznos mérőeszközzé válik.

356
00:20:24,500 --> 00:20:28,145
Mondjuk, mondjuk, játszottunk egy játékot, és a régi nyitószavaimmal kezdünk, 

357
00:20:28,145 --> 00:20:31,090
amelyek a más és a szögek voltak, és olyan helyzetbe kerülünk, 

358
00:20:31,090 --> 00:20:33,240
ahol négy lehetséges szó is van, ami illik rá.

359
00:20:33,560 --> 00:20:36,240
És tegyük fel, hogy mindegyiket egyformán valószínűnek tartjuk, 

360
00:20:36,240 --> 00:20:38,880
hadd kérdezzem meg, mekkora ennek az eloszlásnak az entrópiája?

361
00:20:41,080 --> 00:20:45,296
Nos, a fenti lehetőségek mindegyikéhez tartozó információ a 4 

362
00:20:45,296 --> 00:20:50,260
logaritmikus bázisának 2-es bázisa lesz, mivel mindegyik 1 és 4, és ez 2.

363
00:20:50,640 --> 00:20:52,460
2 bit információ, 4 lehetőség.

364
00:20:52,760 --> 00:20:53,580
Ez mind nagyon szép és jó.

365
00:20:54,300 --> 00:20:57,800
De mi van, ha azt mondom, hogy valójában több mint 4 mérkőzés van?

366
00:20:58,260 --> 00:21:02,460
A valóságban, ha végignézzük a teljes szólistát, 16 olyan szó van, amely megfelel.

367
00:21:02,580 --> 00:21:06,026
De tegyük fel, hogy a modellünk nagyon alacsony valószínűséggel teszi fel, 

368
00:21:06,026 --> 00:21:09,473
hogy a másik 12 szó valóban a végső válasz lesz, körülbelül 1 az 1000-hez, 

369
00:21:09,473 --> 00:21:10,760
mert ezek nagyon homályosak.

370
00:21:11,500 --> 00:21:14,260
Most hadd kérdezzem meg, mekkora ennek az eloszlásnak az entrópiája?

371
00:21:15,420 --> 00:21:19,315
Ha az entrópia pusztán az egyezések számát mérné, akkor azt várhatnánk, 

372
00:21:19,315 --> 00:21:22,183
hogy ez valami olyasmi, mint a 16 logbázis 2, ami 4, 

373
00:21:22,183 --> 00:21:25,700
azaz kettővel több bit bizonytalanságot jelentene, mint korábban.

374
00:21:26,180 --> 00:21:29,132
De természetesen a tényleges bizonytalanság nem sokban különbözik attól, 

375
00:21:29,132 --> 00:21:29,860
ami korábban volt.

376
00:21:30,160 --> 00:21:33,661
Csak azért, mert van ez a 12 igazán homályos szó, még nem jelenti azt, 

377
00:21:33,661 --> 00:21:37,360
hogy még meglepőbb lenne, ha megtudnánk, hogy a végső válasz például a báj.

378
00:21:38,180 --> 00:21:41,757
Ha tehát ténylegesen elvégezzük a számítást, és összeadjuk az egyes 

379
00:21:41,757 --> 00:21:46,020
előfordulások valószínűségét és a megfelelő információt, akkor 2,11 bitet kapunk.

380
00:21:46,020 --> 00:21:49,671
Csak azt mondom, hogy ez alapvetően két bit, alapvetően ez a négy lehetőség, 

381
00:21:49,671 --> 00:21:53,465
de van egy kicsit több bizonytalanság a sok nagyon valószínűtlen esemény miatt, 

382
00:21:53,465 --> 00:21:56,500
bár ha megtudnád őket, akkor rengeteg információt kapnál belőle.

383
00:21:57,160 --> 00:21:59,221
Szóval, ha kicsinyítünk, ez az, ami a Wordle-t olyan 

384
00:21:59,221 --> 00:22:01,400
szép példává teszi egy információelméleti lecke számára.

385
00:22:01,600 --> 00:22:04,640
Az entrópiának ez a két különböző érzésű alkalmazása van.

386
00:22:05,160 --> 00:22:08,072
Az első azt mondja meg, hogy mi a várható információ, 

387
00:22:08,072 --> 00:22:10,876
amit egy adott tippből kapunk, a második pedig azt, 

388
00:22:10,876 --> 00:22:15,460
hogy meg tudjuk-e mérni a fennmaradó bizonytalanságot az összes lehetséges szó közül.

389
00:22:16,460 --> 00:22:18,775
És hangsúlyoznom kell, hogy ebben az első esetben, 

390
00:22:18,775 --> 00:22:22,724
amikor egy találgatás várható információját nézzük, ha a szavak súlyozása egyenlőtlen, 

391
00:22:22,724 --> 00:22:24,540
az hatással van az entrópia számítására.

392
00:22:24,980 --> 00:22:29,081
Hadd vegyem például elő ugyanazt az esetet, amit korábban a Weary szóhoz kapcsolódó 

393
00:22:29,081 --> 00:22:33,427
eloszlásról néztünk, de ezúttal nem egyenletes eloszlást használunk az összes lehetséges 

394
00:22:33,427 --> 00:22:33,720
szóra.

395
00:22:34,500 --> 00:22:38,280
Hadd nézzem, hátha találok itt egy részt, amely elég jól illusztrálja ezt.

396
00:22:40,940 --> 00:22:42,360
Oké, itt van, ez elég jó.

397
00:22:42,360 --> 00:22:46,622
Itt van két szomszédos minta, amelyek nagyjából egyforma valószínűségűek, 

398
00:22:46,622 --> 00:22:49,100
de az egyiknek 32 lehetséges szó felel meg.

399
00:22:49,280 --> 00:22:52,583
És ha megnézzük, hogy mik ezek, ez az a 32, amelyek mind csak nagyon 

400
00:22:52,583 --> 00:22:55,600
valószínűtlen szavak, ahogy végigpásztázzuk a szemünket rajtuk.

401
00:22:55,840 --> 00:22:59,510
Nehéz olyanokat találni, amelyek hihető válasznak tűnnek, esetleg kiabálnak, 

402
00:22:59,510 --> 00:23:01,988
de ha megnézzük a szomszédos mintát az eloszlásban, 

403
00:23:01,988 --> 00:23:04,944
amelyet éppen olyan valószínűnek tartanak, akkor azt mondják, 

404
00:23:04,944 --> 00:23:06,660
hogy csak 8 lehetséges egyezése van.

405
00:23:06,880 --> 00:23:09,520
Tehát negyedannyi meccs, de nagyjából ugyanannyi a valószínűsége.

406
00:23:09,860 --> 00:23:12,140
És amikor elővesszük ezeket a mérkőzéseket, láthatjuk, hogy miért.

407
00:23:12,500 --> 00:23:16,300
Ezek közül néhány valóban hihető válasz, mint a gyűrű, a harag vagy a rap.

408
00:23:17,900 --> 00:23:20,272
Annak illusztrálására, hogy mindezt hogyan építjük be, 

409
00:23:20,272 --> 00:23:22,300
hadd mutassam be a Wordlebot második verzióját.

410
00:23:22,560 --> 00:23:25,280
És van két-három fő különbség az elsőhöz képest, amit láttunk.

411
00:23:25,860 --> 00:23:29,597
Először is, ahogy az imént említettem, az a mód, ahogyan ezeket az entrópiákat, 

412
00:23:29,597 --> 00:23:33,755
az információ várható értékeit kiszámítjuk, most a mintákon belüli finomabb eloszlásokat 

413
00:23:33,755 --> 00:23:36,558
használja, amelyek magukban foglalják annak valószínűségét, 

414
00:23:36,558 --> 00:23:38,240
hogy egy adott szó valóban a válasz.

415
00:23:38,880 --> 00:23:41,511
Történetesen a könnyek még mindig az első helyen állnak, 

416
00:23:41,511 --> 00:23:43,820
bár az utánuk következők kicsit másképp néznek ki.

417
00:23:44,360 --> 00:23:46,663
Másodszor, amikor rangsorolja a legjobb választásokat, 

418
00:23:46,663 --> 00:23:49,384
akkor mostantól egy modellt fog vezetni arról a valószínűségről, 

419
00:23:49,384 --> 00:23:52,358
hogy az egyes szavak a tényleges válaszok, és ezt beépíti a döntésébe, 

420
00:23:52,358 --> 00:23:55,080
ami könnyebben látható, ha már van néhány találgatás az asztalon.

421
00:23:55,860 --> 00:23:58,394
Ismét figyelmen kívül hagyva az ajánlását, mert nem hagyhatjuk, 

422
00:23:58,394 --> 00:23:59,780
hogy gépek irányítsák az életünket.

423
00:24:01,140 --> 00:24:04,142
És azt hiszem, meg kell említenem egy másik dolgot, ami itt más, 

424
00:24:04,142 --> 00:24:06,914
a bal oldalon, hogy a bizonytalansági érték, a bitek száma, 

425
00:24:06,914 --> 00:24:09,640
már nem csak a lehetséges egyezések számának redundanciája.

426
00:24:10,080 --> 00:24:15,234
Ha most felhúzzuk és kiszámítjuk a 2-t a 8,02-hez, ami egy kicsit több mint 256, 

427
00:24:15,234 --> 00:24:19,370
azt hiszem 259, akkor azt mondja, hogy bár összesen 526 szó van, 

428
00:24:19,370 --> 00:24:24,143
ami ténylegesen megfelel ennek a mintának, a bizonytalanság mértéke inkább 

429
00:24:24,143 --> 00:24:28,980
hasonlít ahhoz, ami akkor lenne, ha 259 egyformán valószínű kimenetel lenne.

430
00:24:29,720 --> 00:24:30,740
Gondolhatod ezt így is.

431
00:24:31,020 --> 00:24:34,660
Tudja, hogy a borks nem a válasz, ugyanúgy, mint a yorts, a zorl és a zorus.

432
00:24:34,660 --> 00:24:37,680
Tehát ez egy kicsit kevésbé bizonytalan, mint az előző esetben.

433
00:24:37,820 --> 00:24:39,280
Ez a bitek száma kisebb lesz.

434
00:24:40,220 --> 00:24:44,012
És ha tovább játszom a játékot, akkor ezt finomítom le egy pár találgatással, 

435
00:24:44,012 --> 00:24:46,540
ami apropója annak, amit itt szeretnék elmagyarázni.

436
00:24:48,360 --> 00:24:50,985
A negyedik tippnél, ha megnézzük a legjobb tippjeit, 

437
00:24:50,985 --> 00:24:53,760
láthatjuk, hogy már nem csak az entrópiát maximalizálja.

438
00:24:54,460 --> 00:24:57,597
Tehát jelenleg technikailag hét lehetőség van, de az egyetlenek, 

439
00:24:57,597 --> 00:25:00,300
amelyeknek érdemi esélye van, a kollégiumok és a szavak.

440
00:25:00,300 --> 00:25:03,992
És láthatod, hogy mindkettőt az összes többi érték fölé helyezi, 

441
00:25:03,992 --> 00:25:06,720
amelyek szigorúan véve több információt adnának.

442
00:25:07,240 --> 00:25:10,364
Az első alkalommal, amikor ezt csináltam, csak összeadtam ezt a két számot, 

443
00:25:10,364 --> 00:25:13,900
hogy mérjem az egyes tippek minőségét, ami jobban működött, mint ahogy azt gyanítanád.

444
00:25:14,300 --> 00:25:15,900
De tényleg nem éreztem szisztematikusnak.

445
00:25:16,100 --> 00:25:17,880
És biztos vagyok benne, hogy az emberek más megközelítéseket is alkalmazhatnának.

446
00:25:17,900 --> 00:25:19,340
De itt van az, amelyikre rátaláltam.

447
00:25:19,760 --> 00:25:23,879
Ha a következő tippelés lehetőségét mérlegeljük, mint ebben az esetben a szavakat, 

448
00:25:23,879 --> 00:25:27,900
akkor az érdekel minket, hogy milyen várható pontszámot érünk el, ha ezt tesszük.

449
00:25:28,230 --> 00:25:32,741
És hogy kiszámítsuk ezt a várható pontszámot, azt mondjuk, hogy mi a valószínűsége annak, 

450
00:25:32,741 --> 00:25:35,900
hogy a szavak a tényleges válasz, ami jelenleg 58% -ra írja le.

451
00:25:36,040 --> 00:25:39,540
Azt mondjuk, hogy 58%-os eséllyel a mi pontszámunk ebben a játékban négy lenne.

452
00:25:40,320 --> 00:25:45,640
És akkor az egy mínusz 58%-os valószínűséggel a pontszámunk több lesz, mint a négy.

453
00:25:46,220 --> 00:25:49,361
Hogy mennyivel több, azt nem tudjuk, de meg tudjuk becsülni az alapján, 

454
00:25:49,361 --> 00:25:52,460
hogy mennyi bizonytalanság valószínűsíthető, ha egyszer eljutunk odáig.

455
00:25:52,960 --> 00:25:55,940
Pontosabban, jelenleg 1,44 bit bizonytalanság van.

456
00:25:56,440 --> 00:26:01,120
Ha szavakat tippelünk, akkor azt mondja, hogy a várható információ, amit kapunk, 1,27 bit.

457
00:26:01,620 --> 00:26:04,438
Ha tehát szavakat találgatunk, akkor ez a különbség azt jelzi, 

458
00:26:04,438 --> 00:26:07,660
hogy mekkora bizonytalanságot hagyunk magunk után, miután ez megtörtént.

459
00:26:08,260 --> 00:26:11,000
Szükségünk van valamilyen függvényre, amit itt f-nek nevezek, 

460
00:26:11,000 --> 00:26:13,740
amely ezt a bizonytalanságot egy várható pontszámhoz társítja.

461
00:26:14,240 --> 00:26:18,166
És a mód, ahogyan ezt csinálta, az volt, hogy a bot első verziója alapján egy 

462
00:26:18,166 --> 00:26:21,387
csomó adatot ábrázolt a korábbi játékokból, hogy megmondja, hé, 

463
00:26:21,387 --> 00:26:24,004
mi volt a tényleges pontszám különböző pontok után, 

464
00:26:24,004 --> 00:26:26,320
bizonyos nagyon jól mérhető bizonytalansággal?

465
00:26:27,020 --> 00:26:31,144
Például ezek az adatpontok itt, amelyek egy 8,7 körüli érték felett vannak, 

466
00:26:31,144 --> 00:26:34,509
azt jelentik, hogy néhány játék esetében egy olyan pont után, 

467
00:26:34,509 --> 00:26:38,960
ahol 8,7 bit bizonytalanság volt, két találgatásra volt szükség a végső válaszhoz.

468
00:26:39,320 --> 00:26:40,660
Más játékok esetében három találgatásra volt szükség.

469
00:26:40,820 --> 00:26:42,240
Más játékoknál négy találgatás kellett.

470
00:26:43,140 --> 00:26:46,309
Ha itt balra toljuk, a nulla feletti pontok azt mondják, 

471
00:26:46,309 --> 00:26:50,368
hogy amikor nulla bit bizonytalanság van, vagyis csak egy lehetőség van, 

472
00:26:50,368 --> 00:26:54,260
akkor a szükséges találgatások száma mindig csak egy, ami megnyugtató.

473
00:26:54,780 --> 00:26:59,503
Amikor csak egy kis bizonytalanság volt, vagyis lényegében csak két lehetőség volt, 

474
00:26:59,503 --> 00:27:03,609
akkor néha még egy találgatásra volt szükség, néha még két találgatásra, 

475
00:27:03,609 --> 00:27:05,240
és így tovább, és így tovább.

476
00:27:05,740 --> 00:27:08,410
Talán egy kicsit egyszerűbb módja az adatok megjelenítésének, 

477
00:27:08,410 --> 00:27:10,220
ha összevonjuk őket, és átlagokat veszünk.

478
00:27:11,000 --> 00:27:14,873
Például ez a sáv itt azt mutatja, hogy az összes olyan pont közül, 

479
00:27:14,873 --> 00:27:19,960
ahol egy kis bizonytalanság volt, átlagosan körülbelül 1,5 új találgatásra volt szükség.

480
00:27:22,140 --> 00:27:24,874
A sáv itt azt mutatja, hogy az összes olyan játék közül, 

481
00:27:24,874 --> 00:27:28,088
ahol a bizonytalanság valamikor valamivel több mint négy bit volt, 

482
00:27:28,088 --> 00:27:31,446
ami azt jelenti, hogy 16 különböző lehetőségre szűkítettük le a kört, 

483
00:27:31,446 --> 00:27:35,380
átlagosan valamivel több mint két találgatásra van szükség attól a ponttól kezdve.

484
00:27:36,060 --> 00:27:38,594
És innen csak egy regressziót csináltam, hogy illeszkedjen egy olyan függvényhez, 

485
00:27:38,594 --> 00:27:39,460
amely ésszerűnek tűnt ehhez.

486
00:27:39,980 --> 00:27:44,341
És ne feledjük, hogy mindez azért van, hogy számszerűsíteni tudjuk azt az intuíciót, 

487
00:27:44,341 --> 00:27:48,960
hogy minél több információt nyerünk egy szóból, annál alacsonyabb lesz a várható pontszám.

488
00:27:49,680 --> 00:27:54,964
Tehát, ezzel a 2.0-s verzióval, ha visszamegyünk, és lefuttatjuk ugyanazt a szimulációt, 

489
00:27:54,964 --> 00:27:59,240
és mind a 2315 lehetséges wordle-válasz ellen játszunk, hogyan teljesít?

490
00:28:00,280 --> 00:28:03,420
Nos, az első verzióhoz képest határozottan jobb, ami megnyugtató.

491
00:28:04,020 --> 00:28:06,180
Mindent összevetve, az átlag 3,6 körül van.

492
00:28:06,540 --> 00:28:09,228
Bár az első változattal ellentétben van egy párszor, 

493
00:28:09,228 --> 00:28:12,120
hogy veszít, és hatnál többet igényel ebben a helyzetben.

494
00:28:12,640 --> 00:28:15,269
Feltehetően azért, mert van, amikor az információ maximalizálása 

495
00:28:15,269 --> 00:28:17,940
helyett inkább a cél elérése érdekében kell kompromisszumot kötni.

496
00:28:19,040 --> 00:28:21,000
Szóval, tudunk-e jobbat nyújtani 3,6-nál?

497
00:28:22,080 --> 00:28:22,920
Határozottan megtehetjük.

498
00:28:23,280 --> 00:28:25,425
Nos, az elején azt mondtam, hogy a legszórakoztatóbb, 

499
00:28:25,425 --> 00:28:28,207
ha megpróbáljuk nem beépíteni a wordle válaszok valódi listáját abba, 

500
00:28:28,207 --> 00:28:29,360
ahogyan a modelljét felépíti.

501
00:28:29,880 --> 00:28:34,180
De ha mégis beépítjük, a legjobb teljesítmény, amit kaptam, 3,43 körül volt.

502
00:28:35,160 --> 00:28:37,027
Tehát ha megpróbálunk kifinomultabbak lenni annál, 

503
00:28:37,027 --> 00:28:40,285
minthogy csak a szógyakorisági adatokat használjuk az előzetes eloszlás kiválasztásához, 

504
00:28:40,285 --> 00:28:42,298
akkor ez a 3,43 valószínűleg megadja a maximumot arra, 

505
00:28:42,298 --> 00:28:44,312
hogy milyen jót tudnánk elérni ezzel, vagy legalábbis, 

506
00:28:44,312 --> 00:28:45,740
hogy én milyen jót tudnék elérni ezzel.

507
00:28:46,240 --> 00:28:49,433
Ez a legjobb teljesítmény lényegében csak azokat az ötleteket használja, 

508
00:28:49,433 --> 00:28:51,751
amelyekről itt beszéltem, de egy kicsit tovább megy, 

509
00:28:51,751 --> 00:28:55,120
például a várt információ keresése két lépéssel előre, nem pedig csak eggyel.

510
00:28:55,620 --> 00:28:57,963
Eredetileg azt terveztem, hogy többet beszélek erről, 

511
00:28:57,963 --> 00:29:00,220
de rájöttem, hogy már így is elég hosszúra nyúltunk.

512
00:29:00,580 --> 00:29:04,028
Az egyetlen dolog, amit mondhatok, hogy miután elvégeztem ezt a kétlépcsős keresést, 

513
00:29:04,028 --> 00:29:06,503
majd lefuttattam néhány mintaszimulációt a csúcsjelölteknél, 

514
00:29:06,503 --> 00:29:09,100
eddig legalábbis számomra úgy tűnik, hogy Crane a legjobb nyitó.

515
00:29:09,100 --> 00:29:10,060
Ki gondolta volna?

516
00:29:10,920 --> 00:29:14,587
Ha a valódi wordle-listát használod a lehetőségek körének meghatározásához, 

517
00:29:14,587 --> 00:29:17,820
akkor a bizonytalanság, amivel indulsz, valamivel több mint 11 bit.

518
00:29:18,300 --> 00:29:21,975
És kiderül, hogy a nyers erővel végzett keresés alapján az első 

519
00:29:21,975 --> 00:29:25,880
két találgatás után a maximális várható információ 10 bit körül van.

520
00:29:26,500 --> 00:29:30,261
Ami azt sugallja, hogy a legjobb esetben az első két találgatás után, 

521
00:29:30,261 --> 00:29:34,560
tökéletesen optimális játék mellett, körülbelül egy bitnyi bizonytalanság marad.

522
00:29:34,800 --> 00:29:37,320
Ami ugyanaz, mintha csak két lehetséges tipp lenne.

523
00:29:37,740 --> 00:29:40,959
De azt hiszem, tisztességes és valószínűleg elég konzervatív azt mondani, 

524
00:29:40,959 --> 00:29:44,614
hogy soha nem lehet olyan algoritmust írni, amely ezt az átlagot háromra csökkenti, 

525
00:29:44,614 --> 00:29:47,660
mert a rendelkezésre álló szavakkal egyszerűen nincs elég hely ahhoz, 

526
00:29:47,660 --> 00:29:50,096
hogy két lépés után elegendő információt kapjunk ahhoz, 

527
00:29:50,096 --> 00:29:53,360
hogy a harmadik résben minden egyes alkalommal garantálni tudjuk a választ.

