[
 {
  "input": "In a moment, I will ask you a puzzle, and it's a pretty hard puzzle, actually, but before I do, I want to lead with a spoiler, which is the fact that the way we're going to solve this involves the use of complex numbers.",
  "translatedText": "잠시 후 퍼즐을 하나 출제할 텐데요, 사실 꽤 어려운 퍼즐이지만 그 전에 스포일러를 드리자면 이 문제를 푸는 방식이 복소수를 사용한다는 사실입니다.",
  "model": "DeepL",
  "from_community_srt": "잠시 후에 퍼즐을 하나 물어보겠습니다. 그리고 퍼즐은 꽤나 어렵습니다. 하지만 그 전에, 저는 스포일러로 시작하려 합니다. 우리가 이 퍼즐을 풀려고 할 때 복소수를 사용할 거 라는 사실입니다.",
  "n_reviews": 0,
  "start": 0.0,
  "end": 10.9
 },
 {
  "input": "And once you hear it, you will agree that that seems absurd, given that the puzzle is going to be purely a discrete question.",
  "translatedText": "퍼즐이 순전히 개별적인 질문이라는 점을 감안하면 터무니없어 보인다는 데 동의할 것입니다.",
  "model": "DeepL",
  "from_community_srt": "그리고 여러분이 이 스포일러를 듣자마자, 퍼즐과 완전히 별개의 질문일 것이기 때문에, 퍼즐이 터무니없어 보일거라고 생각할 것 입니다.",
  "n_reviews": 0,
  "start": 11.56,
  "end": 17.48
 },
 {
  "input": "It only asks about whole numbers and their sums.",
  "translatedText": "정수와 그 합에 대해서만 묻습니다.",
  "model": "DeepL",
  "from_community_srt": "문제는 단지 정수와 그 합에 대해서만 물을 뿐이며,",
  "n_reviews": 0,
  "start": 17.8,
  "end": 20.26
 },
 {
  "input": "There's not a whiff of the imaginary or even continuity anywhere on the horizon.",
  "translatedText": "지평선 어디에도 상상이나 연속성은 찾아볼 수 없습니다.",
  "model": "DeepL",
  "from_community_srt": "지평선 어디에도 허수의 낌새가 나타나지 않습니다.",
  "n_reviews": 0,
  "start": 20.66,
  "end": 24.56
 },
 {
  "input": "It's certainly not the only time that complex numbers are unreasonably useful for discrete math, to borrow a phrase.",
  "translatedText": "이산 수학에서 복소수가 비합리적으로 유용한 경우는, 표현을 빌리자면, 이산 수학에만 국한된 것은 아닙니다.",
  "model": "DeepL",
  "from_community_srt": "복소수가 이산 수학을 표현하는데 지나치게 유용한 것은 확실히 이번만은 아닙니다.",
  "n_reviews": 0,
  "start": 25.28,
  "end": 30.72
 },
 {
  "input": "The more famous example that I could bring up would be how the modern way that mathematicians understand prime numbers, you know, questions about how they're distributed, their density at certain regions, things like that, well, it involves studying specially designed functions whose inputs and outputs are complex numbers.",
  "translatedText": "더 유명한 예를 들자면 수학자들이 소수를 이해하는 현대적 방법, 즉 소수의 분포, 특정 영역에서의 밀도 등에 대한 질문은 입력과 출력이 복소수인 특수하게 설계된 함수를 연구하는 것과 관련이 있습니다.",
  "model": "DeepL",
  "from_community_srt": "좀 더 유명한 예는 현대 수학자들이 소수를 이해하는 방법일 것입니다. 수학자들이 소수가 특정 영역에서 어떻게 분배되는지에 대한 질문입니다. 바로 입력과 출력이 복소수인 특수함수의 연구와 연관 되어있습니다.",
  "n_reviews": 0,
  "start": 31.16,
  "end": 45.62
 },
 {
  "input": "Some of you may know that this is what the famous Riemann hypothesis is all about.",
  "translatedText": "여러분 중 일부는 이것이 유명한 리만 가설의 내용이라는 것을 알고 있을 것입니다.",
  "model": "DeepL",
  "from_community_srt": "여러분 중 일부는 이것이 유명한 리만 가설의 대부분이라는 것을 알고 있을겁니다.",
  "n_reviews": 0,
  "start": 46.12,
  "end": 49.36
 },
 {
  "input": "Basically, there's a specially designed function, and on the face of it, it looks unrelated to the discrete world of primes.",
  "translatedText": "기본적으로 특별히 설계된 기능이 있으며, 겉으로 보기에는 소수의 불연속적인 세계와는 무관해 보입니다.",
  "model": "DeepL",
  "from_community_srt": "기본적으로 특수함수가 있으며, 표면적으로는 소수의 이산 세계와 무관해 보입니다.",
  "n_reviews": 0,
  "start": 49.68,
  "end": 54.96
 },
 {
  "input": "It's smooth, it's complex valued.",
  "translatedText": "매끄럽고 복잡한 가치가 있습니다.",
  "model": "DeepL",
  "from_community_srt": "하지만 부드럽고, 복잡한 가치를 가집니다.",
  "n_reviews": 0,
  "start": 55.06,
  "end": 57.0
 },
 {
  "input": "But under the hood, it encodes all of the information that you could ever want about those discrete prime numbers.",
  "translatedText": "하지만 내부적으로는 불연속 소수에 대해 원하는 모든 정보를 인코딩합니다.",
  "model": "DeepL",
  "from_community_srt": "그러나 내부적으로는 소수에 대한 모든 정보를 암호화합니다.",
  "n_reviews": 0,
  "start": 57.0,
  "end": 62.18
 },
 {
  "input": "And most importantly, certain questions about primes are easier to answer by analyzing this function than they would be by directly analyzing the primes themselves.",
  "translatedText": "그리고 가장 중요한 것은 소수에 대한 특정 질문은 소수 자체를 직접 분석하는 것보다 이 함수를 분석하는 것이 더 쉽게 답을 구할 수 있다는 것입니다.",
  "model": "DeepL",
  "from_community_srt": "그리고 가장 중요한 것은 소수에 대한 특정 질문은 소수에 대한 직접적인 분석보단 이 함수를 분석함으로써 대답하기가 더 쉽다는 것입니다.",
  "n_reviews": 0,
  "start": 62.6,
  "end": 70.6
 },
 {
  "input": "Of course, our puzzle, which I promise I'll share in just a moment, is a lot more innocent than the Riemann hypothesis.",
  "translatedText": "물론, 잠시 후에 공유할 우리의 퍼즐은 리만 가설보다 훨씬 더 순수합니다.",
  "model": "DeepL",
  "from_community_srt": "물론 잠시 후에 제가 공유할 우리의 퍼즐은 리만의 가설보다 훨씬 더 순수합니다.",
  "n_reviews": 0,
  "start": 71.26,
  "end": 76.06
 },
 {
  "input": "It's a toy problem.",
  "translatedText": "장난감 문제입니다.",
  "model": "DeepL",
  "from_community_srt": "그저 장난감 수준의 문제입니다.",
  "n_reviews": 0,
  "start": 76.26,
  "end": 77.42
 },
 {
  "input": "But at the end of the video, I'll share how the techniques that we use to solve it, the real reason that we're here, are actually pretty similar in spirit to the setup that leads to the Riemann hypothesis.",
  "translatedText": "하지만 영상 말미에 이 문제를 해결하기 위해 사용하는 기술, 즉 우리가 이 자리에 모인 진짜 이유가 리만 가설로 이어지는 설정과 실제로 어떻게 비슷한지 공유하겠습니다.",
  "model": "DeepL",
  "from_community_srt": "하지만 영상의 마지막 부분에서, 우리가 이 문제를 해결하기 위해 사용하는 기술들, 우리가 여기에 있는 진짜 이유는 리만 가설과 소수 정리와 그 주변의 모든 생각의",
  "n_reviews": 0,
  "start": 77.88,
  "end": 86.82
 },
 {
  "input": "And the prime number theorem and that whole circle of thoughts around it.",
  "translatedText": "그리고 소수의 정리와 그 정리를 둘러싼 모든 생각의 순환.",
  "model": "DeepL",
  "from_community_srt": "순환을 이끌어내는 구성과 정신적으로 매우 유사하다는 것을 공유하겠습니다.",
  "n_reviews": 0,
  "start": 87.0,
  "end": 90.18
 },
 {
  "input": "Our puzzle for today comes from this book here by T2 Andrescu and Zhu Mingfeng.",
  "translatedText": "오늘의 퍼즐은 T2 안드레스쿠와 주 밍펑이 쓴 이 책에서 가져왔습니다.",
  "model": "DeepL",
  "from_community_srt": "오늘의 퍼즐은 Titu Andreescu와 Zuming Feng의 책에서 나왔습니다.",
  "n_reviews": 0,
  "start": 94.9,
  "end": 99.38
 },
 {
  "input": "It's basically a collection of problems used in training the USA team for the International Math Olympiad.",
  "translatedText": "기본적으로 국제 수학 올림피아드 미국 대표팀 훈련에 사용되는 문제 모음입니다.",
  "model": "DeepL",
  "from_community_srt": "이 책은 기본적으로 국제 수학 올림피아드의 미국 팀을 훈련시키는 데 사용되는 문제집입니다.",
  "n_reviews": 0,
  "start": 99.48,
  "end": 104.32
 },
 {
  "input": "And if we turn to chapter 2, Advanced Problems, problem number 10 asks this seemingly innocent question.",
  "translatedText": "2장, 고급 문제로 넘어가면 10번 문제에서 겉보기에는 순진해 보이는 질문을 던집니다.",
  "model": "DeepL",
  "from_community_srt": "그리고 제 2장의 고급 문제로 눈을 돌리면,",
  "n_reviews": 0,
  "start": 104.94,
  "end": 110.24
 },
 {
  "input": "Find the number of subsets of the set 1 up to 2000, the sum of whose elements is divisible by 5.",
  "translatedText": "집합 1의 원소의 합을 5로 나눌 수 있는 2000까지의 부분집합의 개수를 구합니다.",
  "model": "DeepL",
  "from_community_srt": "문제 10번은 \"1에서 2000까지 있는 집합에서, 원소의 합이 5로 나눠지는 부분집합의 개수를 구하여라\" 라는 순수한 질문을 합니다.",
  "n_reviews": 0,
  "start": 110.92,
  "end": 117.64
 },
 {
  "input": "Okay, so that might take a little bit of a moment to parse.",
  "translatedText": "분석하는 데 시간이 조금 걸릴 수 있습니다.",
  "model": "DeepL",
  "from_community_srt": "좋아요, 그럼 해석하는데 시간이 좀 걸릴 수도 있겠네요.",
  "n_reviews": 0,
  "start": 119.18,
  "end": 121.42
 },
 {
  "input": "For example, something like the set 3, 1, 4, that would be a subset.",
  "translatedText": "예를 들어 3, 1, 4 집합과 같은 것은 하위 집합이 될 수 있습니다.",
  "model": "DeepL",
  "from_community_srt": "예를 들어, {3, 1,",
  "n_reviews": 0,
  "start": 121.64,
  "end": 125.32
 },
 {
  "input": "All of its elements are also elements in the big set.",
  "translatedText": "모든 요소는 빅 세트의 요소이기도 합니다.",
  "model": "DeepL",
  "from_community_srt": "4}와 같은 부분집합 원소들은 또한 전체집합의 원소들 입니다.",
  "n_reviews": 0,
  "start": 125.66,
  "end": 128.06
 },
 {
  "input": "And its sum, 3 plus 1 plus 4 is 8, so that wouldn't be considered.",
  "translatedText": "그리고 3 더하기 1 더하기 4의 합은 8이므로 고려되지 않습니다.",
  "model": "DeepL",
  "from_community_srt": "그리고 이것의 합은 3+1+4=8입니다. 그러므로 이 집합은 고려하지 않습니다.",
  "n_reviews": 0,
  "start": 128.58,
  "end": 132.5
 },
 {
  "input": "That's not in our count.",
  "translatedText": "이는 집계에 포함되지 않았습니다.",
  "model": "DeepL",
  "from_community_srt": "즉,",
  "n_reviews": 0,
  "start": 132.6,
  "end": 133.54
 },
 {
  "input": "Whereas something like the set 2, 3, 5, also a subset, has a sum of 10.",
  "translatedText": "반면 2, 3, 5 집합과 같은 하위 집합은 합계가 10입니다.",
  "model": "DeepL",
  "from_community_srt": "우리의 계산에 포함되지 않습니다. 반면, {2, 3,",
  "n_reviews": 0,
  "start": 133.84,
  "end": 138.12
 },
 {
  "input": "That is divisible by 5, so it's one that we want to count.",
  "translatedText": "이는 5로 나눌 수 있으므로 계산할 수 있는 숫자입니다.",
  "model": "DeepL",
  "from_community_srt": "5}와 같은 부분집합은 5로 나눌 수 있는 10을 합으로 가지고 있기 때문에 우리가 세고자 하는 것입니다.",
  "n_reviews": 0,
  "start": 138.44,
  "end": 140.92
 },
 {
  "input": "The preview animation that I had at the start is essentially a brute force program trying to answer this question.",
  "translatedText": "처음에 제가 만든 미리보기 애니메이션은 본질적으로 이 질문에 답하기 위한 무차별 대입 프로그램입니다.",
  "model": "DeepL",
  "from_community_srt": "제가 처음에 보여드렸던 애니메이션은 기본적으로 이 질문에 답을 구하려는 무차별 대입 프로그램입니다.",
  "n_reviews": 0,
  "start": 141.4,
  "end": 147.14
 },
 {
  "input": "It will iterate through all of the different possible subsets, finding the sum of each one along the way, and it increments a counter each time that it finds a multiple of 5.",
  "translatedText": "가능한 모든 다른 부분 집합을 반복하여 각 부분 집합의 합을 구하고, 5의 배수를 찾을 때마다 카운터를 증가시킵니다.",
  "model": "DeepL",
  "from_community_srt": "이것은 모든 가능한 부분집합에서 각각의 합을 찾는 것을 반복할 것이고, 5의 배수를 찾을 때마다 카운트를 증가시킬 겁니다.",
  "n_reviews": 0,
  "start": 147.72,
  "end": 156.06
 },
 {
  "input": "And you know what, a nice warm-up question here would be to pause and think about how many total subsets are there overall?",
  "translatedText": "여기서 잠시 멈추고 전체 하위 집합이 몇 개나 있는지 생각해 보는 것도 좋은 준비 질문이 될 수 있을 것 같습니다.",
  "model": "DeepL",
  "from_community_srt": "자, 여기서 좋은 워밍업 질문은 영상을 잠시 멈추고 전체적으로 얼마나 많은 부분집합이 있는지 생각해 보는 것입니다.",
  "n_reviews": 0,
  "start": 156.76,
  "end": 162.52
 },
 {
  "input": "Forget this multiple of 5 stuff.",
  "translatedText": "이 5의 배수는 잊어버리세요.",
  "model": "DeepL",
  "from_community_srt": "5배수는 생각하지 마세요.",
  "n_reviews": 0,
  "start": 162.82,
  "end": 164.16
 },
 {
  "input": "How long will it take for this program to terminate?",
  "translatedText": "이 프로그램이 종료되는 데 얼마나 걸리나요?",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 164.42,
  "end": 166.56
 },
 {
  "input": "Many of you may know, the answer is 2 to the power 2,000.",
  "translatedText": "많은 분들이 알고 계시겠지만, 답은 2의 거듭제곱 2,000입니다.",
  "model": "DeepL",
  "from_community_srt": "이 프로그램이 종료되는 데 얼마나 걸릴까요? 여러분 중 다수는 답이 2의 2000제곱 이라는 것을 알고 있을 것입니다.",
  "n_reviews": 0,
  "start": 168.06,
  "end": 171.5
 },
 {
  "input": "The basic idea there is that when you're constructing a subset, you have 2,000 different binary choices you can make.",
  "translatedText": "여기서 기본 개념은 하위 집합을 구성할 때 2,000개의 서로 다른 이진 선택이 가능하다는 것입니다.",
  "model": "DeepL",
  "from_community_srt": "기본적인 아이디어는 부분집합을 구성할 때 2,000가지의 다른 이진 선택을 할 수 있다는 것입니다.",
  "n_reviews": 0,
  "start": 172.12,
  "end": 177.78
 },
 {
  "input": "Do you include an element or do you not?",
  "translatedText": "요소를 포함하나요, 포함하지 않나요?",
  "model": "DeepL",
  "from_community_srt": "원소를 포함할까요?",
  "n_reviews": 0,
  "start": 178.0,
  "end": 179.48
 },
 {
  "input": "And all of those choices are independent of each other, so the total number of choices you have in constructing a subset is 2 times 2 times 2 times 2 on and on 2,000 times.",
  "translatedText": "그리고 이러한 모든 선택은 서로 독립적이므로 하위 집합을 구성할 때 선택할 수 있는 총 개수는 2×2×2×2×2×2×2×2×2×2×2×2×2×2×2×2×2×2×2×2×2×2×2×2×2×2×2×2×2×2입니다.",
  "model": "DeepL",
  "from_community_srt": "아니면 안 할까요? 그리고 그 모든 선택들은 서로 독립적입니다. 그래서 부분집합을 구성할 때 여러분이 가진 선택들의 총 수는 2 * 2 * 2 * 2… 계속해서 2000 번입니다.",
  "n_reviews": 0,
  "start": 180.08,
  "end": 189.0
 },
 {
  "input": "And thinking about our program, that is a monstrously huge number.",
  "translatedText": "우리 프로그램을 생각하면 엄청나게 큰 숫자입니다.",
  "model": "DeepL",
  "from_community_srt": "그리고 우리의 프로그램을 생각해보면, 그것은 엄청나게 큰 숫자입니다.",
  "n_reviews": 0,
  "start": 189.8,
  "end": 193.24
 },
 {
  "input": "So even if we gave this brute forcing approach all the time in the universe, with all the physical resources the universe could conceivably provide, it wouldn't even come close, it wouldn't scratch the surface.",
  "translatedText": "따라서 우주에서 상상할 수 있는 모든 물리적 자원을 동원해 이 무차별적 접근 방식을 항상 사용한다고 해도 표면을 긁는 데 그칠 뿐입니다.",
  "model": "DeepL",
  "from_community_srt": "그래서 우리가 우주에서, 우주가 제공할 수 있는 모든 물리적 자원과 함께, 이런 무차별 대입을 한다고 해도, 이것의 값은 가까이 오지도 않을 것이고, 심지어 표면을 긁지도 않을 것입니다.",
  "n_reviews": 0,
  "start": 193.62,
  "end": 202.46
 },
 {
  "input": "Obviously we have to be a lot cleverer than that.",
  "translatedText": "물론 우리는 그보다 훨씬 더 영리해야 합니다.",
  "model": "DeepL",
  "from_community_srt": "분명히 우리는 이것보다 훨씬 더 현명해야 합니다.",
  "n_reviews": 0,
  "start": 203.06,
  "end": 205.18
 },
 {
  "input": "And if you were to just guess what the answer should be, make a rough approximation, you'd probably guess, you know, it should be around a fifth of all the total subsets.",
  "translatedText": "대략적인 근사치로 답을 추측해 본다면 전체 하위 집합의 5분의 1 정도일 것이라고 추측할 수 있을 것입니다.",
  "model": "DeepL",
  "from_community_srt": "그리고 여러분이 대략적인 근사값을 추측한다면, 여러분은 아마 전체 부분집합들의 5분의 1이 될거라고 추측할 것입니다.",
  "n_reviews": 0,
  "start": 205.56,
  "end": 212.34
 },
 {
  "input": "There's probably a roughly even distribution of all these sums mod 5.",
  "translatedText": "이 모든 합계는 대략 5를 곱한 값으로 균등하게 분포되어 있을 것입니다.",
  "model": "DeepL",
  "from_community_srt": "이 모든 합들의 대한 대략적인 균등한 분포가 있을 것입니다.",
  "n_reviews": 0,
  "start": 212.54,
  "end": 215.58
 },
 {
  "input": "And yes, that is true, that's a decent approximation.",
  "translatedText": "예, 그것은 사실이며 괜찮은 근사치입니다.",
  "model": "DeepL",
  "from_community_srt": "네, 이것은 적절한 근사치인 것은 사실입니다.",
  "n_reviews": 0,
  "start": 216.0,
  "end": 218.08
 },
 {
  "input": "But the heart of the question, the real challenge here, is to get a precise answer.",
  "translatedText": "하지만 질문의 핵심이자 진정한 도전은 정확한 답변을 얻는 것입니다.",
  "model": "DeepL",
  "from_community_srt": "하지만 여기서 질문의 핵심은 정확한 답을 얻는 것입니다.",
  "n_reviews": 0,
  "start": 218.5,
  "end": 222.22
 },
 {
  "input": "This can't be the actual answer since it's not an integer, but is the true answer a little bit more or a little bit less?",
  "translatedText": "정수가 아니기 때문에 실제 답이 될 수는 없지만, 정답은 조금 더 많거나 조금 더 적은 것일까요?",
  "model": "DeepL",
  "from_community_srt": "이것은 정수가 아니기 때문에 실제 답이 될 수 없지만, 진답은 조금 많거나 또는 조금 더 적거나 혹은 훨씬 더 많거나 적거나 할 수 있습니다.",
  "n_reviews": 0,
  "start": 222.72,
  "end": 228.2
 },
 {
  "input": "Or maybe it's a lot more or a lot less.",
  "translatedText": "아니면 그보다 훨씬 많거나 적을 수도 있습니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 228.52,
  "end": 230.34
 },
 {
  "input": "What tactics could you possibly use to figure out that error?",
  "translatedText": "이 오류를 파악하기 위해 어떤 전술을 사용할 수 있을까요?",
  "model": "DeepL",
  "from_community_srt": "이 오차를 알아내기 위해 어떤 전술을 사용할 수 있을까요? 분명히 말하지만,",
  "n_reviews": 0,
  "start": 230.6,
  "end": 233.54
 },
 {
  "input": "To be clear, this lesson is definitely much more about the journey than the destination.",
  "translatedText": "분명히 말하지만, 이 강의는 목적지보다는 여정에 더 중점을 두고 있습니다.",
  "model": "DeepL",
  "from_community_srt": "이 수업은 목적지보다는 여정에 관한 것 입니다.",
  "n_reviews": 0,
  "start": 235.68,
  "end": 239.54
 },
 {
  "input": "Will you ever need to filter and count subsets in this way?",
  "translatedText": "이런 식으로 하위 집합을 필터링하고 계산해야 하는 경우가 있나요?",
  "model": "DeepL",
  "from_community_srt": "여러분은 이러한 방식으로 부분집합을 필터링하고 개수를 셀 건가요?",
  "n_reviews": 0,
  "start": 240.26,
  "end": 242.82
 },
 {
  "input": "Almost certainly not, I wouldn't expect so.",
  "translatedText": "거의 확실하게 그렇지 않을 것입니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 243.3,
  "end": 245.16
 },
 {
  "input": "But toy problem or not, it is a legitimately challenging question, and navigating that challenge develops skills that are relevant to other sorts of challenging questions.",
  "translatedText": "하지만 장난감 문제든 아니든, 이 문제는 충분히 도전적인 문제이며, 이 문제를 해결하면 다른 종류의 도전적인 문제와 관련된 기술을 개발할 수 있습니다.",
  "model": "DeepL",
  "from_community_srt": "거의 확실히, 저는 그렇게 생각하지 않습니다. 하지만 장난감 문제이든 아니든, 이것은 합법적으로 도전적인 질문이고, 도전은 다른 종류의 도전적인 질문들과 관련된 기술을 개발합니다.",
  "n_reviews": 0,
  "start": 245.36,
  "end": 254.02
 },
 {
  "input": "For you and me, there are at least two very surprising and very beautiful twists and turns that the solution I'd like to share with you takes.",
  "translatedText": "제가 여러분과 공유하고자 하는 솔루션에는 적어도 두 가지의 매우 놀랍고 아름다운 우여곡절이 있습니다.",
  "model": "DeepL",
  "from_community_srt": "여러분들과 저에겐, 제가 여러분과 나누고자 하는 해결책은 적어도 두 개의 매우 놀랍고, 아름다운 우여곡절이 있습니다.",
  "n_reviews": 0,
  "start": 254.02,
  "end": 260.82
 },
 {
  "input": "I've already tipped my hand that complex numbers will make a surprise appearance, but before we even get to that, there is another strange turn, which is arguably even weirder and even more unexpected.",
  "translatedText": "복소수가 깜짝 등장할 것이라고 이미 예견했지만, 그보다 훨씬 더 이상하고 예상치 못한 또 다른 이상한 반전이 있습니다.",
  "model": "DeepL",
  "from_community_srt": "저는 이미 복소수가 깜짝 등장할 것이라고 알려 주었지만, 우리가 그 과정까지 도달하기 전에 분명히 더 이상하고 예상치 못한 변화가 있습니다.",
  "n_reviews": 0,
  "start": 261.3,
  "end": 270.64
 },
 {
  "input": "To set the stage though, let's just get our bearings with the puzzle, and do what all good problem solvers should do, and start with a simpler example, maybe just trying it with the set 1, 2, 3, 4, 5.",
  "translatedText": "하지만 일단 퍼즐에 대한 이해를 돕기 위해 모든 훌륭한 문제 해결자가 해야 하는 것처럼 1, 2, 3, 4, 5 세트로 시도해 보는 간단한 예부터 시작해 보겠습니다.",
  "model": "DeepL",
  "from_community_srt": "과정을 준비하기 위해서, 퍼즐로 우리의 방향을 잡고, 모든 좋은 문제 해결사들이 해야 할 일을 하고, 더 간단한 예시로 시작합시다. 아마도 {1, 2, 3, 4,",
  "n_reviews": 0,
  "start": 271.3,
  "end": 280.32
 },
 {
  "input": "If you were solving this problem with pencil and paper, you know, you're one of these kids training for the IMO, it's not a bad idea to simply list out all 2 to the 5 subsets.",
  "translatedText": "연필과 종이로 이 문제를 풀고 있다면, 국제해사기구에서 훈련 중인 학생이라면 2~5개의 하위 집합을 모두 나열하는 것도 나쁘지 않습니다.",
  "model": "DeepL",
  "from_community_srt": "5}인 집합으로 함께 해보는 것이 좋을 것 같습니다. 여러분이 연필과 종이로 이 문제를 해결한다면, 여러분도 IMO를 훈련하고 있는 아이들 중 한 명입니다. 단순히 다섯 개의 부분집합을 나열하는 것은 그렇게 많지는 않습니다.",
  "n_reviews": 0,
  "start": 280.98,
  "end": 289.0
 },
 {
  "input": "It's only 32, it's not that many.",
  "translatedText": "32개에 불과해 그리 많지 않습니다.",
  "model": "DeepL",
  "from_community_srt": "32개 뿐이죠.",
  "n_reviews": 0,
  "start": 289.34,
  "end": 291.24
 },
 {
  "input": "There's different ways that you might want to organize all of these in your mind, but since the thing that we care about is their sum, the natural thing to do would be to go through all of them one by one and compute those sums.",
  "translatedText": "이 모든 것을 머릿속으로 정리하는 방법은 여러 가지가 있겠지만, 우리가 신경 쓰는 것은 그 합계이므로 모든 것을 하나씩 살펴보고 그 합계를 계산하는 것이 자연스럽습니다.",
  "model": "DeepL",
  "from_community_srt": "여러분이 이 모든 것을 마음속으로 정리하고 싶을 수 있는 다른 방법들이 있습니다. 하지만 우리가 관심을 갖는 것은 그들의 합이기 때문에, 그 모든 것을하나씩 살펴보고 그 합을 계산하는 것이 자연스러울 것입니다.",
  "n_reviews": 0,
  "start": 295.68,
  "end": 306.04
 },
 {
  "input": "Over here, just doing it on YouTube, I've got a computer, so I'll cheat a little and show what all their sums are.",
  "translatedText": "여기 유튜브에서 하는 건 컴퓨터가 있으니까 조금 속임수를 써서 총액이 얼마인지 보여드리겠습니다.",
  "model": "DeepL",
  "from_community_srt": "여기 유튜브에서 전 컴퓨터를 가지고 있습니다, 제가 편법으로 합이 얼마인지 보여드리겠습니다.",
  "n_reviews": 0,
  "start": 306.52,
  "end": 311.04
 },
 {
  "input": "I'll also cheat a little bit and rearrange all of these, organizing them suggestively into collections that all have the same sum.",
  "translatedText": "또한 약간의 속임수를 써서 이 모든 것을 다시 정렬하여 모두 같은 액수를 가진 컬렉션으로 암시적으로 정리해 보겠습니다.",
  "model": "DeepL",
  "from_community_srt": "저는 또한 약간의 편법을 써서 이 모든 것들을 모두 같은 합을 가진 컬렉션으로 정리할 것입니다.",
  "n_reviews": 0,
  "start": 311.04,
  "end": 317.8
 },
 {
  "input": "For instance, there are 3 distinct subsets that add up to 6, and they'll all sit in this little box, and the 3 subsets adding up to 10 will all live in this little box.",
  "translatedText": "예를 들어, 6을 더하는 3개의 하위 집합이 있다면 이 작은 상자 안에 모두 들어가고, 10을 더하는 3개의 하위 집합이 있다면 이 작은 상자 안에 모두 들어갑니다.",
  "model": "DeepL",
  "from_community_srt": "예를 들어, 합이 6이 되는 세 개의 서로 다른 부분집합이 있습니다. 그리고 이들은 모두 이 작은 상자에 있습니다. 그리고 합이 10이 되는 세 개의 부분 집합은 모두 이 작은 상자에 있습니다.",
  "n_reviews": 0,
  "start": 318.5,
  "end": 326.6
 },
 {
  "input": "And all in all, the ones that we care about, the subsets with a sum divisible by 5, have been put over here on the left, and it looks like there's a total of 8 of them.",
  "translatedText": "그리고 전체적으로 우리가 관심 있는 부분 집합, 즉 합이 5로 나눌 수 있는 부분 집합은 왼쪽에 배치되어 있으며 총 8개가 있는 것처럼 보입니다.",
  "model": "DeepL",
  "from_community_srt": "그리고 우리가 관심을 갖는 합이 5로 나누어지는 부분집합은 여기 왼쪽에 놓였고 총 8개가 있는 것처럼 보입니다.",
  "n_reviews": 0,
  "start": 327.26,
  "end": 335.24
 },
 {
  "input": "Oh, and by the way, I should say we are counting the empty set, we consider its sum to be 0, and we consider that to be a multiple of 5.",
  "translatedText": "아, 그리고 빈 집합을 계산할 때 그 합을 0으로 간주하고 5의 배수로 간주한다고 말해야겠습니다.",
  "model": "DeepL",
  "from_community_srt": "아, 그런데, 공집합을 센다고 해야겠네요. 우리는 그 합을 0으로 간주하고, 5의 배수라고 생각해야 합니다.",
  "n_reviews": 0,
  "start": 336.34,
  "end": 343.52
 },
 {
  "input": "By the end, I hope you'll agree all of those are abundantly natural choices to make.",
  "translatedText": "끝으로, 이 모든 것이 매우 자연스러운 선택이라는 점에 동의해 주셨으면 합니다.",
  "model": "DeepL",
  "from_community_srt": "마지막에는, 이 모든 것들이 아주 자연스러운 선택이라는 것에 동의하길 바랍니다.",
  "n_reviews": 0,
  "start": 343.94,
  "end": 347.34
 },
 {
  "input": "Take a moment to compare this answer to what you might expect heuristically.",
  "translatedText": "잠시 시간을 내어 이 답변과 휴리스틱적으로 예상할 수 있는 답변을 비교해 보세요.",
  "model": "DeepL",
  "from_community_srt": "잠시 시간을 내어 이 답을 여러분이 휴리스틱하게 예측한 것과 비교해 보세요.",
  "n_reviews": 0,
  "start": 348.14,
  "end": 351.26
 },
 {
  "input": "Out of all 32 total subsets, a fifth of that would have been 6.4, so at least in this small example, the true answer is a little bit bigger than that.",
  "translatedText": "전체 32개의 하위 집합 중 5분의 1이 6.4이므로 적어도 이 작은 예제에서는 정답이 이보다 조금 더 큽니다.",
  "model": "DeepL",
  "from_community_srt": "총 32개의 부분 집합 중 5분의 1은 6.4개이므로 이 작은 예에서 적어도 진답은 6.4 보다 조금 더 큽니다.",
  "n_reviews": 0,
  "start": 351.8,
  "end": 360.06
 },
 {
  "input": "That's maybe something you want to talk in the back of your mind.",
  "translatedText": "마음 한구석에 숨겨두고 싶었던 이야기일 수도 있습니다.",
  "model": "DeepL",
  "from_community_srt": "이 결과는 아마도 여러분의 마음 한구석에 넣고 싶을 것입니다.",
  "n_reviews": 0,
  "start": 360.36,
  "end": 362.54
 },
 {
  "input": "Okay, and this is the part of the video where, I'll be honest with you, I have no idea how to motivate it.",
  "translatedText": "솔직히 말씀드리자면 동영상에서 어떻게 동기를 부여해야 할지 모르겠습니다.",
  "model": "DeepL",
  "from_community_srt": "자, 이 부분은 제가 여러분께 솔직히 말씀드리자면, 개인적으로 어떻게 동기부여를 해야 할지 모르겠습니다.",
  "n_reviews": 0,
  "start": 363.72,
  "end": 368.9
 },
 {
  "input": "Personally, I like it when math feels like something you could have discovered yourself, and if you and I were sitting down together solving this problem, I think there's all sorts of natural steps that you might take.",
  "translatedText": "개인적으로 저는 수학이 스스로 발견할 수 있는 것처럼 느껴질 때를 좋아하는데, 여러분과 제가 함께 앉아 이 문제를 풀다 보면 자연스럽게 여러 가지 단계를 밟을 수 있다고 생각합니다.",
  "model": "DeepL",
  "from_community_srt": "저는 수학을 여러분이 스스로 발견할 수 있었던 것처럼 느낄 때를 좋아하고, 만약 여러분과 제가 함께 앉아서 이 문제를 풀고 있다면, 저는 여러분이 취할 수 있는 모든 종류의 자연스러운 단계들이 있다고 생각합니다.",
  "n_reviews": 0,
  "start": 368.9,
  "end": 377.8
 },
 {
  "input": "Maybe you try to understand if there's some sort of structure to the subsets, or you play around with how these sums are distributed mod 5 at many different iterations for other small examples, and from that maybe you try to eke out some kind of proof by induction.",
  "translatedText": "부분집합에 어떤 구조가 있는지 이해하려고 할 수도 있고, 다른 작은 예제에서 여러 반복을 통해 이 합계가 어떻게 5의 배수 분포로 분포되는지 살펴보고, 이를 통해 귀납적으로 어떤 종류의 증명을 도출하려고 할 수도 있습니다.",
  "model": "DeepL",
  "from_community_srt": "여러분이 부분집합에 어떤 구조가 있는지 이해하려고 할 수도 있고, 이 합들이 다른 예시에서도, 어떻게 분배되는지 알고 싶을 수도 있습니다. 그리고 그것으로부터 귀납법을 통해 어떤 종류의 증명을 얻으려고 할 수도 있습니다.",
  "n_reviews": 0,
  "start": 378.24,
  "end": 390.32
 },
 {
  "input": "When I shared an early version of this lesson with some patrons, people brought up some nice linear algebra approaches.",
  "translatedText": "이 강의의 초기 버전을 몇몇 고객과 공유했을 때, 사람들은 멋진 선형 대수 접근법을 제시했습니다.",
  "model": "DeepL",
  "from_community_srt": "제가 이 수업의 초기 버전을 몇몇 후원자들과 공유했을 때, 사람들은 멋진 선형 대수 접근법을 제안했습니다.",
  "n_reviews": 0,
  "start": 391.04,
  "end": 395.4
 },
 {
  "input": "All those are well and good, nothing wrong with those.",
  "translatedText": "이 모든 것이 훌륭하고 좋습니다.",
  "model": "DeepL",
  "from_community_srt": "이 모든 것들은 괜찮고 좋으며,",
  "n_reviews": 0,
  "start": 395.72,
  "end": 397.58
 },
 {
  "input": "But instead, my goal here is to teach you about something called a generating function.",
  "translatedText": "대신 여기서는 생성 함수라는 것에 대해 알려드리고자 합니다.",
  "model": "DeepL",
  "from_community_srt": "문제될 것이 없습니다. 하지만 제 목표는 생성 함수라고 불리는 것을 여러분에게 가르치는 것입니다.",
  "n_reviews": 0,
  "start": 397.58,
  "end": 401.66
 },
 {
  "input": "And it's one of those tactics where after the fact you can think, okay, yeah, I get that this works, but how on earth would you have thought of that?",
  "translatedText": "그리고 사후에 '그래, 이게 효과가 있다는 건 알겠는데 도대체 어떻게 그런 생각을 했을까'라고 생각할 수 있는 전술 중 하나입니다.",
  "model": "DeepL",
  "from_community_srt": "그리고 이것은 여러분이 생각할 수 있는 전술 중 하나입니다. 좋아요, 저는 이것이 효과가 있다는 것을 알지만, 여러분은 어떻게 생각하나요? 솔직히,",
  "n_reviews": 0,
  "start": 402.12,
  "end": 409.16
 },
 {
  "input": "Honestly, I don't know.",
  "translatedText": "솔직히 잘 모르겠습니다.",
  "model": "DeepL",
  "from_community_srt": "저도 모릅니다.",
  "n_reviews": 0,
  "start": 409.92,
  "end": 411.14
 },
 {
  "input": "There's a time in your life before you understand generating functions, and a time after, and I can't think of anything that connects them other than a leap of faith.",
  "translatedText": "생성 함수를 이해하기 전의 시기와 그 이후의 시기가 있는데, 이 두 시기를 연결하는 것은 비약적인 발전 외에는 생각할 수 없습니다.",
  "model": "DeepL",
  "from_community_srt": "여러분의 삶에는 생성함수를 이해하기 전, 그리고 그 후의 시간이 있습니다. 그리고 저는 믿음의 도약 이외에는 그것들을 연결하는 어떤 것도 생각할 수 없습니다.",
  "n_reviews": 0,
  "start": 411.42,
  "end": 418.48
 },
 {
  "input": "I'm going to ask you to consider the polynomial 1 plus x times 1 plus x squared times 1 plus x cubed times 1 plus x to the fourth times 1 plus x to the fifth.",
  "translatedText": "다항식 1 더하기 x 곱하기 1 더하기 x 제곱하기 1 더하기 x 세제곱하기 1 더하기 x 곱하기 1 더하기 x 네 번째에서 다섯 번째까지를 고려해 보겠습니다.",
  "model": "DeepL",
  "from_community_srt": "저는 여러분에게 (1+𝒙)(1+𝒙²)(1+𝒙³)(1+𝒙⁴)(1+𝒙⁵) 인 다항식을 물어볼 겁니다. 이제 저는 여러분이 이게 어디서 왔는지에 대해서 물어볼 것을 압니다.",
  "n_reviews": 0,
  "start": 419.38,
  "end": 428.58
 },
 {
  "input": "Now, I know you could rightfully ask, where does this come from?",
  "translatedText": "이제, 이게 어디서 온 거냐고 당연히 물어보실 수도 있겠죠?",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 428.98,
  "end": 431.54
 },
 {
  "input": "What do polynomials have to do with things?",
  "translatedText": "다항식은 사물과 어떤 관련이 있을까요?",
  "model": "DeepL",
  "from_community_srt": "다항식이 이것과 무슨 상관일까요?",
  "n_reviews": 0,
  "start": 431.58,
  "end": 433.16
 },
 {
  "input": "What is the variable x even supposed to represent right now?",
  "translatedText": "지금 변수 X는 무엇을 나타내야 할까요?",
  "model": "DeepL",
  "from_community_srt": "변수 𝒙는 지금 무엇을 나타내야 할까요?",
  "n_reviews": 0,
  "start": 433.52,
  "end": 436.34
 },
 {
  "input": "And essentially x is purely a symbol.",
  "translatedText": "그리고 기본적으로 X는 순전히 기호일 뿐입니다.",
  "model": "DeepL",
  "from_community_srt": "기본적으로 𝒙는 순전히 기호입니다.",
  "n_reviews": 0,
  "start": 437.16,
  "end": 439.12
 },
 {
  "input": "The only reason that we've written a polynomial here is that the act of algebraically expanding it is going to completely mirror the act of constructing subsets.",
  "translatedText": "여기서 다항식을 작성한 유일한 이유는 대수적으로 다항식을 확장하는 행위가 부분집합을 구성하는 행위와 완전히 일치하기 때문입니다.",
  "model": "DeepL",
  "from_community_srt": "여기서 다항식을 쓰는 유일한 이유는 대수적으로 확장되는 93 동작이 부분집합을 구성하는 동작을 완전히 반영하기 때문입니다.",
  "n_reviews": 0,
  "start": 439.44,
  "end": 448.3
 },
 {
  "input": "And, importantly, this grouping that we want, where subsets with the same sum are all bunched together, kind of happens automatically when you do this.",
  "translatedText": "그리고 중요한 것은 합이 같은 하위 집합이 모두 함께 묶이는 우리가 원하는 그룹화가 이 작업을 수행하면 자동으로 이루어진다는 점입니다.",
  "model": "DeepL",
  "from_community_srt": "그리고 중요한 것은, 같은 합을 가진 부분집합들이 모두 뭉쳐져 있는 이 그룹입니다.",
  "n_reviews": 0,
  "start": 448.3,
  "end": 456.98
 },
 {
  "input": "And let me show you what I mean.",
  "translatedText": "제가 무슨 뜻인지 보여드리겠습니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 457.4,
  "end": 458.44
 },
 {
  "input": "When you expand out this expression, it basically comes down to making five binary choices.",
  "translatedText": "이 표현을 확장하면 기본적으로 다섯 가지 이진 선택을 하는 것으로 귀결됩니다.",
  "model": "DeepL",
  "from_community_srt": "이건 제가 무슨 뜻인지 보여드리겠습니다. 이 표현을 전개하면 기본적으로 5개의 이진 선택으로 요약됩니다.",
  "n_reviews": 0,
  "start": 459.02,
  "end": 463.52
 },
 {
  "input": "Which term from each parenthetical do you choose?",
  "translatedText": "각 괄호 안의 용어 중 어떤 용어를 선택하시겠습니까?",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 463.8,
  "end": 465.8
 },
 {
  "input": "If you choose the 1 from each of those parentheticals, that will correspond to the empty set where we don't choose any of the elements.",
  "translatedText": "각 괄호에서 1을 선택하면 요소를 선택하지 않은 빈 집합에 해당합니다.",
  "model": "DeepL",
  "from_community_srt": "각 괄호 안에서 어떤 항을 선택할까요? 만약 여러분이 각각의 괄호 안에서 1를 선택한다면, 그것은 어떤 원소도 선택하지 않은 공집합에 해당할 것입니다.",
  "n_reviews": 0,
  "start": 466.6,
  "end": 473.26
 },
 {
  "input": "Whereas if I choose the x to the 1 term and then ones from everything else, that will correspond to the singleton set that just contains the number 1.",
  "translatedText": "반면, 1항에서 X를 선택한 다음 다른 모든 항에서 1을 선택하면 숫자 1만 포함된 싱글톤 집합에 해당합니다.",
  "model": "DeepL",
  "from_community_srt": "반면에, 만약 제가 𝒙를 하나의 항으로 선택하고 다른 모든 항에서 1을 선택한다면, 그것은 숫자 1을 포함하는 한원소 집합과 대응할 것입니다.",
  "n_reviews": 0,
  "start": 473.98,
  "end": 481.54
 },
 {
  "input": "Similarly, if I choose the x squared term but ones from everything else, that corresponds to the set just containing 2.",
  "translatedText": "마찬가지로, X 제곱 항을 다른 모든 항에서 선택하면 2가 포함된 집합에 해당합니다.",
  "model": "DeepL",
  "from_community_srt": "마찬가지로, 𝒙² 항을 선택하고, 다른 모든 항에서 1을 선택하면 2만 포함된 집합에 해당합니다.",
  "n_reviews": 0,
  "start": 482.2,
  "end": 488.0
 },
 {
  "input": "Just choosing the x cubed term corresponds to the set just containing the number 3.",
  "translatedText": "x제곱항을 선택하기만 하면 숫자 3이 포함된 집합에 해당합니다.",
  "model": "DeepL",
  "from_community_srt": "𝒙³ 항을 선택하는 것은 숫자 3을 포함하는 집합에 해당합니다.",
  "n_reviews": 0,
  "start": 488.52,
  "end": 492.32
 },
 {
  "input": "But, interestingly, notice what happens if I choose the x to the 1 term and the x squared term and then ones from everything else.",
  "translatedText": "하지만 흥미롭게도 1항과 x제곱항을 선택한 다음 다른 모든 항에서 x를 선택하면 어떻게 되는지 살펴보세요.",
  "model": "DeepL",
  "from_community_srt": "하지만 흥미롭게도, 제가 𝒙¹항, 𝒙²항, 그리고 다른 모든 항에서 1을 선택하면 어떻게 되는지 보세요.",
  "n_reviews": 0,
  "start": 493.1,
  "end": 499.8
 },
 {
  "input": "This corresponds to the choice of the subset that has 1 and 2 and nothing from everything else.",
  "translatedText": "이것은 1과 2가 있고 다른 모든 것에서 아무것도 없는 하위 집합을 선택하는 것에 해당합니다.",
  "model": "DeepL",
  "from_community_srt": "이것은 {1, 2}인 부분집합과 대응하고 다른 모든 것들로부터 대응하지 않습니다.",
  "n_reviews": 0,
  "start": 500.28,
  "end": 505.38
 },
 {
  "input": "But in the polynomial, the way it expands looks like x cubed.",
  "translatedText": "하지만 다항식에서는 확장하는 방식이 x입방체처럼 보입니다.",
  "model": "DeepL",
  "from_community_srt": "하지만 다항식에서는 전개하면 𝒙³처럼 보입니다.",
  "n_reviews": 0,
  "start": 505.38,
  "end": 510.12
 },
 {
  "input": "So we have two different x cubed terms, each of which came from a subset whose sum was 3.",
  "translatedText": "따라서 합이 3인 하위 집합에서 나온 두 개의 서로 다른 x 제곱 항이 있습니다.",
  "model": "DeepL",
  "from_community_srt": "그래서 우리는 두 개의 다른 𝒙³항을 가지고 있는데, 각각의 항은 합이 3인 부분집합에서 나온 것입니다.",
  "n_reviews": 0,
  "start": 510.26,
  "end": 515.36
 },
 {
  "input": "And honestly, the pattern that I'm going for here is one that's probably easiest if you just take the time to pause and think through for yourself what happens when you expand everything here.",
  "translatedText": "솔직히 제가 여기서 추구하는 패턴은 여기서 모든 것을 확장할 때 어떤 일이 일어나는지 잠시 멈춰서 생각해 보는 시간을 가지면 가장 쉽게 이해할 수 있는 패턴입니다.",
  "model": "DeepL",
  "from_community_srt": "그리고 솔직히, 제가 여기서 하는 것은 아마도 가장 쉬운 패턴일 것입니다. 만약 여러분이 시간을 내서 여기서 모든 것을 전개했을 때 어떤 일이 일어나는지 스스로 생각해 보세요.",
  "n_reviews": 0,
  "start": 516.08,
  "end": 524.06
 },
 {
  "input": "Essentially, every possible subset corresponds to one of the terms in this expansion.",
  "translatedText": "기본적으로 가능한 모든 하위 집합은 이 확장의 용어 중 하나에 해당합니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 524.66,
  "end": 529.02
 },
 {
  "input": "And then the critical point is that the exponent in the term that you get from that expansion equals the sum of that corresponding subset.",
  "translatedText": "그리고 중요한 점은 그 확장으로부터 얻는 항의 지수가 해당 하위 집합의 합과 같다는 것입니다.",
  "model": "DeepL",
  "from_community_srt": "기본적으로 모든 가능한 부분집합은 이 전개식의 항 중 하나에 대응하며, 중요한 것은 해당 전개에서 얻은 항에서의 지수가 해당 부분집합의 합과 같다는 것입니다. 큰 소리로 말할 때는 좀 헷갈리지만,",
  "n_reviews": 0,
  "start": 529.68,
  "end": 536.94
 },
 {
  "input": "Kind of confusing when you say it out loud, but again if you just kind of think it through yourself I think you can see what I mean.",
  "translatedText": "큰 소리로 말하면 다소 혼란스러울 수 있지만, 다시 한번 생각해 보면 무슨 말인지 알 수 있을 것입니다.",
  "model": "DeepL",
  "from_community_srt": "다시 한 번 생각해보면 제 말이 무슨 뜻인지 알 수 있을 것 같습니다.",
  "n_reviews": 0,
  "start": 537.6,
  "end": 542.28
 },
 {
  "input": "For example, when all of the dust settles and we collect all 32 terms here, three of those terms are x to the 10th, and each of those came from a choice of elements whose sum was equal to 10.",
  "translatedText": "예를 들어, 모든 먼지가 가라앉고 여기에 32개의 항을 모두 모으면 그 중 3개의 항이 10번째 항이고, 그 각각은 합이 10인 원소를 선택한 것에서 나온 것입니다.",
  "model": "DeepL",
  "from_community_srt": "예를 들어, 모든 일이 끝나고, 32개의 항을 모두 모으면, 이 항들 중 3개는 𝒙¹⁰ 항이며, 각 항은 합이 10인 원소의 선택에서 나온 것입니다.",
  "n_reviews": 0,
  "start": 542.62,
  "end": 553.52
 },
 {
  "input": "Now normally when we write a polynomial, we collect together all like terms.",
  "translatedText": "일반적으로 다항식을 작성할 때는 같은 항을 모두 모아서 작성합니다.",
  "model": "DeepL",
  "from_community_srt": "보통 다항식을 쓸 때,",
  "n_reviews": 0,
  "start": 554.54,
  "end": 558.4
 },
 {
  "input": "Instead of having three copies of x to the 10th, we would just see the coefficient 3 in front of x to the 10th.",
  "translatedText": "x에서 10번째까지 세 개의 복사본이 있는 대신, x에서 10번째까지 앞에 계수 3이 표시될 것입니다.",
  "model": "DeepL",
  "from_community_srt": "우리는 모두 같은 항을 모아서 세 개의 𝒙¹⁰의 복사본을 보는 대신 𝒙¹⁰ 앞에 있는 계수 3을 보게 됩니다.",
  "n_reviews": 0,
  "start": 558.68,
  "end": 564.44
 },
 {
  "input": "So each of these coefficients is a way of encoding the number of subsets with a particular sum.",
  "translatedText": "따라서 이러한 각 계수는 특정 합을 가진 하위 집합의 수를 인코딩하는 방법입니다.",
  "model": "DeepL",
  "from_community_srt": "따라서 이러한 각 계수는 특정 합이 있는 부분집합의 수를 표현하는 방법입니다.",
  "n_reviews": 0,
  "start": 564.44,
  "end": 569.64
 },
 {
  "input": "So this, like I said at the start, is an example of something called a generating function, where the idea is if you have some question with an answer associated with each positive integer, so in our case how many subsets add up to a particular value.",
  "translatedText": "처음에 말씀드린 것처럼 이것은 생성 함수라는 것의 예시로, 각각의 양의 정수와 관련된 답이 있는 질문이 있을 때, 즉 우리의 경우 특정 값에 몇 개의 부분 집합이 합산되는지를 계산하는 것입니다.",
  "model": "DeepL",
  "from_community_srt": "이것은 제가 처음에 말씀드린 것처럼, 생성 함수라고 불리는 것의 한 예시입니다. 여기서 아이디어는 각각의 양의 정수와 관련된 답을 가진 질문을 하는 것입니다. 그렇다면, 우리의 경우,",
  "n_reviews": 0,
  "start": 570.46,
  "end": 582.9
 },
 {
  "input": "When you construct a polynomial whose coefficients correspond to the answers to that question, you can get a surprising amount of insight from your original question by mathematically manipulating and analyzing the properties of this polynomial.",
  "translatedText": "해당 질문에 대한 답에 해당하는 계수를 가진 다항식을 만들면, 이 다항식의 속성을 수학적으로 조작하고 분석하여 원래 질문에서 놀랄 만큼 많은 통찰력을 얻을 수 있습니다.",
  "model": "DeepL",
  "from_community_srt": "몇 개의 부분집합이 특정 값에 더해질까요? 그 질문에 대한 답변에 대응하는 계수를 가진 다항식을 구성할 때, 이 다항식의 속성을 수학적으로 조작하고 분석함으로써 원래의 질문으로부터 놀라운 양의 통찰력을 얻을 수 있습니다.",
  "n_reviews": 0,
  "start": 583.48,
  "end": 596.1
 },
 {
  "input": "There are tons and tons of examples of generating functions, but just to bring up one other one which is especially fun, you can use the same idea to study Fibonacci numbers.",
  "translatedText": "함수 생성의 예는 무수히 많지만, 특히 재미있는 예 하나를 소개하자면 피보나치 수를 공부할 때 같은 아이디어를 사용할 수 있습니다.",
  "model": "DeepL",
  "from_community_srt": "함수를 생성하는 예는 많고 많지만, 특히 재미있는 것은 같은 아이디어를 사용하여 피보나치 수를 연구할 수 있으므로",
  "n_reviews": 0,
  "start": 596.66,
  "end": 604.9
 },
 {
  "input": "So all the coefficients of this polynomial will be Fibonacci numbers, and in this case it's an infinite polynomial, so I should really be calling it a power series.",
  "translatedText": "따라서 이 다항식의 모든 계수는 피보나치 수이며, 이 경우 무한 다항식이므로 실제로는 거듭제곱이라고 불러야 합니다.",
  "model": "DeepL",
  "from_community_srt": "이 다항식의 모든 계수를 피보나치 수로 만드는 것입니다. 그리고, 이 경우, 이것은 무한 다항식이기 때문에, 저는 이것을 멱급수라고 불러야 합니다.",
  "n_reviews": 0,
  "start": 605.34,
  "end": 612.82
 },
 {
  "input": "I won't fully explain the details here, but I will leave them up on the screen for anyone who's curious.",
  "translatedText": "자세한 내용은 여기서 자세히 설명하지 않겠지만 궁금해하는 분들을 위해 화면에 남겨두겠습니다.",
  "model": "DeepL",
  "from_community_srt": "자세한 건 여기서 설명하지 않고 궁금하신 분들을 위해서 화면에 남겨두겠습니다.",
  "n_reviews": 0,
  "start": 613.52,
  "end": 617.86
 },
 {
  "input": "Basic idea is that the rule that's used to define Fibonacci numbers, each one being the sum of the previous two, can be expressed as an equation in terms of this function.",
  "translatedText": "기본 개념은 피보나치 수를 정의하는 데 사용되는 규칙(각 피보나치 수는 앞의 두 개의 합)을 이 함수의 관점에서 방정식으로 표현할 수 있다는 것입니다.",
  "model": "DeepL",
  "from_community_srt": "기본 아이디어는 피보나치 수를 정의하는 데 사용되는 규칙이 이 함수의 관점에서 방정식으로 표현될 수 있다는 것입니다.",
  "n_reviews": 0,
  "start": 618.22,
  "end": 626.82
 },
 {
  "input": "That equation in turn lets you write that function in an alternate form.",
  "translatedText": "이 방정식을 통해 해당 함수를 다른 형식으로 작성할 수 있습니다.",
  "model": "DeepL",
  "from_community_srt": "이 방정식을 사용하면 해당 함수를 대체 형식으로 작성할 수 있습니다.",
  "n_reviews": 0,
  "start": 627.58,
  "end": 631.2
 },
 {
  "input": "And then, and here's most of the details I'm skipping over, if you manipulate that, you know, throw in a little partial fraction decomposition here, a little bit of geometric series power expansion there, you can get yourself an exact closed form expression for each individual Fibonacci number, which is really cool.",
  "translatedText": "그리고 여기서는 대부분의 세부 사항은 생략하지만, 여기에 약간의 부분 분수 분해, 저기에 약간의 기하급수 거듭제곱 확장을 넣으면 각 개별 피보나치 수에 대한 정확한 폐형식을 얻을 수 있습니다. 정말 멋지죠.",
  "model": "DeepL",
  "from_community_srt": "그리고 다음은 제가 건너뛰는 대부분의 세부정보입니다. 알고 있는 부분을 조작하는 경우 여기에 약간의 기하급수에 지수의 확장을 사용하면 각 개별 피보나치 수에 대해 정확한 닫힌 표현 형식을 얻을 수 있습니다. 정말 멋지죠.",
  "n_reviews": 0,
  "start": 632.18,
  "end": 647.02
 },
 {
  "input": "I mentioned this really just to show the tip of the iceberg of the fact that this idea of a generating function goes way, way beyond our particular example.",
  "translatedText": "저는 이 예시를 통해 생성 함수에 대한 아이디어가 우리의 특정 예시를 훨씬 뛰어넘는다는 사실을 빙산의 일각에 불과하다는 것을 보여드리기 위해 언급했습니다.",
  "model": "DeepL",
  "from_community_srt": "저는 이것을 빙산의 일각에서 보여드리기 위해 언급했습니다. 생성 함수의 개념은 우리의 특정한 예시보다 훨씬 뛰어넘는다는 사실입니다.",
  "n_reviews": 0,
  "start": 647.58,
  "end": 655.26
 },
 {
  "input": "Now, in our particular problem, if we extend from the simple example with just 12345 to the big example with all the numbers up to 2000, our corresponding generating function involves these 2000 different binomial terms, you know, 1 plus x, 1 plus x squared, on and on, up to 1 plus x to the 2000.",
  "translatedText": "이제 특정 문제에서 12345만 있는 간단한 예제에서 최대 2000까지의 모든 숫자가 있는 큰 예제로 확장하면 해당 생성 함수에는 1 더하기 x, 1 더하기 x 제곱 등 2000개의 서로 다른 이항 항, 즉 1 더하기 x에서 2000까지의 항이 포함됩니다.",
  "model": "DeepL",
  "from_community_srt": "이제 우리의 특정 문제에서 {1, 2, 3, 4, 5}가 있는 간단한 예제에서 최대 2,000까지의 모든 숫자가 있는 큰 예제로 확장하면 해당 생성 함수에는 이러한 2,000개의 서로 다른 항이 포함됩니다.",
  "n_reviews": 0,
  "start": 656.46,
  "end": 673.5
 },
 {
  "input": "And the idea is that if you were to expand this, the coefficients tell us all the information we want.",
  "translatedText": "그리고 이것을 확장하면 계수가 우리가 원하는 모든 정보를 알려준다는 아이디어가 있습니다.",
  "model": "DeepL",
  "from_community_srt": "(1+𝒙)(1+𝒙²)...(1+𝒙²⁰⁰⁰) 처럼요 그리고 이 아이디어는 만약 여러분이 식을 전개한다면, 계수는 우리가 원하는 모든 정보를 우리에게 알려준다는 것입니다.",
  "n_reviews": 0,
  "start": 673.5,
  "end": 679.56
 },
 {
  "input": "Now, it would be insane to actually expand it, but it is helpful to keep in the back of your mind, in principle, what that would look like.",
  "translatedText": "실제로 확장하는 것은 미친 짓이지만, 원칙적으로 어떤 모습일지 마음 한구석에 담아두는 것이 도움이 될 것입니다.",
  "model": "DeepL",
  "from_community_srt": "자, 실제로 그것을 전개하는 것은 미친 짓이겠지만, 원칙적으로 그것이 어떻게 보일지 여러분의 마음 한구석에 새겨두는 것이 도움이 됩니다.",
  "n_reviews": 0,
  "start": 680.06,
  "end": 686.4
 },
 {
  "input": "For example, in principle, if you expanded it, you would find that the coefficient in front of the x to the 25th term happens to be 142.",
  "translatedText": "예를 들어, 원칙적으로 이를 확장하면 25차 항에 대한 X 앞의 계수가 142가 된다는 것을 알 수 있습니다.",
  "model": "DeepL",
  "from_community_srt": "예를 들어, 원칙적으로 식을 전개한 경우 𝒙²⁵ 항의 계수가 142라는 것을 알 수 있으며,",
  "n_reviews": 0,
  "start": 686.8,
  "end": 694.6
 },
 {
  "input": "And this corresponds to the fact that there are 142 distinct subsets that have a sum of 25.",
  "translatedText": "그리고 이것은 합이 25인 142개의 서로 다른 하위 집합이 있다는 사실에 해당합니다.",
  "model": "DeepL",
  "from_community_srt": "이는 합이 25인 142개의 서로 다른 부분집합이 있다는 사실과 대응합니다. 그래서,",
  "n_reviews": 0,
  "start": 695.52,
  "end": 701.64
 },
 {
  "input": "So the art of analyzing a generating function here will be to deduce facts about these coefficients without actually expanding the expression.",
  "translatedText": "따라서 여기서 생성 함수를 분석하는 기술은 식을 실제로 확장하지 않고도 이러한 계수에 대한 사실을 추론하는 것입니다.",
  "model": "DeepL",
  "from_community_srt": "여기서 생성 함수를 분석하는 기술은 실제로 식을 전개하지 않고 이러한 계수를 추론하는 것입니다.",
  "n_reviews": 0,
  "start": 702.28,
  "end": 711.2
 },
 {
  "input": "So moving forward, I'm just going to write this expansion more abstractly, just a sum from n equals 0 up to capital N, where c sub n tells us the coefficients that we don't know.",
  "translatedText": "이제부터는 이 확장을 좀 더 추상적으로 써보겠습니다. n은 0부터 대문자 N까지의 합으로, 여기서 c는 우리가 모르는 계수를 알려주는 하위 계수입니다.",
  "model": "DeepL",
  "from_community_srt": "앞으로 나아가서, 이 전개를 좀 더 추상적으로 쓰려고 합니다. 𝒏=0에서 대문자 𝑵까지의 합으로 말이죠. 여기서 𝒄_𝒏은 우리가 모르는 계수를 알려 줍니다.",
  "n_reviews": 0,
  "start": 715.88,
  "end": 725.52
 },
 {
  "input": "All of that starts off as a black box to us.",
  "translatedText": "이 모든 것이 블랙박스로 시작됩니다.",
  "model": "DeepL",
  "from_community_srt": "이 모든 것은 우리에게 블랙박스로 시작됩니다.",
  "n_reviews": 0,
  "start": 725.88,
  "end": 728.06
 },
 {
  "input": "And moving forward, we're going to start treating this as an actual function, something where we plug in x, we see what the output is, and then we ask, what does that tell us about the coefficients?",
  "translatedText": "그리고 앞으로는 이것을 실제 함수로 취급하기 시작할 것입니다. x를 입력하고 출력이 무엇인지 확인한 다음 계수에 대해 무엇을 알려주는지 물어볼 것입니다.",
  "model": "DeepL",
  "from_community_srt": "그리고 앞으로 나아가, 우리는 이것을 실제 함수로 다루기 시작할 것입니다. 𝒙를 대입하면 값이 무엇인지 알 수 있습니다. 그런 다음 이 값이 계수에 대해 무엇을 알려줄까요?",
  "n_reviews": 0,
  "start": 728.36,
  "end": 736.44
 },
 {
  "input": "For example, a very easy input would be to plug in something like x equals 0.",
  "translatedText": "예를 들어, 아주 쉽게 입력할 수 있는 것은 'x = 0'과 같이 입력하는 것입니다.",
  "model": "DeepL",
  "from_community_srt": "예를 들어, 매우 쉬운 입력은 𝒙가 0일 때 입니다.",
  "n_reviews": 0,
  "start": 737.06,
  "end": 740.62
 },
 {
  "input": "In that case, importantly, we know how to evaluate it using the factored form above.",
  "translatedText": "이 경우 중요한 것은 위의 팩터링 형식을 사용하여 평가하는 방법을 알고 있다는 것입니다.",
  "model": "DeepL",
  "from_community_srt": "이 경우 중요한 것은 위의 인수분해 형식을 사용하여 계산하는 방법을 알고 있다는 것입니다.",
  "n_reviews": 0,
  "start": 741.12,
  "end": 745.1
 },
 {
  "input": "If you plug in x equals 0 for everything, all of the terms look like 1, so the answer is 1.",
  "translatedText": "모든 항목에 x를 0으로 연결하면 모든 항이 1처럼 보이므로 답은 1이 됩니다.",
  "model": "DeepL",
  "from_community_srt": "𝒙=0을 대입하면 모든 항이 1과 같으므로 답은 1입니다.",
  "n_reviews": 0,
  "start": 745.38,
  "end": 750.02
 },
 {
  "input": "And in the expanded form, all of those terms involving an x will get killed, they go to 0, leaving us just with the first term, c sub 0.",
  "translatedText": "그리고 확장된 형태에서는 X가 포함된 모든 항이 사라지고 0이 되어 첫 번째 항인 c sub 0만 남게 됩니다.",
  "model": "DeepL",
  "from_community_srt": "그리고 전개된 형태에서 𝒙와 관련된 모든 항이 제거되고, 즉, 0이 되고 첫 번째 항 𝒄_0만 남습니다. 자,",
  "n_reviews": 0,
  "start": 750.36,
  "end": 757.02
 },
 {
  "input": "Now, in this case, that doesn't really tell us anything all that exciting.",
  "translatedText": "이 경우에는 그다지 흥미롭지 않습니다.",
  "model": "DeepL",
  "from_community_srt": "이 경우, 그것이 우리에게 그렇게 흥미로운 것을 말해주는 것은 아닙니다.",
  "n_reviews": 0,
  "start": 757.8,
  "end": 760.6
 },
 {
  "input": "It essentially translates to saying there is a single empty set, but we're just getting our feet wet.",
  "translatedText": "이는 기본적으로 하나의 빈 세트가 있다는 뜻이지만, 이제 막 발을 담그고 있다는 의미로 해석할 수 있습니다.",
  "model": "DeepL",
  "from_community_srt": "그것은 본질적으로 하나의 공집합이 있다는 것을 의미하지만, 우리는 단지 우리의 발을 적시고 있다는 것을 의미합니다.",
  "n_reviews": 0,
  "start": 760.6,
  "end": 765.6
 },
 {
  "input": "As the next example, take a moment to think about evaluating f at 1.",
  "translatedText": "다음 예로, f를 1로 평가하는 것에 대해 잠시 생각해 보세요.",
  "model": "DeepL",
  "from_community_srt": "다음 예시로, 𝒇를 한번에 알아내는 방법에 대해 생각해 봅시다.",
  "n_reviews": 0,
  "start": 766.04,
  "end": 769.64
 },
 {
  "input": "This is something we can do with the expression we know, when you plug in 1 for all of these x's, every term looks like a 2, so in total, we get 2 multiplied by itself 2,000 times.",
  "translatedText": "이 모든 X에 1을 꽂으면 모든 항이 2처럼 보이므로 총 2에 2를 2,000배 곱한 값이 나오는 식을 사용하면 됩니다.",
  "model": "DeepL",
  "from_community_srt": "이것은 우리가 알고 있는 표현으로 우리가 할 수 있는 것입니다. 이 𝒙의 모든 항에 1을 대입하면 모든 항은 2가 됩니다. 그래서 결과적으로 우리는 2를 2000번 곱하게 됩니다.",
  "n_reviews": 0,
  "start": 770.46,
  "end": 780.2
 },
 {
  "input": "On the other hand, in the expanded expression, if you plug in x equals 1, all of these powers of x go to 1, so we're essentially adding up all of the coefficients, which is pretty cool when you think about it.",
  "translatedText": "반면에 확장된 식에서 x를 1로 연결하면 이 모든 x의 거듭제곱이 1이 되므로 본질적으로 모든 계수를 더하는 것이므로 생각해보면 꽤 멋집니다.",
  "model": "DeepL",
  "from_community_srt": "반면에, 전개된 형식에서 𝒙에 1을 대입하면 𝒙의 모든 거듭제곱은 1이 됩니다. 그래서 우리는 기본적으로 모든 계수를 더합니다. 생각해보면 아주 멋진데요,",
  "n_reviews": 0,
  "start": 780.72,
  "end": 791.46
 },
 {
  "input": "Just by evaluating the function at a single number, we can deduce what the sum of all of the coefficients are.",
  "translatedText": "함수를 하나의 숫자로 평가하는 것만으로도 모든 계수의 합이 무엇인지 추론할 수 있습니다.",
  "model": "DeepL",
  "from_community_srt": "함수를 하나의 숫자로 계산하면 모든 계수의 합이 얼마인지 추론할 수 있습니다.",
  "n_reviews": 0,
  "start": 791.74,
  "end": 797.16
 },
 {
  "input": "Now, again, in our particular example, it's not all that exciting, because we already know what the sum of these coefficients are.",
  "translatedText": "특정 예제에서는 이러한 계수의 합이 무엇인지 이미 알고 있기 때문에 그다지 흥미롭지 않습니다.",
  "model": "DeepL",
  "from_community_srt": "자, 다시 말씀드리지만, 이 예에서는 그다지 흥미로운 것은 아닙니다. 왜냐하면 우리는 이미 이 계수들의 합이 얼마인지 알고 있기 때문입니다.",
  "n_reviews": 0,
  "start": 797.68,
  "end": 804.46
 },
 {
  "input": "Remember, each coefficient counts how many subsets have a certain sum, and so when you add them up, we're just counting all of the subsets, which we know to be 2 to the 2,000.",
  "translatedText": "각 계수는 특정 합을 가진 하위 집합의 수를 계산하므로, 계수를 더하면 2에서 2,000까지의 모든 하위 집합을 세는 것입니다.",
  "model": "DeepL",
  "from_community_srt": "각 계수는 특정 합을 갖는 부분집합의 수를 센다는 것을 기억하세요. 따라서 이들을 더하면 2²⁰⁰⁰개인 부분 집합의 수를 모두 세는 것입니다.",
  "n_reviews": 0,
  "start": 804.96,
  "end": 813.32
 },
 {
  "input": "However, I can give you a genuinely new fact if I ask you to evaluate this function at negative 1.",
  "translatedText": "하지만 이 함수를 음수 1로 평가해 달라고 요청하면 정말 새로운 사실을 알려드릴 수 있습니다.",
  "model": "DeepL",
  "from_community_srt": "하지만 이 함수를 -1로 계산한다면 정말 새로운 사실을 알 수 있습니다.",
  "n_reviews": 0,
  "start": 814.22,
  "end": 819.32
 },
 {
  "input": "Take a moment to think about what that means.",
  "translatedText": "잠시 시간을 내어 그 의미를 생각해 보세요.",
  "model": "DeepL",
  "from_community_srt": "이 함수가 무엇을 의미하는지 잠시 생각해 봅시다.",
  "n_reviews": 0,
  "start": 819.72,
  "end": 821.22
 },
 {
  "input": "If you plug in negative 1, again, we start with the thing we know, the factored expression up top, and here, all you need is to look at the first term.",
  "translatedText": "음수 1을 연결하면 다시 우리가 알고 있는 것, 즉 상단의 인수분해 식부터 시작하고 여기서는 첫 번째 항을 보기만 하면 됩니다.",
  "model": "DeepL",
  "from_community_srt": "-1을 대입하면 다시 우리가 알고 있는 것부터 시작하면, 인수분해된 표현식이 맨 위에 있고, 여기서 필요한 것은 𝒙를 대입할 때 첫 번째 항을 보는 것뿐입니다.",
  "n_reviews": 0,
  "start": 823.34,
  "end": 830.1
 },
 {
  "input": "When you plug in x, the first parenthetical goes to 0, so the whole expression has to be 0.",
  "translatedText": "x를 입력하면 첫 번째 괄호는 0이 되므로 전체 식은 0이어야 합니다.",
  "model": "DeepL",
  "from_community_srt": "첫 번째 괄호는 0이 되므로 전체 표현식은 0이어야 합니다.",
  "n_reviews": 0,
  "start": 830.44,
  "end": 835.06
 },
 {
  "input": "But what does that tell you when we apply it to the expanded expression, using all of the coefficients?",
  "translatedText": "하지만 모든 계수를 사용하여 확장된 식에 적용하면 어떤 결과가 나올까요?",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 835.64,
  "end": 840.22
 },
 {
  "input": "And in the spirit of being as suggestive as possible of the strange turns that this solution takes, I want you to really visualize the various powers of negative 1 in this expression in terms of rotations.",
  "translatedText": "그리고 이 솔루션이 취하는 이상한 회전을 최대한 암시하기 위해, 이 식에서 음수 1의 다양한 거듭제곱을 회전의 관점에서 시각화해 보셨으면 합니다.",
  "model": "DeepL",
  "from_community_srt": "하지만 모든 계수를 사용하는 전개된 표현식에 적용할 때 이는 무엇을 알게될까요? 그리고 이 해법이 취하는 이상한 관점을 최대한 암시적으로 나타내기 위해, 이 표현식에서 회전의 관점으로 여러번의 -1 거듭제곱을 실제로 시각화하기를 바랍니다. 첫 번째 항은 (-1)⁰으로,",
  "n_reviews": 0,
  "start": 840.72,
  "end": 850.92
 },
 {
  "input": "The first term, negative 1 to the 0, is just 1, which we'll picture as a vector from 0 to 1.",
  "translatedText": "첫 번째 항인 0에 대한 음수 1은 0에서 1까지의 벡터로 그려볼 수 있습니다.",
  "model": "DeepL",
  "from_community_srt": "우리는 0에서 1까지의 벡터로 그릴 것입니다.",
  "n_reviews": 0,
  "start": 851.46,
  "end": 856.0
 },
 {
  "input": "Then negative 1 to the first power is just negative 1 itself, which I want you to be thinking about as a 180-degree rotation away from that last term.",
  "translatedText": "그러면 음수 1에서 첫 번째 거듭제곱은 음수 1 그 자체로, 마지막 용어에서 180도 회전한 것으로 생각하면 됩니다.",
  "model": "DeepL",
  "from_community_srt": "그리고 (-1)¹ 은 그냥 -1 그 자체입니다. 그전의 항에서 180°로 회전된 거라고 생각하시길 바랍니다.",
  "n_reviews": 0,
  "start": 856.58,
  "end": 865.04
 },
 {
  "input": "Then when we take negative 1 squared, that's positive 1.",
  "translatedText": "그런 다음 음수 1의 제곱을 취하면 양수 1이 됩니다.",
  "model": "DeepL",
  "from_community_srt": "그리고 (-1)²을 하면, 다시 180° 회전하고,",
  "n_reviews": 0,
  "start": 865.54,
  "end": 868.3
 },
 {
  "input": "Again, a 180-degree rotation.",
  "translatedText": "다시 180도 회전합니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 868.54,
  "end": 870.58
 },
 {
  "input": "And in general, each successive term here looks like another rotation by 180 degrees.",
  "translatedText": "일반적으로 여기서 연속되는 각 용어는 180도 회전하는 것처럼 보입니다.",
  "model": "DeepL",
  "from_community_srt": "일반적으로 여기서 연속되는 각 항은 180° 씩 회전하는 것처럼 보입니다. 대수적으로,",
  "n_reviews": 0,
  "start": 870.58,
  "end": 875.82
 },
 {
  "input": "Algebraically, what this translates to is that we have an oscillating sum between the even coefficients and the odd coefficients, but keep the visual in the back of your mind.",
  "translatedText": "대수적으로 해석하면 짝수 계수와 홀수 계수 사이에 진동하는 합이 있다는 뜻이지만, 시각적으로 생각하면 이해가 쉬울 것입니다.",
  "model": "DeepL",
  "from_community_srt": "이것이 의미하는 것은 짝수 계수와 홀수 계수 사이에 진동하는 합이 있다는 것입니다. 여러분의 마음 한구석에 이런 시각적인 것을 담아두세요.",
  "n_reviews": 0,
  "start": 876.18,
  "end": 883.86
 },
 {
  "input": "This expression is true for any generating function, but again, for our special generating function, we know that this value, this alternating sum, should equal 0.",
  "translatedText": "이 표현은 모든 생성 함수에 해당되지만, 특수 생성 함수의 경우 이 값, 즉 교대 합이 0이어야 한다는 것을 알고 있습니다.",
  "model": "DeepL",
  "from_community_srt": "이 식은 모든 생성 함수에 해당하지만, 특수 생성 함수에 대해서도 이 값(𝒙=-1), 즉, 이 교대 합이 0과 같아야 한다는 것을 알고 있습니다.",
  "n_reviews": 0,
  "start": 884.26,
  "end": 892.58
 },
 {
  "input": "And a way you can interpret that is that it's telling you there's an equal balance between the even coefficients and the odd coefficients.",
  "translatedText": "이를 해석하는 한 가지 방법은 짝수 계수와 홀수 계수 사이에 동일한 균형이 있다는 것을 알려준다는 것입니다.",
  "model": "DeepL",
  "from_community_srt": "그리고 여러분이 해석할 수 있는 방법은 짝수 계수와 홀수 계수 사이에 균형이 있다는 것입니다.",
  "n_reviews": 0,
  "start": 893.04,
  "end": 898.9
 },
 {
  "input": "And remember, maybe in the context of our smaller example, these coefficients are encoding for us facts about subsets.",
  "translatedText": "그리고 작은 예제의 맥락에서 이러한 계수는 하위 집합에 대한 사실을 인코딩하고 있다는 점을 기억하세요.",
  "model": "DeepL",
  "from_community_srt": "그리고, 기억하세요. 이 작은 예제에서, 이 계수들은 부분 집합에 대한 사실들을 암호화하고 있습니다.",
  "n_reviews": 0,
  "start": 899.46,
  "end": 906.52
 },
 {
  "input": "So if there's an equal balance between all those even coefficients and the odd coefficients, it's telling you that half of all the subsets have an even sum, and half of them have an odd sum.",
  "translatedText": "따라서 모든 짝수 계수와 홀수 계수 사이에 동일한 균형이 있다면 모든 하위 집합의 절반은 짝수 합계이고 절반은 홀수 합계라는 뜻입니다.",
  "model": "DeepL",
  "from_community_srt": "그래서 만약 모든 짝수 계수와 홀수 계수 사이에 동일한 균형이 있다면, 모든 부분 집합의 절반은 짝수의 합을 가지고 있고, 나머지 절반은 홀수 합을 가지고 있다는 것을 의미합니다.",
  "n_reviews": 0,
  "start": 906.76,
  "end": 916.16
 },
 {
  "input": "That's probably what you would expect, but it's not obvious at first how you would show that, and with the generating function, it just kind of pops right out.",
  "translatedText": "하지만 처음에는 어떻게 표시할지 명확하지 않았고, 생성 기능을 사용하면 바로 튀어나올 수 있습니다.",
  "model": "DeepL",
  "from_community_srt": "이런 결과는 아마도 당신이 기대하는 것입니다. 하지만 처음에는 어떻게 그것을 보여줄지는 분명하지 않지만,",
  "n_reviews": 0,
  "start": 916.66,
  "end": 923.44
 },
 {
  "input": "And again, to be suggestive of where we're going, let me rewrite this a little bit by taking the last two things we evaluated, add up those two, and then divide by one half.",
  "translatedText": "다시 한 번, 우리가 어디로 가고 있는지 암시하기 위해 마지막으로 평가한 두 가지를 더한 다음 절반으로 나누어 다시 작성해 보겠습니다.",
  "model": "DeepL",
  "from_community_srt": "생성함수을 통해 기대하는 것이 바로 튀어나옵니다. 그리고, 우리가 어디로 가고 있는지 암시하기 위해, 우리가 계산한 마지막 두 식을 다시 쓰고, 그 두 식을 더하고 나서 반으로 나누도록 하겠습니다.",
  "n_reviews": 0,
  "start": 924.48,
  "end": 933.62
 },
 {
  "input": "If you think about it, this is a way of filtering out all of the even coefficients and killing all of the odd coefficients.",
  "translatedText": "생각해보면 짝수 계수는 모두 걸러내고 홀수 계수는 모두 죽이는 방식입니다.",
  "model": "DeepL",
  "from_community_srt": "생각해보면, 이것은 모든 짝수 계수를 걸러내고 모든 홀수 계수를 없애는 방법입니다.",
  "n_reviews": 0,
  "start": 935.1,
  "end": 941.28
 },
 {
  "input": "So it becomes an especially clean way to write the fact that the sum of all of the even coefficients, which again in the back of your mind means the total number of subsets with an even sum, will look like half of the total.",
  "translatedText": "따라서 짝수 계수의 합이 모두 짝수인 부분집합의 총합이 전체의 절반처럼 보인다는 사실을 특히 깔끔하게 쓸 수 있는 방법이 됩니다.",
  "model": "DeepL",
  "from_community_srt": "그래서 모든 짝수 계수의 합이 전체 합계의 절반처럼 보인다는 사실을 적는 것이 특히 깔끔한 방법이 될 겁니다. 여러분 마음 한구석에서 다시 말씀드리자면, 짝수 계수의 합은 전체 합계의 절반처럼 보일 것입니다.",
  "n_reviews": 0,
  "start": 941.9,
  "end": 952.14
 },
 {
  "input": "This is, needless to say, tantalizingly close to the actual question we want to answer.",
  "translatedText": "이는 말할 필요도 없이 우리가 대답하고자 하는 실제 질문과 매우 흡사합니다.",
  "model": "DeepL",
  "from_community_srt": "이것은 말할 필요도 없이,",
  "n_reviews": 0,
  "start": 952.62,
  "end": 957.1
 },
 {
  "input": "What we would like to do is find some clever thing that we can do to the function f, some well-chosen numbers to evaluate it on, so that we get all the coefficients corresponding to multiples of 5.",
  "translatedText": "우리가 하고 싶은 것은 함수 f에 대해 할 수 있는 영리한 방법과 이를 평가하기 위해 잘 선택된 숫자를 찾아 5의 배수에 해당하는 모든 계수를 얻는 것입니다.",
  "model": "DeepL",
  "from_community_srt": "우리가 대답하고자 하는 실제 질문에 감질나게 가깝습니다. 우리가 하고 싶은 것은, 5의 배수에 해당하는 모든 계수를 얻을 수 있도록 잘 선택된 숫자를 𝒇 함수에 계산 하는, 영리한 일을 찾는 것입니다.",
  "n_reviews": 0,
  "start": 957.1,
  "end": 967.46
 },
 {
  "input": "Again, thinking back to what these coefficients encode for us, that will be answering our final question.",
  "translatedText": "다시 한 번 이 계수가 우리에게 무엇을 인코딩하는지 생각해보면 마지막 질문에 대한 답이 될 것입니다.",
  "model": "DeepL",
  "from_community_srt": "다시 말하지만,",
  "n_reviews": 0,
  "start": 968.0,
  "end": 972.62
 },
 {
  "input": "That will be counting the total number of subsets whose sum is divisible by 5.",
  "translatedText": "합계가 5로 나눌 수 있는 하위 집합의 총 개수를 세는 것입니다.",
  "model": "DeepL",
  "from_community_srt": "이 계수가 우리에게서 무엇을 암호화하는지 다시 생각해보면, 합이 5로 나눌 수 있는 부분 집합의 총 수를 계산하는 최종 질문에 대한 답이 될 것입니다.",
  "n_reviews": 0,
  "start": 972.76,
  "end": 976.86
 },
 {
  "input": "The trick to doing this is to generalize what we just did, where the successive powers of the input were rotating back and forth.",
  "translatedText": "이 작업을 수행하는 요령은 입력의 연속적인 거듭제곱이 앞뒤로 회전하는 방금 한 작업을 일반화하는 것입니다.",
  "model": "DeepL",
  "from_community_srt": "이것을 할 수 있는 방법은 연속된 거듭제곱이 앞뒤로 회전하는 것을 일반화하는 것입니다.",
  "n_reviews": 0,
  "start": 978.9,
  "end": 985.4
 },
 {
  "input": "But this time we don't want them to rotate every other time, we'd like them to somehow rotate with a period of 5.",
  "translatedText": "하지만 이번에는 매번 회전하는 것이 아니라 어떻게든 5의 주기로 회전하기를 원합니다.",
  "model": "DeepL",
  "from_community_srt": "하지만 이번에는 매 다른 때 마다 회전하는 것을 원치 않습니다. 우리는 그것들이 어떻게든 5의 주기로 회전하는 것을 원하기 때문에,",
  "n_reviews": 0,
  "start": 985.9,
  "end": 991.34
 },
 {
  "input": "And to do that, we extend into the complex plane.",
  "translatedText": "이를 위해 복잡한 평면으로 확장합니다.",
  "model": "DeepL",
  "from_community_srt": "우리는 복소평면으로 확장을 합니다.",
  "n_reviews": 0,
  "start": 991.74,
  "end": 994.22
 },
 {
  "input": "You see, up there we can find a value so that as we take successive powers of it, it will rotate by a fifth of a turn, giving us a process with a frequency of 5.",
  "translatedText": "위에서 값을 찾아서 그 값을 연속적으로 거듭제곱하면 1/5씩 회전하여 주파수가 5인 프로세스를 만들 수 있습니다.",
  "model": "DeepL",
  "from_community_srt": "위쪽에 보시면 값을 찾을 수 있습니다. 이 값을 연속해서 거듭제곱을 하면 5분의 1 회전하여 5의 주기를 갖는 과정을 얻을 수 있습니다.",
  "n_reviews": 0,
  "start": 994.64,
  "end": 1004.0
 },
 {
  "input": "And if you step back, I know that it's kind of absurd that I'm asking you to think about complex numbers.",
  "translatedText": "한 발 물러서서 복소수에 대해 생각해보라고 하는 것이 다소 터무니없다는 것을 알고 있습니다.",
  "model": "DeepL",
  "from_community_srt": "만약 여러분이 뒤로 물러서서 본다면, 제가 여러분에게 복소수에 대해 생각해보라고 하는 것은좀 터무니없다는 것을 압니다.",
  "n_reviews": 0,
  "start": 1004.7,
  "end": 1009.5
 },
 {
  "input": "I mean, we started with a counting question, it's discrete math, but hopefully it's not all that wild.",
  "translatedText": "이산 수학인 수 세기 문제로 시작했지만, 그렇게 어려운 문제는 아니었으면 좋겠습니다.",
  "model": "DeepL",
  "from_community_srt": "제 말은, 우리는 개수 세기 질문으로 시작했다는 것입니다. 이산적인 수학이지만, 그렇게 생소하지 않기를 바랍니다.",
  "n_reviews": 0,
  "start": 1009.86,
  "end": 1014.64
 },
 {
  "input": "And again, the reason that I'm drawing things out to tee up the various strange turns in the solution is that they're actually not all that strange in the broader scheme of math.",
  "translatedText": "다시 한 번 말씀드리지만, 제가 솔루션의 여러 가지 이상한 반전을 설명하기 위해 그림을 그리는 이유는 더 넓은 수학 체계에서 보면 실제로 그렇게 이상한 것이 아니기 때문입니다.",
  "model": "DeepL",
  "from_community_srt": "그리고 다시, 제가 솔루션의 다양하고 이상한 관점을 보여주기 위해 무언가를 조정하는 이유는 사실 이 과정들이 실제로 더 넓은 수학 체계에서는 그다지 이상하지 않기 때문입니다.",
  "n_reviews": 0,
  "start": 1015.4,
  "end": 1023.8
 },
 {
  "input": "The trick we're about to apply has a heavy resemblance to many other instances of using complex numbers to better understand discrete questions of integers.",
  "translatedText": "우리가 적용하려는 트릭은 정수의 불연속형 문제를 더 잘 이해하기 위해 복소수를 사용하는 다른 많은 사례와 매우 유사합니다.",
  "model": "DeepL",
  "from_community_srt": "우리가 적용하고자 하는 기술은 복소수를 사용하여 정수의 이산적인 질문을 더 잘 이해하는 다른 많은 사례들과 상당히 유사합니다.",
  "n_reviews": 0,
  "start": 1024.14,
  "end": 1032.36
 },
 {
  "input": "So the more it feels like something that you could have discovered yourself, the more it might actually be the case that when you're working on some future problem in this circle of thoughts, you will discover it yourself.",
  "translatedText": "따라서 스스로 발견할 수 있는 것처럼 느껴질수록 실제로는 이 생각의 원에서 미래의 어떤 문제를 해결할 때 스스로 발견하게 될 수도 있습니다.",
  "model": "DeepL",
  "from_community_srt": "그래서 여러분이 스스로 발견할 수 있었던 \"무언가\"로 느껴질수록, 여러분이 이 원에서 미래의 어떤 문제에 대해 연구할 때 스스로 발견하게 될 거라고 느낄 수 있습니다.",
  "n_reviews": 0,
  "start": 1032.74,
  "end": 1043.22
 },
 {
  "input": "The complex number To be specific, the complex number that I care about is one that I'm going to label zeta, and it sits a fifth of a turn around the unit circle.",
  "translatedText": "복소수 구체적으로 말하자면, 제가 관심 있는 복소수는 제타라고 이름 붙일 수 있으며 단위 원 주위의 1/5 바퀴에 위치합니다.",
  "model": "DeepL",
  "from_community_srt": "구체적으로 말씀드리면, 제가 신경 쓰는 복소수는 제가 ζ라고 말할 것이고, 이것은 단위원 둘레의 5분의 1 회전입니다.",
  "n_reviews": 0,
  "start": 1048.56,
  "end": 1056.38
 },
 {
  "input": "So its angle is 2 pi fifths radians, and its magnitude is one.",
  "translatedText": "따라서 각도는 파이의 5분의 2 라디안이고 크기는 1입니다.",
  "model": "DeepL",
  "from_community_srt": "그래서 ζ의 각도는 2π/5 라디안이고 크기는 1입니다.",
  "n_reviews": 0,
  "start": 1056.78,
  "end": 1061.34
 },
 {
  "input": "This means with the standard Euler's formula notation, we would write that number explicitly as e to the power 2 pi i divided by 5.",
  "translatedText": "즉, 표준 오일러 공식 표기법을 사용하면 해당 숫자를 2π의 거듭제곱에 5를 곱한 값인 e로 명시적으로 표기할 수 있습니다.",
  "model": "DeepL",
  "from_community_srt": "즉, 오일러 공식을 사용하여 𝒆^(2π𝒊/5) 으로 명시적으로 표기합니다.",
  "n_reviews": 0,
  "start": 1062.06,
  "end": 1069.36
 },
 {
  "input": "If you're not as comfortable with that notation, you could think of it as something whose real part is the cosine of 72 degrees, 72 being a fifth of a full turn, and the imaginary part is the sine of 72 degrees.",
  "translatedText": "이 표기법이 익숙하지 않다면 실제 부분은 72도의 코사인, 72는 전체 회전의 5분의 1, 허수 부분은 72도의 사인이라고 생각할 수 있습니다.",
  "model": "DeepL",
  "from_community_srt": "만약 여러분이 이 표기법에 익숙하지 않다면, 여러분은 이것을 실수 부분의 cos(72°) 그리고 허수 부분은 sin(72°) 라고 생각할 수 있습니다. 그리고 72°는 전체 회전(360°)의 5분의 1입니다. 217 00:18:02,400 --> 00:18:06,160 하지만, 솔직히 말해서, 여러분은 실제로 정확한 값에 대해 생각할 필요가 없습니다.",
  "n_reviews": 0,
  "start": 1069.64,
  "end": 1081.56
 },
 {
  "input": "But to be honest, you don't actually need to think about the explicit value.",
  "translatedText": "하지만 솔직히 말해서 명시적인 가치에 대해 생각할 필요는 없습니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 1082.54,
  "end": 1085.94
 },
 {
  "input": "Instead, the important thing to focus on is the property that powers of this number have.",
  "translatedText": "그 대신 이 숫자가 가진 속성에 초점을 맞추는 것이 중요합니다.",
  "model": "DeepL",
  "from_community_srt": "대신, 중요한 것은 이 수가 가지고 있는 속성입니다.",
  "n_reviews": 0,
  "start": 1086.2,
  "end": 1090.58
 },
 {
  "input": "For example, when you square it, because its magnitude was one, the magnitude of its square is also one, but it rotates a fifth of a turn around the unit circle, so it now sits two fifths of a turn around.",
  "translatedText": "예를 들어, 제곱을 하면 크기가 1이므로 제곱의 크기도 1이지만 단위 원을 중심으로 1/5 바퀴 회전하므로 이제 1/5 바퀴 2바퀴를 돌게 됩니다.",
  "model": "DeepL",
  "from_community_srt": "예를 들어, 제곱을 했을 때, ζ의 크기가 1이므로 그 크기의 제곱 또한 1이 됩니다. 하지만 단위 원을 중심으로 5분의 1 회전합니다. 결과적으로 단위원의 5분의 2를 회전합니다. 비슷하게,",
  "n_reviews": 0,
  "start": 1091.1,
  "end": 1101.18
 },
 {
  "input": "Similarly, when you raise it to the third power, you end up three fifths of a turn around, raise it to the fourth power, you end up four fifths of a turn, and raise it to the fifth power, and you've gotten all the way back around to one.",
  "translatedText": "마찬가지로 3의 3승으로 올리면 한 바퀴의 5분의 3이 되고, 4의 4승으로 올리면 한 바퀴의 5분의 4가 되고, 5의 5승으로 올리면 다시 1로 돌아가는 식입니다.",
  "model": "DeepL",
  "from_community_srt": "세제곱을 하면 5분의 3 회전 하고, 네제곱을 하면 5분의 4 회전 하고, 5제곱은 다시 1로 돌아갑니다.",
  "n_reviews": 0,
  "start": 1102.28,
  "end": 1112.52
 },
 {
  "input": "It's the same thing as if you had raised it to the zeroth power.",
  "translatedText": "0의 거듭제곱으로 올린 것과 같은 원리입니다.",
  "model": "DeepL",
  "from_community_srt": "마치 0제곱을 했듯이, 5번마다 순환합니다.",
  "n_reviews": 0,
  "start": 1112.86,
  "end": 1115.6
 },
 {
  "input": "We get this cycling every five terms.",
  "translatedText": "이 주기는 다섯 학기마다 이루어집니다.",
  "model": "DeepL",
  "from_community_srt": "이것들이 우리가 주의해서 봐야할 것 입니다.",
  "n_reviews": 0,
  "start": 1115.8,
  "end": 1117.6
 },
 {
  "input": "That's the thing that we care about.",
  "translatedText": "이것이 바로 우리가 신경 쓰는 부분입니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 1117.86,
  "end": 1119.2
 },
 {
  "input": "These numbers have a special name, they're called the fifth roots of unity, essentially because they solve the equation z to the fifth equals one.",
  "translatedText": "이 숫자들은 특별한 이름을 가지고 있는데, 바로 5의 다섯 번째 뿌리가 1이라는 방정식을 풀기 때문에 5의 다섯 번째 뿌리라고 불립니다.",
  "model": "DeepL",
  "from_community_srt": "이 숫자들은 \"1의 다섯제곱근\" 이라는 특별한 이름을 가지고 있습니다. 왜냐하면 이것들은 방정식 𝒛⁵=1 을 풀고,",
  "n_reviews": 0,
  "start": 1119.76,
  "end": 1127.18
 },
 {
  "input": "They are fifth roots of the number one.",
  "translatedText": "1의 다섯 번째 뿌리입니다.",
  "model": "DeepL",
  "from_community_srt": "실제로 1의 다섯제곱근이기 때문입니다.",
  "n_reviews": 0,
  "start": 1127.18,
  "end": 1129.24
 },
 {
  "input": "If you just presented someone with this equation, they would probably say the answer is clearly z equals one.",
  "translatedText": "누군가에게 이 방정식을 제시한다면 아마도 대답은 분명히 'z는 1'이라고 말할 것입니다.",
  "model": "DeepL",
  "from_community_srt": "만약 여러분이 누군가에게 이 방정식을 보여준다면, 그들은 아마도 그 답이 분명히 𝒛=1이라고 말할 것입니다.",
  "n_reviews": 0,
  "start": 1129.46,
  "end": 1134.76
 },
 {
  "input": "But the idea is that there are four other answers in the complex plane.",
  "translatedText": "그러나 복잡한 평면에는 네 가지 다른 답이 있다는 아이디어가 있습니다.",
  "model": "DeepL",
  "from_community_srt": "하지만 복소평면에는 4개의 다른 답이 있다는 것입니다.",
  "n_reviews": 0,
  "start": 1135.28,
  "end": 1138.52
 },
 {
  "input": "Four other numbers where when you raise them to the fifth, you get one, and considering them as a collective is often quite useful.",
  "translatedText": "네 개의 숫자를 다섯 번째까지 올리면 하나의 숫자가 나오는데, 이를 집합으로 생각하면 매우 유용할 때가 많습니다.",
  "model": "DeepL",
  "from_community_srt": "4개의 다른 숫자를 다섯제곱으로 할 1를 얻고 이를 집합체로 간주하는 것은 종종 매우 유용합니다.",
  "n_reviews": 0,
  "start": 1138.98,
  "end": 1144.38
 },
 {
  "input": "Remember that equation, it'll come back for us a little bit later.",
  "translatedText": "이 방정식을 기억해두면 잠시 후에 도움이 될 것입니다.",
  "model": "DeepL",
  "from_community_srt": "그 방정식을 기억하세요. 조금 후에 우린 다시 볼 겁니다.",
  "n_reviews": 0,
  "start": 1144.88,
  "end": 1147.44
 },
 {
  "input": "So in analogy with what we did earlier, where we added together f of one and f of negative one to get this cancellation among the odd terms, what we're going to do is evaluate f at all five of these numbers, and then add them together, and hopefully we get some cancellation.",
  "translatedText": "앞에서 1의 f와 음의 f를 더하여 홀수 항 중에서 이 취소를 얻은 것과 유사하게, 이 다섯 개의 숫자에서 모두 f를 평가한 다음 더하면 취소를 얻을 수 있을 것입니다.",
  "model": "DeepL",
  "from_community_srt": "그래서 우리가 이전에 했던 것과 유사하게, 우리가 이 홀수 항들을 소거하기 위해 𝒇(1)와 𝒇(-1)를 더한 것과 같이, 우리가 할 일은 이 다섯 개의 숫자 모두에서 𝒇를 계산한 다음 그것들을 합친 다음, 우리는 어떤 소거가 있기를 바랍니다.",
  "n_reviews": 0,
  "start": 1148.7,
  "end": 1162.9
 },
 {
  "input": "That might seem kind of complicated, but let's just take a super simple example, like the case where f of x is simply equal to x.",
  "translatedText": "다소 복잡해 보일 수 있지만, x의 f가 단순히 x와 같은 경우처럼 아주 간단한 예를 들어보겠습니다.",
  "model": "DeepL",
  "from_community_srt": "좀 복잡해 보일 수도 있지만, 𝒇(𝒙)=𝒙와 같은 아주 간단한 예를 들어 보겠습니다. 이 경우,",
  "n_reviews": 0,
  "start": 1163.24,
  "end": 1169.54
 },
 {
  "input": "In that case, when we add up these five terms, we're just adding up the roots of unity themselves.",
  "translatedText": "이 경우, 이 다섯 가지 용어를 더하면 통합의 뿌리 자체를 더하는 것입니다.",
  "model": "DeepL",
  "from_community_srt": "이 다섯 가지 항을 더하면, 우리는 단지 ζ⁰ + ζ¹ + ...",
  "n_reviews": 0,
  "start": 1170.0,
  "end": 1174.16
 },
 {
  "input": "Zeta to the zero plus zeta to the one, on and on, up to zeta to the fourth.",
  "translatedText": "제타에서 0까지, 제타에서 1까지, 그리고 제타에서 4까지 계속됩니다.",
  "model": "DeepL",
  "from_community_srt": "+ ζ⁴ 와 같은 거듭제곱근를 더하는 것입니다.",
  "n_reviews": 0,
  "start": 1174.52,
  "end": 1177.68
 },
 {
  "input": "When you add complex numbers, you can think of it like vector addition with the tip to the tail.",
  "translatedText": "복소수를 더할 때는 끝이 꼬리에 있는 벡터를 더하는 것과 같다고 생각하면 됩니다.",
  "model": "DeepL",
  "from_community_srt": "복소수를 더하면, 어... 꼬리물기와 같은 벡터의 덧셈처럼 생각할 수 있습니다.",
  "n_reviews": 0,
  "start": 1178.24,
  "end": 1182.48
 },
 {
  "input": "So zeta to the zero plus zeta will look like this, and then if I add on zeta squared, bringing the tail of that vector to the tip of the last one, we get this.",
  "translatedText": "따라서 제로에 제타를 더하면 이렇게 되고, 제타 제곱을 더하면 마지막 벡터의 꼬리를 마지막 벡터의 끝으로 가져와서 이렇게 됩니다.",
  "model": "DeepL",
  "from_community_srt": "ζ⁰ + ζ는 이렇게 보일 것입니다. 그리고 만약 제가 ζ의 제곱을 더하면, 그 벡터의 꼬리를 마지막 것의 끝으로 가져갑니다 그리고 비슷하게,",
  "n_reviews": 0,
  "start": 1182.9,
  "end": 1192.28
 },
 {
  "input": "Then similarly, if I bring the tail of zeta cubed over to the tip of that one, and then do likewise for zeta to the fourth, you'll see how the overall sum actually loops back to be zero.",
  "translatedText": "그런 다음 마찬가지로 제타의 꼬리를 제타의 끝으로 가져온 다음 제타도 마찬가지로 네 번째까지 가져가면 전체 합이 실제로 0으로 다시 반복되는 것을 볼 수 있습니다.",
  "model": "DeepL",
  "from_community_srt": "만약 제가 ζ³의 꼬리를 ζ⁴의 꼭짓점까지 가져간다면, 여러분은 어떻게 전체 합이 0이 되는지를 볼 수 있을 것입니다.",
  "n_reviews": 0,
  "start": 1192.98,
  "end": 1202.82
 },
 {
  "input": "Another way to think about this is that all five of these terms are evenly balanced around the number zero.",
  "translatedText": "이 다섯 가지 용어가 모두 숫자 0을 중심으로 균등하게 균형을 이루고 있다고 생각하면 됩니다.",
  "model": "DeepL",
  "from_community_srt": "이것에 대해 생각하는 또 다른 방법은 이 다섯 개의 항 모두 0을 중심으로 균등하게 균형을 이루고 있다는 것입니다.",
  "n_reviews": 0,
  "start": 1203.36,
  "end": 1208.32
 },
 {
  "input": "Their center of mass is at the origin.",
  "translatedText": "질량 중심은 원점에 있습니다.",
  "model": "DeepL",
  "from_community_srt": "이 ζ들의 중심은 원점에 있습니다.",
  "n_reviews": 0,
  "start": 1208.88,
  "end": 1210.62
 },
 {
  "input": "Now it's helpful to think about a slightly less trivial example, if f of x was x squared.",
  "translatedText": "이제 조금 덜 사소한 예로 x의 f가 x의 제곱인 경우를 생각해 보면 도움이 될 것입니다.",
  "model": "DeepL",
  "from_community_srt": "이제 𝒇(𝒙)가 𝒙²이라면 조금 덜 사소한 예를 생각해 보는 것이 도움이 됩니다.",
  "n_reviews": 0,
  "start": 1211.7,
  "end": 1216.46
 },
 {
  "input": "So when you square zeta to the zero, it stays zeta to the zero.",
  "translatedText": "따라서 제타를 0으로 제곱하면 제타가 0으로 유지됩니다.",
  "model": "DeepL",
  "from_community_srt": "ζ⁰을 제곱하면 ζ⁰으로 유지합니다.",
  "n_reviews": 0,
  "start": 1217.36,
  "end": 1220.02
 },
 {
  "input": "This is just a fancy way of saying the number one.",
  "translatedText": "이것은 1등을 멋지게 표현한 것일 뿐입니다.",
  "model": "DeepL",
  "from_community_srt": "이것은 단지 숫자 1을 말하는 화려한 방법일 뿐입니다.",
  "n_reviews": 0,
  "start": 1220.26,
  "end": 1221.98
 },
 {
  "input": "When you square zeta, you get zeta squared itself.",
  "translatedText": "제타를 제곱하면 제타 자체가 제곱됩니다.",
  "model": "DeepL",
  "from_community_srt": "ζ를 제곱하면 ζ²를 얻습니다.",
  "n_reviews": 0,
  "start": 1222.64,
  "end": 1224.98
 },
 {
  "input": "So you might imagine this dot up here moving over to the zeta squared dot when we do it.",
  "translatedText": "따라서 여기 이 점이 제타 제곱 점으로 넘어가는 것을 상상할 수 있습니다.",
  "model": "DeepL",
  "from_community_srt": "그래서 여기 위에 있는 이 점이 우리가 ζ²의 점으로 이동하는 것을 상상할 수 있습니다.",
  "n_reviews": 0,
  "start": 1225.44,
  "end": 1230.24
 },
 {
  "input": "Zeta squared moves to zeta to the fourth.",
  "translatedText": "제타 제곱이 제타 제곱에서 제타 제곱으로 이동합니다.",
  "model": "DeepL",
  "from_community_srt": "ζ²은 ζ⁴로 이동합니다.",
  "n_reviews": 0,
  "start": 1230.72,
  "end": 1232.68
 },
 {
  "input": "You might imagine this dot moving over to zeta to the fourth.",
  "translatedText": "이 점이 제타에서 네 번째 점으로 넘어가는 것을 상상할 수 있습니다.",
  "model": "DeepL",
  "from_community_srt": "그래서 여러분은 이 점이 ζ⁴로 이동하는 것을 상상할 수 있습니다.",
  "n_reviews": 0,
  "start": 1233.2,
  "end": 1235.76
 },
 {
  "input": "Zeta cubed moves to zeta to the sixth, which, because we loop around every five times, is the same thing as zeta to the one.",
  "translatedText": "제타 큐브는 제타에서 여섯 번째 제타로 이동하는데, 이는 5회마다 반복되므로 제타에서 하나로 이동하는 것과 같습니다.",
  "model": "DeepL",
  "from_community_srt": "ζ³는 ζ⁶까지 이동하는데, 5번 마다 한 바퀴씩 돌기 때문에 ζ³는 ζ¹까지 움직입니다.",
  "n_reviews": 0,
  "start": 1236.58,
  "end": 1242.94
 },
 {
  "input": "So this dot will move up here.",
  "translatedText": "따라서 이 점이 위로 이동합니다.",
  "model": "DeepL",
  "from_community_srt": "그래서 이 점이 위로 이동하게 됩니다.",
  "n_reviews": 0,
  "start": 1243.42,
  "end": 1244.88
 },
 {
  "input": "And finally, zeta to the fourth squares to give us zeta to the eighth, which reduces to be the same as zeta cubed, which I might draw like this.",
  "translatedText": "마지막으로 제타를 네 번째 제곱으로 줄여서 제타를 여덟 번째 제곱으로 줄이면 제타 큐브와 같게 되는데, 이렇게 그릴 수 있습니다.",
  "model": "DeepL",
  "from_community_srt": "마지막으로 ζ⁴의 제곱은 ζ⁸이 됩니다. 즉, ζ³으로 줄여지고, 이렇게 그릴 수 있습니다.",
  "n_reviews": 0,
  "start": 1246.42,
  "end": 1254.6
 },
 {
  "input": "That might seem a little confusing to think about, especially with all the arrows I have drawn here, but it's worth thinking through at least once in your life, because the idea here is that when we square this, like go to all of these different terms, and I program them to double the angle that they have, the overall effect is to just shuffle those terms.",
  "translatedText": "특히 제가 여기에 화살표를 모두 그려 놓았기 때문에 생각하기에 조금 혼란스러워 보일 수 있지만, 이 모든 다른 용어로 이동하여 각도를 두 배로 늘리도록 프로그래밍하면 전체적인 효과는 이러한 용어를 섞는 것이기 때문에 한 번쯤 생각해 볼 가치가 있습니다.",
  "model": "DeepL",
  "from_community_srt": "생각해보면 좀 헷갈리겠지만, 특히 제가 여기서 그린 모든 화살표들을 생각해볼 가치가 있습니다. 왜냐하면 여기의 아이디어는 우리가 이 모든 다른 항들을 제곱할 때, 저는 모든 항들이 가지고 있는 각도를 두 배로 늘리도록 프로그래밍을 하기 때문입니다. 전체적인 결과는 그냥 섞이는 것입니다.",
  "n_reviews": 0,
  "start": 1255.56,
  "end": 1271.66
 },
 {
  "input": "We get the same numbers but written in a different order, so their sum is still going to be zero.",
  "translatedText": "숫자는 같지만 순서가 다르므로 합계는 여전히 0이 됩니다.",
  "model": "DeepL",
  "from_community_srt": "우리는 다른 순서로 쓰지만 같은 수를 얻기에, 그들의 합은 여전히 0이 될 것입니다. 비슷하게,",
  "n_reviews": 0,
  "start": 1272.0,
  "end": 1276.2
 },
 {
  "input": "Similarly, if you go through this exercise with x cubed, which I encourage you to do, and you follow around where are each one of these dots going to end up, you'll be able to see that when we cube these terms, when we take each one and we multiply the angle that it has by three, again we just shuffle them around.",
  "translatedText": "마찬가지로, 제가 권장하는 X큐브를 가지고 이 연습을 진행하면서 이 점들이 각각 어디로 가는지 따라가 보면, 이 용어들을 제곱할 때 각각의 각도에 3을 곱하면 다시 이리저리 섞이게 된다는 것을 알 수 있습니다.",
  "model": "DeepL",
  "from_community_srt": "여러분이 𝒙³ 으로 연습할 때, 여러분이 이 점들의 끝점을 따라간다면, 우리가 이 점들을 세제곱할 때, 즉, 우리가 각각의 점들이 가지고 있는 각도를 3배를 할 때, 우리는 단지 같은 항들을 섞어서 다른 순서로 나타내는 거와 같습니다.",
  "n_reviews": 0,
  "start": 1276.96,
  "end": 1292.76
 },
 {
  "input": "Same terms listed in a different order, unsurprisingly the same thing happens if our function was x to the fourth, but, critically, where things change is if we consider the function x to the fifth.",
  "translatedText": "같은 용어가 다른 순서로 나열된 경우, 당연히 함수 x에서 네 번째까지 같은 일이 일어나지만, 결정적으로 상황이 달라지는 것은 함수 x에서 다섯 번째까지를 고려할 때입니다.",
  "model": "DeepL",
  "from_community_srt": "놀랄 것도 없이, 우리의 함수가 𝒙⁴ 이어도 같은 일이 일어납니다. 하지만 중요한 것은 𝒙⁵인 함수를 고려했을 때 상황이 변하는 것입니다.",
  "n_reviews": 0,
  "start": 1293.14,
  "end": 1306.42
 },
 {
  "input": "In that case, when you raise zeta to the fifth power, by definition it goes to one.",
  "translatedText": "이 경우 제타를 5의 제곱으로 올리면 정의상 1이 됩니다.",
  "model": "DeepL",
  "from_community_srt": "이 경우 ζ를 5제곱 하면, 정의상 1이 됩니다.",
  "n_reviews": 0,
  "start": 1307.06,
  "end": 1311.82
 },
 {
  "input": "Similarly, zeta squared raised to the fifth power goes to one.",
  "translatedText": "마찬가지로 제타 제곱을 5의 거듭제곱한 값은 1이 됩니다.",
  "model": "DeepL",
  "from_community_srt": "마찬가지로, ζ²을 5제곱 하면 1이 됩니다.",
  "n_reviews": 0,
  "start": 1312.54,
  "end": 1315.2
 },
 {
  "input": "All of these go to one, they are the roots of unity, this is after all their whole purpose in life.",
  "translatedText": "이 모든 것이 하나로 연결되고 통합의 뿌리이며, 결국 이것이 인생의 모든 목적입니다.",
  "model": "DeepL",
  "from_community_srt": "이 모든 것이 1로 이어지는데, 이들은 거듭제곱근이기 때문입니다. 결국,",
  "n_reviews": 0,
  "start": 1315.56,
  "end": 1319.94
 },
 {
  "input": "So in this case, when we apply the function and add them all up, instead of going to zero and getting cancellation, we get a kind of constructive interference.",
  "translatedText": "따라서 이 경우 함수를 적용하여 모두 더하면 0이 되어 취소되는 대신 일종의 건설적인 간섭을 얻게 됩니다.",
  "model": "DeepL",
  "from_community_srt": "이것이 그들이 존재하는 목적입니다. 그래서 이 경우, 우리가 이 함수를 적용하고 모두 더하면, 0으로 가서 소거하는 대신 일종의 간섭을 받게 됩니다.",
  "n_reviews": 0,
  "start": 1320.44,
  "end": 1328.38
 },
 {
  "input": "All of them equal one, so their sum is equal to five.",
  "translatedText": "모두 1과 같으므로 합은 5와 같습니다.",
  "model": "DeepL",
  "from_community_srt": "모두 1이므로 합은 5가 됩니다.",
  "n_reviews": 0,
  "start": 1328.78,
  "end": 1331.44
 },
 {
  "input": "So if you step back and think about what all those examples mean, essentially this expression is something that will go to zero for powers of x which are not divisible by five, but it goes to something non-zero for powers of x which are divisible by five.",
  "translatedText": "따라서 한 걸음 물러서서 이 모든 예가 무엇을 의미하는지 생각해 보면, 기본적으로 이 식은 5로 나눌 수 없는 x의 거듭제곱은 0이 되지만 5로 나눌 수 있는 x의 거듭제곱은 0이 아닌 무언가로 변합니다.",
  "model": "DeepL",
  "from_community_srt": "따라서 뒤로 물러나서, 이 모든 예가 의미하는 바를 생각해보면, 본질적으로 이 표현은 5로 나눌 수 없는 𝒙의 거듭제곱에 대해서는 0이 될 것이지만, 5로 나눌 수 있는 𝒙의 거듭제곱에 대해서는 0이 아닌 것으로 이동합니다.",
  "n_reviews": 0,
  "start": 1332.06,
  "end": 1345.48
 },
 {
  "input": "And that's exactly the kind of filter that we're looking for.",
  "translatedText": "이것이 바로 우리가 찾고 있는 필터의 종류입니다.",
  "model": "DeepL",
  "from_community_srt": "그리고 이것은 정확히 우리가 찾고 있는 종류의 필터입니다.",
  "n_reviews": 0,
  "start": 1345.9,
  "end": 1348.38
 },
 {
  "input": "If you're worried that our actual function is much more complicated than a simple power of x, essentially things play really nicely here because everything is linear.",
  "translatedText": "실제 함수가 단순한 x의 거듭제곱보다 훨씬 더 복잡하다고 걱정하신다면, 기본적으로 모든 것이 선형적이기 때문에 모든 것이 아주 잘 작동합니다.",
  "model": "DeepL",
  "from_community_srt": "만약 여러분이 우리의 실제 함수가 단순한 𝒙의 거듭제곱보다 훨씬 더 복잡하다는 것을 걱정해도, 기본적으로 모든 것이 선형이기 때문에 모든 것이 괜찮습니다.",
  "n_reviews": 0,
  "start": 1349.02,
  "end": 1357.0
 },
 {
  "input": "If f is some massive polynomial and we want to evaluate this big sum, you could sort of think of going column by column, where each time you really are just adding up powers of zeta, and in most cases all those powers cancel out with each other and you get zero, but when all of those powers are multiples of five, they constructively interfere and instead you get five times whatever the corresponding coefficient is.",
  "translatedText": "f가 거대한 다항식이고 이 큰 합계를 평가하고 싶다면, 열마다 제타의 거듭제곱을 더하면 대부분의 경우 모든 거듭제곱이 서로 상쇄되어 0이 되지만, 모든 거듭제곱이 5의 배수인 경우 건설적으로 간섭하여 해당 계수가 무엇이든 5배가 되는 것으로 생각할 수 있습니다.",
  "model": "DeepL",
  "from_community_srt": "만약 𝒇가 어떤 거대한 다항식이고 우리가 이 큰 합을 계산하기를 원한다면, 여러분은 열과 열로 분류하는 것을 생각할 수 있습니다. 매번 여러분은 ζ의 거듭제곱을 더하고 대부분의 경우 그 모든 거듭제곱이 서로 소거되고 0이 됩니다. 하지만 그 모든 거듭제곱이 5의 배수일 때, 그것들은 구조적으로 간섭합니다. 즉, 해당 계수가 무엇이든 간에 5배를 얻을 수 있습니다.",
  "n_reviews": 0,
  "start": 1357.7,
  "end": 1381.92
 },
 {
  "input": "Deep in the weeds it's easy to forget why we're here in the first place, but remember each one of those coefficients tells us how many subsets add up to a certain value, and so what we want is to add up all of the coefficients that are multiples of five, and what we have right now is a way to explicitly do that.",
  "translatedText": "잡초 속에서는 애초에 우리가 왜 여기에 왔는지 잊기 쉽지만, 각 계수는 특정 값에 몇 개의 부분 집합을 더하는지를 알려주므로 우리가 원하는 것은 5의 배수인 모든 계수를 더하는 것이고, 지금 우리가 가진 것은 이를 명시적으로 수행하는 방법입니다.",
  "model": "DeepL",
  "from_community_srt": "잡초 속 깊은 곳에서는 우리가 왜 여기 있는지 잊기 쉽지만, 각각의 계수는 우리에게 얼마나 많은 부분집합의 개수가 특정 값에 있는 지를 알려줍니다. 그래서 우리가 원하는 것은 5의 배수인 모든 계수를 더하는 것이고, 우리가 지금 해야 하는 것은 그것을 명시적으로 하는 방법입니다.",
  "n_reviews": 0,
  "start": 1382.04,
  "end": 1398.54
 },
 {
  "input": "If we evaluate this function on these five different roots of unity, which I know seems kind of weird, then all we have to do is divide by five and it gives us the sum that we want.",
  "translatedText": "이 함수를 5개의 서로 다른 통합의 뿌리로 평가하면 이상하게 보일 수 있지만, 5로 나누기만 하면 원하는 합이 나옵니다.",
  "model": "DeepL",
  "from_community_srt": "만약 우리가 이 다섯 가지의 서로 다른 거듭제곱근에서 이 함수를 계산한다면, 약간 이상하게 보이지만, 우리가 해야 할 일은 5로 나누는 것입니다. 그러면 우리가 원하는 합을 얻을 수 있습니다.",
  "n_reviews": 0,
  "start": 1398.8,
  "end": 1407.54
 },
 {
  "input": "That's really cool if you ask me.",
  "translatedText": "제 생각에는 정말 멋지다고 생각합니다.",
  "model": "DeepL",
  "from_community_srt": "정말 멋지네요.",
  "n_reviews": 0,
  "start": 1408.48,
  "end": 1410.22
 },
 {
  "input": "We have a question that's just about subsets, it's a discrete math problem, and yet the way that we can answer it is to evaluate a crazy polynomial on some judiciously chosen complex numbers.",
  "translatedText": "이산 수학 문제인 부분집합에 관한 질문이 있는데, 이 질문에 답할 수 있는 방법은 신중하게 선택한 복소수에 대해 미친 다항식을 평가하는 것입니다.",
  "model": "DeepL",
  "from_community_srt": "우리는 단지 부분집합에 관한 질문을 가지고 있습니다. 이산적인 수학 문제이지만, 우리가 질문에 대답할 수 있는 방법은 우리가 현명하게 선택한, 일반적이지 않은 복소수에 관한 다항식을 계산하는 것입니다.",
  "n_reviews": 0,
  "start": 1410.22,
  "end": 1421.04
 },
 {
  "input": "The more math you do, the more you get. The more math you do, the less crazy that seems, because complex numbers have this bizarre relationship with discrete math, but it really is wonderful, there's no two ways about it.",
  "translatedText": "복소수는 이산 수학과 기묘한 관계를 가지고 있기 때문에 수학을 많이 할수록 덜 미친 것처럼 보이지만, 실제로는 두 가지 방법이 없을 정도로 훌륭합니다.",
  "model": "DeepL",
  "from_community_srt": "수학을 더 많이 할수록 덜 미친 것처럼 보입니다. 왜냐하면 복소수들은 이산 수학과 기이한 관계를 가지고 있기 때문입니다.",
  "n_reviews": 0,
  "start": 1421.52,
  "end": 1429.48
 },
 {
  "input": "However, some of you might complain, the only way that this is useful is if we can actually evaluate this wild expression on our polynomial.",
  "translatedText": "하지만 다항식에 대한 이 거친 표현식을 실제로 평가할 수 있어야만 유용하다고 불평하는 분들도 계실 것입니다.",
  "model": "DeepL",
  "from_community_srt": "그런데도 이 관계에 대해 다른 방법이 없다는 것은 정말 멋진 일입니다. 그러나 여러분 중 일부는 우리가 이러한 거친 표현을 다항식에서 계산하는 방법이 유일한 방법이란 것에 대해 불평할 수 있습니다.",
  "n_reviews": 0,
  "start": 1430.34,
  "end": 1438.1
 },
 {
  "input": "Remember, the form of the polynomial we know, the one we're comfortable with, is the factored form, where you have this one plus x, one plus x squared, on and on, all the way up to one plus x to the two thousand.",
  "translatedText": "우리가 익히 알고 있는 다항식의 형태, 우리가 익숙한 형태는 1 더하기 x, 1 더하기 x 제곱, 그리고 1 더하기 x에서 2,000까지 계속되는 인수분해 형태라는 것을 기억하세요.",
  "model": "DeepL",
  "from_community_srt": "자, 기억하세요. 우리가 알고 있는 다항식의 편한 형태는 인수분해된 형태입니다. (1+𝒙)(1+𝒙²)...(1+𝒙²⁰⁰⁰)처럼 말이죠.",
  "n_reviews": 0,
  "start": 1438.62,
  "end": 1448.52
 },
 {
  "input": "Everything up to this point is just meaningless symbolic play, pushing around one hard problem into another, unless we can actually roll up our sleeves and do some honest calculation here.",
  "translatedText": "우리가 실제로 소매를 걷어붙이고 정직한 계산을 할 수 없다면 지금까지의 모든 것은 의미 없는 상징적 놀이일 뿐이며, 하나의 어려운 문제를 다른 문제로 밀어붙이는 것에 불과합니다.",
  "model": "DeepL",
  "from_community_srt": "지금까지의 모든 것은 우리가 실제로 소매를 걷어붙이고 정직한 계산을 하지 않는 한, 하나의 어려운 문제를 다른 문제로 밀어넣는 무의미한 상징적 놀이에 불과합니다. 이것이 우리 주장의 마지막 요지이므로,",
  "n_reviews": 0,
  "start": 1449.22,
  "end": 1458.42
 },
 {
  "input": "This is the final thrust in our argument, so step back, take a deep breath.",
  "translatedText": "이것이 우리 주장의 마지막 핵심이므로 한 걸음 물러서서 심호흡을 하세요.",
  "model": "DeepL",
  "from_community_srt": "뒤로 물러나 심호흡을 헤보세요. 292 사실 여러분이 생각하는 것만큼 나쁘지는 않지만,",
  "n_reviews": 0,
  "start": 1458.9,
  "end": 1462.32
 },
 {
  "input": "It's actually not as bad as you might think, but let's start just by thinking about how you might evaluate just one of the roots of unity that we need, maybe zeta itself.",
  "translatedText": "사실 생각만큼 나쁘지는 않지만, 우리에게 필요한 단결의 뿌리 중 하나인 제타 자체를 어떻게 평가할 수 있을지 생각해보는 것부터 시작해보겠습니다.",
  "model": "DeepL",
  "from_community_srt": "여러분이 우리가 필요로 하는 거듭제곱근 중 하나, 즉 ζ 그 자체를 계산할 수 있을지 생각해 봅시다.",
  "n_reviews": 0,
  "start": 1462.7,
  "end": 1470.78
 },
 {
  "input": "So what that looks like is one plus zeta, times one plus zeta squared, times one plus zeta cubed, on and on.",
  "translatedText": "즉, 1 더하기 제타, 1 더하기 제곱 제타, 1 더하기 제곱 제타, 1 더하기 제곱 제타 식으로 계산됩니다.",
  "model": "DeepL",
  "from_community_srt": "그래서 이 모양은 (1+ζ)(1+ζ²)(1+ζ³)... 을 계속해서 반복하는 것입니다. 단,",
  "n_reviews": 0,
  "start": 1471.78,
  "end": 1476.82
 },
 {
  "input": "Except, importantly, after those first five terms, everything starts repeating, because powers of zeta repeat.",
  "translatedText": "중요한 것은 처음 다섯 학기가 지나면 제타의 힘이 반복되기 때문에 모든 것이 반복되기 시작한다는 점입니다.",
  "model": "DeepL",
  "from_community_srt": "처음 5개 항 이후에는 모든 것이 반복되기 시작합니다.",
  "n_reviews": 0,
  "start": 1477.06,
  "end": 1482.7
 },
 {
  "input": "The entire expression up to two thousand is basically just going to be a copy of this expression four hundred times.",
  "translatedText": "최대 2,000개까지의 전체 표현식은 기본적으로 이 표현식을 400번 복사하는 것에 불과합니다.",
  "model": "DeepL",
  "from_community_srt": "왜냐하면 ζ의 2000까지의 거듭제곱은, 전체 식이 기본적으로 그냥 이 표현을 400번 복사하는 거와 같기 때문입니다.",
  "n_reviews": 0,
  "start": 1483.22,
  "end": 1489.12
 },
 {
  "input": "It still might seem hard to evaluate this expression, but it's way easier than multiplying out two thousand different terms.",
  "translatedText": "이 표현을 평가하기는 여전히 어렵게 느껴질 수 있지만, 2천 개의 다른 용어를 곱하는 것보다 훨씬 쉽습니다.",
  "model": "DeepL",
  "from_community_srt": "이 식을 계산하는 것은 여전히 어려워 보이지만, 2,000개의 다른 항을 곱하는 것보다 훨씬 쉽습니다.",
  "n_reviews": 0,
  "start": 1489.6,
  "end": 1495.28
 },
 {
  "input": "A way you might visualize this is that we're taking each one of those roots of unity, but basically adding one, we're shifting them all to the right.",
  "translatedText": "이를 시각화할 수 있는 방법은 통합의 뿌리를 각각 가져가되 기본적으로 하나를 추가하여 모두 오른쪽으로 이동하는 것입니다.",
  "model": "DeepL",
  "from_community_srt": "여러분이 이것을 시각화할 수 있는 방법은 우리가 각각의 거듭제곱근에 기본적으로 하나를 더한다면, 그것들을 모두 오른쪽으로 옮기는 것입니다.",
  "n_reviews": 0,
  "start": 1495.28,
  "end": 1502.54
 },
 {
  "input": "This picture actually lends itself to a really nice geometric intuition for the numerical answer that we might expect.",
  "translatedText": "이 그림은 실제로 우리가 예상할 수 있는 수치적 해답에 대한 기하학적 직관을 아주 잘 보여줍니다.",
  "model": "DeepL",
  "from_community_srt": "이 그림은 우리가 예상할 수 있는 숫자에 대한 기하학적인 직관을 제공해줍니다.",
  "n_reviews": 0,
  "start": 1503.06,
  "end": 1508.36
 },
 {
  "input": "The thing that we want is the product of these five different complex numbers, these five yellow dots.",
  "translatedText": "우리가 원하는 것은 이 다섯 개의 서로 다른 복소수, 즉 다섯 개의 노란색 점의 곱입니다.",
  "model": "DeepL",
  "from_community_srt": "우리가 원하는 것은 이 다섯 개의 서로 다른 복소수들, 즉, 이 다섯 개의 노란 점들의 곱 입니다. 그리고 만약 여러분이 복소수에 대해 한 두 개 알고 있다면,",
  "n_reviews": 0,
  "start": 1508.88,
  "end": 1514.26
 },
 {
  "input": "And if you know a thing or two about complex numbers, since these come in conjugate pairs, all we really need is to multiply the lengths of these five yellow lines.",
  "translatedText": "복소수에 대해 한두 가지 알고 있다면, 복소수는 공액쌍으로 나오므로 이 다섯 개의 노란색 선의 길이를 곱하기만 하면 됩니다.",
  "model": "DeepL",
  "from_community_srt": "이들은 켤레복소수 이기 때문에 우리가 정말로 필요한 것은 이 다섯 개의 노란 선들의 길이를 곱하는 것입니다.",
  "n_reviews": 0,
  "start": 1514.82,
  "end": 1523.02
 },
 {
  "input": "For example, that dot furthest to the right corresponds to one plus zeta to the fifth, which in the diagram I'm labeling as zeta to the zero plus one.",
  "translatedText": "예를 들어, 가장 오른쪽에 있는 점은 1에 제타를 더한 다섯 번째에 해당하며, 다이어그램에서는 제타에 0을 더한 1로 표시하고 있습니다.",
  "model": "DeepL",
  "from_community_srt": "예를 들어, 가장 오른쪽에 있는 점은 1+ζ⁵ 에 해당합니다. 그래프에서 저는 ζ⁰ + 1 로 표기하고 있습니다.",
  "n_reviews": 0,
  "start": 1523.68,
  "end": 1532.22
 },
 {
  "input": "But it doesn't matter, in either case, they're both just fancy ways of writing the number two.",
  "translatedText": "하지만 어느 쪽이든 둘 다 숫자 2를 멋지게 쓰는 방법일 뿐이니 상관없습니다.",
  "model": "DeepL",
  "from_community_srt": "하지만 두 경우 모두 숫자 2를 쓰는 멋진 방법일 뿐입니다.",
  "n_reviews": 0,
  "start": 1532.72,
  "end": 1536.44
 },
 {
  "input": "Next to that, we have the values one plus zeta and one plus zeta to the fourth, both of which have the same magnitude, the lengths of these lines are the same.",
  "translatedText": "그 옆에는 1에 제타를 더한 값과 1에 제타를 더한 값에서 네 번째까지가 있는데, 둘 다 크기가 같고 이 선의 길이가 같습니다.",
  "model": "DeepL",
  "from_community_srt": "그 옆에는 1+ζ, 1+ζ⁴ 가 있고 모두 같은 크기를 가지고 있습니다.",
  "n_reviews": 0,
  "start": 1536.98,
  "end": 1544.6
 },
 {
  "input": "And let's just give that a name, L1.",
  "translatedText": "그리고 여기에 L1이라는 이름을 붙이겠습니다.",
  "model": "DeepL",
  "from_community_srt": "이 선들의 길이는 같으며 𝑳₁이라는 이름을 붙이도록 하죠.",
  "n_reviews": 0,
  "start": 1544.94,
  "end": 1546.68
 },
 {
  "input": "So we need to multiply two different copies of that length, L1 squared.",
  "translatedText": "따라서 해당 길이의 서로 다른 두 복사본에 L1의 제곱을 곱해야 합니다.",
  "model": "DeepL",
  "from_community_srt": "따라서 길이 𝑳₁²에 그 개수인 2를 곱해야 합니다.",
  "n_reviews": 0,
  "start": 1547.08,
  "end": 1550.28
 },
 {
  "input": "Similarly, the remaining two values, zeta squared plus one and zeta cubed plus one, they also have the same length, and they're a conjugate pair.",
  "translatedText": "마찬가지로 나머지 두 값인 제타 제곱에 1을 더한 값과 제타 제곱에 1을 더한 값도 길이가 같으며 공액 쌍입니다.",
  "model": "DeepL",
  "from_community_srt": "마찬가지로, 나머지 두 값은 ζ²+1과 ζ³+1입니다. 이 두 값은 길이가 같고 켤레이므로 𝑳₂라고 부르겠습니다.",
  "n_reviews": 0,
  "start": 1551.02,
  "end": 1558.16
 },
 {
  "input": "So let's just call that length L2.",
  "translatedText": "따라서 이 길이를 L2라고 부르겠습니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 1558.58,
  "end": 1560.2
 },
 {
  "input": "So our product needs to include two copies of that L2.",
  "translatedText": "따라서 우리 제품에는 해당 L2의 복사본이 두 개 포함되어야 합니다.",
  "model": "DeepL",
  "from_community_srt": "그래서 우리의 곱은 그 𝑳₂와, 그 복사본 두 개를 포함해야 합니다.",
  "n_reviews": 0,
  "start": 1560.88,
  "end": 1563.8
 },
 {
  "input": "If we were just making a loose heuristic guess, you might notice that L1 is a length that's something a little bit longer than one, and L2 is something a little bit shorter than one.",
  "translatedText": "느슨한 휴리스틱으로 추측해본다면, L1은 1보다 약간 긴 길이이고 L2는 1보다 약간 짧은 길이라는 것을 알 수 있습니다.",
  "model": "DeepL",
  "from_community_srt": "만약 우리가 느슨한 휴리스틱 추측을 하고 있다면, 여러분은 𝑳₁이 1보다 조금 더 긴 길이이고 𝑳2가 1보다 조금 더 짧은 길이라는 것을 알아차릴 수 있을 것입니다.",
  "n_reviews": 0,
  "start": 1564.34,
  "end": 1573.68
 },
 {
  "input": "So the final answer here probably comes to something around two-ish, we're not positive, but something in that ballpark.",
  "translatedText": "따라서 최종적인 답변은 아마도 두 가지 정도, 확실하지는 않지만 그 정도 수준에서 결정될 것입니다.",
  "model": "DeepL",
  "from_community_srt": "그래서 여기의 마지막 답은 거의 2일 것입니다. 우리가 그 값을 잘 알지는 못해도, 2 근처인 것은 압니다.",
  "n_reviews": 0,
  "start": 1573.96,
  "end": 1579.7
 },
 {
  "input": "To turn this into an exact answer, we could just expand out the full expression.",
  "translatedText": "이를 정확한 답변으로 바꾸려면 전체 표현을 확장하면 됩니다.",
  "model": "DeepL",
  "from_community_srt": "이것을 정확한 답으로 알아내려면 전체 식을 전개하면 됩니다.",
  "n_reviews": 0,
  "start": 1579.7,
  "end": 1584.14
 },
 {
  "input": "It's honestly not that bad, there's only 32 different terms.",
  "translatedText": "솔직히 32개의 다른 용어가 있을 뿐이니 그렇게 나쁘지 않습니다.",
  "model": "DeepL",
  "from_community_srt": "항이 32개나 되는 것은 솔직히 그렇게 나쁘진 않아요.",
  "n_reviews": 0,
  "start": 1584.52,
  "end": 1587.42
 },
 {
  "input": "Okay, you've hung with me for a long time now, and I know that it's getting to be a lot.",
  "translatedText": "좋아요, 오랫동안 저와 함께 해오셨으니 이제 많이 지치셨을 거라는 걸 알아요.",
  "model": "DeepL",
  "from_community_srt": "좋아요, 당신은 지금까지 이 영상을 오래 보고있고,",
  "n_reviews": 0,
  "start": 1593.32,
  "end": 1597.02
 },
 {
  "input": "But there's one final trick in this whole argument that makes our last step much simpler than you might think it should be.",
  "translatedText": "하지만 이 모든 논증에는 마지막 단계를 생각보다 훨씬 간단하게 만드는 마지막 비결이 하나 있습니다.",
  "model": "DeepL",
  "from_community_srt": "저는 시간이 많이 됐다는 걸 압니다 하지만 이 모든 논증에서 우리의 마지막 단계를 여러분이 생각하는 것보다 훨씬 더 단순하게 만드는 마지막 요령이 하나 있습니다 이제 우리가 어디에 있는지 다시 한번 말해보겠습니다.",
  "n_reviews": 0,
  "start": 1597.28,
  "end": 1602.68
 },
 {
  "input": "And let's just recap to remind ourselves of where we are.",
  "translatedText": "그리고 우리가 현재 어디에 있는지 다시 한 번 상기하기 위해 요약해 보겠습니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 1603.26,
  "end": 1605.62
 },
 {
  "input": "So we started with this question asking us, count the number of subsets of 1 up to 2000 whose sum is divisible by 5.",
  "translatedText": "그래서 우리는 합을 5로 나눌 수 있는 1부터 2000까지의 하위 집합의 개수를 세는 이 질문으로 시작했습니다.",
  "model": "DeepL",
  "from_community_srt": "우리는 합이 5로 나누어지는 1에서 2000까지의 부분집합의 수를 세어보라는 질문으로 시작했습니다.",
  "n_reviews": 0,
  "start": 1605.82,
  "end": 1612.28
 },
 {
  "input": "We then constructed this polynomial whose coefficients tell us how many subsets have a particular sum for each value n.",
  "translatedText": "그런 다음 계수가 각 값 n에 대해 특정 합을 갖는 하위 집합의 수를 알려주는 이 다항식을 구성했습니다.",
  "model": "DeepL",
  "from_community_srt": "그런 다음 각각의 계수가 값 𝒏에 대해 특정 합을 갖는 부분 집합의 수를 나타내는 다항식을 구성했습니다.",
  "n_reviews": 0,
  "start": 1612.74,
  "end": 1619.04
 },
 {
  "input": "So what we want is to add up every fifth coefficient of that polynomial.",
  "translatedText": "따라서 우리가 원하는 것은 다항식의 다섯 번째 계수를 모두 더하는 것입니다.",
  "model": "DeepL",
  "from_community_srt": "그래서 우리가 원하는 것은 그 다항식의 매 5번째의 계수를 더하는 것입니다.",
  "n_reviews": 0,
  "start": 1619.96,
  "end": 1623.62
 },
 {
  "input": "Then we saw how evaluating this polynomial as a function on all of the fifth roots of unity, then adding them up, ends up giving us exactly this filter that we want.",
  "translatedText": "그런 다음 이 다항식을 모든 다섯 번째 근에 대한 함수로 평가한 다음 합산하면 원하는 필터를 정확히 얻을 수 있다는 것을 확인했습니다.",
  "model": "DeepL",
  "from_community_srt": "그리고 우리는 어떻게 이 다항식을 다섯제곱근에 대한 함수로 계산하는지, 그리고 그것들을 더하면 우리가 원하는 필터를 얻을 수 있는지를 보았습니다.",
  "n_reviews": 0,
  "start": 1624.78,
  "end": 1633.34
 },
 {
  "input": "And here we're evaluating just one of those terms, f of zeta, which essentially comes down to a product of five complex numbers.",
  "translatedText": "여기서는 이러한 용어 중 하나인 제타의 f를 평가하고 있는데, 이는 기본적으로 5개의 복소수의 곱으로 귀결됩니다.",
  "model": "DeepL",
  "from_community_srt": "여기서 우리는 단지 그 항들 중 하나 𝒇(ζ)를 계산하고 있습니다. 𝒇(ζ)는 본질적으로 5개의 복소수의 곱으로 나타나게 됩니다.",
  "n_reviews": 0,
  "start": 1633.6,
  "end": 1639.8
 },
 {
  "input": "As a super slick way to actually evaluate that product, here's the final trick.",
  "translatedText": "해당 제품을 실제로 평가하는 매우 매끄러운 방법으로, 마지막 비결이 있습니다.",
  "model": "DeepL",
  "from_community_srt": "그 곱을 실제로 계산하는 아주 교묘한 방법으로, 여기 마지막 요령이 있습니다.",
  "n_reviews": 0,
  "start": 1640.54,
  "end": 1644.64
 },
 {
  "input": "Remember, I described these numbers as roots of unity.",
  "translatedText": "이 숫자를 통합의 뿌리라고 설명한 것을 기억하세요.",
  "model": "DeepL",
  "from_community_srt": "기억하세요, 저는 이 숫자들을 \"거듭제곱근\" 이라고 표현했습니다.",
  "n_reviews": 0,
  "start": 1645.32,
  "end": 1647.82
 },
 {
  "input": "They solve the equation z to the fifth equals one.",
  "translatedText": "z는 다섯 번째가 1이 되는 방정식을 푸는 것입니다.",
  "model": "DeepL",
  "from_community_srt": "이 숫자들은 방정식 𝒛⁵=1 를 풀죠.",
  "n_reviews": 0,
  "start": 1648.2,
  "end": 1650.58
 },
 {
  "input": "Another way to think about that is that they are roots of the polynomial z to the fifth minus one.",
  "translatedText": "이를 다른 방식으로 생각하면 다항식 z에서 다섯 번째 마이너스 1을 뺀 값의 근이라고 생각할 수 있습니다.",
  "model": "DeepL",
  "from_community_srt": "그것에 대해 생각할 수 있는 또 다른 방법은 다항식 𝒛⁵-1의 근이라는 것입니다.",
  "n_reviews": 0,
  "start": 1651.06,
  "end": 1656.18
 },
 {
  "input": "Now what that means is we can factor the polynomial z to the fifth minus one to look like this, where there's one factor corresponding to each one of the roots.",
  "translatedText": "이제 다항식 z를 다섯 번째에서 1을 뺀 값으로 인수분해하면 다음과 같이 각 근에 해당하는 인수가 하나씩 있다는 뜻이 됩니다.",
  "model": "DeepL",
  "from_community_srt": "이것이 의미하는 바는 다항식 𝒛⁵-1을 인수로 대응시켜서 이렇게 볼 수 있다는 것입니다. 여기서 각각의 거듭제곱근에 해당하는 하나의 인자가 있습니다.",
  "n_reviews": 0,
  "start": 1656.92,
  "end": 1665.3
 },
 {
  "input": "You take z minus each one of the roots.",
  "translatedText": "각 뿌리에서 z를 뺀 값입니다.",
  "model": "DeepL",
  "from_community_srt": "여러분은 각각의 𝒛에서 거듭제곱근을 빼면 됩니다.",
  "n_reviews": 0,
  "start": 1665.3,
  "end": 1667.16
 },
 {
  "input": "This expression is kind of magical when you think about all of the crazy cancellation that has to happen when you expand it all out, but it is true and it's super useful for us right now, because the expression on the right hand side looks almost identical to the thing we need to evaluate up at the top here.",
  "translatedText": "이 표현은 모든 것을 확장할 때 발생해야 하는 모든 미친 취소를 생각할 때 일종의 마법 같은 표현이지만, 오른쪽의 표현이 여기 맨 위에서 평가해야 하는 것과 거의 동일하게 보이기 때문에 사실이며 현재 우리에게 매우 유용합니다.",
  "model": "DeepL",
  "from_community_srt": "이 식은 모든 것을 전개했을 때 발생되는 모든 소거는 마법과 같은 느낌이겠지만, 하지만 실제로 계산되고, 지금 우리에게 매우 유용합니다. 왜냐하면 오른쪽에 있는 표현은 우리가 위에서 계산해야 하는 것과 거의 비슷하게 보이기 때문입니다. 기본적으로 마이너스 부호가 있습니다.",
  "n_reviews": 0,
  "start": 1667.84,
  "end": 1682.88
 },
 {
  "input": "It basically just has minus signs where we wish there were plus signs.",
  "translatedText": "기본적으로 플러스 기호가 있었으면 하는 곳에 마이너스 기호만 있습니다.",
  "model": "DeepL",
  "from_community_srt": "플러스 부호가 있었으면 하는 곳에 마이너스 부호가 있습니다.",
  "n_reviews": 0,
  "start": 1683.3,
  "end": 1686.36
 },
 {
  "input": "The trick is to plug in z equals negative one.",
  "translatedText": "요령은 z를 음수와 같은 값으로 연결하는 것입니다.",
  "model": "DeepL",
  "from_community_srt": "비결은 𝒛에 -1을 대입하는 것 입니다.",
  "n_reviews": 0,
  "start": 1687.68,
  "end": 1690.24
 },
 {
  "input": "If you do that, you essentially have the negative of what we want.",
  "translatedText": "그렇게 하면 본질적으로 우리가 원하는 것을 부정하게 됩니다.",
  "model": "DeepL",
  "from_community_srt": "만약 그렇게 한다면,",
  "n_reviews": 0,
  "start": 1690.8,
  "end": 1693.9
 },
 {
  "input": "If you multiply it by negative one, notice how the left hand side here, which started out as negative one minus one or negative two, that just becomes two.",
  "translatedText": "음수 1을 곱하면 음수 1 마이너스 1 또는 음수 2로 시작했던 왼쪽이 2가 되는 것을 알 수 있습니다.",
  "model": "DeepL",
  "from_community_srt": "기본적으로 우리가 원하는 것의 음수를 가지게 됩니다. 그래서 만약 -1을 곱하면 여기 왼쪽에 -1에서 1을 뺀것, 즉 -2는 결국 2가 됩니다.",
  "n_reviews": 0,
  "start": 1693.9,
  "end": 1702.52
 },
 {
  "input": "And then the right hand side turns into the thing that we want to evaluate.",
  "translatedText": "그런 다음 오른쪽이 평가하려는 항목으로 바뀝니다.",
  "model": "DeepL",
  "from_community_srt": "그리고 나서 오른쪽이 우리가 계산하고자 하는 것으로 바뀝니다.",
  "n_reviews": 0,
  "start": 1703.24,
  "end": 1706.32
 },
 {
  "input": "So just as our geometric intuition earlier might have suggested, not only is the answer around two, the answer quite magically turns out to be precisely two.",
  "translatedText": "따라서 앞서 우리의 기하학적 직관이 암시했듯이 답은 두 개 정도일 뿐만 아니라 마법처럼 정확하게 두 개로 밝혀졌습니다.",
  "model": "DeepL",
  "from_community_srt": "우리의 기하학적인 직관이 앞서 언급했던 것처럼, 답은 2에 가까울 뿐만 아니라, 마법처럼 정확하게 2로 밝혀졌습니다.",
  "n_reviews": 0,
  "start": 1707.0,
  "end": 1715.5
 },
 {
  "input": "That is actually super nice and very lovely, because it means this bigger expression that we want to evaluate, where we're adding up f on all of the different roots of unity, we know its value on the first root of unity.",
  "translatedText": "왜냐하면 우리가 평가하고자 하는 더 큰 표현, 즉 단결의 모든 다른 뿌리에 F를 더하면 단결의 첫 번째 뿌리에서 그 가치를 알 수 있기 때문입니다.",
  "model": "DeepL",
  "from_community_srt": "그것은 사실 매우 훌륭하고, 매우 사랑스럽습니다. 왜냐하면 우리가 계산하고자 하는 이런 큰 식을 뜻하기 때문입니다. 우리가 거듭제곱근에 𝒇를 더하면, 우리는 ζ¹에 대한 값을 알게 됩니다.",
  "n_reviews": 0,
  "start": 1716.38,
  "end": 1727.32
 },
 {
  "input": "It will be two to the power four hundred.",
  "translatedText": "400의 제곱에 2를 곱한 값입니다.",
  "model": "DeepL",
  "from_community_srt": "2⁴⁰⁰ 이죠.",
  "n_reviews": 0,
  "start": 1727.58,
  "end": 1729.22
 },
 {
  "input": "Essentially identical reasoning shows that its value on the next three roots of unity is also two to the power four hundred, because remember when you take powers of zeta squared or zeta cubed, you get the same list of numbers that are just shuffled in a different order.",
  "translatedText": "제타 제곱 또는 제타 제곱의 거듭제곱을 하면 순서가 바뀐 것일 뿐 동일한 숫자 목록을 얻을 수 있다는 점을 기억하세요.",
  "model": "DeepL",
  "from_community_srt": "본질적으로 동일한 추론으로 다음 세 개의 거듭제곱근에 대한 값도 2⁴⁰⁰ 라는 것을 보여줍니다. 왜냐하면, 여러분이 ζ² 또는 ζ³와 같은 거듭제곱을 할 때, 여러분은 같은 수의 목록을 얻게 되고, 그것들은 단지 다른 순서로 섞이게 됩니다.",
  "n_reviews": 0,
  "start": 1729.82,
  "end": 1742.18
 },
 {
  "input": "The only one that's different is when we evaluate it as zeta to the zero.",
  "translatedText": "유일하게 다른 점은 제타에서 0으로 평가할 때입니다.",
  "model": "DeepL",
  "from_community_srt": "유일하게 다른 점은 ζ⁰ 을 계산했을 때입니다.",
  "n_reviews": 0,
  "start": 1742.88,
  "end": 1746.12
 },
 {
  "input": "But zeta to the zero is a fancy way of saying the number one, and we know how to evaluate this at one.",
  "translatedText": "하지만 제타에서 0은 숫자 1을 멋지게 표현하는 방법이며, 우리는 이것을 1로 평가하는 방법을 알고 있습니다.",
  "model": "DeepL",
  "from_community_srt": "하지만 ζ⁰ 은 숫자 1을 표현하는 멋진 방법이고, 우리는 이것을 한 번에 계산하는 방법을 알고 있습니다.",
  "n_reviews": 0,
  "start": 1746.84,
  "end": 1751.96
 },
 {
  "input": "That's one of the easy things.",
  "translatedText": "이는 쉬운 일 중 하나입니다.",
  "model": "DeepL",
  "from_community_srt": "아주 쉬운 일 중 하나죠.",
  "n_reviews": 0,
  "start": 1752.22,
  "end": 1753.08
 },
 {
  "input": "We did this earlier.",
  "translatedText": "앞서 이 작업을 수행했습니다.",
  "model": "DeepL",
  "from_community_srt": "우린 이미 했었죠.",
  "n_reviews": 0,
  "start": 1753.14,
  "end": 1753.9
 },
 {
  "input": "All of these parentheticals turn into two, so it looks like taking two multiplied by itself two thousand times.",
  "translatedText": "이 괄호는 모두 2로 바뀌므로 2에 2를 곱하면 2,000배가 되는 것처럼 보입니다.",
  "model": "DeepL",
  "from_community_srt": "이 모든 괄호들은 2로 변합니다. 그래서 2를 2000번 곱한 것처럼 됩니다.",
  "n_reviews": 0,
  "start": 1754.2,
  "end": 1759.88
 },
 {
  "input": "And so finally with that, we have a highly explicit honest answer to our counting question.",
  "translatedText": "이제 마지막으로 계산 질문에 대한 매우 명확한 정직한 답변이 나왔습니다.",
  "model": "DeepL",
  "from_community_srt": "마지막으로, 우리는 계산 질문에 대해 매우 분명한 답을 가지고 있습니다.",
  "n_reviews": 0,
  "start": 1760.52,
  "end": 1765.72
 },
 {
  "input": "To add up all of these coefficients which are divisible by five, which remember is a way of counting how many total subsets have a sum divisible by five, the answer is one fifth of this weird complex expression, which we just computed to be two to the two thousand plus four different copies of two to the four hundred.",
  "translatedText": "5로 나눌 수 있는 계수를 모두 더하기 위해, 즉 5로 나눌 수 있는 합을 가진 총 부분집합이 몇 개인지 세는 방법을 기억하면, 방금 계산한 이 이상한 복잡한 식의 5분의 1은 2에 2를 더한 4에 2를 더한 400으로 계산할 수 있습니다.",
  "model": "DeepL",
  "from_community_srt": "5로 나눌 수 있는 이 모든 계수를 더하면, 즉 5로 나눌 수 있는 총 부분집합이 얼마나 되는지 세는 방법입니다. 답은 이 기묘하고 복잡한 식의 5분의 1입니다. 그니까, 방금 계산한 값인 2²⁰⁰⁰+4×2⁴⁰⁰의 5분의 1입니다.",
  "n_reviews": 0,
  "start": 1766.16,
  "end": 1784.44
 },
 {
  "input": "And here you might want to do just a quick sanity check on does this answer make any sense.",
  "translatedText": "여기서 이 답변이 말이 되는지 간단히 확인해 볼 수 있습니다.",
  "model": "DeepL",
  "from_community_srt": "여기서 이 답이 타당한지, 간단한 검사를 해 봅시다.",
  "n_reviews": 0,
  "start": 1785.52,
  "end": 1789.36
 },
 {
  "input": "For example, if you do it in the smaller case with the set one two three four five, and you walk through all the same reasoning that we just did, it tells you that the answer is one fifth of two to the fifth, the total number of subsets, plus four times two to the one in this case, which is a fifth of 32 plus eight, which is eight.",
  "translatedText": "예를 들어 1 2 3 4 5 집합의 작은 경우에서 방금 수행한 것과 동일한 추론을 수행하면 답은 2의 5분의 1에서 5분의 5, 즉 총 하위 집합 수에 2의 4를 더한 값인 32의 5분의 1에 8을 더한 값인 8이라는 것을 알 수 있습니다.",
  "model": "DeepL",
  "from_community_srt": "예를 들어, {1, 2, 3, 4, 5}와 같은 작은 예시에서 방금 설명한 것과 동일한 작업을 수행하면, 답은 2⁵ +4×2¹의 5분의 1인 부분집합의 수, 즉 (32+8)의 5분의 1인 8이 된다는 것을 알 수 있습니다.",
  "n_reviews": 0,
  "start": 1790.04,
  "end": 1807.98
 },
 {
  "input": "And if you'll remember when we explicitly looked at them all, that was in fact the answer.",
  "translatedText": "그리고 이 모든 것을 명시적으로 살펴봤을 때 사실 그것이 정답이었습니다.",
  "model": "DeepL",
  "from_community_srt": "그리고 우리가 그것들을 분명히 봤을 때를 기억한다면, 8은 정답이 맞습니다.",
  "n_reviews": 0,
  "start": 1808.44,
  "end": 1812.42
 },
 {
  "input": "Look, this is a hard puzzle, and when it's worth putting in the time to solve a hard problem, it's also worth taking some time to reflect on it.",
  "translatedText": "어려운 퍼즐을 풀기 위해 시간을 투자할 가치가 있다면, 그 퍼즐에 대해 생각해 보는 시간을 갖는 것도 가치가 있습니다.",
  "model": "DeepL",
  "from_community_srt": "보세요, 이것은 어려운 퍼즐이고, 어려운 문제를 해결하기 위해 시간을 들일 가치가 있을 때, 그것은 또한 곰곰이 생각해 볼 가치가 있습니다.",
  "n_reviews": 0,
  "start": 1817.5,
  "end": 1824.3
 },
 {
  "input": "What do you get out of this?",
  "translatedText": "이를 통해 무엇을 얻을 수 있나요?",
  "model": "DeepL",
  "from_community_srt": "이걸로 뭘 얻을 수 있죠?",
  "n_reviews": 0,
  "start": 1824.42,
  "end": 1825.2
 },
 {
  "input": "What's the takeaway? Now you could reflect on the answer itself, how the dominant part is indeed one fifth of all the total subsets like we might have guessed, and how this error term came about from the not quite destructive interference in a massive combination of roots of unity.",
  "translatedText": "우리가 짐작했던 것처럼 전체 하위 집합의 5분의 1이 실제로 무엇이며, 이 오류 용어는 통합의 거대한 뿌리 조합에서 파괴적이지 않은 간섭으로 인해 어떻게 생겨났는지 설명합니다.",
  "model": "DeepL",
  "from_community_srt": "뭐를 가져갈 수 있죠? 여러분은 어떻게 지배적인 부분이 우리가 추측했던 것처럼 실제로 전체 부분집합들의 5분의 1이 되는지, 그리고 어떻게 우리가 생각 못 한 항이 거듭제곱근의 간섭으로부터 생겨났는지를 생각해 볼 수 있습니다.",
  "n_reviews": 0,
  "start": 1829.64,
  "end": 1839.3
 },
 {
  "input": "But again, what makes this question interesting is not the answer, it's the way that we solved it, namely taking a discrete sequence that we want to understand and treating it as the coefficients on a polynomial, then evaluating that polynomial on complex values.",
  "translatedText": "하지만 다시 말하지만, 이 질문을 흥미롭게 만드는 것은 답이 아니라 문제를 푸는 방식, 즉 이해하고자 하는 이산 수열을 다항식의 계수로 취급한 다음 그 다항식을 복소수 값으로 평가하는 방식입니다.",
  "model": "DeepL",
  "from_community_srt": "하지만 이 질문을 흥미롭게 만드는 것은 답이 아니라 우리가 그것을 푸는 방법입니다. 즉, 우리가 이해하고자 하는 이산적인 수열을 가지고, 다항식의 계수처럼 생각한 다음, 복소수 값에 대해 다항식을 계산합니다.",
  "n_reviews": 0,
  "start": 1840.12,
  "end": 1855.16
 },
 {
  "input": "Both of those steps are probably highly unexpected at the outset, but both of those steps relate to some very general and powerful techniques that you'll find elsewhere in math.",
  "translatedText": "이 두 단계 모두 처음에는 매우 의외일 수 있지만, 수학의 다른 곳에서 찾을 수 있는 매우 일반적이고 강력한 기법과 관련이 있습니다.",
  "model": "DeepL",
  "from_community_srt": "이 두 단계 모두 처음에는 매우 예상치 못한 것일 수 있습니다. 하지만 이 두 단계는 수학의 다른 곳에서 볼 수 있는 매우 일반적이고 강력한 기술과 관련이 있습니다.",
  "n_reviews": 0,
  "start": 1855.74,
  "end": 1864.3
 },
 {
  "input": "For example, at the top of the lesson, I promised that the technique that we would use would be similar in spirit to the way that primes are studied, and the set of ideas that leads up to the Riemann hypothesis and things like that.",
  "translatedText": "예를 들어, 수업의 맨 위에는 우리가 사용할 기술이 소수를 연구하는 방식과 리만 가설 등으로 이어지는 일련의 아이디어와 정신이 비슷할 것이라고 약속했습니다.",
  "model": "DeepL",
  "from_community_srt": "예를 들어, 수업의 맨 처음에, 저는 우리가 사용할 기술은 소수가 연구되는 방법과 리만 가설과 그와 비슷한 것들을 이끌어내는 아이디어와 유사할 것이라고 약속했습니다.",
  "n_reviews": 0,
  "start": 1864.9,
  "end": 1876.12
 },
 {
  "input": "Now this is a very beautiful topic, enough so that I think it seems a little criminal to cram some kind of rushed version into the end here.",
  "translatedText": "이제 이것은 매우 아름다운 주제이므로 여기서 급조된 버전을 마지막에 끼워 넣는 것이 약간 범죄처럼 보일 정도입니다.",
  "model": "DeepL",
  "from_community_srt": "자, 이건 아주 아름다운 주제입니다. 그래서 어떤 버전을 성급하게 영상 끝에 넣는 것은 작은 범죄처럼 보일 정도입니다.",
  "n_reviews": 0,
  "start": 1876.5,
  "end": 1883.04
 },
 {
  "input": "The right thing to do, I think, is to just make that video I promised a while back about the zeta function, take the time, do it right.",
  "translatedText": "제 생각에는 제타 기능에 대해 얼마 전에 약속했던 동영상을 시간을 들여서 제대로 만드는 것이 옳은 일이라고 생각합니다.",
  "model": "DeepL",
  "from_community_srt": "제가 생각하는 옳은 일은, 제가 얼마 전에 약속했던 ζ 함수에 대한 영상을 만드는 것입니다. 시간을 내서,",
  "n_reviews": 0,
  "start": 1883.34,
  "end": 1889.82
 },
 {
  "input": "But if you're curious, and if you'll allow me to throw some things up on the screen without explaining them, here's the two or three sentence version of how the two are parallel.",
  "translatedText": "하지만 궁금하신 분들을 위해 설명하지 않고 화면에 몇 가지를 띄우는 것을 허락해 주신다면 두 가지가 어떻게 평행한 것인지 두세 문장 버전으로 설명해 드리겠습니다.",
  "model": "DeepL",
  "from_community_srt": "한번 해보세요. 하지만 궁금하신다면, 제가 설명하지 않고 화면 위에 몇 가지를 올려놓을 수 있도록 허락해 주신다면, 다음은 두 문장이 어떻게 유사한지에 대한 두세 문장 버전입니다.",
  "n_reviews": 0,
  "start": 1890.44,
  "end": 1898.3
 },
 {
  "input": "Just like our subsets puzzle, the way that Riemann studied primes involved a discrete sequence we want to understand, something carrying information about prime numbers, and then considering a function whose coefficients are the terms in that sequence.",
  "translatedText": "부분집합 퍼즐과 마찬가지로, 리만이 소수를 연구하는 방식은 우리가 이해하고자 하는 불연속 수열, 즉 소수에 대한 정보를 담고 있는 수열을 찾은 다음 그 수열의 계수를 항으로 하는 함수를 고려하는 것이었습니다.",
  "model": "DeepL",
  "from_community_srt": "우리의 부분집합 퍼즐처럼, 리만이 소수를 연구하는 방법은 우리가 이해하고자 하는 이산 수열을 포함합니다. 소수에 대한 정보를 담고 있는 무엇인가가 있고, 그 수열의 항이 계수인 함수를 고려합니다.",
  "n_reviews": 0,
  "start": 1899.02,
  "end": 1912.32
 },
 {
  "input": "In that case, it's not quite a polynomial, instead it's a related structure known as a Dirichlet series, or Dirichlet series depending on who you ask, but it's the same essential idea.",
  "translatedText": "이 경우 다항식이 아니라 디리클레 급수 또는 디리클레 급수라고 부르는 관련 구조이지만, 본질적인 개념은 동일합니다.",
  "model": "DeepL",
  "from_community_srt": "이 경우, 이것은 다항식이 아니라, 디리클레 급수 (혹은 Dir-ick-ley 급수, 사람마다 다르게 발음함)로 알려진 구조이지만, 같은 본질적인 아이디어입니다.",
  "n_reviews": 0,
  "start": 1913.12,
  "end": 1921.76
 },
 {
  "input": "Then the way to suss out information about those coefficients comes from studying how this function behaves with, you guessed it, complex valued inputs.",
  "translatedText": "그런 다음 이러한 계수에 대한 정보를 알아내는 방법은 이 함수가 복잡한 값의 입력에 대해 어떻게 작동하는지 연구하는 것입니다.",
  "model": "DeepL",
  "from_community_srt": "그런 다음, 이러한 계수에 대한 정보를 알아내는 방법은 이 함수가 복소수 값에 대해 어떻게 작용하는지를 연구하는 것입니다.",
  "n_reviews": 0,
  "start": 1922.16,
  "end": 1931.4
 },
 {
  "input": "The techniques in his case get a lot more sophisticated, after all Riemann was a pioneer in complex analysis, but the fact remains extending your domain beyond real numbers like this offers you, the mathematician, a lot more power in making deductions about the coefficients.",
  "translatedText": "리만이 복소수 분석의 선구자였기 때문에 그의 경우의 기술은 훨씬 더 정교해졌지만, 이렇게 실수를 넘어 영역을 확장하면 수학자가 계수를 추론하는 데 훨씬 더 많은 힘을 얻을 수 있다는 사실은 여전히 유효합니다.",
  "model": "DeepL",
  "from_community_srt": "리만의 경우 기술은 훨씬 더 정교해졌습니다. 결국, 리만은 복소해석의 선구자가 됐습니다. 하지만 사실, 정의역을 실수 이상으로 확장하면, 수학자들은 계수에 대한 추론을 할 수 있는 훨씬 더 많은 힘을 가질 수 있습니다.",
  "n_reviews": 0,
  "start": 1932.36,
  "end": 1947.4
 },
 {
  "input": "For some viewers this all might leave the lingering question of why exactly complex numbers are so unreasonably useful in this way.",
  "translatedText": "일부 시청자에게는 이 모든 것이 왜 복소수가 이런 식으로 불합리하게 유용할까 하는 의문을 남길 수 있습니다.",
  "model": "DeepL",
  "from_community_srt": "일부 시청자들에게, 이 모든 것은 왜 정확히 복소수들이 이런 식으로 지나치게 유용한지에 대한 궁금증을 남길 수 있습니다.",
  "n_reviews": 0,
  "start": 1948.7,
  "end": 1955.92
 },
 {
  "input": "It's a hard question to answer exactly, but if you think about our puzzle, everything we just did, as soon as we were in this situation where plugging in different inputs revealed hidden information about the coefficients, it's sort of like the more inputs you can work with the better, so you might as well open yourself up to a richer space of numbers like the complex plane.",
  "translatedText": "정확히 답하기 어려운 질문이지만, 방금 한 퍼즐을 생각해보면 다양한 입력을 연결하면 계수에 대한 숨겨진 정보가 드러나는 상황이었기 때문에, 입력이 많을수록 더 좋은 작업을 할 수 있으므로 복소면처럼 더 풍부한 수의 공간에 자신을 열어두는 것과 같습니다.",
  "model": "DeepL",
  "from_community_srt": "정확히 답하기 어려운 질문이지만, 퍼즐을 생각해보면 우리가 방금까지 했던 모든 것들은 서로 다른 입력들을 대입하면 계수에 대한 숨겨진 정보가 드러나는 것처럼, 더 많은 입력을 할 수록 더 좋습니다. 그래서 여러분은 복소평면과 같이 더 풍부한 숫자의 공간으로 자신을 개방할 수 있습니다.",
  "n_reviews": 0,
  "start": 1956.66,
  "end": 1975.18
 },
 {
  "input": "But there is a more specific intuition that I want you to come away with here.",
  "translatedText": "하지만 여기서 여러분이 얻었으면 하는 보다 구체적인 직관이 있습니다.",
  "model": "DeepL",
  "from_community_srt": "하지만 여기서 벗어나길 바라는 더 구체적인 직관이 있습니다.",
  "n_reviews": 0,
  "start": 1975.84,
  "end": 1979.56
 },
 {
  "input": "In our puzzle the relevant fact that we wanted, the sum of every fifth coefficient, was a kind of frequency question, and the real reason the complex numbers as opposed to some other structure proved to be useful for us is that we could find a value so that successive products have this cycling behavior.",
  "translatedText": "퍼즐에서 우리가 원했던 관련 사실, 즉 5번째 계수의 합은 일종의 빈도 문제였고, 다른 구조가 아닌 복소수가 유용한 이유는 연속되는 제품이 이러한 순환 동작을 갖도록 값을 찾을 수 있었기 때문입니다.",
  "model": "DeepL",
  "from_community_srt": "우리의 퍼즐에서, 우리가 원했던 관련 사실, 매 5번째 계수의 합은 일종의 주기 질문이었습니다. 그리고 다른 구조와 달리, 복소수가 우리에게 유용한 것으로 입증된 실제 이유는 연속적인 곱이, 이러한 순환 동작을 하는 값을 찾을 수 있기 때문입니다.",
  "n_reviews": 0,
  "start": 1980.06,
  "end": 1996.68
 },
 {
  "input": "This use of values on the unit circle and roots of unity in particular to suss out frequency information is extremely fruitful.",
  "translatedText": "특히 단위 원과 합집합의 근에 대한 값을 사용하여 주파수 정보를 파악하는 것은 매우 유익합니다.",
  "model": "DeepL",
  "from_community_srt": "특히 주기 정보를 알아내기 위해 단위원과 거듭제곱근에 대한 값을 사용하는 것은 매우 효과적입니다.",
  "n_reviews": 0,
  "start": 1997.0,
  "end": 2004.14
 },
 {
  "input": "It is almost impossible to overstate how helpful that idea is.",
  "translatedText": "이 아이디어가 얼마나 도움이 되는지 아무리 강조해도 지나치지 않습니다.",
  "model": "DeepL",
  "from_community_srt": "이 아이디어가 얼마나 도움이 되는지 과장하는 것은 거의 불가능합니다.",
  "n_reviews": 0,
  "start": 2004.4,
  "end": 2008.3
 },
 {
  "input": "Just to give one out of thousands of examples, in the 1990s Peter Shor found a way for quantum computers to factor large numbers way way faster than classical computers can.",
  "translatedText": "수천 가지 사례 중 한 가지를 예로 들자면, 1990년대에 피터 쇼어는 양자 컴퓨터가 기존 컴퓨터보다 훨씬 빠르게 큰 수를 인수분해할 수 있는 방법을 발견했습니다.",
  "model": "DeepL",
  "from_community_srt": "수천개의 예들 중 하나를 들어보자면, 1990년대에 Peter Shor는 양자 컴퓨터가 일반 컴퓨터보다 훨씬 빠른 방식으로 큰 숫자를 소인수분해하는 방법을 발견했습니다.",
  "n_reviews": 0,
  "start": 2008.58,
  "end": 2018.3
 },
 {
  "input": "And if you go in and you look at the details of how what we now call Shor's algorithm works, the idea is essentially this, the use of roots of unity to detect a kind of frequency information.",
  "translatedText": "현재 쇼의 알고리즘이라고 부르는 것이 어떻게 작동하는지 자세히 살펴보면, 이 아이디어의 핵심은 일종의 주파수 정보를 감지하기 위해 통일성의 루트를 사용하는 것입니다.",
  "model": "DeepL",
  "from_community_srt": "우리가 \"쇼어 알고리즘\"이라고 부르는 것이 어떻게 작동하는지 자세히 살펴보면, 아이디어는 본질적으로 일종의 주기를 찾기 위해 거듭제곱근을 사용하는 것입니다.",
  "n_reviews": 0,
  "start": 2018.62,
  "end": 2028.8
 },
 {
  "input": "More generally this is the core idea that underlies Fourier transforms and Fourier series and the infinite swell of topics that follow from those.",
  "translatedText": "보다 일반적으로 이것은 푸리에 변환과 푸리에 급수, 그리고 그로부터 이어지는 무한히 많은 주제의 근간이 되는 핵심 개념입니다.",
  "model": "DeepL",
  "from_community_srt": "더 일반적으로, 이것은 푸리에 변환과 푸리에 급수의 기초가 되는 핵심 아이디어이며, 그것들로부터 오는 무한한 주제의 팽창입니다.",
  "n_reviews": 0,
  "start": 2029.32,
  "end": 2036.12
 },
 {
  "input": "As to the topic of generating functions themselves, we've really only just scratched the surface here, and if you want to learn more I highly recommend this kind of hilariously named book Generating Functionology by Herbert Wilf.",
  "translatedText": "함수 생성 자체에 대한 주제에 관해서는 여기서는 표면적인 부분만 다루었으며, 더 자세히 알고 싶으시다면 Herbert Wilf의 재미있는 이름의 책 'Generating Functionology'를 적극 추천합니다.",
  "model": "DeepL",
  "from_community_srt": "함수 생성에 관한 주제에 대해서는, 우리는 여기서 단지 표면만 긁었습니다. 만약 여러분이 더 배우고 싶다면, 저는 Herbert Wilf의 책인 생성함수론(재밌는 이름이네요)을 강력히 추천합니다.",
  "n_reviews": 0,
  "start": 2036.98,
  "end": 2048.2
 },
 {
  "input": "And I'll also leave up a few fun puzzles on the screen here for anyone who wants to flex their muscles a bit with the idea.",
  "translatedText": "또한, 이 아이디어로 근육을 조금 더 단련하고 싶은 분들을 위해 재미있는 퍼즐 몇 개를 화면에 띄워두겠습니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 2048.54,
  "end": 2053.12
 }
]