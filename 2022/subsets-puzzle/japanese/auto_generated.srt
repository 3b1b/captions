1
00:00:00,000 --> 00:00:02,820
すぐにパズルを質問します。 実際、それはかなり難し

2
00:00:02,820 --> 00:00:05,640
いパズルです。 し かし、その前に、ネタバレをして

3
00:00:05,640 --> 00:00:07,670
いきたいと思います。 つまり、この

4
00:00:07,670 --> 00:00:10,716
問題を解決する方法には、次のような問題が含まれます。

5
00:00:10,716 --> 00:00:11,280
複素数の。

6
00:00:11,280 --> 00:00:13,352
そして、一度聞いたら、パズルが純粋に個別

7
00:00:13,352 --> 00:00:15,424
の質問になることを考 えると、それはばか

8
00:00:15,424 --> 00:00:17,600
げていると思われることに同意するでしょう。

9
00:00:17,600 --> 00:00:20,480
整数とその合計についてのみ質問されます。

10
00:00:20,480 --> 00:00:25,120
地平線のどこにも、想像上のものや連続性の匂いさえありません。

11
00:00:25,120 --> 00:00:28,172
言い方を借りれば、複素数が離散数学に不当に役

12
00:00:28,172 --> 00:00:30,960
立つのは、決してこの時だけではありません。

13
00:00:30,960 --> 00:00:33,879
私が挙げられるより有名な例は、数学者が素数をどの

14
00:00:33,879 --> 00:00:36,554
ように理解す るかという現代的な方法です。

15
00:00:36,554 --> 00:00:38,500
素数がどのように分布しているか

16
00:00:38,500 --> 00:00:41,176
、特定の領域での密度などに関する質問です。

17
00:00:41,176 --> 00:00:44,217
特別に設計された 関数を研究する必要があります。

18
00:00:44,217 --> 00:00:45,920
その入力と出力は複素数です。

19
00:00:45,920 --> 00:00:47,676
これが有名なリーマン予想の内容であること

20
00:00:47,676 --> 00:00:49,520
をご存知の方もいらっしゃるかもしれません。

21
00:00:49,520 --> 00:00:52,426
基本的には特別に設計された関数があり、一見

22
00:00:52,426 --> 00:00:55,200
すると素数の離散世界とは無関係に見えます。

23
00:00:55,200 --> 00:00:57,280
滑らかで、複雑な価値があります。

24
00:00:57,280 --> 00:00:59,968
しかし、内部では、離散素数について必要な

25
00:00:59,968 --> 00:01:02,400
すべての情報がエンコードされています。

26
00:01:02,400 --> 00:01:05,263
そして最も重要なことは、素数に関する特定の質

27
00:01:05,263 --> 00:01:08,126
問は、素数自体を直接分 析するよりも、この関

28
00:01:08,126 --> 00:01:11,120
数を分析することで簡単に答えることができます。

29
00:01:11,120 --> 00:01:13,770
もちろん、私たちのパズルは、すぐに共有することを約

30
00:01:13,770 --> 00:01:16,320
束しますが、リーマン予想よりもはるかに無邪気です。

31
00:01:16,320 --> 00:01:17,760
おもちゃの問題です。

32
00:01:17,760 --> 00:01:20,080
しかし、ビデオの最後では、それを解決するために私

33
00:01:20,080 --> 00:01:22,400
たちが使用するテ クニック、つまり私たちがここに

34
00:01:22,400 --> 00:01:24,043
いる本当の理由が、実際にはリーマ

35
00:01:24,043 --> 00:01:26,363
ン予想につながる設定と精神的にかなり似ていること

36
00:01:26,363 --> 00:01:27,040
を共有します。

37
00:01:27,040 --> 00:01:35,040
そして素数定理とそれをめぐる一連の思考。

38
00:01:35,040 --> 00:01:37,280
今日のパズルは、Titou、Rescu、Zoo

39
00:01:37,280 --> 00:01:39,520
mingfeng によるこの本から来ています。

40
00:01:39,520 --> 00:01:42,243
基本的には、国際数学オリンピックの米国チー

41
00:01:42,243 --> 00:01:44,720
ムのトレーニングに使用される問題集です。

42
00:01:44,720 --> 00:01:47,892
第 2 章「高度な問題」に目を向けると、問題番

43
00:01:47,892 --> 00:01:50,800
号 10 でこの一見無害な質問が行われます。

44
00:01:50,800 --> 00:01:54,723
要素の合計が 5 で割り切れる集合 1

45
00:01:54,723 --> 00:01:59,040
の 部分集合の数を 2000 まで求めます。

46
00:01:59,040 --> 00:02:01,520
さて、解析には少し時間がかかるかもしれません。

47
00:02:01,520 --> 00:02:03,459
たとえば、セット 3、1、4 の

48
00:02:03,459 --> 00:02:05,520
ようなものはサブセットになります。

49
00:02:05,520 --> 00:02:08,480
そのすべての要素は、大きなセットの要素でもあります。

50
00:02:08,480 --> 00:02:10,480
そして、その合計、3 プラス 1 プラス

51
00:02:10,480 --> 00:02:12,480
4 は 8 なので、これは考慮されません。

52
00:02:12,480 --> 00:02:13,680
それは私たちの計算には含まれていません。

53
00:02:13,680 --> 00:02:17,221
一方、セット 2、3、5 などもサブセットであり、合計は

54
00:02:17,221 --> 00:02:18,320
10 になります。

55
00:02:18,320 --> 00:02:21,520
これは 5 で割り切れるので、数えておきたい値です。

56
00:02:21,520 --> 00:02:24,593
最初に用意したプレビュー アニメーションは、本質的に

57
00:02:24,593 --> 00:02:27,440
は、この質問に答えようとする強引なプログラムです。

58
00:02:27,440 --> 00:02:30,601
考えられるさまざまなサブセットをすべて反復処理して

59
00:02:30,601 --> 00:02:33,641
、途中で各サブセットの合計を見つけ、5 の倍数が

60
00:02:33,641 --> 00:02:36,560
見つかるたびにカウンターをインクリメントします。

61
00:02:36,560 --> 00:02:38,530
ここでのウォーミングアップの質問としては、少

62
00:02:38,530 --> 00:02:40,500
し立ち止まって、全体の サブセットの合計がい

63
00:02:40,500 --> 00:02:42,560
くつあるかについて考えてみるのがよいでしょう。

64
00:02:42,560 --> 00:02:44,400
この 5 の倍数のことは忘れてください。

65
00:02:44,400 --> 00:02:48,480
このプログラムが終了するまでどれくらい時間がかかりますか?

66
00:02:48,480 --> 00:02:50,200
答えは2の2000乗であることを

67
00:02:50,200 --> 00:02:51,920
ご存知の方も多いかもしれません。

68
00:02:51,920 --> 00:02:54,935
基本的な考え方は、サブセットを構築するときに、2,0

69
00:02:54,935 --> 00:02:57,840
00 の異なる 2 つの選択肢があるということです。

70
00:02:57,840 --> 00:02:59,920
要素を含めますか、含めませんか?

71
00:02:59,920 --> 00:03:03,336
そして、これらの選択肢はすべて互いに独立しているため、

72
00:03:03,336 --> 00:03:06,508
サブセットを構築する際の選択肢の総数は、2 × 2

73
00:03:06,508 --> 00:03:09,680
× 2 × 2 と、延々と 2000 回となります。

74
00:03:09,680 --> 00:03:11,560
私たちのプログラムについて考える

75
00:03:11,560 --> 00:03:13,440
と、それは恐ろしく膨大な数です。

76
00:03:13,440 --> 00:03:15,800
したがって、たとえ私たちがこの強引なアプローチ

77
00:03:15,800 --> 00:03:18,160
を宇宙で常に与 えたとしても、宇宙が提供できる

78
00:03:18,160 --> 00:03:19,801
すべての物理的リソースを使って

79
00:03:19,801 --> 00:03:22,880
、それに近づくことさえなく、表面を傷つけることはありません。

80
00:03:22,880 --> 00:03:24,080
明らかに、私たちはそれよりもず

81
00:03:24,080 --> 00:03:25,360
っと賢くならなければなりません。

82
00:03:25,360 --> 00:03:27,680
そして、答えが何であるべきかを単に推測し、大まか

83
00:03:27,680 --> 00:03:30,096
に概算すると、おそらく、 それは全サブセットの約

84
00:03:30,096 --> 00:03:32,320
5 分の 1 になるはずだと推測するでしょう。

85
00:03:32,320 --> 00:03:33,976
おそらく、これらすべての合計は

86
00:03:33,976 --> 00:03:35,840
mod 5 でほぼ均等に分布します。

87
00:03:35,840 --> 00:03:38,400
そして、はい、それは真実であり、それはまともな近似値です。

88
00:03:38,400 --> 00:03:40,462
しかし、質問の核心、つまりここでの本

89
00:03:40,462 --> 00:03:42,640
当の課題は、正確な答えを得ることです。

90
00:03:42,640 --> 00:03:44,502
これは整数ではないので実際の答えにはなり

91
00:03:44,502 --> 00:03:46,364
ませんが、本当の答え はもう少し多いので

92
00:03:46,364 --> 00:03:48,320
しょうか、それとも少し少ないのでしょうか?

93
00:03:48,320 --> 00:03:50,400
それとも、もっと多いのか、それとも少ないのでしょうか？

94
00:03:50,400 --> 00:03:52,960
そのエラーを解決するためにどのよ

95
00:03:52,960 --> 00:03:55,520
うな戦術を使用できるでしょうか?

96
00:03:55,520 --> 00:03:57,760
はっきり言っておきますが、このレッスンは

97
00:03:57,760 --> 00:04:00,000
目的地よりも旅そのものに関するものです。

98
00:04:00,000 --> 00:04:01,517
この方法でサブセットをフィルタリング

99
00:04:01,517 --> 00:04:03,120
してカウントする必要があるでしょうか?

100
00:04:03,120 --> 00:04:04,240
ほぼ間違いなくそうではありません

101
00:04:04,240 --> 00:04:05,360
が、私はそうは期待していません。

102
00:04:05,360 --> 00:04:08,256
しかし、おもちゃの問題かどうかにかかわらず、それは正

103
00:04:08,256 --> 00:04:11,152
当に挑戦的な質問であり、そ の挑戦を乗り越えることで

104
00:04:11,152 --> 00:04:14,160
、他の種類の難しい質問に関連するスキルが開発されます。

105
00:04:14,160 --> 00:04:16,445
あなたと私にとって、私があなたと共有したいソ

106
00:04:16,445 --> 00:04:18,315
リューションには、少な くとも 2

107
00:04:18,315 --> 00:04:21,120
つの非常に驚くべき、そして非常に美しい展開があります。

108
00:04:21,120 --> 00:04:24,636
複素数が驚くべき登場をするだろうということはすでに伝

109
00:04:24,636 --> 00:04:28,023
えましたが、それに到達する前に、別の奇妙な展開があ

110
00:04:28,023 --> 00:04:31,280
り、それはおそらくさらに奇妙で、さらに予想外です。

111
00:04:31,280 --> 00:04:33,670
ただし、準備を整えるために、パズルの方向性を理解

112
00:04:33,670 --> 00:04:36,060
して、すべての優 れた問題解決者が行うべきことを

113
00:04:36,060 --> 00:04:38,251
実行して、より単純な例から始めまし ょう。

114
00:04:38,251 --> 00:04:41,040
おそらくセット 1、2、3、4、5 で試してみましょう。

115
00:04:41,040 --> 00:04:43,005
もしあなたが紙と鉛筆を使ってこの問題を解いていたとした

116
00:04:43,005 --> 00:04:44,461
ら、ご存知のように、 あなたも IMO

117
00:04:44,461 --> 00:04:46,353
の訓練を受けている子供の一人であるなら、単純に 2

118
00:04:46,353 --> 00:04:48,319
か ら 5 のサブセットをすべてリストアップするのは悪

119
00:04:48,319 --> 00:04:49,120
い考えではありません。

120
00:04:49,120 --> 00:04:55,680
まだ32人なのでそんなに多くないです。

121
00:04:55,680 --> 00:04:58,256
これらすべてを頭の中で整理するにはさまざまな方

122
00:04:58,256 --> 00:05:00,832
法がありますが、 私たちが関心があるのはそれら

123
00:05:00,832 --> 00:05:03,632
の合計であるため、自然なことは、そ れらすべてを

124
00:05:03,632 --> 00:05:06,320
1 つずつ調べてそれらの合計を計算することです。

125
00:05:06,320 --> 00:05:08,070
ここでは、YouTube でやっているだけです。

126
00:05:08,070 --> 00:05:09,750
私はコンピューターを持 っているので、少しごまか

127
00:05:09,750 --> 00:05:11,360
して、すべての合計がいくらになるかを示します。

128
00:05:11,360 --> 00:05:14,870
また、少し騙してこれらすべてを再配置し、すべてが

129
00:05:14,870 --> 00:05:18,240
同じ合計を持つコレクションに暗示的に整理します。

130
00:05:18,240 --> 00:05:19,894
たとえば、合計すると 6 になる 3

131
00:05:19,894 --> 00:05:21,287
つの異なるサブセットがあり、そ

132
00:05:21,287 --> 00:05:23,289
れらはすべてこの小さなボックス内に収まり、3

133
00:05:23,289 --> 00:05:24,856
つのサブセットを合計 すると 10

134
00:05:24,856 --> 00:05:27,120
になるものもすべてこの小さなボックス内に収まります。

135
00:05:27,120 --> 00:05:30,318
全体として、私たちが注目しているもの、合計が

136
00:05:30,318 --> 00:05:33,239
5 で割り切れるサブセットが左側に表示さ

137
00:05:33,239 --> 00:05:36,160
れており、合計 8 つあるように見えます。

138
00:05:36,160 --> 00:05:38,693
ああ、ところで、空集合を数えていると言うべ

139
00:05:38,693 --> 00:05:41,829
きですが、その合計は 0 であると考えられ、それは

140
00:05:41,829 --> 00:05:43,760
5 の倍数であると考えられます。

141
00:05:43,760 --> 00:05:45,786
最後に、これらすべてがごく自然な選択で

142
00:05:45,786 --> 00:05:47,920
あることに同意していただければ幸いです。

143
00:05:47,920 --> 00:05:49,754
少し時間を取って、この答えをヒューリステ

144
00:05:49,754 --> 00:05:51,680
ィックに予想されるものと比較してください。

145
00:05:51,680 --> 00:05:54,258
合計 32 のサブセットのうち、5

146
00:05:54,258 --> 00:05:56,407
分の 1 は 6 になります。

147
00:05:56,407 --> 00:05:58,323
4 なので、少なくともこの小さな例では、

148
00:05:58,323 --> 00:06:00,240
本当の答えはそれより少し大きくなります。

149
00:06:00,240 --> 00:06:03,760
それは頭の片隅に置いておきたいことかもしれません。

150
00:06:03,760 --> 00:06:06,460
さて、これはビデオの部分ですが、正直に言うと、どうや

151
00:06:06,460 --> 00:06:08,960
ってモチベーションを上げればよいのかわかりません。

152
00:06:08,960 --> 00:06:12,044
個人的には、数学が自分で発見できたような気がするのが好き

153
00:06:12,044 --> 00:06:15,128
です。 もしあなたと私が一緒に座ってこの問題を解いている

154
00:06:15,128 --> 00:06:18,000
としたら、あらゆる種類の自然な手順が取れると思います。

155
00:06:18,000 --> 00:06:20,480
おそらく、サブセットに何らかの構造があるかどうかを

156
00:06:20,480 --> 00:06:22,961
理解しようとし たり、他の小さな例に対して、多くの

157
00:06:22,961 --> 00:06:24,945
異なる反復でこれらの合計が mod 5

158
00:06:24,945 --> 00:06:27,624
でどのように分布するかを試したり、そこから次のような

159
00:06:27,624 --> 00:06:30,502
方法で何らかの証明をつかもうとしたりするかもしれません。

160
00:06:30,502 --> 00:06:30,800
誘導。

161
00:06:30,800 --> 00:06:32,400
このレッスンの初期バージョンを何人かの利用

162
00:06:32,400 --> 00:06:34,000
者と共有したとき、人 々はいくつかの素晴ら

163
00:06:34,000 --> 00:06:35,600
しい線形代数のアプローチを持ち出しました。

164
00:06:35,600 --> 00:06:37,920
それらはすべて良好であり、何も問題はありません。

165
00:06:37,920 --> 00:06:40,834
しかし、代わりに、ここでの私の目標は、生成関数と呼ばれるも

166
00:06:40,834 --> 00:06:43,749
のについて教えるこ とです。 これは、事後に「なるほど、こ

167
00:06:43,749 --> 00:06:46,664
れでうまくいくのは分かった」と考えるこ とができる戦術の

168
00:06:46,664 --> 00:06:49,680
1 つです。 しかし一体どうやって考えたでしょうか。 それ？

169
00:06:49,680 --> 00:06:51,280
正直に言うと、分かりません。

170
00:06:51,280 --> 00:06:53,850
人生には、生成関数を理解するまでの時期と

171
00:06:53,850 --> 00:06:56,420
その後の時期がありま すが、思いつき以外

172
00:06:56,420 --> 00:06:59,120
にそれらを結びつけるものは思いつきません。

173
00:06:59,120 --> 00:07:02,201
多項式 1 プラス x 倍 1 プラス x の 2

174
00:07:02,201 --> 00:07:05,282
乗倍 1 プラス x の 3 乗倍 1 プラス x

175
00:07:05,282 --> 00:07:08,720
の 4 倍 1 プラス x の 5 倍を考えてもらいます。

176
00:07:08,720 --> 00:07:10,160
さて、これはどこから来たのですか?

177
00:07:10,160 --> 00:07:11,360
と尋ねるのは当然だと思います。

178
00:07:11,360 --> 00:07:13,360
多項式は物事と何の関係があるのでしょうか?

179
00:07:13,360 --> 00:07:16,960
変数 x は今何を表しているのでしょうか?

180
00:07:16,960 --> 00:07:19,280
そして本質的に、x は純粋に記号です。

181
00:07:19,280 --> 00:07:22,348
ここで多項式を書いた唯一の理由は、それを

182
00:07:22,348 --> 00:07:25,417
代数的に拡張する行為 が部分集合を構築す

183
00:07:25,417 --> 00:07:28,640
る行為を完全に反映することになるからです。

184
00:07:28,640 --> 00:07:31,383
そして重要なことに、これを行うと、同じ合計を

185
00:07:31,383 --> 00:07:34,127
持つサブセットがすべてま とめられるという、

186
00:07:34,127 --> 00:07:37,120
私たちが望むこのグループ化が自動的に行われます。

187
00:07:37,120 --> 00:07:38,880
そして、私が何を言いたいのかをお見せしましょう。

188
00:07:38,880 --> 00:07:41,037
この式を拡張すると、基本的には

189
00:07:41,037 --> 00:07:43,600
5 つの二者択一を行うことになります。

190
00:07:43,600 --> 00:07:46,480
各括弧内のどの用語を選択しますか?

191
00:07:46,480 --> 00:07:50,194
これらの括弧のそれぞれから 1 を選択すると、そ

192
00:07:50,194 --> 00:07:53,760
れは要素を何も選択しない空のセットに対応します。

193
00:07:53,760 --> 00:07:56,970
一方、1 項に x を選択し、その他すべてから

194
00:07:56,970 --> 00:08:00,582
1 を選択す ると、数値 1 だけを含むシングルトン

195
00:08:00,582 --> 00:08:01,920
セットに対応します。

196
00:08:01,920 --> 00:08:05,120
同様に、x の 2 乗項を選択したが、他のすべてから 1

197
00:08:05,120 --> 00:08:08,320
を選択した場合、それは 2 だけを含むセットに対応します。

198
00:08:08,320 --> 00:08:10,784
x の 3 乗項を選択するだけで、数値

199
00:08:10,784 --> 00:08:12,880
3 だけを含むセットに対応します。

200
00:08:12,880 --> 00:08:15,584
しかし、興味深いことに、1 項に x を選択し、x

201
00:08:15,584 --> 00:08:17,976
の 2 乗項を選択 し、その他すべてから 1

202
00:08:17,976 --> 00:08:20,160
を選択するとどうなるかに注目してください。

203
00:08:20,160 --> 00:08:22,816
これは、1 と 2 を持ち、その他すべてか

204
00:08:22,816 --> 00:08:25,600
ら何も持たないサブセットの選択に対応します。

205
00:08:25,600 --> 00:08:27,866
しかし、多項式では、展開の仕方は

206
00:08:27,866 --> 00:08:30,000
x の 3 乗のように見えます。

207
00:08:30,000 --> 00:08:33,140
したがって、2 つの異なる x 3 乗項があり、そ

208
00:08:33,140 --> 00:08:36,160
れぞれの合計が 3 である部分集合から来ています。

209
00:08:36,160 --> 00:08:38,933
正直に言うと、ここで私が行おうとしているパターンは、時間

210
00:08:38,933 --> 00:08:41,706
をかけて立ち止まって、ここで すべてを展開するとどうなる

211
00:08:41,706 --> 00:08:44,480
かを自分で考えてみると、おそらく最も簡単なパターンです。

212
00:08:44,480 --> 00:08:48,260
基本的に、考えられるすべてのサブセットは、この展開内の項の

213
00:08:48,260 --> 00:08:49,520
1 つに対応します。

214
00:08:49,520 --> 00:08:53,596
そして重要な点は、その展開から得られる項の指数が、

215
00:08:53,596 --> 00:08:57,360
対応するサブセットの合計に等しいということです。

216
00:08:57,360 --> 00:08:59,966
口に出して言うとややこしいかもしれませんが、自分の頭で

217
00:08:59,966 --> 00:09:02,480
よく考えてみれば、私の言いたいことがわかると思います。

218
00:09:02,480 --> 00:09:05,059
たとえば、問題がすべて解決し、ここで 32

219
00:09:05,059 --> 00:09:07,989
個の項をすべて収集する と、それらの項のうち 3

220
00:09:07,989 --> 00:09:10,451
つは x から 10 番目までであり、そ

221
00:09:10,451 --> 00:09:13,382
れらのそれぞれは合計が 10 に等しい要素の選択に

222
00:09:13,382 --> 00:09:14,320
由来しています。

223
00:09:14,320 --> 00:09:18,560
さて、通常、多項式を書くときは、同様の項をすべて集めます。

224
00:09:18,560 --> 00:09:21,549
10 番目までの x のコピーを 3 つ持つ代わりに、10

225
00:09:21,549 --> 00:09:24,240
番目までの x の前に係数 3 が表示されるだけです。

226
00:09:24,240 --> 00:09:27,166
したがって、これらの各係数は、サブセット

227
00:09:27,166 --> 00:09:30,240
の数を特定の合計でエンコードする方法です。

228
00:09:30,240 --> 00:09:33,472
これは、最初に述べたように、生成関数と呼ばれるものの例です

229
00:09:33,472 --> 00:09:36,704
。 アイデアは、それ ぞれの正の整数に関連付けられた答えを

230
00:09:36,704 --> 00:09:39,044
持つ質問があるかどうかです。 つまり、私

231
00:09:39,044 --> 00:09:42,276
たちの場合、サブセットの合計が何個になるかということになり

232
00:09:42,276 --> 00:09:43,280
ます。 特定の値。

233
00:09:43,280 --> 00:09:47,706
係数がその質問の答えに対応する多項式を作成する場合、こ

234
00:09:47,706 --> 00:09:52,132
の多項式のプロパティを数学的に操作および分析することで

235
00:09:52,132 --> 00:09:56,400
、元の質問から驚くほど多くの洞察を得ることができます。

236
00:09:56,400 --> 00:09:59,376
生成関数の例は山ほどありますが、特に興味深い

237
00:09:59,376 --> 00:10:02,482
例をもう 1 つ取り上げます。 同じ考え方を使

238
00:10:02,482 --> 00:10:05,200
ってフィボナッチ数列を学ぶことができます。

239
00:10:05,200 --> 00:10:07,946
したがって、この多項式の係数はすべてフィボナ

240
00:10:07,946 --> 00:10:10,693
ッチ数になります。 こ の場合、それは無限多

241
00:10:10,693 --> 00:10:13,440
項式なので、実際にはべき級数と呼ぶべきです。

242
00:10:13,440 --> 00:10:15,852
詳細についてはここでは詳しく説明しませんが、

243
00:10:15,852 --> 00:10:18,160
興味のある方のために画面上に残しておきます。

244
00:10:18,160 --> 00:10:21,336
基本的な考え方は、フィボナッチ数を定義するために使用され

245
00:10:21,336 --> 00:10:24,402
るルール (それぞれが前の 2 つの合計である) は、

246
00:10:24,402 --> 00:10:27,360
この関数に関して方程式として表現できるということです。

247
00:10:27,360 --> 00:10:29,566
この方程式により、その関数を別

248
00:10:29,566 --> 00:10:31,920
の形式で記述することができます。

249
00:10:31,920 --> 00:10:35,136
そして、ここで詳細のほとんどを省略しますが、こ

250
00:10:35,136 --> 00:10:38,218
れを操作すると、ご存知のとおり、ここに少しの

251
00:10:38,218 --> 00:10:41,435
部分分数分解と、少しの等比級数展開を追加すると

252
00:10:41,435 --> 00:10:44,651
、正確な閉形式を取得できます。 個々のフィボナ

253
00:10:44,651 --> 00:10:47,600
ッチ数式を表現できるので、とてもクールです。

254
00:10:47,600 --> 00:10:50,172
私がこれを言及したのは、実際には、この生成

255
00:10:50,172 --> 00:10:52,745
関数の考え方が、特定の 例をはるかに超えて

256
00:10:52,745 --> 00:10:55,440
いるという事実の氷山の一角を示すためでした。

257
00:10:55,440 --> 00:10:58,012
さて、私たちの特定の問題では、12345

258
00:10:58,012 --> 00:11:01,443
だけの単純な例から 2000 までのすべての数値を含む大

259
00:11:01,443 --> 00:11:04,751
きな例に拡張すると、対応する生成関数には 2 000

260
00:11:04,751 --> 00:11:07,936
個の異なる二項項が含まれます (1 プラス x、1

261
00:11:07,936 --> 00:11:11,367
プラス x)。 2 乗を繰り返し、1 に x を加えて

262
00:11:11,367 --> 00:11:12,960
2000 まで計算します。

263
00:11:12,960 --> 00:11:16,026
そして、これを拡張すると、係数が必要な情

264
00:11:16,026 --> 00:11:18,800
報をすべて教えてくれるという考えです。

265
00:11:18,800 --> 00:11:21,370
実際にそれを拡張するのは非常識なことです

266
00:11:21,370 --> 00:11:23,940
が、原理的にはそれが どのようなものにな

267
00:11:23,940 --> 00:11:26,640
るかを頭の片隅に留めておくと役に立ちます。

268
00:11:26,640 --> 00:11:30,762
たとえば、原則として、これを拡張すると、25 項の

269
00:11:30,762 --> 00:11:35,360
x の前の係数がたまたま 142 であることがわかります。

270
00:11:35,360 --> 00:11:39,601
そして、これは、合計が 25 である異なるサブセットが

271
00:11:39,601 --> 00:11:42,480
142 個あるという事実に対応します。

272
00:11:42,480 --> 00:11:45,447
したがって、ここでの母関数を分析する技術

273
00:11:45,447 --> 00:11:48,415
は、実際に式を拡張する ことなく、これら

274
00:11:48,415 --> 00:11:51,680
の係数に関する事実を推測することになります。

275
00:11:51,680 --> 00:11:56,464
したがって、先に進むと、この展開をより抽象的に書きま

276
00:11:56,464 --> 00:12:01,426
す。 n が 0 から大文字 N までの合計だけです。

277
00:12:01,426 --> 00:12:05,680
ここで、c sub n は未知の係数を示します。

278
00:12:05,680 --> 00:12:06,960
私たちにとって、それらすべてはブ

279
00:12:06,960 --> 00:12:08,240
ラックボックスとして始まります。

280
00:12:08,240 --> 00:12:10,974
そしてさらに先に進むと、これを実際の関数、つまり

281
00:12:10,974 --> 00:12:14,036
x を接続するものとして扱い始め、出力が何であるかを確

282
00:12:14,036 --> 00:12:16,880
認し、それから係数について何が分かるのかを尋ねます。

283
00:12:16,880 --> 00:12:18,812
たとえば、非常に簡単な入力は、「x

284
00:12:18,812 --> 00:12:20,960
= 0」のようなものを入力することです。

285
00:12:20,960 --> 00:12:23,032
この場合、重要なのは、上記の因数分解形式を使

286
00:12:23,032 --> 00:12:25,200
用してそれを評価する方法を知っていることです。

287
00:12:25,200 --> 00:12:27,868
x がすべて 0 に等しいと代入すると、すべての項が

288
00:12:27,868 --> 00:12:30,240
1 のように見えるため、答えは 1 になります。

289
00:12:30,240 --> 00:12:34,023
そして、拡張された形式では、x に関係する項はすべて削除さ

290
00:12:34,023 --> 00:12:37,680
れ、0 になり、最初の項 c sub 0 だけが残ります。

291
00:12:37,680 --> 00:12:39,234
さて、この場合、それは実際にはそれ

292
00:12:39,234 --> 00:12:40,880
ほど興味深いことを教えてくれません。

293
00:12:40,880 --> 00:12:42,711
これは本質的に、空のセットが 1

294
00:12:42,711 --> 00:12:45,297
つ存在するということになりますが、まだ準備が整っ

295
00:12:45,297 --> 00:12:46,160
ているだけです。

296
00:12:46,160 --> 00:12:48,176
次の例として、f を 1 で評価

297
00:12:48,176 --> 00:12:50,320
することについて考えてみましょう。

298
00:12:50,320 --> 00:12:53,326
これは、私たちが知っている式を使って行うことができます。

299
00:12:53,326 --> 00:12:56,333
これらの x のすべてに 1 を代入すると、すべての項が

300
00:12:56,333 --> 00:12:58,510
2 のように見 えるため、合計で 2 を

301
00:12:58,510 --> 00:13:00,480
2,000 回乗算することになります。

302
00:13:00,480 --> 00:13:02,748
一方、拡張された式では、x が 1

303
00:13:02,748 --> 00:13:05,773
に等しいと代入すると、x のすべての べき乗が

304
00:13:05,773 --> 00:13:08,797
1 になるため、基本的にすべての係数を加算するこ

305
00:13:08,797 --> 00:13:09,680
とになります。

306
00:13:09,680 --> 00:13:11,440
それについて考えると、それはとても素晴らしいことです。

307
00:13:11,440 --> 00:13:14,513
単一の数値で関数を評価するだけで、すべて

308
00:13:14,513 --> 00:13:17,440
の係数の合計が何であるかを推測できます。

309
00:13:17,440 --> 00:13:19,866
ここでもう一度、私たちの特定の例では、これら

310
00:13:19,866 --> 00:13:22,293
の係数の合計が何である かがすでにわかってい

311
00:13:22,293 --> 00:13:24,720
るため、それほど興味深いものではありません。

312
00:13:24,720 --> 00:13:27,040
各係数は、特定の合計を持つサブセットの数をカウントす

313
00:13:27,040 --> 00:13:29,538
るため、それらを 合計するときは、2 から 2,000

314
00:13:29,538 --> 00:13:30,966
までであることがわかっているす

315
00:13:30,966 --> 00:13:33,286
べてのサブセットをカウントしているだけであることに注

316
00:13:33,286 --> 00:13:34,000
意してください。

317
00:13:34,000 --> 00:13:36,838
ただし、この関数をマイナス 1 で評価してもら

318
00:13:36,838 --> 00:13:39,440
うと、真に新しい事実を与えることができます。

319
00:13:39,440 --> 00:13:43,360
それが何を意味するのか少し考えてみましょう。

320
00:13:43,360 --> 00:13:45,620
負の 1 を入力すると、再び既知のもの、つまり

321
00:13:45,620 --> 00:13:47,782
一番上の因数分解された 式から始まります。

322
00:13:47,782 --> 00:13:50,240
ここで必要なのは、最初の項を確認することだけです。

323
00:13:50,240 --> 00:13:52,537
x を代入すると、最初のかっこが 0

324
00:13:52,537 --> 00:13:55,440
になるため、式全体が 0 になる必要があります。

325
00:13:55,440 --> 00:13:58,059
しかし、すべての係数を使用して展開された式

326
00:13:58,059 --> 00:14:00,560
にそれを適用すると、何がわかるでしょうか?

327
00:14:00,560 --> 00:14:04,193
そして、この解決策がとる奇妙な展開をできるだけ示唆する

328
00:14:04,193 --> 00:14:07,826
という精神で、この式のマイナス 1 のさまざまな累乗を

329
00:14:07,826 --> 00:14:11,200
回転の観点から実際に視覚化してもらいたいと思います。

330
00:14:11,200 --> 00:14:13,834
最初の項、つまり 0 から 1 までの負の値は単なる 1

331
00:14:13,834 --> 00:14:16,560
であり、これを 0 から 1 までのベクトルとして描きます。

332
00:14:16,560 --> 00:14:21,111
マイナス 1 の 1 乗はマイナス 1 そのものであり、最

333
00:14:21,111 --> 00:14:25,360
後の項から 180 度回転したものとして考えてください。

334
00:14:25,360 --> 00:14:28,312
次に、負の 1 の 2 乗を取得すると、正の

335
00:14:28,312 --> 00:14:30,880
1 になり、再び 180 度回転します。

336
00:14:30,880 --> 00:14:34,045
そして一般に、ここでの連続する各用語は、180

337
00:14:34,045 --> 00:14:35,760
度回転したように見えます。

338
00:14:35,760 --> 00:14:38,952
これを代数的に解釈すると、偶数係数と奇数係

339
00:14:38,952 --> 00:14:42,000
数の間で合計が振動していることになります。

340
00:14:42,000 --> 00:14:44,160
ただし、ビジュアルを頭の片隅に置いておいてください。

341
00:14:44,160 --> 00:14:47,122
この式はどの生成関数にも当てはまりますが、ここ

342
00:14:47,122 --> 00:14:50,084
でも特別な生成関数の場合、この値、この交互の合

343
00:14:50,084 --> 00:14:52,800
計は 0 に等しくなることがわかっています。

344
00:14:52,800 --> 00:14:56,284
そして、これを解釈する方法は、偶数係数と奇数係数の間に

345
00:14:56,284 --> 00:14:59,520
均等なバランスがあることを示しているということです。

346
00:14:59,520 --> 00:15:01,765
そして、おそらくこの小さな例の文脈では、

347
00:15:01,765 --> 00:15:04,010
これらの係数はサブセッ トに関する事実を

348
00:15:04,010 --> 00:15:06,480
エンコードしていることを思い出してください。

349
00:15:06,480 --> 00:15:09,730
したがって、これらすべての偶数係数と奇数係数のバラン

350
00:15:09,730 --> 00:15:12,980
スが等しい場合、すべてのサブ セットの半分が偶数の合

351
00:15:12,980 --> 00:15:16,480
計を持ち、半分が奇数の合計を持っていることがわかります。

352
00:15:16,480 --> 00:15:18,600
おそらくそれが予想されることでしょうが、最初は

353
00:15:18,600 --> 00:15:20,720
それをどのように示すかは明らかではありません。

354
00:15:20,720 --> 00:15:24,320
そして、生成関数を使用すると、それがすぐに現れます。

355
00:15:24,320 --> 00:15:27,786
もう一度、私たちがどこへ向かうのかを示唆するために、評価し

356
00:15:27,786 --> 00:15:30,536
た最後の 2 つの項目を取得し 、それら 2

357
00:15:30,536 --> 00:15:34,003
つを合計して、1/2 で割ることによって、これを少し書き直

358
00:15:34,003 --> 00:15:34,960
させてください。

359
00:15:34,960 --> 00:15:38,460
考えてみれば、これはすべての偶数係数をフィルタリ

360
00:15:38,460 --> 00:15:41,680
ングして、すべての奇数係数を消去する方法です。

361
00:15:41,680 --> 00:15:43,770
したがって、すべての偶数係数の合計

362
00:15:43,770 --> 00:15:46,441
(これも頭の片隅で、偶数の 合計を持つ部分集合

363
00:15:46,441 --> 00:15:48,996
の総数を意味します) が全体の半分のように

364
00:15:48,996 --> 00:15:52,480
見えるという事実を記述するための特にきれいな方法になります。

365
00:15:52,480 --> 00:15:54,880
言うまでもなく、これは私たちが答えたい実際

366
00:15:54,880 --> 00:15:57,280
の質問に興味をそそられるほど近いものです。

367
00:15:57,280 --> 00:16:00,893
私たちがやりたいのは、関数 f に対して実行できる賢い方法

368
00:16:00,893 --> 00:16:04,387
、関数 f を評価するための適切に選択された数値を見つけ

369
00:16:04,387 --> 00:16:07,760
て、5 の倍数に対応するすべての係数を取得することです。

370
00:16:07,760 --> 00:16:10,260
もう一度、これらの係数が何をエンコードしているか

371
00:16:10,260 --> 00:16:12,560
を考えると、それが最後の質問の答えになります。

372
00:16:12,560 --> 00:16:15,800
これは、合計が 5 で割り切れるサブ

373
00:16:15,800 --> 00:16:19,040
セットの総数を数えることになります。

374
00:16:19,040 --> 00:16:22,591
これを行うためのコツは、入力の連続するパワーが前

375
00:16:22,591 --> 00:16:26,000
後に回転する、今行ったことを一般化することです。

376
00:16:26,000 --> 00:16:28,812
ただし、今回は 1 回おきに回転させるのではなく、何

377
00:16:28,812 --> 00:16:31,520
らかの方法で 5 周期で回転させたいと考えています。

378
00:16:31,520 --> 00:16:34,480
そしてそれを行うために、複素平面に拡張します。

379
00:16:34,480 --> 00:16:37,749
ご覧のとおり、そこにある値を見つけることができ、

380
00:16:37,749 --> 00:16:41,154
その値を連続的に累乗すると 、その値は 5 分の

381
00:16:41,154 --> 00:16:44,560
1 回転して、周波数 5 のプロセスが得られます。

382
00:16:44,560 --> 00:16:47,172
一歩下がったら、私が複素数について考えろと言うの

383
00:16:47,172 --> 00:16:49,680
は、ある意味ばかばかしいことだとわかっています。

384
00:16:49,680 --> 00:16:52,680
つまり、計数の問題から始めました。 これは離散数学です

385
00:16:52,680 --> 00:16:55,360
が、それほど乱暴なものではないことを願っています。

386
00:16:55,360 --> 00:16:58,175
繰り返しになりますが、私が解決策におけるさまざまな奇妙な展

387
00:16:58,175 --> 00:16:59,728
開を整理するために図を描いてい

388
00:16:59,728 --> 00:17:02,543
る理由は、それらが実際には数学のより広範なスキームの中では

389
00:17:02,543 --> 00:17:04,000
それほど奇妙ではないからです。

390
00:17:04,000 --> 00:17:06,791
これから適用しようとしているトリックは、整

391
00:17:06,791 --> 00:17:09,582
数の離散的な問題をより よく理解するために

392
00:17:09,582 --> 00:17:12,640
複素数を使用する他の多くの例とよく似ています。

393
00:17:12,640 --> 00:17:16,546
したがって、それが自分自身で発見できたものの

394
00:17:16,546 --> 00:17:20,453
ように感じられれ ば感じるほど、この思考の循

395
00:17:20,453 --> 00:17:23,650
環の中で将来の問題に取り組んでいる

396
00:17:23,650 --> 00:17:28,800
ときに、実際にはそれを自分で発見する可能性が高くなります。

397
00:17:28,800 --> 00:17:32,748
具体的に言うと、私が関心のある複素数はゼータとラベル付け

398
00:17:32,748 --> 00:17:36,560
するもので、単位円の 5 分の 1 周の位置にあります。

399
00:17:36,560 --> 00:17:39,044
したがって、その角度は 2 π

400
00:17:39,044 --> 00:17:41,840
5 ラジアンで、大きさは 1 です。

401
00:17:41,840 --> 00:17:44,692
これは、標準的なオイラーの公式表記では、その数値を

402
00:17:44,692 --> 00:17:46,667
e の 2 乗 p i i を 5

403
00:17:46,667 --> 00:17:49,520
で割ったものとして明示的に記述することを意味します。

404
00:17:49,520 --> 00:17:53,869
この表記に慣れていない場合は、実数部が 72 度の

405
00:17:53,869 --> 00:17:58,218
余弦 (72 は 1 回転の 5 分の 1)、虚数

406
00:17:58,218 --> 00:18:02,400
部が 72 度の正弦であると考えることもできます。

407
00:18:02,400 --> 00:18:04,280
しかし、正直に言うと、実際には明示的

408
00:18:04,280 --> 00:18:06,160
な値について考える必要はありません。

409
00:18:06,160 --> 00:18:08,482
代わりに、注目すべき重要なこと

410
00:18:08,482 --> 00:18:10,960
は、この数の累乗が持つ特性です。

411
00:18:10,960 --> 00:18:13,632
たとえば、それを 2 乗すると、その大きさが

412
00:18:13,632 --> 00:18:15,957
1 なので、その 2 乗の大きさも 1

413
00:18:15,957 --> 00:18:18,513
になりますが、単位円の周りを 5 分の 1

414
00:18:18,513 --> 00:18:22,000
回転するため、今度は 5 分の 2 回転した位置になります。

415
00:18:22,000 --> 00:18:25,641
同様に、3 乗に上げると、最終的に 5 分の 3 回転し

416
00:18:25,641 --> 00:18:29,409
、4 乗に上げます。 最終的に 5 分の 4 に上げて、5

417
00:18:29,409 --> 00:18:32,800
乗すると、次のようになります。 ずっと1つに戻ります。

418
00:18:32,800 --> 00:18:35,840
これは、ゼロ乗した場合と同じであり、この循環は

419
00:18:35,840 --> 00:18:37,360
5 期ごとに発生します。

420
00:18:37,360 --> 00:18:39,600
それが私たちが大切にしていることです。

421
00:18:39,600 --> 00:18:43,066
これらの数値には特別な名前があり、1 の 5 乗根

422
00:18:43,066 --> 00:18:46,266
と呼ばれます。 本質的に、方程式 z を解くと

423
00:18:46,266 --> 00:18:49,600
5 が 1 に等しく、数値 1 の 5 乗根です。

424
00:18:49,600 --> 00:18:52,645
この方程式を誰かに提示したとしたら、おそらく答えは明らか

425
00:18:52,645 --> 00:18:55,795
に z が 1 に等しい、と言うでしょう。 しかし、複素平

426
00:18:55,795 --> 00:18:58,735
面には他に 4 つの答えがあり、他の 4 つの数値があ

427
00:18:58,735 --> 00:19:01,570
り、それらを 5 番目に上げると次のようになります。

428
00:19:01,570 --> 00:19:04,720
それ らを集合体として考えると、多くの場合非常に役立ちます。

429
00:19:04,720 --> 00:19:08,560
この方程式を覚えておいてください。 少し後で戻ってきます。

430
00:19:08,560 --> 00:19:11,311
したがって、前に行ったことと同様に、1 の f

431
00:19:11,311 --> 00:19:14,750
と負の 1 の f を加算して奇数項間で相殺を行いました。

432
00:19:14,750 --> 00:19:17,846
これから行うことは 、これらの数値の 5 つすべてで

433
00:19:17,846 --> 00:19:19,909
f を評価し、加算することで す。

434
00:19:19,909 --> 00:19:23,120
一緒に参加して、キャンセルが得られることを願っています。

435
00:19:23,120 --> 00:19:26,418
やや複雑に思えるかもしれませんが、x の f が単に

436
00:19:26,418 --> 00:19:29,840
x に等しい場合など、非常に単純な例を考えてみましょう。

437
00:19:29,840 --> 00:19:32,728
その場合、これら 5 つの項を合計するとき、ゼー

438
00:19:32,728 --> 00:19:35,502
タとゼロ、ゼータと 1 を加えて、ゼータと 4

439
00:19:35,502 --> 00:19:38,160
番目まで、単一の根自体を合計しているだけです。

440
00:19:38,160 --> 00:19:40,615
複素数を加算するときは、先端から末尾までの

441
00:19:40,615 --> 00:19:42,960
ベクトル加算のように考えることができます。

442
00:19:42,960 --> 00:19:46,251
したがって、ゼータにゼロを加えたゼータは次のようになりま

443
00:19:46,251 --> 00:19:49,655
す。 そして、ゼータの二乗を追加して、そのベクトルの尾部を

444
00:19:49,655 --> 00:19:52,720
最後のベクトルの先端に持ってくると、これが得られます。

445
00:19:52,720 --> 00:19:56,338
次に、同様に、3 乗したゼータの尾部をその先端に持ってき

446
00:19:56,338 --> 00:19:59,831
て、ゼータを 4 番目まで同様に実行すると、全体の合計

447
00:19:59,831 --> 00:20:03,200
が実際にどのようにループしてゼロに戻るかがわかります。

448
00:20:03,200 --> 00:20:06,049
これについて別の考え方をすると、これらの 5 つの項はす

449
00:20:06,049 --> 00:20:08,800
べて、数字の 0 を中心に均等にバランスが取れています。

450
00:20:08,800 --> 00:20:11,920
それらの重心は原点にあります。

451
00:20:11,920 --> 00:20:14,575
ここで、x の f が x の 2 乗である場

452
00:20:14,575 --> 00:20:17,120
合の、もう少し簡単な例を考えると役に立ちます。

453
00:20:17,120 --> 00:20:18,560
したがって、ゼータをゼロに二乗する

454
00:20:18,560 --> 00:20:20,000
と、ゼータはゼロのままになります。

455
00:20:20,000 --> 00:20:22,480
これはナンバーワンを表現する単なる派手な方法です。

456
00:20:22,480 --> 00:20:25,280
ゼータを 2 乗すると、ゼータの 2 乗自体が得られます。

457
00:20:25,280 --> 00:20:27,880
したがって、これを実行すると、この点がゼータ二

458
00:20:27,880 --> 00:20:30,480
乗点に移動することを想像できるかもしれません。

459
00:20:30,480 --> 00:20:33,040
ゼータの二乗は 4 番目のゼータに移動します。

460
00:20:33,040 --> 00:20:34,800
この点がゼータから 4 番目に移動

461
00:20:34,800 --> 00:20:36,560
する様子を想像するかもしれません。

462
00:20:36,560 --> 00:20:39,056
ゼータの 3 乗は 6 番目のゼータに移動します。

463
00:20:39,056 --> 00:20:41,456
これは 5 回ごと にループするため、ゼータから

464
00:20:41,456 --> 00:20:43,280
1 番目のゼータと同じことになります。

465
00:20:43,280 --> 00:20:46,480
したがって、この点はここで上に移動します。

466
00:20:46,480 --> 00:20:49,767
そして最後に、ゼータを 4 番目の平方にして、ゼータを

467
00:20:49,767 --> 00:20:52,350
8 番目に求めます。 これは、ゼータの 3

468
00:20:52,350 --> 00:20:55,520
乗と同じになります。 これは、次のように描画できます。

469
00:20:55,520 --> 00:20:58,258
特にここに描いたすべての矢印を考えると、考えるのが少し混乱

470
00:20:58,258 --> 00:21:00,906
するように思えるかもしれませんが、人生で少なくとも一度は

471
00:21:00,906 --> 00:21:03,645
考えてみる価値があります。 なぜなら、ここでの考え方は、こ

472
00:21:03,645 --> 00:21:06,384
れを二乗すると、これらすべての異なる矢印に行くようなものだ

473
00:21:06,384 --> 00:21:09,123
からです。 用語をプログラムして角度を 2 倍にすると、全

474
00:21:09,123 --> 00:21:11,680
体的な効果はそれらの用語をシャッフルするだけになります。

475
00:21:11,680 --> 00:21:14,346
同じ数値が得られますが、異なる順序で書かれている

476
00:21:14,346 --> 00:21:16,800
ため、それらの合計は依然としてゼロになります。

477
00:21:16,800 --> 00:21:20,048
同様に、x の 3 乗に関するこの演習を実行するこ

478
00:21:20,048 --> 00:21:23,420
とをお勧めします。 これらの点のそれぞれがどこに行き

479
00:21:23,420 --> 00:21:26,668
着くのかを追跡すると、これらの項を 3 乗すると、

480
00:21:26,668 --> 00:21:30,041
次のことがわかるでしょう。 それぞれを取り出し、その

481
00:21:30,041 --> 00:21:33,040
角度を 3 倍し、再びそれらをシャッフルします。

482
00:21:33,040 --> 00:21:35,040
同じ用語が別の順序でリストされています。

483
00:21:35,040 --> 00:21:38,352
当然のことながら、関数が 4 番目の

484
00:21:38,352 --> 00:21:41,840
x だった場合にも同じことが起こります。

485
00:21:41,840 --> 00:21:44,240
しかし、重要なことに、関数 x を

486
00:21:44,240 --> 00:21:47,040
5 番目まで考慮すると、状況が変わります。

487
00:21:47,040 --> 00:21:51,077
その場合、ゼータを 5 乗すると、定義上、ゼータは

488
00:21:51,077 --> 00:21:52,320
1 になります。

489
00:21:52,320 --> 00:21:55,520
同様に、ゼータの 2 乗の 5 乗は 1 になります。

490
00:21:55,520 --> 00:21:57,920
これらすべてが一つになり、統一の根源となります。

491
00:21:57,920 --> 00:22:00,320
結局のところ、これが彼らの人生の目的のすべてなのです。

492
00:22:00,320 --> 00:22:03,093
したがって、この場合、関数を適用してそれらをす

493
00:22:03,093 --> 00:22:05,866
べて加算すると、ゼロに なってキャンセルが得ら

494
00:22:05,866 --> 00:22:08,640
れる代わりに、一種の建設的な干渉が得られます。

495
00:22:08,640 --> 00:22:11,920
それらはすべて 1 なので、合計は 5 になります。

496
00:22:11,920 --> 00:22:15,499
したがって、一歩下がって、これらすべての例が何を意味するの

497
00:22:15,499 --> 00:22:18,840
かを考えてみると、本質的にこの式は、5 で割り切れない

498
00:22:18,840 --> 00:22:22,300
x のべき乗についてはゼロになるものですが、x のべき乗

499
00:22:22,300 --> 00:22:25,760
についてはゼロ以外の何かになります。 は5で割り切れます。

500
00:22:25,760 --> 00:22:28,960
そして、それはまさに私たちが探している種類のフィルターです。

501
00:22:28,960 --> 00:22:31,800
実際の関数が単純な x の累乗よりもはるかに複雑

502
00:22:31,800 --> 00:22:34,641
であることが心配な場合は 、すべてが線形であるた

503
00:22:34,641 --> 00:22:37,600
め、ここでは基本的に物事は非常にうまく機能します。

504
00:22:37,600 --> 00:22:40,935
f が巨大な多項式で、この大きな合計を評価したい場合

505
00:22:40,935 --> 00:22:44,024
は、列ごとに処理することを考えることができます。

506
00:22:44,024 --> 00:22:47,360
毎 回、実際にはゼータの累乗を加算することになります。

507
00:22:47,360 --> 00:22:49,350
そしてほとんどの場合、これらのパワーはす

508
00:22:49,350 --> 00:22:51,440
べて互いに相殺され、結果はゼロになります。

509
00:22:51,440 --> 00:22:53,468
しかし、これらのべき乗がすべて 5

510
00:22:53,468 --> 00:22:55,496
の倍数である場合、それらは建設的に

511
00:22:55,496 --> 00:22:58,087
干渉し、代わりに、対応する係数が何であっても

512
00:22:58,087 --> 00:22:59,440
5 倍の値が得られます。

513
00:22:59,440 --> 00:23:00,838
雑草の奥深くにいると、そもそもなぜ

514
00:23:00,838 --> 00:23:02,320
ここにいるのか忘れてしまいがちです。

515
00:23:02,320 --> 00:23:05,111
ただし、これらの係数のそれぞれによって、サブセットの合計が

516
00:23:05,111 --> 00:23:08,000
特定の値に達するかどうかがわかることを覚えておいてください。

517
00:23:08,000 --> 00:23:10,107
したがって、私たちが望んでいるのは、最初

518
00:23:10,107 --> 00:23:12,320
に存在するすべての係数を合計することです。

519
00:23:12,320 --> 00:23:14,023
そして私たちが現在持っているの

520
00:23:14,023 --> 00:23:15,840
は、それを明示的に行う方法です。

521
00:23:15,840 --> 00:23:19,080
この関数をこれら 5 つの異なる単位根に基づ

522
00:23:19,080 --> 00:23:22,321
いて評価すると、奇妙に思えるかもしれませんが

523
00:23:22,321 --> 00:23:25,280
、5 で割るだけで必要な合計が得られます。

524
00:23:25,280 --> 00:23:27,360
私に言わせれば、それは本当に素晴らしいことです。

525
00:23:27,360 --> 00:23:31,168
部分集合に関する質問があり、それは離散数学の問題

526
00:23:31,168 --> 00:23:34,976
ですが、それに答える方法は、慎重に選択した複素数

527
00:23:34,976 --> 00:23:38,480
に対してクレイジーな多項式を評価することです。

528
00:23:38,480 --> 00:23:41,280
計算をすればするほど、より多くのことが得られます。

529
00:23:41,280 --> 00:23:44,345
複素数は離散数学と奇妙な関係にあるため、数学をやればやる

530
00:23:44,345 --> 00:23:47,305
ほどクレイジーではなくなりますが、これは本当に素晴らし

531
00:23:47,305 --> 00:23:50,160
いことであり、これについては二通りの方法はありません。

532
00:23:50,160 --> 00:23:54,320
ただし、これが役立つ唯一の方法は、多項式でこの野生の式を実際

533
00:23:54,320 --> 00:23:58,480
に評価できる場合であると不満を言う人もいるかもしれません。

534
00:23:58,480 --> 00:24:01,065
ここで思い出してください、私たちが知っている多項式の

535
00:24:01,065 --> 00:24:03,650
形式、つまり私たち が使いやすいのは、因数分解された

536
00:24:03,650 --> 00:24:06,236
形式です。 1 プラス x、1 プラス x の 2

537
00:24:06,236 --> 00:24:09,120
乗を繰り返し、1 プラス x まで続きます。 2,000。

538
00:24:09,120 --> 00:24:12,361
ここまでのすべては、ここで実際に腕まくりをして正直

539
00:24:12,361 --> 00:24:15,603
に計算できない限り、1 つの難しい問題を別の難しい

540
00:24:15,603 --> 00:24:18,720
問題に押し込む、無意味な象徴的な遊びにすぎません。

541
00:24:18,720 --> 00:24:20,588
これが私たちの議論の最後の主張ですの

542
00:24:20,588 --> 00:24:22,560
で、一歩下がって、深呼吸してください。

543
00:24:22,560 --> 00:24:25,495
実際には、あなたが思っているほど悪くはありませんが

544
00:24:25,495 --> 00:24:28,430
、必要な統一の根の 1 つ だけ、おそらくゼータ自

545
00:24:28,430 --> 00:24:31,600
体をどのように評価するかを考えることから始めましょう。

546
00:24:31,600 --> 00:24:34,190
つまり、1 プラス ゼータ、× 1 プラス ゼータの 2

547
00:24:34,190 --> 00:24:35,798
乗 、× 1 プラス ゼータの 3

548
00:24:35,798 --> 00:24:36,960
乗、というようになります。

549
00:24:36,960 --> 00:24:40,096
ただし、重要なことは、最初の 5 項の後に、ゼータの力

550
00:24:40,096 --> 00:24:43,120
が繰り返されるため、すべてが繰り返され始めることです。

551
00:24:43,120 --> 00:24:46,710
2,000 までの式全体は、基本的にこの式を

552
00:24:46,710 --> 00:24:49,520
400 回コピーするだけになります。

553
00:24:49,520 --> 00:24:51,539
この式を評価するのはまだ難しいように思え

554
00:24:51,539 --> 00:24:53,256
るかもしれませんが、 2,000

555
00:24:53,256 --> 00:24:55,680
の異なる項を掛け合わせるよりははるかに簡単です。

556
00:24:55,680 --> 00:24:57,708
これを視覚化すると、統一のルートを 1

557
00:24:57,708 --> 00:24:59,837
つずつ取得していますが、基本的 には 1

558
00:24:59,837 --> 00:25:02,880
つ追加して、それらをすべて右にシフトしていることになります。

559
00:25:02,880 --> 00:25:05,859
実際、この図は、私たちが期待するであろう数値的な

560
00:25:05,859 --> 00:25:08,720
答えを幾何学的に直感的に導き出すのに役立ちます。

561
00:25:08,720 --> 00:25:11,745
私たちが求めているのは、これら 5 つの異な

562
00:25:11,745 --> 00:25:14,640
る複素数の積、つまり 5 つの黄色い点です。

563
00:25:14,640 --> 00:25:17,706
複素数についてある程度の知識がある場合、複素数は共

564
00:25:17,706 --> 00:25:21,018
役ペアで表現されるため、 実際に必要なのは、これらの

565
00:25:21,018 --> 00:25:23,840
5 本の黄色の線の長さを乗算することだけです。

566
00:25:23,840 --> 00:25:26,823
たとえば、一番右にある点は、1 プラス ゼータから

567
00:25:26,823 --> 00:25:29,691
5 番目の点に対応しま す。 図では、これを 0

568
00:25:29,691 --> 00:25:32,560
プラス 1 へのゼータとしてラベル付けしています。

569
00:25:32,560 --> 00:25:34,800
しかし、それは問題ではありません。 どちらの場合も、ど

570
00:25:34,800 --> 00:25:36,800
ちらも数字の 2 を単に派手に書いているだけです。

571
00:25:36,800 --> 00:25:39,998
その隣には、1 プラス ゼータと 1 プラス ゼータ

572
00:25:39,998 --> 00:25:42,960
から 4 番目の値があり、どちらも同じ大きさです。

573
00:25:42,960 --> 00:25:44,720
これらの線の長さは同じです。

574
00:25:44,720 --> 00:25:46,880
それに、L1 という名前を付けましょう。

575
00:25:46,880 --> 00:25:48,954
したがって、その長さの 2 つの異なるコピー

576
00:25:48,954 --> 00:25:51,120
(L1 の 2 乗) を乗算する必要があります。

577
00:25:51,120 --> 00:25:54,885
同様に、残りの 2 つの値、ゼータ 2 乗プラス 1 とゼ

578
00:25:54,885 --> 00:25:58,400
ータ 3 乗プラス 1 も同じ長さを持ち、共役ペアです。

579
00:25:58,400 --> 00:26:00,640
したがって、その長さを単に L2 と呼びましょう。

580
00:26:00,640 --> 00:26:02,357
したがって、私たちの製品にはその L2

581
00:26:02,357 --> 00:26:04,160
のコピーが 2 つ含まれる必要があります。

582
00:26:04,160 --> 00:26:07,866
緩いヒューリスティックな推測を行っているだけであれば、L1

583
00:26:07,866 --> 00:26:10,831
は 1 より少し長 い長さであり、L2 は 1

584
00:26:10,831 --> 00:26:13,920
より少し短い長さであることに気づくかもしれません。

585
00:26:13,920 --> 00:26:16,128
したがって、ここでの最終的な答えは、おそらく

586
00:26:16,128 --> 00:26:17,760
2 つくらいのものになるでしょう。

587
00:26:17,760 --> 00:26:19,920
私たちは前向きではありませんが、その程度のことはあります。

588
00:26:19,920 --> 00:26:24,240
これを正確な答えにするには、式全体を拡張するだけです。

589
00:26:24,240 --> 00:26:25,720
正直、それほど悪くはありません。

590
00:26:25,720 --> 00:26:27,200
用語は 32 種類しかありません。

591
00:26:27,200 --> 00:26:32,160
さて、あなたは長い間私と付き合ってきました、そし

592
00:26:32,160 --> 00:26:37,120
て私はそれが多くのことになることを知っています。

593
00:26:37,120 --> 00:26:39,125
しかし、この議論全体には最後のトリックが

594
00:26:39,125 --> 00:26:41,034
1 つあり、それによ って最後のステップ

595
00:26:41,034 --> 00:26:43,040
が思っているよりもはるかに簡単になります。

596
00:26:43,040 --> 00:26:44,280
そして、私たちがどこにいるのかを思

597
00:26:44,280 --> 00:26:45,520
い出すために、要約してみましょう。

598
00:26:45,520 --> 00:26:49,058
そこで私たちは、1 の部分集合の数を 2,000 まで数え

599
00:26:49,058 --> 00:26:52,480
て、その合計が 5 で割り切れるという質問から始めました。

600
00:26:52,480 --> 00:26:55,934
次に、この多項式を構築しました。 その係数は、各値 n

601
00:26:55,934 --> 00:26:59,513
に対 して特定の合計を持つサブセットがいくつあるかを示しま

602
00:26:59,513 --> 00:26:59,760
す。

603
00:26:59,760 --> 00:27:02,421
したがって、私たちが望むのは、その多項式の

604
00:27:02,421 --> 00:27:04,720
5 番目ごとの係数を合計することです。

605
00:27:04,720 --> 00:27:06,675
次に、この多項式を 1 の 5

606
00:27:06,675 --> 00:27:09,242
乗根すべての関数として評価し、それらを加

607
00:27:09,242 --> 00:27:12,175
算すると、最終的にまさに必要なフィルターが得られ

608
00:27:12,175 --> 00:27:13,520
ることがわかりました。

609
00:27:13,520 --> 00:27:15,549
そしてここでは、それらの項のうちの 1

610
00:27:15,549 --> 00:27:17,985
つであるゼータの f だけ を評価しています。

611
00:27:17,985 --> 00:27:20,320
これは本質的に 5 つの複素数の積になります。

612
00:27:20,320 --> 00:27:22,661
その製品を実際に評価するための非常に巧妙

613
00:27:22,661 --> 00:27:25,120
な方法として、最後のトリックを紹介します。

614
00:27:25,120 --> 00:27:26,477
私がこれらの数字を統一の根として

615
00:27:26,477 --> 00:27:27,920
説明したことを思い出してください。

616
00:27:27,920 --> 00:27:30,880
彼らは方程式 z を解き、5 番目が 1 に等しくなります。

617
00:27:30,880 --> 00:27:33,740
これについての別の考え方は、それらが 5 から

618
00:27:33,740 --> 00:27:36,720
1 を引いた多項式 z の根であるということです。

619
00:27:36,720 --> 00:27:39,532
これが意味するのは、多項式 z を 5 から

620
00:27:39,532 --> 00:27:42,956
1 を引いた数で因数分 解すると、次のようになります。

621
00:27:42,956 --> 00:27:45,280
各根に対応する因数が 1 つあります。

622
00:27:45,280 --> 00:27:47,520
z から各根を引いたものを取ります。

623
00:27:47,520 --> 00:27:50,497
すべてを拡張すると発生するクレイジーなキャンセルの

624
00:27:50,497 --> 00:27:53,360
すべてを考えると、この表現は一種の魔法のようです。

625
00:27:53,360 --> 00:27:56,665
しかし、それは真実であり、右側の式はここ

626
00:27:56,665 --> 00:27:59,971
の上部で評価する必要があるものとほぼ同じ

627
00:27:59,971 --> 00:28:03,120
に見えるため、現時点では非常に便利です。

628
00:28:03,120 --> 00:28:05,320
基本的にはプラス記号があればいいと

629
00:28:05,320 --> 00:28:07,520
ころにマイナス記号があるだけです。

630
00:28:07,520 --> 00:28:10,800
秘訣は、z が負の 1 に等しいという値を代入することです。

631
00:28:10,800 --> 00:28:12,467
それを行うと、本質的に私たちが望

632
00:28:12,467 --> 00:28:14,240
んでいることがマイナスになります。

633
00:28:14,240 --> 00:28:17,408
したがって、これにマイナス 1 を掛けると、マイナス

634
00:28:17,408 --> 00:28:19,754
1 マイナス 1 ま たはマイナス 2

635
00:28:19,754 --> 00:28:23,040
として始まった左辺が 2 になることに注目してください。

636
00:28:23,040 --> 00:28:26,720
そして、右辺が評価したいものになります。

637
00:28:26,720 --> 00:28:30,611
したがって、先ほどの幾何学的直観が示唆したように、答えは約

638
00:28:30,611 --> 00:28:34,503
2 であるだけ でなく、まったく魔法のように、答えは正確に

639
00:28:34,503 --> 00:28:36,320
2 であることがわかります。

640
00:28:36,320 --> 00:28:38,905
これは、実際には非常に素晴らしく、とても素敵です。

641
00:28:38,905 --> 00:28:41,591
なぜなら、これは、評価 したいこのより大きな式を意味す

642
00:28:41,591 --> 00:28:44,177
るからです。 ここで、さまざまな単一根のすべ てに

643
00:28:44,177 --> 00:28:46,862
f を加算しており、最初の単一根に関するその値がわかっ

644
00:28:46,862 --> 00:28:47,360
ています。

645
00:28:47,360 --> 00:28:49,600
2の400乗になります。

646
00:28:49,600 --> 00:28:52,687
本質的に同じ推論は、次の 3 つの 1 の根の値も 2

647
00:28:52,687 --> 00:28:55,994
の 400 乗であること を示しています。 これは、ゼータ

648
00:28:55,994 --> 00:28:58,640
2 乗またはゼータ 3 乗を計算すると、異なる

649
00:28:58,640 --> 00:29:01,837
順序でシャッフルされた同じ数値のリストが得られることを思い

650
00:29:01,837 --> 00:29:02,720
出してください。

651
00:29:02,720 --> 00:29:04,680
唯一異なるのは、それをゼロに対す

652
00:29:04,680 --> 00:29:06,640
るゼータとして評価する場合です。

653
00:29:06,640 --> 00:29:08,397
しかし、ゼータからゼロというのは数字の

654
00:29:08,397 --> 00:29:10,506
1 を表す派手な言い 方であり、私たちはこれを

655
00:29:10,506 --> 00:29:12,000
1 で評価する方法を知っています。

656
00:29:12,000 --> 00:29:13,040
それは簡単なことの一つです。

657
00:29:13,040 --> 00:29:14,160
これは以前に行いました。

658
00:29:14,160 --> 00:29:17,100
これらの括弧はすべて 2 になるので、2

659
00:29:17,100 --> 00:29:20,320
を 2,000 回掛け合わせたように見えます。

660
00:29:20,320 --> 00:29:23,240
そしてついに、私たちの計数に関する質問に対

661
00:29:23,240 --> 00:29:26,160
する非常に明確な正直な答えが得られました。

662
00:29:26,160 --> 00:29:29,541
5 で割り切れるこれらの係数をすべて合計すると、合計が

663
00:29:29,541 --> 00:29:32,680
5 で割り切れる合計サ ブセットがいくつあるかを数え

664
00:29:32,680 --> 00:29:35,941
る方法であることを思い出してください。 答えは、この

665
00:29:35,941 --> 00:29:37,873
奇妙な複雑な式の 5 分の 1

666
00:29:37,873 --> 00:29:40,771
であり、先ほど計算したところ 2 になります。

667
00:29:40,771 --> 00:29:44,152
2,000 に 2 つを加えた 4 つの異なるコピーを

668
00:29:44,152 --> 00:29:45,360
400 に加えます。

669
00:29:45,360 --> 00:29:47,600
ここで、この回答に意味があるかどうか

670
00:29:47,600 --> 00:29:49,840
を簡単に確認してみるとよいでしょう。

671
00:29:49,840 --> 00:29:52,085
たとえば、セット 1、2、3、4、5

672
00:29:52,085 --> 00:29:55,040
を使用した小さい場合で 、先ほどと同じ推論をすべて

673
00:29:55,040 --> 00:29:57,640
実行すると、答えは 2 の 5 分 の 1

674
00:29:57,640 --> 00:30:00,832
であることがわかります。 5 番目は、サブセットの総

675
00:30:00,832 --> 00:30:04,259
数で、この場合の 1 に 4 × 2 を加えたものです。

676
00:30:04,259 --> 00:30:06,978
これ は、32 プラス 8 の 5 分の 1

677
00:30:06,978 --> 00:30:08,160
で、8 になります。

678
00:30:08,160 --> 00:30:11,560
そして、私たちがそれらすべてを明確に調べたときのこ

679
00:30:11,560 --> 00:30:14,960
とを覚えておいてください、実際、それが答えでした。

680
00:30:14,960 --> 00:30:17,280
ほら、これは難しいパズルです。

681
00:30:17,280 --> 00:30:19,745
難しい問題を解くのに時間を費やす

682
00:30:19,745 --> 00:30:22,790
価値があるなら、時間をかけてそれについて考

683
00:30:22,790 --> 00:30:24,240
える価値もあります。

684
00:30:24,240 --> 00:30:25,251
ここから何が得られますか？

685
00:30:25,251 --> 00:30:26,640
何がお得ですか？

686
00:30:26,640 --> 00:30:29,328
ここで、答えそのもの、つまり、私たちが推測したように

687
00:30:29,328 --> 00:30:31,912
、支配的な部 分が実際にすべてのサブセット全体の

688
00:30:31,912 --> 00:30:34,600
5 分の 1 であること、お よびこの誤差項が、単一

689
00:30:34,600 --> 00:30:36,875
根の膨大な組み合わせにおける完全に破壊的で

690
00:30:36,875 --> 00:30:39,563
はない干渉からどのようにして生じたのかを考えることが

691
00:30:39,563 --> 00:30:40,080
できます。

692
00:30:40,080 --> 00:30:44,076
しかし、繰り返しになりますが、この質問が興味深いの

693
00:30:44,076 --> 00:30:48,073
は答えではなく、それを解決した方法です。 つまり、

694
00:30:48,073 --> 00:30:52,070
理解したい離散シーケンスを取得し、それを多項式の係

695
00:30:52,070 --> 00:30:55,760
数として扱い、その多項式を複素数値で評価します。

696
00:30:55,760 --> 00:30:58,782
これらのステップは両方とも、最初は非常に予想外のことか

697
00:30:58,782 --> 00:31:01,805
もしれませんが、どちらのステップも、数学の他の場所で見

698
00:31:01,805 --> 00:31:04,720
られる非常に一般的で強力なテクニックに関連しています。

699
00:31:04,720 --> 00:31:08,609
たとえば、レッスンの冒頭で、私たちが使用するテクニ

700
00:31:08,609 --> 00:31:12,499
ックは、素数の研究方法や、リーマン予想などにつなが

701
00:31:12,499 --> 00:31:16,240
る一連のアイデアと精神的に似ていると約束しました。

702
00:31:16,240 --> 00:31:19,819
さて、これは非常に美しいトピックなので、ここで最後にある種

703
00:31:19,819 --> 00:31:23,280
の急ぎバージョンを詰め込むのは少し犯罪的だと思うほどです。

704
00:31:23,280 --> 00:31:26,800
正しいことは、少し前に約束したゼータ関数に関するビデオ

705
00:31:26,800 --> 00:31:30,320
を作成することです。 時間をかけて、正しく行うことです。

706
00:31:30,320 --> 00:31:33,139
しかし、興味があれば、説明せずに画面上にいくつかのことを

707
00:31:33,139 --> 00:31:35,556
吐き出すことを許可していただ ければ、この 2

708
00:31:35,556 --> 00:31:38,074
つがどのように並列しているかを 2 文または 3

709
00:31:38,074 --> 00:31:38,880
文で説明します。

710
00:31:38,880 --> 00:31:42,567
部分集合パズルと同じように、リーマンが素数を研究

711
00:31:42,567 --> 00:31:46,107
した方法には、理解したい離散数列、つまり素数に

712
00:31:46,107 --> 00:31:49,647
関する情報を運ぶ何かが含まれ、その係数がその数

713
00:31:49,647 --> 00:31:53,040
列内の項である関数を考慮する必要がありました。

714
00:31:53,040 --> 00:31:56,053
この場合、それは完全な多項式ではなく、代わりに、ディリク

715
00:31:56,053 --> 00:31:58,636
レ級数として知られる関連す る構造になります。

716
00:31:58,636 --> 00:32:01,649
または、尋ねる人によって異なりますが、本質的な考え方は同

717
00:32:01,649 --> 00:32:02,080
じです。

718
00:32:02,080 --> 00:32:05,485
これらの係数に関する情報を探り出す方法は、ご想像

719
00:32:05,485 --> 00:32:08,890
のとおり、この関数が複素数値の入力に対してどのよ

720
00:32:08,890 --> 00:32:12,160
うに動作するかを研究することによって得られます。

721
00:32:12,160 --> 00:32:15,251
彼の場合のテクニックはより洗練されています。

722
00:32:15,251 --> 00:32:19,150
結局のところ、リ ーマンは複素解析の先駆者だったのです。

723
00:32:19,150 --> 00:32:22,376
しかし、このように領域 を実数を超えて拡張すると

724
00:32:22,376 --> 00:32:24,930
、数学者は係数について推論する際によ

725
00:32:24,930 --> 00:32:28,560
り多くの力を得ることができるという事実は変わりません。

726
00:32:28,560 --> 00:32:32,672
一部の視聴者にとって、なぜ複素数がこのように不当に役

727
00:32:32,672 --> 00:32:36,480
立つのかという疑問がいつまでも残るかもしれません。

728
00:32:36,480 --> 00:32:39,661
正確に答えるのは難しい質問ですが、私たちのパズルについて考

729
00:32:39,661 --> 00:32:42,843
えてみると 、さまざまな入力を差し込むと係数に関する隠され

730
00:32:42,843 --> 00:32:46,025
た情報が明らかになった この状況に陥るとすぐに、入力が増え

731
00:32:46,025 --> 00:32:48,000
れば増えるほど、私たちが行ったすべ

732
00:32:48,000 --> 00:32:49,755
てのことは、ある種のことです。

733
00:32:49,755 --> 00:32:51,949
より良いものを扱うことができるので、複

734
00:32:51,949 --> 00:32:55,131
素平面のような、より豊かな数の空間に自分自身を開くのもよい

735
00:32:55,131 --> 00:32:55,680
でしょう。

736
00:32:55,680 --> 00:32:57,800
しかし、ここでぜひ理解していただき

737
00:32:57,800 --> 00:32:59,920
たい、より具体的な直感があります。

738
00:32:59,920 --> 00:33:03,440
私たちのパズルで、私たちが求めていた関連する事実、つまり

739
00:33:03,440 --> 00:33:06,960
5 番目ごとの係数の合計は、一種の頻度に関する質問でした。

740
00:33:06,960 --> 00:33:10,374
そして、他の構造とは対照的に、複素数が私たちにとって有

741
00:33:10,374 --> 00:33:13,789
用であることが判明した本当の理由は、後続の製品がこの循

742
00:33:13,789 --> 00:33:16,960
環動作を行うための値を見つけることができたからです。

743
00:33:16,960 --> 00:33:20,782
単位円上の値、特に 1 の根を使用して周

744
00:33:20,782 --> 00:33:24,240
波数情報を探ることは、非常に有益です。

745
00:33:24,240 --> 00:33:26,320
このアイデアがどれほど役立つかは、いく

746
00:33:26,320 --> 00:33:28,400
ら強調してもしすぎることはありません。

747
00:33:28,400 --> 00:33:31,004
数千の例のうちの 1 つを挙げると、1990

748
00:33:31,004 --> 00:33:33,496
年代にピーター ショールは、量子コンピュー

749
00:33:33,496 --> 00:33:36,781
ターが古典的なコンピューターよりもはるかに速く大きな数を因

750
00:33:36,781 --> 00:33:38,480
数分解する方法を発見しました。

751
00:33:38,480 --> 00:33:41,113
そして、私たちが現在ショールのアルゴリズムと呼んで

752
00:33:41,113 --> 00:33:43,852
いるものがどのように機能するかを詳細に見てみると、

753
00:33:43,852 --> 00:33:46,486
そのアイデアは本質的にこれであり、ある種の周波数情

754
00:33:46,486 --> 00:33:49,120
報を検出するために単一根を使用するということです。

755
00:33:49,120 --> 00:33:51,597
より一般的には、これはフーリエ変換とフー

756
00:33:51,597 --> 00:33:54,074
リエ級数の基礎となる中 心的な考え方であ

757
00:33:54,074 --> 00:33:56,800
り、そこから続くトピックの無限の広がりです。

758
00:33:56,800 --> 00:33:59,655
生成関数自体のトピックに関しては、ここではほんの表面をなぞ

759
00:33:59,655 --> 00:34:02,510
っただけです。 さら に詳しく知りたい場合は、Herber

760
00:34:02,510 --> 00:34:04,578
t Wilf 著のこのような面白い名前の

761
00:34:04,578 --> 00:34:07,433
本、『Generating Functionology』を

762
00:34:07,433 --> 00:34:08,320
強くお勧めします。

763
00:34:08,320 --> 00:34:09,613
また、アイデアを少し試してみたい人のために、画

764
00:34:09,613 --> 00:34:10,800
面上に楽しいパズルもいくつか残しておきます。

