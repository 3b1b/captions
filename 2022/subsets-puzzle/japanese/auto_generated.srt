1
00:00:00,000 --> 00:00:02,725
すぐにパズルを質問します。 実際、それはかなり難し

2
00:00:02,725 --> 00:00:05,450
いパズルです。 し かし、その前に、ネタバレをして

3
00:00:05,450 --> 00:00:07,412
いきたいと思います。 つまり、この 

4
00:00:07,412 --> 00:00:10,246
問題を解決する方法には、次のような問題が含まれます。

5
00:00:10,246 --> 00:00:10,900
 複素数の。

6
00:00:11,560 --> 00:00:13,500
そして、一度聞いたら、パズルが純粋に個別

7
00:00:13,500 --> 00:00:15,441
の質問になることを考 えると、それはばか

8
00:00:15,441 --> 00:00:17,480
げていると思われることに同意するでしょう。

9
00:00:17,800 --> 00:00:20,260
整数とその合計についてのみ質問されます。

10
00:00:20,660 --> 00:00:24,560
地平線のどこにも、想像上のものや連続性の匂いさえありません。

11
00:00:25,280 --> 00:00:28,123
言い方を借りれば、複素数が離散数学に不当に役 

12
00:00:28,123 --> 00:00:30,720
立つのは、決してこの時だけではありません。

13
00:00:31,160 --> 00:00:33,981
私が挙げられるより有名な例は、数学者が素数をどの

14
00:00:33,981 --> 00:00:36,450
ように理解す るかという現代的な方法です。

15
00:00:36,450 --> 00:00:38,448
 素数がどのように分布しているか 

16
00:00:38,448 --> 00:00:40,917
、特定の領域での密度などに関する質問です。

17
00:00:40,917 --> 00:00:43,856
 特別に設計された 関数を研究する必要があります。

18
00:00:43,856 --> 00:00:45,620
 その入力と出力は複素数です。

19
00:00:46,120 --> 00:00:47,700
これが有名なリーマン予想の内容であること

20
00:00:47,700 --> 00:00:49,360
をご存知の方もいらっしゃるかもしれません。

21
00:00:49,680 --> 00:00:52,381
基本的には特別に設計された関数があり、一見 

22
00:00:52,381 --> 00:00:54,960
すると素数の離散世界とは無関係に見えます。

23
00:00:55,060 --> 00:00:57,000
滑らかで、複雑な価値があります。

24
00:00:57,000 --> 00:00:59,719
しかし、内部では、離散素数について必要な 

25
00:00:59,719 --> 00:01:02,180
すべての情報がエンコードされています。

26
00:01:02,600 --> 00:01:05,226
そして最も重要なことは、素数に関する特定の質

27
00:01:05,226 --> 00:01:07,853
問は、素数自体を直接分 析するよりも、この関

28
00:01:07,853 --> 00:01:10,600
数を分析することで簡単に答えることができます。

29
00:01:11,260 --> 00:01:13,707
もちろん、私たちのパズルは、すぐに共有することを約 

30
00:01:13,707 --> 00:01:16,060
束しますが、リーマン予想よりもはるかに無邪気です。

31
00:01:16,260 --> 00:01:17,420
おもちゃの問題です。

32
00:01:17,880 --> 00:01:20,115
しかし、ビデオの最後では、それを解決するために私

33
00:01:20,115 --> 00:01:22,350
たちが使用するテ クニック、つまり私たちがここに

34
00:01:22,350 --> 00:01:23,933
いる本当の理由が、実際にはリーマ 

35
00:01:23,933 --> 00:01:26,168
ン予想につながる設定と精神的にかなり似ていること

36
00:01:26,168 --> 00:01:26,820
を共有します。

37
00:01:27,000 --> 00:01:29,600
そして素数定理とそれをめぐる一連の思考。

38
00:01:29,600 --> 00:01:34,490
今日のパズルは、Titou、Rescu、Zoo

39
00:01:34,490 --> 00:01:39,380
mingfeng によるこの本から来ています。

40
00:01:39,480 --> 00:01:42,015
基本的には、国際数学オリンピックの米国チー 

41
00:01:42,015 --> 00:01:44,320
ムのトレーニングに使用される問題集です。

42
00:01:44,940 --> 00:01:47,705
第 2 章「高度な問題」に目を向けると、問題番 

43
00:01:47,705 --> 00:01:50,240
号 10 でこの一見無害な質問が行われます。

44
00:01:50,920 --> 00:01:54,120
要素の合計が 5 で割り切れる集合 1 

45
00:01:54,120 --> 00:01:57,640
の 部分集合の数を 2000 まで求めます。

46
00:01:59,180 --> 00:02:01,420
さて、解析には少し時間がかかるかもしれません。

47
00:02:01,640 --> 00:02:03,424
たとえば、セット 3、1、4 の

48
00:02:03,424 --> 00:02:05,320
ようなものはサブセットになります。

49
00:02:05,660 --> 00:02:08,060
そのすべての要素は、大きなセットの要素でもあります。

50
00:02:08,580 --> 00:02:10,540
そして、その合計、3 プラス 1 プラス 

51
00:02:10,540 --> 00:02:12,500
4 は 8 なので、これは考慮されません。

52
00:02:12,600 --> 00:02:13,540
それは私たちの計算には含まれていません。

53
00:02:13,840 --> 00:02:17,106
一方、セット 2、3、5 などもサブセットであり、合計は 

54
00:02:17,106 --> 00:02:18,120
10 になります。

55
00:02:18,440 --> 00:02:20,920
これは 5 で割り切れるので、数えておきたい値です。

56
00:02:21,400 --> 00:02:24,380
最初に用意したプレビュー アニメーションは、本質的に 

57
00:02:24,380 --> 00:02:27,140
は、この質問に答えようとする強引なプログラムです。

58
00:02:27,720 --> 00:02:30,611
考えられるさまざまなサブセットをすべて反復処理して 

59
00:02:30,611 --> 00:02:33,391
、途中で各サブセットの合計を見つけ、5 の倍数が 

60
00:02:33,391 --> 00:02:36,060
見つかるたびにカウンターをインクリメントします。

61
00:02:36,760 --> 00:02:38,651
ここでのウォーミングアップの質問としては、少

62
00:02:38,651 --> 00:02:40,542
し立ち止まって、全体の サブセットの合計がい

63
00:02:40,542 --> 00:02:42,520
くつあるかについて考えてみるのがよいでしょう。

64
00:02:42,820 --> 00:02:44,160
この 5 の倍数のことは忘れてください。

65
00:02:44,420 --> 00:02:46,560
このプログラムが終了するまでどれくらい時間がかかりますか?

66
00:02:48,060 --> 00:02:49,780
答えは2の2000乗であることを

67
00:02:49,780 --> 00:02:51,500
ご存知の方も多いかもしれません。

68
00:02:52,120 --> 00:02:55,003
基本的な考え方は、サブセットを構築するときに、2,0 

69
00:02:55,003 --> 00:02:57,780
00 の異なる 2 つの選択肢があるということです。

70
00:02:58,000 --> 00:02:59,480
要素を含めますか、含めませんか?

71
00:03:00,080 --> 00:03:03,202
そして、これらの選択肢はすべて互いに独立しているため、 

72
00:03:03,202 --> 00:03:06,101
サブセットを構築する際の選択肢の総数は、2 × 2 

73
00:03:06,101 --> 00:03:09,000
× 2 × 2 と、延々と 2000 回となります。

74
00:03:09,800 --> 00:03:11,520
私たちのプログラムについて考える

75
00:03:11,520 --> 00:03:13,240
と、それは恐ろしく膨大な数です。

76
00:03:13,620 --> 00:03:15,830
したがって、たとえ私たちがこの強引なアプローチ

77
00:03:15,830 --> 00:03:18,040
を宇宙で常に与 えたとしても、宇宙が提供できる

78
00:03:18,040 --> 00:03:19,577
すべての物理的リソースを使って 

79
00:03:19,577 --> 00:03:22,460
、それに近づくことさえなく、表面を傷つけることはありません。

80
00:03:23,060 --> 00:03:24,085
明らかに、私たちはそれよりもず

81
00:03:24,085 --> 00:03:25,180
っと賢くならなければなりません。

82
00:03:25,560 --> 00:03:27,820
そして、答えが何であるべきかを単に推測し、大まか

83
00:03:27,820 --> 00:03:30,174
に概算すると、おそらく、 それは全サブセットの約 

84
00:03:30,174 --> 00:03:32,340
5 分の 1 になるはずだと推測するでしょう。

85
00:03:32,540 --> 00:03:33,970
おそらく、これらすべての合計は 

86
00:03:33,970 --> 00:03:35,580
mod 5 でほぼ均等に分布します。

87
00:03:36,000 --> 00:03:38,080
そして、はい、それは真実であり、それはまともな近似値です。

88
00:03:38,500 --> 00:03:40,309
しかし、質問の核心、つまりここでの本

89
00:03:40,309 --> 00:03:42,220
当の課題は、正確な答えを得ることです。

90
00:03:42,720 --> 00:03:44,516
これは整数ではないので実際の答えにはなり

91
00:03:44,516 --> 00:03:46,313
ませんが、本当の答え はもう少し多いので

92
00:03:46,313 --> 00:03:48,200
しょうか、それとも少し少ないのでしょうか?

93
00:03:48,520 --> 00:03:50,340
それとも、もっと多いのか、それとも少ないのでしょうか？

94
00:03:50,600 --> 00:03:52,070
そのエラーを解決するためにどのよ

95
00:03:52,070 --> 00:03:53,540
うな戦術を使用できるでしょうか?

96
00:03:55,680 --> 00:03:57,610
はっきり言っておきますが、このレッスンは

97
00:03:57,610 --> 00:03:59,540
目的地よりも旅そのものに関するものです。

98
00:04:00,260 --> 00:04:01,505
この方法でサブセットをフィルタリング

99
00:04:01,505 --> 00:04:02,820
してカウントする必要があるでしょうか?

100
00:04:03,300 --> 00:04:04,230
ほぼ間違いなくそうではありません

101
00:04:04,230 --> 00:04:05,160
が、私はそうは期待していません。

102
00:04:05,360 --> 00:04:08,210
しかし、おもちゃの問題かどうかにかかわらず、それは正

103
00:04:08,210 --> 00:04:11,060
当に挑戦的な質問であり、そ の挑戦を乗り越えることで

104
00:04:11,060 --> 00:04:14,020
、他の種類の難しい質問に関連するスキルが開発されます。

105
00:04:14,020 --> 00:04:16,252
あなたと私にとって、私があなたと共有したいソ

106
00:04:16,252 --> 00:04:18,079
リューションには、少な くとも 2 

107
00:04:18,079 --> 00:04:20,820
つの非常に驚くべき、そして非常に美しい展開があります。

108
00:04:21,300 --> 00:04:24,533
複素数が驚くべき登場をするだろうということはすでに伝 

109
00:04:24,533 --> 00:04:27,646
えましたが、それに到達する前に、別の奇妙な展開があ 

110
00:04:27,646 --> 00:04:30,640
り、それはおそらくさらに奇妙で、さらに予想外です。

111
00:04:31,300 --> 00:04:33,342
ただし、準備を整えるために、パズルの方向性を理解

112
00:04:33,342 --> 00:04:35,384
して、すべての優 れた問題解決者が行うべきことを

113
00:04:35,384 --> 00:04:37,172
実行して、より単純な例から始めまし ょう。

114
00:04:37,172 --> 00:04:39,640
 おそらくセット 1、2、3、4、5 で試してみましょう。

115
00:04:39,640 --> 00:04:41,916
もしあなたが紙と鉛筆を使ってこの問題を解いていたとした

116
00:04:41,916 --> 00:04:43,603
ら、ご存知のように、 あなたも IMO 

117
00:04:43,603 --> 00:04:45,795
の訓練を受けている子供の一人であるなら、単純に 2 

118
00:04:45,795 --> 00:04:48,072
か ら 5 のサブセットをすべてリストアップするのは悪

119
00:04:48,072 --> 00:04:49,000
い考えではありません。

120
00:04:49,340 --> 00:04:51,240
まだ32人なのでそんなに多くないです。

121
00:04:55,680 --> 00:04:58,188
これらすべてを頭の中で整理するにはさまざまな方

122
00:04:58,188 --> 00:05:00,696
法がありますが、 私たちが関心があるのはそれら

123
00:05:00,696 --> 00:05:03,422
の合計であるため、自然なことは、そ れらすべてを 

124
00:05:03,422 --> 00:05:06,040
1 つずつ調べてそれらの合計を計算することです。

125
00:05:06,520 --> 00:05:08,026
ここでは、YouTube でやっているだけです。

126
00:05:08,026 --> 00:05:09,533
 私はコンピューターを持 っているので、少しごま

127
00:05:09,533 --> 00:05:11,040
かして、すべての合計がいくらになるかを示します。

128
00:05:11,040 --> 00:05:14,488
また、少し騙してこれらすべてを再配置し、すべてが 

129
00:05:14,488 --> 00:05:17,800
同じ合計を持つコレクションに暗示的に整理します。

130
00:05:18,500 --> 00:05:20,008
たとえば、合計すると 6 になる 3 

131
00:05:20,008 --> 00:05:21,279
つの異なるサブセットがあり、そ 

132
00:05:21,279 --> 00:05:23,105
れらはすべてこの小さなボックス内に収まり、3 

133
00:05:23,105 --> 00:05:24,535
つのサブセットを合計 すると 10 

134
00:05:24,535 --> 00:05:26,600
になるものもすべてこの小さなボックス内に収まります。

135
00:05:27,260 --> 00:05:30,083
全体として、私たちが注目しているもの、合計が 

136
00:05:30,083 --> 00:05:32,661
5 で割り切れるサブセットが左側に表示さ 

137
00:05:32,661 --> 00:05:35,240
れており、合計 8 つあるように見えます。

138
00:05:36,340 --> 00:05:38,733
ああ、ところで、空集合を数えていると言うべ

139
00:05:38,733 --> 00:05:41,696
きですが、その合計は 0 であると考えられ、それは 

140
00:05:41,696 --> 00:05:43,520
5 の倍数であると考えられます。

141
00:05:43,940 --> 00:05:45,596
最後に、これらすべてがごく自然な選択で

142
00:05:45,596 --> 00:05:47,340
あることに同意していただければ幸いです。

143
00:05:48,140 --> 00:05:49,661
少し時間を取って、この答えをヒューリステ

144
00:05:49,661 --> 00:05:51,260
ィックに予想されるものと比較してください。

145
00:05:51,800 --> 00:05:54,402
合計 32 のサブセットのうち、5 分の 1 

146
00:05:54,402 --> 00:05:57,118
は 6 になります。4 なので、少なくともこの小

147
00:05:57,118 --> 00:06:00,060
さな例では、本当の答えはそれより少し大きくなります。

148
00:06:00,360 --> 00:06:02,540
それは頭の片隅に置いておきたいことかもしれません。

149
00:06:03,719 --> 00:06:06,409
さて、これはビデオの部分ですが、正直に言うと、どうや 

150
00:06:06,409 --> 00:06:08,900
ってモチベーションを上げればよいのかわかりません。

151
00:06:08,900 --> 00:06:11,936
個人的には、数学が自分で発見できたような気がするのが好き 

152
00:06:11,936 --> 00:06:14,972
です。 もしあなたと私が一緒に座ってこの問題を解いている 

153
00:06:14,972 --> 00:06:17,800
としたら、あらゆる種類の自然な手順が取れると思います。

154
00:06:18,240 --> 00:06:20,581
おそらく、サブセットに何らかの構造があるかどうかを

155
00:06:20,581 --> 00:06:22,922
理解しようとし たり、他の小さな例に対して、多くの

156
00:06:22,922 --> 00:06:24,795
異なる反復でこれらの合計が mod 5 

157
00:06:24,795 --> 00:06:27,323
でどのように分布するかを試したり、そこから次のような 

158
00:06:27,323 --> 00:06:29,945
方法で何らかの証明をつかもうとしたりするかもしれません。

159
00:06:29,945 --> 00:06:30,320
 誘導。

160
00:06:31,040 --> 00:06:32,493
このレッスンの初期バージョンを何人かの利用

161
00:06:32,493 --> 00:06:33,946
者と共有したとき、人 々はいくつかの素晴ら

162
00:06:33,946 --> 00:06:35,400
しい線形代数のアプローチを持ち出しました。

163
00:06:35,720 --> 00:06:37,580
それらはすべて良好であり、何も問題はありません。

164
00:06:37,580 --> 00:06:40,450
しかし、代わりに、ここでの私の目標は、生成関数と呼ばれるも

165
00:06:40,450 --> 00:06:43,320
のについて教えるこ とです。 これは、事後に「なるほど、こ

166
00:06:43,320 --> 00:06:46,190
れでうまくいくのは分かった」と考えるこ とができる戦術の 

167
00:06:46,190 --> 00:06:49,160
1 つです。 しかし一体どうやって考えたでしょうか。 それ？

168
00:06:49,920 --> 00:06:51,140
正直に言うと、分かりません。

169
00:06:51,420 --> 00:06:53,734
人生には、生成関数を理解するまでの時期と

170
00:06:53,734 --> 00:06:56,049
その後の時期がありま すが、思いつき以外

171
00:06:56,049 --> 00:06:58,480
にそれらを結びつけるものは思いつきません。

172
00:06:59,380 --> 00:07:02,333
多項式 1 プラス x 倍 1 プラス x の 2 

173
00:07:02,333 --> 00:07:05,286
乗倍 1 プラス x の 3 乗倍 1 プラス x 

174
00:07:05,286 --> 00:07:08,580
の 4 倍 1 プラス x の 5 倍を考えてもらいます。

175
00:07:08,980 --> 00:07:10,376
さて、これはどこから来たのですか? 

176
00:07:10,376 --> 00:07:11,540
と尋ねるのは当然だと思います。

177
00:07:11,580 --> 00:07:13,160
多項式は物事と何の関係があるのでしょうか?

178
00:07:13,520 --> 00:07:16,340
変数 x は今何を表しているのでしょうか?

179
00:07:17,160 --> 00:07:19,120
そして本質的に、x は純粋に記号です。

180
00:07:19,440 --> 00:07:22,344
ここで多項式を書いた唯一の理由は、それを

181
00:07:22,344 --> 00:07:25,249
代数的に拡張する行為 が部分集合を構築す

182
00:07:25,249 --> 00:07:28,300
る行為を完全に反映することになるからです。

183
00:07:28,300 --> 00:07:31,108
そして重要なことに、これを行うと、同じ合計を

184
00:07:31,108 --> 00:07:33,916
持つサブセットがすべてま とめられるという、

185
00:07:33,916 --> 00:07:36,980
私たちが望むこのグループ化が自動的に行われます。

186
00:07:37,400 --> 00:07:38,440
そして、私が何を言いたいのかをお見せしましょう。

187
00:07:39,020 --> 00:07:41,077
この式を拡張すると、基本的には 

188
00:07:41,077 --> 00:07:43,520
5 つの二者択一を行うことになります。

189
00:07:43,800 --> 00:07:45,800
各括弧内のどの用語を選択しますか?

190
00:07:46,600 --> 00:07:49,997
これらの括弧のそれぞれから 1 を選択すると、そ 

191
00:07:49,997 --> 00:07:53,260
れは要素を何も選択しない空のセットに対応します。

192
00:07:53,980 --> 00:07:56,954
一方、1 項に x を選択し、その他すべてから 

193
00:07:56,954 --> 00:08:00,300
1 を選択す ると、数値 1 だけを含むシングルトン 

194
00:08:00,300 --> 00:08:01,540
セットに対応します。

195
00:08:02,200 --> 00:08:05,100
同様に、x の 2 乗項を選択したが、他のすべてから 1 

196
00:08:05,100 --> 00:08:08,000
を選択した場合、それは 2 だけを含むセットに対応します。

197
00:08:08,520 --> 00:08:10,574
x の 3 乗項を選択するだけで、数値 

198
00:08:10,574 --> 00:08:12,320
3 だけを含むセットに対応します。

199
00:08:13,100 --> 00:08:15,588
しかし、興味深いことに、1 項に x を選択し、x 

200
00:08:15,588 --> 00:08:17,790
の 2 乗項を選択 し、その他すべてから 1 

201
00:08:17,790 --> 00:08:19,800
を選択するとどうなるかに注目してください。

202
00:08:20,280 --> 00:08:22,770
これは、1 と 2 を持ち、その他すべてか

203
00:08:22,770 --> 00:08:25,380
ら何も持たないサブセットの選択に対応します。

204
00:08:25,380 --> 00:08:27,821
しかし、多項式では、展開の仕方は 

205
00:08:27,821 --> 00:08:30,120
x の 3 乗のように見えます。

206
00:08:30,260 --> 00:08:33,298
したがって、2 つの異なる x 3 乗項があり、そ 

207
00:08:33,298 --> 00:08:36,220
れぞれの合計が 3 である部分集合から来ています。

208
00:08:36,220 --> 00:08:38,833
正直に言うと、ここで私が行おうとしているパターンは、時間

209
00:08:38,833 --> 00:08:41,446
をかけて立ち止まって、ここで すべてを展開するとどうなる

210
00:08:41,446 --> 00:08:44,059
かを自分で考えてみると、おそらく最も簡単なパターンです。

211
00:08:44,660 --> 00:08:47,930
基本的に、考えられるすべてのサブセットは、この展開内の項の 

212
00:08:47,930 --> 00:08:49,020
1 つに対応します。

213
00:08:49,680 --> 00:08:53,455
そして重要な点は、その展開から得られる項の指数が、 

214
00:08:53,455 --> 00:08:56,940
対応するサブセットの合計に等しいということです。

215
00:08:57,600 --> 00:08:59,982
口に出して言うとややこしいかもしれませんが、自分の頭で 

216
00:08:59,982 --> 00:09:02,280
よく考えてみれば、私の言いたいことがわかると思います。

217
00:09:02,620 --> 00:09:04,994
たとえば、問題がすべて解決し、ここで 32 

218
00:09:04,994 --> 00:09:07,692
個の項をすべて収集する と、それらの項のうち 3 

219
00:09:07,692 --> 00:09:09,958
つは x から 10 番目までであり、そ 

220
00:09:09,958 --> 00:09:12,656
れらのそれぞれは合計が 10 に等しい要素の選択に

221
00:09:12,656 --> 00:09:13,520
由来しています。

222
00:09:14,540 --> 00:09:18,400
さて、通常、多項式を書くときは、同様の項をすべて集めます。

223
00:09:18,680 --> 00:09:21,711
10 番目までの x のコピーを 3 つ持つ代わりに、10 

224
00:09:21,711 --> 00:09:24,440
番目までの x の前に係数 3 が表示されるだけです。

225
00:09:24,440 --> 00:09:26,976
したがって、これらの各係数は、サブセット

226
00:09:26,976 --> 00:09:29,640
の数を特定の合計でエンコードする方法です。

227
00:09:30,460 --> 00:09:33,649
これは、最初に述べたように、生成関数と呼ばれるものの例です。

228
00:09:33,649 --> 00:09:36,733
 アイデアは、それ ぞれの正の整数に関連付けられた答えを持

229
00:09:36,733 --> 00:09:38,859
つ質問があるかどうかです。 つまり、私 

230
00:09:38,859 --> 00:09:41,943
たちの場合、サブセットの合計が何個になるかということになり

231
00:09:41,943 --> 00:09:42,900
ます。 特定の値。

232
00:09:43,480 --> 00:09:47,737
係数がその質問の答えに対応する多項式を作成する場合、こ 

233
00:09:47,737 --> 00:09:51,994
の多項式のプロパティを数学的に操作および分析することで 

234
00:09:51,994 --> 00:09:56,100
、元の質問から驚くほど多くの洞察を得ることができます。

235
00:09:56,660 --> 00:09:59,447
生成関数の例は山ほどありますが、特に興味深い 

236
00:09:59,447 --> 00:10:02,355
例をもう 1 つ取り上げます。 同じ考え方を使 

237
00:10:02,355 --> 00:10:04,900
ってフィボナッチ数列を学ぶことができます。

238
00:10:05,340 --> 00:10:07,833
したがって、この多項式の係数はすべてフィボナ

239
00:10:07,833 --> 00:10:10,326
ッチ数になります。 こ の場合、それは無限多

240
00:10:10,326 --> 00:10:12,820
項式なので、実際にはべき級数と呼ぶべきです。

241
00:10:13,520 --> 00:10:15,738
詳細についてはここでは詳しく説明しませんが、 

242
00:10:15,738 --> 00:10:17,860
興味のある方のために画面上に残しておきます。

243
00:10:18,220 --> 00:10:21,189
基本的な考え方は、フィボナッチ数を定義するために使用され 

244
00:10:21,189 --> 00:10:24,055
るルール (それぞれが前の 2 つの合計である) は、 

245
00:10:24,055 --> 00:10:26,820
この関数に関して方程式として表現できるということです。

246
00:10:27,580 --> 00:10:29,331
この方程式により、その関数を別

247
00:10:29,331 --> 00:10:31,200
の形式で記述することができます。

248
00:10:32,180 --> 00:10:35,224
そして、ここで詳細のほとんどを省略しますが、こ 

249
00:10:35,224 --> 00:10:38,141
れを操作すると、ご存知のとおり、ここに少しの 

250
00:10:38,141 --> 00:10:41,185
部分分数分解と、少しの等比級数展開を追加すると 

251
00:10:41,185 --> 00:10:44,229
、正確な閉形式を取得できます。 個々のフィボナ 

252
00:10:44,229 --> 00:10:47,020
ッチ数式を表現できるので、とてもクールです。

253
00:10:47,579 --> 00:10:50,099
私がこれを言及したのは、実際には、この生成

254
00:10:50,099 --> 00:10:52,619
関数の考え方が、特定の 例をはるかに超えて

255
00:10:52,619 --> 00:10:55,260
いるという事実の氷山の一角を示すためでした。

256
00:10:56,460 --> 00:10:58,962
さて、私たちの特定の問題では、12345 

257
00:10:58,962 --> 00:11:02,298
だけの単純な例から 2000 までのすべての数値を含む大

258
00:11:02,298 --> 00:11:05,516
きな例に拡張すると、対応する生成関数には 2 000 

259
00:11:05,516 --> 00:11:08,614
個の異なる二項項が含まれます (1 プラス x、1 

260
00:11:08,614 --> 00:11:11,950
プラス x)。 2 乗を繰り返し、1 に x を加えて 

261
00:11:11,950 --> 00:11:13,500
2000 まで計算します。

262
00:11:13,500 --> 00:11:16,681
そして、これを拡張すると、係数が必要な情 

263
00:11:16,681 --> 00:11:19,560
報をすべて教えてくれるという考えです。

264
00:11:20,060 --> 00:11:22,138
実際にそれを拡張するのは非常識なことです

265
00:11:22,138 --> 00:11:24,217
が、原理的にはそれが どのようなものにな

266
00:11:24,217 --> 00:11:26,400
るかを頭の片隅に留めておくと役に立ちます。

267
00:11:26,800 --> 00:11:30,487
たとえば、原則として、これを拡張すると、25 項の 

268
00:11:30,487 --> 00:11:34,600
x の前の係数がたまたま 142 であることがわかります。

269
00:11:35,520 --> 00:11:39,165
そして、これは、合計が 25 である異なるサブセットが 

270
00:11:39,165 --> 00:11:41,640
142 個あるという事実に対応します。

271
00:11:42,280 --> 00:11:45,157
したがって、ここでの母関数を分析する技術

272
00:11:45,157 --> 00:11:48,034
は、実際に式を拡張する ことなく、これら

273
00:11:48,034 --> 00:11:51,200
の係数に関する事実を推測することになります。

274
00:11:55,880 --> 00:11:59,418
したがって、先に進むと、この展開をより抽象的に書きま す。

275
00:11:59,418 --> 00:12:02,469
 n が 0 から大文字 N までの合計だけです。

276
00:12:02,469 --> 00:12:05,520
 ここで、c sub n は未知の係数を示します。

277
00:12:05,880 --> 00:12:06,970
私たちにとって、それらすべてはブ

278
00:12:06,970 --> 00:12:08,060
ラックボックスとして始まります。

279
00:12:08,360 --> 00:12:10,916
そしてさらに先に進むと、これを実際の関数、つまり 

280
00:12:10,916 --> 00:12:13,780
x を接続するものとして扱い始め、出力が何であるかを確 

281
00:12:13,780 --> 00:12:16,440
認し、それから係数について何が分かるのかを尋ねます。

282
00:12:17,060 --> 00:12:18,746
たとえば、非常に簡単な入力は、「x 

283
00:12:18,746 --> 00:12:20,620
= 0」のようなものを入力することです。

284
00:12:21,120 --> 00:12:23,065
この場合、重要なのは、上記の因数分解形式を使

285
00:12:23,065 --> 00:12:25,100
用してそれを評価する方法を知っていることです。

286
00:12:25,380 --> 00:12:27,836
x がすべて 0 に等しいと代入すると、すべての項が 

287
00:12:27,836 --> 00:12:30,020
1 のように見えるため、答えは 1 になります。

288
00:12:30,360 --> 00:12:33,746
そして、拡張された形式では、x に関係する項はすべて削除さ 

289
00:12:33,746 --> 00:12:37,020
れ、0 になり、最初の項 c sub 0 だけが残ります。

290
00:12:37,800 --> 00:12:39,160
さて、この場合、それは実際にはそれ

291
00:12:39,160 --> 00:12:40,600
ほど興味深いことを教えてくれません。

292
00:12:40,600 --> 00:12:42,334
これは本質的に、空のセットが 1 

293
00:12:42,334 --> 00:12:44,783
つ存在するということになりますが、まだ準備が整っ

294
00:12:44,783 --> 00:12:45,600
ているだけです。

295
00:12:46,040 --> 00:12:47,785
次の例として、f を 1 で評価

296
00:12:47,785 --> 00:12:49,640
することについて考えてみましょう。

297
00:12:50,460 --> 00:12:53,242
これは、私たちが知っている式を使って行うことができます。

298
00:12:53,242 --> 00:12:56,224
 これらの x のすべてに 1 を代入すると、すべての項が 

299
00:12:56,224 --> 00:12:58,311
2 のように見 えるため、合計で 2 を 

300
00:12:58,311 --> 00:13:00,200
2,000 回乗算することになります。

301
00:13:00,720 --> 00:13:02,835
一方、拡張された式では、x が 1 

302
00:13:02,835 --> 00:13:05,656
に等しいと代入すると、x のすべての べき乗が 

303
00:13:05,656 --> 00:13:08,477
1 になるため、基本的にすべての係数を加算するこ

304
00:13:08,477 --> 00:13:09,300
とになります。

305
00:13:09,300 --> 00:13:11,460
それについて考えると、それはとても素晴らしいことです。

306
00:13:11,740 --> 00:13:14,516
単一の数値で関数を評価するだけで、すべて 

307
00:13:14,516 --> 00:13:17,160
の係数の合計が何であるかを推測できます。

308
00:13:17,680 --> 00:13:19,940
ここでもう一度、私たちの特定の例では、これら

309
00:13:19,940 --> 00:13:22,200
の係数の合計が何である かがすでにわかってい

310
00:13:22,200 --> 00:13:24,460
るため、それほど興味深いものではありません。

311
00:13:24,960 --> 00:13:27,050
各係数は、特定の合計を持つサブセットの数をカウントす

312
00:13:27,050 --> 00:13:29,300
るため、それらを 合計するときは、2 から 2,000 

313
00:13:29,300 --> 00:13:30,586
までであることがわかっているす 

314
00:13:30,586 --> 00:13:32,676
べてのサブセットをカウントしているだけであることに注

315
00:13:32,676 --> 00:13:33,320
意してください。

316
00:13:34,220 --> 00:13:36,880
ただし、この関数をマイナス 1 で評価してもら 

317
00:13:36,880 --> 00:13:39,320
うと、真に新しい事実を与えることができます。

318
00:13:39,720 --> 00:13:41,220
それが何を意味するのか少し考えてみましょう。

319
00:13:43,340 --> 00:13:45,561
負の 1 を入力すると、再び既知のもの、つまり

320
00:13:45,561 --> 00:13:47,589
一番上の因数分解された 式から始まります。

321
00:13:47,589 --> 00:13:50,100
 ここで必要なのは、最初の項を確認することだけです。

322
00:13:50,440 --> 00:13:52,481
x を代入すると、最初のかっこが 0 

323
00:13:52,481 --> 00:13:55,060
になるため、式全体が 0 になる必要があります。

324
00:13:55,640 --> 00:13:57,983
しかし、すべての係数を使用して展開された式 

325
00:13:57,983 --> 00:14:00,220
にそれを適用すると、何がわかるでしょうか?

326
00:14:00,720 --> 00:14:04,202
そして、この解決策がとる奇妙な展開をできるだけ示唆する 

327
00:14:04,202 --> 00:14:07,685
という精神で、この式のマイナス 1 のさまざまな累乗を 

328
00:14:07,685 --> 00:14:10,920
回転の観点から実際に視覚化してもらいたいと思います。

329
00:14:11,460 --> 00:14:14,045
最初の項、つまり 0 から 1 までの負の値は単なる 1 

330
00:14:14,045 --> 00:14:16,720
であり、これを 0 から 1 までのベクトルとして描きます。

331
00:14:16,720 --> 00:14:21,023
マイナス 1 の 1 乗はマイナス 1 そのものであり、最 

332
00:14:21,023 --> 00:14:25,040
後の項から 180 度回転したものとして考えてください。

333
00:14:25,540 --> 00:14:28,235
次に、負の 1 の 2 乗を取得すると、正の 

334
00:14:28,235 --> 00:14:30,580
1 になり、再び 180 度回転します。

335
00:14:30,580 --> 00:14:33,978
そして一般に、ここでの連続する各用語は、180 

336
00:14:33,978 --> 00:14:35,820
度回転したように見えます。

337
00:14:36,180 --> 00:14:39,045
これを代数的に解釈すると、偶数係数と奇数係 

338
00:14:39,045 --> 00:14:41,780
数の間で合計が振動していることになります。

339
00:14:42,180 --> 00:14:43,860
ただし、ビジュアルを頭の片隅に置いておいてください。

340
00:14:44,260 --> 00:14:47,112
この式はどの生成関数にも当てはまりますが、ここ 

341
00:14:47,112 --> 00:14:49,965
でも特別な生成関数の場合、この値、この交互の合 

342
00:14:49,965 --> 00:14:52,580
計は 0 に等しくなることがわかっています。

343
00:14:53,040 --> 00:14:56,078
そして、これを解釈する方法は、偶数係数と奇数係数の間に 

344
00:14:56,078 --> 00:14:58,900
均等なバランスがあることを示しているということです。

345
00:14:59,460 --> 00:15:01,737
そして、おそらくこの小さな例の文脈では、

346
00:15:01,737 --> 00:15:04,014
これらの係数はサブセッ トに関する事実を

347
00:15:04,014 --> 00:15:06,520
エンコードしていることを思い出してください。

348
00:15:06,760 --> 00:15:09,815
したがって、これらすべての偶数係数と奇数係数のバラン

349
00:15:09,815 --> 00:15:12,870
スが等しい場合、すべてのサブ セットの半分が偶数の合

350
00:15:12,870 --> 00:15:16,160
計を持ち、半分が奇数の合計を持っていることがわかります。

351
00:15:16,660 --> 00:15:18,650
おそらくそれが予想されることでしょうが、最初は

352
00:15:18,650 --> 00:15:20,640
それをどのように示すかは明らかではありません。

353
00:15:20,820 --> 00:15:23,440
そして、生成関数を使用すると、それがすぐに現れます。

354
00:15:24,480 --> 00:15:27,458
もう一度、私たちがどこへ向かうのかを示唆するために、評価し

355
00:15:27,458 --> 00:15:29,820
た最後の 2 つの項目を取得し 、それら 2 

356
00:15:29,820 --> 00:15:32,798
つを合計して、1/2 で割ることによって、これを少し書き直

357
00:15:32,798 --> 00:15:33,620
させてください。

358
00:15:35,100 --> 00:15:38,318
考えてみれば、これはすべての偶数係数をフィルタリ 

359
00:15:38,318 --> 00:15:41,280
ングして、すべての奇数係数を消去する方法です。

360
00:15:41,900 --> 00:15:43,881
したがって、すべての偶数係数の合計 

361
00:15:43,881 --> 00:15:46,414
(これも頭の片隅で、偶数の 合計を持つ部分集合

362
00:15:46,414 --> 00:15:48,836
の総数を意味します) が全体の半分のように 

363
00:15:48,836 --> 00:15:52,140
見えるという事実を記述するための特にきれいな方法になります。

364
00:15:52,620 --> 00:15:54,860
言うまでもなく、これは私たちが答えたい実際

365
00:15:54,860 --> 00:15:57,100
の質問に興味をそそられるほど近いものです。

366
00:15:57,100 --> 00:16:00,672
私たちがやりたいのは、関数 f に対して実行できる賢い方法 

367
00:16:00,672 --> 00:16:04,125
、関数 f を評価するための適切に選択された数値を見つけ 

368
00:16:04,125 --> 00:16:07,460
て、5 の倍数に対応するすべての係数を取得することです。

369
00:16:08,000 --> 00:16:10,406
もう一度、これらの係数が何をエンコードしているか 

370
00:16:10,406 --> 00:16:12,620
を考えると、それが最後の質問の答えになります。

371
00:16:12,760 --> 00:16:14,810
これは、合計が 5 で割り切れるサブ

372
00:16:14,810 --> 00:16:16,860
セットの総数を数えることになります。

373
00:16:18,900 --> 00:16:22,216
これを行うためのコツは、入力の連続するパワーが前 

374
00:16:22,216 --> 00:16:25,400
後に回転する、今行ったことを一般化することです。

375
00:16:25,900 --> 00:16:28,671
ただし、今回は 1 回おきに回転させるのではなく、何 

376
00:16:28,671 --> 00:16:31,340
らかの方法で 5 周期で回転させたいと考えています。

377
00:16:31,740 --> 00:16:34,220
そしてそれを行うために、複素平面に拡張します。

378
00:16:34,640 --> 00:16:37,675
ご覧のとおり、そこにある値を見つけることができ、

379
00:16:37,675 --> 00:16:40,837
その値を連続的に累乗すると 、その値は 5 分の 

380
00:16:40,837 --> 00:16:44,000
1 回転して、周波数 5 のプロセスが得られます。

381
00:16:44,700 --> 00:16:47,148
一歩下がったら、私が複素数について考えろと言うの 

382
00:16:47,148 --> 00:16:49,500
は、ある意味ばかばかしいことだとわかっています。

383
00:16:49,860 --> 00:16:51,393
つまり、計数の問題から始めました。

384
00:16:51,393 --> 00:16:53,738
 これは離散数学です が、それほど乱暴なものではない

385
00:16:53,738 --> 00:16:54,640
ことを願っています。

386
00:16:55,400 --> 00:16:58,137
繰り返しになりますが、私が解決策におけるさまざまな奇妙な展

387
00:16:58,137 --> 00:16:59,647
開を整理するために図を描いてい 

388
00:16:59,647 --> 00:17:02,384
る理由は、それらが実際には数学のより広範なスキームの中では

389
00:17:02,384 --> 00:17:03,800
それほど奇妙ではないからです。

390
00:17:04,140 --> 00:17:06,795
これから適用しようとしているトリックは、整

391
00:17:06,795 --> 00:17:09,451
数の離散的な問題をより よく理解するために

392
00:17:09,451 --> 00:17:12,359
複素数を使用する他の多くの例とよく似ています。

393
00:17:12,740 --> 00:17:16,680
したがって、それが自分自身で発見できたものの

394
00:17:16,680 --> 00:17:20,621
ように感じられれ ば感じるほど、この思考の循

395
00:17:20,621 --> 00:17:23,845
環の中で将来の問題に取り組んでいる 

396
00:17:23,845 --> 00:17:29,040
ときに、実際にはそれを自分で発見する可能性が高くなります。

397
00:17:29,040 --> 00:17:32,774
具体的に言うと、私が関心のある複素数はゼータとラベル付け 

398
00:17:32,774 --> 00:17:36,380
するもので、単位円の 5 分の 1 周の位置にあります。

399
00:17:36,780 --> 00:17:38,925
したがって、その角度は 2 π 

400
00:17:38,925 --> 00:17:41,340
5 ラジアンで、大きさは 1 です。

401
00:17:42,060 --> 00:17:44,771
これは、標準的なオイラーの公式表記では、その数値を 

402
00:17:44,771 --> 00:17:46,648
e の 2 乗 p i i を 5 

403
00:17:46,648 --> 00:17:49,360
で割ったものとして明示的に記述することを意味します。

404
00:17:49,640 --> 00:17:53,664
この表記に慣れていない場合は、実数部が 72 度の 

405
00:17:53,664 --> 00:17:57,689
余弦 (72 は 1 回転の 5 分の 1)、虚数 

406
00:17:57,689 --> 00:18:01,560
部が 72 度の正弦であると考えることもできます。

407
00:18:02,540 --> 00:18:04,240
しかし、正直に言うと、実際には明示的

408
00:18:04,240 --> 00:18:05,940
な値について考える必要はありません。

409
00:18:06,200 --> 00:18:08,319
代わりに、注目すべき重要なこと

410
00:18:08,319 --> 00:18:10,580
は、この数の累乗が持つ特性です。

411
00:18:11,100 --> 00:18:13,540
たとえば、それを 2 乗すると、その大きさが 

412
00:18:13,540 --> 00:18:15,662
1 なので、その 2 乗の大きさも 1 

413
00:18:15,662 --> 00:18:17,996
になりますが、単位円の周りを 5 分の 1 

414
00:18:17,996 --> 00:18:21,180
回転するため、今度は 5 分の 2 回転した位置になります。

415
00:18:22,280 --> 00:18:25,733
同様に、3 乗に上げると、最終的に 5 分の 3 回転し 

416
00:18:25,733 --> 00:18:29,305
、4 乗に上げます。 最終的に 5 分の 4 に上げて、5 

417
00:18:29,305 --> 00:18:32,520
乗すると、次のようになります。 ずっと1つに戻ります。

418
00:18:32,860 --> 00:18:36,020
これは、ゼロ乗した場合と同じであり、この循環は 

419
00:18:36,020 --> 00:18:37,600
5 期ごとに発生します。

420
00:18:37,860 --> 00:18:39,200
それが私たちが大切にしていることです。

421
00:18:39,760 --> 00:18:43,046
これらの数値には特別な名前があり、1 の 5 乗根 

422
00:18:43,046 --> 00:18:46,080
と呼ばれます。 本質的に、方程式 z を解くと 

423
00:18:46,080 --> 00:18:49,240
5 が 1 に等しく、数値 1 の 5 乗根です。

424
00:18:49,460 --> 00:18:52,464
この方程式を誰かに提示したとしたら、おそらく答えは明らか 

425
00:18:52,464 --> 00:18:54,640
に z が 1 に等しい、と言うでしょう。

426
00:18:54,640 --> 00:18:57,541
 しかし、複素平 面には他に 4 つの答えがあり、他の 

427
00:18:57,541 --> 00:18:59,406
4 つの数値があ り、それらを 5 

428
00:18:59,406 --> 00:19:01,168
番目に上げると次のようになります。

429
00:19:01,168 --> 00:19:04,069
 それ らを集合体として考えると、多くの場合非常に役立ち

430
00:19:04,069 --> 00:19:04,380
ます。

431
00:19:04,880 --> 00:19:07,440
この方程式を覚えておいてください。 少し後で戻ってきます。

432
00:19:08,700 --> 00:19:11,383
したがって、前に行ったことと同様に、1 の f 

433
00:19:11,383 --> 00:19:14,625
と負の 1 の f を加算して奇数項間で相殺を行いました。

434
00:19:14,625 --> 00:19:17,085
 これから行うことは 、これらの数値の 5 

435
00:19:17,085 --> 00:19:19,657
つすべてで f を評価し、加算することで す。

436
00:19:19,657 --> 00:19:22,900
 一緒に参加して、キャンセルが得られることを願っています。

437
00:19:23,240 --> 00:19:26,332
やや複雑に思えるかもしれませんが、x の f が単に 

438
00:19:26,332 --> 00:19:29,540
x に等しい場合など、非常に単純な例を考えてみましょう。

439
00:19:30,000 --> 00:19:32,666
その場合、これら 5 つの項を合計するとき、ゼー 

440
00:19:32,666 --> 00:19:35,226
タとゼロ、ゼータと 1 を加えて、ゼータと 4 

441
00:19:35,226 --> 00:19:37,680
番目まで、単一の根自体を合計しているだけです。

442
00:19:38,240 --> 00:19:40,409
複素数を加算するときは、先端から末尾までの 

443
00:19:40,409 --> 00:19:42,480
ベクトル加算のように考えることができます。

444
00:19:42,899 --> 00:19:46,063
したがって、ゼータにゼロを加えたゼータは次のようになりま 

445
00:19:46,063 --> 00:19:49,335
す。 そして、ゼータの二乗を追加して、そのベクトルの尾部を 

446
00:19:49,335 --> 00:19:52,280
最後のベクトルの先端に持ってくると、これが得られます。

447
00:19:52,980 --> 00:19:56,377
次に、同様に、3 乗したゼータの尾部をその先端に持ってき 

448
00:19:56,377 --> 00:19:59,657
て、ゼータを 4 番目まで同様に実行すると、全体の合計 

449
00:19:59,657 --> 00:20:02,820
が実際にどのようにループしてゼロに戻るかがわかります。

450
00:20:03,360 --> 00:20:05,883
これについて別の考え方をすると、これらの 5 つの項はす 

451
00:20:05,883 --> 00:20:08,320
べて、数字の 0 を中心に均等にバランスが取れています。

452
00:20:08,880 --> 00:20:10,620
それらの重心は原点にあります。

453
00:20:11,700 --> 00:20:14,130
ここで、x の f が x の 2 乗である場 

454
00:20:14,130 --> 00:20:16,460
合の、もう少し簡単な例を考えると役に立ちます。

455
00:20:17,360 --> 00:20:18,690
したがって、ゼータをゼロに二乗する

456
00:20:18,690 --> 00:20:20,020
と、ゼータはゼロのままになります。

457
00:20:20,260 --> 00:20:21,980
これはナンバーワンを表現する単なる派手な方法です。

458
00:20:22,640 --> 00:20:24,980
ゼータを 2 乗すると、ゼータの 2 乗自体が得られます。

459
00:20:25,440 --> 00:20:27,840
したがって、これを実行すると、この点がゼータ二

460
00:20:27,840 --> 00:20:30,240
乗点に移動することを想像できるかもしれません。

461
00:20:30,720 --> 00:20:32,680
ゼータの二乗は 4 番目のゼータに移動します。

462
00:20:33,200 --> 00:20:34,480
この点がゼータから 4 番目に移動

463
00:20:34,480 --> 00:20:35,760
する様子を想像するかもしれません。

464
00:20:36,580 --> 00:20:38,851
ゼータの 3 乗は 6 番目のゼータに移動します。

465
00:20:38,851 --> 00:20:41,213
 これは 5 回ごと にループするため、ゼータから 

466
00:20:41,213 --> 00:20:42,940
1 番目のゼータと同じことになります。

467
00:20:43,420 --> 00:20:44,879
したがって、この点はここで上に移動します。

468
00:20:46,420 --> 00:20:49,394
そして最後に、ゼータを 4 番目の平方にして、ゼータを 

469
00:20:49,394 --> 00:20:51,731
8 番目に求めます。 これは、ゼータの 3 

470
00:20:51,731 --> 00:20:54,600
乗と同じになります。 これは、次のように描画できます。

471
00:20:55,560 --> 00:20:58,288
特にここに描いたすべての矢印を考えると、考えるのが少し混乱 

472
00:20:58,288 --> 00:21:00,926
するように思えるかもしれませんが、人生で少なくとも一度は 

473
00:21:00,926 --> 00:21:03,655
考えてみる価値があります。 なぜなら、ここでの考え方は、こ 

474
00:21:03,655 --> 00:21:06,384
れを二乗すると、これらすべての異なる矢印に行くようなものだ 

475
00:21:06,384 --> 00:21:09,113
からです。 用語をプログラムして角度を 2 倍にすると、全 

476
00:21:09,113 --> 00:21:11,660
体的な効果はそれらの用語をシャッフルするだけになります。

477
00:21:12,000 --> 00:21:14,187
同じ数値が得られますが、異なる順序で書かれている 

478
00:21:14,187 --> 00:21:16,200
ため、それらの合計は依然としてゼロになります。

479
00:21:16,959 --> 00:21:20,120
同様に、x の 3 乗に関するこの演習を実行するこ 

480
00:21:20,120 --> 00:21:23,401
とをお勧めします。 これらの点のそれぞれがどこに行き 

481
00:21:23,401 --> 00:21:26,561
着くのかを追跡すると、これらの項を 3 乗すると、 

482
00:21:26,561 --> 00:21:29,843
次のことがわかるでしょう。 それぞれを取り出し、その 

483
00:21:29,843 --> 00:21:32,760
角度を 3 倍し、再びそれらをシャッフルします。

484
00:21:33,140 --> 00:21:34,880
同じ用語が別の順序でリストされています。

485
00:21:34,880 --> 00:21:36,516
当然のことながら、関数が 4 番目の 

486
00:21:36,516 --> 00:21:38,240
x だった場合にも同じことが起こります。

487
00:21:41,780 --> 00:21:43,921
しかし、重要なことに、関数 x を 

488
00:21:43,921 --> 00:21:46,420
5 番目まで考慮すると、状況が変わります。

489
00:21:47,060 --> 00:21:50,699
その場合、ゼータを 5 乗すると、定義上、ゼータは 

490
00:21:50,699 --> 00:21:51,820
1 になります。

491
00:21:52,540 --> 00:21:55,200
同様に、ゼータの 2 乗の 5 乗は 1 になります。

492
00:21:55,560 --> 00:21:57,960
これらすべてが一つになり、統一の根源となります。

493
00:21:57,980 --> 00:21:59,940
結局のところ、これが彼らの人生の目的のすべてなのです。

494
00:22:00,440 --> 00:22:03,086
したがって、この場合、関数を適用してそれらをす

495
00:22:03,086 --> 00:22:05,733
べて加算すると、ゼロに なってキャンセルが得ら

496
00:22:05,733 --> 00:22:08,380
れる代わりに、一種の建設的な干渉が得られます。

497
00:22:08,780 --> 00:22:11,440
それらはすべて 1 なので、合計は 5 になります。

498
00:22:12,060 --> 00:22:15,530
したがって、一歩下がって、これらすべての例が何を意味するの 

499
00:22:15,530 --> 00:22:18,770
かを考えてみると、本質的にこの式は、5 で割り切れない 

500
00:22:18,770 --> 00:22:22,125
x のべき乗についてはゼロになるものですが、x のべき乗 

501
00:22:22,125 --> 00:22:25,480
についてはゼロ以外の何かになります。 は5で割り切れます。

502
00:22:25,900 --> 00:22:28,380
そして、それはまさに私たちが探している種類のフィルターです。

503
00:22:29,020 --> 00:22:31,643
実際の関数が単純な x の累乗よりもはるかに複雑

504
00:22:31,643 --> 00:22:34,267
であることが心配な場合は 、すべてが線形であるた

505
00:22:34,267 --> 00:22:37,000
め、ここでは基本的に物事は非常にうまく機能します。

506
00:22:37,700 --> 00:22:41,903
f が巨大な多項式で、この大きな合計を評価したい場合 

507
00:22:41,903 --> 00:22:45,640
は、列ごとに処理することを考えることができます。

508
00:22:45,640 --> 00:22:50,000
 毎 回、実際にはゼータの累乗を加算することになります。

509
00:22:50,360 --> 00:22:52,135
そしてほとんどの場合、これらのパワーはす

510
00:22:52,135 --> 00:22:54,000
べて互いに相殺され、結果はゼロになります。

511
00:22:54,380 --> 00:22:56,291
しかし、これらのべき乗がすべて 5 

512
00:22:56,291 --> 00:22:58,203
の倍数である場合、それらは建設的に 

513
00:22:58,203 --> 00:23:00,645
干渉し、代わりに、対応する係数が何であっても 

514
00:23:00,645 --> 00:23:01,920
5 倍の値が得られます。

515
00:23:02,040 --> 00:23:03,526
雑草の奥深くにいると、そもそもなぜ

516
00:23:03,526 --> 00:23:05,100
ここにいるのか忘れてしまいがちです。

517
00:23:05,360 --> 00:23:07,856
ただし、これらの係数のそれぞれによって、サブセットの合計が

518
00:23:07,856 --> 00:23:10,440
特定の値に達するかどうかがわかることを覚えておいてください。

519
00:23:10,920 --> 00:23:12,900
したがって、私たちが望んでいるのは、最初

520
00:23:12,900 --> 00:23:14,980
に存在するすべての係数を合計することです。

521
00:23:15,380 --> 00:23:16,909
そして私たちが現在持っているの

522
00:23:16,909 --> 00:23:18,540
は、それを明示的に行う方法です。

523
00:23:18,800 --> 00:23:21,800
この関数をこれら 5 つの異なる単位根に基づ 

524
00:23:21,800 --> 00:23:24,800
いて評価すると、奇妙に思えるかもしれませんが 

525
00:23:24,800 --> 00:23:27,540
、5 で割るだけで必要な合計が得られます。

526
00:23:28,480 --> 00:23:30,220
私に言わせれば、それは本当に素晴らしいことです。

527
00:23:30,220 --> 00:23:33,925
部分集合に関する質問があり、それは離散数学の問題 

528
00:23:33,925 --> 00:23:37,630
ですが、それに答える方法は、慎重に選択した複素数 

529
00:23:37,630 --> 00:23:41,040
に対してクレイジーな多項式を評価することです。

530
00:23:41,520 --> 00:23:42,080
計算をすればするほど、より多くのことが得られます。

531
00:23:42,080 --> 00:23:44,634
複素数は離散数学と奇妙な関係にあるため、数学をやればやる 

532
00:23:44,634 --> 00:23:47,101
ほどクレイジーではなくなりますが、これは本当に素晴らし 

533
00:23:47,101 --> 00:23:49,480
いことであり、これについては二通りの方法はありません。

534
00:23:50,340 --> 00:23:54,219
ただし、これが役立つ唯一の方法は、多項式でこの野生の式を実際

535
00:23:54,219 --> 00:23:58,100
 に評価できる場合であると不満を言う人もいるかもしれません。

536
00:23:58,620 --> 00:24:01,025
ここで思い出してください、私たちが知っている多項式の

537
00:24:01,025 --> 00:24:03,431
形式、つまり私たち が使いやすいのは、因数分解された

538
00:24:03,431 --> 00:24:05,836
形式です。 1 プラス x、1 プラス x の 2 

539
00:24:05,836 --> 00:24:08,520
乗を繰り返し、1 プラス x まで続きます。 2,000。

540
00:24:09,220 --> 00:24:12,326
ここまでのすべては、ここで実際に腕まくりをして正直 

541
00:24:12,326 --> 00:24:15,432
に計算できない限り、1 つの難しい問題を別の難しい 

542
00:24:15,432 --> 00:24:18,420
問題に押し込む、無意味な象徴的な遊びにすぎません。

543
00:24:18,900 --> 00:24:20,563
これが私たちの議論の最後の主張ですの

544
00:24:20,563 --> 00:24:22,320
で、一歩下がって、深呼吸してください。

545
00:24:22,700 --> 00:24:25,323
実際には、あなたが思っているほど悪くはありませんが

546
00:24:25,323 --> 00:24:27,946
、必要な統一の根の 1 つ だけ、おそらくゼータ自

547
00:24:27,946 --> 00:24:30,780
体をどのように評価するかを考えることから始めましょう。

548
00:24:31,780 --> 00:24:34,216
つまり、1 プラス ゼータ、× 1 プラス ゼータの 2 

549
00:24:34,216 --> 00:24:35,728
乗 、× 1 プラス ゼータの 3 

550
00:24:35,728 --> 00:24:36,820
乗、というようになります。

551
00:24:37,060 --> 00:24:39,931
ただし、重要なことは、最初の 5 項の後に、ゼータの力 

552
00:24:39,931 --> 00:24:42,700
が繰り返されるため、すべてが繰り返され始めることです。

553
00:24:43,220 --> 00:24:46,529
2,000 までの式全体は、基本的にこの式を 

554
00:24:46,529 --> 00:24:49,120
400 回コピーするだけになります。

555
00:24:49,600 --> 00:24:51,462
この式を評価するのはまだ難しいように思え

556
00:24:51,462 --> 00:24:53,045
るかもしれませんが、 2,000 

557
00:24:53,045 --> 00:24:55,280
の異なる項を掛け合わせるよりははるかに簡単です。

558
00:24:55,280 --> 00:24:57,325
これを視覚化すると、統一のルートを 1 

559
00:24:57,325 --> 00:24:59,472
つずつ取得していますが、基本的 には 1 

560
00:24:59,472 --> 00:25:02,540
つ追加して、それらをすべて右にシフトしていることになります。

561
00:25:03,060 --> 00:25:05,764
実際、この図は、私たちが期待するであろう数値的な 

562
00:25:05,764 --> 00:25:08,360
答えを幾何学的に直感的に導き出すのに役立ちます。

563
00:25:08,880 --> 00:25:11,629
私たちが求めているのは、これら 5 つの異な 

564
00:25:11,629 --> 00:25:14,260
る複素数の積、つまり 5 つの黄色い点です。

565
00:25:14,820 --> 00:25:17,553
複素数についてある程度の知識がある場合、複素数は共

566
00:25:17,553 --> 00:25:20,505
役ペアで表現されるため、 実際に必要なのは、これらの 

567
00:25:20,505 --> 00:25:23,020
5 本の黄色の線の長さを乗算することだけです。

568
00:25:23,679 --> 00:25:26,601
たとえば、一番右にある点は、1 プラス ゼータから 

569
00:25:26,601 --> 00:25:29,410
5 番目の点に対応しま す。 図では、これを 0 

570
00:25:29,410 --> 00:25:32,220
プラス 1 へのゼータとしてラベル付けしています。

571
00:25:32,720 --> 00:25:33,913
しかし、それは問題ではありません。

572
00:25:33,913 --> 00:25:35,316
 どちらの場合も、ど ちらも数字の 2 

573
00:25:35,316 --> 00:25:36,440
を単に派手に書いているだけです。

574
00:25:36,980 --> 00:25:40,085
その隣には、1 プラス ゼータと 1 プラス ゼータ 

575
00:25:40,085 --> 00:25:42,960
から 4 番目の値があり、どちらも同じ大きさです。

576
00:25:43,000 --> 00:25:44,600
これらの線の長さは同じです。

577
00:25:44,940 --> 00:25:46,680
それに、L1 という名前を付けましょう。

578
00:25:47,080 --> 00:25:48,645
したがって、その長さの 2 つの異なるコピー 

579
00:25:48,645 --> 00:25:50,280
(L1 の 2 乗) を乗算する必要があります。

580
00:25:51,020 --> 00:25:54,713
同様に、残りの 2 つの値、ゼータ 2 乗プラス 1 とゼ 

581
00:25:54,713 --> 00:25:58,160
ータ 3 乗プラス 1 も同じ長さを持ち、共役ペアです。

582
00:25:58,580 --> 00:26:00,200
したがって、その長さを単に L2 と呼びましょう。

583
00:26:00,880 --> 00:26:02,304
したがって、私たちの製品にはその L2 

584
00:26:02,304 --> 00:26:03,800
のコピーが 2 つ含まれる必要があります。

585
00:26:04,340 --> 00:26:07,886
緩いヒューリスティックな推測を行っているだけであれば、L1 

586
00:26:07,886 --> 00:26:10,724
は 1 より少し長 い長さであり、L2 は 1 

587
00:26:10,724 --> 00:26:13,680
より少し短い長さであることに気づくかもしれません。

588
00:26:13,960 --> 00:26:16,110
したがって、ここでの最終的な答えは、おそらく 

589
00:26:16,110 --> 00:26:17,700
2 つくらいのものになるでしょう。

590
00:26:17,960 --> 00:26:19,700
私たちは前向きではありませんが、その程度のことはあります。

591
00:26:19,700 --> 00:26:24,140
これを正確な答えにするには、式全体を拡張するだけです。

592
00:26:24,520 --> 00:26:25,884
正直、それほど悪くはありません。

593
00:26:25,884 --> 00:26:27,420
 用語は 32 種類しかありません。

594
00:26:33,320 --> 00:26:35,170
さて、あなたは長い間私と付き合ってきました、そし

595
00:26:35,170 --> 00:26:37,020
て私はそれが多くのことになることを知っています。

596
00:26:37,280 --> 00:26:39,109
しかし、この議論全体には最後のトリックが 

597
00:26:39,109 --> 00:26:40,850
1 つあり、それによ って最後のステップ

598
00:26:40,850 --> 00:26:42,680
が思っているよりもはるかに簡単になります。

599
00:26:43,260 --> 00:26:44,440
そして、私たちがどこにいるのかを思

600
00:26:44,440 --> 00:26:45,620
い出すために、要約してみましょう。

601
00:26:45,820 --> 00:26:49,104
そこで私たちは、1 の部分集合の数を 2,000 まで数え 

602
00:26:49,104 --> 00:26:52,280
て、その合計が 5 で割り切れるという質問から始めました。

603
00:26:52,740 --> 00:26:54,448
次に、この多項式を構築しました。

604
00:26:54,448 --> 00:26:57,545
 その係数は、各値 n に対 して特定の合計を持つサブセッ

605
00:26:57,545 --> 00:26:59,040
トがいくつあるかを示します。

606
00:26:59,960 --> 00:27:01,923
したがって、私たちが望むのは、その多項式の 

607
00:27:01,923 --> 00:27:03,620
5 番目ごとの係数を合計することです。

608
00:27:04,780 --> 00:27:06,682
次に、この多項式を 1 の 5 

609
00:27:06,682 --> 00:27:09,178
乗根すべての関数として評価し、それらを加 

610
00:27:09,178 --> 00:27:12,032
算すると、最終的にまさに必要なフィルターが得られ

611
00:27:12,032 --> 00:27:13,340
ることがわかりました。

612
00:27:13,600 --> 00:27:15,450
そしてここでは、それらの項のうちの 1 

613
00:27:15,450 --> 00:27:17,579
つであるゼータの f だけ を評価しています。

614
00:27:17,579 --> 00:27:19,800
 これは本質的に 5 つの複素数の積になります。

615
00:27:20,540 --> 00:27:22,540
その製品を実際に評価するための非常に巧妙

616
00:27:22,540 --> 00:27:24,640
な方法として、最後のトリックを紹介します。

617
00:27:25,320 --> 00:27:26,532
私がこれらの数字を統一の根として

618
00:27:26,532 --> 00:27:27,820
説明したことを思い出してください。

619
00:27:28,200 --> 00:27:30,580
彼らは方程式 z を解き、5 番目が 1 に等しくなります。

620
00:27:31,060 --> 00:27:33,567
これについての別の考え方は、それらが 5 から 

621
00:27:33,567 --> 00:27:36,180
1 を引いた多項式 z の根であるということです。

622
00:27:36,920 --> 00:27:39,673
これが意味するのは、多項式 z を 5 から 

623
00:27:39,673 --> 00:27:42,905
1 を引いた数で因数分 解すると、次のようになります。

624
00:27:42,905 --> 00:27:45,300
 各根に対応する因数が 1 つあります。

625
00:27:45,300 --> 00:27:47,160
z から各根を引いたものを取ります。

626
00:27:47,840 --> 00:27:50,541
すべてを拡張すると発生するクレイジーなキャンセルの 

627
00:27:50,541 --> 00:27:53,140
すべてを考えると、この表現は一種の魔法のようです。

628
00:27:53,160 --> 00:27:56,452
しかし、それは真実であり、右側の式はここ 

629
00:27:56,452 --> 00:27:59,744
の上部で評価する必要があるものとほぼ同じ 

630
00:27:59,744 --> 00:28:02,880
に見えるため、現時点では非常に便利です。

631
00:28:03,300 --> 00:28:04,830
基本的にはプラス記号があればいいと

632
00:28:04,830 --> 00:28:06,360
ころにマイナス記号があるだけです。

633
00:28:07,680 --> 00:28:10,240
秘訣は、z が負の 1 に等しいという値を代入することです。

634
00:28:10,800 --> 00:28:12,167
それを行うと、本質的に私たちが望

635
00:28:12,167 --> 00:28:13,620
んでいることがマイナスになります。

636
00:28:13,620 --> 00:28:16,824
したがって、これにマイナス 1 を掛けると、マイナス 

637
00:28:16,824 --> 00:28:19,197
1 マイナス 1 ま たはマイナス 2 

638
00:28:19,197 --> 00:28:22,520
として始まった左辺が 2 になることに注目してください。

639
00:28:23,240 --> 00:28:26,320
そして、右辺が評価したいものになります。

640
00:28:27,000 --> 00:28:30,445
したがって、先ほどの幾何学的直観が示唆したように、答えは約 

641
00:28:30,445 --> 00:28:33,891
2 であるだけ でなく、まったく魔法のように、答えは正確に 

642
00:28:33,891 --> 00:28:35,500
2 であることがわかります。

643
00:28:36,380 --> 00:28:38,843
これは、実際には非常に素晴らしく、とても素敵です。

644
00:28:38,843 --> 00:28:41,505
 なぜなら、これは、評価 したいこのより大きな式を意味

645
00:28:41,505 --> 00:28:44,166
するからです。 ここで、さまざまな単一根のすべ てに 

646
00:28:44,166 --> 00:28:46,827
f を加算しており、最初の単一根に関するその値がわかっ

647
00:28:46,827 --> 00:28:47,320
ています。

648
00:28:47,580 --> 00:28:49,220
2の400乗になります。

649
00:28:49,820 --> 00:28:52,728
本質的に同じ推論は、次の 3 つの 1 の根の値も 2 

650
00:28:52,728 --> 00:28:54,909
の 400 乗であること を示しています。

651
00:28:54,909 --> 00:28:57,090
 これは、ゼータ 2 乗またはゼータ 3 

652
00:28:57,090 --> 00:29:00,102
乗を計算すると、異なる 順序でシャッフルされた同じ数値のリ

653
00:29:00,102 --> 00:29:02,180
ストが得られることを思い出してください。

654
00:29:02,880 --> 00:29:04,500
唯一異なるのは、それをゼロに対す

655
00:29:04,500 --> 00:29:06,120
るゼータとして評価する場合です。

656
00:29:06,840 --> 00:29:08,518
しかし、ゼータからゼロというのは数字の 

657
00:29:08,518 --> 00:29:10,533
1 を表す派手な言い 方であり、私たちはこれを 

658
00:29:10,533 --> 00:29:11,960
1 で評価する方法を知っています。

659
00:29:12,220 --> 00:29:13,080
それは簡単なことの一つです。

660
00:29:13,140 --> 00:29:13,900
これは以前に行いました。

661
00:29:14,200 --> 00:29:16,910
これらの括弧はすべて 2 になるので、2 

662
00:29:16,910 --> 00:29:19,880
を 2,000 回掛け合わせたように見えます。

663
00:29:20,520 --> 00:29:23,120
そしてついに、私たちの計数に関する質問に対

664
00:29:23,120 --> 00:29:25,720
する非常に明確な正直な答えが得られました。

665
00:29:26,160 --> 00:29:29,379
5 で割り切れるこれらの係数をすべて合計すると、合計が 

666
00:29:29,379 --> 00:29:32,368
5 で割り切れる合計サ ブセットがいくつあるかを数え

667
00:29:32,368 --> 00:29:34,552
る方法であることを思い出してください。

668
00:29:34,552 --> 00:29:37,311
 答えは、この 奇妙な複雑な式の 5 分の 1 

669
00:29:37,311 --> 00:29:39,956
であり、先ほど計算したところ 2 になります。

670
00:29:39,956 --> 00:29:43,290
 2,000 に 2 つを加えた 4 つの異なるコピーを 

671
00:29:43,290 --> 00:29:44,440
400 に加えます。

672
00:29:45,520 --> 00:29:47,440
ここで、この回答に意味があるかどうか

673
00:29:47,440 --> 00:29:49,360
を簡単に確認してみるとよいでしょう。

674
00:29:50,040 --> 00:29:52,239
たとえば、セット 1、2、3、4、5 

675
00:29:52,239 --> 00:29:55,132
を使用した小さい場合で 、先ほどと同じ推論をすべて

676
00:29:55,132 --> 00:29:57,678
実行すると、答えは 2 の 5 分 の 1 

677
00:29:57,678 --> 00:30:00,804
であることがわかります。 5 番目は、サブセットの総 

678
00:30:00,804 --> 00:30:04,044
数で、この場合の 1 に 4 × 2 を加えたものです。

679
00:30:04,044 --> 00:30:06,822
 これ は、32 プラス 8 の 5 分の 1 

680
00:30:06,822 --> 00:30:07,980
で、8 になります。

681
00:30:08,440 --> 00:30:10,430
そして、私たちがそれらすべてを明確に調べたときのこ

682
00:30:10,430 --> 00:30:12,420
とを覚えておいてください、実際、それが答えでした。

683
00:30:17,500 --> 00:30:19,200
ほら、これは難しいパズルです。 

684
00:30:19,200 --> 00:30:21,006
難しい問題を解くのに時間を費やす 

685
00:30:21,006 --> 00:30:23,237
価値があるなら、時間をかけてそれについて考

686
00:30:23,237 --> 00:30:24,300
える価値もあります。

687
00:30:24,420 --> 00:30:25,200
ここから何が得られますか？

688
00:30:29,640 --> 00:30:25,200
何がお得ですか？

689
00:30:29,640 --> 00:30:32,048
ここで、答えそのもの、つまり、私たちが推測したように

690
00:30:32,048 --> 00:30:34,363
、支配的な部 分が実際にすべてのサブセット全体の 

691
00:30:34,363 --> 00:30:36,771
5 分の 1 であること、お よびこの誤差項が、単一

692
00:30:36,771 --> 00:30:38,808
根の膨大な組み合わせにおける完全に破壊的で 

693
00:30:38,808 --> 00:30:41,216
はない干渉からどのようにして生じたのかを考えることが

694
00:30:41,216 --> 00:30:41,680
できます。

695
00:30:41,680 --> 00:30:45,513
しかし、繰り返しになりますが、この質問が興味深いの 

696
00:30:45,513 --> 00:30:48,462
は答えではなく、それを解決した方法です。

697
00:30:48,462 --> 00:30:52,149
 つまり、 理解したい離散シーケンスを取得し、それ

698
00:30:52,149 --> 00:30:55,835
を多項式の係 数として扱い、その多項式を複素数値で

699
00:30:55,835 --> 00:30:56,720
評価します。

700
00:30:56,720 --> 00:30:59,277
これらのステップは両方とも、最初は非常に予想外のことか 

701
00:30:59,277 --> 00:31:01,834
もしれませんが、どちらのステップも、数学の他の場所で見 

702
00:31:01,834 --> 00:31:04,300
られる非常に一般的で強力なテクニックに関連しています。

703
00:31:04,900 --> 00:31:08,688
たとえば、レッスンの冒頭で、私たちが使用するテクニ 

704
00:31:08,688 --> 00:31:12,477
ックは、素数の研究方法や、リーマン予想などにつなが 

705
00:31:12,477 --> 00:31:16,120
る一連のアイデアと精神的に似ていると約束しました。

706
00:31:16,500 --> 00:31:19,825
さて、これは非常に美しいトピックなので、ここで最後にある種 

707
00:31:19,825 --> 00:31:23,040
の急ぎバージョンを詰め込むのは少し犯罪的だと思うほどです。

708
00:31:23,340 --> 00:31:26,580
正しいことは、少し前に約束したゼータ関数に関するビデオ 

709
00:31:26,580 --> 00:31:29,820
を作成することです。 時間をかけて、正しく行うことです。

710
00:31:30,440 --> 00:31:33,029
しかし、興味があれば、説明せずに画面上にいくつかのことを

711
00:31:33,029 --> 00:31:35,248
吐き出すことを許可していただ ければ、この 2 

712
00:31:35,248 --> 00:31:37,560
つがどのように並列しているかを 2 文または 3 

713
00:31:37,560 --> 00:31:38,300
文で説明します。

714
00:31:39,020 --> 00:31:42,483
部分集合パズルと同じように、リーマンが素数を研究 

715
00:31:42,483 --> 00:31:45,808
した方法には、理解したい離散数列、つまり素数に 

716
00:31:45,808 --> 00:31:49,133
関する情報を運ぶ何かが含まれ、その係数がその数 

717
00:31:49,133 --> 00:31:52,320
列内の項である関数を考慮する必要がありました。

718
00:31:53,120 --> 00:31:56,000
この場合、それは完全な多項式ではなく、代わりに、ディリク

719
00:31:56,000 --> 00:31:58,365
レ級数として知られる関連す る構造になります。

720
00:31:58,365 --> 00:32:01,245
 または、尋ねる人によって異なりますが、本質的な考え方は

721
00:32:01,245 --> 00:32:01,760
同じです。

722
00:32:02,160 --> 00:32:05,281
これらの係数に関する情報を探り出す方法は、ご想像 

723
00:32:05,281 --> 00:32:08,403
のとおり、この関数が複素数値の入力に対してどのよ 

724
00:32:08,403 --> 00:32:11,400
うに動作するかを研究することによって得られます。

725
00:32:12,360 --> 00:32:15,072
彼の場合のテクニックはより洗練されています。

726
00:32:15,072 --> 00:32:18,647
 結局のところ、リ ーマンは複素解析の先駆者だったのです。

727
00:32:18,647 --> 00:32:21,605
 しかし、このように領域 を実数を超えて拡張する

728
00:32:21,605 --> 00:32:24,071
と、数学者は係数について推論する際によ 

729
00:32:24,071 --> 00:32:27,400
り多くの力を得ることができるという事実は変わりません。

730
00:32:28,700 --> 00:32:32,448
一部の視聴者にとって、なぜ複素数がこのように不当に役 

731
00:32:32,448 --> 00:32:35,920
立つのかという疑問がいつまでも残るかもしれません。

732
00:32:36,660 --> 00:32:39,729
正確に答えるのは難しい質問ですが、私たちのパズルについて考

733
00:32:39,729 --> 00:32:42,798
えてみると 、さまざまな入力を差し込むと係数に関する隠され

734
00:32:42,798 --> 00:32:45,867
た情報が明らかになった この状況に陥るとすぐに、入力が増え

735
00:32:45,867 --> 00:32:47,772
れば増えるほど、私たちが行ったすべ 

736
00:32:47,772 --> 00:32:49,465
てのことは、ある種のことです。 

737
00:32:49,465 --> 00:32:51,581
より良いものを扱うことができるので、複 

738
00:32:51,581 --> 00:32:54,650
素平面のような、より豊かな数の空間に自分自身を開くのもよい

739
00:32:54,650 --> 00:32:55,180
でしょう。

740
00:32:55,840 --> 00:32:57,699
しかし、ここでぜひ理解していただき

741
00:32:57,699 --> 00:32:59,560
たい、より具体的な直感があります。

742
00:33:00,060 --> 00:33:03,320
私たちのパズルで、私たちが求めていた関連する事実、つまり 

743
00:33:03,320 --> 00:33:06,580
5 番目ごとの係数の合計は、一種の頻度に関する質問でした。

744
00:33:06,840 --> 00:33:10,199
そして、他の構造とは対照的に、複素数が私たちにとって有 

745
00:33:10,199 --> 00:33:13,560
用であることが判明した本当の理由は、後続の製品がこの循 

746
00:33:13,560 --> 00:33:16,680
環動作を行うための値を見つけることができたからです。

747
00:33:17,000 --> 00:33:20,748
単位円上の値、特に 1 の根を使用して周 

748
00:33:20,748 --> 00:33:24,140
波数情報を探ることは、非常に有益です。

749
00:33:24,400 --> 00:33:26,350
このアイデアがどれほど役立つかは、いく

750
00:33:26,350 --> 00:33:28,300
ら強調してもしすぎることはありません。

751
00:33:28,580 --> 00:33:31,091
数千の例のうちの 1 つを挙げると、1990 

752
00:33:31,091 --> 00:33:33,494
年代にピーター ショールは、量子コンピュー 

753
00:33:33,494 --> 00:33:36,661
ターが古典的なコンピューターよりもはるかに速く大きな数を因

754
00:33:36,661 --> 00:33:38,300
数分解する方法を発見しました。

755
00:33:38,620 --> 00:33:41,139
そして、私たちが現在ショールのアルゴリズムと呼んで

756
00:33:41,139 --> 00:33:43,760
いるものがどのように機能するかを詳細に見てみると、 

757
00:33:43,760 --> 00:33:46,280
そのアイデアは本質的にこれであり、ある種の周波数情

758
00:33:46,280 --> 00:33:48,800
報を検出するために単一根を使用するということです。

759
00:33:49,320 --> 00:33:51,513
より一般的には、これはフーリエ変換とフー

760
00:33:51,513 --> 00:33:53,707
リエ級数の基礎となる中 心的な考え方であ

761
00:33:53,707 --> 00:33:56,120
り、そこから続くトピックの無限の広がりです。

762
00:33:56,980 --> 00:33:59,761
生成関数自体のトピックに関しては、ここではほんの表面をなぞ

763
00:33:59,761 --> 00:34:02,542
っただけです。 さら に詳しく知りたい場合は、Herber

764
00:34:02,542 --> 00:34:04,555
t Wilf 著のこのような面白い名前の 

765
00:34:04,555 --> 00:34:07,336
本、『Generating Functionology』を

766
00:34:07,336 --> 00:34:08,199
強くお勧めします。

767
00:34:08,540 --> 00:34:10,929
また、アイデアを少し試してみたい人のために、画 

768
00:34:10,929 --> 00:34:13,120
面上に楽しいパズルもいくつか残しておきます。

