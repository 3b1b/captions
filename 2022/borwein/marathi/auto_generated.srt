1
00:00:00,000 --> 00:00:02,840
कधी कधी असं वाटतं की हे विश्व तुमच्याशी गडबड करत आहे.

2
00:00:02,840 --> 00:00:07,720
माझ्याकडे स्क्रीनवर गणनेचा क्रम आहे, आणि काळजी करू नका, एका क्षणात आम्ही

3
00:00:07,720 --> 00:00:10,240
प्रत्येकजण खरोखर काय म्हणत आहे ते अनपॅक करू आणि कल्पना करू.

4
00:00:10,480 --> 00:00:16,960
मला तुमच्या लक्षात येण्याची इच्छा आहे की क्रम किती अंदाज लावता येईल, यादृच्छिक, दिसणारा नमुना आणि प्रत्येक गणना समान

5
00:00:17,280 --> 00:00:22,880
पाई कशी होते. आणि जर तुम्ही काही कारणास्तव संगणकावर त्यांचे मूल्यमापन करताना गोंधळ घालत

6
00:00:22,920 --> 00:00:25,640
असाल, तर तुम्हाला वाटेल की हा एक नमुना आहे जो कायमचा चालू राहील.

7
00:00:25,960 --> 00:00:32,200
पण तसे होत नाही. काही क्षणी ते थांबते, आणि pi च्या बरोबरीच्या ऐवजी,

8
00:00:32,680 --> 00:00:34,680
तुम्हाला एक मूल्य मिळते जे फक्त pi पेक्षा कमी असते.

9
00:00:38,880 --> 00:00:40,880
ठीक आहे, येथे काय चालले आहे ते शोधूया.

10
00:00:40,880 --> 00:00:44,680
आजच्या कथेतील मुख्य पात्र म्हणजे x चे फंक्शन साइन भागिले x.

11
00:00:45,120 --> 00:00:48,600
हे खरं तर गणित आणि अभियांत्रिकीमध्ये इतके सामान्यपणे समोर येते की त्याला स्वतःचे नाव, sinc मिळते आणि

12
00:00:48,880 --> 00:00:52,280
आपण त्याबद्दल ज्या प्रकारे विचार करू शकता ते म्हणजे सामान्य दोलन साइन वक्र सह प्रारंभ करून, आणि

13
00:00:52,600 --> 00:00:58,920
नंतर जसे जसे आपण दूर जाल तसतसे ते खाली पाडणे. शून्य 1 ओव्हर x ने गुणाकार करून.

14
00:00:59,040 --> 00:01:05,360
आणि तुमच्यातील हुशार लोक विचारू शकतात की x बरोबर 0 वर काय होते, कारण जेव्हा तुम्ही ते प्लग करता तेव्हा ते 0 ने 0 ने विभाजित केल्यासारखे दिसते.

15
00:01:05,360 --> 00:01:09,160
आणि मग तुमच्यातील अधिक चतुर, कदाचित कॅल्क्युलस वर्गातून ताजे, हे दर्शवू शकेल की 0

16
00:01:09,480 --> 00:01:14,640
च्या जवळ आणि जवळ असलेल्या मूल्यांसाठी, फंक्शन 1 च्या जवळ आणि जवळ येते.

17
00:01:14,880 --> 00:01:20,200
म्हणून जर आपण sinc फंक्शन 0 ते 1 समान रीतीने पुन्हा परिभाषित केले तर आपल्याला एक चांगला सतत वक्र मिळेल.

18
00:01:20,520 --> 00:01:27,080
हे सर्व थोडेसे आहे कारण आपण ज्या गोष्टीची खरोखर काळजी घेतो ती म्हणजे ऋण

19
00:01:27,320 --> 00:01:33,800
अनंतापासून अनंतापर्यंत या वक्रचा अविभाज्य भाग आहे, ज्याचा अर्थ वक्र आणि x-अक्ष यांच्यातील क्षेत्रफळ

20
00:01:34,000 --> 00:01:37,760
किंवा अधिक अचूकपणे स्वाक्षरी केलेला आहे. क्षेत्रफळ, म्हणजे तुम्ही x-अक्षात आलेखाच्या सकारात्मक भागांनी बांधलेले

21
00:01:38,000 --> 00:01:42,000
सर्व क्षेत्र जोडता आणि आलेखाच्या ऋण भागांनी बांधलेले सर्व भाग व x-अक्ष वजा करता.

22
00:01:42,320 --> 00:01:46,760
आम्ही सुरुवातीला पाहिल्याप्रमाणे, असे घडते की हे अचूक pi असे मूल्यांकन करते, जे छान आहे आणि

23
00:01:47,000 --> 00:01:53,080
थोडे विचित्र देखील आहे आणि कॅल्क्युलसच्या नेहमीच्या साधनांसह तुम्ही याकडे कसे पोहोचाल हे पूर्णपणे स्पष्ट नाही.

24
00:01:53,600 --> 00:01:56,320
व्हिडिओच्या शेवटी, मी तुम्हाला हे कसे कराल याची युक्ती सामायिक करेन.

25
00:01:56,720 --> 00:02:02,960
मी उघडलेल्या क्रमानुसार प्रगती करत असताना, पुढील पायरी म्हणजे sinc फंक्शनची एक प्रत घेणे, जिथे तुम्ही x 3

26
00:02:03,400 --> 00:02:08,200
ने भागून प्लग इन कराल, जे मूलतः समान आलेखासारखे दिसेल, परंतु 3 च्या घटकाने क्षैतिजरित्या पसरलेले असेल.

27
00:02:08,520 --> 00:02:10,920
जेव्हा आपण या दोन फंक्शन्सचा एकत्रितपणे गुणाकार करतो, तेव्हा आपल्याला एक अधिक

28
00:02:11,120 --> 00:02:16,000
क्लिष्ट लहर मिळते ज्याचे वस्तुमान मध्यभागी अधिक केंद्रित असल्याचे दिसते आणि कोणत्याही

29
00:02:16,040 --> 00:02:19,760
नेहमीच्या फंक्शन्ससह आपण हे क्षेत्र पूर्णपणे बदलेल अशी अपेक्षा करू शकता.

30
00:02:19,960 --> 00:02:23,360
तुम्ही फक्त यादृच्छिकपणे यासारखे अविभाज्य बदल करू शकत नाही आणि काहीही बदलण्याची अपेक्षा करू शकत नाही.

31
00:02:23,760 --> 00:02:28,360
त्यामुळे आधीच हे थोडेसे विचित्र आहे की हा परिणाम देखील pi च्या बरोबरीचा आहे, की काहीही बदललेले नाही.

32
00:02:28,760 --> 00:02:31,040
हे आणखी एक रहस्य आहे जे आपण आपल्या सूचीमध्ये जोडले पाहिजे.

33
00:02:31,040 --> 00:02:36,480
आणि अनुक्रमातील पुढची पायरी म्हणजे sinc फंक्शनची 5 च्या फॅक्टरने आणखी वाढलेली आवृत्ती घेणे, आपल्याकडे आधीपासून असलेल्या गोष्टीने

34
00:02:36,960 --> 00:02:44,240
गुणाकार करणे आणि पुन्हा संपूर्ण वक्र खाली साइन केलेले क्षेत्र पहा, जे पुन्हा pi च्या बरोबरीचे आहे. .

35
00:02:45,000 --> 00:02:50,760
आणि हे असेच चालू राहते. प्रत्येक पुनरावृत्तीसह, आम्ही एका नवीन विषम संख्येने वाढवतो आणि आमच्याकडे जे आहे त्यात गुणाकार करतो.

36
00:02:51,240 --> 00:02:54,600
एक गोष्ट तुमच्या लक्षात येईल की इनपुट x बरोबर 0 वगळता, या

37
00:02:55,000 --> 00:02:59,600
फंक्शनचा प्रत्येक भाग 1 पेक्षा लहान असलेल्या गोष्टीने हळूहळू गुणाकार होत आहे.

38
00:03:00,040 --> 00:03:04,440
त्यामुळे क्रम जसजसा पुढे जाईल, तसतसे गोष्टी अधिकाधिक कमी होतील, आणि जर

39
00:03:04,720 --> 00:03:07,320
काही असेल तर क्षेत्र लहान होत जाईल अशी तुमची अपेक्षा असेल.

40
00:03:08,400 --> 00:03:13,560
अखेरीस तेच घडते, परंतु विचित्र गोष्ट अशी आहे की ते इतके दिवस स्थिर राहते, आणि अर्थातच

41
00:03:13,560 --> 00:03:20,800
अधिक समर्पकपणे, जेव्हा ते मूल्य 15 वर खंडित होते, तेव्हा ते अगदी लहान प्रमाणात होते.

42
00:03:21,080 --> 00:03:23,840
आणि आपण विचार करण्याआधी हा काही संख्यात्मक त्रुटीचा परिणाम आहे, कदाचित आपण फ्लोटिंग-पॉइंट अंकगणितासह काहीतरी

43
00:03:23,840 --> 00:03:27,960
करत आहोत, जर आपण हे अधिक अचूकपणे समजून घेतले तर, येथे त्या शेवटच्या पूर्णांकाचे अचूक

44
00:03:28,200 --> 00:03:35,760
मूल्य आहे, जे एक विशिष्ट अपूर्णांक आहे. pi चा जेथे अंश आणि भाजक मूर्ख आहेत.

45
00:03:35,760 --> 00:03:38,600
ते दोघे सुमारे 400 अब्ज अब्ज अब्ज आहेत.

46
00:03:39,280 --> 00:03:44,880
तर या पॅटर्नचे वर्णन पिता-पुत्र जोडीने, जोनाथन आणि डेव्हिड बोर्वेन यांनी एका पेपरमध्ये केले आहे, जे खूप मजेदार

47
00:03:44,880 --> 00:03:50,120
आहे आणि त्यांनी नमूद केले आहे की जेव्हा एक सहकारी संशोधक संगणक बीजगणित प्रणाली वापरून या अविभाज्य

48
00:03:50,120 --> 00:03:52,520
घटकांची गणना करत होता तेव्हा त्याने असे गृहीत धरले की हे असणे आवश्यक आहे. काही प्रकारचा बग.

49
00:03:52,520 --> 00:03:57,080
पण तो बग नाही, ही एक खरी घटना आहे आणि ती प्रत्यक्षात त्यापेक्षा विचित्र होते.

50
00:03:57,080 --> 00:04:01,560
जर आपण हे सर्व अविभाज्य घेतले आणि आणखी एक घटक समाविष्ट केला, x चे

51
00:04:01,560 --> 00:04:04,400
2 कोसाइन, ज्याने तुम्हाला पुन्हा वाटेल की त्यांची मूल्ये पूर्णपणे बदलतात, तुम्ही यादृच्छिकपणे

52
00:04:04,400 --> 00:04:07,520
नवीन गोष्टींचा अशाप्रकारे अविभाज्य गुणाकार करू शकत नाही, ते बर्याच काळापर्यंत pi बरोबरच राहते.

53
00:04:07,520 --> 00:04:13,920
यापुढे, आणि जोपर्यंत तुम्ही 113 क्रमांकावर येत नाही तोपर्यंत तो खंडित होत नाही.

54
00:04:13,920 --> 00:04:18,680
आणि जेव्हा ते तुटते, तेव्हा तुम्ही कल्पना करू शकता अशा अत्यंत सूक्ष्म, अगदी सूक्ष्म प्रमाणात.

55
00:04:18,680 --> 00:04:22,880
त्यामुळे साहजिक प्रश्न असा आहे की, इथे पृथ्वीवर काय चालले आहे?

56
00:04:22,880 --> 00:04:26,560
आणि सुदैवाने, या सर्वांसाठी खरोखर एक समाधानकारक स्पष्टीकरण आहे.

57
00:04:26,560 --> 00:04:31,440
मला वाटते की मी याबद्दल जाईन तो म्हणजे तुम्हाला एक घटना दाखवणे जी प्रथम पूर्णपणे असंबंधित दिसते, परंतु

58
00:04:31,440 --> 00:04:37,280
ती एक समान नमुना दर्शवते, जिथे तुमचे मूल्य आहे जे तुम्ही 113 क्रमांकापर्यंत पोहोचेपर्यंत खरोखर स्थिर राहते.

59
00:04:37,280 --> 00:04:41,120
तुम्ही 15 व्या क्रमांकावर पोहोचता आणि नंतर ते अगदी थोड्या प्रमाणात कमी होते.

60
00:04:41,120 --> 00:04:44,960
आणि त्यानंतर, मी दाखवीन की ही वरवर असंबंधित दिसणारी घटना

61
00:04:44,960 --> 00:04:48,960
गुप्तपणे आपल्या सर्व अविभाज्य अभिव्यक्तींसारखीच आहे परंतु वेशात आहे.

62
00:04:48,960 --> 00:04:51,840
त्यामुळे, जे पूर्णपणे वेगळे दिसते त्याकडे आपले लक्ष वळवताना, एका फंक्शनचा विचार करा

63
00:04:51,840 --> 00:04:55,120
ज्याला मी x चा रेक्ट कॉल करणार आहे, जर इनपुट नकारात्मक दीड ते

64
00:04:55,120 --> 00:05:00,560
दीड दरम्यान असेल तर 1 समान परिभाषित केले जाईल आणि अन्यथा ते 0

65
00:05:00,560 --> 00:05:05,040
च्या बरोबर असेल. . तर फंक्शन ही कंटाळवाणी पायरी आहे, मुळात.

66
00:05:05,040 --> 00:05:09,600
आम्ही परिभाषित केलेल्या फंक्शन्सच्या क्रमातील हे पहिले असेल, म्हणून मी याला x चा f1

67
00:05:09,600 --> 00:05:15,600
म्हणेन आणि आमच्या क्रमातील प्रत्येक नवीन फंक्शन मागील फंक्शनची एक प्रकारची मूव्हिंग सरासरी असेल.

68
00:05:15,600 --> 00:05:21,520
उदाहरणार्थ, ही दुसरी पुनरावृत्ती ज्या प्रकारे परिभाषित केली जाईल ती अशी आहे की ही

69
00:05:21,520 --> 00:05:26,160
स्लाइडिंग विंडो घ्या ज्याची रुंदी एक तृतीयांश आहे आणि विशिष्ट इनपुट x साठी,

70
00:05:26,160 --> 00:05:28,960
जेव्हा विंडो त्या इनपुट x वर मध्यभागी असेल, तेव्हा माझ्या नवीन फंक्शनमधील मूल्य, खाली

71
00:05:28,960 --> 00:05:34,080
काढलेले आहे. , हे त्या विंडोमधील वरील पहिल्या फंक्शनच्या सरासरी मूल्याच्या बरोबरीचे आहे.

72
00:05:34,080 --> 00:05:38,000
उदाहरणार्थ, जेव्हा विंडो पुरेशी डावीकडे असते, तेव्हा त्यातील प्रत्येक

73
00:05:38,000 --> 00:05:40,160
मूल्य 0 असते, त्यामुळे तळाशी आलेख 0 दाखवत आहे.

74
00:05:40,160 --> 00:05:43,120
ती खिडकी पठारावर थोडीशी जाऊ लागताच, सरासरी मूल्य 0 पेक्षा

75
00:05:43,120 --> 00:05:47,120
थोडे जास्त आहे आणि तुम्हाला ते खालील आलेखामध्ये दिसेल.

76
00:05:47,120 --> 00:05:52,320
आणि लक्षात घ्या की जेव्हा अगदी अर्धी खिडकी त्या पठारावर 1 वर असते आणि अर्धी

77
00:05:52,320 --> 00:05:56,560
खिडकी 0 वर असते तेव्हा खालच्या आलेखात संबंधित मूल्य अर्धा असते आणि तुम्हाला बिंदू मिळेल.

78
00:05:56,560 --> 00:06:01,840
मी तुम्हाला ज्या महत्त्वाच्या गोष्टीवर लक्ष केंद्रित करू इच्छितो ती म्हणजे जेव्हा ती

79
00:06:01,840 --> 00:06:05,360
विंडो संपूर्णपणे वरील पठारावर कशी असते, जिथे सर्व मूल्ये 1 असतात, तेव्हा सरासरी

80
00:06:05,360 --> 00:06:08,160
मूल्य देखील 1 असते, त्यामुळे आम्हाला हे पठार आमच्या तळाशी असलेल्या कार्यावर मिळते.

81
00:06:08,160 --> 00:06:10,720
चला x च्या या तळाशी असलेल्या फंक्शनला f2 म्हणू या, आणि

82
00:06:10,720 --> 00:06:15,360
त्या दुसऱ्या फंक्शनच्या पठाराची लांबी तुम्ही विचारात घ्यावी असे मला वाटते.

83
00:06:15,360 --> 00:06:16,320
ते किती रुंद असावे?

84
00:06:16,960 --> 00:06:21,520
जर तुम्ही क्षणभर विचार केला तर, वरच्या पठाराचा डावा

85
00:06:21,520 --> 00:06:26,000
किनारा आणि खालच्या पठाराच्या डाव्या कडामधील अंतर खिडकीच्या

86
00:06:26,000 --> 00:06:27,600
रुंदीच्या अगदी अर्धा असेल, म्हणजे अर्धा एक तृतीयांश.

87
00:06:27,600 --> 00:06:31,440
आणि त्याचप्रमाणे उजव्या बाजूला, पठाराच्या कडांमधील अंतर खिडकीच्या रुंदीच्या निम्मे आहे, त्यामुळे एकंदरीत

88
00:06:31,440 --> 00:06:36,720
ती खिडकीच्या रुंदीच्या 1 वजा आहे, जी 1 उणे एक तृतीयांश आहे.

89
00:06:37,360 --> 00:06:41,520
आपण ज्या मूल्याची गणना करणार आहोत, जी गोष्ट खंडित होण्याआधी काही काळ

90
00:06:42,080 --> 00:06:44,640
स्थिर दिसेल, ती या फंक्शनचे मूल्य इनपुट 0 आहे, जे या दोन्ही

91
00:06:44,640 --> 00:06:49,120
पुनरावृत्तीमध्ये 1 च्या समान आहे कारण ते त्या पठाराच्या आत आहे.

92
00:06:49,120 --> 00:06:52,880
पुढील पुनरावृत्तीसाठी, आपण त्या शेवटच्या फंक्शनची मूव्हिंग एव्हरेज घेणार

93
00:06:52,880 --> 00:06:55,840
आहोत, परंतु यावेळी विंडो ज्याची रुंदी एक पंचमांश आहे.

94
00:06:55,840 --> 00:06:58,880
तुम्ही या विंडोभोवती का सरकता, तुम्हाला मागील फंक्शनची गुळगुळीत

95
00:06:58,880 --> 00:07:01,920
आवृत्ती मिळते याचा विचार करणे एक प्रकारची मजा आहे.

96
00:07:01,920 --> 00:07:06,400
आणि पुन्हा, मी ज्या महत्त्वाच्या गोष्टीवर लक्ष केंद्रित करू इच्छितो ती म्हणजे जेव्हा ती विंडो

97
00:07:06,400 --> 00:07:11,360
संपूर्णपणे मागील फंक्शनच्या पठाराच्या आत असते, तेव्हा व्याख्यानुसार तळाचे फंक्शन 1 च्या बरोबरीचे असेल.

98
00:07:11,920 --> 00:07:16,160
या वेळी, तळाशी असलेल्या त्या पठाराची लांबी मागील एकाची लांबी,

99
00:07:16,160 --> 00:07:19,520
1 उणे एक तृतीयांश, खिडकीची रुंदी वजा एक पाचवा असेल.

100
00:07:19,520 --> 00:07:22,880
तर्क पूर्वीप्रमाणेच आहे, खिडकीच्या मध्यभागी त्या वरच्या पठारावर जिथे

101
00:07:22,880 --> 00:07:28,000
खिडकीचा संपूर्ण भाग त्या पठाराच्या आत आहे तिथून

102
00:07:28,000 --> 00:07:31,120
जाण्यासाठी, खिडकीच्या रुंदीच्या अर्ध्या आणि उजव्या बाजूला. .

103
00:07:31,120 --> 00:07:35,600
आणि पुन्हा एकदा, इनपुट 0 असताना रेकॉर्ड करायचे मूल्य हे

104
00:07:35,600 --> 00:07:37,200
या फंक्शनचे आउटपुट आहे, जे पुन्हा बरोबर 1 आहे.

105
00:07:38,400 --> 00:07:41,840
पुढील पुनरावृत्ती एक सातव्या खिडकीच्या रुंदीसह एक हलणारी सरासरी आहे.

106
00:07:41,840 --> 00:07:44,320
पठार 1 ओव्हर 7 ने लहान होते.

107
00:07:44,320 --> 00:07:48,400
1 ओव्हर 9 सह आणखी एक पुनरावृत्ती केल्यास, पठार त्या प्रमाणात लहान होते.

108
00:07:48,400 --> 00:07:50,720
आणि जसजसे आपण पुढे जात राहतो तसतसे पठार अधिक पातळ होत जाते.

109
00:07:51,680 --> 00:07:56,240
आणि हे देखील लक्षात घ्या की पठाराच्या अगदी बाहेर, फंक्शन खरोखर 1

110
00:07:56,240 --> 00:08:00,480
च्या अगदी जवळ आहे, कारण हे नेहमी 1 वर पठार आणि शेजारी

111
00:08:00,480 --> 00:08:02,160
यांच्यातील सरासरीचा परिणाम आहे, जे स्वतः खरोखर 1 च्या जवळ आहेत.

112
00:08:02,960 --> 00:08:07,520
ज्या बिंदूवर हे सर्व खंडित होते तो म्हणजे आपण पुनरावृत्तीवर पोहोचतो

113
00:08:07,520 --> 00:08:09,840
जिथे आपण संपूर्ण गोष्टीवर एक पंधराव्या रुंदीची विंडो सरकवत आहोत.

114
00:08:10,560 --> 00:08:14,400
त्या वेळी, मागील पठार प्रत्यक्षात खिडकीपेक्षा पातळ आहे.

115
00:08:14,400 --> 00:08:20,240
त्यामुळे x च्या बरोबरीच्या इनपुटवरही, ही मूव्हिंग अॅव्हरेज 1 पेक्षा किंचित लहान असणे आवश्यक आहे.

116
00:08:20,960 --> 00:08:24,000
आणि येथे 15 या संख्येबद्दल एकच गोष्ट विशेष आहे की

117
00:08:24,000 --> 00:08:26,720
आपण या विषम अपूर्णांकांची परस्पर जोडणी करत राहिलो, एक तृतीयांश

118
00:08:26,720 --> 00:08:29,520
अधिक एक पाचवा अधिक सातवा, पुढे आणि पुढे, एकदा आपण

119
00:08:29,520 --> 00:08:33,520
पंधराव्या क्रमांकावर पोहोचलो की ती बेरीज होईल. 1 पेक्षा मोठे.

120
00:08:33,520 --> 00:08:38,160
आणि आपल्या आकुंचन पावणाऱ्या पठारांच्या संदर्भात, रुंदी 1 च्या पठारापासून सुरुवात करून,

121
00:08:38,160 --> 00:08:41,120
ते आता इतके कमी झाले आहे की ते पूर्णपणे नाहीसे होईल.

122
00:08:41,680 --> 00:08:47,040
मुद्दा असा आहे की, या फंक्शन्सच्या क्रमाने आम्ही स्पष्टपणे यादृच्छिक प्रक्रियेद्वारे परिभाषित केले आहे, जर

123
00:08:47,040 --> 00:08:50,800
मी तुम्हाला इनपुट 0 वर या सर्व फंक्शन्सच्या मूल्यांची गणना करण्यास सांगितले, तर तुम्हाला

124
00:08:50,800 --> 00:08:55,280
एक नमुना मिळेल जो सुरुवातीला स्थिर दिसतो, तो आहे. 1 1 1 1 1

125
00:08:55,280 --> 00:09:00,000
1, परंतु आपण आठव्या पुनरावृत्तीपर्यंत पोहोचतो तेव्हा ते इतके कमी होते, अगदी कमी होते.

126
00:09:00,800 --> 00:09:05,440
हे समान आहे, आणि मी आधी पाहिलेल्या अविभाज्य घटकांबद्दल फक्त समानतेपेक्षा अधिक दावा करतो, जिथे आपल्याकडे

127
00:09:05,440 --> 00:09:10,160
pi pi pi pi pi pi वर स्थिर मूल्य आहे, जोपर्यंत ते अगदी कमी पडत नाही.

128
00:09:10,160 --> 00:09:15,440
आणि जसे घडते तसे, आपल्या हलत्या सरासरी प्रक्रियेतील हा स्थिरांक जो 1 पेक्षा किंचित

129
00:09:15,440 --> 00:09:20,240
लहान असतो तोच घटक असतो जो आपल्या पूर्णांकांच्या मालिकेत pi च्या समोर बसतो.

130
00:09:20,240 --> 00:09:24,720
त्यामुळे दोन्ही परिस्थिती केवळ गुणात्मकदृष्ट्या सारख्याच नाहीत, तर त्या परिमाणात्मकदृष्ट्या सारख्याच आहेत.

131
00:09:25,360 --> 00:09:29,840
आणि जेव्हा आपण इंटिग्रलच्या आत x टर्मचा 2 कोसाइन जोडतो,

132
00:09:29,840 --> 00:09:33,040
ज्यामुळे पॅटर्न तुटण्याआधी बराच काळ टिकला होता, त्याच सेटअपशी काय

133
00:09:33,040 --> 00:09:36,240
समानता असेल, परंतु जेथे आपण ज्या फंक्शनने सुरुवात करतो

134
00:09:36,240 --> 00:09:39,120
त्यात आणखी लांब पठार आहे, x बरोबर ऋण 1 ते

135
00:09:39,120 --> 00:09:43,200
1 पर्यंत पसरले आहे, म्हणजे त्याची लांबी 2 आहे.

136
00:09:43,200 --> 00:09:46,960
त्यामुळे तुम्ही ही वारंवार हलणारी सरासरी प्रक्रिया करत असताना, या छोट्या-छोट्या

137
00:09:46,960 --> 00:09:50,960
खिडक्यांसह त्यामध्ये खातात, त्यांना संपूर्ण पठारात खाण्यासाठी खूप जास्त वेळ लागतो.

138
00:09:51,520 --> 00:09:55,920
अधिक विशिष्टपणे, संबंधित गणन हे विचारणे आहे की ही बेरीज 2 पेक्षा

139
00:09:55,920 --> 00:09:59,520
मोठी होईपर्यंत तुम्हाला या विषम संख्यांची परस्पर जोडणी किती काळ करावी लागेल?

140
00:09:59,520 --> 00:10:03,360
आणि असे दिसून आले की आपण 113 क्रमांकावर येईपर्यंत आपल्याला जावे लागेल, जे

141
00:10:03,360 --> 00:10:08,400
आपण 113 वर येईपर्यंत तेथे अविभाज्य पॅटर्न चालू राहतील या वस्तुस्थितीशी संबंधित असेल.

142
00:10:09,280 --> 00:10:12,400
आणि तसे, मी यावर जोर दिला पाहिजे की विषम संख्या, 1

143
00:10:12,400 --> 00:10:15,520
तृतीय, 1 पाचवा, 1 सातवा या परस्परसंबंधांमध्ये विशेष काही नाही.

144
00:10:15,520 --> 00:10:19,440
हे फक्त बोर्वेन्सने त्यांच्या पेपरमध्ये ठळक केलेल्या मूल्यांचा क्रम

145
00:10:19,440 --> 00:10:22,240
आहे ज्यामुळे हा क्रम मूर्ख मंडळांमध्ये सौम्यपणे प्रसिद्ध झाला.

146
00:10:22,240 --> 00:10:26,960
अधिक सामान्यपणे, आपण त्या sinc फंक्शन्समध्ये धन संख्यांचा कोणताही क्रम घालू शकतो आणि जोपर्यंत

147
00:10:26,960 --> 00:10:31,520
त्या संख्यांची बेरीज 1 पेक्षा कमी आहे, तोपर्यंत आपली अभिव्यक्ती pi बरोबर असेल.

148
00:10:31,520 --> 00:10:35,440
पण जसजसे ते 1 पेक्षा मोठे होतात, तेव्हा आपली अभिव्यक्ती पाईच्या खाली थोडीशी घसरते.

149
00:10:35,440 --> 00:10:39,680
आणि जर तुमचा माझ्यावर विश्वास असेल की या मूव्हिंग अॅव्हरेजशी एक साधर्म्य आहे, तर तुम्ही आशेने का ते पाहू शकता.

150
00:10:40,240 --> 00:10:44,960
पण अर्थातच, ज्वलंत प्रश्न असा आहे की पृथ्वीवर

151
00:10:44,960 --> 00:10:46,240
या दोन परिस्थितींचा एकमेकांशी काही संबंध का असावा?

152
00:10:46,240 --> 00:10:50,560
येथून, युक्तिवाद यंत्रांच्या दोन हलक्या जड बिट्स

153
00:10:50,560 --> 00:10:53,760
आणतो, म्हणजे फूरियर ट्रान्सफॉर्म्स आणि कॉन्व्होल्यूशन.

154
00:10:53,760 --> 00:10:57,760
आणि या विषयी मला ज्या प्रकारे जायचे आहे ते म्हणजे या

155
00:10:57,760 --> 00:11:02,000
व्हिडिओचा उर्वरित भाग तुम्हाला या दोन विषयांपैकी एकाशी परिचित आहात असे

156
00:11:02,000 --> 00:11:06,160
गृहीत न धरता युक्तिवाद कसा चालेल याची उच्च-स्तरीय जाणीव देण्यासाठी आणि

157
00:11:06,160 --> 00:11:08,160
नंतर स्पष्टीकरण देण्यासाठी. कॉन्व्होल्यूशनला समर्पित असलेल्या व्हिडिओमध्ये तपशील का खरे आहेत.

158
00:11:08,240 --> 00:11:12,320
विशेषतः, काहीतरी convolution प्रमेय म्हणतात, कारण ते आश्चर्यकारकपणे सुंदर आहे

159
00:11:12,320 --> 00:11:16,240
आणि ते या विशिष्ट, अतिशय गूढ प्रश्नाच्या पलीकडे उपयुक्त आहे.

160
00:11:19,600 --> 00:11:24,160
प्रारंभ करण्यासाठी, x ने भागिले x च्या साइन या फंक्शनवर लक्ष केंद्रित करण्याऐवजी, जेथे आम्ही दाखवू

161
00:11:24,160 --> 00:11:28,800
इच्छितो की त्याच्या वक्र खाली साइन केलेले क्षेत्र pi च्या समान का आहे, आम्ही एक

162
00:11:28,800 --> 00:11:33,760
सोपा पर्याय बनवू जेथे आम्ही इनपुट x ला pi गुणा x ने बदलू. , ज्याचा pi

163
00:11:33,760 --> 00:11:38,560
च्या घटकाने आलेख आडवा दाबण्याचा प्रभाव असतो आणि त्यामुळे क्षेत्र pi च्या घटकाने कमी होते,

164
00:11:38,560 --> 00:11:43,360
म्हणजे उजवीकडील हा अविभाज्य भाग बरोबर का आहे हे दाखवणे हे आमचे नवीन ध्येय आहे.

165
00:11:43,360 --> 00:11:47,760
तसे, काही अभियांत्रिकी संदर्भांमध्ये, लोक या फंक्शनला आतील pi सह

166
00:11:47,760 --> 00:11:51,840
संदर्भ देण्यासाठी sinc हे नाव वापरतात, कारण सामान्यीकृत फंक्शन असणे

167
00:11:51,840 --> 00:11:54,640
खूप छान असते, म्हणजे त्याखालील क्षेत्रफळ एक समान असते.

168
00:11:54,640 --> 00:11:57,680
मुद्दा असा आहे की, हे इंटिग्रल उजवीकडे दाखवणे म्हणजे डावीकडे

169
00:11:57,680 --> 00:12:00,400
इंटिग्रल दाखविण्यासारखीच गोष्ट आहे, तो फक्त व्हेरिएबल्सचा बदल आहे.

170
00:12:00,480 --> 00:12:04,080
आणि त्याचप्रमाणे आमच्या क्रमातील इतर सर्वांसाठी, त्या प्रत्येकातून जा, x ला

171
00:12:04,080 --> 00:12:09,680
pi गुणिले x ने बदला आणि येथून असा दावा केला

172
00:12:09,680 --> 00:12:14,240
जातो की हे सर्व अविभाज्य केवळ हलत्या सरासरी उदाहरणांशी एकरूप नाहीत

173
00:12:14,240 --> 00:12:16,160
तर दोन्ही यापैकी एकच गोष्ट मोजण्याचे दोन वेगळे मार्ग आहेत.

174
00:12:16,160 --> 00:12:20,560
आणि हे sinc फंक्शन, किंवा इंजिनियर sinc फंक्शन,

175
00:12:20,560 --> 00:12:24,960
ज्याला फूरियर ट्रान्सफॉर्म म्हणून ओळखले जाते वापरून रेक्ट

176
00:12:24,960 --> 00:12:26,320
फंक्शनशी संबंधित आहे, या वस्तुस्थितीशी संबंध येतो.

177
00:12:26,320 --> 00:12:29,440
आता, जर तुम्ही फूरियर ट्रान्सफॉर्मबद्दल कधीच ऐकले नसेल,

178
00:12:29,440 --> 00:12:32,560
तर तुम्ही त्याबद्दल काही गोष्टी करू शकता.

179
00:12:32,560 --> 00:12:36,880
याचे वर्णन ज्या पद्धतीने केले जाते ते असे आहे की जर तुम्हाला

180
00:12:36,880 --> 00:12:41,040
एखादे फंक्शन शुद्ध फ्रिक्वेन्सीच्या गुच्छाची बेरीज म्हणून खंडित करायचे असेल किंवा

181
00:12:41,040 --> 00:12:44,880
अनंत फंक्शनच्या बाबतीत, शुद्ध फ्रिक्वेन्सीच्या गुच्छाचा सतत अविभाज्य भाग असेल, तर फूरियर

182
00:12:44,880 --> 00:12:46,960
ट्रान्सफॉर्म तुम्हाला सांगेल. त्या सर्व घटक भागांसाठी सर्व ताकद आणि टप्पे.

183
00:12:46,960 --> 00:12:51,280
परंतु तुम्हाला येथे फक्त एवढेच माहित असणे आवश्यक आहे की हे असे

184
00:12:51,280 --> 00:12:56,080
काहीतरी आहे जे एका फंक्शनमध्ये घेते आणि एक नवीन फंक्शन बाहेर

185
00:12:56,080 --> 00:12:59,760
टाकते आणि तुम्ही बर्‍याचदा असे विचार करता की तुमच्या मूळ फंक्शनची माहिती

186
00:12:59,760 --> 00:13:00,480
वेगळ्या भाषेत रिफ्रेस करणे, जसे की तुम्ही आहात. नवीन दृष्टीकोनातून पहा.

187
00:13:01,040 --> 00:13:05,200
उदाहरणार्थ, मी म्हटल्याप्रमाणे, या नवीन भाषेत लिहिलेले हे sinc फंक्शन जिथे

188
00:13:05,200 --> 00:13:08,880
तुम्ही फूरियर ट्रान्सफॉर्म घेता ते आमच्या टॉप हॅट रेक्ट फंक्शनसारखे दिसते.

189
00:13:08,880 --> 00:13:12,480
आणि त्याउलट, वाय-अक्षाबद्दल सममितीय असलेल्या फंक्शन्ससाठी फूरियर ट्रान्सफॉर्म्सबद्दल ही

190
00:13:12,480 --> 00:13:15,760
एक छान गोष्ट आहे, ती स्वतःची व्युत्क्रम आहे.

191
00:13:15,760 --> 00:13:20,080
आणि खरं तर, थोडी अधिक सामान्य वस्तुस्थिती जी आम्हाला दाखवायची आहे ती म्हणजे जेव्हा तुम्ही

192
00:13:20,080 --> 00:13:23,840
आमच्या sinc फंक्शनच्या स्ट्रेच आउट व्हर्जनचे रूपांतर कसे करता, जिथे तुम्ही k च्या फॅक्टरने क्षैतिजरित्या

193
00:13:23,840 --> 00:13:28,400
स्ट्रेच करता, तेव्हा तुम्हाला जे मिळते ते स्ट्रेच्ड आणि स्क्विश्ड व्हर्जन असते. हे रेक्ट फंक्शन.

194
00:13:28,400 --> 00:13:32,400
पण अर्थातच, हे सर्व केवळ निरर्थक शब्द आणि संज्ञा आहेत

195
00:13:32,400 --> 00:13:34,880
जोपर्यंत तुम्ही हे भाषांतर करून प्रत्यक्षात काही करू शकत नाही.

196
00:13:34,880 --> 00:13:39,760
आणि फूरियर ट्रान्सफॉर्म्स ही गणितासाठी इतकी उपयुक्त गोष्ट का आहे यामागची खरी

197
00:13:39,760 --> 00:13:43,840
कल्पना ही आहे की जेव्हा तुम्ही एखाद्या विशिष्ट फंक्शनबद्दल विधाने आणि प्रश्न

198
00:13:43,840 --> 00:13:48,240
घेता आणि नंतर त्या फंक्शनच्या बदललेल्या आवृत्तीच्या संदर्भात ते कशाशी जुळतात ते

199
00:13:48,240 --> 00:13:51,840
पाहता, ती विधाने आणि या नवीन भाषेत प्रश्न बरेचदा खूप वेगळे दिसतात.

200
00:13:51,840 --> 00:13:54,880
आणि कधीकधी ते प्रश्नांची उत्तरे देणे खूप सोपे करते.

201
00:13:55,440 --> 00:13:59,840
उदाहरणार्थ, एक अतिशय छान लहान वस्तुस्थिती, आमच्या दर्शविण्याजोग्या गोष्टींच्या यादीतील आणखी एक

202
00:13:59,840 --> 00:14:04,000
गोष्ट म्हणजे, जर तुम्हाला ऋण अनंतापासून अनंतापर्यंत काही फंक्शनच्या अविभाज्यतेची गणना

203
00:14:04,000 --> 00:14:09,760
करायची असेल, तर हे चिन्हांकित क्षेत्र त्याच्या संपूर्ण वक्राखाली आहे, ते समान

204
00:14:09,760 --> 00:14:13,360
आहे. इनपुट शून्यावर त्या फंक्शनच्या फूरियरच्या रूपांतरित आवृत्तीचे फक्त मूल्यांकन करणे.

205
00:14:13,920 --> 00:14:17,200
ही एक वस्तुस्थिती आहे जी प्रत्यक्षात फक्त परिभाषाच्या बाहेर पॉप होईल.

206
00:14:17,200 --> 00:14:22,160
आणि हे अधिक सामान्य वातावरणाचे प्रतिनिधी आहे की

207
00:14:22,160 --> 00:14:26,640
उजवीकडील फूरियर ट्रान्सफॉर्म्ड फंक्शनचे प्रत्येक वैयक्तिक आउटपुट डावीकडील

208
00:14:26,640 --> 00:14:28,560
मूळ फंक्शनबद्दल काही प्रकारच्या जागतिक माहितीशी संबंधित आहे.

209
00:14:28,560 --> 00:14:33,520
आमच्या विशिष्ट बाबतीत, जर तुमचा माझ्यावर विश्वास असेल की हे sinc फंक्शन आणि

210
00:14:33,520 --> 00:14:37,840
रेक्ट फंक्शन अशा फूरियर ट्रान्सफॉर्मशी संबंधित आहेत, तर ते इंटिग्रलचे स्पष्टीकरण देते,

211
00:14:37,840 --> 00:14:41,760
जे अन्यथा गणना करणे खूप अवघड आहे, कारण ते सर्व साइन केलेले क्षेत्र

212
00:14:41,760 --> 00:14:45,040
सांगत आहे. शून्यावर रेक्टचे मूल्यांकन करण्यासारखीच गोष्ट आहे, जी फक्त एक आहे.

213
00:14:45,440 --> 00:14:48,480
आता, तुम्ही तक्रार करू शकता, खात्रीने हे फक्त गालिच्याखालील दणका हलवते.

214
00:14:48,480 --> 00:14:52,960
निश्चितपणे या फूरियर ट्रान्सफॉर्मची गणना करणे, जे काही दिसते

215
00:14:52,960 --> 00:14:54,160
ते मूळ इंटिग्रलची गणना करणे तितकेच कठीण असेल.

216
00:14:54,160 --> 00:14:58,480
परंतु कल्पना अशी आहे की या फूरियर ट्रान्सफॉर्म्सची गणना करण्यासाठी अनेक टिपा आणि युक्त्या आहेत.

217
00:14:58,480 --> 00:15:03,040
आणि शिवाय, जेव्हा तुम्ही असे करता तेव्हा ते तुम्हाला त्या अविभाज्य घटकापेक्षा खूप जास्त माहिती सांगते.

218
00:15:03,040 --> 00:15:05,680
गणना केल्याने तुम्हाला तुमच्या पैशासाठी खूप मोठा धक्का बसतो.

219
00:15:06,320 --> 00:15:10,160
आता, आम्ही शोधत असलेल्या कनेक्शनचे स्पष्टीकरण देणारी दुसरी महत्त्वाची वस्तुस्थिती अशी आहे की जर

220
00:15:10,160 --> 00:15:14,880
तुमच्याकडे दोन भिन्न कार्ये असतील आणि तुम्ही त्यांचे उत्पादन घेतले आणि नंतर तुम्ही त्या

221
00:15:14,880 --> 00:15:19,440
उत्पादनाच्या फूरियर ट्रान्सफॉर्मची बेरीज घेतली तर ती समान गोष्ट असेल. जसे की तुम्ही

222
00:15:19,440 --> 00:15:23,600
तुमच्या मूळ फंक्शनचे फूरियर ट्रान्सफॉर्म्स वैयक्तिकरित्या घेतले आणि नंतर ते नवीन प्रकारचे ऑपरेशन वापरून

223
00:15:23,600 --> 00:15:28,240
एकत्र केले ज्याबद्दल आम्ही पुढील व्हिडिओमध्ये चर्चा करू, ज्याला कॉन्व्होल्यूशन म्हणून ओळखले जाते.

224
00:15:28,240 --> 00:15:32,000
आता, जरी convolutions सह बरेच काही समजावून सांगायचे असले तरी, परिणाम असा होईल

225
00:15:32,000 --> 00:15:37,680
की या आयताकृती फंक्शन्सच्या आमच्या विशिष्ट बाबतीत, convolution घेणे हे संपूर्ण वेळ, एकत्रितपणे

226
00:15:37,680 --> 00:15:41,600
आपण बोलत असलेल्या मूव्हिंग अॅव्हरेजपैकी एकसारखे दिसते. आमच्या मागील वस्तुस्थितीसह की एका

227
00:15:41,600 --> 00:15:46,080
संदर्भामध्ये एकत्रीकरण करणे हे दुसर्‍या संदर्भात शून्यावर मूल्यमापन करण्यासारखे दिसते, जर तुमचा माझ्यावर

228
00:15:46,080 --> 00:15:51,360
विश्वास असेल तर, एका संदर्भात गुणाकार करणे या नवीन ऑपरेशनशी सुसंगत आहे, convolutions,

229
00:15:51,360 --> 00:15:55,280
ज्याचा आमच्या उदाहरणासाठी तुम्ही फक्त मूव्हिंग अॅव्हरेज म्हणून विचार केला पाहिजे, या

230
00:15:55,280 --> 00:16:00,240
सर्व sinc फंक्शन्सचा एकत्रितपणे गुणाकार करण्याबद्दल या प्रगतीशील मूव्हिंग अॅव्हरेजच्या संदर्भात का विचार

231
00:16:00,240 --> 00:16:04,960
केला जाऊ शकतो आणि नेहमी शून्यावर मूल्यमापन का केले जाऊ शकते हे

232
00:16:04,960 --> 00:16:09,280
स्पष्ट करेल, ज्यामुळे शेवटी काहीतरी खंडित होण्यापूर्वी तुम्ही अशा स्थिर मूल्याची अपेक्षा का

233
00:16:09,280 --> 00:16:13,440
करता याबद्दल खरोखर सुंदर अंतर्ज्ञान देते. खाली पठाराच्या कडा मध्यभागी इंच आणि जवळ

234
00:16:13,440 --> 00:16:18,720
येतात. या शेवटच्या महत्त्वाच्या वस्तुस्थितीला, तसे, एक विशेष नाव आहे, याला कन्व्होल्यूशन प्रमेय म्हणतात,

235
00:16:18,720 --> 00:16:23,680
आणि पुन्हा हे असे काहीतरी आहे ज्याचा आपण अधिक खोलवर जाऊ. मी ओळखतो की

236
00:16:23,680 --> 00:16:28,560
येथे तीन जादुई तथ्ये सांगून आणि त्यामधून सर्व काही येते असे सांगून गोष्टींचा शेवट करणे

237
00:16:28,560 --> 00:16:33,200
थोडेसे असमाधानकारक आहे, परंतु आशा आहे की हे तुम्हाला फ्युरियर ट्रान्सफॉर्म्स सारखी शक्तिशाली साधने अवघड

238
00:16:33,200 --> 00:16:39,280
समस्यांसाठी इतकी उपयुक्त का असू शकतात याची थोडीशी झलक देते. दृष्टीकोनातील बदल प्रदान करण्याचा हा

239
00:16:39,280 --> 00:16:44,560
एक पद्धतशीर मार्ग आहे जेथे कठीण समस्या कधीकधी सोपे दिसू शकतात. दुसरे काही नसल्यास,

240
00:16:44,560 --> 00:16:48,400
कन्व्होल्यूशन प्रमेय सारख्या या सुंदर गोष्टींबद्दल जाणून घेण्यासाठी काही प्रेरणा प्रदान करते.

241
00:16:48,400 --> 00:16:53,920
आणखी एक लहान टीझर म्हणून, या कन्व्होल्यूशन प्रमेयाचा आणखी एक मजेदार परिणाम

242
00:16:53,920 --> 00:16:58,480
असा होईल की ते अल्गोरिदमसाठी दरवाजे उघडेल जे तुम्हाला दोन मोठ्या संख्येच्या उत्पादनाची

243
00:16:58,480 --> 00:17:01,840
गणना खूप लवकर करू देते, जसे की तुम्हाला वाटते त्यापेक्षा जास्त वेगाने.

244
00:17:02,800 --> 00:17:05,840
तर त्यासोबत, मी तुम्हाला पुढील व्हिडिओमध्ये पाहू.

