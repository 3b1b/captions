1
00:00:00,000 --> 00:00:03,039
Минулого тижня я опублікував це відео про розгадування гри Wordle

2
00:00:03,039 --> 00:00:06,216
або, принаймні, спробу розв’язати її за допомогою теорії інформації.

3
00:00:06,216 --> 00:00:09,920
І я хотів швидко додати, як ми маємо це назвати, додаток?

4
00:00:09,920 --> 00:00:10,685
зізнання?

5
00:00:10,685 --> 00:00:14,240
По суті, я просто хочу пояснити місце, де я зробив помилку.

6
00:00:14,240 --> 00:00:18,033
Виявилося, що в коді, який я запускав, щоб відтворити Wordle, а потім запустив усі

7
00:00:18,033 --> 00:00:22,055
алгоритми, щоб її вирішити та перевірити їх продуктивність, була дуже невелика помилка.

8
00:00:22,055 --> 00:00:25,092
І це одна з тих помилок, яка впливає на дуже невеликий відсоток

9
00:00:25,092 --> 00:00:28,034
випадків, тому її було легко пропустити, і вона має лише дуже

10
00:00:28,034 --> 00:00:30,976
незначний ефект, який здебільшого не має особливого значення.

11
00:00:30,976 --> 00:00:33,698
В основному це було пов’язано з тим, як ви призначаєте

12
00:00:33,698 --> 00:00:36,223
колір припущенню, яке містить кілька різних літер.

13
00:00:36,223 --> 00:00:39,151
Наприклад, якщо ви вгадали швидкість, а вірною відповіддю

14
00:00:39,151 --> 00:00:42,080
є дотримуватися, як розфарбувати ці два «е» з припущення?

15
00:00:42,080 --> 00:00:48,902
Так, як це працює з угодами Wordle, перше e має жовтий колір, а другий — сірий.

16
00:00:48,902 --> 00:00:52,287
Ви можете подумати, що перша відповідь збігається з чимось із

17
00:00:52,287 --> 00:00:56,000
правдивої відповіді, а сірість говорить вам, що другого e не існує.

18
00:00:56,000 --> 00:00:59,637
Навпаки, якби відповіддю було щось на кшталт стерти, обидва ці

19
00:00:59,637 --> 00:01:03,274
e були б забарвлені в жовтий колір, повідомляючи вам, що перше

20
00:01:03,274 --> 00:01:06,970
e знаходиться в іншому місці, а також є друге e в іншому місці.

21
00:01:06,970 --> 00:01:11,328
Подібним чином, якщо один із символів e потрапляє і він зелений, то другий

22
00:01:11,328 --> 00:01:15,569
символ буде сірим у випадку, коли у правдивій відповіді немає другого e,

23
00:01:15,569 --> 00:01:20,102
але він буде жовтим, якщо є другий e, і він просто в іншому Місцезнаходження.

24
00:01:20,102 --> 00:01:23,171
Коротше кажучи, десь по дорозі я випадково представив

25
00:01:23,171 --> 00:01:26,240
поведінку, яка трохи відрізняється від цих конвенцій.

26
00:01:26,240 --> 00:01:28,416
Чесно кажучи, це було справді тупо.

27
00:01:28,416 --> 00:01:33,078
По суті, в якийсь момент посередині проекту я хотів пришвидшити деякі обчислення, і я

28
00:01:33,078 --> 00:01:37,794
спробував невеликий трюк, щоб обчислити значення для цього шаблону між будь-якою даною

29
00:01:37,794 --> 00:01:42,565
парою слів, і ви знаєте, що я просто не Я дійсно не продумав це, і це ввело цю невелику

30
00:01:42,565 --> 00:01:42,944
зміну.

31
00:01:42,944 --> 00:01:46,390
Іронія полягає в тому, що врешті-решт справжній спосіб зробити все найшвидшим

32
00:01:46,390 --> 00:01:49,527
— це попередньо обчислити всі ці шаблони, щоб усе було лише пошуком, і

33
00:01:49,527 --> 00:01:52,841
тому не матиме значення, скільки часу потрібно для кожного з них, особливо

34
00:01:52,841 --> 00:01:55,934
якщо ви ми пишемо код з помилками, який важко читати, щоб це сталося.

35
00:01:55,934 --> 00:01:57,665
Знаєш, живеш і вчишся.

36
00:01:57,665 --> 00:01:59,881
Щодо того, як це впливає на фактичне відео, я маю

37
00:01:59,881 --> 00:02:02,186
на увазі, що істота насправді змінюється дуже мало.

38
00:02:02,186 --> 00:02:04,490
Звичайно, основні уроки про те, що таке інформація,

39
00:02:04,490 --> 00:02:06,617
що таке ентропія, все це залишається незмінним.

40
00:02:06,617 --> 00:02:11,101
Час від часу, якщо я показую на екрані якийсь розподіл, пов’язаний із заданим словом,

41
00:02:11,101 --> 00:02:15,637
цей розподіл насправді може бути дещо неправильним, оскільки деякі сегменти, пов’язані

42
00:02:15,637 --> 00:02:19,808
з різними шаблонами, мають містити або більше, або менше правильних відповідей.

43
00:02:19,808 --> 00:02:23,832
Навіть тоді це не з’явилося, тому що я дуже рідко показував

44
00:02:23,832 --> 00:02:27,789
слово з кількома літерами, які також потрапляли в регістр.

45
00:02:27,789 --> 00:02:31,369
Але однією з небагатьох суттєвих речей, які все-таки змінюються і

46
00:02:31,369 --> 00:02:35,004
які, мабуть, мають неабияке значення, був остаточний висновок щодо

47
00:02:35,004 --> 00:02:38,693
того, як, якщо ми хочемо знайти оптимальний можливий бал для списку

48
00:02:38,693 --> 00:02:42,654
відповідей Wordle, яке початкове припущення використовує такий алгоритм?

49
00:02:42,654 --> 00:02:47,795
У відео я сказав, що найкраща ефективність, яку я міг знайти, досягнута від відкриття

50
00:02:47,795 --> 00:02:52,937
словом кран, що було правдою лише в тому сенсі, що алгоритми грали в зовсім іншу гру.

51
00:02:52,937 --> 00:02:56,492
Після виправлення та повторного запуску всього, є інша відповідь щодо того,

52
00:02:56,492 --> 00:03:00,000
яке теоретично оптимальне перше припущення є для цього конкретного списку.

53
00:03:00,000 --> 00:03:04,426
І подивіться, я знаю, що ви знаєте, що суть відео полягає не в тому, щоб

54
00:03:04,426 --> 00:03:08,913
знайти якусь технічно оптимальну відповідь на якусь випадкову онлайн-гру.

55
00:03:08,913 --> 00:03:12,412
Сенс відео полягає в тому, щоб безсоромно підхопити тенденцію в

56
00:03:12,412 --> 00:03:16,240
Інтернеті потай атакувати людей за допомогою уроку теорії інформації.

57
00:03:16,240 --> 00:03:18,014
І це все добре, я підтримую цю частину.

58
00:03:18,014 --> 00:03:21,138
Але я знаю, як працює Інтернет, і для багатьох людей

59
00:03:21,138 --> 00:03:24,793
головним висновком було те, що найкраще відкриває гру Wordle.

60
00:03:24,793 --> 00:03:28,099
І я розумію, я ввійшов у це, тому що я розмістив це на мініатюрі, але,

61
00:03:28,099 --> 00:03:31,731
мабуть, ви можете мені вибачити, якщо я хочу додати тут невелике виправлення.

62
00:03:31,731 --> 00:03:35,051
І більш вагомою причиною повернутися до всього цього насправді є те, що

63
00:03:35,051 --> 00:03:38,464
я ніколи насправді не говорив про те, що увійшло в цей остаточний аналіз.

64
00:03:38,464 --> 00:03:42,688
І це цікаво як самостійний підурок, тому це варто зробити тут.

65
00:03:42,688 --> 00:03:45,958
Тепер, якщо ви пам’ятаєте, більшу частину нашого останнього відео ми

66
00:03:45,958 --> 00:03:48,991
витратили на те, щоб спробувати написати алгоритм для вирішення

67
00:03:48,991 --> 00:03:52,404
Wordle, який не використовує офіційний список усіх можливих відповідей.

68
00:03:52,404 --> 00:03:55,627
На мій смак, це трохи схоже на переобладнання тестового

69
00:03:55,627 --> 00:03:58,678
набору, і що ще цікавіше, це створювати щось стійке.

70
00:03:58,678 --> 00:04:02,233
Ось чому ми пройшли весь процес розгляду відносної частоти слів

71
00:04:02,233 --> 00:04:05,898
в англійській мові, щоб отримати деяке уявлення про те, наскільки

72
00:04:05,898 --> 00:04:09,120
ймовірно кожне з них буде включено в остаточну відповідь.

73
00:04:09,120 --> 00:04:13,372
Однак для того, що ми робимо тут, коли ми просто намагаємося знайти абсолютно

74
00:04:13,372 --> 00:04:17,353
найкращий період продуктивності, я включаю цей офіційний список і просто

75
00:04:17,353 --> 00:04:21,278
безсоромно переобладную тестовий набір, тобто ми точно знаємо, чи слово

76
00:04:21,278 --> 00:04:25,368
включено чи ні, і ми можемо призначити однакову ймовірність кожному з них.

77
00:04:25,368 --> 00:04:29,156
Якщо ви пам’ятаєте, першим кроком у всьому цьому було сказати для конкретного

78
00:04:29,156 --> 00:04:32,701
початкового припущення, можливо, щось на зразок мого старого улюбленого,

79
00:04:32,701 --> 00:04:36,295
журавля, наскільки ймовірно, що ви побачите кожен із можливих візерунків?

80
00:04:36,295 --> 00:04:40,824
І в цьому контексті, де ми безсоромно переповнюємо список відповідей wordle, все,

81
00:04:40,824 --> 00:04:45,408
що включає, це підрахувати, скільки можливих відповідей дає кожен із цих шаблонів.

82
00:04:45,408 --> 00:04:49,743
І, звісно, більшість нашого часу було витрачено на таку кумедну формулу для кількісного

83
00:04:49,743 --> 00:04:53,930
визначення обсягу інформації, яку ви отримаєте від цього припущення, яке в основному

84
00:04:53,930 --> 00:04:57,920
передбачає перегляд кожного з цих відер і визначення того, скільки інформації ви

85
00:04:57,920 --> 00:05:02,304
отримаєте, якщо цей логарифмічний вираз, який є химерним способом сказати, скільки разів

86
00:05:02,304 --> 00:05:06,295
ви скоротили б свій простір можливостей наполовину, якби спостерігали за заданою

87
00:05:06,295 --> 00:05:07,083
закономірністю.

88
00:05:07,083 --> 00:05:10,120
Ми беремо середнє зважене значення всіх цих показників, і це дає нам

89
00:05:10,120 --> 00:05:13,158
міру того, скільки ми очікуємо дізнатися з цього першого припущення.

90
00:05:13,158 --> 00:05:18,110
За мить ми заглибимося глибше, але якщо ви просто пошукаєте серед усіх 13 000 різних

91
00:05:18,110 --> 00:05:22,946
слів, з яких ви могли б почати, і запитайте, яке з них містить найбільшу очікувану

92
00:05:22,946 --> 00:05:27,840
інформацію, виявиться, що найкраща можлива відповідь - це злітати, що не Справді це

93
00:05:27,840 --> 00:05:32,967
не схоже на справжнє слово, але я думаю, що це застарілий термін для дитинчати яструба.

94
00:05:32,967 --> 00:05:37,431
15 найпопулярніших учасників за цим показником виглядають так, але це не

95
00:05:37,431 --> 00:05:42,200
обов’язково найкращі початкові припущення, тому що вони розглядають лише один

96
00:05:42,200 --> 00:05:47,458
крок із евристикою очікуваної інформації, щоб спробувати оцінити справжній результат.

97
00:05:47,458 --> 00:05:52,000
Але є достатньо шаблонів, щоб ми могли виконати вичерпний пошук у два кроки.

98
00:05:52,000 --> 00:05:56,042
Наприклад, припустімо, що ви відкрили з ширянням, і візерунок, який ви випадково

99
00:05:56,042 --> 00:06:00,334
побачили, був найімовірнішим, усі сірі, тоді ви можете запустити ідентичний аналіз із

100
00:06:00,334 --> 00:06:00,933
цієї точки.

101
00:06:00,933 --> 00:06:04,870
Для заданого запропонованого другого припущення, щось на зразок кошеня, який

102
00:06:04,870 --> 00:06:08,756
розподіл між усіма шаблонами в тому обмеженому випадку, де ми обмежені лише

103
00:06:08,756 --> 00:06:12,539
словами, які створять усі сірі відтінки для ширяння, а потім ми вимірюємо

104
00:06:12,539 --> 00:06:16,783
рівномірність цього розподілу за допомогою цього очікуваного інформаційну формулу,

105
00:06:16,783 --> 00:06:20,925
і ми робимо це для всіх 13 000 можливих слів, які ми можемо використати як друге

106
00:06:20,925 --> 00:06:21,538
припущення.

107
00:06:21,538 --> 00:06:25,388
Роблячи це, ми можемо знайти оптимальне друге припущення в цьому сценарії

108
00:06:25,388 --> 00:06:29,134
та кількість інформації, яку ми повинні були отримати від нього, і якщо

109
00:06:29,134 --> 00:06:32,983
ми промиємо, промиємо та повторимо, і зробимо це для всіх різних можливих

110
00:06:32,983 --> 00:06:36,833
шаблонів, які ви можете побачити, ми отримаємо повна карта всіх найкращих

111
00:06:36,833 --> 00:06:40,422
можливих других припущень разом із очікуваною інформацією про кожне.

112
00:06:40,422 --> 00:06:46,078
Звідси, якщо ви візьмете середнє зважене значення всіх цих значень другого кроку, зважене

113
00:06:46,078 --> 00:06:51,608
відповідно до того, наскільки ймовірно ви потрапите в це відро, це дасть вам міру того,

114
00:06:51,608 --> 00:06:57,137
скільки інформації ви, ймовірно, отримаєте від припущень, що злетять після другий крок.

115
00:06:57,137 --> 00:06:59,538
Коли ми використовуємо цей двоетапний показник як

116
00:06:59,538 --> 00:07:01,986
наш новий засіб рейтингу, список трохи змінюється.

117
00:07:01,986 --> 00:07:05,080
Soar більше не займає перше місце, воно повертається до

118
00:07:05,080 --> 00:07:08,560
14-го, а натомість те, що піднімається на вершину, вбивається.

119
00:07:08,560 --> 00:07:12,539
Знову ж таки, це не дуже реально, і схоже, що це британський

120
00:07:12,539 --> 00:07:16,386
термін для лопати, яка використовується для різання дерну.

121
00:07:16,386 --> 00:07:20,897
Гаразд, але, як бачите, це дуже напружена боротьба між усіма цими головними

122
00:07:20,897 --> 00:07:25,290
претендентами за те, хто отримає більше інформації після цих двох кроків.

123
00:07:25,290 --> 00:07:29,815
І все одно це не обов’язково найкращі початкові припущення, тому що інформація — це

124
00:07:29,815 --> 00:07:34,503
лише евристика, вона не повідомляє нам фактичний рахунок, якщо ви дійсно граєте в гру.

125
00:07:34,503 --> 00:07:39,098
Що я зробив, так це я запустив симуляцію гри у всі 2315 можливих

126
00:07:39,098 --> 00:07:44,400
словесних ігор з усіма можливими відповідями в перших 250 із цього списку.

127
00:07:44,400 --> 00:07:51,487
І роблячи це, дивлячись на те, як вони справді працюють, той, хто в

128
00:07:51,487 --> 00:07:58,262
кінцевому підсумку отримав найкращий бал, виявляється Salé, що є

129
00:07:58,262 --> 00:08:06,496
альтернативним варіантом написання Salé, який є легким середньовічним шоломом.

130
00:08:06,496 --> 00:08:11,161
Гаразд, якщо вам це здасться надто фальшивим, а мені це так, ви будете

131
00:08:11,161 --> 00:08:15,760
раді дізнатися, що Trace і Crate дають майже однакову продуктивність.

132
00:08:15,760 --> 00:08:18,802
Перевага кожного з них полягає в тому, що він, очевидно, є справжнім

133
00:08:18,802 --> 00:08:21,888
словом, тому є один день, коли ви зрозумієте його правильно з першого

134
00:08:21,888 --> 00:08:24,666
разу, оскільки обидва є фактичними відповідями на основі слів.

135
00:08:24,666 --> 00:08:28,643
Цей перехід від сортування на основі найкращої двокрокової ентропії до сортування

136
00:08:28,643 --> 00:08:32,425
на основі найнижчого середнього балу також похитує список, але не так сильно.

137
00:08:32,425 --> 00:08:35,721
Наприклад, Salé раніше займав третє місце, перш ніж піднятися

138
00:08:35,721 --> 00:08:38,963
на вершину, а Crate і Trace були як четвертим, так і п’ятим.

139
00:08:38,963 --> 00:08:41,264
Якщо вам цікаво, ви можете отримати трохи кращу

140
00:08:41,264 --> 00:08:43,758
продуктивність звідси, зробивши невеликий брутфорс.

141
00:08:43,758 --> 00:08:46,962
Є дуже гарна публікація в блозі Джонатана Олсона, якщо вам це цікаво,

142
00:08:46,962 --> 00:08:50,075
де він також дозволяє вам досліджувати, якими є оптимальні наступні

143
00:08:50,075 --> 00:08:53,600
припущення для кількох початкових слів на основі цих оптимальних алгоритмів.

144
00:08:53,600 --> 00:08:58,760
Але якщо відійти від усього цього, деякі люди кажуть мені, що ця цитата руйнує гру, якщо

145
00:08:58,760 --> 00:09:03,920
надмірно аналізувати її таким чином і намагатися знайти оптимальне початкове припущення.

146
00:09:03,920 --> 00:09:06,766
Ви знаєте, це виглядає дещо брудно, якщо ви використовуєте це початкове припущення

147
00:09:06,766 --> 00:09:09,577
після того, як його вивчили, і це здається неефективним, якщо ви цього не робите.

148
00:09:09,577 --> 00:09:11,818
Але справа в тому, що я насправді не думаю, що

149
00:09:11,818 --> 00:09:14,201
це найкраще відкриття для людини, яка грає в гру.

150
00:09:14,201 --> 00:09:16,967
По-перше, вам потрібно знати, якою є оптимальна

151
00:09:16,967 --> 00:09:19,964
друга здогадка для кожного шаблону, який ви бачите.

152
00:09:19,964 --> 00:09:23,072
І що ще важливіше, все це відбувається в умовах, коли ми

153
00:09:23,072 --> 00:09:26,453
абсурдно не відповідаємо офіційному списку відповідей Wordle.

154
00:09:26,453 --> 00:09:29,708
У той момент, коли, скажімо, New York Times вирішить

155
00:09:29,708 --> 00:09:32,964
змінити список під капотом, усе це вилетить у вікно.

156
00:09:32,964 --> 00:09:35,594
Те, як ми, люди, граємо в гру, просто сильно відрізняється

157
00:09:35,594 --> 00:09:37,779
від того, що робить будь-який із цих алгоритмів.

158
00:09:37,779 --> 00:09:41,836
Ми не запам’ятали список слів, ми не робимо вичерпних пошуків, ми отримуємо

159
00:09:41,836 --> 00:09:45,520
інтуїцію з таких речей, як те, що таке голосні та як вони розміщені.

160
00:09:45,520 --> 00:09:49,141
Насправді я був би дуже радий, якби ті з вас, хто дивиться це відео, одразу

161
00:09:49,141 --> 00:09:52,762
забули, що є технічно найкращим початковим припущенням, і натомість згадали

162
00:09:52,762 --> 00:09:56,146
речі, наприклад, як ви кількісно оцінюєте інформацію, або той факт, що

163
00:09:56,146 --> 00:09:59,767
вам слід остерігатися, коли жадібний алгоритм не досягає найкращої в усьому

164
00:09:59,767 --> 00:10:02,960
світі продуктивності, яку ви могли б отримати від глибшого пошуку.

165
00:10:02,960 --> 00:10:06,900
Принаймні на мій смак, радість від написання алгоритмів, щоб спробувати грати в

166
00:10:06,900 --> 00:10:10,988
ігри, насправді мало впливає на те, як мені подобається грати в ці ігри як людині.

167
00:10:10,988 --> 00:10:14,039
Сенс написання алгоритмів для всього цього полягає не в тому, щоб

168
00:10:14,039 --> 00:10:17,044
впливати на те, як ми граємо в гру, це все одно весела гра слів.

169
00:10:17,044 --> 00:10:19,731
Це для того, щоб відточити наші м’язи для написання

170
00:10:19,731 --> 00:10:22,160
алгоритмів у більш значущих контекстах деінде.

