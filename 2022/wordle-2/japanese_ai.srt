1
00:00:00,000 --> 00:00:04,800
先週、私は情報理論を使用して Wordle ゲームを解く、または少なくともそれを解こうとする

2
00:00:04,800 --> 00:00:09,920
ビデオを投稿しました。そして、これを何と呼ぶべきか、補足というか告白というか、簡単に

3
00:00:09,920 --> 00:00:14,240
追加したいと思いました。基本的には、私が間違いを犯した場所を説明したいだけです。

4
00:00:14,240 --> 00:00:18,880
Wordle を再作成し、すべてのアルゴリズムを実行して問題を解決し、パフォーマンスをテストする

5
00:00:18,880 --> 00:00:23,040
ために実行していたコードに、非常に軽微なバグがあることが判明しました。そして、これはごく一

6
00:00:23,040 --> 00:00:27,760
部のケースに影響を与えるバグの 1 つであるため、見落とされやすく、影響はご

7
00:00:27,760 --> 00:00:32,080
くわずかであり、ほとんどの場合はあまり問題になりません。基本的には、複数の異

8
00:00:32,080 --> 00:00:36,880
なる文字が含まれる推測に色を割り当てる方法に関係していました。たとえば、速度を推

9
00:00:36,880 --> 00:00:42,080
測し、本当の答えが abide だった場合、推測に基づいてこれら 2 つの e をどのように色付けする必要がありますか?

10
00:00:42,800 --> 00:00:46,640
Wordle の規約に従った場合、最初の e は黄色、2 番

11
00:00:46,640 --> 00:00:51,120
目の e は灰色になります。最初の e は本当の答えの何かと一致して

12
00:00:51,120 --> 00:00:56,000
おり、灰色は 2 番目の e がないことを示していると考えるかもしれません。

13
00:00:56,000 --> 00:01:01,200
対照的に、答えが消去のようなものであった場合、これらの e は両方とも黄色

14
00:01:01,200 --> 00:01:05,920
になり、最初の e が別の場所にあり、2 番目の e も別の場所にあること

15
00:01:05,920 --> 00:01:10,960
がわかります。同様に、e の 1 つがヒットして緑色の場合、真の答えに 2 番目

16
00:01:10,960 --> 00:01:17,280
の e がない場合は 2 番目の e は灰色になりますが、2 番目の e があり

17
00:01:17,280 --> 00:01:21,920
、それが単に異なる場合は黄色になります。位置。簡単に言うと、途中のどこかで

18
00:01:21,920 --> 00:01:26,240
、これらの規則とはわずかに異なる動作を誤って導入してしまいました。

19
00:01:26,960 --> 00:01:31,680
正直本当にバカでした。基本的に、プロジェクトの途中のある時点で、計算の一部を高速化し

20
00:01:31,680 --> 00:01:35,840
たいと思い、特定の単語のペア間のこのパターンの値をどのように計算するかについてちょっと

21
00:01:35,840 --> 00:01:40,640
したトリックを試していましたが、ご存知のとおり、私はそれを実行できませんでした。よく考え

22
00:01:40,640 --> 00:01:45,600
ずに、このわずかな変更を導入しました。皮肉な部分は、最終的に物事を高速化する実際の方法は、す

23
00:01:45,600 --> 00:01:50,080
べてが検索だけになるようにすべてのパターンを事前に計算することなので、特に次のような場合には、そ

24
00:01:50,080 --> 00:01:54,000
れぞれの実行にどれだけ時間がかかるかは問題ではないということです。それを実現するために、読みにく

25
00:01:54,000 --> 00:01:59,040
いバグのあるコードを書いています。ご存知のように、あなたは生きて学びます。これが実際のビデオにどのような

26
00:01:59,040 --> 00:02:03,760
影響を与えるかというと、実質的にはほとんど変わらないということです。もちろん、情報とは何か、エン

27
00:02:03,760 --> 00:02:08,160
トロピーとは何かなどに関する主な教訓は変わりません。時々、特定の単語に関連付けられた

28
00:02:08,160 --> 00:02:13,360
分布を画面に表示する場合、その分布は実際には少しずれている可能性があります。これは、さま

29
00:02:13,360 --> 00:02:18,000
ざまなパターンに関連付けられたバケットの一部には、より多くの、またはより少ない正解が含

30
00:02:18,000 --> 00:02:22,960
まれているはずであるためです。それでも、この特殊なケースに該当する複数の文字を含む単

31
00:02:22,960 --> 00:02:28,400
語を表示することは非常にまれだったので、実際には思い浮かびませんでした。しかし、実

32
00:02:28,400 --> 00:02:33,680
際に変化し、間違いなくかなり重要な実質的なものの 1 つは、Wordle の回

33
00:02:33,680 --> 00:02:40,240
答リストの最適なスコアを見つけたい場合、そのようなアルゴリズムはどのような開始推

34
00:02:40,240 --> 00:02:45,120
測を使用するかという最終結論でした。ビデオの中で、私が見つけた最高のパフォーマンスはクレ

35
00:02:45,120 --> 00:02:50,160
ーンという単語で始まるオープニングから来ていると述べましたが、これはアルゴリズムが非常にわずかに異

36
00:02:50,160 --> 00:02:55,120
なるゲームをプレイしているという意味でのみ真実でした。それを修正してすべてを再実行すると、この特

37
00:02:55,120 --> 00:03:00,000
定のリストに対する理論的に最適な最初の推測が何であるかについては、別の答えが得られます。

38
00:03:00,800 --> 00:03:06,560
ビデオの目的は、ランダムなオンライン ゲームに対する技術的に最適な答えを見つける

39
00:03:06,560 --> 00:03:11,760
ことではないことはご存知でしょう。このビデオの要点は、恥知らずにもインターネット

40
00:03:11,760 --> 00:03:16,240
のトレンドに便乗して、情報理論のレッスンで人々をこっそり攻撃しようということだ。

41
00:03:16,240 --> 00:03:20,160
それでいいのです、私はその部分を支持します。しかし、私はインターネットがどのように機能するかを知っており、多くの人

42
00:03:20,160 --> 00:03:26,160
にとって重要なポイントは、ゲーム Wordle にとって最適なオープナーは何かということでした。わかりました。サムネ

43
00:03:26,160 --> 00:03:30,480
ールに入れたからそのようになりましたが、ここで少し修正を加えたい場合はご容赦い

44
00:03:30,480 --> 00:03:35,120
ただけると思います。そして、実際にこれらすべてに戻るより意味のある理由は、最終

45
00:03:35,120 --> 00:03:39,440
分析の内容について実際に話したことがないということです。そして、それ自体がサブ

46
00:03:39,440 --> 00:03:44,560
レッスンとしても興味深いので、ここで行う価値があります。思い出していただけると思いますが、前回

47
00:03:44,560 --> 00:03:49,120
のビデオでは、考えられるすべての答えの公式リストを使用していない Wordle を解くためのアルゴ

48
00:03:49,120 --> 00:03:54,320
リズムを作成するという課題にほとんどの時間が費やされました。私の好みでは、それはテストセットに過剰

49
00:03:54,320 --> 00:03:59,280
適合しているように感じられますが、より楽しいのは回復力のあるものを構築することです。これが、英

50
00:03:59,280 --> 00:04:03,920
語における相対的な単語の頻度を調べるという全プロセスを経て、それぞれの単語が最終

51
00:04:03,920 --> 00:04:09,120
的な答えとして含まれる可能性がどの程度あるのかという概念を導き出した理由です。

52
00:04:09,120 --> 00:04:13,680
ただし、私たちがここで行っていること、つまり絶対的に最高のパフォーマンスの期間を見つけようとしている

53
00:04:13,680 --> 00:04:19,120
だけなので、その公式リストを組み込んで、恥知らずにもテストセットに過剰適合しているだけです。つまり

54
00:04:19,120 --> 00:04:23,520
、単語が正しいかどうかを確実に知っているということです。が含まれるかどうかを判断し、それぞれに均一

55
00:04:23,520 --> 00:04:28,560
の確率を割り当てることができます。覚えていると思いますが、このすべての最初のステップは、特定の冒頭の推

56
00:04:28,560 --> 00:04:34,080
測について、おそらく私の昔からのお気に入りである鶴のようなものについて、考えられる各パターンが表示され

57
00:04:34,080 --> 00:04:38,560
る可能性はどのくらいですか? と言うことでした。そして、この文脈では、私たちが恥知らずにも Word

58
00:04:38,560 --> 00:04:43,440
le の回答リストに過剰適合しているのですが、必要なのは、これらのパターンのそれぞれに当てはまる回

59
00:04:43,440 --> 00:04:48,240
答がいくつあるかを数えることだけです。そしてもちろん、私たちの時間のほとんどは、この推

60
00:04:48,240 --> 00:04:53,040
測から得られる情報量を定量化するこの種のおかしな見た目の式に費やされました。

61
00:04:53,040 --> 00:04:57,520
基本的には、これらのバケットを 1 つずつ調べて、その推測からどのくらいの情報

62
00:04:57,520 --> 00:05:02,720
が得られるかを計算する必要があります。この対数表現は、特定のパターンを観察した

63
00:05:02,720 --> 00:05:08,160
場合、可能性の空間が何回半分になるかを表す空想的な方法です。これらすべての加重

64
00:05:08,160 --> 00:05:12,800
平均を計算すると、この最初の推測からどの程度の学習が期待できるかの目安が得られま

65
00:05:12,800 --> 00:05:17,920
す。この後さらに詳しく説明しますが、手始めに考えられる 13,000 の異なる単

66
00:05:17,920 --> 00:05:22,880
語すべてを単純に検索し、期待される情報が最も高い単語はどれかを尋ねると、考えら

67
00:05:22,880 --> 00:05:28,400
れる最良の答えは soar であることがわかります。本物の言葉のようには見えませ

68
00:05:28,400 --> 00:05:36,640
んが、赤ちゃんタカを表す死語だと思います。この指標によるトップ 15 のオープニングはたま

69
00:05:36,640 --> 00:05:41,680
たま次のようになりますが、これらは、実際のスコアがどのようになるかを推定するために、期待される情報の

70
00:05:41,680 --> 00:05:46,960
ヒューリスティックを 1 ステップ調べているだけであるため、必ずしも最良のオープニングの推測ではあり

71
00:05:46,960 --> 00:05:52,000
ません。しかし、2 ステップで徹底的な検索を実行できる十分なパターンはほとんどありません。

72
00:05:52,000 --> 00:05:56,640
たとえば、soar で開始し、たまたま見たパターンが最も可能性の高いパターンで、すべ

73
00:05:56,640 --> 00:06:02,240
てグレーだった場合、その時点から同じ分析を実行できるとします。与えられた提案された

74
00:06:02,240 --> 00:06:07,360
2 番目の推測 (キティのようなもの) について、急上昇のすべてのグレーを生成する単語のみに

75
00:06:07,360 --> 00:06:11,920
制限される制限されたケースにおけるすべてのパターンにわたる分布はどうなるでしょうか。その後、

76
00:06:11,920 --> 00:06:17,440
この予想値を使用してその分布の平坦性を測定します。情報式を作成し、2 番目の推測として使用で

77
00:06:17,440 --> 00:06:23,680
きる 13,000 個の単語すべてに対してそれを行います。これを行うことで、そのシナリオ

78
00:06:23,680 --> 00:06:28,080
での最適な 2 番目の推測と、そこから得られると期待される情報の量を見つけることができ

79
00:06:28,640 --> 00:06:32,880
ます。洗濯、すすぎを繰り返し、考えられるさまざまなパターンすべてに対してこれを実行する

80
00:06:32,880 --> 00:06:37,680
と、次の結果が得られます。考えられるすべての最良の 2 番目の推測の完全なマップと、そ

81
00:06:37,680 --> 00:06:46,640
れぞれの予想される情報。そこから、すべての第 2 ステップの値を加重平均し、

82
00:06:46,640 --> 00:06:51,760
そのバケツに該当する可能性に従って重み付けすると、その後の推測の急上昇か

83
00:06:51,760 --> 00:06:57,440
らどの程度の情報を得る可能性があるかの尺度が得られます。第二段階。この

84
00:06:57,440 --> 00:07:02,400
2 段階の指標をランク付けの新しい手段として使用すると、リストは少し変わります。Soar

85
00:07:02,400 --> 00:07:09,040
はもはや 1 位ではなく、14 位に後退し、代わりにトップに上がったものが殺されます。これもあ

86
00:07:09,040 --> 00:07:16,000
まり現実的ではなく、芝を刈るのに使用されるスペードを意味するイギリスの用語のようです

87
00:07:16,000 --> 00:07:22,320
。わかりましたが、ご覧のとおり、これら 2 つのステップの後に誰が最も多くの情報を取得するかについて

88
00:07:22,320 --> 00:07:27,600
、これらの上位候補全員の間で非常に接戦となっています。それでも、情報は単なるヒューリスティックで

89
00:07:27,600 --> 00:07:32,000
あり、実際にゲームをプレイした場合の実際のスコアを教えてくれるわけではないため、これらは必

90
00:07:32,000 --> 00:07:37,120
ずしも最良の開始予想であるとは限りません。私がやったことは、このリストの上位 250 にあるすべての

91
00:07:37,120 --> 00:07:44,400
可能な答えを使用して、2,315 の可能な単語ゲームをすべてプレイするシミュレーションを実行したことです。

92
00:07:46,160 --> 00:07:51,120
そして、これを行うことで、彼らが実際にどのようにパフォーマンスするかを見て、可能な限り最高の

93
00:07:51,120 --> 00:08:03,280
スコアで非常に僅差で終了したのは、中世の軽いヘルメットである Salé の別の綴りである S

94
00:08:04,240 --> 00:08:10,080
alé であることがわかります。わかりました。もしあなたにとってそれが少し偽物すぎると感じたなら、私にとって

95
00:08:10,080 --> 00:08:15,760
はそうでしたが、Trace と Crate がほぼ同じパフォーマンスを発揮することを知って喜んでいただけるでしょう。

96
00:08:16,240 --> 00:08:21,040
それぞれの答えは明らかに実際の単語であるという利点があり、両方とも実際の単語の答えで

97
00:08:21,040 --> 00:08:26,480
あるため、最初の推測で正解する日が来ることがあります。最良の 2 段階エントロピーに基づい

98
00:08:26,480 --> 00:08:31,200
た並べ替えから、最低の平均スコアに基づいた並べ替えへの移行により、リストも大きく変わりますが、それほ

99
00:08:31,200 --> 00:08:36,000
ど大きくはありません。たとえば、サレはトップに浮上する前は 3 位でしたが、クレイトと

100
00:08:36,000 --> 00:08:41,200
トレースは両方とも 4 位と 5 位でした。興味がある場合は、少し強引に実行することで

101
00:08:41,200 --> 00:08:45,120
、ここからパフォーマンスをわずかに向上させることができます。これについて興味がある場合は、Jo

102
00:08:45,120 --> 00:08:49,600
nathan Olson による非常に優れたブログ投稿があります。そこでは、最適なアルゴリズ

103
00:08:49,600 --> 00:08:53,600
ムに基づいて、いくつかの開始単語に対する最適な次の推測が何であるかを調査することもできます。

104
00:08:55,040 --> 00:08:59,040
しかし、これらすべてから一歩下がって、このように過度に分析し、最適なオープニングの

105
00:08:59,040 --> 00:09:03,920
推測を見つけようとするのはゲームを台無しにする引用だと何人かの人々が言いました。

106
00:09:03,920 --> 00:09:07,680
ご存知のとおり、冒頭の推測を覚えた後に使用すると、なんだか汚い感じがしますし、使

107
00:09:07,680 --> 00:09:12,400
用しないと非効率的に感じます。しかし、問題は、これがゲームをプレイする人間にとって最良の開幕戦で

108
00:09:12,400 --> 00:09:16,880
あるとは実際には思わないということです。まず、表示されるパターンごとに最適な 2 番目

109
00:09:16,880 --> 00:09:22,160
の推測が何であるかを知る必要があります。そしてさらに重要なことは、これらすべてが公式の

110
00:09:22,160 --> 00:09:27,440
Wordle 回答リストに不条理なほど過剰適合している状況にあるということです。たとえば、ニューヨー

111
00:09:27,440 --> 00:09:32,240
ク・タイムズがそのリストの内容を水面下で変更することを選択した瞬間、これらすべては窓の外に消えて

112
00:09:32,240 --> 00:09:36,720
しまいます。私たち人間がゲームをプレイする方法は、これらのアルゴリズムが行うものとはま

113
00:09:36,720 --> 00:09:41,440
ったく異なります。単語リストを暗記したり、徹底的に検索したりするわけではなく

114
00:09:41,440 --> 00:09:45,520
、母音が何なのか、どのように配置されているのかなどから直感をつかみます。

115
00:09:45,520 --> 00:09:50,080
このビデオを見ている人が、技術的に最も適切な冒頭の推測をすぐに忘れて、情

116
00:09:50,080 --> 00:09:54,880
報をどのように定量化するか、または貪欲なときに注意する必要があるという

117
00:09:54,880 --> 00:09:59,440
事実などを思い出していただければ、私は実際に最も幸せです。このアルゴリズ

118
00:09:59,440 --> 00:10:02,960
ムは、より詳細な検索から得られる世界最高のパフォーマンスには及ばない。

119
00:10:03,520 --> 00:10:07,920
少なくとも私の好みでは、ゲームをプレイするためのアルゴリズムを書く喜びは、人間としてそれらのゲーム

120
00:10:07,920 --> 00:10:12,800
をプレイするのが好きかどうかにはほとんど関係がありません。これらすべてのアルゴリズムを記述すること

121
00:10:12,800 --> 00:10:17,280
のポイントは、ゲームのプレイ方法に影響を与えることではなく、それでも単なる楽しい言葉遊びです。それは

122
00:10:17,280 --> 00:10:22,160
、他の場所でより意味のあるコンテキストでアルゴリズムを書くための筋肉を磨くことです。

123
00:10:37,920 --> 00:10:38,420
you

