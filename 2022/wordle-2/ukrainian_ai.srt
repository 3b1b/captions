1
00:00:00,000 --> 00:00:04,800
Минулого тижня я опублікував це відео про розгадування гри Wordle або, принаймні, спробу розв’язати її за

2
00:00:04,800 --> 00:00:09,920
допомогою теорії інформації. І я хотів швидко додати, як би ми це називали,

3
00:00:09,920 --> 00:00:14,240
додаток, зізнання, по суті, я просто хочу пояснити місце, де я зробив помилку.

4
00:00:14,240 --> 00:00:18,880
Виявилося, що в коді, який я запускав, щоб відтворити Wordle, а потім запустив усі алгоритми,

5
00:00:18,880 --> 00:00:23,040
щоб її вирішити та перевірити їх продуктивність, була дуже невелика помилка. І це одна з

6
00:00:23,040 --> 00:00:27,760
тих помилок, яка впливає на дуже невеликий відсоток випадків, тому її було легко пропустити, і вона

7
00:00:27,760 --> 00:00:32,080
має лише дуже незначний ефект, який здебільшого не має особливого значення. В основному це було

8
00:00:32,080 --> 00:00:36,880
пов’язано з тим, як ви призначаєте колір припущенню, яке містить кілька різних літер. Наприклад, якщо ви

9
00:00:36,880 --> 00:00:42,080
вгадали швидкість, а вірною відповіддю є дотримуватися, як розфарбувати ці два «е» з припущення?

10
00:00:42,800 --> 00:00:46,640
Так, як це працює з угодами Wordle, перше e має жовтий

11
00:00:46,640 --> 00:00:51,120
колір, а другий — сірий. Ви можете подумати, що перша відповідь збігається з

12
00:00:51,120 --> 00:00:56,000
чимось із правдивої відповіді, а сірість говорить вам, що другого e не існує.

13
00:00:56,000 --> 00:01:01,200
Навпаки, якби відповіддю було щось на кшталт стерти, обидва ці e були б забарвлені в жовтий

14
00:01:01,200 --> 00:01:05,920
колір, повідомляючи вам, що перше e знаходиться в іншому місці, а також є друге e в

15
00:01:05,920 --> 00:01:10,960
іншому місці. Подібним чином, якщо один із символів e потрапляє і він зелений, то другий символ

16
00:01:10,960 --> 00:01:17,280
буде сірим у випадку, коли у правдивій відповіді немає другого e, але він буде жовтим, якщо

17
00:01:17,280 --> 00:01:21,920
є другий e, і він просто в іншому Місцезнаходження. Коротше кажучи, десь по дорозі

18
00:01:21,920 --> 00:01:26,240
я випадково представив поведінку, яка трохи відрізняється від цих конвенцій.

19
00:01:26,960 --> 00:01:31,680
Чесно кажучи, це було справді тупо. По суті, в якийсь момент посередині проекту я хотів пришвидшити деякі

20
00:01:31,680 --> 00:01:35,840
обчислення, і я спробував невеликий трюк, щоб обчислити значення для цього шаблону між будь-якою

21
00:01:35,840 --> 00:01:40,640
даною парою слів, і ви знаєте, що я просто не Я дійсно не продумав це,

22
00:01:40,640 --> 00:01:45,600
і це ввело цю невелику зміну. Іронія полягає в тому, що врешті-решт справжній спосіб зробити все

23
00:01:45,600 --> 00:01:50,080
найшвидшим — це попередньо обчислити всі ці шаблони, щоб усе було лише пошуком, і тому не

24
00:01:50,080 --> 00:01:54,000
матиме значення, скільки часу потрібно для кожного з них, особливо якщо ви ми пишемо код з помилками,

25
00:01:54,000 --> 00:01:59,040
який важко читати, щоб це сталося. Знаєш, живеш і вчишся. Щодо того, як це впливає на

26
00:01:59,040 --> 00:02:03,760
фактичне відео, я маю на увазі, що істота насправді змінюється дуже мало. Звичайно, основні уроки про те, що

27
00:02:03,760 --> 00:02:08,160
таке інформація, що таке ентропія, все це залишається незмінним. Час від часу, якщо я

28
00:02:08,160 --> 00:02:13,360
показую на екрані якийсь розподіл, пов’язаний із заданим словом, цей розподіл насправді може бути

29
00:02:13,360 --> 00:02:18,000
дещо неправильним, оскільки деякі сегменти, пов’язані з різними шаблонами, мають містити або більше,

30
00:02:18,000 --> 00:02:22,960
або менше правильних відповідей. Навіть тоді це не з’явилося, тому що я дуже

31
00:02:22,960 --> 00:02:28,400
рідко показував слово з кількома літерами, які також потрапляли в регістр. Але однією

32
00:02:28,400 --> 00:02:33,680
з небагатьох суттєвих речей, які все-таки змінюються і які, мабуть, мають неабияке значення, був остаточний

33
00:02:33,680 --> 00:02:40,240
висновок щодо того, як, якщо ми хочемо знайти оптимальний можливий бал для списку відповідей

34
00:02:40,240 --> 00:02:45,120
Wordle, яке початкове припущення використовує такий алгоритм? У відео я сказав, що найкраща ефективність, яку

35
00:02:45,120 --> 00:02:50,160
я міг знайти, досягнута від відкриття словом кран, що було правдою лише в тому сенсі,

36
00:02:50,160 --> 00:02:55,120
що алгоритми грали в зовсім іншу гру. Після виправлення та повторного запуску всього, є

37
00:02:55,120 --> 00:03:00,000
інша відповідь щодо того, яке теоретично оптимальне перше припущення є для цього конкретного списку.

38
00:03:00,800 --> 00:03:06,560
І подивіться, я знаю, що ви знаєте, що суть відео полягає не в тому, щоб знайти якусь

39
00:03:06,560 --> 00:03:11,760
технічно оптимальну відповідь на якусь випадкову онлайн-гру. Сенс відео полягає в тому, щоб безсоромно

40
00:03:11,760 --> 00:03:16,240
підхопити тенденцію в Інтернеті потай атакувати людей за допомогою уроку теорії інформації.

41
00:03:16,240 --> 00:03:20,160
І це все добре, я підтримую цю частину. Але я знаю, як працює Інтернет, і для багатьох

42
00:03:20,160 --> 00:03:26,160
людей головним висновком було те, що найкраще відкриває гру Wordle. І я розумію, я ввійшов

43
00:03:26,160 --> 00:03:30,480
у це, тому що я розмістив це на мініатюрі, але, мабуть, ви можете мені вибачити, якщо я хочу

44
00:03:30,480 --> 00:03:35,120
додати тут невелике виправлення. І більш вагомою причиною повернутися до всього цього насправді є те, що я

45
00:03:35,120 --> 00:03:39,440
ніколи насправді не говорив про те, що увійшло в цей остаточний аналіз. І це цікаво

46
00:03:39,440 --> 00:03:44,560
як самостійний підурок, тому це варто зробити тут. Тепер, якщо ви пам’ятаєте, більшу частину

47
00:03:44,560 --> 00:03:49,120
нашого останнього відео ми витратили на те, щоб спробувати написати алгоритм для вирішення Wordle,

48
00:03:49,120 --> 00:03:54,320
який не використовує офіційний список усіх можливих відповідей. На мій смак, це трохи схоже

49
00:03:54,320 --> 00:03:59,280
на переобладнання тестового набору, і що ще цікавіше, це створювати щось стійке. Ось чому

50
00:03:59,280 --> 00:04:03,920
ми пройшли весь процес розгляду відносної частоти слів в англійській мові, щоб отримати деяке

51
00:04:03,920 --> 00:04:09,120
уявлення про те, наскільки ймовірно кожне з них буде включено в остаточну відповідь.

52
00:04:09,120 --> 00:04:13,680
Однак для того, що ми робимо тут, коли ми просто намагаємося знайти абсолютно найкращий

53
00:04:13,680 --> 00:04:19,120
період продуктивності, я включаю цей офіційний список і просто безсоромно переобладную тестовий набір,

54
00:04:19,120 --> 00:04:23,520
тобто ми точно знаємо, чи слово включено чи ні, і ми можемо призначити однакову

55
00:04:23,520 --> 00:04:28,560
ймовірність кожному з них. Якщо ви пам’ятаєте, першим кроком у всьому цьому було сказати

56
00:04:28,560 --> 00:04:34,080
для конкретного початкового припущення, можливо, щось на зразок мого старого улюбленого, журавля, наскільки ймовірно,

57
00:04:34,080 --> 00:04:38,560
що ви побачите кожен із можливих візерунків? І в цьому контексті, де ми безсоромно

58
00:04:38,560 --> 00:04:43,440
переповнюємо список відповідей wordle, все, що включає, це підрахувати, скільки можливих відповідей дає

59
00:04:43,440 --> 00:04:48,240
кожен із цих шаблонів. І, звісно, більшість нашого часу було витрачено на таку

60
00:04:48,240 --> 00:04:53,040
кумедну формулу для кількісного визначення обсягу інформації, яку ви отримаєте від цього припущення, яке

61
00:04:53,040 --> 00:04:57,520
в основному передбачає перегляд кожного з цих відер і визначення того, скільки інформації ви

62
00:04:57,520 --> 00:05:02,720
отримаєте, якщо цей логарифмічний вираз, який є химерним способом сказати, скільки разів ви

63
00:05:02,720 --> 00:05:08,160
скоротили б свій простір можливостей наполовину, якби спостерігали за заданою закономірністю. Ми беремо середнє зважене

64
00:05:08,160 --> 00:05:12,800
значення всіх цих показників, і це дає нам міру того, скільки ми очікуємо дізнатися з цього першого припущення.

65
00:05:12,800 --> 00:05:17,920
За мить ми заглибимося глибше, але якщо ви просто пошукаєте серед усіх 13 000 різних слів,

66
00:05:17,920 --> 00:05:22,880
з яких ви могли б почати, і запитайте, яке з них містить найбільшу очікувану інформацію, виявиться, що

67
00:05:22,880 --> 00:05:28,400
найкраща можлива відповідь - це злітати, що не Справді це не схоже на справжнє слово, але

68
00:05:28,400 --> 00:05:36,640
я думаю, що це застарілий термін для дитинчати яструба. 15 найпопулярніших учасників за цим показником

69
00:05:36,640 --> 00:05:41,680
виглядають так, але це не обов’язково найкращі початкові припущення, тому що вони

70
00:05:41,680 --> 00:05:46,960
розглядають лише один крок із евристикою очікуваної інформації, щоб спробувати оцінити справжній результат.

71
00:05:46,960 --> 00:05:52,000
Але є достатньо шаблонів, щоб ми могли виконати вичерпний пошук у два кроки.

72
00:05:52,000 --> 00:05:56,640
Наприклад, припустімо, що ви відкрили з ширянням, і візерунок, який ви випадково побачили, був найімовірнішим,

73
00:05:56,640 --> 00:06:02,240
усі сірі, тоді ви можете запустити ідентичний аналіз із цієї точки. Для заданого запропонованого другого

74
00:06:02,240 --> 00:06:07,360
припущення, щось на зразок кошеня, який розподіл між усіма шаблонами в тому обмеженому випадку, де ми

75
00:06:07,360 --> 00:06:11,920
обмежені лише словами, які створять усі сірі відтінки для ширяння, а потім ми вимірюємо рівномірність

76
00:06:11,920 --> 00:06:17,440
цього розподілу за допомогою цього очікуваного інформаційну формулу, і ми робимо це для всіх 13

77
00:06:17,440 --> 00:06:23,680
000 можливих слів, які ми можемо використати як друге припущення. Роблячи це, ми можемо знайти оптимальне

78
00:06:23,680 --> 00:06:28,080
друге припущення в цьому сценарії та кількість інформації, яку ми повинні були отримати від нього,

79
00:06:28,640 --> 00:06:32,880
і якщо ми промиємо, промиємо та повторимо, і зробимо це для всіх різних можливих шаблонів,

80
00:06:32,880 --> 00:06:37,680
які ви можете побачити, ми отримаємо повна карта всіх найкращих можливих других припущень разом із

81
00:06:37,680 --> 00:06:46,640
очікуваною інформацією про кожне. Звідси, якщо ви візьмете середнє зважене значення всіх цих значень другого

82
00:06:46,640 --> 00:06:51,760
кроку, зважене відповідно до того, наскільки ймовірно ви потрапите в це відро, це дасть вам

83
00:06:51,760 --> 00:06:57,440
міру того, скільки інформації ви, ймовірно, отримаєте від припущень, що злетять після другий крок. Коли

84
00:06:57,440 --> 00:07:02,400
ми використовуємо цей двоетапний показник як наш новий засіб рейтингу, список трохи змінюється. Soar більше

85
00:07:02,400 --> 00:07:09,040
не займає перше місце, воно повертається до 14-го, а натомість те, що піднімається на вершину, вбивається. Знову ж

86
00:07:09,040 --> 00:07:16,000
таки, це не дуже реально, і схоже, що це британський термін для лопати, яка використовується для різання дерну.

87
00:07:16,000 --> 00:07:22,320
Гаразд, але, як бачите, це дуже напружена боротьба між усіма цими головними претендентами за те,

88
00:07:22,320 --> 00:07:27,600
хто отримає більше інформації після цих двох кроків. І все одно це не обов’язково найкращі

89
00:07:27,600 --> 00:07:32,000
початкові припущення, тому що інформація — це лише евристика, вона не повідомляє нам фактичний рахунок,

90
00:07:32,000 --> 00:07:37,120
якщо ви дійсно граєте в гру. Що я зробив, так це я запустив симуляцію гри

91
00:07:37,120 --> 00:07:44,400
у всі 2315 можливих словесних ігор з усіма можливими відповідями в перших 250 із цього списку.

92
00:07:46,160 --> 00:07:51,120
І роблячи це, дивлячись на те, як вони справді працюють, той, хто в кінцевому

93
00:07:51,120 --> 00:08:03,280
підсумку отримав найкращий бал, виявляється Salé, що є альтернативним варіантом написання Salé, який

94
00:08:04,240 --> 00:08:10,080
є легким середньовічним шоломом. Гаразд, якщо вам це здасться надто фальшивим, а мені

95
00:08:10,080 --> 00:08:15,760
це так, ви будете раді дізнатися, що Trace і Crate дають майже однакову продуктивність.

96
00:08:16,240 --> 00:08:21,040
Перевага кожного з них полягає в тому, що він, очевидно, є справжнім словом, тому є один день, коли ви зрозумієте

97
00:08:21,040 --> 00:08:26,480
його правильно з першого разу, оскільки обидва є фактичними відповідями на основі слів. Цей перехід від сортування на

98
00:08:26,480 --> 00:08:31,200
основі найкращої двокрокової ентропії до сортування на основі найнижчого середнього балу також похитує список, але

99
00:08:31,200 --> 00:08:36,000
не так сильно. Наприклад, Salé раніше займав третє місце, перш ніж піднятися на вершину, а Crate

100
00:08:36,000 --> 00:08:41,200
і Trace були як четвертим, так і п’ятим. Якщо вам цікаво, ви можете отримати

101
00:08:41,200 --> 00:08:45,120
трохи кращу продуктивність звідси, зробивши невеликий брутфорс. Є дуже гарна публікація в

102
00:08:45,120 --> 00:08:49,600
блозі Джонатана Олсона, якщо вам це цікаво, де він також дозволяє вам досліджувати, якими

103
00:08:49,600 --> 00:08:53,600
є оптимальні наступні припущення для кількох початкових слів на основі цих оптимальних алгоритмів.

104
00:08:55,040 --> 00:08:59,040
Але якщо відійти від усього цього, деякі люди кажуть мені, що ця цитата руйнує

105
00:08:59,040 --> 00:09:03,920
гру, якщо надмірно аналізувати її таким чином і намагатися знайти оптимальне початкове припущення.

106
00:09:03,920 --> 00:09:07,680
Ви знаєте, це виглядає дещо брудно, якщо ви використовуєте це початкове припущення після того, як його вивчили, і це

107
00:09:07,680 --> 00:09:12,400
здається неефективним, якщо ви цього не робите. Але справа в тому, що я насправді не думаю, що це найкраще

108
00:09:12,400 --> 00:09:16,880
відкриття для людини, яка грає в гру. По-перше, вам потрібно знати, якою є оптимальна друга

109
00:09:16,880 --> 00:09:22,160
здогадка для кожного шаблону, який ви бачите. І що ще важливіше, все це відбувається

110
00:09:22,160 --> 00:09:27,440
в умовах, коли ми абсурдно не відповідаємо офіційному списку відповідей Wordle. У той момент,

111
00:09:27,440 --> 00:09:32,240
коли, скажімо, New York Times вирішить змінити список під капотом, усе це вилетить у

112
00:09:32,240 --> 00:09:36,720
вікно. Те, як ми, люди, граємо в гру, просто сильно відрізняється від того, що робить будь-який

113
00:09:36,720 --> 00:09:41,440
із цих алгоритмів. Ми не запам’ятали список слів, ми не робимо вичерпних пошуків, ми отримуємо

114
00:09:41,440 --> 00:09:45,520
інтуїцію з таких речей, як те, що таке голосні та як вони розміщені.

115
00:09:45,520 --> 00:09:50,080
Насправді я був би дуже радий, якби ті з вас, хто дивиться це відео, одразу

116
00:09:50,080 --> 00:09:54,880
забули, що є технічно найкращим початковим припущенням, і натомість згадали речі, наприклад, як ви

117
00:09:54,880 --> 00:09:59,440
кількісно оцінюєте інформацію, або той факт, що вам слід остерігатися, коли жадібний алгоритм не

118
00:09:59,440 --> 00:10:02,960
досягає найкращої в усьому світі продуктивності, яку ви могли б отримати від глибшого пошуку.

119
00:10:03,520 --> 00:10:07,920
Принаймні на мій смак, радість від написання алгоритмів, щоб спробувати грати в ігри, насправді мало впливає на

120
00:10:07,920 --> 00:10:12,800
те, як мені подобається грати в ці ігри як людині. Сенс написання алгоритмів для всього цього полягає не

121
00:10:12,800 --> 00:10:17,280
в тому, щоб впливати на те, як ми граємо в гру, це все одно весела гра слів. Це

122
00:10:17,280 --> 00:10:22,160
для того, щоб відточити наші м’язи для написання алгоритмів у більш значущих контекстах деінде.

123
00:10:37,920 --> 00:10:38,420
you

