1
00:00:00,000 --> 00:00:02,874
上周我发布了这段关于解决 Wordle 

2
00:00:02,874 --> 00:00:06,180
游戏的视频，或者至少尝试使用信息论来解决它。 

3
00:00:06,580 --> 00:00:09,780
我想快速添加一个，我们应该称之为什么，附录？ 

4
00:00:10,080 --> 00:00:10,660
坦白？ 

5
00:00:11,020 --> 00:00:13,900
基本上我只是想解释一下我犯错误的地方。 

6
00:00:14,460 --> 00:00:17,237
事实证明，我运行的重新创建 Wordle 

7
00:00:17,237 --> 00:00:20,941
的代码中有一个非常小的错误，然后运行所有算法来解决它并测

8
00:00:20,941 --> 00:00:22,000
试它们的性能。 

9
00:00:22,600 --> 00:00:26,550
它是影响极小 比例案例的错误之一，因此很容易被忽视

10
00:00:26,550 --> 00:00:30,500
，而且它的影响 非常轻微，在大多数情况下并不重要。

11
00:00:31,220 --> 00:00:36,360
基本上，它与如 何为包含多个不同字母的猜测分配颜色有关。

12
00:00:36,520 --> 00:00:38,736
例如，如果您 猜测速度并且正确答案是 

13
00:00:38,736 --> 00:00:42,120
abide，那么您应该如何根据猜测对这两个 e 进行着色？

14
00:00:43,060 --> 00:00:46,455
它与 Wordle 约定的工作方式是第一个 

15
00:00:46,455 --> 00:00:49,080
e 为黄 色，第二个 e 为灰色。

16
00:00:49,600 --> 00:00:52,487
您可能会认为第一个 e 与真 实答案中的

17
00:00:52,487 --> 00:00:55,520
某些内容相匹配，灰色告诉您没有第二个 e。

18
00:00:55,520 --> 00:00:59,049
相比之下，如果答案类似于擦除，那么这两个 

19
00:00:59,049 --> 00:01:02,410
e 都会被染成黄色 ，告诉您第一个 e 

20
00:01:02,410 --> 00:01:06,780
位于不同的位置，并且第二个 e 也位于不 同的位置。

21
00:01:07,300 --> 00:01:11,744
类似地，如果其中一个 e 命中并且它是绿色的，那么在真实答 

22
00:01:11,744 --> 00:01:14,706
案没有第二个 e 的情况下，第二个 e 

23
00:01:14,706 --> 00:01:18,854
将是灰色的，但在有第二个 e 并且只是在不同的情况下，它

24
00:01:18,854 --> 00:01:20,040
会是黄色的地点。

25
00:01:20,700 --> 00:01:25,063
长话短说，在这个过程 中，我不小

26
00:01:25,063 --> 00:01:29,700
心引入了与这些约定略有不同的行为。

27
00:01:29,700 --> 00:01:30,140
老实说，这真的很愚蠢。

28
00:01:30,140 --> 00:01:33,220
基本上在项目中间的某个时刻，我想加快一些 

29
00:01:33,220 --> 00:01:37,326
计算速度，并且我尝试了一些小技巧来计算任何给定单词对之 

30
00:01:37,326 --> 00:01:39,966
间的模式值，你知道我只是没有这样做。

31
00:01:39,966 --> 00:01:43,340
并没有真正考虑清楚， 它引入了这个微小的变化。

32
00:01:43,340 --> 00:01:45,790
具有讽刺意味的是，最终让事情变得最快的 

33
00:01:45,790 --> 00:01:48,854
实际方法是预先计算所有这些模式，这样一切都只是一个

34
00:01:48,854 --> 00:01:51,918
查找，所以完成每个 模式需要多长时间并不重要，特别

35
00:01:51,918 --> 00:01:54,369
是如果你为了实现这一目标，我们正在编写 

36
00:01:54,369 --> 00:01:55,840
难以阅读的有缺陷的代码。

37
00:01:56,400 --> 00:01:57,240
你知道，你生活并学习。

38
00:01:58,040 --> 00:02:00,120
至于这如何影响实际 视频，我的

39
00:02:00,120 --> 00:02:02,340
意思是几乎没有实质内容发生变化。

40
00:02:02,660 --> 00:02:06,560
当然，关于什么是信息 、什么是熵的主要教训都保持不变。

41
00:02:06,860 --> 00:02:11,346
如果我时不时地在屏幕 上显示与给定单词相关的一些分

42
00:02:11,346 --> 00:02:15,833
布，那么该分布实际上可能会 有点偏差，因为与各种模

43
00:02:15,833 --> 00:02:20,320
式相关的一些存储桶应该包含更多 或更少的真实答案。

44
00:02:20,840 --> 00:02:23,587
即使如此，它也没有真正出现，因为我很少会显 

45
00:02:23,587 --> 00:02:26,960
示一个包含多个字母的单词，这些字母也符合这种边缘情况。

46
00:02:27,680 --> 00:02:32,606
但是，确 实发生变化并且可以说确实很重要的极少数实

47
00:02:32,606 --> 00:02:37,533
质性事情之一是 最终结论：如果我们想找到单词答案列

48
00:02:37,533 --> 00:02:42,460
表的最佳可能得分，这样 的算法会使用什么开局猜测？

49
00:02:43,080 --> 00:02:45,650
在视频中，我说我能找到的最佳性 

50
00:02:45,650 --> 00:02:50,149
能来自于以“起重机”一词开头，这仅在算法正在玩一个略有 

51
00:02:50,149 --> 00:02:52,560
不同的游戏的意义上才是正确的。

52
00:02:53,160 --> 00:02:56,578
修复并重新运行后，对于这个特 定列表的理论

53
00:02:56,578 --> 00:03:00,160
上最佳的第一个猜测是什么，有一个不同的答案。

54
00:03:01,000 --> 00:03:06,850
看，我知道您知道视频的重点不是为某些随机在线游戏找 

55
00:03:06,850 --> 00:03:09,100
到技术上的最佳答案。

56
00:03:09,460 --> 00:03:12,680
该视频的目的是厚颜无耻地搭 上互联网

57
00:03:12,680 --> 00:03:15,900
潮流的潮流，通过信息论课程偷袭人们。

58
00:03:16,320 --> 00:03:18,000
这一切都很好，我支持这一点。

59
00:03:18,200 --> 00:03:21,044
但我知道互联网是如何运作的，对于很多人 

60
00:03:21,044 --> 00:03:24,600
来说，一个主要的收获是什么是游戏单词的最佳开场白。

61
00:03:25,280 --> 00:03:28,507
我明白了，我之所 以谈到这一点是因为我把它放在缩略图

62
00:03:28,507 --> 00:03:31,860
中，但如果我想在这里添加一点更正，想 必你可以原谅我。

63
00:03:31,980 --> 00:03:35,327
实际上，回到这一切的一个更有意义的原因 

64
00:03:35,327 --> 00:03:38,340
是，我从未真正谈论过最终分析的内容。

65
00:03:38,840 --> 00:03:42,420
作为一门子课， 它本身就很有趣，所以值得在这里做。

66
00:03:43,140 --> 00:03:46,204
现在，如果您还记得的话，我们 上一个视频的大部分

67
00:03:46,204 --> 00:03:49,268
时间都花在尝试编写一个算法来解决 wordle 

68
00:03:49,268 --> 00:03:52,460
的挑 战上，该算法没有使用所有可能答案的官方列表。

69
00:03:52,980 --> 00:03:55,655
根据我的口味，这感觉有 点像过度拟合

70
00:03:55,655 --> 00:03:58,480
测试集，更有趣的是构建具有弹性的东西。

71
00:03:58,900 --> 00:04:04,295
这就是 为什么我们经历了查看英语中相对词频的整个过程，以 

72
00:04:04,295 --> 00:04:08,760
得出每个词被包含作为最终答案的可能性的一些概念。

73
00:04:09,400 --> 00:04:13,376
然而，对于我们在这里所做的事情，我们只是试图找到一个

74
00:04:13,376 --> 00:04:17,353
绝对最佳的 性能时期，我将合并该官方列表，并且无耻地

75
00:04:17,353 --> 00:04:21,330
过度拟合测试集，也就 是说，我们确定地知道一个单词是

76
00:04:21,330 --> 00:04:25,460
否包含或不包含，我们可以为每一个 分配一个统一的概率。

77
00:04:26,440 --> 00:04:29,483
如果您还记得的话，所有这一切的第一步是 

78
00:04:29,483 --> 00:04:34,049
针对特定的开局猜测，也许像我以前最喜欢的起重机一样，您看到 

79
00:04:34,049 --> 00:04:36,180
每种可能模式的可能性有多大？

80
00:04:36,680 --> 00:04:39,245
在这种情况下，我们无耻地过度拟 

81
00:04:39,245 --> 00:04:43,736
合单词答案列表，所涉及的只是计算有多少可能的答案给出了 

82
00:04:43,736 --> 00:04:45,340
这些模式中的每一种。

83
00:04:45,980 --> 00:04:49,010
当然，我们的大部分时间都花在这种 

84
00:04:49,010 --> 00:04:53,824
看起来很有趣的公式上，以量化您将从这种猜测中获得的信 

85
00:04:53,824 --> 00:04:58,460
息量，该猜测基本上涉及遍历每个桶并说出您将获得多少 

86
00:04:58,460 --> 00:05:03,274
信息这个对数表达式是一种奇特的方式，表示如果您观察到 

87
00:05:03,274 --> 00:05:06,840
给定的模式，您会将可能性空间减半多少次。

88
00:05:07,600 --> 00:05:10,318
我们对所有这 些进行加权平均，它可以衡

89
00:05:10,318 --> 00:05:13,180
量我们期望从第一次猜测中学到多少东西 。

90
00:05:13,560 --> 00:05:18,046
稍后我们将对此进行更深入的探讨，但如果您只是简单地搜索所有 

91
00:05:18,046 --> 00:05:21,934
13,00 0 个可以开始使用的不同单词，并询问哪个

92
00:05:21,934 --> 00:05:25,672
单词具有最高的预期信息，结果会发 现最好的答案是 

93
00:05:25,672 --> 00:05:30,158
soar，而这并不会&#39;看起来确实不像一个真正的词， 

94
00:05:30,158 --> 00:05:33,000
但我猜这是一个过时的术语，指的是小鹰。

95
00:05:34,040 --> 00:05:38,472
按此指标计算的前 15 个开局碰巧看起来像这

96
00:05:38,472 --> 00:05:41,898
样，但这些不一定是最好的开局猜测 

97
00:05:41,898 --> 00:05:47,540
，因为它们只是通过预期信息的启发式来尝试估计真实分 数。

98
00:05:47,920 --> 00:05:51,680
但我们可以通过两步进行详尽的搜索的模式很少。

99
00:05:52,160 --> 00:05:56,401
例如，假设您以飙升打开，并且您碰巧看到的模式是最有可能

100
00:05:56,401 --> 00:06:00,800
的模式， 全是灰色，那么您可以从该点开始运行相同的分析。

101
00:06:01,320 --> 00:06:03,904
对于给定的提议的第 二个猜测，比如 

102
00:06:03,904 --> 00:06:07,924
kitty，在这种受限情况下，所有模式的分布是什么，在 

103
00:06:07,924 --> 00:06:10,795
这种情况下，我们仅限于会产生 soar 

104
00:06:10,795 --> 00:06:13,092
的所有灰色的单词，然后我们使用 

105
00:06:13,092 --> 00:06:16,682
这个预期来测量该分布的平坦度信息公式，我们对所有 

106
00:06:16,682 --> 00:06:20,702
13,000 个可能 的单词都这样做，我们可以将其用作第

107
00:06:20,702 --> 00:06:21,420
二次猜测。

108
00:06:22,120 --> 00:06:26,390
通过这样做，我们可以找 到该场景中的最佳第二次猜测以及我

109
00:06:26,390 --> 00:06:30,659
们期望从中获得的信息量，如果 我们清洗并重复，并对您可能

110
00:06:30,659 --> 00:06:33,252
看到的所有不同的可能模式执行此操 

111
00:06:33,252 --> 00:06:37,522
作，我们会得到一个所有可能的最佳第二次猜测的完整地图以及

112
00:06:37,522 --> 00:06:39,200
每个 猜测的预期信息。

113
00:06:43,180 --> 00:06:46,985
从那里开始，如果您对所有第二步值进行 

114
00:06:46,985 --> 00:06:52,193
加权平均值，并根据您落入该桶的可能性进行加权，它可 

115
00:06:52,193 --> 00:06:56,800
以衡量您在猜测飙升后可能获得多少信息。第二步。

116
00:06:57,380 --> 00:06:59,580
当我 们使用这个两步指标作为新的

117
00:06:59,580 --> 00:07:01,780
排名方法时，列表会发生一些变化。

118
00:07:02,080 --> 00:07:07,660
Soa r不再是第一名，跌回第14名，而上升的则被淘汰。

119
00:07:08,640 --> 00:07:12,815
再说一 次，感觉不太真实，而且看起来它是

120
00:07:12,815 --> 00:07:17,200
一个英国术语，指的是用于切割草皮的铁锹 。

121
00:07:17,200 --> 00:07:21,100
好吧，但正如您所看到的，所有这些顶级竞争者之间的

122
00:07:21,100 --> 00:07:25,000
竞争非常激烈 ，谁在这两步之后获得了最多的信息。

123
00:07:25,700 --> 00:07:29,774
即便如此，这些不一定是最好 的开局猜测，因为信息只是启

124
00:07:29,774 --> 00:07:34,000
发式的，它并不能告诉我们如果 你真的玩游戏的话实际得分。

125
00:07:34,580 --> 00:07:38,268
我所做的是模拟玩所有 2315 个 

126
00:07:38,268 --> 00:07:43,185
可能的文字游戏，所有可能的答案都在此列表中的前 

127
00:07:43,185 --> 00:07:44,620
250 个中。

128
00:07:46,460 --> 00:07:52,783
通过这样做，看看它们的实际表现，最终以微弱优势

129
00:07:52,783 --> 00:07:59,381
获得最高分的结 果是 Salé，它是 Salé 

130
00:07:59,381 --> 00:08:05,980
的另一种拼写，Salé 是 一种轻型中世纪头盔。

131
00:08:06,980 --> 00:08:10,795
好吧，如果这对您来说有点太假了（对我来说也是如 

132
00:08:10,795 --> 00:08:14,770
此），您会很高兴知道 Trace 和 Crate 

133
00:08:14,770 --> 00:08:16,360
提供几乎相同的性能。

134
00:08:16,360 --> 00:08:20,210
它们中的每一个都有明显是真实单词的好处，所以有一天

135
00:08:20,210 --> 00:08:24,060
你第一次猜 测就正确，因为两者都是真实的单词答案。

136
00:08:25,020 --> 00:08:28,660
从基于最佳两步熵排序 到基于最低平均分数排序的

137
00:08:28,660 --> 00:08:32,460
这一转变也对列表产生了影响，但幅度 没有那么大。

138
00:08:32,659 --> 00:08:35,801
例如，Salé 在跃居榜首之前曾排名第三，而 

139
00:08:35,801 --> 00:08:39,080
Crate 和 Trace 分别排名第四和第五。

140
00:08:39,640 --> 00:08:41,614
如果您好奇，您可以通过进行 一

141
00:08:41,614 --> 00:08:43,720
些暴力强制来获得稍微更好的性能。

142
00:08:44,100 --> 00:08:47,531
如果您对此感到好奇，乔纳 森·奥尔森（Jonathan 

143
00:08:47,531 --> 00:08:49,737
Olson）有一篇非常好的博客文章 

144
00:08:49,737 --> 00:08:52,924
，他还让您探索基于这些最佳算法的一些起始词的最佳以下

145
00:08:52,924 --> 00:08:53,660
猜测是什么。

146
00:08:55,180 --> 00:08:59,244
不过，退一步来说，有些人告诉我，像这样过度 

147
00:08:59,244 --> 00:09:02,940
分析并尝试找到最佳的开局猜测会毁掉游戏。

148
00:09:02,940 --> 00:09:06,300
你知道，如果你在学习之后使用这个开局猜测，感

149
00:09:06,300 --> 00:09:09,660
觉有点肮脏，如果你 不这样做，感觉效率很低。

150
00:09:09,800 --> 00:09:12,574
但问题是，我实际上并不认为这对于人类玩 

151
00:09:12,574 --> 00:09:14,100
游戏来说是最好的开局。

152
00:09:14,100 --> 00:09:19,680
一方面，您需要知道您看到的每种 模式的最佳第二次猜测是什么。

153
00:09:20,260 --> 00:09:23,235
更重要的是，所有这一切都是在 我们与官方

154
00:09:23,235 --> 00:09:26,360
单词答案列表荒谬地过度拟合的情况下发生的。

155
00:09:26,580 --> 00:09:29,730
比如说，当 《纽约时报》选择更改该

156
00:09:29,730 --> 00:09:32,880
列表的内容时，所有这些都将 消失。

157
00:09:33,580 --> 00:09:37,680
我们人类玩游戏的方式与这些算法的做法非 常不同。

158
00:09:38,020 --> 00:09:41,216
我们没有记住单词列表，我们没有进行详尽的搜索， 

159
00:09:41,216 --> 00:09:45,080
我们从诸如元音是什么以及它们如何放置之类的事情中获得直觉。

160
00:09:45,640 --> 00:09:50,049
实际上，如果你们观看此视频的人立即忘记技术上最好 

161
00:09:50,049 --> 00:09:54,458
的开局猜测是什么，而是记住诸如如何量化信息之类的 

162
00:09:54,458 --> 00:09:59,043
事情，或者当贪婪时您应该注意的事实，我会非常高兴 。

163
00:09:59,043 --> 00:10:03,100
算法达不到从更深入的搜索中获得的全局最佳性能。

164
00:10:03,700 --> 00:10:08,206
至少就我的口味而言，编写算法来尝试玩游戏的乐趣实际上与我作 

165
00:10:08,206 --> 00:10:10,760
为人类如何玩这些游戏几乎没有关系。

166
00:10:11,300 --> 00:10:14,040
为这一切编写算法的目的不 是影响我们玩游

167
00:10:14,040 --> 00:10:16,780
戏的方式，它仍然只是一个有趣的文字游戏。

168
00:10:17,100 --> 00:10:18,851
这是 为了磨练我们的肌肉，以便

169
00:10:18,851 --> 00:10:20,720
在其他更有意义的环境中编写算法。

