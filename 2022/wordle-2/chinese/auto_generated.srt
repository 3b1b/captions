1
00:00:00,000 --> 00:00:02,891
上周我发布了这段关于解决 Wordle

2
00:00:02,891 --> 00:00:06,216
游戏的视频，或者至少尝试使用信息论来解决它。

3
00:00:06,216 --> 00:00:09,920
我想快速添加一个，我们应该称之为什么，附录？

4
00:00:09,920 --> 00:00:10,685
坦白？

5
00:00:10,685 --> 00:00:14,240
基本上我只是想解释一下我犯错误的地方。

6
00:00:14,240 --> 00:00:17,119
事实证明，我运行的重新创建 Wordle

7
00:00:17,119 --> 00:00:20,958
的代码中有一个非常小的错误，然后运行所有算法来解决它并测

8
00:00:20,958 --> 00:00:22,055
试它们的性能。

9
00:00:22,055 --> 00:00:26,515
它是影响极小 比例案例的错误之一，因此很容易被忽视

10
00:00:26,515 --> 00:00:30,976
，而且它的影响 非常轻微，在大多数情况下并不重要。

11
00:00:30,976 --> 00:00:36,223
基本上，它与如 何为包含多个不同字母的猜测分配颜色有关。

12
00:00:36,223 --> 00:00:38,541
例如，如果您 猜测速度并且正确答案是

13
00:00:38,541 --> 00:00:42,080
abide，那么您应该如何根据猜测对这两个 e 进行着色？

14
00:00:42,080 --> 00:00:45,928
它与 Wordle 约定的工作方式是第一个

15
00:00:45,928 --> 00:00:48,902
e 为黄 色，第二个 e 为灰色。

16
00:00:48,902 --> 00:00:52,364
您可能会认为第一个 e 与真 实答案中的

17
00:00:52,364 --> 00:00:56,000
某些内容相匹配，灰色告诉您没有第二个 e。

18
00:00:56,000 --> 00:00:59,438
相比之下，如果答案类似于擦除，那么这两个

19
00:00:59,438 --> 00:01:02,712
e 都会被染成黄色 ，告诉您第一个 e

20
00:01:02,712 --> 00:01:06,970
位于不同的位置，并且第二个 e 也位于不 同的位置。

21
00:01:06,970 --> 00:01:11,551
类似地，如果其中一个 e 命中并且它是绿色的，那么在真实答

22
00:01:11,551 --> 00:01:14,605
案没有第二个 e 的情况下，第二个 e

23
00:01:14,605 --> 00:01:18,880
将是灰色的，但在有第二个 e 并且只是在不同的情况下，它

24
00:01:18,880 --> 00:01:20,102
会是黄色的地点。

25
00:01:20,102 --> 00:01:23,078
长话短说，在这个过程 中，我不小

26
00:01:23,078 --> 00:01:26,240
心引入了与这些约定略有不同的行为。

27
00:01:26,240 --> 00:01:28,416
老实说，这真的很愚蠢。

28
00:01:28,416 --> 00:01:31,806
基本上在项目中间的某个时刻，我想加快一些

29
00:01:31,806 --> 00:01:36,326
计算速度，并且我尝试了一些小技巧来计算任何给定单词对之

30
00:01:36,326 --> 00:01:41,007
间的模式值，你知道我只是没有这样做。并没有真正考虑清楚，

31
00:01:41,007 --> 00:01:42,944
它引入了这个微小的变化。

32
00:01:42,944 --> 00:01:45,491
具有讽刺意味的是，最终让事情变得最快的

33
00:01:45,491 --> 00:01:48,675
实际方法是预先计算所有这些模式，这样一切都只是一个

34
00:01:48,675 --> 00:01:51,859
查找，所以完成每个 模式需要多长时间并不重要，特别

35
00:01:51,859 --> 00:01:54,406
是如果你为了实现这一目标，我们正在编写

36
00:01:54,406 --> 00:01:55,934
难以阅读的有缺陷的代码。

37
00:01:55,934 --> 00:01:57,665
你知道，你生活并学习。

38
00:01:57,665 --> 00:01:59,853
至于这如何影响实际 视频，我的

39
00:01:59,853 --> 00:02:02,186
意思是几乎没有实质内容发生变化。

40
00:02:02,186 --> 00:02:06,617
当然，关于什么是信息 、什么是熵的主要教训都保持不变。

41
00:02:06,617 --> 00:02:11,014
如果我时不时地在屏幕 上显示与给定单词相关的一些分

42
00:02:11,014 --> 00:02:15,411
布，那么该分布实际上可能会 有点偏差，因为与各种模

43
00:02:15,411 --> 00:02:19,808
式相关的一些存储桶应该包含更多 或更少的真实答案。

44
00:02:19,808 --> 00:02:23,391
即使如此，它也没有真正出现，因为我很少会显

45
00:02:23,391 --> 00:02:27,789
示一个包含多个字母的单词，这些字母也符合这种边缘情况。

46
00:02:27,789 --> 00:02:32,744
但是，确 实发生变化并且可以说确实很重要的极少数实

47
00:02:32,744 --> 00:02:37,699
质性事情之一是 最终结论：如果我们想找到单词答案列

48
00:02:37,699 --> 00:02:42,654
表的最佳可能得分，这样 的算法会使用什么开局猜测？

49
00:02:42,654 --> 00:02:45,443
在视频中，我说我能找到的最佳性

50
00:02:45,443 --> 00:02:50,323
能来自于以“起重机”一词开头，这仅在算法正在玩一个略有

51
00:02:50,323 --> 00:02:52,937
不同的游戏的意义上才是正确的。

52
00:02:52,937 --> 00:02:56,386
修复并重新运行后，对于这个特 定列表的理论

53
00:02:56,386 --> 00:03:00,000
上最佳的第一个猜测是什么，有一个不同的答案。

54
00:03:00,000 --> 00:03:06,437
看，我知道您知道视频的重点不是为某些随机在线游戏找

55
00:03:06,437 --> 00:03:08,913
到技术上的最佳答案。

56
00:03:08,913 --> 00:03:12,576
该视频的目的是厚颜无耻地搭 上互联网

57
00:03:12,576 --> 00:03:16,240
潮流的潮流，通过信息论课程偷袭人们。

58
00:03:16,240 --> 00:03:18,014
这一切都很好，我支持这一点。

59
00:03:18,014 --> 00:03:21,027
但我知道互联网是如何运作的，对于很多人

60
00:03:21,027 --> 00:03:24,793
来说，一个主要的收获是什么是游戏单词的最佳开场白。

61
00:03:24,793 --> 00:03:28,197
我明白了，我之所 以谈到这一点是因为我把它放在缩略图

62
00:03:28,197 --> 00:03:31,731
中，但如果我想在这里添加一点更正，想 必你可以原谅我。

63
00:03:31,731 --> 00:03:35,275
实际上，回到这一切的一个更有意义的原因

64
00:03:35,275 --> 00:03:38,464
是，我从未真正谈论过最终分析的内容。

65
00:03:38,464 --> 00:03:42,688
作为一门子课， 它本身就很有趣，所以值得在这里做。

66
00:03:42,688 --> 00:03:45,882
现在，如果您还记得的话，我们 上一个视频的大部分

67
00:03:45,882 --> 00:03:49,076
时间都花在尝试编写一个算法来解决 wordle

68
00:03:49,076 --> 00:03:52,404
的挑 战上，该算法没有使用所有可能答案的官方列表。

69
00:03:52,404 --> 00:03:55,456
根据我的口味，这感觉有 点像过度拟合

70
00:03:55,456 --> 00:03:58,678
测试集，更有趣的是构建具有弹性的东西。

71
00:03:58,678 --> 00:04:04,391
这就是 为什么我们经历了查看英语中相对词频的整个过程，以

72
00:04:04,391 --> 00:04:09,120
得出每个词被包含作为最终答案的可能性的一些概念。

73
00:04:09,120 --> 00:04:13,143
然而，对于我们在这里所做的事情，我们只是试图找到一个

74
00:04:13,143 --> 00:04:17,166
绝对最佳的 性能时期，我将合并该官方列表，并且无耻地

75
00:04:17,166 --> 00:04:21,189
过度拟合测试集，也就 是说，我们确定地知道一个单词是

76
00:04:21,189 --> 00:04:25,368
否包含或不包含，我们可以为每一个 分配一个统一的概率。

77
00:04:25,368 --> 00:04:28,782
如果您还记得的话，所有这一切的第一步是

78
00:04:28,782 --> 00:04:33,905
针对特定的开局猜测，也许像我以前最喜欢的起重机一样，您看到

79
00:04:33,905 --> 00:04:36,295
每种可能模式的可能性有多大？

80
00:04:36,295 --> 00:04:38,995
在这种情况下，我们无耻地过度拟

81
00:04:38,995 --> 00:04:43,720
合单词答案列表，所涉及的只是计算有多少可能的答案给出了

82
00:04:43,720 --> 00:04:45,408
这些模式中的每一种。

83
00:04:45,408 --> 00:04:48,557
当然，我们的大部分时间都花在这种

84
00:04:48,557 --> 00:04:53,559
看起来很有趣的公式上，以量化您将从这种猜测中获得的信

85
00:04:53,559 --> 00:04:58,376
息量，该猜测基本上涉及遍历每个桶并说出您将获得多少

86
00:04:58,376 --> 00:05:03,378
信息这个对数表达式是一种奇特的方式，表示如果您观察到

87
00:05:03,378 --> 00:05:07,083
给定的模式，您会将可能性空间减半多少次。

88
00:05:07,083 --> 00:05:10,042
我们对所有这 些进行加权平均，它可以衡

89
00:05:10,042 --> 00:05:13,158
量我们期望从第一次猜测中学到多少东西 。

90
00:05:13,158 --> 00:05:17,729
稍后我们将对此进行更深入的探讨，但如果您只是简单地搜索所有

91
00:05:17,729 --> 00:05:21,691
13,00 0 个可以开始使用的不同单词，并询问哪个

92
00:05:21,691 --> 00:05:25,501
单词具有最高的预期信息，结果会发 现最好的答案是

93
00:05:25,501 --> 00:05:30,072
soar，而这并不会&#39;看起来确实不像一个真正的词，

94
00:05:30,072 --> 00:05:32,967
但我猜这是一个过时的术语，指的是小鹰。

95
00:05:32,967 --> 00:05:37,725
按此指标计算的前 15 个开局碰巧看起来像这

96
00:05:37,725 --> 00:05:41,402
样，但这些不一定是最好的开局猜测

97
00:05:41,402 --> 00:05:47,458
，因为它们只是通过预期信息的启发式来尝试估计真实分 数。

98
00:05:47,458 --> 00:05:52,000
但我们可以通过两步进行详尽的搜索的模式很少。

99
00:05:52,000 --> 00:05:56,385
例如，假设您以飙升打开，并且您碰巧看到的模式是最有可能

100
00:05:56,385 --> 00:06:00,933
的模式， 全是灰色，那么您可以从该点开始运行相同的分析。

101
00:06:00,933 --> 00:06:03,582
对于给定的提议的第 二个猜测，比如

102
00:06:03,582 --> 00:06:07,703
kitty，在这种受限情况下，所有模式的分布是什么，在

103
00:06:07,703 --> 00:06:10,647
这种情况下，我们仅限于会产生 soar

104
00:06:10,647 --> 00:06:13,002
的所有灰色的单词，然后我们使用

105
00:06:13,002 --> 00:06:16,681
这个预期来测量该分布的平坦度信息公式，我们对所有

106
00:06:16,681 --> 00:06:20,802
13,000 个可能 的单词都这样做，我们可以将其用作第

107
00:06:20,802 --> 00:06:21,538
二次猜测。

108
00:06:21,538 --> 00:06:26,259
通过这样做，我们可以找 到该场景中的最佳第二次猜测以及我

109
00:06:26,259 --> 00:06:30,980
们期望从中获得的信息量，如果 我们清洗并重复，并对您可能

110
00:06:30,980 --> 00:06:33,847
看到的所有不同的可能模式执行此操

111
00:06:33,847 --> 00:06:38,568
作，我们会得到一个所有可能的最佳第二次猜测的完整地图以及

112
00:06:38,568 --> 00:06:40,422
每个 猜测的预期信息。

113
00:06:40,422 --> 00:06:45,093
从那里开始，如果您对所有第二步值进行

114
00:06:45,093 --> 00:06:51,484
加权平均值，并根据您落入该桶的可能性进行加权，它可

115
00:06:51,484 --> 00:06:57,137
以衡量您在猜测飙升后可能获得多少信息。第二步。

116
00:06:57,137 --> 00:06:59,562
当我 们使用这个两步指标作为新的

117
00:06:59,562 --> 00:07:01,986
排名方法时，列表会发生一些变化。

118
00:07:01,986 --> 00:07:08,560
Soa r不再是第一名，跌回第14名，而上升的则被淘汰。

119
00:07:08,560 --> 00:07:12,378
再说一 次，感觉不太真实，而且看起来它是

120
00:07:12,378 --> 00:07:16,386
一个英国术语，指的是用于切割草皮的铁锹 。

121
00:07:16,386 --> 00:07:20,838
好吧，但正如您所看到的，所有这些顶级竞争者之间的

122
00:07:20,838 --> 00:07:25,290
竞争非常激烈 ，谁在这两步之后获得了最多的信息。

123
00:07:25,290 --> 00:07:29,812
即便如此，这些不一定是最好 的开局猜测，因为信息只是启

124
00:07:29,812 --> 00:07:34,503
发式的，它并不能告诉我们如果 你真的玩游戏的话实际得分。

125
00:07:34,503 --> 00:07:38,138
我所做的是模拟玩所有 2315 个

126
00:07:38,138 --> 00:07:42,986
可能的文字游戏，所有可能的答案都在此列表中的前

127
00:07:42,986 --> 00:07:44,400
250 个中。

128
00:07:44,400 --> 00:07:51,557
通过这样做，看看它们的实际表现，最终以微弱优势

129
00:07:51,557 --> 00:07:59,027
获得最高分的结 果是 Salé，它是 Salé

130
00:07:59,027 --> 00:08:06,496
的另一种拼写，Salé 是 一种轻型中世纪头盔。

131
00:08:06,496 --> 00:08:10,264
好吧，如果这对您来说有点太假了（对我来说也是如

132
00:08:10,264 --> 00:08:14,189
此），您会很高兴知道 Trace 和 Crate

133
00:08:14,189 --> 00:08:15,760
提供几乎相同的性能。

134
00:08:15,760 --> 00:08:20,213
它们中的每一个都有明显是真实单词的好处，所以有一天

135
00:08:20,213 --> 00:08:24,666
你第一次猜 测就正确，因为两者都是真实的单词答案。

136
00:08:24,666 --> 00:08:28,463
从基于最佳两步熵排序 到基于最低平均分数排序的

137
00:08:28,463 --> 00:08:32,425
这一转变也对列表产生了影响，但幅度 没有那么大。

138
00:08:32,425 --> 00:08:35,624
例如，Salé 在跃居榜首之前曾排名第三，而

139
00:08:35,624 --> 00:08:38,963
Crate 和 Trace 分别排名第四和第五。

140
00:08:38,963 --> 00:08:41,283
如果您好奇，您可以通过进行 一

141
00:08:41,283 --> 00:08:43,758
些暴力强制来获得稍微更好的性能。

142
00:08:43,758 --> 00:08:47,291
如果您对此感到好奇，乔纳 森·奥尔森（Jonathan

143
00:08:47,291 --> 00:08:49,562
Olson）有一篇非常好的博客文章

144
00:08:49,562 --> 00:08:52,842
，他还让您探索基于这些最佳算法的一些起始词的最佳以下

145
00:08:52,842 --> 00:08:53,600
猜测是什么。

146
00:08:53,600 --> 00:08:59,005
不过，退一步来说，有些人告诉我，像这样过度

147
00:08:59,005 --> 00:09:03,920
分析并尝试找到最佳的开局猜测会毁掉游戏。

148
00:09:03,920 --> 00:09:06,748
你知道，如果你在学习之后使用这个开局猜测，感

149
00:09:06,748 --> 00:09:09,577
觉有点肮脏，如果你 不这样做，感觉效率很低。

150
00:09:09,577 --> 00:09:12,560
但问题是，我实际上并不认为这对于人类玩

151
00:09:12,560 --> 00:09:14,201
游戏来说是最好的开局。

152
00:09:14,201 --> 00:09:19,964
一方面，您需要知道您看到的每种 模式的最佳第二次猜测是什么。

153
00:09:19,964 --> 00:09:23,129
更重要的是，所有这一切都是在 我们与官方

154
00:09:23,129 --> 00:09:26,453
单词答案列表荒谬地过度拟合的情况下发生的。

155
00:09:26,453 --> 00:09:29,708
比如说，当 《纽约时报》选择更改该

156
00:09:29,708 --> 00:09:32,964
列表的内容时，所有这些都将 消失。

157
00:09:32,964 --> 00:09:37,779
我们人类玩游戏的方式与这些算法的做法非 常不同。

158
00:09:37,779 --> 00:09:41,284
我们没有记住单词列表，我们没有进行详尽的搜索，

159
00:09:41,284 --> 00:09:45,520
我们从诸如元音是什么以及它们如何放置之类的事情中获得直觉。

160
00:09:45,520 --> 00:09:49,924
实际上，如果你们观看此视频的人立即忘记技术上最好

161
00:09:49,924 --> 00:09:54,328
的开局猜测是什么，而是记住诸如如何量化信息之类的

162
00:09:54,328 --> 00:09:58,732
事情，或者当贪婪时您应该注意的事实，我会非常高兴

163
00:09:58,732 --> 00:10:02,960
。算法达不到从更深入的搜索中获得的全局最佳性能。

164
00:10:02,960 --> 00:10:08,084
至少就我的口味而言，编写算法来尝试玩游戏的乐趣实际上与我作

165
00:10:08,084 --> 00:10:10,988
为人类如何玩这些游戏几乎没有关系。

166
00:10:10,988 --> 00:10:14,016
为这一切编写算法的目的不 是影响我们玩游

167
00:10:14,016 --> 00:10:17,044
戏的方式，它仍然只是一个有趣的文字游戏。

168
00:10:17,044 --> 00:10:19,519
这是 为了磨练我们的肌肉，以便

169
00:10:19,519 --> 00:10:22,160
在其他更有意义的环境中编写算法。

