1
00:00:00,000 --> 00:00:04,800
上周我发布了这段关于解决 Wordle 游戏的视频，或者至少尝试使用

2
00:00:04,800 --> 00:00:09,920
信息论来解决它。我想快速添加一个，我们应该称之为什么，一个

3
00:00:09,920 --> 00:00:14,240
附录，一个忏悔，基本上我只是想解释一个我犯错误的地方。

4
00:00:14,240 --> 00:00:18,880
事实证明，我运行的重新创建 Wordle 的代码中有一个非常小的

5
00:00:18,880 --> 00:00:23,040
错误，然后运行所有算法来解决它并测试它们的性能。它是影响极小

6
00:00:23,040 --> 00:00:27,760
比例案例的错误之一，因此很容易被忽视，而且它的影响

7
00:00:27,760 --> 00:00:32,080
非常轻微，在大多数情况下并不重要。基本上，它与如

8
00:00:32,080 --> 00:00:36,880
何为包含多个不同字母的猜测分配颜色有关。例如，如果您

9
00:00:36,880 --> 00:00:42,080
猜测速度并且正确答案是 abide，那么您应该如何根据猜测对这两个 e 进行着色？

10
00:00:42,800 --> 00:00:46,640
它与 Wordle 约定的工作方式是第一个 e 为黄

11
00:00:46,640 --> 00:00:51,120
色，第二个 e 为灰色。您可能会认为第一个 e 与真

12
00:00:51,120 --> 00:00:56,000
实答案中的某些内容相匹配，灰色告诉您没有第二个 e。

13
00:00:56,000 --> 00:01:01,200
相比之下，如果答案类似于擦除，那么这两个 e 都会被染成黄色

14
00:01:01,200 --> 00:01:05,920
，告诉您第一个 e 位于不同的位置，并且第二个 e 也位于不

15
00:01:05,920 --> 00:01:10,960
同的位置。类似地，如果其中一个 e 命中并且它是绿色的，那么在真实答

16
00:01:10,960 --> 00:01:17,280
案没有第二个 e 的情况下，第二个 e 将是灰色的，但在有第二个 e

17
00:01:17,280 --> 00:01:21,920
并且只是在不同的情况下，它会是黄色的地点。长话短说，在这个过程

18
00:01:21,920 --> 00:01:26,240
中，我不小心引入了与这些约定略有不同的行为。

19
00:01:26,960 --> 00:01:31,680
老实说，这真的很愚蠢。基本上在项目中间的某个时刻，我想加快一些

20
00:01:31,680 --> 00:01:35,840
计算速度，并且我尝试了一些小技巧来计算任何给定单词对之

21
00:01:35,840 --> 00:01:40,640
间的模式值，你知道我只是没有这样做。并没有真正考虑清楚，

22
00:01:40,640 --> 00:01:45,600
它引入了这个微小的变化。具有讽刺意味的是，最终让事情变得最快的

23
00:01:45,600 --> 00:01:50,080
实际方法是预先计算所有这些模式，这样一切都只是一个查找，所以完成每个

24
00:01:50,080 --> 00:01:54,000
模式需要多长时间并不重要，特别是如果你为了实现这一目标，我们正在编写

25
00:01:54,000 --> 00:01:59,040
难以阅读的有缺陷的代码。你知道，你生活并学习。至于这如何影响实际

26
00:01:59,040 --> 00:02:03,760
视频，我的意思是几乎没有实质内容发生变化。当然，关于什么是信息

27
00:02:03,760 --> 00:02:08,160
、什么是熵的主要教训都保持不变。如果我时不时地在屏幕

28
00:02:08,160 --> 00:02:13,360
上显示与给定单词相关的一些分布，那么该分布实际上可能会

29
00:02:13,360 --> 00:02:18,000
有点偏差，因为与各种模式相关的一些存储桶应该包含更多

30
00:02:18,000 --> 00:02:22,960
或更少的真实答案。即使如此，它也没有真正出现，因为我很少会显

31
00:02:22,960 --> 00:02:28,400
示一个包含多个字母的单词，这些字母也符合这种边缘情况。但是，确

32
00:02:28,400 --> 00:02:33,680
实发生变化并且可以说确实很重要的极少数实质性事情之一是

33
00:02:33,680 --> 00:02:40,240
最终结论：如果我们想找到单词答案列表的最佳可能得分，这样

34
00:02:40,240 --> 00:02:45,120
的算法会使用什么开局猜测？在视频中，我说我能找到的最佳性

35
00:02:45,120 --> 00:02:50,160
能来自于以“起重机”一词开头，这仅在算法正在玩一个略有

36
00:02:50,160 --> 00:02:55,120
不同的游戏的意义上才是正确的。修复并重新运行后，对于这个特

37
00:02:55,120 --> 00:03:00,000
定列表的理论上最佳的第一个猜测是什么，有一个不同的答案。

38
00:03:00,800 --> 00:03:06,560
看，我知道您知道视频的重点不是为某些随机在线游戏找

39
00:03:06,560 --> 00:03:11,760
到技术上的最佳答案。该视频的目的是厚颜无耻地搭

40
00:03:11,760 --> 00:03:16,240
上互联网潮流的潮流，通过信息论课程偷袭人们。

41
00:03:16,240 --> 00:03:20,160
这一切都很好，我支持这一点。但我知道互联网是如何运作的，对于很多人

42
00:03:20,160 --> 00:03:26,160
来说，一个主要的收获是什么是游戏单词的最佳开场白。我明白了，我之所

43
00:03:26,160 --> 00:03:30,480
以谈到这一点是因为我把它放在缩略图中，但如果我想在这里添加一点更正，想

44
00:03:30,480 --> 00:03:35,120
必你可以原谅我。实际上，回到这一切的一个更有意义的原因

45
00:03:35,120 --> 00:03:39,440
是，我从未真正谈论过最终分析的内容。作为一门子课，

46
00:03:39,440 --> 00:03:44,560
它本身就很有趣，所以值得在这里做。现在，如果您还记得的话，我们

47
00:03:44,560 --> 00:03:49,120
上一个视频的大部分时间都花在尝试编写一个算法来解决 wordle 的挑

48
00:03:49,120 --> 00:03:54,320
战上，该算法没有使用所有可能答案的官方列表。根据我的口味，这感觉有

49
00:03:54,320 --> 00:03:59,280
点像过度拟合测试集，更有趣的是构建具有弹性的东西。这就是

50
00:03:59,280 --> 00:04:03,920
为什么我们经历了查看英语中相对词频的整个过程，以

51
00:04:03,920 --> 00:04:09,120
得出每个词被包含作为最终答案的可能性的一些概念。

52
00:04:09,120 --> 00:04:13,680
然而，对于我们在这里所做的事情，我们只是试图找到一个绝对最佳的

53
00:04:13,680 --> 00:04:19,120
性能时期，我将合并该官方列表，并且无耻地过度拟合测试集，也就

54
00:04:19,120 --> 00:04:23,520
是说，我们确定地知道一个单词是否包含或不包含，我们可以为每一个

55
00:04:23,520 --> 00:04:28,560
分配一个统一的概率。如果您还记得的话，所有这一切的第一步是

56
00:04:28,560 --> 00:04:34,080
针对特定的开局猜测，也许像我以前最喜欢的起重机一样，您看到

57
00:04:34,080 --> 00:04:38,560
每种可能模式的可能性有多大？在这种情况下，我们无耻地过度拟

58
00:04:38,560 --> 00:04:43,440
合单词答案列表，所涉及的只是计算有多少可能的答案给出了

59
00:04:43,440 --> 00:04:48,240
这些模式中的每一种。当然，我们的大部分时间都花在这种

60
00:04:48,240 --> 00:04:53,040
看起来很有趣的公式上，以量化您将从这种猜测中获得的信

61
00:04:53,040 --> 00:04:57,520
息量，该猜测基本上涉及遍历每个桶并说出您将获得多少

62
00:04:57,520 --> 00:05:02,720
信息这个对数表达式是一种奇特的方式，表示如果您观察到

63
00:05:02,720 --> 00:05:08,160
给定的模式，您会将可能性空间减半多少次。我们对所有这

64
00:05:08,160 --> 00:05:12,800
些进行加权平均，它可以衡量我们期望从第一次猜测中学到多少东西

65
00:05:12,800 --> 00:05:17,920
。稍后我们将对此进行更深入的探讨，但如果您只是简单地搜索所有 13,00

66
00:05:17,920 --> 00:05:22,880
0 个可以开始使用的不同单词，并询问哪个单词具有最高的预期信息，结果会发

67
00:05:22,880 --> 00:05:28,400
现最好的答案是 soar，而这并不会&#39;看起来确实不像一个真正的词，

68
00:05:28,400 --> 00:05:36,640
但我猜这是一个过时的术语，指的是小鹰。按此指标计算的前 15

69
00:05:36,640 --> 00:05:41,680
个开局碰巧看起来像这样，但这些不一定是最好的开局猜测

70
00:05:41,680 --> 00:05:46,960
，因为它们只是通过预期信息的启发式来尝试估计真实分

71
00:05:46,960 --> 00:05:52,000
数。但我们可以通过两步进行详尽的搜索的模式很少。

72
00:05:52,000 --> 00:05:56,640
例如，假设您以飙升打开，并且您碰巧看到的模式是最有可能的模式，

73
00:05:56,640 --> 00:06:02,240
全是灰色，那么您可以从该点开始运行相同的分析。对于给定的提议的第

74
00:06:02,240 --> 00:06:07,360
二个猜测，比如 kitty，在这种受限情况下，所有模式的分布是什么，在

75
00:06:07,360 --> 00:06:11,920
这种情况下，我们仅限于会产生 soar 的所有灰色的单词，然后我们使用

76
00:06:11,920 --> 00:06:17,440
这个预期来测量该分布的平坦度信息公式，我们对所有 13,000 个可能

77
00:06:17,440 --> 00:06:23,680
的单词都这样做，我们可以将其用作第二次猜测。通过这样做，我们可以找

78
00:06:23,680 --> 00:06:28,080
到该场景中的最佳第二次猜测以及我们期望从中获得的信息量，如果

79
00:06:28,640 --> 00:06:32,880
我们清洗并重复，并对您可能看到的所有不同的可能模式执行此操

80
00:06:32,880 --> 00:06:37,680
作，我们会得到一个所有可能的最佳第二次猜测的完整地图以及每个

81
00:06:37,680 --> 00:06:46,640
猜测的预期信息。从那里开始，如果您对所有第二步值进行

82
00:06:46,640 --> 00:06:51,760
加权平均值，并根据您落入该桶的可能性进行加权，它可

83
00:06:51,760 --> 00:06:57,440
以衡量您在猜测飙升后可能获得多少信息。第二步。当我

84
00:06:57,440 --> 00:07:02,400
们使用这个两步指标作为新的排名方法时，列表会发生一些变化。Soa

85
00:07:02,400 --> 00:07:09,040
r不再是第一名，跌回第14名，而上升的则被淘汰。再说一

86
00:07:09,040 --> 00:07:16,000
次，感觉不太真实，而且看起来它是一个英国术语，指的是用于切割草皮的铁锹

87
00:07:16,000 --> 00:07:22,320
。好吧，但正如您所看到的，所有这些顶级竞争者之间的竞争非常激烈

88
00:07:22,320 --> 00:07:27,600
，谁在这两步之后获得了最多的信息。即便如此，这些不一定是最好

89
00:07:27,600 --> 00:07:32,000
的开局猜测，因为信息只是启发式的，它并不能告诉我们如果

90
00:07:32,000 --> 00:07:37,120
你真的玩游戏的话实际得分。我所做的是模拟玩所有 2315 个

91
00:07:37,120 --> 00:07:44,400
可能的文字游戏，所有可能的答案都在此列表中的前 250 个中。

92
00:07:46,160 --> 00:07:51,120
通过这样做，看看它们的实际表现，最终以微弱优势获得最高分的结

93
00:07:51,120 --> 00:08:03,280
果是 Salé，它是 Salé 的另一种拼写，Salé 是

94
00:08:04,240 --> 00:08:10,080
一种轻型中世纪头盔。好吧，如果这对您来说有点太假了（对我来说也是如

95
00:08:10,080 --> 00:08:15,760
此），您会很高兴知道 Trace 和 Crate 提供几乎相同的性能。

96
00:08:16,240 --> 00:08:21,040
它们中的每一个都有明显是真实单词的好处，所以有一天你第一次猜

97
00:08:21,040 --> 00:08:26,480
测就正确，因为两者都是真实的单词答案。从基于最佳两步熵排序

98
00:08:26,480 --> 00:08:31,200
到基于最低平均分数排序的这一转变也对列表产生了影响，但幅度

99
00:08:31,200 --> 00:08:36,000
没有那么大。例如，Salé 在跃居榜首之前曾排名第三，而 Crate

100
00:08:36,000 --> 00:08:41,200
和 Trace 分别排名第四和第五。如果您好奇，您可以通过进行

101
00:08:41,200 --> 00:08:45,120
一些暴力强制来获得稍微更好的性能。如果您对此感到好奇，乔纳

102
00:08:45,120 --> 00:08:49,600
森·奥尔森（Jonathan Olson）有一篇非常好的博客文章

103
00:08:49,600 --> 00:08:53,600
，他还让您探索基于这些最佳算法的一些起始词的最佳以下猜测是什么。

104
00:08:55,040 --> 00:08:59,040
不过，退一步来说，有些人告诉我，像这样过度

105
00:08:59,040 --> 00:09:03,920
分析并尝试找到最佳的开局猜测会毁掉游戏。

106
00:09:03,920 --> 00:09:07,680
你知道，如果你在学习之后使用这个开局猜测，感觉有点肮脏，如果你

107
00:09:07,680 --> 00:09:12,400
不这样做，感觉效率很低。但问题是，我实际上并不认为这对于人类玩

108
00:09:12,400 --> 00:09:16,880
游戏来说是最好的开局。一方面，您需要知道您看到的每种

109
00:09:16,880 --> 00:09:22,160
模式的最佳第二次猜测是什么。更重要的是，所有这一切都是在

110
00:09:22,160 --> 00:09:27,440
我们与官方单词答案列表荒谬地过度拟合的情况下发生的。比如说，当

111
00:09:27,440 --> 00:09:32,240
《纽约时报》选择更改该列表的内容时，所有这些都将

112
00:09:32,240 --> 00:09:36,720
消失。我们人类玩游戏的方式与这些算法的做法非

113
00:09:36,720 --> 00:09:41,440
常不同。我们没有记住单词列表，我们没有进行详尽的搜索，

114
00:09:41,440 --> 00:09:45,520
我们从诸如元音是什么以及它们如何放置之类的事情中获得直觉。

115
00:09:45,520 --> 00:09:50,080
实际上，如果你们观看此视频的人立即忘记技术上最好

116
00:09:50,080 --> 00:09:54,880
的开局猜测是什么，而是记住诸如如何量化信息之类的

117
00:09:54,880 --> 00:09:59,440
事情，或者当贪婪时您应该注意的事实，我会非常高兴

118
00:09:59,440 --> 00:10:02,960
。算法达不到从更深入的搜索中获得的全局最佳性能。

119
00:10:03,520 --> 00:10:07,920
至少就我的口味而言，编写算法来尝试玩游戏的乐趣实际上与我作

120
00:10:07,920 --> 00:10:12,800
为人类如何玩这些游戏几乎没有关系。为这一切编写算法的目的不

121
00:10:12,800 --> 00:10:17,280
是影响我们玩游戏的方式，它仍然只是一个有趣的文字游戏。这是

122
00:10:17,280 --> 00:10:22,160
为了磨练我们的肌肉，以便在其他更有意义的环境中编写算法。

123
00:10:37,920 --> 00:10:38,420
you

