1
00:00:04,320 --> 00:00:08,680
이 동영상에서는 수학에서 매우 중요한 개념인 푸리에 

2
00:00:08,680 --> 00:00:12,740
변환을 애니메이션으로 표현하는 방법을 소개합니다.

3
00:00:13,520 --> 00:00:15,698
그것이 무엇인지 잘 모르시는 분들을 위해 

4
00:00:15,698 --> 00:00:17,592
이 영상이 해당 주제에 대한 소개가 

5
00:00:17,592 --> 00:00:19,960
되기를 바라는 것이 저의 가장 큰 목표입니다.

6
00:00:20,380 --> 00:00:23,107
하지만 이미 익숙한 분들에게도 모든 구성 

7
00:00:23,107 --> 00:00:25,835
요소가 실제로 어떻게 생겼는지 보는 것은 

8
00:00:25,835 --> 00:00:28,800
여전히 재미있고 풍요로운 일이라고 생각합니다.

9
00:00:29,320 --> 00:00:31,870
가장 먼저 시작해야 할 예는 소리에서 

10
00:00:31,870 --> 00:00:34,300
주파수를 분해하는 고전적인 예입니다.

11
00:00:34,780 --> 00:00:37,840
하지만 그 후에는 이 아이디어가 소리와 주파수를 

12
00:00:37,840 --> 00:00:40,560
넘어 어떻게 이질적으로 보이는 많은 수학, 

13
00:00:40,560 --> 00:00:43,733
심지어 물리학 영역으로 확장되는지 살짝 보여드리고 

14
00:00:43,733 --> 00:00:44,300
싶습니다.

15
00:00:44,880 --> 00:00:46,556
이 아이디어가 얼마나 보편화되어 

16
00:00:46,556 --> 00:00:48,140
있는지 정말 놀라울 정도입니다.

17
00:00:49,120 --> 00:00:50,080
자세히 알아보겠습니다.

18
00:00:50,520 --> 00:00:55,162
여기 이 소리는 초당 440회의 순수 A음으로, 

19
00:00:55,162 --> 00:00:59,460
헤드폰이나 스피커 바로 옆의 공기압을 시간의 

20
00:00:59,460 --> 00:01:04,274
함수로 측정하면 이 파동에서 평형 상태를 중심으로 

21
00:01:04,274 --> 00:01:09,260
위아래로 진동하며 초당 440회 진동한다는 뜻입니다.

22
00:01:09,940 --> 00:01:12,291
D와 같이 낮은 음정의 음표는 초당 

23
00:01:12,291 --> 00:01:14,760
박자 수가 적을 뿐 구조는 동일합니다.

24
00:01:15,680 --> 00:01:17,207
두 가지를 한꺼번에 플레이할 때, 

25
00:01:17,207 --> 00:01:19,540
결과적으로 어떤 압박감과 부담감을 느낄 수 있을까요?

26
00:01:19,820 --> 00:01:21,140
시간 그래프가 어떻게 생겼나요?

27
00:01:22,060 --> 00:01:25,370
음, 어느 시점에서든 이 압력 차이는 

28
00:01:25,370 --> 00:01:29,311
각 음표에 대한 개별 압력의 합이 될 텐데, 

29
00:01:29,311 --> 00:01:32,780
이는 생각하기에 다소 복잡한 문제입니다.

30
00:01:33,980 --> 00:01:35,787
어떤 지점에서는 피크가 서로 

31
00:01:35,787 --> 00:01:38,160
일치하여 매우 높은 압력이 발생합니다.

32
00:01:38,660 --> 00:01:40,940
다른 지점에서는 상쇄되는 경향이 있습니다.

33
00:01:41,500 --> 00:01:44,780
결국, 여러분이 얻는 것은 파도 같은 압력 대

34
00:01:44,960 --> 00:01:46,786
시간 그래프는 순수한 사인파가 

35
00:01:46,786 --> 00:01:48,720
아닌 좀 더 복잡한 그래프입니다.

36
00:01:48,720 --> 00:01:50,876
그리고 다른 메모를 추가할수록 

37
00:01:50,876 --> 00:01:53,160
그 파장은 점점 더 복잡해집니다.

38
00:01:53,800 --> 00:01:56,713
하지만 지금은 4개의 순수한 주파수를 

39
00:01:56,713 --> 00:01:59,765
조합한 것뿐이므로 정보량이 적다는 점을 

40
00:01:59,765 --> 00:02:02,540
고려하면 불필요하게 복잡해 보입니다.

41
00:02:03,000 --> 00:02:06,373
소리를 녹음하는 마이크는 다양한 시점의 

42
00:02:06,373 --> 00:02:10,360
기압을 포착할 뿐 최종 합계만 볼 수 있습니다.

43
00:02:10,639 --> 00:02:13,164
따라서 우리의 핵심 질문은 어떻게 이런 

44
00:02:13,164 --> 00:02:15,345
신호를 받아 이를 구성하는 순수한 

45
00:02:15,345 --> 00:02:18,100
주파수로 분해할 수 있는지에 대한 것입니다.

46
00:02:18,820 --> 00:02:19,840
꽤 흥미롭지 않나요?

47
00:02:20,300 --> 00:02:23,094
이러한 신호를 더하면 실제로 모든 신호가 한데 

48
00:02:23,094 --> 00:02:25,780
섞이기 때문에 다시 분리하는 것은 여러 가지 

49
00:02:25,780 --> 00:02:28,575
물감을 섞어 놓은 물감을 풀어내는 것과 비슷한 

50
00:02:28,575 --> 00:02:29,220
느낌입니다.

51
00:02:29,920 --> 00:02:34,472
일반적인 전략은 주어진 주파수의 신호를 다른 신호와 

52
00:02:34,472 --> 00:02:38,555
다르게 처리하는 수학적 기계를 스스로 구축하는 

53
00:02:38,555 --> 00:02:39,340
것입니다.

54
00:02:40,080 --> 00:02:43,743
먼저 초당 3비트의 낮은 신호와 같은 순수한 

55
00:02:43,743 --> 00:02:47,260
신호만 가져와서 쉽게 플로팅할 수 있습니다.

56
00:02:47,820 --> 00:02:50,325
그리고 이 그래프의 한정된 부분, 

57
00:02:50,325 --> 00:02:54,148
이 경우 0초에서 4.5초 사이의 부분만 살펴보기로 

58
00:02:54,148 --> 00:02:54,940
하겠습니다.

59
00:02:55,660 --> 00:03:01,080
핵심 아이디어는 이 그래프를 원으로 감싸는 것입니다.

60
00:03:04,980 --> 00:03:06,640
구체적으로 설명하면 다음과 같습니다.

61
00:03:07,020 --> 00:03:10,288
각 시점의 길이가 해당 시점의 그래프 

62
00:03:10,288 --> 00:03:14,180
높이와 같은 작은 회전 벡터를 상상해 보세요.

63
00:03:14,860 --> 00:03:17,762
따라서 그래프의 높은 점은 원점으로부터 더 먼 

64
00:03:17,762 --> 00:03:21,000
거리에 해당하고, 낮은 점은 원점에 더 가까워집니다.

65
00:03:22,080 --> 00:03:25,445
지금은 2초 앞으로 이동하는 것이 원을 한 바퀴 

66
00:03:25,445 --> 00:03:29,060
도는 것에 해당하는 방식으로 그림을 그리고 있습니다.

67
00:03:29,640 --> 00:03:31,897
이 감긴 그래프를 그리는 작은 

68
00:03:31,897 --> 00:03:34,420
벡터는 초당 반 주기로 회전합니다.

69
00:03:35,420 --> 00:03:36,940
여기서 중요한 점은 두 가지 다른 

70
00:03:36,940 --> 00:03:38,460
주파수가 작용하고 있다는 점입니다.

71
00:03:38,720 --> 00:03:43,034
초당 3번 위아래로 움직이는 신호의 주파수가 있고, 

72
00:03:43,034 --> 00:03:47,200
이와는 별도로 원 주위로 그래프를 감싸는 주파수가 

73
00:03:47,200 --> 00:03:50,920
있는데, 현재 초당 절반 회전하는 속도입니다.

74
00:03:51,440 --> 00:03:53,071
하지만 두 번째 주파수는 원하는 

75
00:03:53,071 --> 00:03:54,340
대로 조정할 수 있습니다.

76
00:03:54,660 --> 00:03:56,640
더 빨리 마무리하고 싶으신가요?

77
00:03:58,680 --> 00:04:00,940
아니면 좀 더 천천히 마무리할까요?

78
00:04:03,380 --> 00:04:06,046
그리고 와인딩 주파수의 선택에 따라 

79
00:04:06,046 --> 00:04:08,580
와인딩 그래프의 모양이 결정됩니다.

80
00:04:09,160 --> 00:04:11,470
여기서 나오는 다이어그램 중 일부는 매우 

81
00:04:11,470 --> 00:04:13,579
예쁘긴 하지만 꽤 복잡할 수 있지만, 

82
00:04:13,579 --> 00:04:15,889
여기서 일어나는 모든 일은 신호를 원으로 

83
00:04:15,889 --> 00:04:18,399
감싸고 있다는 점을 명심하는 것이 중요합니다.

84
00:04:20,839 --> 00:04:23,760
그런데 제가 위에 그리고 있는 수직선은 

85
00:04:23,760 --> 00:04:26,680
원을 완전히 회전한 것에 해당하는 원래 

86
00:04:26,680 --> 00:04:29,600
그래프의 거리를 추적하기 위한 것입니다.

87
00:04:30,900 --> 00:04:33,522
따라서 선이 1.5초 간격으로 떨어져 있으면 한 

88
00:04:33,522 --> 00:04:36,340
바퀴를 완전히 도는 데 1.5초가 걸린다는 뜻입니다.

89
00:04:37,240 --> 00:04:39,968
이 시점에서 우리는 와인딩 주파수가 신호의 

90
00:04:39,968 --> 00:04:42,809
주파수인 초당 3비트와 일치하면 뭔가 특별한 

91
00:04:42,809 --> 00:04:46,220
일이 일어날 것이라는 막연한 느낌을 받을 수 있습니다.

92
00:04:46,800 --> 00:04:49,176
그래프의 모든 고점은 원의 오른쪽에서 

93
00:04:49,176 --> 00:04:51,780
발생하고 모든 저점은 왼쪽에서 발생합니다.

94
00:04:52,500 --> 00:04:55,394
하지만 주파수 언믹싱 머신을 구축하려는 시도에서 

95
00:04:55,394 --> 00:04:57,860
이를 얼마나 정확하게 활용할 수 있을까요?

96
00:04:59,000 --> 00:05:00,932
이 그래프에 금속 와이어와 같은 

97
00:05:00,932 --> 00:05:03,080
일종의 질량이 있다고 상상해 보세요.

98
00:05:04,220 --> 00:05:07,560
이 작은 점은 해당 와이어의 질량 중심을 나타냅니다.

99
00:05:08,140 --> 00:05:10,764
주파수를 변경하고 그래프가 다르게 

100
00:05:10,764 --> 00:05:14,080
구불구불해지면 질량 중심이 약간 흔들립니다.

101
00:05:16,220 --> 00:05:18,240
그리고 대부분의 와인딩 주파수의 경우, 

102
00:05:18,240 --> 00:05:20,628
질량 중심이 원점에 매우 가깝게 유지되도록 원 

103
00:05:20,628 --> 00:05:23,200
주위에 봉우리와 계곡이 모두 간격을 두고 배치되어 

104
00:05:23,200 --> 00:05:23,660
있습니다.

105
00:05:26,300 --> 00:05:29,743
그러나 권선 주파수가 신호의 주파수와 동일할 

106
00:05:29,743 --> 00:05:32,773
때(이 경우 초당 3주기) 모든 피크가 

107
00:05:32,773 --> 00:05:36,078
오른쪽에 있고 모든 밸리가 왼쪽에 있으므로 

108
00:05:36,078 --> 00:05:39,660
질량 중심이 비정상적으로 오른쪽으로 멀어집니다.

109
00:05:42,300 --> 00:05:44,485
이를 포착하기 위해 각 와인딩 주파수에 

110
00:05:44,485 --> 00:05:46,274
대해 질량 중심이 어디에 있는지 

111
00:05:46,274 --> 00:05:48,460
추적하는 일종의 플롯을 그려 보겠습니다.

112
00:05:49,300 --> 00:05:51,692
물론 질량 중심은 2차원적인 것이므로 

113
00:05:51,692 --> 00:05:53,857
완전히 추적하려면 두 개의 좌표가 

114
00:05:53,857 --> 00:05:56,820
필요하지만 지금은 X 좌표만 추적해 보겠습니다.

115
00:05:57,580 --> 00:06:00,280
따라서 주파수가 0인 경우, 모든 것이 오른쪽에 

116
00:06:00,280 --> 00:06:02,980
뭉쳐 있을 때 이 X 좌표는 상대적으로 높습니다.

117
00:06:03,740 --> 00:06:07,320
그런 다음 와인딩 주파수를 높이면 그래프가 

118
00:06:07,320 --> 00:06:10,900
원을 중심으로 균형을 이루면서 질량 중심의 

119
00:06:10,900 --> 00:06:14,480
X 좌표가 0에 가까워지고 약간 흔들립니다.

120
00:06:26,940 --> 00:06:29,550
하지만 초당 3비트에서 모든 것이 

121
00:06:29,550 --> 00:06:32,160
오른쪽으로 정렬되면서 급상승합니다.

122
00:06:44,440 --> 00:06:46,004
이것이 바로 핵심 구조이므로 

123
00:06:46,004 --> 00:06:47,960
지금까지의 내용을 요약해 보겠습니다.

124
00:06:47,960 --> 00:06:51,017
원래의 강도 대 시간 그래프가 있고, 

125
00:06:51,017 --> 00:06:54,948
그 그래프를 2차원 평면에 감은 버전이 있으며, 

126
00:06:54,948 --> 00:06:58,297
세 번째로 와인딩 주파수가 그래프의 질량 

127
00:06:58,297 --> 00:07:02,520
중심에 어떤 영향을 미치는지에 대한 플롯이 있습니다.

128
00:07:03,920 --> 00:07:05,425
그런데 0에 가까운 정말 낮은 

129
00:07:05,425 --> 00:07:07,020
주파수를 다시 한 번 살펴봅시다.

130
00:07:07,610 --> 00:07:11,522
새로운 주파수 플롯에서 0 부근의 큰 스파이크는 

131
00:07:11,522 --> 00:07:15,580
전체 코사인파가 위로 이동했다는 사실에 해당합니다.

132
00:07:16,780 --> 00:07:20,716
만약 0을 중심으로 진동하며 음의 값으로 떨어지는 

133
00:07:20,716 --> 00:07:24,511
신호를 선택했다면, 다양한 권선 주파수를 가지고 

134
00:07:24,511 --> 00:07:28,166
놀면서 권선 주파수 대 질량 중심의 이 플롯은 

135
00:07:28,166 --> 00:07:31,400
3의 값에서만 스파이크가 생겼을 것입니다.

136
00:07:32,520 --> 00:07:35,120
하지만 음수 값은 특히 첫 번째 예제에서 

137
00:07:35,120 --> 00:07:37,607
생각하기에는 조금 이상하고 지저분하므로 

138
00:07:37,607 --> 00:07:40,660
이동된 그래프의 관점에서 계속 생각해 보겠습니다.

139
00:07:41,400 --> 00:07:43,294
0 주변의 스파이크는 이동에 해당하는 

140
00:07:43,294 --> 00:07:45,460
것일 뿐이라는 점을 이해해 주시기 바랍니다.

141
00:07:45,980 --> 00:07:48,172
주파수 분해에 관한 한, 우리가 가장 

142
00:07:48,172 --> 00:07:50,260
중점을 두는 부분은 3의 범프입니다.

143
00:07:51,320 --> 00:07:53,619
이 전체 플롯을 원본 신호의 거의 

144
00:07:53,619 --> 00:07:56,040
푸리에 변환이라고 부를 수 있습니다.

145
00:07:56,680 --> 00:07:59,128
이것과 실제 푸리에 변환 사이에는 몇 가지 

146
00:07:59,128 --> 00:08:01,884
작은 차이점이 있는데, 몇 분 후에 설명하겠지만 

147
00:08:01,884 --> 00:08:04,435
이미 이 기계를 통해 신호의 주파수를 어떻게 

148
00:08:04,435 --> 00:08:06,680
골라낼 수 있는지 알 수 있을 것입니다.

149
00:08:07,980 --> 00:08:10,989
조금 더 실험해 보려면 다른 푸리에 신호, 

150
00:08:10,989 --> 00:08:13,873
예를 들어 초당 2비트라는 낮은 주파수로 

151
00:08:13,873 --> 00:08:15,880
동일한 작업을 수행해 보세요.

152
00:08:16,380 --> 00:08:19,613
원을 감고 다양한 잠재적 감기 주파수를 

153
00:08:19,613 --> 00:08:22,846
상상하면서 그래프의 질량 중심이 어디에 

154
00:08:22,846 --> 00:08:25,785
있는지 추적한 다음, 감기 주파수를 

155
00:08:25,785 --> 00:08:29,900
조정하면서 해당 질량 중심의 x 좌표를 그려보세요.

156
00:08:30,580 --> 00:08:33,100
이전과 마찬가지로 권선 주파수가 신호 

157
00:08:33,100 --> 00:08:35,980
주파수와 동일할 때 스파이크가 발생하는데, 

158
00:08:35,980 --> 00:08:38,620
이 경우 초당 2사이클과 같을 때입니다.

159
00:08:39,700 --> 00:08:42,500
하지만 이 기계의 진짜 핵심은 여러 

160
00:08:42,500 --> 00:08:45,300
주파수로 구성된 신호를 가져와서 그 

161
00:08:45,300 --> 00:08:48,800
주파수가 무엇인지 알아낼 수 있다는 점입니다.

162
00:08:49,240 --> 00:08:52,657
방금 살펴본 두 신호, 즉 초당 3비트 파동과 초당 

163
00:08:52,657 --> 00:08:55,840
2비트 파동을 가져와서 합산한다고 상상해 보세요.

164
00:08:56,620 --> 00:08:59,287
앞서 말했듯이, 여러분이 얻는 것은 더 이상 멋진 

165
00:08:59,287 --> 00:09:01,860
순수 코사인파가 아니라 조금 더 복잡한 것입니다.

166
00:09:02,500 --> 00:09:03,886
하지만 이것을 와인딩 주파수 

167
00:09:03,886 --> 00:09:05,360
기계에 넣는다고 상상해 보세요.

168
00:09:06,360 --> 00:09:09,118
확실히 이걸 감싸면 훨씬 더 복잡해 보이고, 

169
00:09:09,118 --> 00:09:12,318
혼돈과 혼돈, 혼돈과 혼돈을 겪다가 초당 2사이클로 

170
00:09:12,318 --> 00:09:15,628
모든 것이 정말 멋지게 정렬되는 것처럼 보이는 경우가 

171
00:09:15,628 --> 00:09:16,180
있습니다.

172
00:09:16,720 --> 00:09:18,935
그런 다음 계속 진행하면 더 혼란스럽고 더 혼란스럽고 

173
00:09:18,935 --> 00:09:20,856
더 혼란스럽고 더 혼란스럽고 더 혼란스럽고 더 

174
00:09:20,856 --> 00:09:22,776
혼란스럽고, 초당 3주기로 상황이 다시 멋지게 

175
00:09:22,776 --> 00:09:23,220
정렬됩니다.

176
00:09:23,780 --> 00:09:26,333
그리고 앞서 말했듯이 감긴 그래프는 다소 

177
00:09:26,333 --> 00:09:28,886
복잡해 보일 수 있지만, 그래프를 원으로 

178
00:09:28,886 --> 00:09:31,440
감싸는 비교적 간단한 아이디어일 뿐입니다.

179
00:09:31,960 --> 00:09:35,140
그래프가 좀 더 복잡하고 감기는 빈도가 꽤 빠릅니다.

180
00:09:36,180 --> 00:09:39,865
이제 두 개의 서로 다른 스파이크에서 일어나는 

181
00:09:39,865 --> 00:09:43,408
일은 두 개의 신호를 가져와서 각각에 푸리에 

182
00:09:43,408 --> 00:09:47,093
변환을 개별적으로 적용한 다음 결과를 합산하면 

183
00:09:47,093 --> 00:09:50,636
먼저 신호를 더한 다음 푸리에 변환을 적용한 

184
00:09:50,636 --> 00:09:54,180
것과 동일한 결과를 얻을 수 있다는 것입니다.

185
00:09:55,680 --> 00:09:57,533
세심한 시청자라면 잠시 멈춰 서서 제가 

186
00:09:57,533 --> 00:09:59,470
방금 한 말이 사실인지 곰곰이 생각해보고 

187
00:09:59,470 --> 00:10:01,240
스스로를 설득하고 싶을 수도 있습니다.

188
00:10:01,880 --> 00:10:04,729
와인딩 머신 내부에서 정확히 무엇이 측정되고 

189
00:10:04,729 --> 00:10:07,920
있는지 직접 확인할 수 있는 꽤 좋은 테스트입니다.

190
00:10:09,080 --> 00:10:12,162
순수 주파수의 변환은 해당 주파수 주변의 

191
00:10:12,162 --> 00:10:15,111
스파이크를 제외하고는 모든 곳에서 0에 

192
00:10:15,111 --> 00:10:18,462
가깝기 때문에 두 개의 순수 주파수를 더하면 

193
00:10:18,462 --> 00:10:21,813
변환 그래프에 해당 주파수 위에 작은 피크가 

194
00:10:21,813 --> 00:10:25,700
나타나기 때문에 이 속성은 우리에게 매우 유용합니다.

195
00:10:26,340 --> 00:10:27,982
그래서 이 작은 수학 기계는 우리가 

196
00:10:27,982 --> 00:10:29,460
원했던 대로 정확하게 작동합니다.

197
00:10:29,720 --> 00:10:32,415
뒤섞여 섞여 있는 페인트 통에서 원래의 

198
00:10:32,415 --> 00:10:35,600
주파수를 추출하여 섞여 있는 물감을 풀어줍니다.

199
00:10:36,860 --> 00:10:39,362
이 작업을 설명하는 전체 수학을 계속하기 

200
00:10:39,362 --> 00:10:41,757
전에 이 작업이 유용한 한 가지 맥락, 

201
00:10:41,757 --> 00:10:44,260
즉 사운드 편집에 대해 간단히 살펴봅시다.

202
00:10:44,700 --> 00:10:46,997
녹음한 내용이 있는데 성가신 고음이 

203
00:10:46,997 --> 00:10:49,640
있어 필터링하고 싶다고 가정해 보겠습니다.

204
00:10:50,660 --> 00:10:53,414
처음에는 시간이 지남에 따라 다양한 

205
00:10:53,414 --> 00:10:56,305
강도의 신호가 들어오고, 1밀리초마다 

206
00:10:56,305 --> 00:10:59,060
스피커에 주어지는 전압이 달라집니다.

207
00:10:59,560 --> 00:11:00,705
하지만 우리는 이를 주파수의 

208
00:11:00,705 --> 00:11:01,780
관점에서 생각하고자 합니다.

209
00:11:02,620 --> 00:11:06,428
따라서 해당 신호의 푸리에 변환을 취하면 성가신 

210
00:11:06,428 --> 00:11:10,520
고음은 일부 고주파에서 스파이크처럼 나타나게 됩니다.

211
00:11:11,280 --> 00:11:15,536
스파이크를 아래로 내려서 필터링하면 고주파만 빼고 

212
00:11:15,536 --> 00:11:19,640
녹음한 것과 같은 사운드의 푸리에 변환을 볼 수 

213
00:11:19,640 --> 00:11:20,400
있습니다.

214
00:11:21,340 --> 00:11:24,950
다행히도 역 푸리에 변환이라는 개념이 있어 어떤 

215
00:11:24,950 --> 00:11:28,560
신호가 푸리에 변환을 생성했을지 알 수 있습니다.

216
00:11:29,280 --> 00:11:32,920
다음 동영상에서 역에 대해 더 자세히 설명하겠지만, 

217
00:11:32,920 --> 00:11:36,561
간단히 말해서 푸리에 변환에 푸리에 변환을 적용하면 

218
00:11:36,561 --> 00:11:39,700
원래 함수에 가까운 결과를 얻을 수 있습니다.

219
00:11:40,760 --> 00:11:42,528
약간 거짓말이긴 하지만 진실의 

220
00:11:42,528 --> 00:11:44,400
방향에 가깝다고 할 수 있습니다.

221
00:11:44,720 --> 00:11:47,196
그리고 이것이 거짓말인 이유는 실제 푸리에 

222
00:11:47,196 --> 00:11:50,085
변환이 무엇인지 아직 말씀드리지 못했기 때문인데, 

223
00:11:50,085 --> 00:11:52,252
푸리에 변환은 이 무게중심의 x 좌표 

224
00:11:52,252 --> 00:11:54,420
개념보다 조금 더 복잡하기 때문입니다.

225
00:11:55,380 --> 00:11:58,689
우선, 이 그래프를 다시 가져와서 질량 중심을 

226
00:11:58,689 --> 00:12:02,380
살펴보면, X 좌표는 사실 이야기의 절반에 불과하죠?

227
00:12:02,520 --> 00:12:05,440
내 말은, 이것은 2차원에 있고 Y 좌표도 있습니다.

228
00:12:05,860 --> 00:12:09,725
수학에서 흔히 그렇듯이 2차원을 다룰 때는 

229
00:12:09,725 --> 00:12:13,590
질량 중심이 실수 부분과 허수 부분이 모두 

230
00:12:13,590 --> 00:12:18,100
있는 복소수인 복소면으로 생각하는 것이 우아합니다.

231
00:12:21,140 --> 00:12:24,863
단순히 두 개의 좌표가 있다고 말하지 않고 복소수로 

232
00:12:24,863 --> 00:12:28,458
이야기하는 이유는 복소수가 와인딩과 회전과 관련된 

233
00:12:28,458 --> 00:12:31,540
것들을 아주 잘 설명할 수 있기 때문입니다.

234
00:12:32,360 --> 00:12:36,560
예를 들어, 오일러의 공식은 e에 i를 곱하면 

235
00:12:36,560 --> 00:12:41,407
오른쪽에서 반경 1의 원을 반시계 방향으로 그 수만큼 

236
00:12:41,407 --> 00:12:45,930
걸었을 때 얻을 수 있는 지점에 착지한다는 유명한 

237
00:12:45,930 --> 00:12:46,900
공식입니다.

238
00:12:47,920 --> 00:12:50,560
초당 1주기의 속도로 회전하는 것을 

239
00:12:50,560 --> 00:12:53,200
설명하고자 한다고 가정해 보겠습니다.

240
00:12:54,160 --> 00:12:58,842
반지름이 1인 원의 경우 2파이가 둘레의 전체 길이를 

241
00:12:58,842 --> 00:13:03,057
나타내므로, e를 2파이 곱하기 i 곱하기 t로 

242
00:13:03,057 --> 00:13:07,740
표현할 수 있으며 여기서 t는 경과한 시간의 양입니다.

243
00:13:08,920 --> 00:13:11,918
그리고 이것은 보기에 약간 어지럽기 때문에 

244
00:13:11,918 --> 00:13:14,792
다른 주파수, 더 낮고 합리적인 주파수를 

245
00:13:14,792 --> 00:13:17,416
설명하고 싶을 수 있으며, 이를 위해 

246
00:13:17,416 --> 00:13:20,540
지수의 시간 t에 주파수 f를 곱하면 됩니다.

247
00:13:21,200 --> 00:13:23,561
예를 들어 f가 1/10인 경우, 

248
00:13:23,561 --> 00:13:27,165
이 벡터는 10초마다 한 바퀴씩 완전히 회전하는데, 

249
00:13:27,165 --> 00:13:30,272
이는 전체 지수가 2파이 i처럼 보이기 전에 

250
00:13:30,272 --> 00:13:33,380
시간 t가 10까지 증가해야 하기 때문입니다.

251
00:13:34,140 --> 00:13:37,176
궁금하신 분들을 위해 가상의 입력에 대해 왜 이것이 

252
00:13:37,176 --> 00:13:39,899
e에서 x의 동작인지 직관적으로 설명하는 다른 

253
00:13:39,899 --> 00:13:42,517
동영상이 있지만, 지금은 그냥 당연한 것으로 

254
00:13:42,517 --> 00:13:43,460
받아들이겠습니다.

255
00:13:44,440 --> 00:13:46,180
이 얘기를 왜 하냐고 반문할 수도 있겠죠?

256
00:13:46,600 --> 00:13:49,829
그래프를 하나의 긴밀한 작은 공식으로 정리하는 

257
00:13:49,829 --> 00:13:53,060
아이디어를 적을 수 있는 정말 좋은 방법입니다.

258
00:13:53,960 --> 00:13:56,925
먼저, 푸리에 변환의 맥락에서 시계 

259
00:13:56,925 --> 00:14:00,186
방향으로 회전하는 것이 관례이므로 해당 

260
00:14:00,186 --> 00:14:03,300
지수에 음의 부호를 추가해 보겠습니다.

261
00:14:04,480 --> 00:14:06,922
이제 앞서 살펴본 순수한 코사인 파동과 

262
00:14:06,922 --> 00:14:09,143
같이 신호 강도 대 시간을 나타내는 

263
00:14:09,143 --> 00:14:11,920
함수를 취하고 이를 g of t라고 부릅니다.

264
00:14:12,760 --> 00:14:17,866
이 지수식에 t의 g를 곱하면 회전 복소수가 이 

265
00:14:17,866 --> 00:14:23,540
함수의 값에 따라 스케일이 커지고 작아진다는 뜻입니다.

266
00:14:24,060 --> 00:14:27,273
따라서 길이가 변하는 이 작은 회전 벡터를 

267
00:14:27,273 --> 00:14:30,220
감긴 그래프를 그린다고 생각하면 됩니다.

268
00:14:31,320 --> 00:14:34,735
이 작은 표현은 가변 주파수인 f를 

269
00:14:34,735 --> 00:14:38,150
가진 원 주위로 그래프를 감는 전체 

270
00:14:38,150 --> 00:14:42,420
아이디어를 캡슐화하는 매우 우아한 방법입니다.

271
00:14:43,320 --> 00:14:45,870
그리고 이 감긴 그래프로 하고 싶은 것은 

272
00:14:45,870 --> 00:14:48,087
질량 중심을 추적하는 것이므로 어떤 

273
00:14:48,087 --> 00:14:50,860
수식이 이를 포착할 수 있을지 생각해 보세요.

274
00:14:51,760 --> 00:14:55,712
최소한 근사치를 구하려면 원래 신호에서 여러 번 

275
00:14:55,712 --> 00:14:59,956
샘플링하고 그 지점이 상처 그래프에서 어디에 있는지 

276
00:14:59,956 --> 00:15:03,908
확인한 다음 평균, 즉 복소수로 모두 더한 다음 

277
00:15:03,908 --> 00:15:08,300
샘플링한 지점 수로 나누는 방법을 사용할 수 있습니다.

278
00:15:09,140 --> 00:15:11,160
서로 더 가까운 지점을 더 많이 

279
00:15:11,160 --> 00:15:13,180
샘플링하면 더 정확해질 것입니다.

280
00:15:14,200 --> 00:15:18,064
그리고 극한에서는 전체 포인트의 합을 포인트 

281
00:15:18,064 --> 00:15:21,620
수로 나누는 대신 이 함수를 우리가 보고 

282
00:15:21,620 --> 00:15:25,640
있는 시간 간격의 크기로 나눈 적분을 취합니다.

283
00:15:25,940 --> 00:15:28,720
복잡한 값의 함수를 통합한다는 개념이 이상하게 

284
00:15:28,720 --> 00:15:31,393
느껴질 수도 있고 미적분학에 서툰 사람에게는 

285
00:15:31,393 --> 00:15:34,067
두려울 수도 있지만, 이 함수의 기본 의미는 

286
00:15:34,067 --> 00:15:36,420
미적분학 지식이 전혀 필요하지 않습니다.

287
00:15:36,860 --> 00:15:40,480
전체 표현식은 와인딩된 그래프의 질량 중심일 뿐입니다.

288
00:15:41,620 --> 00:15:45,743
이렇게 단계별로 복잡하지만 제가 말씀드린 전체 

289
00:15:45,743 --> 00:15:49,549
와인딩 머신 아이디어에 대해 놀랍도록 작은 

290
00:15:49,549 --> 00:15:53,514
표현을 구축했으며, 이제 이것과 실제 정직한 

291
00:15:53,514 --> 00:15:58,272
푸리에 변환 사이에 지적할 마지막 차이점은 단 하나, 

292
00:15:58,272 --> 00:16:01,920
즉 시간 간격으로 나누지 말라는 것입니다.

293
00:16:02,540 --> 00:16:05,380
푸리에 변환은 이 과정에서 필수적인 부분입니다.

294
00:16:06,360 --> 00:16:08,500
즉, 질량 중심을 보는 대신 질량 

295
00:16:08,500 --> 00:16:10,980
중심을 일정 비율로 확장한다는 뜻입니다.

296
00:16:11,660 --> 00:16:14,328
원래 그래프에서 사용하던 부분이 3초에 

297
00:16:14,328 --> 00:16:17,360
걸쳐 있다면 질량 중심에 3을 곱하면 됩니다.

298
00:16:19,500 --> 00:16:23,720
6초에 걸쳐 있다면 질량 중심에 6을 곱하면 됩니다.

299
00:16:25,040 --> 00:16:28,514
물리적으로 이것은 특정 주파수가 오랫동안 

300
00:16:28,514 --> 00:16:31,837
지속되면 해당 주파수에서 푸리에 변환의 

301
00:16:31,837 --> 00:16:35,160
크기가 점점 더 커지는 효과가 있습니다.

302
00:16:36,040 --> 00:16:40,865
예를 들어, 초당 2비트인 순수한 주파수를 초당 

303
00:16:40,865 --> 00:16:45,334
2사이클로 그래프에 감으면 질량 중심은 같은 

304
00:16:45,334 --> 00:16:49,981
위치에 유지되지만 신호가 오래 지속될수록 해당 

305
00:16:49,981 --> 00:16:54,628
주파수에서 푸리에 변환의 값이 커지는 것을 볼 

306
00:16:54,628 --> 00:16:55,880
수 있습니다.

307
00:16:56,500 --> 00:16:59,151
다른 주파수의 경우, 조금만 증가하더라도 

308
00:16:59,151 --> 00:17:01,571
시간 간격이 길어질수록 그래프가 원을 

309
00:17:01,571 --> 00:17:04,223
중심으로 균형을 잡을 수 있는 기회가 더 

310
00:17:04,223 --> 00:17:07,220
많이 주어지기 때문에 이러한 현상이 상쇄됩니다.

311
00:17:08,940 --> 00:17:11,502
여기에는 여러 가지 움직이는 부분이 있으므로 한 

312
00:17:11,502 --> 00:17:14,160
걸음 물러나서 지금까지의 내용을 요약해 보겠습니다.

313
00:17:14,599 --> 00:17:17,540
강도의 푸리에 변환 대

314
00:17:17,700 --> 00:17:21,009
시간 함수는 t의 g처럼 시간을 입력으로 받지 

315
00:17:21,009 --> 00:17:24,318
않고 대신 주파수, 즉 제가 와인딩 주파수라고 

316
00:17:24,318 --> 00:17:27,500
부르는 것을 입력으로 받는 새로운 함수입니다.

317
00:17:28,680 --> 00:17:30,733
그런데 표기법 측면에서 이 새로운 

318
00:17:30,733 --> 00:17:32,462
함수에 약간의 곡선을 붙여서 

319
00:17:32,462 --> 00:17:35,380
g-hat이라고 부르는 것이 일반적인 관례입니다.

320
00:17:35,840 --> 00:17:38,440
이 함수의 출력은 복소수이며, 

321
00:17:38,440 --> 00:17:43,031
원래 신호에서 주어진 주파수의 세기에 해당하는 2차원 

322
00:17:43,031 --> 00:17:45,020
평면의 일부 지점입니다.

323
00:17:46,060 --> 00:17:48,510
제가 푸리에 변환에 대해 그래프로 표시한 

324
00:17:48,510 --> 00:17:51,599
것은 해당 출력의 실제 구성 요소인 x 좌표이지만, 

325
00:17:51,599 --> 00:17:54,262
더 자세한 설명을 원한다면 가상 구성 요소를 

326
00:17:54,262 --> 00:17:56,500
별도로 그래프로 표시할 수도 있습니다.

327
00:17:57,440 --> 00:17:59,169
그리고 이 모든 것이 우리가 

328
00:17:59,169 --> 00:18:01,440
구축한 공식 안에 캡슐화되어 있습니다.

329
00:18:01,920 --> 00:18:05,808
이 공식을 보면 다소 어렵게 느껴질 수 있지만, 

330
00:18:05,808 --> 00:18:08,545
지수가 어떻게 회전에 대응하는지, 

331
00:18:08,545 --> 00:18:12,433
지수에 함수 g를 곱하면 어떻게 그래프의 상처가 

332
00:18:12,433 --> 00:18:14,882
있는 버전을 그릴 수 있는지, 

333
00:18:14,882 --> 00:18:18,914
복소값 함수의 적분을 질량 중심 개념으로 해석하는 

334
00:18:18,914 --> 00:18:22,947
방법을 이해하면 이 모든 것이 매우 풍부한 직관적 

335
00:18:22,947 --> 00:18:26,260
의미를 담고 있다는 것을 알 수 있습니다.

336
00:18:27,540 --> 00:18:29,181
이 글을 마무리하기 전에 간단히 

337
00:18:29,181 --> 00:18:30,640
한 가지 더 말씀드리겠습니다.

338
00:18:30,920 --> 00:18:33,435
실제로는 사운드 편집과 같은 작업에서 

339
00:18:33,435 --> 00:18:36,550
유한한 시간 간격에 걸쳐 적분을 하게 되지만, 

340
00:18:36,550 --> 00:18:39,425
푸리에 변환 이론은 종종 이 적분의 경계가 

341
00:18:39,425 --> 00:18:42,300
음의 무한대 및 무한대인 경우로 표현됩니다.

342
00:18:43,140 --> 00:18:46,266
구체적으로, 가능한 모든 유한한 시간 간격에 

343
00:18:46,266 --> 00:18:49,643
대해 이 식을 고려하고 그 시간 간격이 무한대로 

344
00:18:49,643 --> 00:18:53,020
커질 때 그 한계가 무엇인지 묻는다는 의미입니다.

345
00:18:54,760 --> 00:18:57,040
할 말이 너무 많습니다.

346
00:18:57,220 --> 00:18:58,800
너무 많아서 여기서 끝이라고 부르고 싶지 않습니다.

347
00:18:58,980 --> 00:19:01,089
이 변환은 신호에서 주파수를 추출하는 

348
00:19:01,089 --> 00:19:03,500
개념을 넘어 수학의 한 구석까지 확장됩니다.

349
00:19:04,240 --> 00:19:05,926
그래서 다음 동영상에서는 이 두 가지 

350
00:19:05,926 --> 00:19:07,533
과정을 거치게 될 것이고, 그때부터 

351
00:19:07,533 --> 00:19:09,140
정말 흥미로운 일이 시작될 것입니다.

352
00:19:10,000 --> 00:19:12,415
따라서 새로운 동영상이 나올 때까지 구독을 유지하거나 

353
00:19:12,415 --> 00:19:14,669
다른 옵션으로 3Blue 및 Brown 동영상 몇 

354
00:19:14,669 --> 00:19:17,084
개를 정주행하여 YouTube 추천이 새로운 동영상을 

355
00:19:17,084 --> 00:19:19,500
더 많이 보여줄 수 있도록 하는 것도 좋은 방법입니다.

356
00:19:19,880 --> 00:19:20,760
선택은 여러분의 몫입니다.

357
00:19:22,640 --> 00:19:24,828
마지막으로 더 많은 기술 인재를 

358
00:19:24,828 --> 00:19:27,259
채용하고자 하는 이 영상의 스폰서인 

359
00:19:27,259 --> 00:19:30,420
Jane Street의 수학 퍼즐을 소개합니다.

360
00:19:31,200 --> 00:19:34,426
3D 공간에 닫힌 경계가 있는 볼록 집합 

361
00:19:34,426 --> 00:19:37,652
C가 있다고 가정하고, 그 공간의 경계인 

362
00:19:37,652 --> 00:19:41,440
B를 복잡한 블롭의 표면이라고 가정해 보겠습니다.

363
00:19:42,200 --> 00:19:44,881
이제 해당 서페이스에서 가능한 모든 점 쌍을 

364
00:19:44,881 --> 00:19:48,100
가져와 합산하여 벡터 합계를 수행한다고 상상해 보세요.

365
00:19:48,960 --> 00:19:51,320
이 가능한 모든 합의 집합을 D라고 부르겠습니다.

366
00:19:52,020 --> 00:19:54,428
여러분의 과제는 D도 볼록 집합이라는 

367
00:19:54,428 --> 00:19:55,920
것을 증명하는 것입니다.

368
00:19:57,200 --> 00:20:00,307
Jane Street는 퀀트 트레이딩 회사인데, 

369
00:20:00,307 --> 00:20:02,840
수학을 좋아하고 이런 퍼즐을 푸는 것을 

370
00:20:02,840 --> 00:20:05,487
즐기는 사람이라면 지적 호기심을 중시하는 

371
00:20:05,487 --> 00:20:08,020
팀에서 채용에 관심을 가질 수 있습니다.

372
00:20:08,360 --> 00:20:10,720
그리고 정규직과 인턴을 모두 모집하고 있습니다.

373
00:20:11,140 --> 00:20:13,741
제가 그곳에서 만난 몇몇 사람들은 수학을 좋아하고 

374
00:20:13,741 --> 00:20:15,413
수학을 공유하는 것을 좋아하며, 

375
00:20:15,413 --> 00:20:17,736
채용할 때 금융 관련 배경보다는 사고 방식, 

376
00:20:17,736 --> 00:20:20,430
학습 방식, 문제 해결 방식을 더 중요하게 생각하기 

377
00:20:20,430 --> 00:20:22,846
때문에 3Blue1Brown 동영상을 후원하게 

378
00:20:22,846 --> 00:20:24,240
되었다고 말할 수 있습니다.

379
00:20:25,000 --> 00:20:26,937
이 수수께끼에 대한 답을 알고 싶거나, 

380
00:20:26,937 --> 00:20:28,787
어떤 일을 하는지 자세히 알아보거나, 

381
00:20:28,787 --> 00:20:31,254
공개 채용에 지원하려면 janestreet.com 

382
00:20:31,254 --> 00:20:32,840
slash 3b1b로 이동하세요.

383
00:20:41,040 --> 00:20:46,800
감사합니다.

