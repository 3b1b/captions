1
00:00:00,000 --> 00:00:04,449
Через минуту я укажу вам на отдельный веб-сайт, на котором

2
00:00:04,449 --> 00:00:09,200
размещена короткая серия так называемых обучающих видеороликов.

3
00:00:09,200 --> 00:00:12,318
Это было сделано в сотрудничестве с Беном Итером, которого некоторые из вас,

4
00:00:12,318 --> 00:00:15,640
возможно, знают как парня, который ведет отличный канал по компьютерной инженерии.

5
00:00:15,640 --> 00:00:18,359
И если вы не знаете, кто он такой, зрителям этого канала

6
00:00:18,359 --> 00:00:21,460
наверняка понравится его контент, так что обязательно посмотрите.

7
00:00:21,460 --> 00:00:25,886
Однако для нас обоих это сотрудничество было чем-то особенным, и вся веб-разработка,

8
00:00:25,886 --> 00:00:30,000
которая сделала возможными эти обучающие видеоролики, полностью благодаря Бену.

9
00:00:30,000 --> 00:00:32,957
Я не хочу здесь слишком много говорить об этом, это действительно

10
00:00:32,957 --> 00:00:35,646
то, что вам нужно испытать на себе, это определенно один из

11
00:00:35,646 --> 00:00:38,560
самых крутых проектов, над которыми я имел удовольствие работать.

12
00:00:38,560 --> 00:00:42,681
Однако перед этим, если вы сможете сдержать свое волнение, я хочу использовать

13
00:00:42,681 --> 00:00:46,960
это видео как шанс немного разнообразить ситуацию с помощью окружающего контекста.

14
00:00:46,960 --> 00:00:51,080
Итак, чтобы подготовить почву, в прошлом видео я описал кватернионы, определенную

15
00:00:51,080 --> 00:00:55,200
четырехмерную систему счисления, которую версии Росомахи и старика из «Один дома»

16
00:00:55,200 --> 00:00:59,320
19-го века называли злом из-за того, насколько запутанной она казалась в то время.

17
00:00:59,320 --> 00:01:02,585
И, возможно, вы тоже задаетесь вопросом, с какой стати кому-то

18
00:01:02,585 --> 00:01:05,540
нужна такая, казалось бы, инопланетная система счисления.

19
00:01:05,540 --> 00:01:08,754
Одна из главных причин, особенно для программистов, заключается в том,

20
00:01:08,754 --> 00:01:11,969
что они предоставляют действительно хороший способ описания трехмерной

21
00:01:11,969 --> 00:01:15,320
ориентации, который не подвержен ошибкам и крайним случаям других методов.

22
00:01:15,320 --> 00:01:18,191
Я имею в виду, что они интересны с математической точки зрения по

23
00:01:18,191 --> 00:01:20,844
многим причинам, но это приложение для компьютерной графики,

24
00:01:20,844 --> 00:01:23,498
робототехники, виртуальной реальности и всего, что связано с

25
00:01:23,498 --> 00:01:27,240
3D-ориентацией, вероятно, является самым большим вариантом использования кватернионов.

26
00:01:27,240 --> 00:01:31,026
Возьмем, к примеру, мой друг, Энди Матущак, который раньше работал в Apple, с

27
00:01:31,026 --> 00:01:35,007
удовольствием рассказал мне о доставке кода на сотни миллионов устройств, который

28
00:01:35,007 --> 00:01:39,280
использует кватернионы для отслеживания модели телефона и его ориентации в пространстве.

29
00:01:39,280 --> 00:01:42,758
Правильно, где-то внутри вашего телефона почти наверняка

30
00:01:42,758 --> 00:01:46,360
работает программное обеспечение, использующее кватернионы.

31
00:01:46,360 --> 00:01:49,919
Дело в том, что есть и другие способы думать о вычислении

32
00:01:49,919 --> 00:01:53,540
вращений, многие из которых гораздо проще, чем кватернионы.

33
00:01:53,540 --> 00:01:57,323
Например, любой из вас, знакомый с линейной алгеброй, знает, что

34
00:01:57,323 --> 00:02:01,340
матрицы 3x3 действительно хорошо описывают трехмерные преобразования.

35
00:02:01,340 --> 00:02:06,120
И распространенный способ, которым многие программисты думают о построении матрицы

36
00:02:06,120 --> 00:02:11,246
вращения для желаемой ориентации, — это представить вращение объекта вокруг трех простых

37
00:02:11,246 --> 00:02:16,256
в понимании осей, где соответствующие углы для этих поворотов обычно называются углами

38
00:02:16,256 --> 00:02:16,660
Эйлера.

39
00:02:16,660 --> 00:02:19,905
И это в основном работает, но одна большая проблема заключается в том,

40
00:02:19,905 --> 00:02:23,105
что он уязвим для так называемой блокировки карданного подвеса, когда

41
00:02:23,105 --> 00:02:26,580
когда две ваши оси вращения совпадают, вы теряете некоторую степень свободы.

42
00:02:26,580 --> 00:02:29,888
И это также может вызвать трудности и двусмысленности при

43
00:02:29,888 --> 00:02:33,140
попытке интерполяции между двумя отдельными ориентациями.

44
00:02:33,140 --> 00:02:35,772
Если вам интересно узнать больше подробностей, в Интернете можно

45
00:02:35,772 --> 00:02:38,365
найти множество отличных источников, посвященных углам Эйлера и

46
00:02:38,365 --> 00:02:41,120
фиксации подвеса, и я оставил в описании ссылки на некоторые из них.

47
00:02:41,120 --> 00:02:44,468
Кватернионы не только позволяют избежать таких проблем, как блокировка

48
00:02:44,468 --> 00:02:48,099
карданного подвеса, они дают действительно плавный способ интерполяции между

49
00:02:48,099 --> 00:02:51,684
двумя трехмерными ориентациями, в котором отсутствуют неоднозначности углов

50
00:02:51,684 --> 00:02:55,362
Эйлера и который позволяет избежать проблем числовой точности и нормализации,

51
00:02:55,362 --> 00:02:58,900
которые возникают при попытке интерполяции. между двумя матрицами вращения.

52
00:02:58,900 --> 00:03:02,726
Чтобы разобраться в идее о том, как умножение в некоторой многомерной

53
00:03:02,726 --> 00:03:06,716
системе счисления можно использовать для вычисления вращения, вспомните,

54
00:03:06,716 --> 00:03:10,980
почему комплексные числа дают удобный метод для вычисления двумерных вращений.

55
00:03:10,980 --> 00:03:14,626
В частности, предположим, что у вас есть некоторая точка в двумерном

56
00:03:14,626 --> 00:03:18,431
пространстве, например 4,1, и вы хотите знать новые координаты, которые

57
00:03:18,431 --> 00:03:22,500
вы получите, если повернете эту точку на 30 градусов вокруг начала координат.

58
00:03:22,500 --> 00:03:25,120
Комплексные числа дают своего рода шикарный способ сделать это.

59
00:03:25,120 --> 00:03:29,217
Вы берете комплексное число, отклоняющееся на 30 градусов от горизонтали, с

60
00:03:29,217 --> 00:03:33,314
величиной 1, потому что 30 градусов плюс грех 30 градусов, умноженный на i,

61
00:03:33,314 --> 00:03:37,520
а затем умножаете его на свою точку, представленную в виде комплексного числа.

62
00:03:37,520 --> 00:03:40,152
Единственное правило, которое вам нужно знать для проведения

63
00:03:40,152 --> 00:03:43,000
этих вычислений, заключается в том, что i2 равно отрицательному 1.

64
00:03:43,000 --> 00:03:47,134
Затем, что может показаться немного черной магией тем, кто впервые это

65
00:03:47,134 --> 00:03:51,152
изучает, выполнение этого продукта на основе одного простого правила

66
00:03:51,152 --> 00:03:55,520
дает координаты новой точки, точки, повернутой на 30 градусов от оригинала.

67
00:03:55,520 --> 00:03:58,202
Использование кватернионов для описания трехмерных

68
00:03:58,202 --> 00:04:01,200
вращений аналогично, хотя внешний вид немного отличается.

69
00:04:01,200 --> 00:04:04,720
Допустим, вы хотите повернуть на некоторый угол вокруг некоторой оси.

70
00:04:04,720 --> 00:04:08,235
Сначала вы определяете эту ось с помощью единичного вектора,

71
00:04:08,235 --> 00:04:12,154
который мы запишем как имеющий компоненты i, j и k, нормализованные

72
00:04:12,154 --> 00:04:15,440
так, чтобы сумма квадратов этих компонентов была равна 1.

73
00:04:15,440 --> 00:04:19,471
Как и в случае с комплексными числами, вы используете угол для построения

74
00:04:19,471 --> 00:04:23,720
кватерниона, принимая косинус этого угла в качестве действительной части плюс

75
00:04:23,720 --> 00:04:27,968
грех этого угла, умноженный на мнимую часть, за исключением того, что на этот

76
00:04:27,968 --> 00:04:32,000
раз мнимая часть состоит из трех компонентов, координат наша ось вращения.

77
00:04:32,000 --> 00:04:36,062
Ну, на самом деле вы берете половину ракурса, что может показаться совершенно

78
00:04:36,062 --> 00:04:39,760
произвольным, но, надеюсь, к концу всего этого опыта это обретет смысл.

79
00:04:39,760 --> 00:04:43,782
Допустим, у вас есть некая трехмерная точка, которую мы запишем с

80
00:04:43,782 --> 00:04:48,049
помощью компонентов i, j, k, и вы хотите знать координаты, которые вы

81
00:04:48,049 --> 00:04:52,560
получите, если повернуть эту точку на указанный угол вокруг указанной оси.

82
00:04:52,560 --> 00:04:57,731
То, что вы делаете, — это не просто произведение одного кватерниона, а своего рода

83
00:04:57,731 --> 00:05:02,840
сэндвич с кватернионами, где вы умножаете на q слева и обратное значение q справа.

84
00:05:02,840 --> 00:05:07,977
Если вы знаете правила умножения i, j и k между собой, вы можете выполнить эти

85
00:05:07,977 --> 00:05:13,440
два произведения, расширив все, или, что более реалистично, поручить это компьютеру.

86
00:05:13,440 --> 00:05:17,190
И это может показаться немного черной магией: это

87
00:05:17,190 --> 00:05:21,240
большое вычисление вернет вам повернутую версию точки.

88
00:05:21,240 --> 00:05:23,839
Наша цель — разобрать это и визуализировать, что

89
00:05:23,839 --> 00:05:26,120
происходит с каждым из этих двух продуктов.

90
00:05:26,120 --> 00:05:30,937
Я рассмотрю метод размышлений об умножении кватернионов, описанный в прошлом видео, и

91
00:05:30,937 --> 00:05:35,980
объясню, почему используется половина угла и почему вы должны умножать справа на обратное.

92
00:05:35,980 --> 00:05:39,644
Теперь на экране и вверху описания вы найдете ссылку на eater.

93
00:05:39,644 --> 00:05:43,812
net кватернионы косой черты, где Бен подготовил обучающее видео,

94
00:05:43,812 --> 00:05:47,660
в котором я объясняю, что происходит с вычислением вращения.

95
00:05:47,660 --> 00:05:49,240
Это просто здорово.

96
00:05:49,240 --> 00:05:50,500
Eater сделал здесь что-то потрясающее.

97
00:05:50,500 --> 00:05:52,207
Так что, по крайней мере, просто потратьте пару минут и посмотрите

98
00:05:52,207 --> 00:05:53,940
на это, но мне бы хотелось, чтобы вы прошли через все это полностью.

