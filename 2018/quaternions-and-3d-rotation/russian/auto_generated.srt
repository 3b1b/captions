1
00:00:00,000 --> 00:00:07,260
Через минуту я укажу вам на отдельный веб-сайт, на

2
00:00:07,260 --> 00:00:09,200
котором размещена короткая серия так называемых обучающих видеороликов.

3
00:00:09,200 --> 00:00:13,240
Это было сделано в сотрудничестве с Беном Итером, которого некоторые из вас,

4
00:00:13,240 --> 00:00:15,640
возможно, знают как парня, который ведет отличный канал по компьютерной инженерии.

5
00:00:15,640 --> 00:00:18,680
И если вы не знаете, кто он такой, зрителям этого

6
00:00:18,680 --> 00:00:21,460
канала наверняка понравится его контент, так что обязательно посмотрите.

7
00:00:21,460 --> 00:00:24,940
Однако для нас обоих это сотрудничество было чем-то особенным, и вся

8
00:00:24,940 --> 00:00:29,760
веб-разработка, которая сделала возможными эти обучающие видеоролики, полностью благодаря Бену.

9
00:00:30,000 --> 00:00:33,720
Я не хочу здесь слишком много говорить об этом, это действительно

10
00:00:33,720 --> 00:00:37,460
то, что вам нужно испытать на себе, это определенно один

11
00:00:37,460 --> 00:00:38,560
из самых крутых проектов, над которыми я имел удовольствие работать.

12
00:00:38,560 --> 00:00:42,280
Однако перед этим, если вы сможете сдержать свое волнение, я хочу использовать

13
00:00:42,280 --> 00:00:46,960
это видео как шанс немного разнообразить ситуацию с помощью окружающего контекста.

14
00:00:46,960 --> 00:00:51,760
Итак, чтобы подготовить почву, в прошлом видео я описал кватернионы, определенную четырехмерную

15
00:00:51,760 --> 00:00:56,660
систему счисления, которую версии Росомахи и старика из «Один дома» 19-го века

16
00:00:56,660 --> 00:00:59,280
называли злом из-за того, насколько запутанной она казалась в то время.

17
00:00:59,320 --> 00:01:03,600
И, возможно, вы тоже задаетесь вопросом, с какой стати

18
00:01:03,600 --> 00:01:05,540
кому-то нужна такая, казалось бы, инопланетная система счисления.

19
00:01:05,540 --> 00:01:10,200
Одна из главных причин, особенно для программистов, заключается в том, что они предоставляют действительно

20
00:01:10,200 --> 00:01:15,320
хороший способ описания трехмерной ориентации, который не подвержен ошибкам и крайним случаям других методов.

21
00:01:15,320 --> 00:01:19,420
Я имею в виду, что они интересны с математической точки зрения по

22
00:01:19,420 --> 00:01:24,040
многим причинам, но это приложение для компьютерной графики, робототехники, виртуальной реальности и

23
00:01:24,040 --> 00:01:27,240
всего, что связано с 3D-ориентацией, вероятно, является самым большим вариантом использования кватернионов.

24
00:01:27,240 --> 00:01:31,880
Возьмем, к примеру, мой друг, Энди Матущак, который раньше работал в Apple,

25
00:01:31,880 --> 00:01:36,080
с удовольствием рассказал мне о доставке кода на сотни миллионов устройств, который

26
00:01:36,080 --> 00:01:39,280
использует кватернионы для отслеживания модели телефона и его ориентации в пространстве.

27
00:01:39,280 --> 00:01:43,720
Правильно, где-то внутри вашего телефона почти

28
00:01:43,720 --> 00:01:46,360
наверняка работает программное обеспечение, использующее кватернионы.

29
00:01:46,360 --> 00:01:50,560
Дело в том, что есть и другие способы думать о

30
00:01:50,560 --> 00:01:53,540
вычислении вращений, многие из которых гораздо проще, чем кватернионы.

31
00:01:53,540 --> 00:01:58,660
Например, любой из вас, знакомый с линейной алгеброй, знает,

32
00:01:58,660 --> 00:02:01,340
что матрицы 3x3 действительно хорошо описывают трехмерные преобразования.

33
00:02:01,340 --> 00:02:05,660
И распространенный способ, которым многие программисты думают о построении матрицы вращения для

34
00:02:05,660 --> 00:02:11,300
желаемой ориентации, — это представить вращение объекта вокруг трех простых в понимании

35
00:02:11,300 --> 00:02:16,660
осей, где соответствующие углы для этих поворотов обычно называются углами Эйлера.

36
00:02:16,660 --> 00:02:21,140
И это в основном работает, но одна большая проблема заключается в

37
00:02:21,140 --> 00:02:25,580
том, что он уязвим для так называемой блокировки карданного подвеса, когда

38
00:02:25,580 --> 00:02:26,580
когда две ваши оси вращения совпадают, вы теряете некоторую степень свободы.

39
00:02:26,580 --> 00:02:32,140
И это также может вызвать трудности и двусмысленности

40
00:02:32,140 --> 00:02:33,140
при попытке интерполяции между двумя отдельными ориентациями.

41
00:02:33,140 --> 00:02:36,480
Если вам интересно узнать больше подробностей, в Интернете можно найти

42
00:02:36,480 --> 00:02:39,940
множество отличных источников, посвященных углам Эйлера и фиксации подвеса, и

43
00:02:39,940 --> 00:02:41,120
я оставил в описании ссылки на некоторые из них.

44
00:02:41,120 --> 00:02:45,180
Кватернионы не только позволяют избежать таких проблем, как блокировка карданного подвеса, они

45
00:02:45,180 --> 00:02:51,100
дают действительно плавный способ интерполяции между двумя трехмерными ориентациями, в котором

46
00:02:51,140 --> 00:02:55,580
отсутствуют неоднозначности углов Эйлера и который позволяет избежать проблем числовой точности

47
00:02:55,580 --> 00:02:58,900
и нормализации, которые возникают при попытке интерполяции. между двумя матрицами вращения.

48
00:02:58,900 --> 00:03:03,220
Чтобы разобраться в идее о том, как умножение в некоторой

49
00:03:03,220 --> 00:03:08,060
многомерной системе счисления можно использовать для вычисления вращения, вспомните, почему

50
00:03:08,060 --> 00:03:10,980
комплексные числа дают удобный метод для вычисления двумерных вращений.

51
00:03:10,980 --> 00:03:16,420
В частности, предположим, что у вас есть некоторая точка в двумерном

52
00:03:16,420 --> 00:03:20,900
пространстве, например 4,1, и вы хотите знать новые координаты, которые вы

53
00:03:20,900 --> 00:03:22,500
получите, если повернете эту точку на 30 градусов вокруг начала координат.

54
00:03:22,500 --> 00:03:25,120
Комплексные числа дают своего рода шикарный способ сделать это.

55
00:03:25,120 --> 00:03:30,300
Вы берете комплексное число, отклоняющееся на 30 градусов от горизонтали, с величиной

56
00:03:30,300 --> 00:03:35,880
1, потому что 30 градусов плюс грех 30 градусов, умноженный на i,

57
00:03:35,880 --> 00:03:37,520
а затем умножаете его на свою точку, представленную в виде комплексного числа.

58
00:03:37,520 --> 00:03:42,000
Единственное правило, которое вам нужно знать для проведения этих

59
00:03:42,000 --> 00:03:43,000
вычислений, заключается в том, что i2 равно отрицательному 1.

60
00:03:43,000 --> 00:03:46,880
Затем, что может показаться немного черной магией тем, кто впервые это

61
00:03:46,880 --> 00:03:51,800
изучает, выполнение этого продукта на основе одного простого правила дает

62
00:03:51,800 --> 00:03:55,520
координаты новой точки, точки, повернутой на 30 градусов от оригинала.

63
00:03:55,520 --> 00:04:00,200
Использование кватернионов для описания трехмерных вращений

64
00:04:00,200 --> 00:04:01,200
аналогично, хотя внешний вид немного отличается.

65
00:04:01,200 --> 00:04:04,720
Допустим, вы хотите повернуть на некоторый угол вокруг некоторой оси.

66
00:04:04,720 --> 00:04:09,440
Сначала вы определяете эту ось с помощью единичного вектора, который мы запишем как имеющий компоненты

67
00:04:09,440 --> 00:04:15,440
i, j и k, нормализованные так, чтобы сумма квадратов этих компонентов была равна 1.

68
00:04:15,440 --> 00:04:19,860
Как и в случае с комплексными числами, вы используете угол для построения

69
00:04:19,860 --> 00:04:25,720
кватерниона, принимая косинус этого угла в качестве действительной части плюс грех

70
00:04:25,720 --> 00:04:30,600
этого угла, умноженный на мнимую часть, за исключением того, что на этот

71
00:04:30,600 --> 00:04:32,000
раз мнимая часть состоит из трех компонентов, координат наша ось вращения.

72
00:04:32,000 --> 00:04:37,400
Ну, на самом деле вы берете половину ракурса, что может показаться совершенно

73
00:04:37,400 --> 00:04:39,760
произвольным, но, надеюсь, к концу всего этого опыта это обретет смысл.

74
00:04:39,760 --> 00:04:45,080
Допустим, у вас есть некая трехмерная точка, которую мы запишем с помощью

75
00:04:45,080 --> 00:04:49,400
компонентов i, j, k, и вы хотите знать координаты, которые вы

76
00:04:49,400 --> 00:04:52,560
получите, если повернуть эту точку на указанный угол вокруг указанной оси.

77
00:04:52,560 --> 00:04:57,760
То, что вы делаете, — это не просто произведение одного кватерниона, а своего рода

78
00:04:57,760 --> 00:05:02,840
сэндвич с кватернионами, где вы умножаете на q слева и обратное значение q справа.

79
00:05:02,840 --> 00:05:07,160
Если вы знаете правила умножения i, j и k

80
00:05:07,160 --> 00:05:11,560
между собой, вы можете выполнить эти два произведения, расширив

81
00:05:11,560 --> 00:05:13,440
все, или, что более реалистично, поручить это компьютеру.

82
00:05:13,440 --> 00:05:18,120
И это может показаться немного черной магией: это

83
00:05:18,120 --> 00:05:21,240
большое вычисление вернет вам повернутую версию точки.

84
00:05:21,240 --> 00:05:25,120
Наша цель — разобрать это и визуализировать, что

85
00:05:25,120 --> 00:05:26,120
происходит с каждым из этих двух продуктов.

86
00:05:26,120 --> 00:05:30,680
Я рассмотрю метод размышлений об умножении кватернионов, описанный в

87
00:05:30,680 --> 00:05:34,840
прошлом видео, и объясню, почему используется половина угла

88
00:05:34,840 --> 00:05:35,980
и почему вы должны умножать справа на обратное.

89
00:05:35,980 --> 00:05:39,780
Теперь на экране и вверху описания вы найдете ссылку на eater. net

90
00:05:39,780 --> 00:05:44,180
кватернионы косой черты, где Бен подготовил обучающее видео, в

91
00:05:44,180 --> 00:05:47,660
котором я объясняю, что происходит с вычислением вращения.

92
00:05:47,660 --> 00:05:49,240
Это просто здорово.

93
00:05:49,240 --> 00:05:50,500
Eater сделал здесь что-то потрясающее.

94
00:05:50,500 --> 00:05:53,940
Так что, по крайней мере, просто потратьте пару минут и посмотрите на

95
00:05:53,940 --> 00:05:55,300
это, но мне бы хотелось, чтобы вы прошли через все это полностью.

