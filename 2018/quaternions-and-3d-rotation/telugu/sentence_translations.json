[
 {
  "input": "In a moment, I'll point you to a separate website hosting a short sequence of what we're calling explorable videos.",
  "translatedText": "ఒక క్షణంలో, మేము అన్వేషించదగిన వీడియోలు అని పిలుస్తున్న వాటి యొక్క చిన్న క్రమాన్ని హోస్ట్ చేసే ప్రత్యేక వెబ్‌సైట్‌కి నేను మీకు చూపుతాను.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 2.96,
  "end": 8.64
 },
 {
  "input": "It was done in collaboration with Ben Eater, who some of you may know as that guy who runs the excellent computer engineering channel.",
  "translatedText": "ఇది బెన్ ఈటర్ సహకారంతో జరిగింది, అతను అద్భుతమైన కంప్యూటర్ ఇంజనీరింగ్ ఛానెల్‌ని నడుపుతున్న వ్యక్తిగా మీలో కొందరికి తెలిసి ఉండవచ్చు.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 9.22,
  "end": 14.96
 },
 {
  "input": "And if you don't know who he is, viewers of this channel would certainly enjoy the content of his, so do check it out.",
  "translatedText": "మరియు అతను ఎవరో మీకు తెలియకుంటే, ఈ ఛానెల్ వీక్షకులు అతని కంటెంట్‌ని ఖచ్చితంగా ఆనందిస్తారు, కాబట్టి దాన్ని తనిఖీ చేయండి.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 15.48,
  "end": 20.82
 },
 {
  "input": "This collaboration was something a little different though, for both of us, and all of the web development that made these explorable videos possible is completely thanks to Ben.",
  "translatedText": "ఈ సహకారం మా ఇద్దరికీ కొంత భిన్నంగా ఉన్నప్పటికీ, ఈ అన్వేషించదగిన వీడియోలను సాధ్యం చేసిన వెబ్ డెవలప్‌మెంట్ అంతా బెన్‌కి పూర్తిగా కృతజ్ఞతలు.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 21.3,
  "end": 29.38
 },
 {
  "input": "I don't want to say too much about it here, it's really something you have to experience for yourself, certainly one of the coolest projects I've had the pleasure of working on.",
  "translatedText": "నేను దాని గురించి ఇక్కడ ఎక్కువగా చెప్పదలచుకోలేదు, ఇది నిజంగా మీరు మీ కోసం అనుభవించాల్సిన విషయం, ఖచ్చితంగా నేను పని చేయడంలో ఆనందాన్ని పొందిన చక్కని ప్రాజెక్ట్‌లలో ఇది ఒకటి.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 29.86,
  "end": 37.88
 },
 {
  "input": "Before that though, if you can contain your excitement, I want to use this video as a chance to tee things up with a little bit of surrounding context.",
  "translatedText": "అయితే అంతకు ముందు, మీరు మీ ఉత్సాహాన్ని కలిగి ఉండగలిగితే, నేను ఈ వీడియోను చుట్టుపక్కల ఉన్న కొద్దిపాటి సందర్భాలను వివరించే అవకాశంగా ఉపయోగించాలనుకుంటున్నాను.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 38.3,
  "end": 45.46
 },
 {
  "input": "So to set the stage, last video I described quaternions, a certain 4-dimensional number system that the 19th century versions of Wolverine and the old man from Home Alone called evil for how convoluted it seemed at the time.",
  "translatedText": "కాబట్టి వేదికను సెట్ చేయడానికి, చివరి వీడియోలో నేను క్వాటర్నియాన్‌లను వివరించాను, 19వ శతాబ్దపు వుల్వరైన్ మరియు ఓల్డ్ మ్యాన్ ఫ్రమ్ హోమ్ అలోన్ యొక్క 19వ శతాబ్దపు సంస్కరణలు ఆ సమయంలో ఎంత మెలితిప్పినట్లు అనిపించిందో చెడుగా పిలిచారు.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 46.9,
  "end": 58.78
 },
 {
  "input": "And perhaps you too are wondering why on earth anyone would bother with such an alien-seeming number system.",
  "translatedText": "మరియు బహుశా మీరు కూడా అలాంటి గ్రహాంతర సంఖ్య వ్యవస్థతో భూమిపై ఎవరైనా ఎందుకు ఇబ్బంది పడతారని ఆలోచిస్తున్నారా?",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 59.06,
  "end": 64.32
 },
 {
  "input": "One of the big reasons, especially for programmers, is that they give a really nice way for describing 3D orientation, which is not susceptible to the bugs and edge cases of other methods.",
  "translatedText": "పెద్ద కారణాలలో ఒకటి, ముఖ్యంగా ప్రోగ్రామర్‌లకు, వారు 3D ఓరియంటేషన్‌ను వివరించడానికి నిజంగా చక్కని మార్గాన్ని అందిస్తారు, ఇది ఇతర పద్ధతుల యొక్క బగ్‌లు మరియు ఎడ్జ్ కేసులకు అవకాశం లేదు.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 65.2,
  "end": 75.22
 },
 {
  "input": "I mean, they're interesting mathematically for a lot of reasons, but this application for computer graphics and robotics and virtual reality and anything involving 3D orientation is probably the biggest use case for quaternions.",
  "translatedText": "నా ఉద్దేశ్యం, అవి చాలా కారణాల వల్ల గణితశాస్త్రపరంగా ఆసక్తికరంగా ఉన్నాయి, అయితే కంప్యూటర్ గ్రాఫిక్స్ మరియు రోబోటిక్స్ మరియు వర్చువల్ రియాలిటీ కోసం ఈ అప్లికేషన్ మరియు 3D ఓరియంటేషన్‌తో కూడిన ఏదైనా బహుశా క్వాటర్నియన్‌ల కోసం అతిపెద్ద ఉపయోగం.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 75.82,
  "end": 86.4
 },
 {
  "input": "To take one example, a friend of mine who used to work at Apple, Andy Matuszczak, delighted in telling me about shipping code to hundreds of millions of devices that uses quaternions to track the phone's model for how it's oriented in space.",
  "translatedText": "ఒక ఉదాహరణను తీసుకుంటే, Appleలో పని చేసే నా స్నేహితుడు, Andy Matuszczak, ఫోన్ యొక్క మోడల్‌ను అంతరిక్షంలో ఎలా నిర్దేశించబడిందో తెలుసుకోవడానికి క్వాటర్నియన్‌లను ఉపయోగించే వందల మిలియన్ల పరికరాలకు షిప్పింగ్ కోడ్ గురించి చెప్పడంలో సంతోషించారు.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 86.4,
  "end": 99.04
 },
 {
  "input": "That's right, your phone almost certainly has software running somewhere inside of it that relies on quaternions.",
  "translatedText": "అది సరియైనది, మీ ఫోన్‌లో దాదాపుగా క్వాటర్నియన్‌లపై ఆధారపడే సాఫ్ట్‌వేర్ లోపల ఎక్కడో రన్ అవుతోంది.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 99.66,
  "end": 105.24
 },
 {
  "input": "The thing is, there are other ways to think about computing rotations, many of which are way simpler to think about than quaternions.",
  "translatedText": "విషయం ఏమిటంటే, కంప్యూటింగ్ భ్రమణాల గురించి ఆలోచించడానికి ఇతర మార్గాలు ఉన్నాయి, వీటిలో చాలా వరకు క్వాటర్నియన్ల కంటే ఆలోచించడం చాలా సులభం.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 106.34,
  "end": 112.92
 },
 {
  "input": "For example, any of you familiar with linear algebra will know that 3x3 matrices can really nicely describe 3D transformations.",
  "translatedText": "ఉదాహరణకు, 3x3 మాత్రికలు నిజంగా 3D రూపాంతరాలను చక్కగా వివరించగలవని మీలో ఎవరికైనా లీనియర్ ఆల్జీబ్రా గురించి బాగా తెలుసు.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 113.25,
  "end": 120.78
 },
 {
  "input": "And a common way that many programmers think about constructing a rotation matrix for a desired orientation is to imagine rotating an object around three easy-to-think-about axes, where the relevant angles for these rotations are commonly called Euler angles.",
  "translatedText": "మరియు చాలా మంది ప్రోగ్రామర్లు కావలసిన ఓరియంటేషన్ కోసం భ్రమణ మాతృకను నిర్మించడం గురించి ఆలోచించే ఒక సాధారణ మార్గం ఏమిటంటే, మూడు సులభంగా ఆలోచించగలిగే అక్షాల చుట్టూ ఒక వస్తువును తిప్పడం గురించి ఆలోచించడం, ఈ భ్రమణాలకు సంబంధించిన కోణాలను సాధారణంగా యూలర్ కోణాలు అంటారు.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 121.34,
  "end": 135.74
 },
 {
  "input": "And this mostly works, but one big problem is that it's vulnerable to something called gimbal lock, where when two of your axes of rotation get lined up, you lose a degree of freedom.",
  "translatedText": "మరియు ఇది ఎక్కువగా పనిచేస్తుంది, కానీ ఒక పెద్ద సమస్య ఏమిటంటే ఇది గింబాల్ లాక్ అని పిలువబడే వాటికి హాని కలిగిస్తుంది, ఇక్కడ మీ రెండు భ్రమణ అక్షాలు వరుసలో ఉన్నప్పుడు, మీరు కొంత స్వేచ్ఛను కోల్పోతారు.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 136.58,
  "end": 146.1
 },
 {
  "input": "And it can also cause difficulties and ambiguities when trying to interpolate between two separate orientations.",
  "translatedText": "మరియు ఇది రెండు వేర్వేరు ధోరణుల మధ్య ఇంటర్‌పోలేట్ చేయడానికి ప్రయత్నిస్తున్నప్పుడు ఇబ్బందులు మరియు అస్పష్టతలను కూడా కలిగిస్తుంది.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 146.7,
  "end": 152.34
 },
 {
  "input": "If you're curious for more of the details, there are many great sources online for learning about Euler angles and gimbal lock, and I've left links in the description to a few of them.",
  "translatedText": "మీరు మరిన్ని వివరాల కోసం ఆసక్తిగా ఉంటే, ఆయిలర్ కోణాలు మరియు గింబల్ లాక్ గురించి తెలుసుకోవడానికి ఆన్‌లైన్‌లో అనేక గొప్ప మూలాధారాలు ఉన్నాయి మరియు వాటిలో కొన్నింటికి నేను వివరణలో లింక్‌లను ఉంచాను.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 152.94,
  "end": 160.32
 },
 {
  "input": "Not only do quaternions avoid issues like gimbal lock, they give a really seamless way to interpolate between two 3-dimensional orientations, one which lacks the ambiguities of Euler angles, and which avoids the issues of numerical precision and normalization that arise in trying to interpolate between two rotation matrices.",
  "translatedText": "క్వాటర్నియన్‌లు గింబాల్ లాక్ వంటి సమస్యలను నివారించడమే కాకుండా, అవి రెండు 3-డైమెన్షనల్ ఓరియంటేషన్‌ల మధ్య ఇంటర్‌పోలేట్ చేయడానికి నిజంగా అతుకులు లేని మార్గాన్ని అందిస్తాయి, ఇందులో యూలర్ కోణాల అస్పష్టత లేదు మరియు ఇది ఇంటర్‌పోలేట్ చేయడానికి ప్రయత్నించడంలో తలెత్తే సంఖ్యాపరమైన ఖచ్చితత్వం మరియు సాధారణీకరణ సమస్యలను నివారిస్తుంది. రెండు భ్రమణ మాత్రికల మధ్య.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 161.04,
  "end": 177.74
 },
 {
  "input": "To warm up to the idea of how multiplication in some higher-dimensional number system might be used to compute rotations, take a moment to remember how it is that complex numbers give a slick method for computing 2D rotations.",
  "translatedText": "భ్రమణాలను గణించడానికి కొన్ని అధిక-డైమెన్షనల్ నంబర్ సిస్టమ్‌లోని గుణకారం ఎలా ఉపయోగించబడుతుందనే ఆలోచనను వేడెక్కడానికి, సంక్లిష్ట సంఖ్యలు 2D భ్రమణాలను గణించడానికి వివేక పద్ధతిని ఎలా ఇస్తాయో గుర్తుంచుకోండి.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 178.78,
  "end": 190.86
 },
 {
  "input": "Specifically, let's say you have some point in 2-dimensional space like 4,1, and you want to know the new coordinates you'd get if you rotate this point 30 degrees around the origin.",
  "translatedText": "ప్రత్యేకంగా, మీరు 4,1 వంటి 2-డైమెన్షనల్ స్పేస్‌లో కొంత పాయింట్‌ని కలిగి ఉన్నారని అనుకుందాం మరియు మీరు ఈ పాయింట్‌ను మూలం చుట్టూ 30 డిగ్రీలు తిప్పితే మీకు లభించే కొత్త కోఆర్డినేట్‌లను తెలుసుకోవాలనుకుంటున్నారు.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 191.54,
  "end": 201.32
 },
 {
  "input": "Complex numbers give a sort of snazzy way to do this.",
  "translatedText": "కాంప్లెక్స్ సంఖ్యలు దీన్ని చేయడానికి ఒక విధమైన చమత్కారమైన మార్గాన్ని అందిస్తాయి.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 202.24,
  "end": 204.62
 },
 {
  "input": "You take the complex number that's 30 degrees off the horizontal with magnitude 1, cos 30 degrees plus sin 30 degrees times i, and then you multiply this by your point, represented as a complex number.",
  "translatedText": "మీరు కాంప్లెక్స్ సంఖ్యను క్షితిజ సమాంతరంగా 30 డిగ్రీలు మాగ్నిట్యూడ్ 1తో తీసుకుంటారు, 30 డిగ్రీలు ప్లస్ సిన్ 30 డిగ్రీల రెట్లు i, ఆపై మీరు దీన్ని సంక్లిష్ట సంఖ్యగా సూచించే మీ పాయింట్‌తో గుణించాలి.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 205.08,
  "end": 216.92
 },
 {
  "input": "The only rule you need to know to carry out this computation is that i2 equals negative 1.",
  "translatedText": "ఈ గణనను నిర్వహించడానికి మీరు తెలుసుకోవలసిన ఏకైక నియమం ఏమిటంటే i2 ప్రతికూల 1కి సమానం.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 217.5,
  "end": 222.12
 },
 {
  "input": "Then in what might feel like a bit of black magic to those first learning it, carrying out this product from that one simple rule gives the coordinates of a new point, the point rotated 30 degrees from the original.",
  "translatedText": "మొదట నేర్చుకునే వారికి కొంత మేజిక్ లాగా అనిపించవచ్చు, ఆ ఒక సాధారణ నియమం నుండి ఈ ఉత్పత్తిని నిర్వహించడం వలన కొత్త పాయింట్ యొక్క కోఆర్డినేట్‌లను ఇస్తుంది, పాయింట్ అసలు నుండి 30 డిగ్రీలు తిప్పబడుతుంది.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 222.12,
  "end": 233.84
 },
 {
  "input": "Using quaternions to describe 3D rotations is similar, though the look and feel is slightly different.",
  "translatedText": "3D భ్రమణాలను వివరించడానికి క్వాటర్నియన్‌లను ఉపయోగించడం సారూప్యంగా ఉంటుంది, అయినప్పటికీ రూపం మరియు అనుభూతి కొద్దిగా భిన్నంగా ఉంటాయి.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 235.34,
  "end": 240.5
 },
 {
  "input": "Let's say you want to rotate some angle about some axis.",
  "translatedText": "మీరు కొంత అక్షం గురించి కొంత కోణాన్ని తిప్పాలనుకుంటున్నారని అనుకుందాం.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 241.1,
  "end": 243.98
 },
 {
  "input": "You first define that axis with a unit vector, which we'll write as having i, j, and k components, normalized so that the sum of the squares of those components is 1.",
  "translatedText": "మీరు ముందుగా ఆ అక్షాన్ని యూనిట్ వెక్టార్‌తో నిర్వచించండి, మేము i, j మరియు k భాగాలను కలిగి ఉన్నట్లు వ్రాస్తాము, తద్వారా ఆ భాగాల యొక్క స్క్వేర్‌ల మొత్తం 1 అవుతుంది.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 244.7,
  "end": 254.26
 },
 {
  "input": "Similar to the case of complex numbers, you use the angle to construct a quaternion by taking cosine of that angle as the real part, plus sin of that angle times an imaginary part, except this time the imaginary part has three components, the coordinates of our axis of rotation.",
  "translatedText": "సంక్లిష్ట సంఖ్యల మాదిరిగానే, మీరు ఆ కోణం యొక్క కొసైన్‌ను వాస్తవ భాగంగా తీసుకోవడం ద్వారా చతుర్భుజాన్ని నిర్మించడానికి కోణాన్ని ఉపయోగిస్తారు, అలాగే ఆ కోణం యొక్క పాపం సార్లు ఒక ఊహాత్మక భాగం, ఈ సమయంలో తప్ప ఊహాత్మక భాగం మూడు భాగాలను కలిగి ఉంటుంది, అక్షాంశాలు మా భ్రమణ అక్షం.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 255.16,
  "end": 271.6
 },
 {
  "input": "Well, actually you take half of the angle, which might feel totally arbitrary, but hopefully that makes sense by the end of this whole experience.",
  "translatedText": "సరే, వాస్తవానికి మీరు కోణంలో సగం తీసుకుంటారు, ఇది పూర్తిగా ఏకపక్షంగా అనిపించవచ్చు, కానీ ఈ మొత్తం అనుభవం ముగిసే సమయానికి అది అర్థవంతంగా ఉంటుంది.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 272.52,
  "end": 279.72
 },
 {
  "input": "Let's say you have some 3D point, which we'll write with i, j, k components, and you want to know the coordinates you'd get when you rotate this point by your specified angle around your specified axis.",
  "translatedText": "మీరు కొన్ని 3D పాయింట్‌ని కలిగి ఉన్నారని అనుకుందాం, దానిని మేము i, j, k భాగాలతో వ్రాస్తాము మరియు మీరు ఈ పాయింట్‌ని మీ పేర్కొన్న అక్షం చుట్టూ మీ పేర్కొన్న కోణంతో తిప్పినప్పుడు మీరు పొందే కోఆర్డినేట్‌లను తెలుసుకోవాలనుకుంటున్నారు.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 280.54,
  "end": 291.54
 },
 {
  "input": "What you do is not just a single quaternion product, but a sort of quaternion sandwich, where you multiply by q from the left and the inverse of q from the right.",
  "translatedText": "మీరు చేసేది కేవలం ఒక క్వాటర్నియన్ ఉత్పత్తి మాత్రమే కాదు, ఒక విధమైన క్వాటర్నియన్ శాండ్‌విచ్, ఇక్కడ మీరు ఎడమ నుండి q మరియు కుడి నుండి q యొక్క విలోమంతో గుణిస్తారు.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 292.36,
  "end": 301.94
 },
 {
  "input": "If you know the rules for how i, j, and k multiply amongst themselves, you can carry out these two products by expanding everything out, or more realistically by having a computer do it for you.",
  "translatedText": "i, j, మరియు k ఒకదానికొకటి ఎలా గుణించాలి అనే నియమాలు మీకు తెలిస్తే, మీరు ఈ రెండు ఉత్పత్తులను అన్నింటినీ విస్తరించడం ద్వారా లేదా మరింత వాస్తవికంగా కంప్యూటర్‌ని కలిగి ఉండటం ద్వారా అమలు చేయవచ్చు.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 302.64,
  "end": 312.56
 },
 {
  "input": "And in what might feel like a bit of black magic, this big computation will return for you the rotated version of the point.",
  "translatedText": "మరియు ఒక బిట్ బ్లాక్ మ్యాజిక్ లాగా అనిపించవచ్చు, ఈ పెద్ద గణన మీ కోసం పాయింట్ యొక్క తిప్పబడిన సంస్కరణను అందిస్తుంది.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 313.1,
  "end": 320.4
 },
 {
  "input": "Our goal is to break this down and visualize what's happening with each of these two products.",
  "translatedText": "దీన్ని విచ్ఛిన్నం చేయడం మరియు ఈ రెండు ఉత్పత్తులలో ప్రతిదానితో ఏమి జరుగుతుందో ఊహించడం మా లక్ష్యం.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 321.16,
  "end": 325.76
 },
 {
  "input": "I'll review the method for thinking about quaternion multiplication described last video, and explain why half the angle is used, and why you would multiply from the right by the inverse.",
  "translatedText": "నేను చివరి వీడియోలో వివరించిన క్వాటర్నియన్ గుణకారం గురించి ఆలోచించే పద్ధతిని సమీక్షిస్తాను మరియు సగం కోణం ఎందుకు ఉపయోగించబడిందో మరియు మీరు కుడి నుండి విలోమంతో ఎందుకు గుణించాలో వివరిస్తాను.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 326.34,
  "end": 335.16
 },
 {
  "input": "On the screen now, and at the top of the description, you'll find a link to eater.",
  "translatedText": "ఇప్పుడు స్క్రీన్‌పై మరియు వివరణ ఎగువన, మీరు తినేవారికి లింక్‌ను కనుగొంటారు.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 335.94,
  "end": 339.34
 },
 {
  "input": "net slash quaternions, which is where Ben set up the explorable video tutorial, where I explain what's going on with this rotation computation.",
  "translatedText": "net slash quaternions, ఇక్కడే బెన్ అన్వేషించదగిన వీడియో ట్యుటోరియల్‌ని సెటప్ చేసాడు, ఇక్కడ నేను ఈ భ్రమణ గణనతో ఏమి జరుగుతుందో వివరిస్తాను.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 339.34,
  "end": 346.84
 },
 {
  "input": "It's just really cool.",
  "translatedText": "ఇది నిజంగా బాగుంది.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 347.64,
  "end": 349.0
 },
 {
  "input": "Eater did something awesome here.",
  "translatedText": "ఈటర్ ఇక్కడ అద్భుతంగా చేసింది.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 349.22,
  "end": 350.34
 },
 {
  "input": "So at the very least, just take a couple minutes to go look at it, but I'd love it if you went through the full experience.",
  "translatedText": "కాబట్టి కనీసం, కేవలం రెండు నిమిషాలు మాత్రమే చూసుకోండి, కానీ మీరు పూర్తి అనుభవాన్ని పొందినట్లయితే నేను దీన్ని ఇష్టపడతాను.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 350.54,
  "end": 354.6
 }
]