1
00:00:00,000 --> 00:00:07,260
すぐに、探索可能なビデオと呼ばれるものの短いシーケ

2
00:00:07,260 --> 00:00:09,200
ンスをホストする別の Web サイトを紹介します。

3
00:00:09,200 --> 00:00:13,240
これは、優れたコンピューター エンジニアリング チャンネ

4
00:00:13,240 --> 00:00:15,640
ルを運営するベン イーターとの共同作業で行われました。

5
00:00:15,640 --> 00:00:18,680
彼が誰であるかを知らなくても、このチャンネルの視聴者は間違いなく彼

6
00:00:18,680 --> 00:00:21,460
のコンテンツを楽しむことができるので、ぜひチェックしてください。

7
00:00:21,460 --> 00:00:24,940
ただし、このコラボレーションは私たち二人にとって少し違ったものでした。これら

8
00:00:24,940 --> 00:00:29,760
の探索可能なビデオを可能にしたウェブ開発はすべて、完全にベンのおかげです。

9
00:00:30,000 --> 00:00:33,720
ここではそれについてあまり言いたくありませんが、これは

10
00:00:33,720 --> 00:00:37,460
実際に自分で体験する必要があり、間違いなく私が喜んで取

11
00:00:37,460 --> 00:00:38,560
り組んできた最もクールなプロジェクトの 1 つです。

12
00:00:38,560 --> 00:00:42,280
その前に、興奮を抑えられるのであれば、このビデオを周囲

13
00:00:42,280 --> 00:00:46,960
の状況を少し理解する機会として使用したいと思います。

14
00:00:46,960 --> 00:00:51,760
それで、準備を整えるために、前回のビデオでクォータニオンについて説明しました

15
00:00:51,760 --> 00:00:56,660
。クォータニオンは、19 世紀版のウルヴァリンやホーム アローンの老人が当

16
00:00:56,660 --> 00:00:59,280
時あまりに複雑に見えたため悪と呼ばれていた、特定の 4 次元の数体系です。

17
00:00:59,320 --> 00:01:03,600
そして、おそらくあなたも、いったいなぜ誰もがそのようなエイリアンのよう

18
00:01:03,600 --> 00:01:05,540
に見える番号体系にわざわざこだわるのか疑問に思っているかもしれません。

19
00:01:05,540 --> 00:01:10,200
特にプログラマにとっての大きな理由の 1 つは、他のメソッドのバグやエッジ ケース

20
00:01:10,200 --> 00:01:15,320
の影響を受けにくい 3D 方向を記述するための非常に優れた方法を提供することです。

21
00:01:15,320 --> 00:01:19,420
つまり、それらは多くの理由で数学的に興味深いものですが、コンピューター グ

22
00:01:19,420 --> 00:01:24,040
ラフィックス、ロボット工学、仮想現実、および 3D 方向に関連するものに

23
00:01:24,040 --> 00:01:27,240
対するこのアプリケーションは、おそらくクォータニオンの最大の使用例です。

24
00:01:27,240 --> 00:01:31,880
一例を挙げると、以前 Apple で働いていた私の友人、Andy Matus

25
00:01:31,880 --> 00:01:36,080
zczak は、空間内での携帯電話の向きを追跡するためにクォータニオンを使用

26
00:01:36,080 --> 00:01:39,280
するコードを数億台のデバイスに出荷することについて喜んで話してくれました。

27
00:01:39,280 --> 00:01:43,720
そうです、あなたの携帯電話の内部のどこかで、四元数に依存す

28
00:01:43,720 --> 00:01:46,360
るソフトウェアが実行されているのはほぼ間違いありません。

29
00:01:46,360 --> 00:01:50,560
問題は、回転の計算については他にも考え方があり、その多くはクォー

30
00:01:50,560 --> 00:01:53,540
タニオンよりもはるかに簡単に考えることができるということです。

31
00:01:53,540 --> 00:01:58,660
たとえば、線形代数に詳しい人なら、3x3 行列が 3D

32
00:01:58,660 --> 00:02:01,340
変換を非常にうまく記述できることを知っているでしょう。

33
00:02:01,340 --> 00:02:05,660
そして、多くのプログラマーが目的の向きの回転行列を構築する際に考える一般的

34
00:02:05,660 --> 00:02:11,300
な方法は、考えやすい 3 つの軸の周りでオブジェクトを回転させることを想像

35
00:02:11,300 --> 00:02:16,660
することです。これらの回転に関連する角度は一般にオイラー角と呼ばれます。

36
00:02:16,660 --> 00:02:21,140
これはほとんど機能しますが、大きな問題の 1 つは、ジンバル

37
00:02:21,140 --> 00:02:25,580
ロックと呼ばれるものに対して脆弱であることです。ジンバル

38
00:02:25,580 --> 00:02:26,580
ロックとは、2 つの回転軸が並ぶと自由度が失われることです。

39
00:02:26,580 --> 00:02:32,140
また、2 つの異なる方向の間を補間しようとする

40
00:02:32,140 --> 00:02:33,140
ときに、困難や曖昧さが生じる可能性もあります。

41
00:02:33,140 --> 00:02:36,480
さらに詳しく知りたい場合は、オイラー角とジンバル ロック

42
00:02:36,480 --> 00:02:39,940
について学ぶための優れた情報源がオンラインにたくさんあり

43
00:02:39,940 --> 00:02:41,120
ます。そのうちのいくつかへのリンクを説明に残しました。

44
00:02:41,120 --> 00:02:45,180
クォータニオンはジンバル ロックのような問題を回避するだけでなく、

45
00:02:45,180 --> 00:02:51,100
2 つの 3 次元方向の間で補間する非常にシームレスな方法を提供

46
00:02:51,140 --> 00:02:55,580
します。これにより、オイラー角の曖昧さがなくなり、補間時に発生す

47
00:02:55,580 --> 00:02:58,900
る数値精度と正規化の問題が回避されます。 2 つの回転行列の間。

48
00:02:58,900 --> 00:03:03,220
回転を計算するために高次元の数体系の乗算がどのように使用されるか

49
00:03:03,220 --> 00:03:08,060
というアイデアを理解するために、複素数が 2D 回転を計算するた

50
00:03:08,060 --> 00:03:10,980
めの巧妙な方法をどのように提供するのかを少し思い出してください。

51
00:03:10,980 --> 00:03:16,420
具体的には、4,1 のような 2 次元空間に点

52
00:03:16,420 --> 00:03:20,900
があり、この点を原点の周りに 30 度回転した

53
00:03:20,900 --> 00:03:22,500
場合に得られる新しい座標を知りたいとします。

54
00:03:22,500 --> 00:03:25,120
複素数を使用すると、これを行うための一種の気の利いた方法が得られます。

55
00:03:25,120 --> 00:03:30,300
水平から 30 度離れたマグニチュード 1 の複素数、

56
00:03:30,300 --> 00:03:35,880
cos 30 度 + sin 30 度 x i を取

57
00:03:35,880 --> 00:03:37,520
得し、これに複素数として表されるポイントを掛けます。

58
00:03:37,520 --> 00:03:42,000
この計算を実行するために知っておく必要がある唯一のルー

59
00:03:42,000 --> 00:03:43,000
ルは、i2 がマイナス 1 に等しいということです。

60
00:03:43,000 --> 00:03:46,880
次に、初めて学習する人にとってはちょっとした黒魔術のように感じるかもし

61
00:03:46,880 --> 00:03:51,800
れませんが、その 1 つの単純なルールに基づいてこの積を実行すると、新

62
00:03:51,800 --> 00:03:55,520
しい点の座標が得られます。その点は、元の点から 30 度回転しました。

63
00:03:55,520 --> 00:04:00,200
クォータニオンを使用して 3D 回転を記述すること

64
00:04:00,200 --> 00:04:01,200
は似ていますが、見た目と操作性は若干異なります。

65
00:04:01,200 --> 00:04:04,720
ある軸を中心にある角度を回転させたいとします。

66
00:04:04,720 --> 00:04:09,440
まず、単位ベクトルを使用してその軸を定義します。単位ベクトルは、i、j、k のコンポーネントを

67
00:04:09,440 --> 00:04:15,440
持ち、これらのコンポーネントの二乗の合計が 1 になるように正規化されたものとして記述します。

68
00:04:15,440 --> 00:04:19,860
複素数の場合と同様に、角度を使用して、その角度の余弦を

69
00:04:19,860 --> 00:04:25,720
実数部とし、その角度の正弦と虚数部を掛けたものを取得

70
00:04:25,720 --> 00:04:30,600
して四元数を構築します。ただし、今回の虚数部には 3

71
00:04:30,600 --> 00:04:32,000
つの成分、つまり次の座標があります。私たちの回転軸。

72
00:04:32,000 --> 00:04:37,400
そうですね、実際には角度の半分を取るので、完全に任意に感じるかもしれませ

73
00:04:37,400 --> 00:04:39,760
んが、この体験全体が終わる頃にはそれが意味をなすことができれば幸いです。

74
00:04:39,760 --> 00:04:45,080
i、j、k コンポーネントで記述する 3D 点があ

75
00:04:45,080 --> 00:04:49,400
るとします。この点を指定した軸の周りに指定した角度

76
00:04:49,400 --> 00:04:52,560
だけ回転したときに得られる座標を知りたいとします。

77
00:04:52,560 --> 00:04:57,760
ここで行うことは、単一の四元数積ではなく、一種の四元数サンドイッ

78
00:04:57,760 --> 00:05:02,840
チであり、左から q を乗算し、右から q の逆数を乗算します。

79
00:05:02,840 --> 00:05:07,160
i、j、k がどのように乗算されるかについての規則を知っている場合は

80
00:05:07,160 --> 00:05:11,560
、すべてを拡張することによって、またはより現実的にはコンピューター

81
00:05:11,560 --> 00:05:13,440
にそれを実行させることによって、これら 2 つの積を実行できます。

82
00:05:13,440 --> 00:05:18,120
そして、ちょっとした黒魔術のように感じるかもしれませんが、こ

83
00:05:18,120 --> 00:05:21,240
の大規模な計算により、ポイントの回転バージョンが返されます。

84
00:05:21,240 --> 00:05:25,120
私たちの目標は、これを分析し、これら 2 つの製品の

85
00:05:25,120 --> 00:05:26,120
それぞれで何が起こっているのかを視覚化することです。

86
00:05:26,120 --> 00:05:30,680
前回のビデオで説明したクォータニオンの乗算の

87
00:05:30,680 --> 00:05:34,840
考え方を復習し、なぜ半分の角度を使用するのか

88
00:05:34,840 --> 00:05:35,980
、なぜ右から逆数を乗算するのかを説明します。

89
00:05:35,980 --> 00:05:39,780
現在、画面の説明の上部に、eater へのリンクがあります。ne

90
00:05:39,780 --> 00:05:44,180
t スラッシュ クォータニオン。Ben が探索可能なビデオ チュートリアルをセット

91
00:05:44,180 --> 00:05:47,660
アップした場所です。そこで私は、この回転計算で何が起こっているのかを説明します。

92
00:05:47,660 --> 00:05:49,240
本当にクールです。

93
00:05:49,240 --> 00:05:50,500
イーターはここで素晴らしいことをしました。

94
00:05:50,500 --> 00:05:53,940
したがって、少なくとも数分だけ見ていただければ幸

95
00:05:53,940 --> 00:05:55,300
いです。すべてを体験していただければ幸いです。

