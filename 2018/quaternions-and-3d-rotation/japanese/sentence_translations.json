[
 {
  "input": "In a moment, I'll point you to a separate website hosting a short sequence of what we're calling explorable videos.",
  "model": "nmt",
  "translatedText": "すぐに、探索可能なビデオと呼ばれるものの短いシーケ ンスをホストする別の Web サイトを紹介します。",
  "time_range": [
   2.9599999999999973,
   8.64
  ],
  "n_reviews": 0
 },
 {
  "input": "It was done in collaboration with Ben Eater, who some of you may know as that guy who runs the excellent computer engineering channel.",
  "model": "nmt",
  "translatedText": "これは、優れたコンピューター エンジニアリング チャンネ ルを運営するベン イーターとの共同作業で行われました。",
  "time_range": [
   9.22,
   14.96
  ],
  "n_reviews": 0
 },
 {
  "input": "And if you don't know who he is, viewers of this channel would certainly enjoy the content of his, so do check it out.",
  "model": "nmt",
  "translatedText": "彼が誰であるかを知らなくても、このチャンネルの視聴者は間違いなく彼 のコンテンツを楽しむことができるので、ぜひチェックしてください。",
  "time_range": [
   15.48,
   20.82
  ],
  "n_reviews": 0
 },
 {
  "input": "This collaboration was something a little different though, for both of us, and all of the web development that made these explorable videos possible is completely thanks to Ben.",
  "model": "nmt",
  "translatedText": "ただし、このコラボレーションは私たち二人にとって少し違ったものでした。 これら の探索可能なビデオを可能にしたウェブ開発はすべて、完全にベンのおかげです。",
  "time_range": [
   21.3,
   29.38
  ],
  "n_reviews": 0
 },
 {
  "input": "I don't want to say too much about it here, it's really something you have to experience for yourself, certainly one of the coolest projects I've had the pleasure of working on.",
  "model": "nmt",
  "translatedText": "ここではそれについてあまり言いたくありませんが、これは 実際に自分で体験する必要があり、間違いなく私が喜んで取 り組んできた最もクールなプロジェクトの 1 つです。",
  "time_range": [
   29.86,
   37.88
  ],
  "n_reviews": 0
 },
 {
  "input": "Before that though, if you can contain your excitement, I want to use this video as a chance to tee things up with a little bit of surrounding context.",
  "model": "nmt",
  "translatedText": "その前に、興奮を抑えられるのであれば、このビデオを周囲 の状況を少し理解する機会として使用したいと思います。",
  "time_range": [
   38.3,
   45.46
  ],
  "n_reviews": 0
 },
 {
  "input": "So to set the stage, last video I described quaternions, a certain 4-dimensional number system that the 19th century versions of Wolverine and the old man from Home Alone called evil for how convoluted it seemed at the time.",
  "model": "nmt",
  "translatedText": "それで、準備を整えるために、前回のビデオでクォータニオンについて説明しました。 クォータニオンは、19 世紀版のウルヴァリンやホーム アローンの老人が当 時あまりに複雑に見えたため悪と呼ばれていた、特定の 4 次元の数体系です。",
  "time_range": [
   46.9,
   58.78
  ],
  "n_reviews": 0
 },
 {
  "input": "And perhaps you too are wondering why on earth anyone would bother with such an alien-seeming number system.",
  "model": "nmt",
  "translatedText": "そして、おそらくあなたも、いったいなぜ誰もがそのようなエイリアンのよう に見える番号体系にわざわざこだわるのか疑問に思っているかもしれません。",
  "time_range": [
   59.06,
   64.32
  ],
  "n_reviews": 0
 },
 {
  "input": "One of the big reasons, especially for programmers, is that they give a really nice way for describing 3D orientation, which is not susceptible to the bugs and edge cases of other methods.",
  "model": "nmt",
  "translatedText": "特にプログラマにとっての大きな理由の 1 つは、他のメソッドのバグやエッジ ケース の影響を受けにくい 3D 方向を記述するための非常に優れた方法を提供することです。",
  "time_range": [
   65.2,
   75.22
  ],
  "n_reviews": 0
 },
 {
  "input": "I mean, they're interesting mathematically for a lot of reasons, but this application for computer graphics and robotics and virtual reality and anything involving 3D orientation is probably the biggest use case for quaternions.",
  "model": "nmt",
  "translatedText": "つまり、それらは多くの理由で数学的に興味深いものですが、コンピューター グ ラフィックス、ロボット工学、仮想現実、および 3D 方向に関連するものに 対するこのアプリケーションは、おそらくクォータニオンの最大の使用例です。",
  "time_range": [
   75.82,
   86.4
  ],
  "n_reviews": 0
 },
 {
  "input": "To take one example, a friend of mine who used to work at Apple, Andy Matuszczak, delighted in telling me about shipping code to hundreds of millions of devices that uses quaternions to track the phone's model for how it's oriented in space.",
  "model": "nmt",
  "translatedText": "一例を挙げると、以前 Apple で働いていた私の友人、Andy Matus zczak は、空間内での携帯電話の向きを追跡するためにクォータニオンを使用 するコードを数億台のデバイスに出荷することについて喜んで話してくれました。",
  "time_range": [
   86.4,
   99.04
  ],
  "n_reviews": 0
 },
 {
  "input": "That's right, your phone almost certainly has software running somewhere inside of it that relies on quaternions.",
  "model": "nmt",
  "translatedText": "そうです、あなたの携帯電話の内部のどこかで、四元数に依存す るソフトウェアが実行されているのはほぼ間違いありません。",
  "time_range": [
   99.66,
   105.24
  ],
  "n_reviews": 0
 },
 {
  "input": "The thing is, there are other ways to think about computing rotations, many of which are way simpler to think about than quaternions.",
  "model": "nmt",
  "translatedText": "問題は、回転の計算については他にも考え方があり、その多くはクォー タニオンよりもはるかに簡単に考えることができるということです。",
  "time_range": [
   106.34,
   112.92
  ],
  "n_reviews": 0
 },
 {
  "input": "For example, any of you familiar with linear algebra will know that 3x3 matrices can really nicely describe 3D transformations.",
  "model": "nmt",
  "translatedText": "たとえば、線形代数に詳しい人なら、3x3 行列が 3D 変換を非常にうまく記述できることを知っているでしょう。",
  "time_range": [
   113.25,
   120.78
  ],
  "n_reviews": 0
 },
 {
  "input": "And a common way that many programmers think about constructing a rotation matrix for a desired orientation is to imagine rotating an object around three easy-to-think-about axes, where the relevant angles for these rotations are commonly called Euler angles.",
  "model": "nmt",
  "translatedText": "そして、多くのプログラマーが目的の向きの回転行列を構築する際に考える一般的 な方法は、考えやすい 3 つの軸の周りでオブジェクトを回転させることを想像 することです。 これらの回転に関連する角度は一般にオイラー角と呼ばれます。",
  "time_range": [
   121.34,
   135.74
  ],
  "n_reviews": 0
 },
 {
  "input": "And this mostly works, but one big problem is that it's vulnerable to something called gimbal lock, where when two of your axes of rotation get lined up, you lose a degree of freedom.",
  "model": "nmt",
  "translatedText": "これはほとんど機能しますが、大きな問題の 1 つは、ジンバル ロックと呼ばれるものに対して脆弱であることです。 ジンバル ロックとは、2 つの回転軸が並ぶと自由度が失われることです。",
  "time_range": [
   136.58,
   146.1
  ],
  "n_reviews": 0
 },
 {
  "input": "And it can also cause difficulties and ambiguities when trying to interpolate between two separate orientations.",
  "model": "nmt",
  "translatedText": "また、2 つの異なる方向の間を補間しようとする ときに、困難や曖昧さが生じる可能性もあります。",
  "time_range": [
   146.7,
   152.34
  ],
  "n_reviews": 0
 },
 {
  "input": "If you're curious for more of the details, there are many great sources online for learning about Euler angles and gimbal lock, and I've left links in the description to a few of them.",
  "model": "nmt",
  "translatedText": "さらに詳しく知りたい場合は、オイラー角とジンバル ロック について学ぶための優れた情報源がオンラインにたくさんあり ます。 そのうちのいくつかへのリンクを説明に残しました。",
  "time_range": [
   152.94,
   160.32
  ],
  "n_reviews": 0
 },
 {
  "input": "Not only do quaternions avoid issues like gimbal lock, they give a really seamless way to interpolate between two 3-dimensional orientations, one which lacks the ambiguities of Euler angles, and which avoids the issues of numerical precision and normalization that arise in trying to interpolate between two rotation matrices.",
  "model": "nmt",
  "translatedText": "クォータニオンはジンバル ロックのような問題を回避するだけでなく、 2 つの 3 次元方向の間で補間する非常にシームレスな方法を提供 します。 これにより、オイラー角の曖昧さがなくなり、補間時に発生す る数値精度と正規化の問題が回避されます。 2 つの回転行列の間。",
  "time_range": [
   161.04,
   177.74
  ],
  "n_reviews": 0
 },
 {
  "input": "To warm up to the idea of how multiplication in some higher-dimensional number system might be used to compute rotations, take a moment to remember how it is that complex numbers give a slick method for computing 2D rotations.",
  "model": "nmt",
  "translatedText": "回転を計算するために高次元の数体系の乗算がどのように使用されるか というアイデアを理解するために、複素数が 2D 回転を計算するた めの巧妙な方法をどのように提供するのかを少し思い出してください。",
  "time_range": [
   178.78,
   190.86
  ],
  "n_reviews": 0
 },
 {
  "input": "Specifically, let's say you have some point in 2-dimensional space like 4,1, and you want to know the new coordinates you'd get if you rotate this point 30 degrees around the origin.",
  "model": "nmt",
  "translatedText": "具体的には、4,1 のような 2 次元空間に点 があり、この点を原点の周りに 30 度回転した 場合に得られる新しい座標を知りたいとします。",
  "time_range": [
   191.54,
   201.32
  ],
  "n_reviews": 0
 },
 {
  "input": "Complex numbers give a sort of snazzy way to do this.",
  "model": "nmt",
  "translatedText": "複素数を使用すると、これを行うための一種の気の利いた方法が得られます。",
  "time_range": [
   202.24,
   204.62
  ],
  "n_reviews": 0
 },
 {
  "input": "You take the complex number that's 30 degrees off the horizontal with magnitude 1, cos 30 degrees plus sin 30 degrees times i, and then you multiply this by your point, represented as a complex number.",
  "model": "nmt",
  "translatedText": "水平から 30 度離れたマグニチュード 1 の複素数、 cos 30 度 + sin 30 度 x i を取 得し、これに複素数として表されるポイントを掛けます。",
  "time_range": [
   205.08,
   216.92
  ],
  "n_reviews": 0
 },
 {
  "input": "The only rule you need to know to carry out this computation is that i2 equals negative 1.",
  "model": "nmt",
  "translatedText": "この計算を実行するために知っておく必要がある唯一のルー ルは、i2 がマイナス 1 に等しいということです。",
  "time_range": [
   217.5,
   222.12
  ],
  "n_reviews": 0
 },
 {
  "input": "Then in what might feel like a bit of black magic to those first learning it, carrying out this product from that one simple rule gives the coordinates of a new point, the point rotated 30 degrees from the original.",
  "model": "nmt",
  "translatedText": "次に、初めて学習する人にとってはちょっとした黒魔術のように感じるかもし れませんが、その 1 つの単純なルールに基づいてこの積を実行すると、新 しい点の座標が得られます。 その点は、元の点から 30 度回転しました。",
  "time_range": [
   222.12,
   233.84
  ],
  "n_reviews": 0
 },
 {
  "input": "Using quaternions to describe 3D rotations is similar, though the look and feel is slightly different.",
  "model": "nmt",
  "translatedText": "クォータニオンを使用して 3D 回転を記述すること は似ていますが、見た目と操作性は若干異なります。",
  "time_range": [
   235.34,
   240.5
  ],
  "n_reviews": 0
 },
 {
  "input": "Let's say you want to rotate some angle about some axis.",
  "model": "nmt",
  "translatedText": "ある軸を中心にある角度を回転させたいとします。",
  "time_range": [
   241.1,
   243.98
  ],
  "n_reviews": 0
 },
 {
  "input": "You first define that axis with a unit vector, which we'll write as having i, j, and k components, normalized so that the sum of the squares of those components is 1.",
  "model": "nmt",
  "translatedText": "まず、単位ベクトルを使用してその軸を定義します。 単位ベクトルは、i、j、k のコンポーネントを 持ち、これらのコンポーネントの二乗の合計が 1 になるように正規化されたものとして記述します。",
  "time_range": [
   244.7,
   254.26
  ],
  "n_reviews": 0
 },
 {
  "input": "Similar to the case of complex numbers, you use the angle to construct a quaternion by taking cosine of that angle as the real part, plus sin of that angle times an imaginary part, except this time the imaginary part has three components, the coordinates of our axis of rotation.",
  "model": "nmt",
  "translatedText": "複素数の場合と同様に、角度を使用して、その角度の余弦を 実数部とし、その角度の正弦と虚数部を掛けたものを取得 して四元数を構築します。 ただし、今回の虚数部には 3 つの成分、つまり次の座標があります。 私たちの回転軸。",
  "time_range": [
   255.16,
   271.6
  ],
  "n_reviews": 0
 },
 {
  "input": "Well, actually you take half of the angle, which might feel totally arbitrary, but hopefully that makes sense by the end of this whole experience.",
  "model": "nmt",
  "translatedText": "そうですね、実際には角度の半分を取るので、完全に任意に感じるかもしれませ んが、この体験全体が終わる頃にはそれが意味をなすことができれば幸いです。",
  "time_range": [
   272.52,
   279.72
  ],
  "n_reviews": 0
 },
 {
  "input": "Let's say you have some 3D point, which we'll write with i, j, k components, and you want to know the coordinates you'd get when you rotate this point by your specified angle around your specified axis.",
  "model": "nmt",
  "translatedText": "i、j、k コンポーネントで記述する 3D 点があ るとします。 この点を指定した軸の周りに指定した角度 だけ回転したときに得られる座標を知りたいとします。",
  "time_range": [
   280.54,
   291.54
  ],
  "n_reviews": 0
 },
 {
  "input": "What you do is not just a single quaternion product, but a sort of quaternion sandwich, where you multiply by q from the left and the inverse of q from the right.",
  "model": "nmt",
  "translatedText": "ここで行うことは、単一の四元数積ではなく、一種の四元数サンドイッ チであり、左から q を乗算し、右から q の逆数を乗算します。",
  "time_range": [
   292.36,
   301.94
  ],
  "n_reviews": 0
 },
 {
  "input": "If you know the rules for how i, j, and k multiply amongst themselves, you can carry out these two products by expanding everything out, or more realistically by having a computer do it for you.",
  "model": "nmt",
  "translatedText": "i、j、k がどのように乗算されるかについての規則を知っている場合は 、すべてを拡張することによって、またはより現実的にはコンピューター にそれを実行させることによって、これら 2 つの積を実行できます。",
  "time_range": [
   302.64,
   312.56
  ],
  "n_reviews": 0
 },
 {
  "input": "And in what might feel like a bit of black magic, this big computation will return for you the rotated version of the point.",
  "model": "nmt",
  "translatedText": "そして、ちょっとした黒魔術のように感じるかもしれませんが、こ の大規模な計算により、ポイントの回転バージョンが返されます。",
  "time_range": [
   313.1,
   320.4
  ],
  "n_reviews": 0
 },
 {
  "input": "Our goal is to break this down and visualize what's happening with each of these two products.",
  "model": "nmt",
  "translatedText": "私たちの目標は、これを分析し、これら 2 つの製品の それぞれで何が起こっているのかを視覚化することです。",
  "time_range": [
   321.16,
   325.76
  ],
  "n_reviews": 0
 },
 {
  "input": "I'll review the method for thinking about quaternion multiplication described last video, and explain why half the angle is used, and why you would multiply from the right by the inverse.",
  "model": "nmt",
  "translatedText": "前回のビデオで説明したクォータニオンの乗算の 考え方を復習し、なぜ半分の角度を使用するのか 、なぜ右から逆数を乗算するのかを説明します。",
  "time_range": [
   326.34,
   335.16
  ],
  "n_reviews": 0
 },
 {
  "input": "On the screen now, and at the top of the description, you'll find a link to eater.",
  "model": "nmt",
  "translatedText": "現在、画面の説明の上部に、eater へのリンクがあります。",
  "time_range": [
   335.94,
   339.34
  ],
  "n_reviews": 0
 },
 {
  "input": "net slash quaternions, which is where Ben set up the explorable video tutorial, where I explain what's going on with this rotation computation.",
  "model": "nmt",
  "translatedText": "ne t スラッシュ クォータニオン。 Ben が探索可能なビデオ チュートリアルをセット アップした場所です。 そこで私は、この回転計算で何が起こっているのかを説明します。",
  "time_range": [
   339.34,
   346.84
  ],
  "n_reviews": 0
 },
 {
  "input": "It's just really cool.",
  "model": "nmt",
  "translatedText": "本当にクールです。",
  "time_range": [
   347.64000000000004,
   349.0
  ],
  "n_reviews": 0
 },
 {
  "input": "Eater did something awesome here.",
  "model": "nmt",
  "translatedText": "イーターはここで素晴らしいことをしました。",
  "time_range": [
   349.22,
   350.34
  ],
  "n_reviews": 0
 },
 {
  "input": "So at the very least, just take a couple minutes to go look at it, but I'd love it if you went through the full experience.",
  "model": "nmt",
  "translatedText": "したがって、少なくとも数分だけ見ていただければ幸 いです。 すべてを体験していただければ幸いです。",
  "time_range": [
   350.54,
   354.6
  ],
  "n_reviews": 0
 }
]