1
00:00:00,000 --> 00:00:07,260
Em um momento, vou indicar um site separado que hospeda

2
00:00:07,260 --> 00:00:09,200
uma pequena sequência do que chamamos de vídeos exploráveis.

3
00:00:09,200 --> 00:00:13,240
Foi feito em colaboração com Ben Eater, que alguns de vocês devem conhecer

4
00:00:13,240 --> 00:00:15,640
como aquele cara que dirige um excelente canal de engenharia da computação.

5
00:00:15,640 --> 00:00:18,680
E se você não sabe quem ele é, os telespectadores deste

6
00:00:18,680 --> 00:00:21,460
canal certamente iriam gostar do conteúdo dele, então dê uma olhada.

7
00:00:21,460 --> 00:00:24,940
Essa colaboração foi algo um pouco diferente para nós dois, e todo o

8
00:00:24,940 --> 00:00:29,760
desenvolvimento web que tornou possível esses vídeos exploráveis é totalmente graças ao Ben.

9
00:00:30,000 --> 00:00:33,720
Não quero falar muito sobre isso aqui, é realmente algo que

10
00:00:33,720 --> 00:00:37,460
você tem que vivenciar por si mesmo, certamente um dos

11
00:00:37,460 --> 00:00:38,560
projetos mais legais em que tive o prazer de trabalhar.

12
00:00:38,560 --> 00:00:42,280
Antes disso, porém, se você puder conter seu entusiasmo, quero usar este

13
00:00:42,280 --> 00:00:46,960
vídeo como uma chance de apresentar um pouco do contexto circundante.

14
00:00:46,960 --> 00:00:51,760
Então, para preparar o cenário, no último vídeo descrevi os quaternions, um certo

15
00:00:51,760 --> 00:00:56,660
sistema numérico quadridimensional que as versões do século 19 de Wolverine e o

16
00:00:56,660 --> 00:00:59,280
velho de Home Alone chamavam de mal por quão complicado parecia na época.

17
00:00:59,320 --> 00:01:03,600
E talvez você também esteja se perguntando por que alguém

18
00:01:03,600 --> 00:01:05,540
se preocuparia com um sistema numérico de aparência tão alienígena.

19
00:01:05,540 --> 00:01:10,200
Um dos grandes motivos, especialmente para os programadores, é que eles fornecem uma maneira muito boa de

20
00:01:10,200 --> 00:01:15,320
descrever a orientação 3D, que não é suscetível aos bugs e casos extremos de outros métodos.

21
00:01:15,320 --> 00:01:19,420
Quero dizer, eles são matematicamente interessantes por vários motivos, mas esta aplicação

22
00:01:19,420 --> 00:01:24,040
para computação gráfica, robótica, realidade virtual e qualquer coisa que envolva

23
00:01:24,040 --> 00:01:27,240
orientação 3D é provavelmente o maior caso de uso para quatérnios.

24
00:01:27,240 --> 00:01:31,880
Para dar um exemplo, um amigo meu que trabalhava na Apple, Andy Matuszczak, adorou me

25
00:01:31,880 --> 00:01:36,080
contar sobre o código de envio para centenas de milhões de dispositivos que usa quaternions

26
00:01:36,080 --> 00:01:39,280
para rastrear o modelo do telefone e saber como ele está orientado no espaço.

27
00:01:39,280 --> 00:01:43,720
É isso mesmo, é quase certo que seu telefone tenha um software

28
00:01:43,720 --> 00:01:46,360
em execução em algum lugar dentro dele que depende de quatérnios.

29
00:01:46,360 --> 00:01:50,560
A questão é que existem outras maneiras de pensar sobre o cálculo de rotações,

30
00:01:50,560 --> 00:01:53,540
muitas das quais são muito mais simples de pensar do que os quatérnios.

31
00:01:53,540 --> 00:01:58,660
Por exemplo, qualquer um de vocês familiarizado com álgebra linear

32
00:01:58,660 --> 00:02:01,340
saberá que matrizes 3x3 podem descrever muito bem transformações 3D.

33
00:02:01,340 --> 00:02:05,660
E uma maneira comum que muitos programadores usam para construir uma matriz de rotação para uma

34
00:02:05,660 --> 00:02:11,300
orientação desejada é imaginar a rotação de um objeto em torno de três eixos fáceis de

35
00:02:11,300 --> 00:02:16,660
pensar, onde os ângulos relevantes para essas rotações são comumente chamados de ângulos de Euler.

36
00:02:16,660 --> 00:02:21,140
E isso funciona principalmente, mas um grande problema é que ele é

37
00:02:21,140 --> 00:02:25,580
vulnerável a algo chamado bloqueio do gimbal, onde quando dois dos seus

38
00:02:25,580 --> 00:02:26,580
eixos de rotação são alinhados, você perde um certo grau de liberdade.

39
00:02:26,580 --> 00:02:32,140
E também pode causar dificuldades e ambiguidades

40
00:02:32,140 --> 00:02:33,140
ao tentar interpolar entre duas orientações distintas.

41
00:02:33,140 --> 00:02:36,480
Se você estiver curioso para saber mais detalhes, existem muitas fontes

42
00:02:36,480 --> 00:02:39,940
excelentes on-line para aprender sobre os ângulos de Euler e o

43
00:02:39,940 --> 00:02:41,120
bloqueio do gimbal, e deixei links na descrição para alguns deles.

44
00:02:41,120 --> 00:02:45,180
Os quatérnios não apenas evitam problemas como o bloqueio do cardan, mas também fornecem

45
00:02:45,180 --> 00:02:51,100
uma maneira realmente perfeita de interpolar entre duas orientações tridimensionais, uma que não possui

46
00:02:51,140 --> 00:02:55,580
as ambigüidades dos ângulos de Euler e que evita os problemas de precisão numérica

47
00:02:55,580 --> 00:02:58,900
e normalização que surgem na tentativa de interpolar. entre duas matrizes de rotação.

48
00:02:58,900 --> 00:03:03,220
Para entender a ideia de como a multiplicação em algum sistema numérico de

49
00:03:03,220 --> 00:03:08,060
dimensão superior pode ser usada para calcular rotações, reserve um momento para lembrar

50
00:03:08,060 --> 00:03:10,980
como os números complexos fornecem um método inteligente para calcular rotações 2D.

51
00:03:10,980 --> 00:03:16,420
Especificamente, digamos que você tenha algum ponto no espaço bidimensional

52
00:03:16,420 --> 00:03:20,900
como 4,1 e queira saber as novas coordenadas que obteria

53
00:03:20,900 --> 00:03:22,500
se girasse esse ponto 30 graus em torno da origem.

54
00:03:22,500 --> 00:03:25,120
Os números complexos oferecem uma maneira elegante de fazer isso.

55
00:03:25,120 --> 00:03:30,300
Você pega o número complexo que está a 30 graus da horizontal

56
00:03:30,300 --> 00:03:35,880
com magnitude 1, cos 30 graus mais sen 30 graus vezes i,

57
00:03:35,880 --> 00:03:37,520
e então multiplica isso pelo seu ponto, representado como um número complexo.

58
00:03:37,520 --> 00:03:42,000
A única regra que você precisa saber para realizar este

59
00:03:42,000 --> 00:03:43,000
cálculo é que i2 é igual a 1 negativo.

60
00:03:43,000 --> 00:03:46,880
Então, no que pode parecer um pouco de magia negra para aqueles que a

61
00:03:46,880 --> 00:03:51,800
aprendem pela primeira vez, realizar este produto a partir daquela regra simples dá as

62
00:03:51,800 --> 00:03:55,520
coordenadas de um novo ponto, o ponto girado 30 graus em relação ao original.

63
00:03:55,520 --> 00:04:00,200
Usar quatérnios para descrever rotações 3D é semelhante,

64
00:04:00,200 --> 00:04:01,200
embora a aparência seja um pouco diferente.

65
00:04:01,200 --> 00:04:04,720
Digamos que você queira girar algum ângulo em torno de algum eixo.

66
00:04:04,720 --> 00:04:09,440
Primeiro você define esse eixo com um vetor unitário, que escreveremos como tendo componentes i,

67
00:04:09,440 --> 00:04:15,440
j e k, normalizados de modo que a soma dos quadrados desses componentes seja 1.

68
00:04:15,440 --> 00:04:19,860
Semelhante ao caso dos números complexos, você usa o ângulo para construir um

69
00:04:19,860 --> 00:04:25,720
quaternion tomando o cosseno desse ângulo como a parte real, mais o

70
00:04:25,720 --> 00:04:30,600
sen desse ângulo vezes uma parte imaginária, exceto que desta vez a

71
00:04:30,600 --> 00:04:32,000
parte imaginária tem três componentes, as coordenadas de nosso eixo de rotação.

72
00:04:32,000 --> 00:04:37,400
Bem, na verdade você pega metade do ângulo, o que pode parecer totalmente

73
00:04:37,400 --> 00:04:39,760
arbitrário, mas espero que faça sentido no final de toda essa experiência.

74
00:04:39,760 --> 00:04:45,080
Digamos que você tenha algum ponto 3D, que escreveremos com componentes i,

75
00:04:45,080 --> 00:04:49,400
j, k, e você deseja saber as coordenadas que obterá ao

76
00:04:49,400 --> 00:04:52,560
girar esse ponto no ângulo especificado em torno do eixo especificado.

77
00:04:52,560 --> 00:04:57,760
O que você faz não é apenas um único produto de quatérnios, mas uma espécie de sanduíche

78
00:04:57,760 --> 00:05:02,840
de quatérnios, onde você multiplica por q da esquerda e o inverso de q da direita.

79
00:05:02,840 --> 00:05:07,160
Se você conhece as regras de como i, j e k se

80
00:05:07,160 --> 00:05:11,560
multiplicam entre si, você pode realizar esses dois produtos expandindo tudo ou,

81
00:05:11,560 --> 00:05:13,440
mais realisticamente, fazendo com que um computador faça isso por você.

82
00:05:13,440 --> 00:05:18,120
E no que pode parecer um pouco de magia negra, esse

83
00:05:18,120 --> 00:05:21,240
grande cálculo retornará para você a versão girada do ponto.

84
00:05:21,240 --> 00:05:25,120
Nosso objetivo é analisar isso e visualizar o que

85
00:05:25,120 --> 00:05:26,120
está acontecendo com cada um desses dois produtos.

86
00:05:26,120 --> 00:05:30,680
Vou revisar o método para pensar sobre a multiplicação de quatérnios

87
00:05:30,680 --> 00:05:34,840
descrito no último vídeo e explicar por que metade do ângulo

88
00:05:34,840 --> 00:05:35,980
é usado e por que você multiplicaria da direita pelo inverso.

89
00:05:35,980 --> 00:05:39,780
Na tela agora, e no topo da descrição, você encontrará um link para comedor. net

90
00:05:39,780 --> 00:05:44,180
slash quaternions, que é onde Ben configurou o vídeo tutorial explorável,

91
00:05:44,180 --> 00:05:47,660
onde explico o que está acontecendo com esse cálculo de rotação.

92
00:05:47,660 --> 00:05:49,240
É muito legal.

93
00:05:49,240 --> 00:05:50,500
Eater fez algo incrível aqui.

94
00:05:50,500 --> 00:05:53,940
Então, pelo menos, reserve alguns minutos para dar uma olhada,

95
00:05:53,940 --> 00:05:55,300
mas eu adoraria se você passasse pela experiência completa.

