[
 {
  "input": "In a moment, I'll point you to a separate website hosting a short sequence of what we're calling explorable videos.",
  "model": "nmt",
  "translatedText": "بعد قليل، سأوجهك إلى موقع ويب منفصل يستضيف سلسلة قصيرة مما نسميه مقاطع الفيديو القابلة للاستكشاف.",
  "time_range": [
   0.0,
   9.2
  ]
 },
 {
  "input": "It was done in collaboration with Ben Eater, who some of you may know as that guy who runs the excellent computer engineering channel.",
  "model": "nmt",
  "translatedText": "لقد تم ذلك بالتعاون مع Ben Eater، الذي قد يعرفه البعض منكم بأنه الرجل الذي يدير قناة هندسة الكمبيوتر الممتازة.",
  "time_range": [
   9.2,
   15.64
  ]
 },
 {
  "input": "And if you don't know who he is, viewers of this channel would certainly enjoy the content of his, so do check it out.",
  "model": "nmt",
  "translatedText": "وإذا كنت لا تعرف من هو، فمن المؤكد أن مشاهدي هذه القناة سيستمتعون بمحتوى قناته، لذا قم بتفقدها.",
  "time_range": [
   15.64,
   21.46
  ]
 },
 {
  "input": "This collaboration was something a little different though, for both of us, and all of the web development that made these explorable videos possible is completely thanks to Ben.",
  "model": "nmt",
  "translatedText": "كان هذا التعاون مختلفًا بعض الشيء بالنسبة لنا، وكل عمليات تطوير الويب التي جعلت مقاطع الفيديو القابلة للاستكشاف هذه ممكنة بفضل Ben تمامًا.",
  "time_range": [
   21.46,
   30.0
  ]
 },
 {
  "input": "I don't want to say too much about it here, it's really something you have to experience for yourself, certainly one of the coolest projects I've had the pleasure of working on.",
  "model": "nmt",
  "translatedText": "لا أريد أن أقول الكثير عنه هنا، إنه حقًا شيء يجب عليك تجربته بنفسك، وبالتأكيد أحد أروع المشاريع التي سعدت بالعمل عليها.",
  "time_range": [
   30.0,
   38.56
  ]
 },
 {
  "input": "Before that though, if you can contain your excitement, I want to use this video as a chance to tee things up with a little bit of surrounding context.",
  "model": "nmt",
  "translatedText": "قبل ذلك، إذا كان بإمكانك احتواء حماستك، أريد استخدام هذا الفيديو كفرصة لتوضيح الأمور مع القليل من السياق المحيط.",
  "time_range": [
   38.56,
   46.96
  ]
 },
 {
  "input": "So to set the stage, last video I described quaternions, a certain 4-dimensional number system that the 19th century versions of Wolverine and the old man from Home Alone called evil for how convoluted it seemed at the time.",
  "model": "nmt",
  "translatedText": "لذا، لتمهيد المسرح، قمت في الفيديو الأخير بوصف الكواترنيونات، وهو نظام أرقام معين رباعي الأبعاد وصفته إصدارات القرن التاسع عشر من ولفيرين والرجل العجوز من وحدي بالمنزل بالشر لمدى تعقيده في ذلك الوقت.",
  "time_range": [
   46.96,
   59.32
  ]
 },
 {
  "input": "And perhaps you too are wondering why on earth anyone would bother with such an alien-seeming number system.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   59.32,
   65.54
  ]
 },
 {
  "input": "One of the big reasons, especially for programmers, is that they give a really nice way for describing 3D orientation, which is not susceptible to the bugs and edge cases of other methods.",
  "model": "nmt",
  "translatedText": "وربما تتساءل أيضًا لماذا يزعج أي شخص على وجه الأرض نظام الأرقام الذي يبدو غريبًا؟ أحد الأسباب الكبيرة، خاصة بالنسبة للمبرمجين، هو أنهم يقدمون طريقة رائعة حقًا لوصف الاتجاه ثلاثي الأبعاد، وهو ليس عرضة للأخطاء والحالات المتطورة للطرق الأخرى.",
  "time_range": [
   65.54,
   75.32
  ]
 },
 {
  "input": "I mean, they're interesting mathematically for a lot of reasons, but this application for computer graphics and robotics and virtual reality and anything involving 3D orientation is probably the biggest use case for quaternions.",
  "model": "nmt",
  "translatedText": "أعني أنها مثيرة للاهتمام رياضيًا لعدة أسباب، لكن هذا التطبيق لرسومات الكمبيوتر والروبوتات والواقع الافتراضي وأي شيء يتضمن توجيهًا ثلاثي الأبعاد ربما يكون أكبر حالة استخدام للكواتيرنيونات.",
  "time_range": [
   75.32,
   87.24
  ]
 },
 {
  "input": "To take one example, a friend of mine who used to work at Apple, Andy Matuszczak, delighted in telling me about shipping code to hundreds of millions of devices that uses quaternions to track the phone's model for how it's oriented in space.",
  "model": "nmt",
  "translatedText": "على سبيل المثال، كان صديق لي الذي كان يعمل في شركة أبل، آندي ماتوسزكزاك، سعيدًا بإخباري عن رمز الشحن لمئات الملايين من الأجهزة التي تستخدم الكواترنيونات لتتبع طراز الهاتف لكيفية توجيهه في الفضاء.",
  "time_range": [
   87.24,
   99.28
  ]
 },
 {
  "input": "That's right, your phone almost certainly has software running somewhere inside of it that relies on quaternions.",
  "model": "nmt",
  "translatedText": "هذا صحيح، من المؤكد تقريبًا أن هاتفك يحتوي على برنامج يعمل في مكان ما بداخله ويعتمد على الكواترنيونات.",
  "time_range": [
   99.28,
   106.36
  ]
 },
 {
  "input": "The thing is, there are other ways to think about computing rotations, many of which are way simpler to think about than quaternions.",
  "model": "nmt",
  "translatedText": "الأمر هو أن هناك طرقًا أخرى للتفكير في دورات الحوسبة، والعديد منها أسهل في التفكير من الكواترنيونات.",
  "time_range": [
   106.36,
   113.54
  ]
 },
 {
  "input": "For example, any of you familiar with linear algebra will know that 3x3 matrices can really nicely describe 3D transformations.",
  "model": "nmt",
  "translatedText": "على سبيل المثال، أي شخص مطلع على الجبر الخطي سيعرف أن المصفوفات 3x3 يمكن أن تصف بشكل جيد التحولات ثلاثية الأبعاد.",
  "time_range": [
   113.54,
   121.34
  ]
 },
 {
  "input": "And a common way that many programmers think about constructing a rotation matrix for a desired orientation is to imagine rotating an object around three easy-to-think-about axes, where the relevant angles for these rotations are commonly called Euler angles.",
  "model": "nmt",
  "translatedText": "والطريقة الشائعة التي يفكر بها العديد من المبرمجين في إنشاء مصفوفة دوران للاتجاه المطلوب هي تخيل دوران جسم ما حول ثلاثة محاور يسهل التفكير فيها، حيث تسمى الزوايا ذات الصلة بهذه الدورانات عادةً زوايا أويلر.",
  "time_range": [
   121.34,
   136.66
  ]
 },
 {
  "input": "And this mostly works, but one big problem is that it's vulnerable to something called gimbal lock, where when two of your axes of rotation get lined up, you lose a degree of freedom.",
  "model": "nmt",
  "translatedText": "وهذا يعمل في الغالب، لكن هناك مشكلة كبيرة وهي أنه عرضة لشيء يسمى قفل المحورين، حيث عندما يصطف اثنان من محاور الدوران الخاصة بك، فإنك تفقد درجة من الحرية.",
  "time_range": [
   136.66,
   146.58
  ]
 },
 {
  "input": "And it can also cause difficulties and ambiguities when trying to interpolate between two separate orientations.",
  "model": "nmt",
  "translatedText": "ويمكن أن يسبب أيضًا صعوبات وغموضًا عند محاولة التوفيق بين اتجاهين منفصلين.",
  "time_range": [
   146.58,
   153.14
  ]
 },
 {
  "input": "If you're curious for more of the details, there are many great sources online for learning about Euler angles and gimbal lock, and I've left links in the description to a few of them.",
  "model": "nmt",
  "translatedText": "إذا كنت مهتمًا بالمزيد من التفاصيل، فهناك العديد من المصادر الرائعة عبر الإنترنت للتعرف على زوايا أويلر وقفل المحور، وقد تركت روابط في الوصف لعدد قليل منها.",
  "time_range": [
   153.14,
   161.12
  ]
 },
 {
  "input": "Not only do quaternions avoid issues like gimbal lock, they give a really seamless way to interpolate between two 3-dimensional orientations, one which lacks the ambiguities of Euler angles, and which avoids the issues of numerical precision and normalization that arise in trying to interpolate between two rotation matrices.",
  "model": "nmt",
  "translatedText": "لا تتجنب الكواترنيونات مشاكل مثل قفل المحور فحسب، بل إنها توفر طريقة سلسة حقًا للاستكمال بين اتجاهين ثلاثي الأبعاد، اتجاه يفتقر إلى غموض زوايا أويلر، والذي يتجنب مشكلات الدقة العددية والتطبيع التي تنشأ عند محاولة الاستيفاء بين مصفوفتين دوران.",
  "time_range": [
   161.12,
   178.9
  ]
 },
 {
  "input": "To warm up to the idea of how multiplication in some higher-dimensional number system might be used to compute rotations, take a moment to remember how it is that complex numbers give a slick method for computing 2D rotations.",
  "model": "nmt",
  "translatedText": "للإستعداد لفكرة كيفية استخدام الضرب في بعض أنظمة الأعداد ذات الأبعاد الأعلى لحساب الدورات، خذ لحظة لتتذكر كيف أن الأعداد المعقدة تعطي طريقة بارعة لحساب الدورات ثنائية الأبعاد.",
  "time_range": [
   178.9,
   190.98
  ]
 },
 {
  "input": "Specifically, let's say you have some point in 2-dimensional space like 4,1, and you want to know the new coordinates you'd get if you rotate this point 30 degrees around the origin.",
  "model": "nmt",
  "translatedText": "على وجه التحديد، لنفترض أن لديك نقطة ما في فضاء ثنائي الأبعاد مثل 4،1، وتريد معرفة الإحداثيات الجديدة التي ستحصل عليها إذا قمت بتدوير هذه النقطة بمقدار 30 درجة حول نقطة الأصل.",
  "time_range": [
   190.98,
   202.5
  ]
 },
 {
  "input": "Complex numbers give a sort of snazzy way to do this.",
  "model": "nmt",
  "translatedText": "توفر الأعداد المركبة نوعًا من الطريقة الرائعة للقيام بذلك.",
  "time_range": [
   202.5,
   205.12
  ]
 },
 {
  "input": "You take the complex number that's 30 degrees off the horizontal with magnitude 1, cos 30 degrees plus sin 30 degrees times i, and then you multiply this by your point, represented as a complex number.",
  "model": "nmt",
  "translatedText": "تأخذ الرقم المركب الذي يبعد 30 درجة عن الأفقي بمقدار 1، cos 30 درجة زائد sin 30 درجة في i، ثم تضرب هذا في نقطتك، ممثلة كرقم مركب.",
  "time_range": [
   205.12,
   217.52
  ]
 },
 {
  "input": "The only rule you need to know to carry out this computation is that i2 equals negative 1.",
  "model": "nmt",
  "translatedText": "القاعدة الوحيدة التي تحتاج إلى معرفتها لإجراء هذا الحساب هي أن i2 يساوي سالب 1.",
  "time_range": [
   217.52,
   223.0
  ]
 },
 {
  "input": "Then in what might feel like a bit of black magic to those first learning it, carrying out this product from that one simple rule gives the coordinates of a new point, the point rotated 30 degrees from the original.",
  "model": "nmt",
  "translatedText": "ثم فيما قد يبدو وكأنه القليل من السحر الأسود لأولئك الذين تعلموه لأول مرة، فإن تنفيذ هذا المنتج من تلك القاعدة البسيطة يعطي إحداثيات نقطة جديدة، النقطة التي تم تدويرها بمقدار 30 درجة عن النقطة الأصلية.",
  "time_range": [
   223.0,
   235.52
  ]
 },
 {
  "input": "Using quaternions to describe 3D rotations is similar, though the look and feel is slightly different.",
  "model": "nmt",
  "translatedText": "يعد استخدام الكواترنيونات لوصف الدورانات ثلاثية الأبعاد أمرًا مشابهًا، على الرغم من اختلاف الشكل والمظهر قليلاً.",
  "time_range": [
   235.52,
   241.2
  ]
 },
 {
  "input": "Let's say you want to rotate some angle about some axis.",
  "model": "nmt",
  "translatedText": "لنفترض أنك تريد تدوير زاوية ما حول محور ما.",
  "time_range": [
   241.2,
   244.72
  ]
 },
 {
  "input": "You first define that axis with a unit vector, which we'll write as having i, j, and k components, normalized so that the sum of the squares of those components is 1.",
  "model": "nmt",
  "translatedText": "عليك أولاً تحديد هذا المحور بمتجه وحدة، والذي سنكتبه على أنه يحتوي على مكونات i وj وk، بعد تسويتها بحيث يكون مجموع مربعات تلك المكونات هو 1.",
  "time_range": [
   244.72,
   255.44
  ]
 },
 {
  "input": "Similar to the case of complex numbers, you use the angle to construct a quaternion by taking cosine of that angle as the real part, plus sin of that angle times an imaginary part, except this time the imaginary part has three components, the coordinates of our axis of rotation.",
  "model": "nmt",
  "translatedText": "كما هو الحال في حالة الأعداد المركبة، يمكنك استخدام الزاوية لإنشاء كواترنيون عن طريق أخذ جيب تمام تلك الزاوية باعتباره الجزء الحقيقي، بالإضافة إلى جا تلك الزاوية مضروبًا في جزء وهمي، باستثناء هذه المرة يحتوي الجزء التخيلي على ثلاثة مكونات، إحداثيات محور دوراننا.",
  "time_range": [
   255.44,
   272.0
  ]
 },
 {
  "input": "Well, actually you take half of the angle, which might feel totally arbitrary, but hopefully that makes sense by the end of this whole experience.",
  "model": "nmt",
  "translatedText": "حسنًا، في الواقع تأخذ نصف الزاوية، الأمر الذي قد يبدو اعتباطيًا تمامًا، ولكن نأمل أن يكون هذا منطقيًا بنهاية هذه التجربة بأكملها.",
  "time_range": [
   272.0,
   279.76
  ]
 },
 {
  "input": "Let's say you have some 3D point, which we'll write with i, j, k components, and you want to know the coordinates you'd get when you rotate this point by your specified angle around your specified axis.",
  "model": "nmt",
  "translatedText": "لنفترض أن لديك نقطة ثلاثية الأبعاد، والتي سنكتبها بمكونات i، j، k، وتريد معرفة الإحداثيات التي ستحصل عليها عندما تقوم بتدوير هذه النقطة بالزاوية المحددة حول المحور المحدد.",
  "time_range": [
   279.76,
   292.56
  ]
 },
 {
  "input": "What you do is not just a single quaternion product, but a sort of quaternion sandwich, where you multiply by q from the left and the inverse of q from the right.",
  "model": "nmt",
  "translatedText": "ما تفعله ليس مجرد منتج كواترنيون واحد، بل هو نوع من شطيرة الكواترنيون، حيث تضرب بـ q من اليسار وعكس q من اليمين.",
  "time_range": [
   292.56,
   302.84
  ]
 },
 {
  "input": "If you know the rules for how i, j, and k multiply amongst themselves, you can carry out these two products by expanding everything out, or more realistically by having a computer do it for you.",
  "model": "nmt",
  "translatedText": "إذا كنت تعرف القواعد الخاصة بكيفية تضاعف i وj وk فيما بينها، فيمكنك تنفيذ هذين المنتجين من خلال توسيع كل شيء، أو بشكل أكثر واقعية من خلال الاستعانة بجهاز كمبيوتر للقيام بذلك نيابةً عنك.",
  "time_range": [
   302.84,
   313.44
  ]
 },
 {
  "input": "And in what might feel like a bit of black magic, this big computation will return for you the rotated version of the point.",
  "model": "nmt",
  "translatedText": "وفي ما قد يبدو وكأنه نوع من السحر الأسود، ستعيد لك هذه العملية الحسابية الكبيرة النسخة المستديرة للنقطة.",
  "time_range": [
   313.44,
   321.24
  ]
 },
 {
  "input": "Our goal is to break this down and visualize what's happening with each of these two products.",
  "model": "nmt",
  "translatedText": "هدفنا هو تحليل هذا الأمر وتصور ما يحدث مع كل من هذين المنتجين.",
  "time_range": [
   321.24,
   326.12
  ]
 },
 {
  "input": "I'll review the method for thinking about quaternion multiplication described last video, and explain why half the angle is used, and why you would multiply from the right by the inverse.",
  "model": "nmt",
  "translatedText": "سأقوم بمراجعة طريقة التفكير في ضرب الكواترنيون الموصوفة في الفيديو الأخير، وأشرح لماذا يتم استخدام نصف الزاوية، ولماذا تقوم بالضرب من اليمين في المعكوس.",
  "time_range": [
   326.12,
   335.98
  ]
 },
 {
  "input": "On the screen now, and at the top of the description, you'll find a link to eater.",
  "model": "nmt",
  "translatedText": "على الشاشة الآن، وفي أعلى الوصف، ستجد رابطًا للأكل.",
  "time_range": [
   335.98,
   339.6442857142856
  ]
 },
 {
  "input": "net slash quaternions, which is where Ben set up the explorable video tutorial, where I explain what's going on with this rotation computation.",
  "model": "nmt",
  "translatedText": "net slash quaternions، حيث قام Ben بإعداد فيديو تعليمي قابل للاستكشاف، حيث أشرح ما يحدث مع حساب التدوير هذا.",
  "time_range": [
   339.6442857142856,
   347.66
  ]
 },
 {
  "input": "It's just really cool.",
  "model": "nmt",
  "translatedText": "إنه رائع حقًا.",
  "time_range": [
   347.66,
   349.24
  ]
 },
 {
  "input": "Eater did something awesome here.",
  "model": "nmt",
  "translatedText": "لقد فعل الآكل شيئًا رائعًا هنا.",
  "time_range": [
   349.24,
   350.5
  ]
 },
 {
  "input": "So at the very least, just take a couple minutes to go look at it, but I'd love it if you went through the full experience.",
  "model": "nmt",
  "translatedText": "لذا، على الأقل، خذ بضع دقائق فقط لإلقاء نظرة عليها، لكني أحب أن تكون قد مررت بالتجربة الكاملة.",
  "time_range": [
   350.5,
   353.94
  ]
 }
]