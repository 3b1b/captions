[
 {
  "input": "In a moment, I'll point you to a separate website hosting a short sequence of what we're calling explorable videos.",
  "model": "nmt",
  "translatedText": "稍后，我将向您指出一个单独的网站，其中 托管着我们称之为探索视频的简短序列。",
  "time_range": [
   2.9599999999999973,
   8.64
  ]
 },
 {
  "input": "It was done in collaboration with Ben Eater, who some of you may know as that guy who runs the excellent computer engineering channel.",
  "model": "nmt",
  "translatedText": "这是与 Ben Eater 合作完成的，你们中的 一些人可能知道他是优秀计算机工程频道的运营者。",
  "time_range": [
   9.22,
   14.96
  ]
 },
 {
  "input": "And if you don't know who he is, viewers of this channel would certainly enjoy the content of his, so do check it out.",
  "model": "nmt",
  "translatedText": "如果你不知道他是谁，这个频道的观众肯 定会喜欢他的内容，所以一定要看看。",
  "time_range": [
   15.48,
   20.82
  ]
 },
 {
  "input": "This collaboration was something a little different though, for both of us, and all of the web development that made these explorable videos possible is completely thanks to Ben.",
  "model": "nmt",
  "translatedText": "不过，对于我们俩来说，这次合作有点不同，而使这些探 索视频成为可能的所有网络开发都完全归功于 Ben。",
  "time_range": [
   21.3,
   29.38
  ]
 },
 {
  "input": "I don't want to say too much about it here, it's really something you have to experience for yourself, certainly one of the coolest projects I've had the pleasure of working on.",
  "model": "nmt",
  "translatedText": "我不想在这里说太多，这确实是你 必须亲自体验的事情，当然这是我 有幸参与过的最酷的项目之一。",
  "time_range": [
   29.86,
   37.88
  ]
 },
 {
  "input": "Before that though, if you can contain your excitement, I want to use this video as a chance to tee things up with a little bit of surrounding context.",
  "model": "nmt",
  "translatedText": "不过在此之前，如果您能抑制住自己的兴奋之情，我想利用这 段视频作为一个机会，通过一些周围的背景来介绍一下事情。",
  "time_range": [
   38.3,
   45.46
  ]
 },
 {
  "input": "So to set the stage, last video I described quaternions, a certain 4-dimensional number system that the 19th century versions of Wolverine and the old man from Home Alone called evil for how convoluted it seemed at the time.",
  "model": "nmt",
  "translatedText": "因此，为了做好准备，我在上一个视频中描述了四元数，这是一种 特定的 4 维数字系统，19 世纪版本的金刚狼和《小鬼当 家》中的老人称其为“邪恶”，因为它在当时看起来非常复杂。",
  "time_range": [
   46.9,
   58.78
  ]
 },
 {
  "input": "And perhaps you too are wondering why on earth anyone would bother with such an alien-seeming number system.",
  "model": "nmt",
  "translatedText": "也许你也想知道为什么有人会为这 种看似外星人的数字系统而烦恼。",
  "time_range": [
   59.06,
   64.32
  ]
 },
 {
  "input": "One of the big reasons, especially for programmers, is that they give a really nice way for describing 3D orientation, which is not susceptible to the bugs and edge cases of other methods.",
  "model": "nmt",
  "translatedText": "其中一个重要原因（尤其是对于程序员而言）是，它们提供了一种非常好的描 述 3D 方向的方法，该方法不易受到其他方法的错误和边缘情况的影响。",
  "time_range": [
   65.2,
   75.22
  ]
 },
 {
  "input": "I mean, they're interesting mathematically for a lot of reasons, but this application for computer graphics and robotics and virtual reality and anything involving 3D orientation is probably the biggest use case for quaternions.",
  "model": "nmt",
  "translatedText": "我的意思是，出于多种原因，它们在数学上很有趣， 但计算机图形学、机器人技术、虚拟现实以及任何涉 及 3D 方向的应用可能是四元数的最大用例。",
  "time_range": [
   75.82,
   86.4
  ]
 },
 {
  "input": "To take one example, a friend of mine who used to work at Apple, Andy Matuszczak, delighted in telling me about shipping code to hundreds of millions of devices that uses quaternions to track the phone's model for how it's oriented in space.",
  "model": "nmt",
  "translatedText": "举个例子，我的一位曾经在苹果公司工作的朋友安迪·马图斯扎克 (And y Matuszczak) 很高兴地告诉我，如何将代码发送到数亿台设 备，这些设备使用四元数来跟踪手机的模型，以了解其在空间中的定向方式。",
  "time_range": [
   86.4,
   99.04
  ]
 },
 {
  "input": "That's right, your phone almost certainly has software running somewhere inside of it that relies on quaternions.",
  "model": "nmt",
  "translatedText": "没错，您的手机几乎肯定在其内部 某处运行着依赖四元数的软件。",
  "time_range": [
   99.66,
   105.24
  ]
 },
 {
  "input": "The thing is, there are other ways to think about computing rotations, many of which are way simpler to think about than quaternions.",
  "model": "nmt",
  "translatedText": "问题是，还有其他方法可以考虑计算旋转 ，其中许多方法比四元数更容易考虑。",
  "time_range": [
   106.34,
   112.92
  ]
 },
 {
  "input": "For example, any of you familiar with linear algebra will know that 3x3 matrices can really nicely describe 3D transformations.",
  "model": "nmt",
  "translatedText": "例如，任何熟悉线性代数的人都会知道 3 x3 矩阵可以很好地描述 3D 变换。",
  "time_range": [
   113.25,
   120.78
  ]
 },
 {
  "input": "And a common way that many programmers think about constructing a rotation matrix for a desired orientation is to imagine rotating an object around three easy-to-think-about axes, where the relevant angles for these rotations are commonly called Euler angles.",
  "model": "nmt",
  "translatedText": "许多程序员考虑构建所需方向的旋转矩阵的常 见方法是想象围绕三个易于思考的轴旋转对象 ，其中这些旋转的相关角度通常称为欧拉角。",
  "time_range": [
   121.34,
   135.74
  ]
 },
 {
  "input": "And this mostly works, but one big problem is that it's vulnerable to something called gimbal lock, where when two of your axes of rotation get lined up, you lose a degree of freedom.",
  "model": "nmt",
  "translatedText": "这基本上是有效的，但一个大问题是它很 容易受到万向节锁的影响，当你的两个旋 转轴对齐时，你就会失去一定的自由度。",
  "time_range": [
   136.58,
   146.1
  ]
 },
 {
  "input": "And it can also cause difficulties and ambiguities when trying to interpolate between two separate orientations.",
  "model": "nmt",
  "translatedText": "当尝试在两个不同的方向之间进行 插值时，它还会导致困难和歧义。",
  "time_range": [
   146.7,
   152.34
  ]
 },
 {
  "input": "If you're curious for more of the details, there are many great sources online for learning about Euler angles and gimbal lock, and I've left links in the description to a few of them.",
  "model": "nmt",
  "translatedText": "如果您对更多细节感到好奇，网上有很多很 棒的资源可用于了解欧拉角和万向节锁， 我在描述中留下了其中一些资源的链接。",
  "time_range": [
   152.94,
   160.32
  ]
 },
 {
  "input": "Not only do quaternions avoid issues like gimbal lock, they give a really seamless way to interpolate between two 3-dimensional orientations, one which lacks the ambiguities of Euler angles, and which avoids the issues of numerical precision and normalization that arise in trying to interpolate between two rotation matrices.",
  "model": "nmt",
  "translatedText": "四元数不仅避免了万向节锁定等问题，而且提供了一 种在两个 3 维方向之间进行真正无缝插值的方法 ，该方法没有欧拉角的模糊性，并且避免了尝试插值 时出现的数值精度和归一化问题两个旋转矩阵之间。",
  "time_range": [
   161.04,
   177.74
  ]
 },
 {
  "input": "To warm up to the idea of how multiplication in some higher-dimensional number system might be used to compute rotations, take a moment to remember how it is that complex numbers give a slick method for computing 2D rotations.",
  "model": "nmt",
  "translatedText": "为了热身于如何使用某些高维数字系统中的 乘法来计算旋转的想法，请花点时间记住 复数如何提供计算二维旋转的灵活方法。",
  "time_range": [
   178.78,
   190.86
  ]
 },
 {
  "input": "Specifically, let's say you have some point in 2-dimensional space like 4,1, and you want to know the new coordinates you'd get if you rotate this point 30 degrees around the origin.",
  "model": "nmt",
  "translatedText": "具体来说，假设您在 2 维空间中有某个点 ，例如 4,1，并且您想知道如果将该点 绕原点旋转 30 度，会得到新的坐标。",
  "time_range": [
   191.54,
   201.32
  ]
 },
 {
  "input": "Complex numbers give a sort of snazzy way to do this.",
  "model": "nmt",
  "translatedText": "复数提供了一种时髦的方法来做到这一点。",
  "time_range": [
   202.24,
   204.62
  ]
 },
 {
  "input": "You take the complex number that's 30 degrees off the horizontal with magnitude 1, cos 30 degrees plus sin 30 degrees times i, and then you multiply this by your point, represented as a complex number.",
  "model": "nmt",
  "translatedText": "取与水平方向成 30 度、幅度为 1 的复数 、cos 30 度加上 sin 30 度乘 以 i，然后将其乘以您的点（表示为复数）。",
  "time_range": [
   205.08,
   216.92
  ]
 },
 {
  "input": "The only rule you need to know to carry out this computation is that i2 equals negative 1.",
  "model": "nmt",
  "translatedText": "执行此计算时您需要知道的唯一 规则是 i2 等于负 1。",
  "time_range": [
   217.5,
   222.12
  ]
 },
 {
  "input": "Then in what might feel like a bit of black magic to those first learning it, carrying out this product from that one simple rule gives the coordinates of a new point, the point rotated 30 degrees from the original.",
  "model": "nmt",
  "translatedText": "然后，对于那些第一次学习它的人来说，这可能感觉 有点黑魔法，根据一个简单的规则执行此乘积，给出 一个新点的坐标，该点从原始点旋转了 30 度。",
  "time_range": [
   222.12,
   233.84
  ]
 },
 {
  "input": "Using quaternions to describe 3D rotations is similar, though the look and feel is slightly different.",
  "model": "nmt",
  "translatedText": "使用四元数描述 3D 旋转是相 似的，但外观和感觉略有不同。",
  "time_range": [
   235.34,
   240.5
  ]
 },
 {
  "input": "Let's say you want to rotate some angle about some axis.",
  "model": "nmt",
  "translatedText": "假设您想绕某个轴旋转某个角度。",
  "time_range": [
   241.1,
   243.98
  ]
 },
 {
  "input": "You first define that axis with a unit vector, which we'll write as having i, j, and k components, normalized so that the sum of the squares of those components is 1.",
  "model": "nmt",
  "translatedText": "首先使用单位向量定义该轴，我们将其写为具有 i、j 和 k 分量，并进行归一化，以便这些分量的平方和为 1。",
  "time_range": [
   244.7,
   254.26
  ]
 },
 {
  "input": "Similar to the case of complex numbers, you use the angle to construct a quaternion by taking cosine of that angle as the real part, plus sin of that angle times an imaginary part, except this time the imaginary part has three components, the coordinates of our axis of rotation.",
  "model": "nmt",
  "translatedText": "与复数的情况类似，您可以使用该角度来构造 四元数，方法是将该角度的余弦作为实部， 加上该角度的 sin 乘以虚部，只不过 这次虚部具有三个分量，即我们的旋转轴。",
  "time_range": [
   255.16,
   271.6
  ]
 },
 {
  "input": "Well, actually you take half of the angle, which might feel totally arbitrary, but hopefully that makes sense by the end of this whole experience.",
  "model": "nmt",
  "translatedText": "好吧，实际上你采取了一半的角度，这可能感觉完全 是任意的，但希望在整个体验结束时这是有意义的。",
  "time_range": [
   272.52,
   279.72
  ]
 },
 {
  "input": "Let's say you have some 3D point, which we'll write with i, j, k components, and you want to know the coordinates you'd get when you rotate this point by your specified angle around your specified axis.",
  "model": "nmt",
  "translatedText": "假设您有一些 3D 点，我们将用 i、j 、k 分量编写该点，并且您想知道当您围绕 指定轴将该点旋转指定角度时获得的坐标。",
  "time_range": [
   280.54,
   291.54
  ]
 },
 {
  "input": "What you do is not just a single quaternion product, but a sort of quaternion sandwich, where you multiply by q from the left and the inverse of q from the right.",
  "model": "nmt",
  "translatedText": "您所做的不仅仅是单个四元数乘积，而是一种四元数三明 治，其中您从左侧乘以 q，从右侧乘以 q 的倒数。",
  "time_range": [
   292.36,
   301.94
  ]
 },
 {
  "input": "If you know the rules for how i, j, and k multiply amongst themselves, you can carry out these two products by expanding everything out, or more realistically by having a computer do it for you.",
  "model": "nmt",
  "translatedText": "如果您知道 i、j 和 k 之间相乘的规则 ，则可以通过展开所有内容来执行这两个乘积， 或者更实际地通过让计算机为您执行此操作。",
  "time_range": [
   302.64,
   312.56
  ]
 },
 {
  "input": "And in what might feel like a bit of black magic, this big computation will return for you the rotated version of the point.",
  "model": "nmt",
  "translatedText": "这个大计算将为您返回点的旋转 版本，这可能感觉有点黑魔法。",
  "time_range": [
   313.1,
   320.4
  ]
 },
 {
  "input": "Our goal is to break this down and visualize what's happening with each of these two products.",
  "model": "nmt",
  "translatedText": "我们的目标是分解并可视化 这两种产品所发生的情况。",
  "time_range": [
   321.16,
   325.76
  ]
 },
 {
  "input": "I'll review the method for thinking about quaternion multiplication described last video, and explain why half the angle is used, and why you would multiply from the right by the inverse.",
  "model": "nmt",
  "translatedText": "我将回顾上一个视频中描述的思考四元 数乘法的方法，并解释为什么使用一半 角度，以及为什么要从右侧乘以倒数。",
  "time_range": [
   326.34,
   335.16
  ]
 },
 {
  "input": "On the screen now, and at the top of the description, you'll find a link to eater.",
  "model": "nmt",
  "translatedText": "现在在屏幕上的描述顶部，您会找到一个指向 eater 的链接。",
  "time_range": [
   335.94,
   339.34
  ]
 },
 {
  "input": "net slash quaternions, which is where Ben set up the explorable video tutorial, where I explain what's going on with this rotation computation.",
  "model": "nmt",
  "translatedText": "n et 斜线四元数，Ben 在其中设置了可探索 的视频教程，我在其中解释了旋转计算的情况。",
  "time_range": [
   339.34,
   346.84
  ]
 },
 {
  "input": "It's just really cool.",
  "model": "nmt",
  "translatedText": "这真的很酷。",
  "time_range": [
   347.64000000000004,
   349.0
  ]
 },
 {
  "input": "Eater did something awesome here.",
  "model": "nmt",
  "translatedText": "Eater在这里做了一些很棒的事情。",
  "time_range": [
   349.22,
   350.34
  ]
 },
 {
  "input": "So at the very least, just take a couple minutes to go look at it, but I'd love it if you went through the full experience.",
  "model": "nmt",
  "translatedText": "因此，至少，只需花几分钟时间看看，但 如果您能完整体验一下，我会很高兴的。",
  "time_range": [
   350.54,
   354.6
  ]
 }
]