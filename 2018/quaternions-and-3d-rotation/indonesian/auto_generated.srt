1
00:00:00,000 --> 00:00:04,902
Sebentar lagi, saya akan mengarahkan Anda ke situs web terpisah yang menghosting

2
00:00:04,902 --> 00:00:09,200
rangkaian singkat dari apa yang kami sebut video yang dapat dijelajahi.

3
00:00:09,200 --> 00:00:11,184
Hal ini dilakukan bekerja sama dengan Ben Eater,

4
00:00:11,184 --> 00:00:14,303
yang sebagian dari Anda mungkin kenal sebagai orang yang menjalankan saluran

5
00:00:14,303 --> 00:00:15,640
teknik komputer yang sangat baik.

6
00:00:15,640 --> 00:00:20,426
Dan jika Anda belum tahu siapa dia, pemirsa saluran ini pasti akan menikmati kontennya,

7
00:00:20,426 --> 00:00:21,460
jadi silakan lihat.

8
00:00:21,460 --> 00:00:23,873
Kolaborasi ini adalah sesuatu yang sedikit berbeda,

9
00:00:23,873 --> 00:00:26,797
bagi kami berdua, dan semua pengembangan web yang memungkinkan

10
00:00:26,797 --> 00:00:30,000
video-video yang dapat dijelajahi ini terwujud sepenuhnya berkat Ben.

11
00:00:30,000 --> 00:00:32,261
Saya tidak ingin berbicara terlalu banyak di sini,

12
00:00:32,261 --> 00:00:34,701
ini benar-benar sesuatu yang harus Anda alami sendiri,

13
00:00:34,701 --> 00:00:38,560
tentu saja salah satu proyek paling keren yang pernah saya kerjakan dengan senang hati.

14
00:00:38,560 --> 00:00:41,770
Namun sebelum itu, jika Anda bisa menahan kegembiraan Anda,

15
00:00:41,770 --> 00:00:45,782
saya ingin menggunakan video ini sebagai kesempatan untuk memahami sedikit

16
00:00:45,782 --> 00:00:46,960
konteks di sekitarnya.

17
00:00:46,960 --> 00:00:50,624
Jadi untuk mengatur panggung, video terakhir saya menjelaskan angka empat,

18
00:00:50,624 --> 00:00:54,630
sistem bilangan 4 dimensi tertentu yang oleh Wolverine versi abad ke-19 dan orang

19
00:00:54,630 --> 00:00:58,636
tua dari Home Alone disebut jahat karena betapa berbelit-belitnya sistem tersebut

20
00:00:58,636 --> 00:00:59,320
pada saat itu.

21
00:00:59,320 --> 00:01:02,456
Dan mungkin Anda juga bertanya-tanya mengapa ada orang yang

22
00:01:02,456 --> 00:01:05,540
mau repot dengan sistem bilangan yang tampak seperti alien.

23
00:01:05,540 --> 00:01:08,044
Salah satu alasan utamanya, terutama bagi pemrogram,

24
00:01:08,044 --> 00:01:10,926
adalah karena mereka memberikan cara yang sangat bagus untuk

25
00:01:10,926 --> 00:01:14,280
mendeskripsikan orientasi 3D, yang tidak rentan terhadap bug dan kasus

26
00:01:14,280 --> 00:01:15,320
edge dari metode lain.

27
00:01:15,320 --> 00:01:18,620
Maksud saya, mereka menarik secara matematis karena banyak alasan,

28
00:01:18,620 --> 00:01:22,560
tetapi aplikasi untuk grafik komputer dan robotika dan realitas virtual dan apa

29
00:01:22,560 --> 00:01:26,353
pun yang melibatkan orientasi 3D mungkin merupakan kasus penggunaan terbesar

30
00:01:26,353 --> 00:01:27,240
untuk angka empat.

31
00:01:27,240 --> 00:01:30,923
Sebagai contoh, seorang teman saya yang pernah bekerja di Apple, Andy Matuszczak,

32
00:01:30,923 --> 00:01:34,832
dengan senang hati memberi tahu saya tentang kode pengiriman ke ratusan juta perangkat

33
00:01:34,832 --> 00:01:38,695
yang menggunakan angka empat untuk melacak model ponsel dan bagaimana orientasinya di

34
00:01:38,695 --> 00:01:39,280
luar angkasa.

35
00:01:39,280 --> 00:01:42,715
Itu benar, ponsel Anda hampir pasti memiliki perangkat lunak yang

36
00:01:42,715 --> 00:01:46,360
berjalan di suatu tempat di dalamnya yang bergantung pada angka empat.

37
00:01:46,360 --> 00:01:50,021
Masalahnya adalah, ada cara lain untuk memikirkan tentang menghitung rotasi,

38
00:01:50,021 --> 00:01:53,540
banyak di antaranya lebih sederhana untuk dipikirkan daripada angka empat.

39
00:01:53,540 --> 00:01:57,337
Misalnya, siapa pun di antara Anda yang akrab dengan aljabar linier pasti

40
00:01:57,337 --> 00:02:01,340
tahu bahwa matriks 3x3 dapat menggambarkan transformasi 3D dengan sangat baik.

41
00:02:01,340 --> 00:02:04,977
Dan cara umum yang dipikirkan banyak programmer tentang membangun

42
00:02:04,977 --> 00:02:09,055
matriks rotasi untuk orientasi yang diinginkan adalah dengan membayangkan

43
00:02:09,055 --> 00:02:12,637
memutar suatu objek di sekitar tiga sumbu yang mudah dipikirkan,

44
00:02:12,637 --> 00:02:16,660
di mana sudut yang relevan untuk rotasi ini biasanya disebut sudut Euler.

45
00:02:16,660 --> 00:02:20,015
Dan ini sebagian besar berhasil, tetapi satu masalah besarnya adalah

46
00:02:20,015 --> 00:02:22,592
ia rentan terhadap sesuatu yang disebut gimbal lock,

47
00:02:22,592 --> 00:02:26,580
yang mana ketika dua sumbu rotasi Anda sejajar, Anda kehilangan tingkat kebebasan.

48
00:02:26,580 --> 00:02:29,935
Dan hal ini juga dapat menimbulkan kesulitan dan ambiguitas ketika

49
00:02:29,935 --> 00:02:33,140
mencoba melakukan interpolasi antara dua orientasi yang berbeda.

50
00:02:33,140 --> 00:02:35,081
Jika Anda penasaran untuk mengetahui lebih detailnya,

51
00:02:35,081 --> 00:02:37,741
ada banyak sumber online yang bagus untuk mempelajari tentang sudut Euler

52
00:02:37,741 --> 00:02:40,329
dan kunci gimbal, dan saya telah meninggalkan tautan dalam deskripsi ke

53
00:02:40,329 --> 00:02:41,120
beberapa di antaranya.

54
00:02:41,120 --> 00:02:44,581
Angka empat tidak hanya menghindari masalah seperti kunci gimbal,

55
00:02:44,581 --> 00:02:49,197
tetapi juga memberikan cara yang mulus untuk melakukan interpolasi antara dua orientasi

56
00:02:49,197 --> 00:02:52,081
3 dimensi, yang tidak memiliki ambiguitas sudut Euler,

57
00:02:52,081 --> 00:02:56,330
dan menghindari masalah presisi numerik dan normalisasi yang muncul saat mencoba

58
00:02:56,330 --> 00:02:58,900
melakukan interpolasi. antara dua matriks rotasi.

59
00:02:58,900 --> 00:03:02,802
Untuk memahami gagasan tentang bagaimana perkalian dalam sistem bilangan berdimensi

60
00:03:02,802 --> 00:03:05,311
lebih tinggi dapat digunakan untuk menghitung rotasi,

61
00:03:05,311 --> 00:03:09,260
luangkan waktu sejenak untuk mengingat bagaimana bilangan kompleks memberikan metode

62
00:03:09,260 --> 00:03:10,980
yang apik untuk menghitung rotasi 2D.

63
00:03:10,980 --> 00:03:15,663
Secara khusus, katakanlah Anda memiliki suatu titik dalam ruang 2 dimensi seperti 4,1,

64
00:03:15,663 --> 00:03:19,377
dan Anda ingin mengetahui koordinat baru yang akan Anda peroleh jika

65
00:03:19,377 --> 00:03:22,500
Anda memutar titik ini 30 derajat mengelilingi titik asal.

66
00:03:22,500 --> 00:03:25,120
Bilangan kompleks memberikan cara yang menarik untuk melakukan ini.

67
00:03:25,120 --> 00:03:29,144
Anda mengambil bilangan kompleks yang berjarak 30 derajat dari horizontal

68
00:03:29,144 --> 00:03:32,788
dengan besaran 1, cos 30 derajat ditambah sin 30 derajat dikali i,

69
00:03:32,788 --> 00:03:37,520
lalu mengalikannya dengan titik Anda, yang direpresentasikan sebagai bilangan kompleks.

70
00:03:37,520 --> 00:03:40,057
Satu-satunya aturan yang perlu Anda ketahui untuk

71
00:03:40,057 --> 00:03:43,000
melakukan perhitungan ini adalah i2 sama dengan negatif 1.

72
00:03:43,000 --> 00:03:47,080
Kemudian yang mungkin terasa seperti ilmu hitam bagi mereka yang pertama

73
00:03:47,080 --> 00:03:51,048
kali mempelajarinya, menjalankan produk dari satu aturan sederhana ini

74
00:03:51,048 --> 00:03:55,520
memberikan koordinat titik baru, titik tersebut diputar 30 derajat dari aslinya.

75
00:03:55,520 --> 00:03:58,743
Penggunaan angka empat untuk mendeskripsikan rotasi 3D serupa,

76
00:03:58,743 --> 00:04:01,200
meskipun tampilan dan nuansanya sedikit berbeda.

77
00:04:01,200 --> 00:04:04,720
Katakanlah Anda ingin memutar suatu sudut terhadap suatu sumbu.

78
00:04:04,720 --> 00:04:08,568
Pertama-tama Anda mendefinisikan sumbu tersebut dengan vektor satuan,

79
00:04:08,568 --> 00:04:11,591
yang akan kita tuliskan memiliki komponen i, j, dan k,

80
00:04:11,591 --> 00:04:15,440
yang dinormalisasi sehingga jumlah kuadrat komponen tersebut adalah 1.

81
00:04:15,440 --> 00:04:19,635
Mirip dengan kasus bilangan kompleks, Anda menggunakan sudut untuk membuat

82
00:04:19,635 --> 00:04:23,775
angka empat dengan mengambil kosinus sudut tersebut sebagai bagian nyata,

83
00:04:23,775 --> 00:04:26,685
ditambah sin sudut tersebut dikali bagian imajiner,

84
00:04:26,685 --> 00:04:29,874
kecuali kali ini bagian imajiner memiliki tiga komponen,

85
00:04:29,874 --> 00:04:32,000
koordinatnya adalah sumbu rotasi kita.

86
00:04:32,000 --> 00:04:35,982
Sebenarnya Anda mengambil separuh sudut, yang mungkin terasa sewenang-wenang,

87
00:04:35,982 --> 00:04:39,760
tapi mudah-mudahan hal itu masuk akal di akhir keseluruhan pengalaman ini.

88
00:04:39,760 --> 00:04:44,095
Katakanlah Anda memiliki beberapa titik 3D, yang akan kita tulis dengan komponen i,

89
00:04:44,095 --> 00:04:48,121
j, k, dan Anda ingin mengetahui koordinat yang akan Anda dapatkan ketika Anda

90
00:04:48,121 --> 00:04:52,560
memutar titik ini dengan sudut yang Anda tentukan di sekitar sumbu yang Anda tentukan.

91
00:04:52,560 --> 00:04:56,027
Apa yang Anda lakukan bukan hanya perkalian angka empat,

92
00:04:56,027 --> 00:05:01,136
tetapi semacam sandwich angka empat, di mana Anda mengalikan dengan q dari kiri dan

93
00:05:01,136 --> 00:05:02,840
kebalikan dari q dari kanan.

94
00:05:02,840 --> 00:05:06,584
Jika Anda mengetahui aturan bagaimana i, j, dan k mengalikan satu sama lain,

95
00:05:06,584 --> 00:05:09,939
Anda dapat melakukan kedua perkalian ini dengan memperluas semuanya,

96
00:05:09,939 --> 00:05:13,440
atau lebih realistisnya dengan meminta komputer melakukannya untuk Anda.

97
00:05:13,440 --> 00:05:16,655
Dan dalam hal yang mungkin terasa seperti ilmu hitam,

98
00:05:16,655 --> 00:05:21,240
penghitungan besar ini akan menghasilkan versi titik yang diputar untuk Anda.

99
00:05:21,240 --> 00:05:24,116
Tujuan kami adalah menguraikannya dan memvisualisasikan

100
00:05:24,116 --> 00:05:26,120
apa yang terjadi pada kedua produk ini.

101
00:05:26,120 --> 00:05:29,375
Saya akan meninjau metode berpikir tentang perkalian angka empat yang

102
00:05:29,375 --> 00:05:33,235
dijelaskan dalam video terakhir, dan menjelaskan mengapa setengah sudut digunakan,

103
00:05:33,235 --> 00:05:35,980
dan mengapa Anda mengalikan dari kanan dengan kebalikannya.

104
00:05:35,980 --> 00:05:39,644
Di layar sekarang, dan di bagian atas deskripsi, Anda akan menemukan link ke eater.

105
00:05:39,644 --> 00:05:44,007
netslash quaternions, di situlah Ben menyiapkan video tutorial yang dapat dijelajahi,

106
00:05:44,007 --> 00:05:47,660
di mana saya menjelaskan apa yang terjadi dengan perhitungan rotasi ini.

107
00:05:47,660 --> 00:05:49,240
Itu sangat keren.

108
00:05:49,240 --> 00:05:50,500
Pemakan melakukan sesuatu yang luar biasa di sini.

109
00:05:50,500 --> 00:05:52,329
Jadi paling tidak, luangkan waktu beberapa menit untuk melihatnya,

110
00:05:52,329 --> 00:05:53,940
tapi saya akan senang jika Anda mengalami pengalaman penuh.

