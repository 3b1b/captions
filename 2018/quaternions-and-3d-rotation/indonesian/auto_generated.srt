1
00:00:02,959 --> 00:00:05,986
Sebentar lagi, saya akan mengarahkan Anda ke situs web terpisah yang menghosting 

2
00:00:05,986 --> 00:00:08,640
rangkaian singkat dari apa yang kami sebut video yang dapat dijelajahi.

3
00:00:09,220 --> 00:00:10,988
Hal ini dilakukan bekerja sama dengan Ben Eater, 

4
00:00:10,988 --> 00:00:13,768
yang sebagian dari Anda mungkin kenal sebagai orang yang menjalankan saluran 

5
00:00:13,768 --> 00:00:14,960
teknik komputer yang sangat baik.

6
00:00:15,480 --> 00:00:19,871
Dan jika Anda belum tahu siapa dia, pemirsa saluran ini pasti akan menikmati kontennya, 

7
00:00:19,871 --> 00:00:20,820
jadi silakan lihat.

8
00:00:21,300 --> 00:00:23,583
Kolaborasi ini adalah sesuatu yang sedikit berbeda, 

9
00:00:23,583 --> 00:00:26,350
bagi kami berdua, dan semua pengembangan web yang memungkinkan 

10
00:00:26,350 --> 00:00:29,380
video-video yang dapat dijelajahi ini terwujud sepenuhnya berkat Ben.

11
00:00:29,860 --> 00:00:31,979
Saya tidak ingin berbicara terlalu banyak di sini, 

12
00:00:31,979 --> 00:00:34,264
ini benar-benar sesuatu yang harus Anda alami sendiri, 

13
00:00:34,264 --> 00:00:37,880
tentu saja salah satu proyek paling keren yang pernah saya kerjakan dengan senang hati.

14
00:00:38,300 --> 00:00:41,036
Namun sebelum itu, jika Anda bisa menahan kegembiraan Anda, 

15
00:00:41,036 --> 00:00:44,456
saya ingin menggunakan video ini sebagai kesempatan untuk memahami sedikit 

16
00:00:44,456 --> 00:00:45,460
konteks di sekitarnya.

17
00:00:46,900 --> 00:00:50,421
Jadi untuk mengatur panggung, video terakhir saya menjelaskan angka empat, 

18
00:00:50,421 --> 00:00:54,272
sistem bilangan 4 dimensi tertentu yang oleh Wolverine versi abad ke-19 dan orang 

19
00:00:54,272 --> 00:00:58,122
tua dari Home Alone disebut jahat karena betapa berbelit-belitnya sistem tersebut 

20
00:00:58,122 --> 00:00:58,780
pada saat itu.

21
00:00:59,060 --> 00:01:01,712
Dan mungkin Anda juga bertanya-tanya mengapa ada orang yang 

22
00:01:01,712 --> 00:01:04,319
mau repot dengan sistem bilangan yang tampak seperti alien.

23
00:01:05,200 --> 00:01:07,765
Salah satu alasan utamanya, terutama bagi pemrogram, 

24
00:01:07,765 --> 00:01:10,718
adalah karena mereka memberikan cara yang sangat bagus untuk 

25
00:01:10,718 --> 00:01:14,155
mendeskripsikan orientasi 3D, yang tidak rentan terhadap bug dan kasus 

26
00:01:14,155 --> 00:01:15,220
edge dari metode lain.

27
00:01:15,820 --> 00:01:18,749
Maksud saya, mereka menarik secara matematis karena banyak alasan, 

28
00:01:18,749 --> 00:01:22,246
tetapi aplikasi untuk grafik komputer dan robotika dan realitas virtual dan apa 

29
00:01:22,246 --> 00:01:25,613
pun yang melibatkan orientasi 3D mungkin merupakan kasus penggunaan terbesar 

30
00:01:25,613 --> 00:01:26,400
untuk angka empat.

31
00:01:26,400 --> 00:01:30,267
Sebagai contoh, seorang teman saya yang pernah bekerja di Apple, Andy Matuszczak, 

32
00:01:30,267 --> 00:01:34,370
dengan senang hati memberi tahu saya tentang kode pengiriman ke ratusan juta perangkat 

33
00:01:34,370 --> 00:01:38,426
yang menggunakan angka empat untuk melacak model ponsel dan bagaimana orientasinya di 

34
00:01:38,426 --> 00:01:39,040
luar angkasa.

35
00:01:39,660 --> 00:01:42,367
Itu benar, ponsel Anda hampir pasti memiliki perangkat lunak yang 

36
00:01:42,367 --> 00:01:45,240
berjalan di suatu tempat di dalamnya yang bergantung pada angka empat.

37
00:01:46,340 --> 00:01:49,695
Masalahnya adalah, ada cara lain untuk memikirkan tentang menghitung rotasi, 

38
00:01:49,695 --> 00:01:52,920
banyak di antaranya lebih sederhana untuk dipikirkan daripada angka empat.

39
00:01:53,250 --> 00:01:56,915
Misalnya, siapa pun di antara Anda yang akrab dengan aljabar linier pasti 

40
00:01:56,915 --> 00:02:00,780
tahu bahwa matriks 3x3 dapat menggambarkan transformasi 3D dengan sangat baik.

41
00:02:01,340 --> 00:02:04,758
Dan cara umum yang dipikirkan banyak programmer tentang membangun 

42
00:02:04,758 --> 00:02:08,591
matriks rotasi untuk orientasi yang diinginkan adalah dengan membayangkan 

43
00:02:08,591 --> 00:02:11,958
memutar suatu objek di sekitar tiga sumbu yang mudah dipikirkan, 

44
00:02:11,958 --> 00:02:15,740
di mana sudut yang relevan untuk rotasi ini biasanya disebut sudut Euler.

45
00:02:16,580 --> 00:02:19,800
Dan ini sebagian besar berhasil, tetapi satu masalah besarnya adalah 

46
00:02:19,800 --> 00:02:22,273
ia rentan terhadap sesuatu yang disebut gimbal lock, 

47
00:02:22,273 --> 00:02:26,100
yang mana ketika dua sumbu rotasi Anda sejajar, Anda kehilangan tingkat kebebasan.

48
00:02:26,700 --> 00:02:29,584
Dan hal ini juga dapat menimbulkan kesulitan dan ambiguitas ketika 

49
00:02:29,584 --> 00:02:32,340
mencoba melakukan interpolasi antara dua orientasi yang berbeda.

50
00:02:32,940 --> 00:02:34,735
Jika Anda penasaran untuk mengetahui lebih detailnya, 

51
00:02:34,735 --> 00:02:37,195
ada banyak sumber online yang bagus untuk mempelajari tentang sudut Euler 

52
00:02:37,195 --> 00:02:39,588
dan kunci gimbal, dan saya telah meninggalkan tautan dalam deskripsi ke 

53
00:02:39,588 --> 00:02:40,320
beberapa di antaranya.

54
00:02:41,040 --> 00:02:44,291
Angka empat tidak hanya menghindari masalah seperti kunci gimbal, 

55
00:02:44,291 --> 00:02:48,626
tetapi juga memberikan cara yang mulus untuk melakukan interpolasi antara dua orientasi 

56
00:02:48,626 --> 00:02:51,335
3 dimensi, yang tidak memiliki ambiguitas sudut Euler, 

57
00:02:51,335 --> 00:02:55,326
dan menghindari masalah presisi numerik dan normalisasi yang muncul saat mencoba 

58
00:02:55,326 --> 00:02:57,740
melakukan interpolasi. antara dua matriks rotasi.

59
00:02:58,780 --> 00:03:02,682
Untuk memahami gagasan tentang bagaimana perkalian dalam sistem bilangan berdimensi 

60
00:03:02,682 --> 00:03:05,191
lebih tinggi dapat digunakan untuk menghitung rotasi, 

61
00:03:05,191 --> 00:03:09,140
luangkan waktu sejenak untuk mengingat bagaimana bilangan kompleks memberikan metode 

62
00:03:09,140 --> 00:03:10,860
yang apik untuk menghitung rotasi 2D.

63
00:03:11,540 --> 00:03:15,515
Secara khusus, katakanlah Anda memiliki suatu titik dalam ruang 2 dimensi seperti 4,1, 

64
00:03:15,515 --> 00:03:18,669
dan Anda ingin mengetahui koordinat baru yang akan Anda peroleh jika 

65
00:03:18,669 --> 00:03:21,320
Anda memutar titik ini 30 derajat mengelilingi titik asal.

66
00:03:22,240 --> 00:03:24,620
Bilangan kompleks memberikan cara yang menarik untuk melakukan ini.

67
00:03:25,080 --> 00:03:28,922
Anda mengambil bilangan kompleks yang berjarak 30 derajat dari horizontal 

68
00:03:28,922 --> 00:03:32,402
dengan besaran 1, cos 30 derajat ditambah sin 30 derajat dikali i, 

69
00:03:32,402 --> 00:03:36,920
lalu mengalikannya dengan titik Anda, yang direpresentasikan sebagai bilangan kompleks.

70
00:03:37,500 --> 00:03:39,638
Satu-satunya aturan yang perlu Anda ketahui untuk 

71
00:03:39,638 --> 00:03:42,120
melakukan perhitungan ini adalah i2 sama dengan negatif 1.

72
00:03:42,120 --> 00:03:45,939
Kemudian yang mungkin terasa seperti ilmu hitam bagi mereka yang pertama 

73
00:03:45,939 --> 00:03:49,654
kali mempelajarinya, menjalankan produk dari satu aturan sederhana ini 

74
00:03:49,654 --> 00:03:53,840
memberikan koordinat titik baru, titik tersebut diputar 30 derajat dari aslinya.

75
00:03:55,340 --> 00:03:58,268
Penggunaan angka empat untuk mendeskripsikan rotasi 3D serupa, 

76
00:03:58,268 --> 00:04:00,500
meskipun tampilan dan nuansanya sedikit berbeda.

77
00:04:01,100 --> 00:04:03,980
Katakanlah Anda ingin memutar suatu sudut terhadap suatu sumbu.

78
00:04:04,700 --> 00:04:08,131
Pertama-tama Anda mendefinisikan sumbu tersebut dengan vektor satuan, 

79
00:04:08,131 --> 00:04:10,828
yang akan kita tuliskan memiliki komponen i, j, dan k, 

80
00:04:10,828 --> 00:04:14,260
yang dinormalisasi sehingga jumlah kuadrat komponen tersebut adalah 1.

81
00:04:15,160 --> 00:04:19,325
Mirip dengan kasus bilangan kompleks, Anda menggunakan sudut untuk membuat 

82
00:04:19,325 --> 00:04:23,435
angka empat dengan mengambil kosinus sudut tersebut sebagai bagian nyata, 

83
00:04:23,435 --> 00:04:26,323
ditambah sin sudut tersebut dikali bagian imajiner, 

84
00:04:26,323 --> 00:04:29,489
kecuali kali ini bagian imajiner memiliki tiga komponen, 

85
00:04:29,489 --> 00:04:31,600
koordinatnya adalah sumbu rotasi kita.

86
00:04:32,520 --> 00:04:36,214
Sebenarnya Anda mengambil separuh sudut, yang mungkin terasa sewenang-wenang, 

87
00:04:36,214 --> 00:04:39,720
tapi mudah-mudahan hal itu masuk akal di akhir keseluruhan pengalaman ini.

88
00:04:40,540 --> 00:04:44,265
Katakanlah Anda memiliki beberapa titik 3D, yang akan kita tulis dengan komponen i, 

89
00:04:44,265 --> 00:04:47,725
j, k, dan Anda ingin mengetahui koordinat yang akan Anda dapatkan ketika Anda 

90
00:04:47,725 --> 00:04:51,540
memutar titik ini dengan sudut yang Anda tentukan di sekitar sumbu yang Anda tentukan.

91
00:04:52,360 --> 00:04:55,591
Apa yang Anda lakukan bukan hanya perkalian angka empat, 

92
00:04:55,591 --> 00:05:00,352
tetapi semacam sandwich angka empat, di mana Anda mengalikan dengan q dari kiri dan 

93
00:05:00,352 --> 00:05:01,940
kebalikan dari q dari kanan.

94
00:05:02,640 --> 00:05:06,143
Jika Anda mengetahui aturan bagaimana i, j, dan k mengalikan satu sama lain, 

95
00:05:06,143 --> 00:05:09,283
Anda dapat melakukan kedua perkalian ini dengan memperluas semuanya, 

96
00:05:09,283 --> 00:05:12,560
atau lebih realistisnya dengan meminta komputer melakukannya untuk Anda.

97
00:05:13,100 --> 00:05:16,109
Dan dalam hal yang mungkin terasa seperti ilmu hitam, 

98
00:05:16,109 --> 00:05:20,400
penghitungan besar ini akan menghasilkan versi titik yang diputar untuk Anda.

99
00:05:21,160 --> 00:05:23,871
Tujuan kami adalah menguraikannya dan memvisualisasikan 

100
00:05:23,871 --> 00:05:25,760
apa yang terjadi pada kedua produk ini.

101
00:05:26,340 --> 00:05:29,252
Saya akan meninjau metode berpikir tentang perkalian angka empat yang 

102
00:05:29,252 --> 00:05:32,705
dijelaskan dalam video terakhir, dan menjelaskan mengapa setengah sudut digunakan, 

103
00:05:32,705 --> 00:05:35,160
dan mengapa Anda mengalikan dari kanan dengan kebalikannya.

104
00:05:35,940 --> 00:05:39,340
Di layar sekarang, dan di bagian atas deskripsi, Anda akan menemukan link ke eater.

105
00:05:39,340 --> 00:05:43,422
netslash quaternions, di situlah Ben menyiapkan video tutorial yang dapat dijelajahi, 

106
00:05:43,422 --> 00:05:46,840
di mana saya menjelaskan apa yang terjadi dengan perhitungan rotasi ini.

107
00:05:47,640 --> 00:05:49,000
Itu sangat keren.

108
00:05:49,220 --> 00:05:50,340
Pemakan melakukan sesuatu yang luar biasa di sini.

109
00:05:50,540 --> 00:05:52,698
Jadi paling tidak, luangkan waktu beberapa menit untuk melihatnya, 

110
00:05:52,698 --> 00:05:54,600
tapi saya akan senang jika Anda mengalami pengalaman penuh.

