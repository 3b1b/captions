1
00:00:00,000 --> 00:00:06,720
येथे दोन गोष्टी आहेत, मुख्य विषय आणि मेटा विषय.

2
00:00:06,720 --> 00:00:11,979
मुख्य विषय द्विमितीय समीकरणे, दोन अज्ञात वास्तविक संख्या असलेल्या गोष्टी किंवा एक जटिल

3
00:00:11,979 --> 00:00:17,420
संख्या असलेल्या एकल अज्ञात असलेल्या गोष्टी सोडवण्यासाठी हे खरोखर व्यवस्थित अल्गोरिदम असेल.

4
00:00:17,420 --> 00:00:21,931
उदाहरणार्थ, जर तुम्हाला बहुपदीची जटिल मुळे शोधायची असतील, किंवा कदाचित रीमन झेटा

5
00:00:21,931 --> 00:00:26,721
फंक्शनच्या दशलक्ष डॉलर्सपैकी काही शून्य शोधायचे असतील, तर हे अल्गोरिदम तुमच्यासाठी ते

6
00:00:26,721 --> 00:00:27,000
करेल.

7
00:00:27,000 --> 00:00:30,520
आणि ही पद्धत खूप सुंदर आहे, कारण बरेच रंग गुंतलेले आहेत.

8
00:00:30,520 --> 00:00:33,695
आणि सर्वात महत्त्वाचे म्हणजे, मूळ अंतर्निहित कल्पना ही समीकरणे

9
00:00:33,695 --> 00:00:37,072
सोडवण्यासाठी या अल्गोरिदमच्या पलीकडे सर्व प्रकारच्या गणितांना लागू

10
00:00:37,072 --> 00:00:40,600
होते, ज्यामध्ये थोडीशी टोपोलॉजी समाविष्ट आहे, ज्याबद्दल मी नंतर बोलेन.

11
00:00:40,600 --> 00:00:44,537
पण याला तुमचा 20 मिनिटे किंवा त्याहून अधिक वेळ खरोखरच उपयुक्त ठरतो

12
00:00:44,537 --> 00:00:48,358
तो म्हणजे हा धडा संपूर्ण गणितात अधिक सामान्यपणे उपयुक्त ठरतो, जो

13
00:00:48,358 --> 00:00:52,120
एकमेकांशी छान रचना करणाऱ्या रचना परिभाषित करण्याचा प्रयत्न करतो.

14
00:00:52,120 --> 00:00:55,460
कथा जसजशी पुढे जाईल तसतसे मला त्यात काय म्हणायचे आहे ते तुम्हाला दिसेल.

15
00:00:55,460 --> 00:01:00,219
2d इनपुट आणि 2d आउटपुट असलेल्या फंक्शन्ससह केस प्रवृत्त करण्यासाठी, चला सोप्या

16
00:01:00,219 --> 00:01:05,100
पद्धतीने सुरुवात करूया, ज्या फंक्शन्स रिअल नंबर घेतात आणि रिअल नंबर बाहेर टाकतात.

17
00:01:05,100 --> 00:01:09,603
जर तुम्हाला हे जाणून घ्यायचे असेल की x चे फंक्शन f हे x च्या इतर फंक्शन g च्या बरोबरीचे

18
00:01:09,603 --> 00:01:13,952
असते, तर तुम्ही हे त्या फंक्शन्सचे आलेख कधी एकमेकांना छेदतात हे शोधत आहात असे वाटेल,

19
00:01:13,952 --> 00:01:14,260
बरोबर?

20
00:01:14,260 --> 00:01:19,340
म्हणजे, ते तुम्हाला एक इनपुट देते जेथे दोन्ही फंक्शन्सचे आउटपुट समान असते.

21
00:01:19,340 --> 00:01:22,430
अगदी साधे उदाहरण घ्यायचे असेल तर कल्पना करा की x

22
00:01:22,430 --> 00:01:25,520
चा f x चा वर्ग आहे आणि x चा g हे स्थिर फलन 2 आहे.

23
00:01:25,520 --> 00:01:29,620
दुसऱ्या शब्दांत, तुम्हाला २ चे वर्गमूळ शोधायचे आहे.

24
00:01:29,620 --> 00:01:33,844
जरी तुम्हाला वर्गमूळ शोधण्याबद्दल जवळजवळ काहीही माहित नसले तरीही, तुम्ही

25
00:01:33,844 --> 00:01:38,300
कदाचित पाहू शकता की 1 स्क्वेअर 2 पेक्षा कमी आहे आणि 2 स्क्वेअर 2 पेक्षा मोठा

26
00:01:38,300 --> 00:01:42,640
आहे, त्यामुळे तुम्हाला समजेल, अहो, त्या दोन मूल्यांमध्ये काहीतरी उपाय असेल.

27
00:01:42,640 --> 00:01:44,832
आणि मग तुम्हाला ते आणखी कमी करायचे असल्यास, कदाचित

28
00:01:44,832 --> 00:01:47,240
तुम्ही अर्ध्या बिंदूचे वर्गीकरण करण्याचा प्रयत्न करा, 1.

29
00:01:47,240 --> 00:01:47,740
५.

30
00:01:47,740 --> 00:01:49,085
हे 2 असल्याचे बाहेर येते.

31
00:01:49,085 --> 00:01:54,000
25, थोडे जास्त, त्यामुळे तुम्ही 1 आणि 1 मधील प्रदेशावर लक्ष केंद्रित कराल.

32
00:01:54,000 --> 00:01:54,940
५.

33
00:01:54,940 --> 00:01:59,961
आणि असेच, तुम्ही कदाचित हे कसे चालू राहील ते पाहू शकता, तुम्ही

34
00:01:59,961 --> 00:02:05,540
मध्यबिंदूवर संगणन करत राहाल आणि नंतर तुमची शोध जागा अर्धी कापून टाकाल.

35
00:02:05,540 --> 00:02:10,990
यावर विचार करण्याचा आणखी एक मार्ग, जो एकदा उच्च परिमाणांवर पोहोचल्यानंतर आपल्यासाठी सोपे

36
00:02:10,990 --> 00:02:16,380
करेल, त्याऐवजी या दोन कार्यांमधील फरक शून्य असताना समतुल्य प्रश्नावर लक्ष केंद्रित करणे.

37
00:02:16,380 --> 00:02:20,138
त्या अटींमध्ये, आम्हाला इनपुटचा एक प्रदेश सापडला जिथे तो फरक

38
00:02:20,138 --> 00:02:24,020
एका टोकाला नकारात्मक होता आणि तो दुसऱ्या टोकाला सकारात्मक होता.

39
00:02:24,020 --> 00:02:27,840
आम्ही त्याचे दोन भाग केले आणि अर्ध्या भागाकडे आमचे लक्ष वेधले

40
00:02:27,840 --> 00:02:31,600
ते एक होते जेथे सर्वात बाहेरील बिंदूंमध्ये भिन्न चिन्हे होती.

41
00:02:31,600 --> 00:02:36,419
याप्रमाणे, आम्ही कायमचे चालू ठेवू शकलो, सीमेवर वेगवेगळ्या चिन्हे असलेला

42
00:02:36,419 --> 00:02:41,507
प्रत्येक प्रदेश घेऊन, त्याच्या अर्ध्या भागांमध्ये एक लहान असा प्रदेश शोधून,

43
00:02:41,507 --> 00:02:46,260
शेवटी आपल्याला एका बिंदूवर संकुचित व्हायचे आहे जे अचूक शून्य होणार आहे.

44
00:02:46,260 --> 00:02:50,808
थोडक्यात, समीकरण सोडवणे हे नेहमी एखादे विशिष्ट कार्य शून्य असते तेव्हा शोधून

45
00:02:50,808 --> 00:02:55,060
काढले जाऊ शकते आणि तसे करण्यासाठी, आमच्याकडे हे हिरिस्टिक आहे, जर f एका

46
00:02:55,060 --> 00:02:59,550
बिंदूवर सकारात्मक आणि दुसर्‍या बिंदूवर ऋण असेल, तर आपण त्या दरम्यान कुठेतरी

47
00:02:59,550 --> 00:03:03,980
शोधू शकता ते शून्य आहे, कमीतकमी अचानक उडी न घेता सर्वकाही सहजतेने बदलले तर.

48
00:03:03,980 --> 00:03:07,545
मी तुम्हाला दाखवू इच्छित असलेली आश्चर्यकारक गोष्ट म्हणजे तुम्ही अशा

49
00:03:07,545 --> 00:03:11,478
प्रकारच्या विचारसरणीला द्विमितीय समीकरणांमध्ये, फंक्शन्समधील समीकरणांमध्ये

50
00:03:11,478 --> 00:03:14,940
विस्तारित करू शकता ज्यांचे इनपुट आणि आउटपुट दोन्ही द्विमितीय आहेत.

51
00:03:14,940 --> 00:03:18,205
उदाहरणार्थ, जटिल संख्या 2D आहेत आणि आम्ही विकसित करत

52
00:03:18,205 --> 00:03:21,780
असलेले हे साधन जटिल समीकरणांवर उपाय शोधण्यासाठी योग्य आहे.

53
00:03:21,780 --> 00:03:25,672
आता, आपण या 2D फंक्शन्सबद्दल खूप बोलणार आहोत, चला एक संक्षिप्त

54
00:03:25,672 --> 00:03:29,380
बाजूची पायरी घेऊ आणि आपण हे कसे स्पष्ट करू याचा विचार करूया.

55
00:03:29,380 --> 00:03:33,398
2D इनपुट आणि 2D आउटपुटसह फंक्शनचा आलेख तयार करण्यासाठी चार आयामांची

56
00:03:33,398 --> 00:03:37,416
आवश्यकता असेल आणि ते आमच्या 2D स्क्रीनवर आमच्या 3D जगात इतके चांगले

57
00:03:37,416 --> 00:03:41,140
काम करणार नाही, परंतु आमच्याकडे अजूनही काही चांगले पर्याय आहेत.

58
00:03:41,140 --> 00:03:46,020
एक म्हणजे फक्त इनपुट स्पेस आणि आउटपुट स्पेस दोन्ही शेजारी शेजारी पाहणे.

59
00:03:46,020 --> 00:03:51,665
इनपुट स्पेसमधील प्रत्येक बिंदू आऊटपुट स्पेसमधील एका विशिष्ट बिंदूकडे सरकतो आणि त्या इनपुट

60
00:03:51,665 --> 00:03:57,060
बिंदूभोवती फिरणे आउटपुट स्पेसमधील विशिष्ट हालचालींशी कसे संबंधित आहे हे मी दाखवू शकतो.

61
00:03:57,060 --> 00:04:02,226
आम्ही विचारात घेतलेली सर्व फंक्शन्स सतत असतील, या अर्थाने की इनपुटमधील छोटे

62
00:04:02,226 --> 00:04:07,460
छोटे बदल केवळ आउटपुटमधील छोट्या छोट्या बदलांशी संबंधित आहेत, अचानक उडी नाहीत.

63
00:04:07,460 --> 00:04:12,102
आमच्याकडे दुसरा पर्याय आहे की आउटपुट स्पेसच्या उत्पत्तीपासून त्या आउटपुट

64
00:04:12,102 --> 00:04:17,380
बिंदूपर्यंत बाणाची कल्पना करणे आणि त्या बाणाची सूक्ष्म आवृत्ती इनपुट बिंदूशी जोडणे.

65
00:04:17,380 --> 00:04:22,410
हे आपल्याला एका दृष्टीक्षेपात, दिलेला इनपुट पॉइंट कोठे जातो किंवा पूर्ण

66
00:04:22,410 --> 00:04:27,580
वेक्टर फील्ड काढून अनेक भिन्न इनपुट पॉइंट कोठे जातात याची कल्पना देऊ शकते.

67
00:04:27,580 --> 00:04:31,070
आणि दुर्दैवाने जेव्हा तुम्ही हे बर्‍याच बिंदूंवर करता तेव्हा ते खूपच

68
00:04:31,070 --> 00:04:34,409
गोंधळात पडू शकते, म्हणून मी येथे सर्व बाण समान आकाराचे बनवतो, आणि

69
00:04:34,409 --> 00:04:37,900
याचा अर्थ काय आहे की प्रत्येक आउटपुट बिंदूची दिशा आपल्याला समजू शकते.

70
00:04:37,900 --> 00:04:42,564
परंतु द्विमितीय फंक्शन्स स्पष्ट करण्याचा कदाचित सर्वात सुंदर मार्ग आणि हा व्हिडिओ

71
00:04:42,564 --> 00:04:47,400
आम्ही सर्वात जास्त वापरणार आहोत, त्या आउटपुट स्पेसमधील प्रत्येक बिंदूला रंगाने जोडणे.

72
00:04:47,400 --> 00:04:51,683
येथे आम्ही रंगछटांचा वापर केला आहे, जिथे रंग इंद्रधनुष्य किंवा कलर

73
00:04:51,683 --> 00:04:55,840
व्हीलच्या बाजूने पडतो, मूळपासून दूर असलेल्या दिशेशी जुळण्यासाठी,

74
00:04:55,840 --> 00:05:00,060
आणि आम्ही मूळपासून अंतराशी जुळण्यासाठी अंधार किंवा चमक वापरत आहोत.

75
00:05:00,060 --> 00:05:05,096
उदाहरणार्थ, आउटपुटच्या या अॅरेवर लक्ष केंद्रित करताना, हे सर्व बिंदू लाल

76
00:05:05,096 --> 00:05:10,340
आहेत, परंतु मूळच्या जवळ असलेले थोडे गडद आहेत आणि दूर असलेले थोडेसे उजळ आहेत.

77
00:05:10,340 --> 00:05:14,621
आणि आउटपुटच्या या अॅरेवर फोकस केल्यास, सर्व बिंदू हिरवे

78
00:05:14,621 --> 00:05:18,980
आहेत आणि पुन्हा, मूळच्या जवळ म्हणजे गडद, दूर म्हणजे फिकट.

79
00:05:18,980 --> 00:05:22,205
आणि असेच, आम्ही येथे करत आहोत प्रत्येक दिशेला एक

80
00:05:22,205 --> 00:05:25,300
विशिष्ट रंग नियुक्त करणे, हे सर्व सतत बदलत आहे.

81
00:05:25,300 --> 00:05:30,212
तुमच्या लक्षात येईल की येथे अंधार आणि ब्राइटनेसमधील फरक खूपच सूक्ष्म आहेत, परंतु या

82
00:05:30,212 --> 00:05:35,300
व्हिडिओसाठी, आम्हाला फक्त आउटपुटची दिशा आहे, मोठेपणा, रंगछटांची नाही, ब्राइटनेसची नाही.

83
00:05:35,300 --> 00:05:39,766
तुमच्या लक्षात येण्याजोगी ब्राइटनेसची एक महत्त्वाची गोष्ट म्हणजे

84
00:05:39,766 --> 00:05:44,440
उगमस्थानाजवळ, ज्याला कोणतीही विशिष्ट दिशा नाही, सर्व रंग काळे होतात.

85
00:05:44,440 --> 00:05:48,736
म्हणून फंक्शन्सबद्दल विचार करण्यासाठी, आता आम्ही प्रत्येक आउटपुटसाठी रंग

86
00:05:48,736 --> 00:05:53,210
ठरवले आहे, आम्ही आउटपुट स्पेसमध्ये ज्या बिंदूवर उतरतो त्या बिंदूच्या रंगावर

87
00:05:53,210 --> 00:05:57,860
आधारित इनपुट स्पेसमधील प्रत्येक बिंदूला रंग देऊन 2D फंक्शन्सची कल्पना करू शकतो.

88
00:05:57,860 --> 00:06:02,718
मला त्या इनपुट स्पेसमधून अनेक भिन्न बिंदू आउटपुट स्पेसमध्ये त्यांच्या संबंधित आउटपुटवर

89
00:06:02,718 --> 00:06:07,352
फिरतात, नंतर ते जिथे उतरतात त्या बिंदूच्या रंगाच्या आधारे पेंट केले जातात आणि नंतर

90
00:06:07,352 --> 00:06:11,820
इनपुट स्पेसमध्ये ते जिथून आले होते त्या ठिकाणी परत येण्याची कल्पना करायला आवडते.

91
00:06:11,820 --> 00:06:15,596
इनपुट स्पेसमधील प्रत्येक बिंदूसाठी असे केल्याने, फंक्शन प्रत्येक

92
00:06:15,596 --> 00:06:19,140
बिंदू कुठे घेते त्या इनपुट स्पेसकडे पाहून तुम्हाला समजू शकेल.

93
00:06:19,140 --> 00:06:24,425
उदाहरणार्थ, डावीकडील गुलाबी बिंदूंची ही पट्टी आपल्याला सांगते की ते सर्व

94
00:06:24,425 --> 00:06:30,000
बिंदू कुठेतरी गुलाबी दिशेने, आउटपुट स्पेसच्या खालच्या डावीकडे मॅप केले जातात.

95
00:06:30,000 --> 00:06:37,120
तसेच ते तीन बिंदू जे काळे आहेत त्यांच्या सभोवताली अनेक रंग आहेत ते शून्यावर जातात.

96
00:06:37,120 --> 00:06:43,450
ठीक आहे, 1D केस प्रमाणेच, 2D फंक्शन्सची समीकरणे सोडवणे नेहमी एखादे

97
00:06:43,450 --> 00:06:49,780
विशिष्ट फंक्शन शून्य असते तेव्हा विचारून पुन्हा तयार केले जाऊ शकते.

98
00:06:49,780 --> 00:06:55,083
त्यामुळे आत्ताच आमचे आव्हान आहे, एक अल्गोरिदम तयार करा ज्याने

99
00:06:55,083 --> 00:07:00,900
दिलेल्या 2D फंक्शनचे कोणते इनपुट पॉइंट शून्यावर जातात हे शोधून काढा.

100
00:07:00,900 --> 00:07:04,800
ते काळे ठिपके पाहून तुम्ही असा कलर मॅप पाहत असाल तर

101
00:07:04,800 --> 00:07:08,700
फंक्शनचे शून्य कुठे आहेत हे तुम्हाला आधीच माहीत आहे.

102
00:07:08,700 --> 00:07:11,460
तर ते मोजते का?

103
00:07:11,460 --> 00:07:15,776
लक्षात ठेवा की यासारखे आकृती तयार करण्यासाठी, आमच्याकडे कॉम्प्युटरने

104
00:07:15,776 --> 00:07:20,217
विमानातील सर्व पिक्सेलवर फंक्शनची गणना केली आहे, परंतु आमचे ध्येय अधिक

105
00:07:20,217 --> 00:07:24,846
कार्यक्षम अल्गोरिदम शोधणे आहे ज्यासाठी शक्य तितक्या कमी बिंदूंवर फंक्शनची

106
00:07:24,846 --> 00:07:29,600
गणना करणे आवश्यक आहे. , फक्त रंगांचे मर्यादित दृश्य आहे, म्हणून बोलायचे आहे.

107
00:07:29,600 --> 00:07:34,139
आणि अधिक सैद्धांतिक दृष्टिकोनातून, दिलेल्या प्रदेशात शून्य अस्तित्त्वात

108
00:07:34,139 --> 00:07:38,300
आहे की नाही याची परिस्थिती सांगणारी सामान्य रचना असणे चांगले होईल.

109
00:07:38,300 --> 00:07:43,545
लक्षात ठेवा, एका परिमाणात मुख्य अंतर्दृष्टी अशी होती की जर सतत कार्य एका बिंदूवर

110
00:07:43,545 --> 00:07:48,920
सकारात्मक असेल आणि दुसर्‍या ठिकाणी नकारात्मक असेल तर, ते कुठेतरी शून्य असले पाहिजे.

111
00:07:48,920 --> 00:07:50,960
मग आपण ते दोन आयामांमध्ये कसे वाढवायचे?

112
00:07:50,960 --> 00:07:55,180
आम्हाला चिन्हांबद्दल बोलण्यासाठी काही प्रकारचे अॅनालॉग हवे आहेत.

113
00:07:55,180 --> 00:07:59,140
चिन्हे काय आहेत याचा विचार करण्याचा एक मार्ग म्हणजे दिशानिर्देश.

114
00:07:59,140 --> 00:08:01,690
सकारात्मक म्हणजे तुम्ही संख्या रेषेसह उजवीकडे निर्देशित करत

115
00:08:01,690 --> 00:08:04,240
आहात आणि नकारात्मक म्हणजे तुम्ही डावीकडे निर्देशित करत आहात.

116
00:08:04,240 --> 00:08:08,420
द्विमितीय परिमाणांना देखील दिशा असते, परंतु त्यांच्यासाठी पर्याय अधिक

117
00:08:08,420 --> 00:08:12,780
विस्तृत आहेत, ते शक्यतांच्या संपूर्ण वर्तुळात कुठेही निर्देशित करू शकतात.

118
00:08:12,780 --> 00:08:19,161
तर त्याच प्रकारे आम्ही एका परिमाणात विचारत होतो की दिलेले फंक्शन एका श्रेणीच्या

119
00:08:19,161 --> 00:08:26,261
सीमारेषेवर सकारात्मक किंवा नकारात्मक आहे की नाही, जे फक्त दोन बिंदू आहे, 2d फंक्शन्ससाठी

120
00:08:26,261 --> 00:08:33,201
आम्ही प्रदेशाची सीमा पाहणार आहोत, जे लूप आहे, आणि त्या सीमेवर फंक्शनच्या आउटपुटची दिशा

121
00:08:33,201 --> 00:08:33,760
विचारा.

122
00:08:33,760 --> 00:08:39,755
उदाहरणार्थ, आपण पाहतो की या शून्याभोवती असलेल्या या लूपमध्ये, आउटपुट प्रत्येक संभाव्य

123
00:08:39,755 --> 00:08:45,820
दिशेने, इंद्रधनुष्याचे सर्व रंग, लाल, पिवळा, हिरवा, निळा, परत लाल, आणि वाटेत सर्व काही.

124
00:08:45,820 --> 00:08:50,517
पण इथे या लूपमध्ये, आत शून्य नसल्यामुळे, आऊटपुट प्रत्येक रंगातून जात

125
00:08:50,517 --> 00:08:55,420
नाही, ते काही केशरी रंगांमधून जाते, परंतु, म्हणा, हिरवा किंवा निळा नाही.

126
00:08:55,420 --> 00:08:59,320
आणि हे आशादायक आहे, गोष्टी एका परिमाणात कसे कार्य करतात असे दिसते.

127
00:08:59,320 --> 00:09:04,916
कदाचित त्याच प्रकारे 1d फंक्शनने 1d प्रदेशाच्या सीमेवर दोन्ही संभाव्य चिन्हे

128
00:09:04,916 --> 00:09:10,077
घेतल्यास, आत कुठेतरी एक शून्य असेल, तर आपण असे गृहित धरू शकतो की जर 2d

129
00:09:10,077 --> 00:09:15,383
फंक्शन सर्व संभाव्य दिशांच्या, सर्व संभाव्य रंगांच्या आउटपुटवर आदळते. 2d

130
00:09:15,383 --> 00:09:20,980
प्रदेशाची सीमा, नंतर त्या प्रदेशाच्या आत कुठेतरी ती शून्यावर जाणे आवश्यक आहे.

131
00:09:20,980 --> 00:09:24,352
तर हा आमचा अंदाज आहे, आणि हे खरे असले पाहिजे का आणि

132
00:09:24,352 --> 00:09:27,660
तसे असल्यास का याचा विचार करण्यासाठी थोडा वेळ घ्या.

133
00:09:27,660 --> 00:09:32,058
जर आपण काही इनपुट पॉईंटभोवती लहान लूपचा विचार करू लागलो, तर आपल्याला माहित आहे की सर्व

134
00:09:32,058 --> 00:09:36,407
काही सतत चालू असल्याने, आपले फंक्शन त्यास संबंधित आउटपुटजवळील काही लहान लूपमध्ये घेऊन

135
00:09:36,407 --> 00:09:36,660
जाते.

136
00:09:36,660 --> 00:09:41,140
पण पहा, बहुतेक लहान लूपसाठी, आउटपुट रंगात बदलते.

137
00:09:41,140 --> 00:09:45,558
जर तुम्ही शून्याव्यतिरिक्त कोणताही आउटपुट पॉइंट निवडला आणि त्याच्या जवळ एक

138
00:09:45,558 --> 00:09:49,860
पुरेसा घट्ट लूप काढला, तर लूपचे रंग सर्व त्या बिंदूच्या रंगासारखेच असतील.

139
00:09:49,860 --> 00:09:54,184
येथे एक घट्ट लूप सर्व निळसर आहे, येथे एक घट्ट लूप सर्व पिवळसर

140
00:09:54,184 --> 00:09:58,440
आहे, तुम्हाला नक्कीच इंद्रधनुष्याचा प्रत्येक रंग मिळणार नाही.

141
00:09:58,440 --> 00:10:02,622
सर्व रंग मिळत असतानाही तुम्ही त्याच्याभोवती लूप घट्ट

142
00:10:02,622 --> 00:10:07,120
करू शकता असा एकमेव मुद्दा म्हणजे रंगहीन मूळ, शून्य स्वतः.

143
00:10:07,120 --> 00:10:10,330
तर हे खरंच आहे की जर तुमच्याकडे इंद्रधनुष्याच्या प्रत्येक

144
00:10:10,330 --> 00:10:13,817
रंगातून लूप जात असतील, घट्ट होत असतील, घट्ट होत असतील, एखाद्या

145
00:10:13,817 --> 00:10:17,360
बिंदूवर संकुचित होत असतील, तर तो बिंदू खरं तर शून्य असला पाहिजे.

146
00:10:17,360 --> 00:10:22,360
आणि म्हणून आपल्या एक-आयामी समीकरण सॉल्व्हरप्रमाणेच 2d समीकरण सॉल्व्हर सेट करूया.

147
00:10:22,360 --> 00:10:26,362
जेव्हा आपल्याला एक मोठा प्रदेश सापडतो ज्याची सीमा प्रत्येक रंगातून जाते,

148
00:10:26,362 --> 00:10:30,640
तेव्हा त्याचे दोन भाग करा आणि नंतर प्रत्येक अर्ध्या भागाच्या सीमेवरील रंग पहा.

149
00:10:30,640 --> 00:10:34,831
येथे दर्शविलेल्या उदाहरणामध्ये, डाव्या अर्ध्या भागाची सीमा सर्व रंगांमधून

150
00:10:34,831 --> 00:10:39,080
जात नाही, उदाहरणार्थ, केशरी पिवळ्या दिशांना मॅप करणारे कोणतेही बिंदू नाहीत.

151
00:10:39,080 --> 00:10:41,566
म्हणून आम्ही यापुढे शोधू इच्छित नाही असे सांगण्याचा

152
00:10:41,566 --> 00:10:43,480
एक मार्ग म्हणून मी हे क्षेत्र धूसर करेन.

153
00:10:43,480 --> 00:10:47,476
उजवा अर्धा भाग सर्व रंगांमधून जातो, हिरव्या दिशेने बराच वेळ घालवतो,

154
00:10:47,476 --> 00:10:51,120
नंतर पिवळ्या नारंगी लाल, तसेच निळ्या जांभळ्या गुलाबीमधून जातो.

155
00:10:51,120 --> 00:10:54,548
आता लक्षात ठेवा, याचा अर्थ असा आहे की या सीमारेषेचे बिंदू

156
00:10:54,548 --> 00:10:57,800
सर्व संभाव्य दिशानिर्देशांच्या आउटपुटवर मॅप केले जातात.

157
00:10:57,800 --> 00:11:00,714
म्हणून आम्ही ते आणखी एक्सप्लोर करू, पुन्हा उपविभाजन

158
00:11:00,714 --> 00:11:02,900
करून आणि प्रत्येक प्रदेशाची सीमा तपासू.

159
00:11:02,900 --> 00:11:07,000
शीर्षाची सीमा सर्व हिरवी आहे, म्हणून आम्ही तेथे शोधणे थांबवू.

160
00:11:07,000 --> 00:11:10,500
पण तळाचा भाग उपविभागास पात्र होण्याइतका रंगीबेरंगी आहे.

161
00:11:10,500 --> 00:11:12,420
आणि असेच चालू ठेवा.

162
00:11:12,420 --> 00:11:17,942
कोणत्या उपप्रदेशाला सर्व संभाव्य रंगांची सीमा आहे ते तपासा, म्हणजे त्या सीमारेषेचे

163
00:11:17,942 --> 00:11:23,597
बिंदू सर्व संभाव्य दिशांना मॅप केले जातात आणि त्या प्रदेशांना आम्ही एक-आयामी केससाठी

164
00:11:23,597 --> 00:11:29,320
केले तसे अर्धे कापत राहा, शेवटी आम्हाला कार्याच्या शून्यावर नेले. अरे, एक सेकंद थांबा.

165
00:11:29,320 --> 00:11:30,320
येथे काय घडले?

166
00:11:30,320 --> 00:11:33,777
तळाशी उजवीकडे असलेल्या या शेवटच्या उपविभागांपैकी एकही सर्व

167
00:11:33,777 --> 00:11:37,175
रंगांमधून गेला नाही, म्हणून आमचे अल्गोरिदम थांबले कारण ते

168
00:11:37,175 --> 00:11:41,160
यापैकी एकही शोधू इच्छित नव्हते, परंतु त्यास शून्य देखील सापडले नाही.

169
00:11:41,160 --> 00:11:43,720
ठीक आहे, स्पष्टपणे येथे काहीतरी चुकीचे आहे.

170
00:11:43,720 --> 00:11:46,680
आणि ते ठीक आहे, चुकीचे असणे हा गणिताचा नियमित भाग आहे.

171
00:11:46,680 --> 00:11:50,154
जर आपण मागे वळून पाहिलं तर, आमच्याकडे ही गृहितक होती आणि ती आम्हाला

172
00:11:50,154 --> 00:11:53,680
या प्रस्तावित अल्गोरिदमकडे घेऊन गेली, त्यामुळे आमची कुठेतरी चूक झाली.

173
00:11:53,680 --> 00:11:57,903
आणि गणितात चांगले असणे म्हणजे प्रथमच बरोबर असण्याबद्दल नाही, ते काळजीपूर्वक मागे वळून

174
00:11:57,903 --> 00:12:02,323
पाहण्याची आणि चुका समजून घेण्याची आणि त्या कशा दुरुस्त करायच्या हे समजून घेण्याची लवचिकता

175
00:12:02,323 --> 00:12:02,520
आहे.

176
00:12:02,520 --> 00:12:06,741
आता इथे अडचण अशी आहे की आमच्याकडे एक प्रदेश होता ज्याची सीमा प्रत्येक रंगातून गेली होती,

177
00:12:06,741 --> 00:12:10,915
परंतु जेव्हा आम्ही ती मध्यभागी विभाजित केली तेव्हा कोणत्याही उपक्षेत्राची सीमा प्रत्येक

178
00:12:10,915 --> 00:12:14,995
रंगातून जात नव्हती, आमच्याकडे पुढे कुठे शोधायचे याचे पर्याय नव्हते आणि त्यामुळे शून्य

179
00:12:14,995 --> 00:12:15,280
तोडले.

180
00:12:15,280 --> 00:12:18,120
शोधक आता एका परिमाणात, अशा प्रकारची गोष्ट कधीच घडली नाही.

181
00:12:18,120 --> 00:12:21,955
कोणत्याही वेळी तुमच्याकडे मध्यांतर असेल ज्यांच्या शेवटच्या बिंदूंना भिन्न चिन्हे

182
00:12:21,955 --> 00:12:25,885
असतील, तुम्ही ते विभाजित केल्यास, तुम्हाला माहित आहे की तुम्हाला काही उप-अंतरबिंदू

183
00:12:25,885 --> 00:12:29,200
मिळण्याची हमी आहे ज्यांच्या शेवटच्या बिंदूंना देखील भिन्न चिन्हे आहेत.

184
00:12:29,200 --> 00:12:32,653
किंवा दुसर्‍या मार्गाने सांगा, कोणत्याही वेळी तुमच्याकडे दोन अंतराल असतील

185
00:12:32,653 --> 00:12:36,200
ज्यांचे शेवटचे बिंदू चिन्हे बदलत नाहीत, जर तुम्ही ते एकत्र केले तर तुम्हाला

186
00:12:36,200 --> 00:12:39,280
एक मोठा मध्यांतर मिळेल ज्याचे शेवटचे बिंदू देखील चिन्ह बदलत नाहीत.

187
00:12:39,280 --> 00:12:44,511
परंतु दोन मितींमध्ये, दोन प्रदेश शोधणे शक्य आहे ज्यांच्या सीमा प्रत्येक रंगातून

188
00:12:44,511 --> 00:12:49,940
जात नाहीत, परंतु ज्यांच्या सीमा प्रत्येक रंगातून जात नसलेल्या प्रदेशाला मिळू शकतात.

189
00:12:49,940 --> 00:12:53,740
आणि अशा प्रकारे, आमचे प्रस्तावित शून्य-शोध अल्गोरिदम तोडले.

190
00:12:53,740 --> 00:12:58,565
खरं तर, जर तुम्ही त्याबद्दल विचार केला तर, तुम्हाला एक मोठा लूप सापडेल

191
00:12:58,565 --> 00:13:03,120
ज्याची सीमा त्याच्या आत शून्य न होता प्रत्येक संभाव्य रंगातून जाते.

192
00:13:03,120 --> 00:13:06,551
आता याचा अर्थ असा नाही की लहान लूपबद्दलच्या आमच्या दाव्यांमध्ये

193
00:13:06,551 --> 00:13:09,876
आम्ही चुकीचे होतो जेव्हा आम्ही असे म्हटले की प्रत्येक रंगातून

194
00:13:09,876 --> 00:13:13,040
जाणारा कायमचा संकुचित लूप शून्यावर संकुचित करणे आवश्यक आहे.

195
00:13:13,040 --> 00:13:16,340
पण आमच्यासाठी गोंधळाची गोष्ट अशी आहे की हे-माझ्या-सीमेवर-प्रत्येक-रं

196
00:13:16,340 --> 00:13:19,544
ग-किंवा-नसते-प्रत्येक-रंगाने-किंवा-नसून-जाते-जेव्हा तुम्ही प्रदेश

197
00:13:19,544 --> 00:13:23,040
एकत्र करता तेव्हा छान, अंदाज लावता येण्याजोग्या पद्धतीने एकत्र होत नाही.

198
00:13:23,040 --> 00:13:30,539
परंतु काळजी करू नका, असे दिसून आले की आम्ही हे थोडेसे सुधारित करून अधिक

199
00:13:30,539 --> 00:13:38,560
अत्याधुनिक मालमत्तेमध्ये बदलू शकतो जे आम्हाला हवे ते देण्यासाठी एकत्रित करते.

200
00:13:38,560 --> 00:13:43,386
कल्पना अशी आहे की आपल्याला लूपच्या बाजूने कधीतरी रंग सापडतो की नाही हे विचारण्याऐवजी,

201
00:13:43,386 --> 00:13:48,100
आपण त्या लूपभोवती फिरत असताना हे रंग कसे बदलतात याचा अधिक काळजीपूर्वक मागोवा ठेवूया.

202
00:13:48,100 --> 00:13:50,060
मला काय म्हणायचे आहे ते मी उदाहरणासह दाखवतो.

203
00:13:50,060 --> 00:13:54,120
आम्हाला ट्रॅक ठेवण्यात मदत करण्यासाठी मी येथे कोपऱ्यात थोडे कलर व्हील ठेवीन.

204
00:13:54,120 --> 00:13:58,157
जेव्हा इनपुटच्या मार्गावरील रंग इंद्रधनुष्यातून विशिष्ट दिशेने

205
00:13:58,157 --> 00:14:01,874
लाल ते पिवळे, पिवळे ते हिरवे, हिरवे ते निळे किंवा निळे ते

206
00:14:01,874 --> 00:14:05,720
लाल अशा दिशेने जातात तेव्हा आउटपुट घड्याळाच्या दिशेने फिरते.

207
00:14:05,720 --> 00:14:11,336
पण दुसरीकडे, जर रंग इंद्रधनुष्यातून दुसऱ्या मार्गाने, निळ्या ते हिरव्या, हिरव्या

208
00:14:11,336 --> 00:14:17,160
ते पिवळे, पिवळे ते लाल किंवा लाल ते निळे, तर आउटपुट घड्याळाच्या उलट दिशेने फिरत आहे.

209
00:14:17,160 --> 00:14:21,850
त्यामुळे येथे या छोट्या वाटेवरून चालताना, रंग घड्याळाच्या काट्याच्या

210
00:14:21,850 --> 00:14:26,337
पाचव्या दिशेने कलर व्हीलमधून वारे वाहतात आणि या वाटेवरून चालताना,

211
00:14:26,337 --> 00:14:30,620
रंग घड्याळाच्या दिशेने आणखी एक पाचवा वारा कलर व्हीलमधून वळवतात.

212
00:14:30,620 --> 00:14:34,943
अर्थात, याचा अर्थ असा की जर तुम्ही दोन्ही मार्गांवरून एकामागून एक जात असाल,

213
00:14:34,943 --> 00:14:39,380
तर रंग घड्याळाच्या काट्याच्या दिशेने पूर्ण वळणाच्या दोन-पंचमांश भागावर फिरतात.

214
00:14:39,380 --> 00:14:43,260
वळणाची एकूण रक्कम फक्त जोडते, आणि हे महत्त्वाचे ठरणार

215
00:14:43,260 --> 00:14:47,140
आहे, हे असे सरळ संयोजन आहे जे आपल्यासाठी उपयुक्त ठरेल.

216
00:14:47,140 --> 00:14:50,825
जेव्हा मी वळणाचे एकूण प्रमाण सांगतो, तेव्हा मला तुम्ही जुन्या पद्धतीच्या

217
00:14:50,825 --> 00:14:54,611
ओडोमीटरची कल्पना करावी असे वाटते जे बाण घड्याळाच्या काट्याच्या दिशेने फिरत

218
00:14:54,611 --> 00:14:58,700
असताना पुढे टिकून राहते, परंतु बाण घड्याळाच्या उलट दिशेने फिरतो तेव्हा मागे जातो.

219
00:14:58,700 --> 00:15:00,880
त्यामुळे घड्याळाच्या उलट दिशेने वळण घड्याळाच्या उलट

220
00:15:00,880 --> 00:15:03,020
दिशेने वळण घड्याळाच्या दिशेने वळण म्हणून गणले जाते.

221
00:15:03,020 --> 00:15:08,940
आउटपुट खूप वळू शकतात, परंतु त्यातील काही वळण विरुद्ध दिशेने असल्यास ते रद्द होते.

222
00:15:08,940 --> 00:15:14,726
उदाहरणार्थ, जर तुम्ही या वाटेने पुढे गेलात, आणि नंतर त्याच वाटेने मागे सरकत असाल, तर

223
00:15:14,726 --> 00:15:20,309
वळणाचे एकूण प्रमाण शून्य होते, मागची हालचाल अक्षरशः पूर्वी पाहिलेल्या रंगांद्वारे

224
00:15:20,309 --> 00:15:26,300
रिवाइंड होते, मागील सर्व वळण उलटून जाते आणि परत येते. ओडोमीटर जिथून सुरू झाला तिकडे परत.

225
00:15:26,300 --> 00:15:30,480
आमच्या हेतूंसाठी, आम्ही लूपच्या बाजूने वळण पाहण्याकडे सर्वात जास्त काळजी घेऊ.

226
00:15:30,480 --> 00:15:34,280
उदाहरणार्थ, आपण या संपूर्ण लूपभोवती घड्याळाच्या दिशेने फिरतो असे समजा.

227
00:15:34,280 --> 00:15:40,570
एकूण तीन पूर्ण घड्याळाच्या दिशेने वळणाच्या आसपास वाऱ्यावर येणारे आऊटपुट,

228
00:15:40,570 --> 00:15:47,120
रंग इंद्रधनुष्यातून, क्रमाने, लाल ते पुन्हा लाल, आणि नंतर पुन्हा आणि पुन्हा.

229
00:15:47,120 --> 00:15:54,100
गणितज्ञ वापरत असलेल्या शब्दजालांमध्ये, आम्ही म्हणतो की या लूपसह, एकूण वळण संख्या 3 आहे.

230
00:15:54,100 --> 00:15:58,440
इतर लूपसाठी, ती इतर कोणतीही पूर्ण संख्या असू शकते, इनपुट एकाच लूपभोवती

231
00:15:58,440 --> 00:16:02,780
फिरत असताना आउटपुट अनेक वेळा फिरत असल्यास कदाचित मोठी संख्या असू शकते,

232
00:16:02,780 --> 00:16:07,060
किंवा आउटपुट फक्त एक किंवा दोनदा फिरत असल्यास ही संख्या लहान असू शकते.

233
00:16:07,060 --> 00:16:11,280
किंवा ती वळण संख्या ऋण पूर्णांक देखील असू शकते, जर आउटपुट घड्याळाच्या

234
00:16:11,280 --> 00:16:15,200
उलट दिशेने फिरत असताना आपण लूपभोवती घड्याळाच्या दिशेने फिरत असतो.

235
00:16:15,200 --> 00:16:19,720
परंतु कोणत्याही लूपमध्ये, वळणाची ही एकूण रक्कम पूर्ण संख्या असावी.

236
00:16:19,720 --> 00:16:22,727
म्हणजे, तुम्ही जिथे सुरुवात केली होती तिथे परत येईपर्यंत

237
00:16:22,727 --> 00:16:25,840
तुमच्याकडे तेच आउटपुट असेल ज्याने तुम्ही सुरुवात केली होती.

238
00:16:25,840 --> 00:16:29,718
योगायोगाने, जर एखाद्या पाथमध्ये आउटपुट तंतोतंत शून्य असेल असा

239
00:16:29,718 --> 00:16:33,659
बिंदू असेल, तर तांत्रिकदृष्ट्या तुम्ही त्या बाजूने वळण क्रमांक

240
00:16:33,659 --> 00:16:37,600
परिभाषित करू शकत नाही, कारण आउटपुटला कोणतीही विशिष्ट दिशा नसते.

241
00:16:37,600 --> 00:16:41,311
हे आमच्यासाठी समस्या होणार नाही, कारण आमचे संपूर्ण ध्येय शून्य

242
00:16:41,311 --> 00:16:45,200
शोधणे आहे, म्हणून जर हे कधी समोर आले तर आम्ही नशीब लवकर बाहेर पडू.

243
00:16:45,200 --> 00:16:50,316
या वळण संख्यांबद्दल लक्षात येण्यासारखी मुख्य गोष्ट म्हणजे जेव्हा

244
00:16:50,316 --> 00:16:55,040
तुम्ही मोठ्या पाथांमध्ये पथ एकत्र करता तेव्हा ते छान जोडतात.

245
00:16:55,040 --> 00:16:58,848
परंतु जेव्हा आपण क्षेत्र एकत्र करून मोठे प्रदेश बनवतो तेव्हा प्रदेशांच्या

246
00:16:58,848 --> 00:17:03,120
सीमारेषेवरील वळण संख्या चांगल्या प्रकारे जोडल्या जाव्यात हे आपल्याला खरोखर हवे आहे.

247
00:17:03,120 --> 00:17:06,320
मग ती मालमत्ता आपल्याकडे आहे का?

248
00:17:06,320 --> 00:17:09,600
बरं, एक नजर टाका.

249
00:17:09,600 --> 00:17:13,947
डावीकडील या प्रदेशाभोवती घड्याळाच्या दिशेने जाताना वळणाची

250
00:17:13,947 --> 00:17:17,920
संख्या ही या चार मार्गांवरील वळण संख्यांची बेरीज आहे.

251
00:17:17,920 --> 00:17:21,832
आणि उजवीकडील या प्रदेशाभोवती आपण घड्याळाच्या दिशेने जाताना

252
00:17:21,832 --> 00:17:25,480
वळण घेतो तो या चार मार्गांवरील वळण संख्यांची बेरीज आहे.

253
00:17:25,480 --> 00:17:29,750
आणि जेव्हा आपण त्या दोन प्रदेशांना एका मोठ्या प्रदेशात एकत्र करतो, तेव्हा त्यातील

254
00:17:29,750 --> 00:17:33,760
बहुतेक मार्ग मोठ्या प्रदेशाच्या घड्याळाच्या दिशेने असलेल्या सीमेचा भाग बनतात.

255
00:17:33,760 --> 00:17:36,040
आणि नाही त्या दोन मार्गांसाठी म्हणून?

256
00:17:36,040 --> 00:17:39,524
ते पूर्णपणे रद्द करतात, त्यापैकी एक फक्त उलट आहे,

257
00:17:39,524 --> 00:17:42,660
दुसऱ्याचे रिवाइंडिंग जसे आपण आधी पाहिले होते.

258
00:17:42,660 --> 00:17:48,840
म्हणून प्रदेशांच्या सीमारेषेवरील वळण संख्या आपल्याला पाहिजे त्या प्रकारे जोडतात.

259
00:17:48,840 --> 00:17:52,921
हे देखील लक्षात ठेवा की, अशा प्रकारे जोडलेल्या ओरिएंटेड सीमांबद्दलचे हे तर्क

260
00:17:52,921 --> 00:17:57,320
गणितामध्ये बरेच काही आढळतात आणि ते बर्‍याचदा स्टोक्सच्या प्रमेयाच्या नावाखाली जाते.

261
00:17:57,320 --> 00:17:59,936
तुमच्यापैकी ज्यांनी मल्टीव्हेरिएबल कॅल्क्युलसचा

262
00:17:59,936 --> 00:18:02,880
अभ्यास केला आहे ते कदाचित त्या संदर्भावरून ओळखू शकतील.

263
00:18:02,880 --> 00:18:05,487
तर आता, शेवटी, हातात संख्या वळवून, आम्ही आमच्या

264
00:18:05,487 --> 00:18:08,040
समीकरण सोडवण्याच्या उद्दिष्टांकडे परत येऊ शकतो.

265
00:18:08,040 --> 00:18:12,394
आपण आधी पाहिलेल्या प्रदेशाची समस्या अशी आहे की जरी त्याची सीमा सर्व

266
00:18:12,394 --> 00:18:16,620
संभाव्य रंगांमधून गेली असली तरी वळण संख्या प्रत्यक्षात शून्य होती.

267
00:18:16,620 --> 00:18:21,434
आऊटपुट अर्ध्या वाटेने, पिवळ्या ते लाल रंगाच्या दिशेने घसरले आणि नंतर

268
00:18:21,434 --> 00:18:26,527
घड्याळाच्या उलट दिशेने दुसऱ्या दिशेने जाऊ लागले, नंतर निळ्यातून जाणे आणि

269
00:18:26,527 --> 00:18:32,040
दुसऱ्या मार्गाने लाल मारणे सुरू ठेवले, सर्व अशा प्रकारे की एकूण वळण शून्य झाले.

270
00:18:32,040 --> 00:18:36,242
परंतु जर तुम्हाला असा लूप सापडला जो केवळ प्रत्येक रंगालाच मारत नाही, तर त्यात शून्य

271
00:18:36,242 --> 00:18:40,445
नसलेल्या वळण क्रमांकाची मजबूत स्थिती आहे, तर तुम्ही जर ते अर्ध्या भागामध्ये विभाजित

272
00:18:40,445 --> 00:18:44,547
केले असेल, तर तुम्हाला खात्री आहे की त्या अर्ध्यापैकी किमान एक भाग असेल. नॉन-झिरो

273
00:18:44,547 --> 00:18:48,600
वाइंडिंग नंबर देखील, कारण गोष्टी आपल्याला पाहिजे त्या मार्गाने छान जोडल्या जातात.

274
00:18:48,600 --> 00:18:54,280
अशाप्रकारे, तुम्ही पुढे जात राहू शकता, एका बिंदूवर आणखी आणि पुढे जाऊ शकता.

275
00:18:54,280 --> 00:18:58,498
आणि जसे तुम्ही एका बिंदूवर संकुचित कराल, तेव्हा तुम्ही असे लहान लूपसह कराल ज्यामध्ये

276
00:18:58,498 --> 00:19:02,865
शून्य नसलेल्या वळण संख्या आहेत, ज्याचा अर्थ असा होतो की ते सर्व संभाव्य रंगांमधून जातात

277
00:19:02,865 --> 00:19:07,134
आणि म्हणून मी आधी म्हटल्याप्रमाणे, ते ज्या बिंदूमध्ये संकुचित होत आहेत. वर शून्य असणे

278
00:19:07,134 --> 00:19:07,680
आवश्यक आहे.

279
00:19:07,680 --> 00:19:08,760
आणि तेच!

280
00:19:08,760 --> 00:19:11,727
आम्ही आता द्विमितीय समीकरण सॉल्व्हर तयार केले

281
00:19:11,727 --> 00:19:14,760
आहे, आणि यावेळी, मी वचन देतो, कोणतेही बग नाहीत.

282
00:19:14,760 --> 00:19:18,200
हे काम करण्यासाठी आपल्याला आवश्यक असलेले साधन म्हणजे वाइंडिंग नंबर्स.

283
00:19:18,200 --> 00:19:22,566
आता आपण f आणि g वाऱ्यांमधला फरक कसा आहे याचा विचार करून दोन

284
00:19:22,566 --> 00:19:27,660
परिमाणांमध्ये x च्या x समान g कुठे आहे असे दिसणारी समीकरणे सोडवू शकतो.

285
00:19:27,660 --> 00:19:31,341
जेव्हाही आमच्याकडे असा लूप असेल ज्याचा वाइंडिंग क्रमांक शून्य नसेल, तेव्हा आम्ही

286
00:19:31,341 --> 00:19:35,160
त्यावर हा अल्गोरिदम चालवू शकतो, आणि आम्ही त्यामध्ये कुठेतरी उपाय शोधण्याची हमी देतो.

287
00:19:35,160 --> 00:19:40,300
आणि आणखी काय, एका परिमाणाप्रमाणे, हे अल्गोरिदम आश्चर्यकारकपणे कार्यक्षम आहे.

288
00:19:40,300 --> 00:19:45,301
आम्ही प्रत्येक फेरीत आमच्या क्षेत्राच्या अर्ध्या आकारात संकुचित करत राहतो, अशा

289
00:19:45,301 --> 00:19:50,428
प्रकारे त्वरीत शून्यांवर संकुचित होतो, आणि या सर्व वेळी, आम्हाला फक्त या लूपच्या

290
00:19:50,428 --> 00:19:55,240
बिंदूंसह फंक्शनचे मूल्य तपासावे लागते, ते अनेकांवर तपासण्याऐवजी. आतील बिंदू.

291
00:19:55,240 --> 00:19:59,791
त्यामुळे काही अर्थाने, केलेले एकूण कार्य केवळ शोध जागेच्या

292
00:19:59,791 --> 00:20:04,960
परिमितीच्या प्रमाणात आहे, पूर्ण क्षेत्रफळ नाही, जे आश्चर्यकारक आहे.

293
00:20:04,960 --> 00:20:09,346
आता काय चालले आहे हे समजल्यानंतर, हे फक्त कृतीत पाहणे, त्यास काही

294
00:20:09,346 --> 00:20:13,800
कार्य देणे आणि शून्य शोधू देणे हे विचित्रपणे मंत्रमुग्ध करणारे आहे.

295
00:20:13,800 --> 00:20:16,891
मी आधी म्हटल्याप्रमाणे, जटिल संख्या द्विमितीय आहेत,

296
00:20:16,891 --> 00:20:20,340
म्हणून चला ते जटिल संख्यांच्या काही समीकरणांवर लागू करूया.

297
00:20:20,340 --> 00:20:24,544
उदाहरणार्थ, कॉम्प्लेक्स प्लेनवर x ते पाचव्या वजा

298
00:20:24,544 --> 00:20:28,920
x वजा एक फंक्शनचे शून्य शोधणारे अल्गोरिदम येथे आहे.

299
00:20:28,920 --> 00:20:32,247
हे उत्पत्तीच्या आजूबाजूच्या खूप मोठ्या प्रदेशाचा

300
00:20:32,247 --> 00:20:35,440
विचार करून सुरू झाले, ज्याची वळण संख्या 5 होती.

301
00:20:35,440 --> 00:20:39,108
प्रत्येक वेळी तुम्हाला शून्य नसलेल्या वळण क्रमांकासह लूप सापडेल तेव्हा

302
00:20:39,108 --> 00:20:42,880
तुम्ही ते अर्ध्यामध्ये विभाजित कराल आणि दोन लहान वळणांची वळण संख्या काढा.

303
00:20:42,880 --> 00:20:46,636
त्यापैकी एक किंवा दोन्हीपैकी एक शून्य नसलेला वळण क्रमांक असण्याची हमी आहे,

304
00:20:46,636 --> 00:20:50,543
आणि जेव्हा तुम्ही हे पाहता तेव्हा तुम्हाला कळते की त्या लहान लूपमध्ये कुठेतरी

305
00:20:50,543 --> 00:20:54,300
एक शून्य आहे, म्हणून तुम्ही लहान जागेचा शोध घेत त्याच प्रकारे पुढे जात रहा.

306
00:20:54,300 --> 00:20:58,860
आम्ही ज्या मार्गावर मोजणी करत आहोत तो शून्यात अडखळला तर आम्ही एखाद्या प्रदेशाचे अन्वेषण

307
00:20:58,860 --> 00:21:03,420
करणे देखील थांबवतो, जे येथे उजव्या अर्ध्या भागावर या उदाहरणासाठी प्रत्यक्षात एकदाच घडले.

308
00:21:03,420 --> 00:21:06,426
त्या दुर्मिळ घटनांमुळे वळण संख्या मोजण्याच्या आमच्या

309
00:21:06,426 --> 00:21:09,320
क्षमतेत व्यत्यय येतो, पण अहो, आम्हाला शून्य मिळाले.

310
00:21:09,320 --> 00:21:13,320
आणि ज्या वळणांची संख्या शून्य आहे अशा लूपसाठी, तुम्ही त्या पुढे शोधू नका.

311
00:21:13,320 --> 00:21:18,520
कदाचित त्यांच्याकडे आतून उपाय असेल, कदाचित ते नसेल, आम्हाला कोणतीही हमी नाही.

312
00:21:18,520 --> 00:21:22,084
आणि आपले समीकरण सोडवणारे असेच चालू ठेवल्यास, ते

313
00:21:22,084 --> 00:21:26,020
शेवटी या बहुपदीसाठी अनेक शून्यांमध्ये रूपांतरित होते.

314
00:21:26,020 --> 00:21:31,660
तसे, या उदाहरणातील एकूण वळण संख्या 5 आहे हा योगायोग नाही.

315
00:21:31,660 --> 00:21:38,685
कॉम्प्लेक्स नंबर्ससह, x ते n हे ऑपरेशन थेट आउटपुटच्या उत्पत्तीच्या n वेळाभोवती

316
00:21:38,685 --> 00:21:45,000
फिरण्याशी संबंधित आहे जेव्हा तुम्ही इनपुटच्या उत्पत्तीभोवती एकदा फिरता.

317
00:21:45,000 --> 00:21:48,778
त्यामुळे बहुपदासह, पुरेशा मोठ्या इनपुटसाठी, अग्रगण्य

318
00:21:48,778 --> 00:21:52,700
पदाव्यतिरिक्त इतर प्रत्येक संज्ञा तुलनेत क्षुल्लक ठरते.

319
00:21:52,700 --> 00:21:56,519
म्हणून कोणत्याही जटिल बहुपदी ज्याचे अग्रस्थान x ते n

320
00:21:56,519 --> 00:22:00,700
आहे त्यामध्ये n ची वळण संख्या पुरेशी मोठ्या लूपभोवती असते.

321
00:22:00,700 --> 00:22:04,421
आणि अशा प्रकारे, आमचे वळण क्रमांक तंत्रज्ञान प्रत्यक्षात

322
00:22:04,421 --> 00:22:07,620
हमी देते की प्रत्येक जटिल बहुपदीमध्ये शून्य असते.

323
00:22:07,620 --> 00:22:13,880
हे इतके महत्त्वाचे सत्य आहे की गणितज्ञ याला बीजगणिताचे मूलभूत प्रमेय म्हणतात.

324
00:22:13,880 --> 00:22:19,293
यासारख्या समीकरणांची संख्यात्मक निराकरणे शोधण्यासाठी अल्गोरिदम असणे अत्यंत व्यावहारिक

325
00:22:19,293 --> 00:22:24,265
आहे, परंतु बीजगणिताचे मूलभूत प्रमेय हे वळण संख्या सैद्धांतिक स्तरावर देखील कसे

326
00:22:24,265 --> 00:22:29,553
उपयुक्त आहेत याचे एक चांगले उदाहरण आहे, जे मोठ्या वर्गाच्या समाधानाच्या अस्तित्वाची

327
00:22:29,553 --> 00:22:34,400
हमी देते. योग्य परिस्थितीसाठी समीकरणे, ज्याचा विचार गणितज्ञांना करायला आवडतो.

328
00:22:34,400 --> 00:22:39,096
मी तुम्हाला फॉलो-अप व्हिडिओमध्ये टोपोलॉजीच्या संदर्भात याचे आणखी काही आश्चर्यकारक

329
00:22:39,096 --> 00:22:44,080
ऍप्लिकेशन्स दाखवतो, ज्यामध्ये जुन्या 3ब्लू1ब्राउन व्हिडिओमधून चूक सुधारणे समाविष्ट आहे.

330
00:22:44,080 --> 00:22:45,080
कोणता?

331
00:22:45,080 --> 00:22:51,640
बरं, या चॅनेलवरील सर्व व्हिडिओ, सर्व काही पहा आणि प्रथम त्रुटी शोधू शकता का ते पहा.

332
00:22:51,640 --> 00:22:55,960
या व्हिडिओचे प्राथमिक लेखक नवीन 3ब्लू1ब्राउन टीम सदस्यांपैकी एक आहेत, श्रीधर रमेश.

