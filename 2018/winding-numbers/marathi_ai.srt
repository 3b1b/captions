1
00:00:00,000 --> 00:00:06,720
येथे दोन गोष्टी आहेत, मुख्य विषय आणि मेटा विषय.

2
00:00:06,720 --> 00:00:10,440
मुख्य विषय द्विमितीय समीकरणे, दोन अज्ञात वास्तविक संख्या असलेल्या

3
00:00:10,440 --> 00:00:14,900
गोष्टी किंवा एक जटिल संख्या असलेल्या एकल अज्ञात

4
00:00:14,900 --> 00:00:17,420
असलेल्या गोष्टी सोडवण्यासाठी हे खरोखर व्यवस्थित अल्गोरिदम असेल.

5
00:00:17,420 --> 00:00:21,840
उदाहरणार्थ, जर तुम्हाला बहुपदीची जटिल मुळे शोधायची असतील, किंवा

6
00:00:21,840 --> 00:00:25,960
कदाचित रीमन झेटा फंक्शनच्या दशलक्ष डॉलर्सपैकी काही शून्य

7
00:00:25,960 --> 00:00:26,960
शोधायचे असतील, तर हे अल्गोरिदम तुमच्यासाठी ते करेल.

8
00:00:27,000 --> 00:00:30,520
आणि ही पद्धत खूप सुंदर आहे, कारण बरेच रंग गुंतलेले आहेत.

9
00:00:30,520 --> 00:00:34,960
आणि सर्वात महत्त्वाचे म्हणजे, मूळ अंतर्निहित कल्पना ही समीकरणे

10
00:00:34,960 --> 00:00:39,600
सोडवण्यासाठी या अल्गोरिदमच्या पलीकडे सर्व प्रकारच्या गणितांना लागू होते,

11
00:00:39,600 --> 00:00:40,600
ज्यामध्ये थोडीशी टोपोलॉजी समाविष्ट आहे, ज्याबद्दल मी नंतर बोलेन.

12
00:00:40,600 --> 00:00:44,880
पण याला तुमचा 20 मिनिटे किंवा त्याहून अधिक वेळ खरोखरच उपयुक्त

13
00:00:44,880 --> 00:00:50,000
ठरतो तो म्हणजे हा धडा संपूर्ण गणितात अधिक सामान्यपणे उपयुक्त ठरतो,

14
00:00:50,000 --> 00:00:52,120
जो एकमेकांशी छान रचना करणाऱ्या रचना परिभाषित करण्याचा प्रयत्न करतो.

15
00:00:52,120 --> 00:00:55,460
कथा जसजशी पुढे जाईल तसतसे मला त्यात काय म्हणायचे आहे ते तुम्हाला दिसेल.

16
00:00:55,460 --> 00:00:59,460
2d इनपुट आणि 2d आउटपुट असलेल्या फंक्शन्ससह केस प्रवृत्त करण्यासाठी, चला सोप्या पद्धतीने

17
00:00:59,460 --> 00:01:05,100
सुरुवात करूया, ज्या फंक्शन्स रिअल नंबर घेतात आणि रिअल नंबर बाहेर टाकतात.

18
00:01:05,100 --> 00:01:10,060
जर तुम्हाला हे जाणून घ्यायचे असेल की x चे फंक्शन f हे x च्या इतर फंक्शन g च्या

19
00:01:10,060 --> 00:01:14,260
बरोबरीचे असते, तर तुम्ही हे त्या फंक्शन्सचे आलेख कधी एकमेकांना छेदतात हे शोधत आहात असे वाटेल, बरोबर?

20
00:01:14,260 --> 00:01:19,340
म्हणजे, ते तुम्हाला एक इनपुट देते जेथे दोन्ही फंक्शन्सचे आउटपुट समान असते.

21
00:01:19,340 --> 00:01:24,520
अगदी साधे उदाहरण घ्यायचे असेल तर कल्पना करा की x चा f x

22
00:01:24,520 --> 00:01:25,520
चा वर्ग आहे आणि x चा g हे स्थिर फलन 2 आहे.

23
00:01:25,520 --> 00:01:29,620
दुसऱ्या शब्दांत, तुम्हाला २ चे वर्गमूळ शोधायचे आहे.

24
00:01:29,620 --> 00:01:33,620
जरी तुम्हाला वर्गमूळ शोधण्याबद्दल जवळजवळ काहीही माहित नसले तरीही, तुम्ही कदाचित पाहू शकता

25
00:01:33,620 --> 00:01:39,260
की 1 स्क्वेअर 2 पेक्षा कमी आहे आणि 2 स्क्वेअर 2 पेक्षा

26
00:01:39,260 --> 00:01:42,640
मोठा आहे, त्यामुळे तुम्हाला समजेल, अहो, त्या दोन मूल्यांमध्ये काहीतरी उपाय असेल.

27
00:01:42,640 --> 00:01:46,740
आणि मग तुम्हाला ते आणखी कमी करायचे असल्यास, कदाचित तुम्ही अर्ध्या बिंदूचे

28
00:01:46,740 --> 00:01:47,740
वर्गीकरण करण्याचा प्रयत्न करा, 1. ५.

29
00:01:47,740 --> 00:01:53,060
हे 2 असल्याचे बाहेर येते. 25, थोडे जास्त, त्यामुळे तुम्ही 1 आणि 1

30
00:01:53,060 --> 00:01:54,940
मधील प्रदेशावर लक्ष केंद्रित कराल. ५.

31
00:01:54,940 --> 00:01:58,560
आणि असेच, तुम्ही कदाचित हे कसे चालू राहील ते पाहू शकता, तुम्ही

32
00:01:58,560 --> 00:02:05,540
मध्यबिंदूवर संगणन करत राहाल आणि नंतर तुमची शोध जागा अर्धी कापून टाकाल.

33
00:02:05,540 --> 00:02:08,340
यावर विचार करण्याचा आणखी एक मार्ग, जो एकदा उच्च

34
00:02:08,340 --> 00:02:13,560
परिमाणांवर पोहोचल्यानंतर आपल्यासाठी सोपे करेल, त्याऐवजी या दोन कार्यांमधील

35
00:02:13,560 --> 00:02:16,300
फरक शून्य असताना समतुल्य प्रश्नावर लक्ष केंद्रित करणे.

36
00:02:16,380 --> 00:02:20,700
त्या अटींमध्ये, आम्हाला इनपुटचा एक प्रदेश सापडला जिथे तो फरक

37
00:02:20,700 --> 00:02:24,020
एका टोकाला नकारात्मक होता आणि तो दुसऱ्या टोकाला सकारात्मक होता.

38
00:02:24,020 --> 00:02:28,660
आम्ही त्याचे दोन भाग केले आणि अर्ध्या भागाकडे आमचे लक्ष वेधले

39
00:02:28,660 --> 00:02:31,600
ते एक होते जेथे सर्वात बाहेरील बिंदूंमध्ये भिन्न चिन्हे होती.

40
00:02:31,600 --> 00:02:36,020
याप्रमाणे, आम्ही कायमचे चालू ठेवू शकलो, सीमेवर वेगवेगळ्या चिन्हे असलेला प्रत्येक

41
00:02:36,020 --> 00:02:41,320
प्रदेश घेऊन, त्याच्या अर्ध्या भागांमध्ये एक लहान असा प्रदेश शोधून, शेवटी

42
00:02:41,320 --> 00:02:46,260
आपल्याला एका बिंदूवर संकुचित व्हायचे आहे जे अचूक शून्य होणार आहे.

43
00:02:46,260 --> 00:02:50,480
थोडक्यात, समीकरण सोडवणे हे नेहमी एखादे विशिष्ट कार्य शून्य असते तेव्हा शोधून काढले

44
00:02:50,480 --> 00:02:55,780
जाऊ शकते आणि तसे करण्यासाठी, आमच्याकडे हे हिरिस्टिक आहे, जर f एका बिंदूवर

45
00:02:55,780 --> 00:03:00,420
सकारात्मक आणि दुसर्‍या बिंदूवर ऋण असेल, तर आपण त्या दरम्यान कुठेतरी शोधू शकता

46
00:03:00,420 --> 00:03:03,980
ते शून्य आहे, कमीतकमी अचानक उडी न घेता सर्वकाही सहजतेने बदलले तर.

47
00:03:03,980 --> 00:03:08,060
मी तुम्हाला दाखवू इच्छित असलेली आश्चर्यकारक गोष्ट म्हणजे तुम्ही

48
00:03:08,060 --> 00:03:13,220
अशा प्रकारच्या विचारसरणीला द्विमितीय समीकरणांमध्ये, फंक्शन्समधील समीकरणांमध्ये विस्तारित करू

49
00:03:13,220 --> 00:03:14,940
शकता ज्यांचे इनपुट आणि आउटपुट दोन्ही द्विमितीय आहेत.

50
00:03:14,940 --> 00:03:19,540
उदाहरणार्थ, जटिल संख्या 2D आहेत आणि आम्ही विकसित करत

51
00:03:19,540 --> 00:03:21,780
असलेले हे साधन जटिल समीकरणांवर उपाय शोधण्यासाठी योग्य आहे.

52
00:03:21,780 --> 00:03:25,700
आता, आपण या 2D फंक्शन्सबद्दल खूप बोलणार आहोत, चला एक संक्षिप्त बाजूची

53
00:03:25,700 --> 00:03:29,380
पायरी घेऊ आणि आपण हे कसे स्पष्ट करू याचा विचार करूया.

54
00:03:29,380 --> 00:03:34,700
2D इनपुट आणि 2D आउटपुटसह फंक्शनचा आलेख तयार करण्यासाठी चार आयामांची

55
00:03:34,700 --> 00:03:39,220
आवश्यकता असेल आणि ते आमच्या 2D स्क्रीनवर आमच्या 3D जगात इतके

56
00:03:39,220 --> 00:03:41,140
चांगले काम करणार नाही, परंतु आमच्याकडे अजूनही काही चांगले पर्याय आहेत.

57
00:03:41,140 --> 00:03:46,020
एक म्हणजे फक्त इनपुट स्पेस आणि आउटपुट स्पेस दोन्ही शेजारी शेजारी पाहणे.

58
00:03:46,020 --> 00:03:51,540
इनपुट स्पेसमधील प्रत्येक बिंदू आऊटपुट स्पेसमधील एका विशिष्ट बिंदूकडे सरकतो आणि त्या इनपुट

59
00:03:51,540 --> 00:03:57,060
बिंदूभोवती फिरणे आउटपुट स्पेसमधील विशिष्ट हालचालींशी कसे संबंधित आहे हे मी दाखवू शकतो.

60
00:03:57,060 --> 00:04:01,460
आम्ही विचारात घेतलेली सर्व फंक्शन्स सतत असतील, या

61
00:04:01,460 --> 00:04:05,820
अर्थाने की इनपुटमधील छोटे छोटे बदल केवळ आउटपुटमधील

62
00:04:05,820 --> 00:04:07,460
छोट्या छोट्या बदलांशी संबंधित आहेत, अचानक उडी नाहीत.

63
00:04:07,460 --> 00:04:12,020
आमच्याकडे दुसरा पर्याय आहे की आउटपुट स्पेसच्या उत्पत्तीपासून त्या आउटपुट बिंदूपर्यंत

64
00:04:12,020 --> 00:04:17,380
बाणाची कल्पना करणे आणि त्या बाणाची सूक्ष्म आवृत्ती इनपुट बिंदूशी जोडणे.

65
00:04:17,380 --> 00:04:22,340
हे आपल्याला एका दृष्टीक्षेपात, दिलेला इनपुट पॉइंट कोठे जातो किंवा पूर्ण वेक्टर

66
00:04:22,340 --> 00:04:27,580
फील्ड काढून अनेक भिन्न इनपुट पॉइंट कोठे जातात याची कल्पना देऊ शकते.

67
00:04:27,580 --> 00:04:30,740
आणि दुर्दैवाने जेव्हा तुम्ही हे बर्‍याच बिंदूंवर करता तेव्हा ते खूपच गोंधळात

68
00:04:30,740 --> 00:04:34,340
पडू शकते, म्हणून मी येथे सर्व बाण समान आकाराचे बनवतो, आणि याचा

69
00:04:34,340 --> 00:04:37,900
अर्थ काय आहे की प्रत्येक आउटपुट बिंदूची दिशा आपल्याला समजू शकते.

70
00:04:37,900 --> 00:04:41,660
परंतु द्विमितीय फंक्शन्स स्पष्ट करण्याचा कदाचित सर्वात सुंदर मार्ग आणि हा व्हिडिओ

71
00:04:41,660 --> 00:04:47,400
आम्ही सर्वात जास्त वापरणार आहोत, त्या आउटपुट स्पेसमधील प्रत्येक बिंदूला रंगाने जोडणे.

72
00:04:47,400 --> 00:04:52,180
येथे आम्ही रंगछटांचा वापर केला आहे, जिथे रंग इंद्रधनुष्य किंवा

73
00:04:52,180 --> 00:04:57,020
कलर व्हीलच्या बाजूने पडतो, मूळपासून दूर असलेल्या दिशेशी जुळण्यासाठी, आणि

74
00:04:57,020 --> 00:05:00,060
आम्ही मूळपासून अंतराशी जुळण्यासाठी अंधार किंवा चमक वापरत आहोत.

75
00:05:00,060 --> 00:05:05,720
उदाहरणार्थ, आउटपुटच्या या अॅरेवर लक्ष केंद्रित करताना, हे सर्व बिंदू लाल आहेत, परंतु

76
00:05:05,720 --> 00:05:10,340
मूळच्या जवळ असलेले थोडे गडद आहेत आणि दूर असलेले थोडेसे उजळ आहेत.

77
00:05:10,340 --> 00:05:15,360
आणि आउटपुटच्या या अॅरेवर फोकस केल्यास, सर्व बिंदू हिरवे आहेत

78
00:05:15,360 --> 00:05:18,980
आणि पुन्हा, मूळच्या जवळ म्हणजे गडद, दूर म्हणजे फिकट.

79
00:05:18,980 --> 00:05:24,300
आणि असेच, आम्ही येथे करत आहोत प्रत्येक दिशेला एक

80
00:05:24,300 --> 00:05:25,300
विशिष्ट रंग नियुक्त करणे, हे सर्व सतत बदलत आहे.

81
00:05:25,300 --> 00:05:29,100
तुमच्या लक्षात येईल की येथे अंधार आणि ब्राइटनेसमधील फरक

82
00:05:29,140 --> 00:05:33,940
खूपच सूक्ष्म आहेत, परंतु या व्हिडिओसाठी, आम्हाला फक्त

83
00:05:33,940 --> 00:05:35,300
आउटपुटची दिशा आहे, मोठेपणा, रंगछटांची नाही, ब्राइटनेसची नाही.

84
00:05:35,300 --> 00:05:39,160
तुमच्या लक्षात येण्याजोगी ब्राइटनेसची एक महत्त्वाची गोष्ट म्हणजे उगमस्थानाजवळ,

85
00:05:39,160 --> 00:05:44,440
ज्याला कोणतीही विशिष्ट दिशा नाही, सर्व रंग काळे होतात.

86
00:05:44,440 --> 00:05:48,820
म्हणून फंक्शन्सबद्दल विचार करण्यासाठी, आता आम्ही प्रत्येक आउटपुटसाठी रंग ठरवले आहे,

87
00:05:48,820 --> 00:05:54,020
आम्ही आउटपुट स्पेसमध्ये ज्या बिंदूवर उतरतो त्या बिंदूच्या रंगावर आधारित इनपुट

88
00:05:54,020 --> 00:05:57,860
स्पेसमधील प्रत्येक बिंदूला रंग देऊन 2D फंक्शन्सची कल्पना करू शकतो.

89
00:05:57,860 --> 00:06:02,340
मला त्या इनपुट स्पेसमधून अनेक भिन्न बिंदू आउटपुट स्पेसमध्ये त्यांच्या संबंधित आउटपुटवर फिरतात,

90
00:06:02,340 --> 00:06:06,340
नंतर ते जिथे उतरतात त्या बिंदूच्या रंगाच्या आधारे पेंट केले जातात आणि नंतर

91
00:06:06,340 --> 00:06:11,820
इनपुट स्पेसमध्ये ते जिथून आले होते त्या ठिकाणी परत येण्याची कल्पना करायला आवडते.

92
00:06:11,820 --> 00:06:15,700
इनपुट स्पेसमधील प्रत्येक बिंदूसाठी असे केल्याने, फंक्शन प्रत्येक बिंदू

93
00:06:15,700 --> 00:06:19,140
कुठे घेते त्या इनपुट स्पेसकडे पाहून तुम्हाला समजू शकेल.

94
00:06:19,140 --> 00:06:23,880
उदाहरणार्थ, डावीकडील गुलाबी बिंदूंची ही पट्टी आपल्याला सांगते की ते सर्व

95
00:06:23,920 --> 00:06:30,000
बिंदू कुठेतरी गुलाबी दिशेने, आउटपुट स्पेसच्या खालच्या डावीकडे मॅप केले जातात.

96
00:06:30,000 --> 00:06:34,120
तसेच ते तीन बिंदू जे काळे आहेत त्यांच्या

97
00:06:34,120 --> 00:06:37,120
सभोवताली अनेक रंग आहेत ते शून्यावर जातात.

98
00:06:37,120 --> 00:06:46,120
ठीक आहे, 1D केस प्रमाणेच, 2D फंक्शन्सची समीकरणे सोडवणे नेहमी एखादे

99
00:06:46,120 --> 00:06:49,780
विशिष्ट फंक्शन शून्य असते तेव्हा विचारून पुन्हा तयार केले जाऊ शकते.

100
00:06:49,780 --> 00:06:54,820
त्यामुळे आत्ताच आमचे आव्हान आहे, एक अल्गोरिदम तयार करा ज्याने दिलेल्या

101
00:06:54,820 --> 00:07:00,900
2D फंक्शनचे कोणते इनपुट पॉइंट शून्यावर जातात हे शोधून काढा.

102
00:07:00,900 --> 00:07:04,560
ते काळे ठिपके पाहून तुम्ही असा कलर मॅप पाहत असाल

103
00:07:04,560 --> 00:07:08,700
तर फंक्शनचे शून्य कुठे आहेत हे तुम्हाला आधीच माहीत आहे.

104
00:07:08,700 --> 00:07:11,460
तर ते मोजते का?

105
00:07:11,460 --> 00:07:15,100
लक्षात ठेवा की यासारखे आकृती तयार करण्यासाठी, आमच्याकडे कॉम्प्युटरने विमानातील सर्व

106
00:07:15,100 --> 00:07:21,020
पिक्सेलवर फंक्शनची गणना केली आहे, परंतु आमचे ध्येय अधिक कार्यक्षम अल्गोरिदम

107
00:07:21,020 --> 00:07:25,380
शोधणे आहे ज्यासाठी शक्य तितक्या कमी बिंदूंवर फंक्शनची गणना करणे आवश्यक

108
00:07:25,380 --> 00:07:29,600
आहे. , फक्त रंगांचे मर्यादित दृश्य आहे, म्हणून बोलायचे आहे.

109
00:07:29,600 --> 00:07:33,940
आणि अधिक सैद्धांतिक दृष्टिकोनातून, दिलेल्या प्रदेशात शून्य अस्तित्त्वात आहे की

110
00:07:33,940 --> 00:07:38,300
नाही याची परिस्थिती सांगणारी सामान्य रचना असणे चांगले होईल.

111
00:07:38,300 --> 00:07:43,700
लक्षात ठेवा, एका परिमाणात मुख्य अंतर्दृष्टी अशी होती की जर सतत कार्य एका बिंदूवर

112
00:07:43,700 --> 00:07:48,920
सकारात्मक असेल आणि दुसर्‍या ठिकाणी नकारात्मक असेल तर, ते कुठेतरी शून्य असले पाहिजे.

113
00:07:48,920 --> 00:07:50,960
मग आपण ते दोन आयामांमध्ये कसे वाढवायचे?

114
00:07:50,960 --> 00:07:55,180
आम्हाला चिन्हांबद्दल बोलण्यासाठी काही प्रकारचे अॅनालॉग हवे आहेत.

115
00:07:55,180 --> 00:07:59,140
चिन्हे काय आहेत याचा विचार करण्याचा एक मार्ग म्हणजे दिशानिर्देश.

116
00:07:59,140 --> 00:08:02,620
सकारात्मक म्हणजे तुम्ही संख्या रेषेसह उजवीकडे निर्देशित करत आहात

117
00:08:02,620 --> 00:08:04,240
आणि नकारात्मक म्हणजे तुम्ही डावीकडे निर्देशित करत आहात.

118
00:08:04,240 --> 00:08:08,800
द्विमितीय परिमाणांना देखील दिशा असते, परंतु त्यांच्यासाठी पर्याय अधिक विस्तृत

119
00:08:08,800 --> 00:08:12,780
आहेत, ते शक्यतांच्या संपूर्ण वर्तुळात कुठेही निर्देशित करू शकतात.

120
00:08:12,780 --> 00:08:16,860
तर त्याच प्रकारे आम्ही एका परिमाणात विचारत होतो की दिलेले फंक्शन

121
00:08:16,860 --> 00:08:22,860
एका श्रेणीच्या सीमारेषेवर सकारात्मक किंवा नकारात्मक आहे की नाही, जे

122
00:08:22,860 --> 00:08:28,200
फक्त दोन बिंदू आहे, 2d फंक्शन्ससाठी आम्ही प्रदेशाची सीमा पाहणार आहोत,

123
00:08:28,200 --> 00:08:33,760
जे लूप आहे, आणि त्या सीमेवर फंक्शनच्या आउटपुटची दिशा विचारा.

124
00:08:33,760 --> 00:08:39,220
उदाहरणार्थ, आपण पाहतो की या शून्याभोवती असलेल्या या लूपमध्ये,

125
00:08:39,220 --> 00:08:43,460
आउटपुट प्रत्येक संभाव्य दिशेने, इंद्रधनुष्याचे सर्व रंग, लाल, पिवळा,

126
00:08:43,460 --> 00:08:45,820
हिरवा, निळा, परत लाल, आणि वाटेत सर्व काही.

127
00:08:45,820 --> 00:08:50,640
पण इथे या लूपमध्ये, आत शून्य नसल्यामुळे, आऊटपुट प्रत्येक रंगातून जात नाही,

128
00:08:50,640 --> 00:08:55,420
ते काही केशरी रंगांमधून जाते, परंतु, म्हणा, हिरवा किंवा निळा नाही.

129
00:08:55,420 --> 00:08:59,320
आणि हे आशादायक आहे, गोष्टी एका परिमाणात कसे कार्य करतात असे दिसते.

130
00:08:59,320 --> 00:09:03,540
कदाचित त्याच प्रकारे 1d फंक्शनने 1d प्रदेशाच्या सीमेवर दोन्ही संभाव्य चिन्हे घेतल्यास,

131
00:09:03,540 --> 00:09:09,700
आत कुठेतरी एक शून्य असेल, तर आपण असे गृहित धरू शकतो की

132
00:09:09,700 --> 00:09:15,140
जर 2d फंक्शन सर्व संभाव्य दिशांच्या, सर्व संभाव्य रंगांच्या आउटपुटवर आदळते. 2d

133
00:09:15,140 --> 00:09:20,980
प्रदेशाची सीमा, नंतर त्या प्रदेशाच्या आत कुठेतरी ती शून्यावर जाणे आवश्यक आहे.

134
00:09:20,980 --> 00:09:25,100
तर हा आमचा अंदाज आहे, आणि हे खरे असले पाहिजे का

135
00:09:25,100 --> 00:09:27,660
आणि तसे असल्यास का याचा विचार करण्यासाठी थोडा वेळ घ्या.

136
00:09:27,660 --> 00:09:32,020
जर आपण काही इनपुट पॉईंटभोवती लहान लूपचा विचार करू लागलो, तर आपल्याला माहित आहे की

137
00:09:32,020 --> 00:09:36,660
सर्व काही सतत चालू असल्याने, आपले फंक्शन त्यास संबंधित आउटपुटजवळील काही लहान लूपमध्ये घेऊन जाते.

138
00:09:36,660 --> 00:09:41,140
पण पहा, बहुतेक लहान लूपसाठी, आउटपुट रंगात बदलते.

139
00:09:41,140 --> 00:09:46,300
जर तुम्ही शून्याव्यतिरिक्त कोणताही आउटपुट पॉइंट निवडला आणि त्याच्या जवळ एक पुरेसा

140
00:09:46,300 --> 00:09:49,860
घट्ट लूप काढला, तर लूपचे रंग सर्व त्या बिंदूच्या रंगासारखेच असतील.

141
00:09:49,860 --> 00:09:55,980
येथे एक घट्ट लूप सर्व निळसर आहे, येथे एक घट्ट लूप

142
00:09:55,980 --> 00:09:58,440
सर्व पिवळसर आहे, तुम्हाला नक्कीच इंद्रधनुष्याचा प्रत्येक रंग मिळणार नाही.

143
00:09:58,440 --> 00:10:03,580
सर्व रंग मिळत असतानाही तुम्ही त्याच्याभोवती लूप घट्ट करू

144
00:10:03,580 --> 00:10:07,120
शकता असा एकमेव मुद्दा म्हणजे रंगहीन मूळ, शून्य स्वतः.

145
00:10:07,120 --> 00:10:11,680
तर हे खरंच आहे की जर तुमच्याकडे इंद्रधनुष्याच्या प्रत्येक रंगातून लूप

146
00:10:11,680 --> 00:10:15,960
जात असतील, घट्ट होत असतील, घट्ट होत असतील, एखाद्या बिंदूवर संकुचित

147
00:10:15,960 --> 00:10:17,360
होत असतील, तर तो बिंदू खरं तर शून्य असला पाहिजे.

148
00:10:17,360 --> 00:10:22,360
आणि म्हणून आपल्या एक-आयामी समीकरण सॉल्व्हरप्रमाणेच 2d समीकरण सॉल्व्हर सेट करूया.

149
00:10:22,360 --> 00:10:27,200
जेव्हा आपल्याला एक मोठा प्रदेश सापडतो ज्याची सीमा प्रत्येक रंगातून जाते, तेव्हा

150
00:10:27,200 --> 00:10:30,640
त्याचे दोन भाग करा आणि नंतर प्रत्येक अर्ध्या भागाच्या सीमेवरील रंग पहा.

151
00:10:30,640 --> 00:10:34,920
येथे दर्शविलेल्या उदाहरणामध्ये, डाव्या अर्ध्या भागाची सीमा सर्व रंगांमधून जात

152
00:10:34,920 --> 00:10:39,080
नाही, उदाहरणार्थ, केशरी पिवळ्या दिशांना मॅप करणारे कोणतेही बिंदू नाहीत.

153
00:10:39,080 --> 00:10:43,480
म्हणून आम्ही यापुढे शोधू इच्छित नाही असे सांगण्याचा एक मार्ग म्हणून मी हे क्षेत्र धूसर करेन.

154
00:10:43,480 --> 00:10:47,840
उजवा अर्धा भाग सर्व रंगांमधून जातो, हिरव्या दिशेने बराच वेळ

155
00:10:47,840 --> 00:10:51,120
घालवतो, नंतर पिवळ्या नारंगी लाल, तसेच निळ्या जांभळ्या गुलाबीमधून जातो.

156
00:10:51,120 --> 00:10:56,060
आता लक्षात ठेवा, याचा अर्थ असा आहे की या

157
00:10:56,060 --> 00:10:57,800
सीमारेषेचे बिंदू सर्व संभाव्य दिशानिर्देशांच्या आउटपुटवर मॅप केले जातात.

158
00:10:57,800 --> 00:11:02,900
म्हणून आम्ही ते आणखी एक्सप्लोर करू, पुन्हा उपविभाजन करून आणि प्रत्येक प्रदेशाची सीमा तपासू.

159
00:11:02,900 --> 00:11:07,000
शीर्षाची सीमा सर्व हिरवी आहे, म्हणून आम्ही तेथे शोधणे थांबवू.

160
00:11:07,000 --> 00:11:10,500
पण तळाचा भाग उपविभागास पात्र होण्याइतका रंगीबेरंगी आहे.

161
00:11:10,500 --> 00:11:12,420
आणि असेच चालू ठेवा.

162
00:11:12,420 --> 00:11:16,860
कोणत्या उपप्रदेशाला सर्व संभाव्य रंगांची सीमा आहे ते तपासा, म्हणजे

163
00:11:16,860 --> 00:11:21,280
त्या सीमारेषेचे बिंदू सर्व संभाव्य दिशांना मॅप केले जातात आणि

164
00:11:21,280 --> 00:11:25,400
त्या प्रदेशांना आम्ही एक-आयामी केससाठी केले तसे अर्धे कापत राहा,

165
00:11:25,400 --> 00:11:29,320
शेवटी आम्हाला कार्याच्या शून्यावर नेले. अरे, एक सेकंद थांबा.

166
00:11:29,320 --> 00:11:30,320
येथे काय घडले?

167
00:11:30,320 --> 00:11:34,520
तळाशी उजवीकडे असलेल्या या शेवटच्या उपविभागांपैकी एकही सर्व रंगांमधून गेला

168
00:11:34,520 --> 00:11:38,160
नाही, म्हणून आमचे अल्गोरिदम थांबले कारण ते यापैकी एकही

169
00:11:38,160 --> 00:11:41,160
शोधू इच्छित नव्हते, परंतु त्यास शून्य देखील सापडले नाही.

170
00:11:41,160 --> 00:11:43,720
ठीक आहे, स्पष्टपणे येथे काहीतरी चुकीचे आहे.

171
00:11:43,720 --> 00:11:46,680
आणि ते ठीक आहे, चुकीचे असणे हा गणिताचा नियमित भाग आहे.

172
00:11:46,680 --> 00:11:51,400
जर आपण मागे वळून पाहिलं तर, आमच्याकडे ही गृहितक होती आणि ती

173
00:11:51,400 --> 00:11:53,680
आम्हाला या प्रस्तावित अल्गोरिदमकडे घेऊन गेली, त्यामुळे आमची कुठेतरी चूक झाली.

174
00:11:53,680 --> 00:11:56,860
आणि गणितात चांगले असणे म्हणजे प्रथमच बरोबर असण्याबद्दल नाही, ते

175
00:11:56,860 --> 00:12:00,920
काळजीपूर्वक मागे वळून पाहण्याची आणि चुका समजून घेण्याची आणि

176
00:12:00,920 --> 00:12:02,520
त्या कशा दुरुस्त करायच्या हे समजून घेण्याची लवचिकता आहे.

177
00:12:02,520 --> 00:12:06,760
आता इथे अडचण अशी आहे की आमच्याकडे एक प्रदेश होता ज्याची सीमा प्रत्येक रंगातून गेली

178
00:12:06,760 --> 00:12:11,260
होती, परंतु जेव्हा आम्ही ती मध्यभागी विभाजित केली तेव्हा कोणत्याही उपक्षेत्राची सीमा प्रत्येक रंगातून

179
00:12:11,260 --> 00:12:14,880
जात नव्हती, आमच्याकडे पुढे कुठे शोधायचे याचे पर्याय नव्हते आणि त्यामुळे शून्य तोडले. शोधक

180
00:12:15,280 --> 00:12:18,120
आता एका परिमाणात, अशा प्रकारची गोष्ट कधीच घडली नाही.

181
00:12:18,120 --> 00:12:22,960
कोणत्याही वेळी तुमच्याकडे मध्यांतर असेल ज्यांच्या शेवटच्या बिंदूंना भिन्न चिन्हे असतील,

182
00:12:22,960 --> 00:12:28,200
तुम्ही ते विभाजित केल्यास, तुम्हाला माहित आहे की तुम्हाला काही उप-अंतरबिंदू

183
00:12:28,200 --> 00:12:29,200
मिळण्याची हमी आहे ज्यांच्या शेवटच्या बिंदूंना देखील भिन्न चिन्हे आहेत.

184
00:12:29,200 --> 00:12:34,120
किंवा दुसर्‍या मार्गाने सांगा, कोणत्याही वेळी तुमच्याकडे दोन अंतराल असतील ज्यांचे शेवटचे

185
00:12:34,120 --> 00:12:38,280
बिंदू चिन्हे बदलत नाहीत, जर तुम्ही ते एकत्र केले तर तुम्हाला

186
00:12:38,280 --> 00:12:39,280
एक मोठा मध्यांतर मिळेल ज्याचे शेवटचे बिंदू देखील चिन्ह बदलत नाहीत.

187
00:12:39,280 --> 00:12:43,140
परंतु दोन मितींमध्ये, दोन प्रदेश शोधणे शक्य आहे

188
00:12:43,140 --> 00:12:48,040
ज्यांच्या सीमा प्रत्येक रंगातून जात नाहीत, परंतु ज्यांच्या

189
00:12:48,040 --> 00:12:49,940
सीमा प्रत्येक रंगातून जात नसलेल्या प्रदेशाला मिळू शकतात.

190
00:12:49,940 --> 00:12:53,740
आणि अशा प्रकारे, आमचे प्रस्तावित शून्य-शोध अल्गोरिदम तोडले.

191
00:12:53,740 --> 00:12:58,680
खरं तर, जर तुम्ही त्याबद्दल विचार केला तर, तुम्हाला एक मोठा लूप

192
00:12:58,680 --> 00:13:03,120
सापडेल ज्याची सीमा त्याच्या आत शून्य न होता प्रत्येक संभाव्य रंगातून जाते.

193
00:13:03,120 --> 00:13:07,100
आता याचा अर्थ असा नाही की लहान लूपबद्दलच्या आमच्या दाव्यांमध्ये आम्ही चुकीचे होतो जेव्हा आम्ही

194
00:13:07,100 --> 00:13:13,040
असे म्हटले की प्रत्येक रंगातून जाणारा कायमचा संकुचित लूप शून्यावर संकुचित करणे आवश्यक आहे.

195
00:13:13,040 --> 00:13:17,120
पण आमच्यासाठी गोंधळाची गोष्ट अशी आहे की हे-माझ्या-सीमेवर-प्रत्येक-रंग-किंवा-नसते-प्रत्येक-रंगाने-किंवा-नसून-जाते-जेव्हा तुम्ही प्रदेश एकत्र

196
00:13:17,120 --> 00:13:23,040
करता तेव्हा छान, अंदाज लावता येण्याजोग्या पद्धतीने एकत्र होत नाही.

197
00:13:23,040 --> 00:13:28,100
परंतु काळजी करू नका, असे दिसून आले की आम्ही हे थोडेसे सुधारित करून

198
00:13:28,100 --> 00:13:38,560
अधिक अत्याधुनिक मालमत्तेमध्ये बदलू शकतो जे आम्हाला हवे ते देण्यासाठी एकत्रित करते.

199
00:13:38,560 --> 00:13:42,540
कल्पना अशी आहे की आपल्याला लूपच्या बाजूने कधीतरी रंग सापडतो

200
00:13:42,540 --> 00:13:47,100
की नाही हे विचारण्याऐवजी, आपण त्या लूपभोवती फिरत असताना

201
00:13:47,100 --> 00:13:48,100
हे रंग कसे बदलतात याचा अधिक काळजीपूर्वक मागोवा ठेवूया.

202
00:13:48,100 --> 00:13:50,060
मला काय म्हणायचे आहे ते मी उदाहरणासह दाखवतो.

203
00:13:50,060 --> 00:13:54,120
आम्हाला ट्रॅक ठेवण्यात मदत करण्यासाठी मी येथे कोपऱ्यात थोडे कलर व्हील ठेवीन.

204
00:13:54,120 --> 00:13:58,540
जेव्हा इनपुटच्या मार्गावरील रंग इंद्रधनुष्यातून विशिष्ट दिशेने लाल ते पिवळे,

205
00:13:58,540 --> 00:14:04,380
पिवळे ते हिरवे, हिरवे ते निळे किंवा निळे ते

206
00:14:04,380 --> 00:14:05,720
लाल अशा दिशेने जातात तेव्हा आउटपुट घड्याळाच्या दिशेने फिरते.

207
00:14:05,720 --> 00:14:09,980
पण दुसरीकडे, जर रंग इंद्रधनुष्यातून दुसऱ्या मार्गाने, निळ्या ते हिरव्या, हिरव्या ते पिवळे, पिवळे

208
00:14:09,980 --> 00:14:17,160
ते लाल किंवा लाल ते निळे, तर आउटपुट घड्याळाच्या उलट दिशेने फिरत आहे.

209
00:14:17,160 --> 00:14:22,940
त्यामुळे येथे या छोट्या वाटेवरून चालताना, रंग घड्याळाच्या काट्याच्या पाचव्या

210
00:14:22,940 --> 00:14:28,340
दिशेने कलर व्हीलमधून वारे वाहतात आणि या वाटेवरून चालताना, रंग

211
00:14:28,340 --> 00:14:30,620
घड्याळाच्या दिशेने आणखी एक पाचवा वारा कलर व्हीलमधून वळवतात.

212
00:14:30,620 --> 00:14:35,400
अर्थात, याचा अर्थ असा की जर तुम्ही दोन्ही मार्गांवरून एकामागून एक जात

213
00:14:35,400 --> 00:14:39,380
असाल, तर रंग घड्याळाच्या काट्याच्या दिशेने पूर्ण वळणाच्या दोन-पंचमांश भागावर फिरतात.

214
00:14:39,380 --> 00:14:43,740
वळणाची एकूण रक्कम फक्त जोडते, आणि हे महत्त्वाचे ठरणार आहे,

215
00:14:43,740 --> 00:14:47,140
हे असे सरळ संयोजन आहे जे आपल्यासाठी उपयुक्त ठरेल.

216
00:14:47,140 --> 00:14:51,980
जेव्हा मी वळणाचे एकूण प्रमाण सांगतो, तेव्हा मला तुम्ही जुन्या पद्धतीच्या ओडोमीटरची कल्पना करावी असे वाटते जे बाण

217
00:14:51,980 --> 00:14:58,700
घड्याळाच्या काट्याच्या दिशेने फिरत असताना पुढे टिकून राहते, परंतु बाण घड्याळाच्या उलट दिशेने फिरतो तेव्हा मागे जातो.

218
00:14:58,700 --> 00:15:03,020
त्यामुळे घड्याळाच्या उलट दिशेने वळण घड्याळाच्या उलट दिशेने वळण घड्याळाच्या दिशेने वळण म्हणून गणले जाते.

219
00:15:03,020 --> 00:15:07,460
आउटपुट खूप वळू शकतात, परंतु त्यातील काही

220
00:15:07,460 --> 00:15:08,940
वळण विरुद्ध दिशेने असल्यास ते रद्द होते.

221
00:15:08,940 --> 00:15:13,220
उदाहरणार्थ, जर तुम्ही या वाटेने पुढे गेलात, आणि नंतर त्याच वाटेने

222
00:15:13,220 --> 00:15:18,100
मागे सरकत असाल, तर वळणाचे एकूण प्रमाण शून्य होते, मागची

223
00:15:18,100 --> 00:15:23,440
हालचाल अक्षरशः पूर्वी पाहिलेल्या रंगांद्वारे रिवाइंड होते, मागील सर्व वळण उलटून

224
00:15:23,440 --> 00:15:26,300
जाते आणि परत येते. ओडोमीटर जिथून सुरू झाला तिकडे परत.

225
00:15:26,300 --> 00:15:30,480
आमच्या हेतूंसाठी, आम्ही लूपच्या बाजूने वळण पाहण्याकडे सर्वात जास्त काळजी घेऊ.

226
00:15:30,480 --> 00:15:34,280
उदाहरणार्थ, आपण या संपूर्ण लूपभोवती घड्याळाच्या दिशेने फिरतो असे समजा.

227
00:15:34,280 --> 00:15:39,680
एकूण तीन पूर्ण घड्याळाच्या दिशेने वळणाच्या आसपास वाऱ्यावर येणारे आऊटपुट, रंग

228
00:15:39,680 --> 00:15:47,120
इंद्रधनुष्यातून, क्रमाने, लाल ते पुन्हा लाल, आणि नंतर पुन्हा आणि पुन्हा.

229
00:15:47,120 --> 00:15:52,260
गणितज्ञ वापरत असलेल्या शब्दजालांमध्ये, आम्ही म्हणतो की

230
00:15:52,260 --> 00:15:54,100
या लूपसह, एकूण वळण संख्या 3 आहे.

231
00:15:54,100 --> 00:15:58,440
इतर लूपसाठी, ती इतर कोणतीही पूर्ण संख्या असू शकते, इनपुट एकाच लूपभोवती फिरत

232
00:15:58,440 --> 00:16:03,680
असताना आउटपुट अनेक वेळा फिरत असल्यास कदाचित मोठी संख्या असू शकते, किंवा

233
00:16:03,720 --> 00:16:07,060
आउटपुट फक्त एक किंवा दोनदा फिरत असल्यास ही संख्या लहान असू शकते.

234
00:16:07,060 --> 00:16:12,260
किंवा ती वळण संख्या ऋण पूर्णांक देखील असू शकते, जर आउटपुट

235
00:16:12,260 --> 00:16:15,200
घड्याळाच्या उलट दिशेने फिरत असताना आपण लूपभोवती घड्याळाच्या दिशेने फिरत असतो.

236
00:16:15,200 --> 00:16:19,720
परंतु कोणत्याही लूपमध्ये, वळणाची ही एकूण रक्कम पूर्ण संख्या असावी.

237
00:16:19,720 --> 00:16:23,980
म्हणजे, तुम्ही जिथे सुरुवात केली होती तिथे परत येईपर्यंत

238
00:16:23,980 --> 00:16:25,840
तुमच्याकडे तेच आउटपुट असेल ज्याने तुम्ही सुरुवात केली होती.

239
00:16:25,840 --> 00:16:31,520
योगायोगाने, जर एखाद्या पाथमध्ये आउटपुट तंतोतंत शून्य असेल असा बिंदू

240
00:16:31,560 --> 00:16:35,640
असेल, तर तांत्रिकदृष्ट्या तुम्ही त्या बाजूने वळण क्रमांक परिभाषित

241
00:16:35,640 --> 00:16:37,600
करू शकत नाही, कारण आउटपुटला कोणतीही विशिष्ट दिशा नसते.

242
00:16:37,600 --> 00:16:41,740
हे आमच्यासाठी समस्या होणार नाही, कारण आमचे संपूर्ण ध्येय शून्य शोधणे आहे,

243
00:16:41,740 --> 00:16:45,200
म्हणून जर हे कधी समोर आले तर आम्ही नशीब लवकर बाहेर पडू.

244
00:16:45,200 --> 00:16:48,720
या वळण संख्यांबद्दल लक्षात येण्यासारखी मुख्य गोष्ट म्हणजे जेव्हा तुम्ही

245
00:16:48,720 --> 00:16:55,040
मोठ्या पाथांमध्ये पथ एकत्र करता तेव्हा ते छान जोडतात.

246
00:16:55,040 --> 00:16:59,440
परंतु जेव्हा आपण क्षेत्र एकत्र करून मोठे प्रदेश बनवतो तेव्हा प्रदेशांच्या सीमारेषेवरील

247
00:16:59,440 --> 00:17:03,120
वळण संख्या चांगल्या प्रकारे जोडल्या जाव्यात हे आपल्याला खरोखर हवे आहे.

248
00:17:03,120 --> 00:17:06,320
मग ती मालमत्ता आपल्याकडे आहे का?

249
00:17:06,320 --> 00:17:09,600
बरं, एक नजर टाका.

250
00:17:09,600 --> 00:17:14,760
डावीकडील या प्रदेशाभोवती घड्याळाच्या दिशेने जाताना वळणाची संख्या

251
00:17:14,760 --> 00:17:17,920
ही या चार मार्गांवरील वळण संख्यांची बेरीज आहे.

252
00:17:17,920 --> 00:17:21,960
आणि उजवीकडील या प्रदेशाभोवती आपण घड्याळाच्या दिशेने जाताना वळण

253
00:17:21,960 --> 00:17:25,480
घेतो तो या चार मार्गांवरील वळण संख्यांची बेरीज आहे.

254
00:17:25,480 --> 00:17:29,840
आणि जेव्हा आपण त्या दोन प्रदेशांना एका मोठ्या प्रदेशात एकत्र करतो, तेव्हा

255
00:17:29,840 --> 00:17:33,760
त्यातील बहुतेक मार्ग मोठ्या प्रदेशाच्या घड्याळाच्या दिशेने असलेल्या सीमेचा भाग बनतात.

256
00:17:33,760 --> 00:17:36,040
आणि नाही त्या दोन मार्गांसाठी म्हणून?

257
00:17:36,040 --> 00:17:40,520
ते पूर्णपणे रद्द करतात, त्यापैकी एक फक्त उलट

258
00:17:40,520 --> 00:17:42,660
आहे, दुसऱ्याचे रिवाइंडिंग जसे आपण आधी पाहिले होते.

259
00:17:42,660 --> 00:17:48,840
म्हणून प्रदेशांच्या सीमारेषेवरील वळण संख्या आपल्याला पाहिजे त्या प्रकारे जोडतात.

260
00:17:48,840 --> 00:17:53,560
हे देखील लक्षात ठेवा की, अशा प्रकारे जोडलेल्या ओरिएंटेड सीमांबद्दलचे हे तर्क

261
00:17:53,560 --> 00:17:57,320
गणितामध्ये बरेच काही आढळतात आणि ते बर्‍याचदा स्टोक्सच्या प्रमेयाच्या नावाखाली जाते.

262
00:17:57,320 --> 00:18:02,880
तुमच्यापैकी ज्यांनी मल्टीव्हेरिएबल कॅल्क्युलसचा अभ्यास केला आहे ते कदाचित त्या संदर्भावरून ओळखू शकतील.

263
00:18:02,880 --> 00:18:08,040
तर आता, शेवटी, हातात संख्या वळवून, आम्ही आमच्या समीकरण सोडवण्याच्या उद्दिष्टांकडे परत येऊ शकतो.

264
00:18:08,040 --> 00:18:12,400
आपण आधी पाहिलेल्या प्रदेशाची समस्या अशी आहे की जरी त्याची सीमा

265
00:18:12,400 --> 00:18:16,620
सर्व संभाव्य रंगांमधून गेली असली तरी वळण संख्या प्रत्यक्षात शून्य होती.

266
00:18:16,620 --> 00:18:22,360
आऊटपुट अर्ध्या वाटेने, पिवळ्या ते लाल रंगाच्या दिशेने घसरले आणि नंतर घड्याळाच्या

267
00:18:22,360 --> 00:18:26,000
उलट दिशेने दुसऱ्या दिशेने जाऊ लागले, नंतर निळ्यातून जाणे आणि दुसऱ्या मार्गाने

268
00:18:26,000 --> 00:18:32,040
लाल मारणे सुरू ठेवले, सर्व अशा प्रकारे की एकूण वळण शून्य झाले.

269
00:18:32,040 --> 00:18:36,000
परंतु जर तुम्हाला असा लूप सापडला जो केवळ प्रत्येक रंगालाच मारत नाही, तर त्यात

270
00:18:36,000 --> 00:18:41,200
शून्य नसलेल्या वळण क्रमांकाची मजबूत स्थिती आहे, तर तुम्ही जर ते अर्ध्या भागामध्ये

271
00:18:41,200 --> 00:18:46,400
विभाजित केले असेल, तर तुम्हाला खात्री आहे की त्या अर्ध्यापैकी किमान एक भाग असेल.

272
00:18:46,400 --> 00:18:48,600
नॉन-झिरो वाइंडिंग नंबर देखील, कारण गोष्टी आपल्याला पाहिजे त्या मार्गाने छान जोडल्या जातात.

273
00:18:48,600 --> 00:18:54,280
अशाप्रकारे, तुम्ही पुढे जात राहू शकता, एका बिंदूवर आणखी आणि पुढे जाऊ शकता.

274
00:18:54,280 --> 00:18:58,440
आणि जसे तुम्ही एका बिंदूवर संकुचित कराल, तेव्हा तुम्ही असे लहान लूपसह कराल ज्यामध्ये शून्य

275
00:18:58,440 --> 00:19:02,840
नसलेल्या वळण संख्या आहेत, ज्याचा अर्थ असा होतो की ते सर्व संभाव्य रंगांमधून जातात आणि

276
00:19:02,840 --> 00:19:07,680
म्हणून मी आधी म्हटल्याप्रमाणे, ते ज्या बिंदूमध्ये संकुचित होत आहेत. वर शून्य असणे आवश्यक आहे.

277
00:19:07,680 --> 00:19:08,760
आणि तेच!

278
00:19:08,760 --> 00:19:13,280
आम्ही आता द्विमितीय समीकरण सॉल्व्हर तयार केले आहे,

279
00:19:13,280 --> 00:19:14,760
आणि यावेळी, मी वचन देतो, कोणतेही बग नाहीत.

280
00:19:14,760 --> 00:19:18,200
हे काम करण्यासाठी आपल्याला आवश्यक असलेले साधन म्हणजे वाइंडिंग नंबर्स.

281
00:19:18,200 --> 00:19:23,040
आता आपण f आणि g वाऱ्यांमधला फरक कसा आहे याचा विचार करून दोन

282
00:19:23,040 --> 00:19:27,660
परिमाणांमध्ये x च्या x समान g कुठे आहे असे दिसणारी समीकरणे सोडवू शकतो.

283
00:19:27,660 --> 00:19:31,800
जेव्हाही आमच्याकडे असा लूप असेल ज्याचा वाइंडिंग क्रमांक शून्य नसेल, तेव्हा आम्ही त्यावर

284
00:19:31,800 --> 00:19:35,160
हा अल्गोरिदम चालवू शकतो, आणि आम्ही त्यामध्ये कुठेतरी उपाय शोधण्याची हमी देतो.

285
00:19:35,160 --> 00:19:40,300
आणि आणखी काय, एका परिमाणाप्रमाणे, हे अल्गोरिदम आश्चर्यकारकपणे कार्यक्षम आहे.

286
00:19:40,300 --> 00:19:44,880
आम्ही प्रत्येक फेरीत आमच्या क्षेत्राच्या अर्ध्या आकारात संकुचित करत राहतो, अशा प्रकारे

287
00:19:44,880 --> 00:19:49,840
त्वरीत शून्यांवर संकुचित होतो, आणि या सर्व वेळी, आम्हाला फक्त या

288
00:19:49,840 --> 00:19:55,240
लूपच्या बिंदूंसह फंक्शनचे मूल्य तपासावे लागते, ते अनेकांवर तपासण्याऐवजी. आतील बिंदू.

289
00:19:55,240 --> 00:20:00,400
त्यामुळे काही अर्थाने, केलेले एकूण कार्य केवळ शोध जागेच्या

290
00:20:00,400 --> 00:20:04,960
परिमितीच्या प्रमाणात आहे, पूर्ण क्षेत्रफळ नाही, जे आश्चर्यकारक आहे.

291
00:20:04,960 --> 00:20:09,360
आता काय चालले आहे हे समजल्यानंतर, हे फक्त कृतीत पाहणे, त्यास काही

292
00:20:09,360 --> 00:20:13,800
कार्य देणे आणि शून्य शोधू देणे हे विचित्रपणे मंत्रमुग्ध करणारे आहे.

293
00:20:13,800 --> 00:20:18,600
मी आधी म्हटल्याप्रमाणे, जटिल संख्या द्विमितीय आहेत, म्हणून

294
00:20:18,600 --> 00:20:20,340
चला ते जटिल संख्यांच्या काही समीकरणांवर लागू करूया.

295
00:20:20,340 --> 00:20:25,240
उदाहरणार्थ, कॉम्प्लेक्स प्लेनवर x ते पाचव्या वजा x

296
00:20:25,240 --> 00:20:28,920
वजा एक फंक्शनचे शून्य शोधणारे अल्गोरिदम येथे आहे.

297
00:20:28,920 --> 00:20:33,160
हे उत्पत्तीच्या आजूबाजूच्या खूप मोठ्या प्रदेशाचा विचार करून

298
00:20:33,160 --> 00:20:35,440
सुरू झाले, ज्याची वळण संख्या 5 होती.

299
00:20:35,440 --> 00:20:39,640
प्रत्येक वेळी तुम्हाला शून्य नसलेल्या वळण क्रमांकासह लूप सापडेल तेव्हा तुम्ही

300
00:20:39,640 --> 00:20:42,840
ते अर्ध्यामध्ये विभाजित कराल आणि दोन लहान वळणांची वळण संख्या काढा.

301
00:20:42,880 --> 00:20:46,880
त्यापैकी एक किंवा दोन्हीपैकी एक शून्य नसलेला वळण क्रमांक असण्याची हमी आहे, आणि

302
00:20:46,880 --> 00:20:51,440
जेव्हा तुम्ही हे पाहता तेव्हा तुम्हाला कळते की त्या लहान लूपमध्ये कुठेतरी एक

303
00:20:51,440 --> 00:20:54,300
शून्य आहे, म्हणून तुम्ही लहान जागेचा शोध घेत त्याच प्रकारे पुढे जात रहा.

304
00:20:54,300 --> 00:20:58,920
आम्ही ज्या मार्गावर मोजणी करत आहोत तो शून्यात अडखळला तर आम्ही एखाद्या प्रदेशाचे अन्वेषण

305
00:20:58,920 --> 00:21:03,420
करणे देखील थांबवतो, जे येथे उजव्या अर्ध्या भागावर या उदाहरणासाठी प्रत्यक्षात एकदाच घडले.

306
00:21:03,420 --> 00:21:07,600
त्या दुर्मिळ घटनांमुळे वळण संख्या मोजण्याच्या आमच्या क्षमतेत

307
00:21:07,600 --> 00:21:09,320
व्यत्यय येतो, पण अहो, आम्हाला शून्य मिळाले.

308
00:21:09,320 --> 00:21:13,320
आणि ज्या वळणांची संख्या शून्य आहे अशा लूपसाठी, तुम्ही त्या पुढे शोधू नका.

309
00:21:13,320 --> 00:21:18,520
कदाचित त्यांच्याकडे आतून उपाय असेल, कदाचित ते नसेल, आम्हाला कोणतीही हमी नाही.

310
00:21:18,520 --> 00:21:22,240
आणि आपले समीकरण सोडवणारे असेच चालू ठेवल्यास, ते

311
00:21:22,240 --> 00:21:26,020
शेवटी या बहुपदीसाठी अनेक शून्यांमध्ये रूपांतरित होते.

312
00:21:26,020 --> 00:21:30,400
तसे, या उदाहरणातील एकूण वळण संख्या

313
00:21:30,400 --> 00:21:31,660
5 आहे हा योगायोग नाही.

314
00:21:31,660 --> 00:21:37,280
कॉम्प्लेक्स नंबर्ससह, x ते n हे ऑपरेशन थेट आउटपुटच्या उत्पत्तीच्या n

315
00:21:37,280 --> 00:21:45,000
वेळाभोवती फिरण्याशी संबंधित आहे जेव्हा तुम्ही इनपुटच्या उत्पत्तीभोवती एकदा फिरता.

316
00:21:45,000 --> 00:21:50,500
त्यामुळे बहुपदासह, पुरेशा मोठ्या इनपुटसाठी, अग्रगण्य पदाव्यतिरिक्त

317
00:21:50,500 --> 00:21:52,700
इतर प्रत्येक संज्ञा तुलनेत क्षुल्लक ठरते.

318
00:21:52,700 --> 00:21:58,780
म्हणून कोणत्याही जटिल बहुपदी ज्याचे अग्रस्थान x ते n आहे

319
00:21:58,780 --> 00:22:00,700
त्यामध्ये n ची वळण संख्या पुरेशी मोठ्या लूपभोवती असते.

320
00:22:00,700 --> 00:22:06,240
आणि अशा प्रकारे, आमचे वळण क्रमांक तंत्रज्ञान प्रत्यक्षात

321
00:22:06,240 --> 00:22:07,620
हमी देते की प्रत्येक जटिल बहुपदीमध्ये शून्य असते.

322
00:22:07,620 --> 00:22:13,880
हे इतके महत्त्वाचे सत्य आहे की गणितज्ञ याला बीजगणिताचे मूलभूत प्रमेय म्हणतात.

323
00:22:13,880 --> 00:22:18,040
यासारख्या समीकरणांची संख्यात्मक निराकरणे शोधण्यासाठी अल्गोरिदम असणे अत्यंत व्यावहारिक

324
00:22:18,040 --> 00:22:22,420
आहे, परंतु बीजगणिताचे मूलभूत प्रमेय हे वळण संख्या सैद्धांतिक

325
00:22:22,420 --> 00:22:27,780
स्तरावर देखील कसे उपयुक्त आहेत याचे एक चांगले

326
00:22:27,780 --> 00:22:32,280
उदाहरण आहे, जे मोठ्या वर्गाच्या समाधानाच्या अस्तित्वाची हमी देते.

327
00:22:32,280 --> 00:22:34,060
योग्य परिस्थितीसाठी समीकरणे, ज्याचा विचार गणितज्ञांना करायला आवडतो.

328
00:22:34,400 --> 00:22:39,360
मी तुम्हाला फॉलो-अप व्हिडिओमध्ये टोपोलॉजीच्या संदर्भात याचे आणखी काही आश्चर्यकारक

329
00:22:39,360 --> 00:22:44,080
ऍप्लिकेशन्स दाखवतो, ज्यामध्ये जुन्या 3ब्लू1ब्राउन व्हिडिओमधून चूक सुधारणे समाविष्ट आहे.

330
00:22:44,080 --> 00:22:45,080
कोणता?

331
00:22:45,080 --> 00:22:48,740
बरं, या चॅनेलवरील सर्व व्हिडिओ, सर्व काही पहा

332
00:22:48,740 --> 00:22:51,640
आणि प्रथम त्रुटी शोधू शकता का ते पहा.

333
00:22:51,640 --> 00:22:55,960
या व्हिडिओचे प्राथमिक लेखक नवीन 3ब्लू1ब्राउन

334
00:22:55,960 --> 00:22:56,460
टीम सदस्यांपैकी एक आहेत, श्रीधर रमेश.

