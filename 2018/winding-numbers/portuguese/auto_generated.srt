1
00:00:00,000 --> 00:00:06,720
Há duas coisas aqui, o tópico principal e o metatópico.

2
00:00:06,720 --> 00:00:10,236
O tópico principal será esse algoritmo realmente bacana para resolver

3
00:00:10,236 --> 00:00:13,752
equações bidimensionais, coisas que possuem duas incógnitas reais, ou

4
00:00:13,752 --> 00:00:17,420
também aquelas que envolvem uma única incógnita que é um número complexo.

5
00:00:17,420 --> 00:00:20,547
Por exemplo, se você quisesse encontrar as raízes complexas de

6
00:00:20,547 --> 00:00:23,525
um polinômio, ou talvez alguns daqueles zeros de milhões de

7
00:00:23,525 --> 00:00:27,000
dólares da função zeta de Riemann, este algoritmo faria isso por você.

8
00:00:27,000 --> 00:00:30,520
E esse método é super bonito, já que envolve muitas cores.

9
00:00:30,520 --> 00:00:33,896
E o mais importante, a ideia central subjacente se aplica a todos os

10
00:00:33,896 --> 00:00:37,419
tipos de matemática, muito além deste algoritmo para resolver equações,

11
00:00:37,419 --> 00:00:40,600
incluindo um pouco de topologia, sobre a qual falarei mais tarde.

12
00:00:40,600 --> 00:00:44,459
Mas o que realmente faz com que isso valha cerca de 20 minutos do

13
00:00:44,459 --> 00:00:48,494
seu tempo é que ele ilustra uma lição muito mais útil em matemática,

14
00:00:48,494 --> 00:00:52,120
que é tentar definir construções que se combinem bem entre si.

15
00:00:52,120 --> 00:00:55,460
Você verá o que quero dizer com isso à medida que a história avança.

16
00:00:55,460 --> 00:01:00,224
Para motivar o caso com funções que possuem entradas 2d e saídas 2d, vamos começar de

17
00:01:00,224 --> 00:01:05,100
forma mais simples, com funções que apenas pegam um número real e cospem um número real.

18
00:01:05,100 --> 00:01:09,705
Se você quiser saber quando uma função f de x é igual a alguma outra função g de x, você

19
00:01:09,705 --> 00:01:14,260
pode pensar nisso como uma busca por quando os gráficos dessas funções se cruzam, certo?

20
00:01:14,260 --> 00:01:19,340
Quero dizer, isso fornece uma entrada onde ambas as funções têm a mesma saída.

21
00:01:19,340 --> 00:01:22,490
Para dar um exemplo muito simples, imagine que f de

22
00:01:22,490 --> 00:01:25,520
x é x ao quadrado e g de x é a função constante 2.

23
00:01:25,520 --> 00:01:29,620
Em outras palavras, você deseja encontrar a raiz quadrada de 2.

24
00:01:29,620 --> 00:01:33,793
Mesmo que você não saiba quase nada sobre como encontrar raízes quadradas,

25
00:01:33,793 --> 00:01:37,966
provavelmente poderá ver que 1 ao quadrado é menor que 2 e 2 ao quadrado é

26
00:01:37,966 --> 00:01:42,640
maior que 2, então você percebe, ah, haverá alguma solução entre esses dois valores.

27
00:01:42,640 --> 00:01:44,918
E então, se você quiser restringir ainda mais, talvez

28
00:01:44,918 --> 00:01:47,240
você tente elevar ao quadrado o ponto intermediário, 1.

29
00:01:47,240 --> 00:01:47,740
5.

30
00:01:47,740 --> 00:01:49,085
Isso resulta em 2.

31
00:01:49,085 --> 00:01:54,000
25, um pouco alto demais, então você focaria na região entre 1 e 1.

32
00:01:54,000 --> 00:01:54,940
5.

33
00:01:54,940 --> 00:01:59,852
E assim por diante, você provavelmente pode ver como isso continuaria, você

34
00:01:59,852 --> 00:02:05,540
continuaria computando no ponto médio e depois cortaria seu espaço de busca pela metade.

35
00:02:05,540 --> 00:02:08,954
Outra maneira de pensar sobre isto, que nos tornará mais fácil

36
00:02:08,954 --> 00:02:12,694
quando chegarmos a dimensões superiores, é concentrar-nos na questão

37
00:02:12,694 --> 00:02:16,380
equivalente para quando a diferença entre estas duas funções é zero.

38
00:02:16,380 --> 00:02:20,299
Nesses termos, encontramos uma região de insumos onde essa

39
00:02:20,299 --> 00:02:24,020
diferença era negativa em uma ponta e positiva na outra.

40
00:02:24,020 --> 00:02:27,913
Nós o dividimos em dois, e a metade para a qual concentramos nossa atenção

41
00:02:27,913 --> 00:02:31,600
foi aquela em que os pontos mais externos apresentavam sinais variados.

42
00:02:31,600 --> 00:02:36,264
Assim, conseguimos continuar indefinidamente, pegando cada região com sinais

43
00:02:36,264 --> 00:02:41,110
variados na fronteira, encontrando uma região menor entre suas metades, sabendo

44
00:02:41,110 --> 00:02:46,260
que em última análise teremos que nos estreitar em um ponto que será exatamente zero.

45
00:02:46,260 --> 00:02:50,717
Resumindo, resolver equações sempre pode ser enquadrado como encontrar quando uma

46
00:02:50,717 --> 00:02:55,065
determinada função é igual a zero, e para fazer isso, temos esta heurística, se

47
00:02:55,065 --> 00:02:59,414
f for positivo em um ponto e negativo em outro ponto, você pode encontrar algum

48
00:02:59,414 --> 00:03:03,980
lugar entre onde é zero, pelo menos se tudo mudar suavemente, sem saltos repentinos.

49
00:03:03,980 --> 00:03:09,399
A coisa incrível que quero mostrar é que você pode estender esse tipo de pensamento para

50
00:03:09,399 --> 00:03:14,026
equações bidimensionais, equações entre funções cujas entradas e saídas são

51
00:03:14,026 --> 00:03:14,940
bidimensionais.

52
00:03:14,940 --> 00:03:18,312
Por exemplo, os números complexos são 2D e esta ferramenta que estamos

53
00:03:18,312 --> 00:03:21,780
desenvolvendo é perfeita para encontrar soluções para equações complexas.

54
00:03:21,780 --> 00:03:25,611
Agora, já que falaremos tanto sobre essas funções 2D, vamos

55
00:03:25,611 --> 00:03:29,380
dar um breve passo lateral e considerar como as ilustramos.

56
00:03:29,380 --> 00:03:33,031
Representar graficamente uma função com entrada e saída 2D

57
00:03:33,031 --> 00:03:36,745
exigiria quatro dimensões, e isso não funcionará tão bem em

58
00:03:36,745 --> 00:03:41,140
nosso mundo 3D em nossas telas 2D, mas ainda temos algumas boas opções.

59
00:03:41,140 --> 00:03:46,020
Uma é apenas observar o espaço de entrada e o espaço de saída lado a lado.

60
00:03:46,020 --> 00:03:49,754
Cada ponto no espaço de entrada se move para um ponto específico no

61
00:03:49,754 --> 00:03:53,325
espaço de saída, e posso mostrar como o movimento em torno desse

62
00:03:53,325 --> 00:03:57,060
ponto de entrada corresponde a certos movimentos no espaço de saída.

63
00:03:57,060 --> 00:04:02,289
Todas as funções que consideramos serão contínuas, no sentido de que pequenas alterações

64
00:04:02,289 --> 00:04:07,460
na entrada correspondem apenas a pequenas alterações na saída, não há saltos repentinos.

65
00:04:07,460 --> 00:04:12,542
Outra opção que temos é imaginar a seta desde a origem do espaço de saída até esse

66
00:04:12,542 --> 00:04:17,380
ponto de saída e anexar uma versão em miniatura dessa seta ao ponto de entrada.

67
00:04:17,380 --> 00:04:22,450
Isso pode nos dar uma ideia rápida de para onde vai um determinado ponto de entrada ou

68
00:04:22,450 --> 00:04:27,580
para onde vão muitos pontos de entrada diferentes, desenhando o campo vetorial completo.

69
00:04:27,580 --> 00:04:31,081
E, infelizmente, quando você faz isso em muitos pontos, pode ficar bastante

70
00:04:31,081 --> 00:04:34,582
confuso, então deixe-me fazer todas as setas do mesmo tamanho, e o que isso

71
00:04:34,582 --> 00:04:37,900
significa é que podemos ter uma noção da direção de cada ponto de saída.

72
00:04:37,900 --> 00:04:42,738
Mas talvez a maneira mais bonita de ilustrar funções bidimensionais, e a que mais

73
00:04:42,738 --> 00:04:47,400
usaremos neste vídeo, seja associar cada ponto nesse espaço de saída a uma cor.

74
00:04:47,400 --> 00:04:51,516
Aqui usamos matizes, é onde a cor cai ao longo de um arco-íris ou

75
00:04:51,516 --> 00:04:55,881
roda de cores, para corresponder à direção oposta à origem, e estamos

76
00:04:55,881 --> 00:05:00,060
usando escuridão ou brilho para corresponder à distância da origem.

77
00:05:00,060 --> 00:05:03,450
Por exemplo, focando neste conjunto de resultados, todos estes

78
00:05:03,450 --> 00:05:06,680
pontos são vermelhos, mas os mais próximos da origem são um

79
00:05:06,680 --> 00:05:10,340
pouco mais escuros e os mais distantes são um pouco mais brilhantes.

80
00:05:10,340 --> 00:05:14,797
E focando neste conjunto de resultados, todos os pontos são verdes e, novamente,

81
00:05:14,797 --> 00:05:18,980
mais perto da origem significa mais escuro, mais longe significa mais claro.

82
00:05:18,980 --> 00:05:22,090
E assim por diante, tudo o que estamos fazendo aqui é atribuir

83
00:05:22,090 --> 00:05:25,300
uma cor específica para cada direção, tudo mudando continuamente.

84
00:05:25,300 --> 00:05:28,667
Você pode notar que as diferenças de escuridão e brilho aqui são

85
00:05:28,667 --> 00:05:31,983
bastante sutis, mas para este vídeo, tudo o que nos importa é a

86
00:05:31,983 --> 00:05:35,300
direção das saídas, não as magnitudes, os matizes, não o brilho.

87
00:05:35,300 --> 00:05:39,776
A única coisa importante que você deve notar sobre o brilho é que perto

88
00:05:39,776 --> 00:05:44,440
da origem, que não tem uma direção específica, todas as cores ficam pretas.

89
00:05:44,440 --> 00:05:48,913
Então, para pensar em funções, agora que decidimos uma cor para cada

90
00:05:48,913 --> 00:05:53,321
saída, podemos visualizar funções 2D colorindo cada ponto no espaço

91
00:05:53,321 --> 00:05:57,860
de entrada com base na cor do ponto onde ele pousa no espaço de saída.

92
00:05:57,860 --> 00:06:02,531
Gosto de imaginar muitos pontos diferentes desse espaço de entrada saltando para suas

93
00:06:02,531 --> 00:06:07,094
saídas correspondentes no espaço de saída, depois sendo pintados com base na cor do

94
00:06:07,094 --> 00:06:11,820
ponto onde pousaram e depois voltando para o local de onde vieram no espaço de entrada.

95
00:06:11,820 --> 00:06:15,584
Fazendo isso para cada ponto no espaço de entrada, você pode ter uma ideia apenas olhando

96
00:06:15,584 --> 00:06:19,140
para esse espaço de entrada para saber aproximadamente onde a função leva cada ponto.

97
00:06:19,140 --> 00:06:24,506
Por exemplo, esta faixa de pontos rosa à esquerda nos diz que todos esses pontos são

98
00:06:24,506 --> 00:06:30,000
mapeados em algum lugar na direção rosa, na parte inferior esquerda do espaço de saída.

99
00:06:30,000 --> 00:06:37,120
Além disso, aqueles três pontos pretos com muitas cores ao redor são os que vão para zero.

100
00:06:37,120 --> 00:06:43,450
Tudo bem, assim como no caso 1D, a resolução de equações de funções 2D sempre

101
00:06:43,450 --> 00:06:49,780
pode ser reformulada perguntando quando uma determinada função é igual a zero.

102
00:06:49,780 --> 00:06:55,381
Então esse é o nosso desafio agora, criar um algoritmo que descubra

103
00:06:55,381 --> 00:07:00,900
quais pontos de entrada de uma determinada função 2D vão para zero.

104
00:07:00,900 --> 00:07:04,826
Você pode apontar que se estiver olhando para um mapa de cores como este

105
00:07:04,826 --> 00:07:08,700
vendo aqueles pontos pretos, você já sabe onde estão os zeros da função.

106
00:07:08,700 --> 00:07:11,460
Então isso conta?

107
00:07:11,460 --> 00:07:16,079
Tenha em mente que para criar um diagrama como este, fizemos com que o computador

108
00:07:16,079 --> 00:07:20,586
calculasse a função em todos os pixels do plano, mas nosso objetivo é encontrar

109
00:07:20,586 --> 00:07:25,036
um algoritmo mais eficiente que exija apenas calcular a função no menor número

110
00:07:25,036 --> 00:07:29,600
possível de pontos. , tendo apenas uma visão limitada das cores, por assim dizer.

111
00:07:29,600 --> 00:07:33,876
E também de um ponto de vista mais teórico, seria bom ter uma construção geral que nos

112
00:07:33,876 --> 00:07:38,300
informasse as condições para a existência ou não de zero dentro de uma determinada região.

113
00:07:38,300 --> 00:07:43,327
Lembre-se, em uma dimensão o principal insight foi que se uma função contínua é

114
00:07:43,327 --> 00:07:48,920
positiva em um ponto e negativa em outro, em algum ponto intermediário ela deve ser zero.

115
00:07:48,920 --> 00:07:50,960
Então, como estendemos isso para duas dimensões?

116
00:07:50,960 --> 00:07:55,180
Precisamos de algum tipo de analogia para falar sobre signos.

117
00:07:55,180 --> 00:07:59,140
Uma maneira de pensar sobre o que são os sinais são as direções.

118
00:07:59,140 --> 00:08:01,602
Positivo significa que você está apontando para a direita ao longo da

119
00:08:01,602 --> 00:08:04,240
reta numérica e negativo significa que você está apontando para a esquerda.

120
00:08:04,240 --> 00:08:08,534
As quantidades bidimensionais também têm direção, mas para elas as opções são muito mais

121
00:08:08,534 --> 00:08:12,780
amplas, podem apontar para qualquer lugar ao longo de todo um círculo de possibilidades.

122
00:08:12,780 --> 00:08:17,569
Então, da mesma forma que em uma dimensão estávamos perguntando se uma

123
00:08:17,569 --> 00:08:22,629
determinada função é positiva ou negativa no limite de um intervalo, que é

124
00:08:22,629 --> 00:08:27,688
apenas dois pontos, para funções 2d estaremos olhando para o limite de uma

125
00:08:27,688 --> 00:08:33,760
região, que é um loop e pergunte sobre a direção da saída da função ao longo desse limite.

126
00:08:33,760 --> 00:08:37,619
Por exemplo, vemos que ao longo deste loop em torno deste zero, a saída

127
00:08:37,619 --> 00:08:41,800
passa por todas as direções possíveis, todas as cores do arco-íris, vermelho,

128
00:08:41,800 --> 00:08:45,820
amarelo, verde, azul, de volta ao vermelho e tudo mais ao longo do caminho.

129
00:08:45,820 --> 00:08:50,677
Mas ao longo deste loop aqui, sem zeros dentro dele, a saída não passa por todas as

130
00:08:50,677 --> 00:08:55,420
cores, passa por algumas das cores alaranjadas, mas nunca, digamos, verde ou azul.

131
00:08:55,420 --> 00:08:59,320
E isso é promissor, parece muito com o modo como as coisas funcionavam em uma dimensão.

132
00:08:59,320 --> 00:09:03,781
Talvez da mesma forma que se uma função 1d recebe ambos os sinais possíveis

133
00:09:03,781 --> 00:09:08,242
no limite de uma região 1d, havia um zero em algum lugar dentro, poderíamos

134
00:09:08,242 --> 00:09:12,409
levantar a hipótese de que se uma função 2d atingir saídas de todas as

135
00:09:12,409 --> 00:09:16,636
direções possíveis, todas as cores possíveis, ao longo do limite de uma

136
00:09:16,636 --> 00:09:20,980
região 2d, então em algum lugar dentro dessa região ele deve ir para zero.

137
00:09:20,980 --> 00:09:24,348
Então esse é o nosso palpite, e pare um momento para pensar

138
00:09:24,348 --> 00:09:27,660
se isso deveria ser verdade e, em caso afirmativo, por quê.

139
00:09:27,660 --> 00:09:30,627
Se começarmos a pensar em um pequeno loop em torno de algum

140
00:09:30,627 --> 00:09:33,544
ponto de entrada, sabemos que, como tudo é contínuo, nossa

141
00:09:33,544 --> 00:09:36,660
função o leva a um pequeno loop próximo à saída correspondente.

142
00:09:36,660 --> 00:09:41,140
Mas veja, para a maioria dos loops minúsculos, a saída varia em cor.

143
00:09:41,140 --> 00:09:45,094
Se você escolher qualquer ponto de saída diferente de zero e desenhar um loop

144
00:09:45,094 --> 00:09:49,555
suficientemente estreito próximo a ele, as cores do loop serão todas da mesma cor desse

145
00:09:49,555 --> 00:09:49,860
ponto.

146
00:09:49,860 --> 00:09:53,966
Um laço apertado aqui é todo azulado, um laço apertado aqui é todo

147
00:09:53,966 --> 00:09:58,440
amarelado, você certamente não vai conseguir todas as cores do arco-íris.

148
00:09:58,440 --> 00:10:02,780
O único ponto onde você pode apertar os laços ao redor dele e

149
00:10:02,780 --> 00:10:07,120
ainda obter todas as cores é a origem incolor, o próprio zero.

150
00:10:07,120 --> 00:10:12,039
Portanto, é verdade que se você tiver laços passando por todas as cores do arco-íris,

151
00:10:12,039 --> 00:10:17,073
apertando e apertando, estreitando-se em um ponto, então esse ponto deve ser de fato um

152
00:10:17,073 --> 00:10:17,360
zero.

153
00:10:17,360 --> 00:10:19,712
E então vamos configurar um solucionador de equações 2D

154
00:10:19,712 --> 00:10:22,360
exatamente como nosso solucionador de equações unidimensionais.

155
00:10:22,360 --> 00:10:26,410
Quando encontrarmos uma região grande cuja borda passa por todas as

156
00:10:26,410 --> 00:10:30,640
cores, divida-a em duas e observe as cores na fronteira de cada metade.

157
00:10:30,640 --> 00:10:34,916
No exemplo mostrado aqui, a borda da metade esquerda não passa por todas as

158
00:10:34,916 --> 00:10:39,080
cores, não há pontos mapeados nas direções laranja-amarelado, por exemplo.

159
00:10:39,080 --> 00:10:43,480
Portanto, deixarei esta área em cinza como forma de dizer que não queremos pesquisar mais.

160
00:10:43,480 --> 00:10:47,399
A metade direita passa por todas as cores, passa muito tempo na direção verde,

161
00:10:47,399 --> 00:10:51,120
depois passa pelo amarelo laranja vermelho e também pelo azul violeta rosa.

162
00:10:51,120 --> 00:10:54,300
Agora lembre-se, o que isso significa é que os pontos desta

163
00:10:54,300 --> 00:10:57,800
fronteira são mapeados para saídas de todas as direções possíveis.

164
00:10:57,800 --> 00:11:02,900
Então vamos explorar mais, subdividindo novamente e verificando o limite de cada região.

165
00:11:02,900 --> 00:11:07,000
O limite do topo é todo verde, então vamos parar de procurar aí.

166
00:11:07,000 --> 00:11:10,500
Mas o fundo é colorido o suficiente para merecer uma subdivisão.

167
00:11:10,500 --> 00:11:12,420
E continue assim.

168
00:11:12,420 --> 00:11:16,513
Verifique qual sub-região tem um limite que cobre todas as cores possíveis, o

169
00:11:16,513 --> 00:11:20,450
que significa que os pontos desse limite são mapeados em todas as direções

170
00:11:20,450 --> 00:11:24,596
possíveis, e continue cortando essas regiões pela metade, como fizemos no caso

171
00:11:24,596 --> 00:11:29,320
unidimensional, eventualmente nos levando a um zero sobre a função. Ah, espere um segundo.

172
00:11:29,320 --> 00:11:30,320
O que aconteceu aqui?

173
00:11:30,320 --> 00:11:34,108
Nenhuma das últimas subdivisões no canto inferior direito passou

174
00:11:34,108 --> 00:11:37,546
por todas as cores, então nosso algoritmo parou porque não

175
00:11:37,546 --> 00:11:41,160
queria pesquisar nenhuma delas, mas também não encontrou zero.

176
00:11:41,160 --> 00:11:43,720
Ok, claramente algo está errado aqui.

177
00:11:43,720 --> 00:11:46,680
E tudo bem, estar errado é uma parte normal da matemática.

178
00:11:46,680 --> 00:11:50,208
Se olharmos para trás, tínhamos essa hipótese, e ela nos levou

179
00:11:50,208 --> 00:11:53,680
a esse algoritmo proposto, então nos enganamos em algum lugar.

180
00:11:53,680 --> 00:11:58,128
E ser bom em matemática não é acertar na primeira vez, é ter resiliência para

181
00:11:58,128 --> 00:12:02,520
olhar para trás com cuidado e entender os erros, e entender como corrigi-los.

182
00:12:02,520 --> 00:12:05,533
Agora, o problema aqui é que tínhamos uma região cuja fronteira

183
00:12:05,533 --> 00:12:08,641
passava por todas as cores, mas quando dividimos ao meio, nenhuma

184
00:12:08,641 --> 00:12:11,936
das fronteiras da sub-região passava por todas as cores, não tínhamos

185
00:12:11,936 --> 00:12:15,280
opções de onde continuar pesquisando e isso quebrou o zero localizador.

186
00:12:15,280 --> 00:12:18,120
Agora, em uma dimensão, esse tipo de coisa nunca aconteceu.

187
00:12:18,120 --> 00:12:21,653
Sempre que você tiver um intervalo cujos pontos finais têm

188
00:12:21,653 --> 00:12:25,366
sinais diferentes, se você dividi-lo, saberá que obterá algum

189
00:12:25,366 --> 00:12:29,200
subintervalo cujos pontos finais também terão sinais diferentes.

190
00:12:29,200 --> 00:12:32,438
Ou dito de outra forma, sempre que você tiver dois intervalos

191
00:12:32,438 --> 00:12:35,937
cujas extremidades não mudam de sinal, se você combiná-los, obterá

192
00:12:35,937 --> 00:12:39,280
um intervalo maior cujas extremidades também não mudam de sinal.

193
00:12:39,280 --> 00:12:42,724
Mas em duas dimensões, é possível encontrar duas regiões cujas

194
00:12:42,724 --> 00:12:46,168
fronteiras não passam por todas as cores, mas cujos limites se

195
00:12:46,168 --> 00:12:49,940
combinam para dar uma região cuja fronteira passa por todas as cores.

196
00:12:49,940 --> 00:12:53,740
E foi exatamente dessa maneira que nosso algoritmo proposto para encontrar o zero quebrou.

197
00:12:53,740 --> 00:12:58,266
Na verdade, se você pensar bem, poderá encontrar um grande loop cuja

198
00:12:58,266 --> 00:13:03,120
borda passa por todas as cores possíveis sem que haja um zero dentro dele.

199
00:13:03,120 --> 00:13:06,410
Agora, isso não quer dizer que estávamos errados em nossas afirmações

200
00:13:06,410 --> 00:13:09,560
sobre loops minúsculos quando dissemos que um loop que se estreita

201
00:13:09,560 --> 00:13:13,040
continuamente passando por todas as cores tem que se estreitar em um zero.

202
00:13:13,040 --> 00:13:16,257
Mas o que complicou tudo para nós é que essa propriedade do tipo

203
00:13:16,257 --> 00:13:19,574
&quot;minha fronteira passa por todas as cores ou não&quot; não se

204
00:13:19,574 --> 00:13:23,040
combina de maneira agradável e previsível quando você combina regiões.

205
00:13:23,040 --> 00:13:30,220
Mas não se preocupe, podemos modificar isso um pouco para uma

206
00:13:30,220 --> 00:13:38,560
propriedade mais sofisticada que se combine para nos dar o que queremos.

207
00:13:38,560 --> 00:13:41,476
A ideia é que, em vez de simplesmente perguntar se podemos

208
00:13:41,476 --> 00:13:44,590
encontrar uma cor em algum ponto do loop, vamos acompanhar com

209
00:13:44,590 --> 00:13:48,100
mais cuidado como essas cores mudam à medida que percorremos esse loop.

210
00:13:48,100 --> 00:13:50,060
Deixe-me mostrar o que quero dizer com um exemplo.

211
00:13:50,060 --> 00:13:54,120
Vou manter uma pequena roda de cores aqui no canto para nos ajudar a acompanhar.

212
00:13:54,120 --> 00:13:57,970
Quando as cores ao longo de um caminho de entradas se movem através do arco-íris

213
00:13:57,970 --> 00:14:01,774
em uma direção específica, do vermelho para o amarelo, do amarelo para o verde,

214
00:14:01,774 --> 00:14:05,720
do verde para o azul ou do azul para o vermelho, a saída oscila no sentido horário.

215
00:14:05,720 --> 00:14:09,692
Mas, por outro lado, se as cores se movem no sentido inverso no arco-íris,

216
00:14:09,692 --> 00:14:13,611
do azul para o verde, do verde para o amarelo, do amarelo para o vermelho

217
00:14:13,611 --> 00:14:17,160
ou do vermelho para o azul, a saída oscila no sentido anti-horário.

218
00:14:17,160 --> 00:14:21,702
Então, caminhando por esse caminho curto aqui, as cores serpenteiam um quinto do

219
00:14:21,702 --> 00:14:26,245
caminho no sentido horário na roda de cores, e andando por esse caminho aqui, as

220
00:14:26,245 --> 00:14:30,620
cores serpenteiam outro quinto do caminho no sentido horário na roda de cores.

221
00:14:30,620 --> 00:14:34,915
Claro, isso significa que se você seguir os dois caminhos, um após o outro,

222
00:14:34,915 --> 00:14:39,380
as cores girarão um total de dois quintos de volta completa no sentido horário.

223
00:14:39,380 --> 00:14:43,176
A quantidade total de enrolamento simplesmente aumenta, e isso será

224
00:14:43,176 --> 00:14:47,140
fundamental, esse é o tipo de combinação direta que será útil para nós.

225
00:14:47,140 --> 00:14:51,090
Quando digo quantidade total de enrolamento, quero que você imagine

226
00:14:51,090 --> 00:14:54,749
um hodômetro antigo que avança enquanto a seta gira no sentido

227
00:14:54,749 --> 00:14:58,700
horário, mas para trás enquanto a seta gira no sentido anti-horário.

228
00:14:58,700 --> 00:15:00,794
Portanto, o enrolamento no sentido anti-horário

229
00:15:00,794 --> 00:15:03,020
conta como enrolamento negativo no sentido horário.

230
00:15:03,020 --> 00:15:05,919
As saídas podem girar muito, mas se parte dessa

231
00:15:05,919 --> 00:15:08,940
rotação for na direção oposta, ela será cancelada.

232
00:15:08,940 --> 00:15:13,194
Por exemplo, se você avançar nesse caminho e depois retroceder nesse mesmo

233
00:15:13,194 --> 00:15:17,620
caminho, a quantidade total de enrolamento acaba sendo zero, o movimento para

234
00:15:17,620 --> 00:15:22,045
trás literalmente retrocede pelas cores vistas anteriormente, invertendo todo

235
00:15:22,045 --> 00:15:26,300
o enrolamento anterior e retornando o hodômetro de volta para onde começou.

236
00:15:26,300 --> 00:15:28,435
Para nossos propósitos, nos preocuparemos mais

237
00:15:28,435 --> 00:15:30,480
em observar o enrolamento ao longo dos loops.

238
00:15:30,480 --> 00:15:34,280
Por exemplo, digamos que percorremos todo esse loop no sentido horário.

239
00:15:34,280 --> 00:15:38,581
As saídas que encontramos giram em torno de um total de três voltas

240
00:15:38,581 --> 00:15:42,755
completas no sentido horário, as cores oscilavam no arco-íris, em

241
00:15:42,755 --> 00:15:47,120
ordem, de vermelho para vermelho novamente, e novamente, e novamente.

242
00:15:47,120 --> 00:15:50,541
No jargão usado pelos matemáticos, dizemos que ao

243
00:15:50,541 --> 00:15:54,100
longo deste loop, o número total do enrolamento é 3.

244
00:15:54,100 --> 00:15:58,401
Para outros loops, pode ser qualquer outro número inteiro, talvez um número

245
00:15:58,401 --> 00:16:02,645
maior se a saída oscilar muitas vezes enquanto a entrada percorre um único

246
00:16:02,645 --> 00:16:07,060
loop, ou pode ser um número menor se a saída oscilar apenas uma ou duas vezes.

247
00:16:07,060 --> 00:16:09,876
Ou esse número do enrolamento poderia até ser um número inteiro

248
00:16:09,876 --> 00:16:12,736
negativo, se a saída estivesse oscilando no sentido anti-horário

249
00:16:12,736 --> 00:16:15,200
enquanto caminhamos no sentido horário ao redor do loop.

250
00:16:15,200 --> 00:16:17,367
Mas ao longo de qualquer loop, esta quantidade

251
00:16:17,367 --> 00:16:19,720
total de enrolamento tem que ser um número inteiro.

252
00:16:19,720 --> 00:16:23,134
Quero dizer, quando você voltar ao ponto de partida,

253
00:16:23,134 --> 00:16:25,840
terá o mesmo resultado com o qual começou.

254
00:16:25,840 --> 00:16:29,467
Aliás, se um caminho realmente contém um ponto onde a saída é

255
00:16:29,467 --> 00:16:33,562
precisamente zero, então tecnicamente você não pode definir um número

256
00:16:33,562 --> 00:16:37,600
sinuoso ao longo dele, já que a saída não tem uma direção específica.

257
00:16:37,600 --> 00:16:41,400
Isso não será um problema para nós, porque todo o nosso objetivo é

258
00:16:41,400 --> 00:16:45,200
encontrar zeros, então, se isso acontecer, tivemos sorte mais cedo.

259
00:16:45,200 --> 00:16:50,157
A principal coisa a notar sobre esses números sinuosos é que eles

260
00:16:50,157 --> 00:16:55,040
somam muito bem quando você combina caminhos em caminhos maiores.

261
00:16:55,040 --> 00:16:59,080
Mas o que realmente queremos é que os números sinuosos ao longo das fronteiras

262
00:16:59,080 --> 00:17:03,120
das regiões aumentem bem quando combinamos regiões para formar regiões maiores.

263
00:17:03,120 --> 00:17:06,320
Então, temos essa propriedade?

264
00:17:06,320 --> 00:17:09,600
Bem, dê uma olhada.

265
00:17:09,600 --> 00:17:13,864
O número do enrolamento, à medida que avançamos no sentido horário em torno desta

266
00:17:13,864 --> 00:17:17,920
região à esquerda, é a soma dos números do enrolamento destes quatro caminhos.

267
00:17:17,920 --> 00:17:21,778
E o enrolamento, à medida que avançamos no sentido horário em torno desta

268
00:17:21,778 --> 00:17:25,480
região à direita, é a soma dos números sinuosos destes quatro caminhos.

269
00:17:25,480 --> 00:17:29,675
E quando combinamos essas duas regiões numa região maior, a maioria desses

270
00:17:29,675 --> 00:17:33,760
caminhos tornam-se parte da fronteira no sentido horário da região maior.

271
00:17:33,760 --> 00:17:36,040
E quanto a esses dois caminhos que não funcionam?

272
00:17:36,040 --> 00:17:39,477
Eles se cancelam perfeitamente, um deles é justamente

273
00:17:39,477 --> 00:17:42,660
o inverso, o retrocesso do outro como vimos antes.

274
00:17:42,660 --> 00:17:45,666
Portanto, os números sinuosos ao longo das fronteiras

275
00:17:45,666 --> 00:17:48,840
das regiões somam-se exatamente da maneira que desejamos.

276
00:17:48,840 --> 00:17:53,053
Além disso, observe que esse raciocínio sobre fronteiras orientadas que se somam

277
00:17:53,053 --> 00:17:57,320
bem assim aparece muito na matemática e geralmente é chamado de teorema de Stokes.

278
00:17:57,320 --> 00:18:02,880
Aqueles de vocês que estudaram cálculo multivariável podem reconhecê-lo nesse contexto.

279
00:18:02,880 --> 00:18:05,394
Então agora, finalmente, com os números sinuosos em mãos,

280
00:18:05,394 --> 00:18:08,040
podemos voltar aos nossos objetivos de resolução de equações.

281
00:18:08,040 --> 00:18:12,145
O problema com a região que vimos anteriormente é que, embora a sua fronteira

282
00:18:12,145 --> 00:18:16,620
passasse por todas as cores possíveis, o número do enrolamento era, na verdade, zero.

283
00:18:16,620 --> 00:18:21,760
As saídas giraram na metade do caminho, do amarelo para o vermelho, e então começaram a

284
00:18:21,760 --> 00:18:26,841
voltar no sentido anti-horário na outra direção, depois continuaram passando pelo azul

285
00:18:26,841 --> 00:18:32,040
e atingindo o vermelho do outro lado, tudo de tal forma que o enrolamento total foi zero.

286
00:18:32,040 --> 00:18:36,073
Mas se você encontrar um loop que não apenas atinge todas as cores, mas também tem a

287
00:18:36,073 --> 00:18:40,059
condição mais forte de um número de enrolamento diferente de zero, então, se você o

288
00:18:40,059 --> 00:18:44,234
dividir ao meio, terá a garantia de que pelo menos uma dessas metades terá um número de

289
00:18:44,234 --> 00:18:48,172
enrolamento diferente de zero também, já que as coisas se somam bem da maneira que

290
00:18:48,172 --> 00:18:48,600
queremos.

291
00:18:48,600 --> 00:18:54,280
Dessa forma, você pode continuar, estreitando-se cada vez mais em um ponto.

292
00:18:54,280 --> 00:18:57,654
E à medida que você se estreita em um ponto, você o fará com pequenos

293
00:18:57,654 --> 00:19:01,076
loops que têm números de enrolamento diferentes de zero, o que implica

294
00:19:01,076 --> 00:19:04,257
que eles passam por todas as cores possíveis e, portanto, como eu

295
00:19:04,257 --> 00:19:07,680
disse antes, o ponto em que eles estão se estreitando on deve ser zero.

296
00:19:07,680 --> 00:19:08,760
E é isso!

297
00:19:08,760 --> 00:19:12,452
Agora criamos um solucionador de equações bidimensional

298
00:19:12,452 --> 00:19:14,760
e, desta vez, prometo, não há bugs.

299
00:19:14,760 --> 00:19:16,589
Os números sinuosos são precisamente a ferramenta

300
00:19:16,589 --> 00:19:18,200
de que precisamos para fazer isso funcionar.

301
00:19:18,200 --> 00:19:22,837
Agora podemos resolver equações que se parecem com onde f de x é igual a g

302
00:19:22,837 --> 00:19:27,660
de x em duas dimensões, apenas considerando como a diferença entre f e g gira.

303
00:19:27,660 --> 00:19:31,344
Sempre que tivermos um loop cujo número de enrolamento não é zero, podemos executar

304
00:19:31,344 --> 00:19:35,160
esse algoritmo nele e com certeza encontraremos uma solução em algum lugar dentro dele.

305
00:19:35,160 --> 00:19:40,300
E mais, assim como em uma dimensão, esse algoritmo é incrivelmente eficiente.

306
00:19:40,300 --> 00:19:45,358
Continuamos diminuindo a metade do tamanho da nossa região a cada rodada, estreitando

307
00:19:45,358 --> 00:19:50,358
rapidamente os zeros e, ao mesmo tempo, só precisamos verificar o valor da função ao

308
00:19:50,358 --> 00:19:55,240
longo dos pontos desses loops, em vez de verificá-lo nos muitos pontos do interior.

309
00:19:55,240 --> 00:20:00,168
Então, de certa forma, o trabalho geral realizado é proporcional apenas

310
00:20:00,168 --> 00:20:04,960
ao perímetro do espaço de busca, e não à área total, o que é incrível.

311
00:20:04,960 --> 00:20:09,301
Agora, uma vez que você entende o que está acontecendo, é estranhamente fascinante

312
00:20:09,301 --> 00:20:13,800
apenas observar isso em ação, dando-lhe alguma função e deixando-o procurar por zeros.

313
00:20:13,800 --> 00:20:17,070
Como eu disse antes, os números complexos são bidimensionais,

314
00:20:17,070 --> 00:20:20,340
então vamos aplicá-los a alguma equação com números complexos.

315
00:20:20,340 --> 00:20:24,559
Por exemplo, aqui está o algoritmo que encontra os zeros da

316
00:20:24,559 --> 00:20:28,920
função x elevado ao quinto menos x menos um no plano complexo.

317
00:20:28,920 --> 00:20:31,966
Começou por considerar uma região muito grande em

318
00:20:31,966 --> 00:20:35,440
torno da origem, que acabou tendo um número sinuoso de 5.

319
00:20:35,440 --> 00:20:39,228
Cada vez que você encontra um loop com um número de enrolamento diferente de zero,

320
00:20:39,228 --> 00:20:42,880
você o divide ao meio e descobre o número de enrolamento dos dois loops menores.

321
00:20:42,880 --> 00:20:46,752
É garantido que um ou ambos tenham um número de enrolamento diferente de zero

322
00:20:46,752 --> 00:20:50,576
e, quando você vê isso, sabe que há um zero em algum lugar dentro desse loop

323
00:20:50,576 --> 00:20:54,300
menor, então continue seguindo o mesmo caminho, pesquisando o espaço menor.

324
00:20:54,300 --> 00:20:58,832
Também paramos de explorar uma região se o caminho que estamos calculando tropeçar

325
00:20:58,832 --> 00:21:03,420
em um zero, o que na verdade aconteceu uma vez neste exemplo na metade direita aqui.

326
00:21:03,420 --> 00:21:06,424
Essas ocorrências raras interferem em nossa capacidade

327
00:21:06,424 --> 00:21:09,320
de calcular números sinuosos, mas ei, obtivemos zero.

328
00:21:09,320 --> 00:21:11,320
E quanto aos loops cujo número de enrolamento

329
00:21:11,320 --> 00:21:13,320
é zero, você simplesmente não os explora mais.

330
00:21:13,320 --> 00:21:18,520
Talvez eles tenham uma solução interna, talvez não, não temos garantias.

331
00:21:18,520 --> 00:21:22,072
E deixando o nosso solucionador de equações continuar da mesma

332
00:21:22,072 --> 00:21:26,020
maneira, eventualmente converge para muitos zeros para este polinómio.

333
00:21:26,020 --> 00:21:29,080
A propósito, não é coincidência que o número total

334
00:21:29,080 --> 00:21:31,660
de enrolamentos neste exemplo tenha sido 5.

335
00:21:31,660 --> 00:21:38,620
Com números complexos, a operação x elevado a n corresponde diretamente a percorrer

336
00:21:38,620 --> 00:21:45,000
a origem da saída n vezes enquanto você percorre a origem da entrada uma vez.

337
00:21:45,000 --> 00:21:48,715
Assim, com o polinômio, para entradas grandes o suficiente, todos os

338
00:21:48,715 --> 00:21:52,700
termos, exceto o termo principal, tornam-se insignificantes em comparação.

339
00:21:52,700 --> 00:21:56,645
Portanto, qualquer polinômio complexo cujo termo inicial seja x elevado

340
00:21:56,645 --> 00:22:00,700
a n tem um número sinuoso de n em torno de um loop suficientemente grande.

341
00:22:00,700 --> 00:22:04,293
E dessa forma, a nossa tecnologia de números sinuosos

342
00:22:04,293 --> 00:22:07,620
garante que cada polinómio complexo tenha um zero.

343
00:22:07,620 --> 00:22:10,954
Este é um fato tão importante que os matemáticos

344
00:22:10,954 --> 00:22:13,880
o chamam de teorema fundamental da álgebra.

345
00:22:13,880 --> 00:22:17,840
Ter um algoritmo para encontrar soluções numéricas para equações como essa é

346
00:22:17,840 --> 00:22:21,902
extremamente prático, mas o teorema fundamental da álgebra é um bom exemplo de

347
00:22:21,902 --> 00:22:26,171
como esses números sinuosos também são bastante úteis no nível teórico, garantindo

348
00:22:26,171 --> 00:22:30,131
a existência de uma solução para uma ampla classe de equações para condições

349
00:22:30,131 --> 00:22:34,400
adequadas, que é muito mais o tipo de coisa em que os matemáticos gostam de pensar.

350
00:22:34,400 --> 00:22:39,267
Mostrarei mais algumas aplicações incríveis disso no contexto da topologia em um vídeo

351
00:22:39,267 --> 00:22:44,080
de acompanhamento, que inclui a correção de um erro de um vídeo antigo do 3blue1brown.

352
00:22:44,080 --> 00:22:45,080
Qual deles?

353
00:22:45,080 --> 00:22:48,569
Bem, assista a todos os vídeos, tudo neste canal,

354
00:22:48,569 --> 00:22:51,640
e veja se consegue detectar o erro primeiro.

355
00:22:51,640 --> 00:22:53,890
O autor principal deste vídeo é um dos mais novos

356
00:22:53,890 --> 00:22:55,960
membros da equipe 3blue1brown, Sridhar Ramesh.

