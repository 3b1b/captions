1
00:00:00,000 --> 00:00:06,720
Há duas coisas aqui, o tópico principal e o metatópico.

2
00:00:06,720 --> 00:00:10,236
O tópico principal será esse algoritmo realmente bacana para resolver

3
00:00:10,236 --> 00:00:13,602
equações bidimensionais, coisas que possuem duas incógnitas reais,

4
00:00:13,602 --> 00:00:17,420
ou também aquelas que envolvem uma única incógnita que é um número complexo.

5
00:00:17,420 --> 00:00:21,242
Por exemplo, se você quisesse encontrar as raízes complexas de um polinômio,

6
00:00:21,242 --> 00:00:25,262
ou talvez alguns daqueles zeros de milhões de dólares da função zeta de Riemann,

7
00:00:25,262 --> 00:00:27,000
este algoritmo faria isso por você.

8
00:00:27,000 --> 00:00:30,520
E esse método é super bonito, já que envolve muitas cores.

9
00:00:30,520 --> 00:00:34,923
E o mais importante, a ideia central subjacente se aplica a todos os tipos de matemática,

10
00:00:34,923 --> 00:00:39,034
muito além deste algoritmo para resolver equações, incluindo um pouco de topologia,

11
00:00:39,034 --> 00:00:40,600
sobre a qual falarei mais tarde.

12
00:00:40,600 --> 00:00:44,459
Mas o que realmente faz com que isso valha cerca de 20 minutos do

13
00:00:44,459 --> 00:00:48,494
seu tempo é que ele ilustra uma lição muito mais útil em matemática,

14
00:00:48,494 --> 00:00:52,120
que é tentar definir construções que se combinem bem entre si.

15
00:00:52,120 --> 00:00:55,460
Você verá o que quero dizer com isso à medida que a história avança.

16
00:00:55,460 --> 00:00:59,282
Para motivar o caso com funções que possuem entradas 2d e saídas 2d,

17
00:00:59,282 --> 00:01:04,268
vamos começar de forma mais simples, com funções que apenas pegam um número real e cospem

18
00:01:04,268 --> 00:01:05,100
um número real.

19
00:01:05,100 --> 00:01:09,447
Se você quiser saber quando uma função f de x é igual a alguma outra função g de x,

20
00:01:09,447 --> 00:01:13,949
você pode pensar nisso como uma busca por quando os gráficos dessas funções se cruzam,

21
00:01:13,949 --> 00:01:14,260
certo?

22
00:01:14,260 --> 00:01:19,340
Quero dizer, isso fornece uma entrada onde ambas as funções têm a mesma saída.

23
00:01:19,340 --> 00:01:22,490
Para dar um exemplo muito simples, imagine que f de

24
00:01:22,490 --> 00:01:25,520
x é x ao quadrado e g de x é a função constante 2.

25
00:01:25,520 --> 00:01:29,620
Em outras palavras, você deseja encontrar a raiz quadrada de 2.

26
00:01:29,620 --> 00:01:33,793
Mesmo que você não saiba quase nada sobre como encontrar raízes quadradas,

27
00:01:33,793 --> 00:01:38,689
provavelmente poderá ver que 1 ao quadrado é menor que 2 e 2 ao quadrado é maior que 2,

28
00:01:38,689 --> 00:01:42,640
então você percebe, ah, haverá alguma solução entre esses dois valores.

29
00:01:42,640 --> 00:01:44,799
E então, se você quiser restringir ainda mais,

30
00:01:44,799 --> 00:01:47,740
talvez você tente elevar ao quadrado o ponto intermediário, 1.5.

31
00:01:47,740 --> 00:01:54,940
Isso resulta em 2.25, um pouco alto demais, então você focaria na região entre 1 e 1.5.

32
00:01:54,940 --> 00:01:59,529
E assim por diante, você provavelmente pode ver como isso continuaria,

33
00:01:59,529 --> 00:02:04,764
você continuaria computando no ponto médio e depois cortaria seu espaço de busca

34
00:02:04,764 --> 00:02:05,540
pela metade.

35
00:02:05,540 --> 00:02:08,954
Outra maneira de pensar sobre isto, que nos tornará mais fácil

36
00:02:08,954 --> 00:02:12,694
quando chegarmos a dimensões superiores, é concentrar-nos na questão

37
00:02:12,694 --> 00:02:16,380
equivalente para quando a diferença entre estas duas funções é zero.

38
00:02:16,380 --> 00:02:20,299
Nesses termos, encontramos uma região de insumos onde essa

39
00:02:20,299 --> 00:02:24,020
diferença era negativa em uma ponta e positiva na outra.

40
00:02:24,020 --> 00:02:27,913
Nós o dividimos em dois, e a metade para a qual concentramos nossa atenção

41
00:02:27,913 --> 00:02:31,600
foi aquela em que os pontos mais externos apresentavam sinais variados.

42
00:02:31,600 --> 00:02:36,264
Assim, conseguimos continuar indefinidamente, pegando cada região com sinais

43
00:02:36,264 --> 00:02:40,626
variados na fronteira, encontrando uma região menor entre suas metades,

44
00:02:40,626 --> 00:02:45,290
sabendo que em última análise teremos que nos estreitar em um ponto que será

45
00:02:45,290 --> 00:02:46,260
exatamente zero.

46
00:02:46,260 --> 00:02:50,717
Resumindo, resolver equações sempre pode ser enquadrado como encontrar quando uma

47
00:02:50,717 --> 00:02:54,902
determinada função é igual a zero, e para fazer isso, temos esta heurística,

48
00:02:54,902 --> 00:02:58,000
se f for positivo em um ponto e negativo em outro ponto,

49
00:02:58,000 --> 00:03:02,784
você pode encontrar algum lugar entre onde é zero, pelo menos se tudo mudar suavemente,

50
00:03:02,784 --> 00:03:03,980
sem saltos repentinos.

51
00:03:03,980 --> 00:03:09,399
A coisa incrível que quero mostrar é que você pode estender esse tipo de pensamento para

52
00:03:09,399 --> 00:03:14,026
equações bidimensionais, equações entre funções cujas entradas e saídas são

53
00:03:14,026 --> 00:03:14,940
bidimensionais.

54
00:03:14,940 --> 00:03:18,312
Por exemplo, os números complexos são 2D e esta ferramenta que estamos

55
00:03:18,312 --> 00:03:21,780
desenvolvendo é perfeita para encontrar soluções para equações complexas.

56
00:03:21,780 --> 00:03:25,228
Agora, já que falaremos tanto sobre essas funções 2D,

57
00:03:25,228 --> 00:03:29,380
vamos dar um breve passo lateral e considerar como as ilustramos.

58
00:03:29,380 --> 00:03:34,702
Representar graficamente uma função com entrada e saída 2D exigiria quatro dimensões,

59
00:03:34,702 --> 00:03:38,911
e isso não funcionará tão bem em nosso mundo 3D em nossas telas 2D,

60
00:03:38,911 --> 00:03:41,140
mas ainda temos algumas boas opções.

61
00:03:41,140 --> 00:03:46,020
Uma é apenas observar o espaço de entrada e o espaço de saída lado a lado.

62
00:03:46,020 --> 00:03:50,688
Cada ponto no espaço de entrada se move para um ponto específico no espaço de saída,

63
00:03:50,688 --> 00:03:54,258
e posso mostrar como o movimento em torno desse ponto de entrada

64
00:03:54,258 --> 00:03:57,060
corresponde a certos movimentos no espaço de saída.

65
00:03:57,060 --> 00:04:00,056
Todas as funções que consideramos serão contínuas,

66
00:04:00,056 --> 00:04:04,757
no sentido de que pequenas alterações na entrada correspondem apenas a pequenas

67
00:04:04,757 --> 00:04:07,460
alterações na saída, não há saltos repentinos.

68
00:04:07,460 --> 00:04:12,542
Outra opção que temos é imaginar a seta desde a origem do espaço de saída até esse

69
00:04:12,542 --> 00:04:17,380
ponto de saída e anexar uma versão em miniatura dessa seta ao ponto de entrada.

70
00:04:17,380 --> 00:04:22,450
Isso pode nos dar uma ideia rápida de para onde vai um determinado ponto de entrada ou

71
00:04:22,450 --> 00:04:27,580
para onde vão muitos pontos de entrada diferentes, desenhando o campo vetorial completo.

72
00:04:27,580 --> 00:04:31,496
E, infelizmente, quando você faz isso em muitos pontos, pode ficar bastante confuso,

73
00:04:31,496 --> 00:04:33,983
então deixe-me fazer todas as setas do mesmo tamanho,

74
00:04:33,983 --> 00:04:37,900
e o que isso significa é que podemos ter uma noção da direção de cada ponto de saída.

75
00:04:37,900 --> 00:04:41,971
Mas talvez a maneira mais bonita de ilustrar funções bidimensionais,

76
00:04:41,971 --> 00:04:46,809
e a que mais usaremos neste vídeo, seja associar cada ponto nesse espaço de saída

77
00:04:46,809 --> 00:04:47,400
a uma cor.

78
00:04:47,400 --> 00:04:52,451
Aqui usamos matizes, é onde a cor cai ao longo de um arco-íris ou roda de cores,

79
00:04:52,451 --> 00:04:56,318
para corresponder à direção oposta à origem, e estamos usando

80
00:04:56,318 --> 00:05:00,060
escuridão ou brilho para corresponder à distância da origem.

81
00:05:00,060 --> 00:05:02,804
Por exemplo, focando neste conjunto de resultados,

82
00:05:02,804 --> 00:05:06,303
todos estes pontos são vermelhos, mas os mais próximos da origem

83
00:05:06,303 --> 00:05:10,340
são um pouco mais escuros e os mais distantes são um pouco mais brilhantes.

84
00:05:10,340 --> 00:05:14,797
E focando neste conjunto de resultados, todos os pontos são verdes e, novamente,

85
00:05:14,797 --> 00:05:18,980
mais perto da origem significa mais escuro, mais longe significa mais claro.

86
00:05:18,980 --> 00:05:22,090
E assim por diante, tudo o que estamos fazendo aqui é atribuir

87
00:05:22,090 --> 00:05:25,300
uma cor específica para cada direção, tudo mudando continuamente.

88
00:05:25,300 --> 00:05:29,496
Você pode notar que as diferenças de escuridão e brilho aqui são bastante sutis,

89
00:05:29,496 --> 00:05:33,020
mas para este vídeo, tudo o que nos importa é a direção das saídas,

90
00:05:33,020 --> 00:05:35,300
não as magnitudes, os matizes, não o brilho.

91
00:05:35,300 --> 00:05:40,460
A única coisa importante que você deve notar sobre o brilho é que perto da origem,

92
00:05:40,460 --> 00:05:44,440
que não tem uma direção específica, todas as cores ficam pretas.

93
00:05:44,440 --> 00:05:49,367
Então, para pensar em funções, agora que decidimos uma cor para cada saída,

94
00:05:49,367 --> 00:05:54,034
podemos visualizar funções 2D colorindo cada ponto no espaço de entrada

95
00:05:54,034 --> 00:05:57,860
com base na cor do ponto onde ele pousa no espaço de saída.

96
00:05:57,860 --> 00:06:02,531
Gosto de imaginar muitos pontos diferentes desse espaço de entrada saltando para suas

97
00:06:02,531 --> 00:06:07,094
saídas correspondentes no espaço de saída, depois sendo pintados com base na cor do

98
00:06:07,094 --> 00:06:11,820
ponto onde pousaram e depois voltando para o local de onde vieram no espaço de entrada.

99
00:06:11,820 --> 00:06:13,953
Fazendo isso para cada ponto no espaço de entrada,

100
00:06:13,953 --> 00:06:17,215
você pode ter uma ideia apenas olhando para esse espaço de entrada para saber

101
00:06:17,215 --> 00:06:19,140
aproximadamente onde a função leva cada ponto.

102
00:06:19,140 --> 00:06:24,506
Por exemplo, esta faixa de pontos rosa à esquerda nos diz que todos esses pontos são

103
00:06:24,506 --> 00:06:30,000
mapeados em algum lugar na direção rosa, na parte inferior esquerda do espaço de saída.

104
00:06:30,000 --> 00:06:37,120
Além disso, aqueles três pontos pretos com muitas cores ao redor são os que vão para zero.

105
00:06:37,120 --> 00:06:43,450
Tudo bem, assim como no caso 1D, a resolução de equações de funções 2D sempre

106
00:06:43,450 --> 00:06:49,780
pode ser reformulada perguntando quando uma determinada função é igual a zero.

107
00:06:49,780 --> 00:06:55,381
Então esse é o nosso desafio agora, criar um algoritmo que descubra

108
00:06:55,381 --> 00:07:00,900
quais pontos de entrada de uma determinada função 2D vão para zero.

109
00:07:00,900 --> 00:07:04,826
Você pode apontar que se estiver olhando para um mapa de cores como este

110
00:07:04,826 --> 00:07:08,700
vendo aqueles pontos pretos, você já sabe onde estão os zeros da função.

111
00:07:08,700 --> 00:07:11,460
Então isso conta?

112
00:07:11,460 --> 00:07:14,445
Tenha em mente que para criar um diagrama como este,

113
00:07:14,445 --> 00:07:18,839
fizemos com que o computador calculasse a função em todos os pixels do plano,

114
00:07:18,839 --> 00:07:23,121
mas nosso objetivo é encontrar um algoritmo mais eficiente que exija apenas

115
00:07:23,121 --> 00:07:26,276
calcular a função no menor número possível de pontos. ,

116
00:07:26,276 --> 00:07:29,600
tendo apenas uma visão limitada das cores, por assim dizer.

117
00:07:29,600 --> 00:07:33,876
E também de um ponto de vista mais teórico, seria bom ter uma construção geral que nos

118
00:07:33,876 --> 00:07:38,300
informasse as condições para a existência ou não de zero dentro de uma determinada região.

119
00:07:38,300 --> 00:07:43,327
Lembre-se, em uma dimensão o principal insight foi que se uma função contínua é

120
00:07:43,327 --> 00:07:48,920
positiva em um ponto e negativa em outro, em algum ponto intermediário ela deve ser zero.

121
00:07:48,920 --> 00:07:50,960
Então, como estendemos isso para duas dimensões?

122
00:07:50,960 --> 00:07:55,180
Precisamos de algum tipo de analogia para falar sobre signos.

123
00:07:55,180 --> 00:07:59,140
Uma maneira de pensar sobre o que são os sinais são as direções.

124
00:07:59,140 --> 00:08:01,602
Positivo significa que você está apontando para a direita ao longo da

125
00:08:01,602 --> 00:08:04,240
reta numérica e negativo significa que você está apontando para a esquerda.

126
00:08:04,240 --> 00:08:06,652
As quantidades bidimensionais também têm direção,

127
00:08:06,652 --> 00:08:08,920
mas para elas as opções são muito mais amplas,

128
00:08:08,920 --> 00:08:12,780
podem apontar para qualquer lugar ao longo de todo um círculo de possibilidades.

129
00:08:12,780 --> 00:08:17,569
Então, da mesma forma que em uma dimensão estávamos perguntando se uma

130
00:08:17,569 --> 00:08:22,224
determinada função é positiva ou negativa no limite de um intervalo,

131
00:08:22,224 --> 00:08:28,228
que é apenas dois pontos, para funções 2d estaremos olhando para o limite de uma região,

132
00:08:28,228 --> 00:08:33,760
que é um loop e pergunte sobre a direção da saída da função ao longo desse limite.

133
00:08:33,760 --> 00:08:37,190
Por exemplo, vemos que ao longo deste loop em torno deste zero,

134
00:08:37,190 --> 00:08:41,264
a saída passa por todas as direções possíveis, todas as cores do arco-íris,

135
00:08:41,264 --> 00:08:45,820
vermelho, amarelo, verde, azul, de volta ao vermelho e tudo mais ao longo do caminho.

136
00:08:45,820 --> 00:08:48,885
Mas ao longo deste loop aqui, sem zeros dentro dele,

137
00:08:48,885 --> 00:08:53,453
a saída não passa por todas as cores, passa por algumas das cores alaranjadas,

138
00:08:53,453 --> 00:08:55,420
mas nunca, digamos, verde ou azul.

139
00:08:55,420 --> 00:08:59,320
E isso é promissor, parece muito com o modo como as coisas funcionavam em uma dimensão.

140
00:08:59,320 --> 00:09:03,781
Talvez da mesma forma que se uma função 1d recebe ambos os sinais possíveis

141
00:09:03,781 --> 00:09:07,596
no limite de uma região 1d, havia um zero em algum lugar dentro,

142
00:09:07,596 --> 00:09:11,881
poderíamos levantar a hipótese de que se uma função 2d atingir saídas de

143
00:09:11,881 --> 00:09:15,110
todas as direções possíveis, todas as cores possíveis,

144
00:09:15,110 --> 00:09:19,277
ao longo do limite de uma região 2d, então em algum lugar dentro dessa

145
00:09:19,277 --> 00:09:20,980
região ele deve ir para zero.

146
00:09:20,980 --> 00:09:24,348
Então esse é o nosso palpite, e pare um momento para pensar

147
00:09:24,348 --> 00:09:27,660
se isso deveria ser verdade e, em caso afirmativo, por quê.

148
00:09:27,660 --> 00:09:31,517
Se começarmos a pensar em um pequeno loop em torno de algum ponto de entrada,

149
00:09:31,517 --> 00:09:34,484
sabemos que, como tudo é contínuo, nossa função o leva a um

150
00:09:34,484 --> 00:09:36,660
pequeno loop próximo à saída correspondente.

151
00:09:36,660 --> 00:09:41,140
Mas veja, para a maioria dos loops minúsculos, a saída varia em cor.

152
00:09:41,140 --> 00:09:45,094
Se você escolher qualquer ponto de saída diferente de zero e desenhar um loop

153
00:09:45,094 --> 00:09:49,555
suficientemente estreito próximo a ele, as cores do loop serão todas da mesma cor desse

154
00:09:49,555 --> 00:09:49,860
ponto.

155
00:09:49,860 --> 00:09:54,640
Um laço apertado aqui é todo azulado, um laço apertado aqui é todo amarelado,

156
00:09:54,640 --> 00:09:58,440
você certamente não vai conseguir todas as cores do arco-íris.

157
00:09:58,440 --> 00:10:02,780
O único ponto onde você pode apertar os laços ao redor dele e

158
00:10:02,780 --> 00:10:07,120
ainda obter todas as cores é a origem incolor, o próprio zero.

159
00:10:07,120 --> 00:10:12,039
Portanto, é verdade que se você tiver laços passando por todas as cores do arco-íris,

160
00:10:12,039 --> 00:10:14,957
apertando e apertando, estreitando-se em um ponto,

161
00:10:14,957 --> 00:10:17,360
então esse ponto deve ser de fato um zero.

162
00:10:17,360 --> 00:10:19,712
E então vamos configurar um solucionador de equações 2D

163
00:10:19,712 --> 00:10:22,360
exatamente como nosso solucionador de equações unidimensionais.

164
00:10:22,360 --> 00:10:26,827
Quando encontrarmos uma região grande cuja borda passa por todas as cores,

165
00:10:26,827 --> 00:10:30,640
divida-a em duas e observe as cores na fronteira de cada metade.

166
00:10:30,640 --> 00:10:35,310
No exemplo mostrado aqui, a borda da metade esquerda não passa por todas as cores,

167
00:10:35,310 --> 00:10:39,080
não há pontos mapeados nas direções laranja-amarelado, por exemplo.

168
00:10:39,080 --> 00:10:43,480
Portanto, deixarei esta área em cinza como forma de dizer que não queremos pesquisar mais.

169
00:10:43,480 --> 00:10:47,399
A metade direita passa por todas as cores, passa muito tempo na direção verde,

170
00:10:47,399 --> 00:10:51,120
depois passa pelo amarelo laranja vermelho e também pelo azul violeta rosa.

171
00:10:51,120 --> 00:10:54,300
Agora lembre-se, o que isso significa é que os pontos desta

172
00:10:54,300 --> 00:10:57,800
fronteira são mapeados para saídas de todas as direções possíveis.

173
00:10:57,800 --> 00:11:02,900
Então vamos explorar mais, subdividindo novamente e verificando o limite de cada região.

174
00:11:02,900 --> 00:11:07,000
O limite do topo é todo verde, então vamos parar de procurar aí.

175
00:11:07,000 --> 00:11:10,500
Mas o fundo é colorido o suficiente para merecer uma subdivisão.

176
00:11:10,500 --> 00:11:12,420
E continue assim.

177
00:11:12,420 --> 00:11:16,408
Verifique qual sub-região tem um limite que cobre todas as cores possíveis,

178
00:11:16,408 --> 00:11:21,027
o que significa que os pontos desse limite são mapeados em todas as direções possíveis,

179
00:11:21,027 --> 00:11:25,436
e continue cortando essas regiões pela metade, como fizemos no caso unidimensional,

180
00:11:25,436 --> 00:11:29,320
eventualmente nos levando a um zero sobre a função. Ah, espere um segundo.

181
00:11:29,320 --> 00:11:30,320
O que aconteceu aqui?

182
00:11:30,320 --> 00:11:35,273
Nenhuma das últimas subdivisões no canto inferior direito passou por todas as cores,

183
00:11:35,273 --> 00:11:39,411
então nosso algoritmo parou porque não queria pesquisar nenhuma delas,

184
00:11:39,411 --> 00:11:41,160
mas também não encontrou zero.

185
00:11:41,160 --> 00:11:43,720
Ok, claramente algo está errado aqui.

186
00:11:43,720 --> 00:11:46,680
E tudo bem, estar errado é uma parte normal da matemática.

187
00:11:46,680 --> 00:11:49,312
Se olharmos para trás, tínhamos essa hipótese,

188
00:11:49,312 --> 00:11:53,680
e ela nos levou a esse algoritmo proposto, então nos enganamos em algum lugar.

189
00:11:53,680 --> 00:11:56,816
E ser bom em matemática não é acertar na primeira vez,

190
00:11:56,816 --> 00:12:00,923
é ter resiliência para olhar para trás com cuidado e entender os erros,

191
00:12:00,923 --> 00:12:02,520
e entender como corrigi-los.

192
00:12:02,520 --> 00:12:05,533
Agora, o problema aqui é que tínhamos uma região cuja fronteira

193
00:12:05,533 --> 00:12:08,264
passava por todas as cores, mas quando dividimos ao meio,

194
00:12:08,264 --> 00:12:11,324
nenhuma das fronteiras da sub-região passava por todas as cores,

195
00:12:11,324 --> 00:12:15,280
não tínhamos opções de onde continuar pesquisando e isso quebrou o zero localizador.

196
00:12:15,280 --> 00:12:18,120
Agora, em uma dimensão, esse tipo de coisa nunca aconteceu.

197
00:12:18,120 --> 00:12:22,791
Sempre que você tiver um intervalo cujos pontos finais têm sinais diferentes,

198
00:12:22,791 --> 00:12:26,504
se você dividi-lo, saberá que obterá algum subintervalo cujos

199
00:12:26,504 --> 00:12:29,200
pontos finais também terão sinais diferentes.

200
00:12:29,200 --> 00:12:32,438
Ou dito de outra forma, sempre que você tiver dois intervalos

201
00:12:32,438 --> 00:12:35,571
cujas extremidades não mudam de sinal, se você combiná-los,

202
00:12:35,571 --> 00:12:39,280
obterá um intervalo maior cujas extremidades também não mudam de sinal.

203
00:12:39,280 --> 00:12:42,724
Mas em duas dimensões, é possível encontrar duas regiões cujas

204
00:12:42,724 --> 00:12:46,168
fronteiras não passam por todas as cores, mas cujos limites se

205
00:12:46,168 --> 00:12:49,940
combinam para dar uma região cuja fronteira passa por todas as cores.

206
00:12:49,940 --> 00:12:53,740
E foi exatamente dessa maneira que nosso algoritmo proposto para encontrar o zero quebrou.

207
00:12:53,740 --> 00:12:58,266
Na verdade, se você pensar bem, poderá encontrar um grande loop cuja

208
00:12:58,266 --> 00:13:03,120
borda passa por todas as cores possíveis sem que haja um zero dentro dele.

209
00:13:03,120 --> 00:13:06,410
Agora, isso não quer dizer que estávamos errados em nossas afirmações

210
00:13:06,410 --> 00:13:09,560
sobre loops minúsculos quando dissemos que um loop que se estreita

211
00:13:09,560 --> 00:13:13,040
continuamente passando por todas as cores tem que se estreitar em um zero.

212
00:13:13,040 --> 00:13:16,257
Mas o que complicou tudo para nós é que essa propriedade do tipo

213
00:13:16,257 --> 00:13:19,228
&quot;minha fronteira passa por todas as cores ou não&quot;

214
00:13:19,228 --> 00:13:23,040
não se combina de maneira agradável e previsível quando você combina regiões.

215
00:13:23,040 --> 00:13:30,220
Mas não se preocupe, podemos modificar isso um pouco para uma

216
00:13:30,220 --> 00:13:38,560
propriedade mais sofisticada que se combine para nos dar o que queremos.

217
00:13:38,560 --> 00:13:41,476
A ideia é que, em vez de simplesmente perguntar se podemos

218
00:13:41,476 --> 00:13:44,590
encontrar uma cor em algum ponto do loop, vamos acompanhar com

219
00:13:44,590 --> 00:13:48,100
mais cuidado como essas cores mudam à medida que percorremos esse loop.

220
00:13:48,100 --> 00:13:50,060
Deixe-me mostrar o que quero dizer com um exemplo.

221
00:13:50,060 --> 00:13:54,120
Vou manter uma pequena roda de cores aqui no canto para nos ajudar a acompanhar.

222
00:13:54,120 --> 00:13:57,970
Quando as cores ao longo de um caminho de entradas se movem através do arco-íris

223
00:13:57,970 --> 00:14:01,774
em uma direção específica, do vermelho para o amarelo, do amarelo para o verde,

224
00:14:01,774 --> 00:14:05,720
do verde para o azul ou do azul para o vermelho, a saída oscila no sentido horário.

225
00:14:05,720 --> 00:14:09,692
Mas, por outro lado, se as cores se movem no sentido inverso no arco-íris,

226
00:14:09,692 --> 00:14:12,181
do azul para o verde, do verde para o amarelo,

227
00:14:12,181 --> 00:14:15,094
do amarelo para o vermelho ou do vermelho para o azul,

228
00:14:15,094 --> 00:14:17,160
a saída oscila no sentido anti-horário.

229
00:14:17,160 --> 00:14:19,795
Então, caminhando por esse caminho curto aqui,

230
00:14:19,795 --> 00:14:24,226
as cores serpenteiam um quinto do caminho no sentido horário na roda de cores,

231
00:14:24,226 --> 00:14:28,769
e andando por esse caminho aqui, as cores serpenteiam outro quinto do caminho no

232
00:14:28,769 --> 00:14:30,620
sentido horário na roda de cores.

233
00:14:30,620 --> 00:14:34,915
Claro, isso significa que se você seguir os dois caminhos, um após o outro,

234
00:14:34,915 --> 00:14:39,380
as cores girarão um total de dois quintos de volta completa no sentido horário.

235
00:14:39,380 --> 00:14:43,902
A quantidade total de enrolamento simplesmente aumenta, e isso será fundamental,

236
00:14:43,902 --> 00:14:47,140
esse é o tipo de combinação direta que será útil para nós.

237
00:14:47,140 --> 00:14:51,090
Quando digo quantidade total de enrolamento, quero que você imagine

238
00:14:51,090 --> 00:14:55,272
um hodômetro antigo que avança enquanto a seta gira no sentido horário,

239
00:14:55,272 --> 00:14:58,700
mas para trás enquanto a seta gira no sentido anti-horário.

240
00:14:58,700 --> 00:15:00,794
Portanto, o enrolamento no sentido anti-horário

241
00:15:00,794 --> 00:15:03,020
conta como enrolamento negativo no sentido horário.

242
00:15:03,020 --> 00:15:07,792
As saídas podem girar muito, mas se parte dessa rotação for na direção oposta,

243
00:15:07,792 --> 00:15:08,940
ela será cancelada.

244
00:15:08,940 --> 00:15:13,705
Por exemplo, se você avançar nesse caminho e depois retroceder nesse mesmo caminho,

245
00:15:13,705 --> 00:15:16,655
a quantidade total de enrolamento acaba sendo zero,

246
00:15:16,655 --> 00:15:21,137
o movimento para trás literalmente retrocede pelas cores vistas anteriormente,

247
00:15:21,137 --> 00:15:25,562
invertendo todo o enrolamento anterior e retornando o hodômetro de volta para

248
00:15:25,562 --> 00:15:26,300
onde começou.

249
00:15:26,300 --> 00:15:28,435
Para nossos propósitos, nos preocuparemos mais

250
00:15:28,435 --> 00:15:30,480
em observar o enrolamento ao longo dos loops.

251
00:15:30,480 --> 00:15:34,280
Por exemplo, digamos que percorremos todo esse loop no sentido horário.

252
00:15:34,280 --> 00:15:38,581
As saídas que encontramos giram em torno de um total de três voltas

253
00:15:38,581 --> 00:15:42,565
completas no sentido horário, as cores oscilavam no arco-íris,

254
00:15:42,565 --> 00:15:47,120
em ordem, de vermelho para vermelho novamente, e novamente, e novamente.

255
00:15:47,120 --> 00:15:51,773
No jargão usado pelos matemáticos, dizemos que ao longo deste loop,

256
00:15:51,773 --> 00:15:54,100
o número total do enrolamento é 3.

257
00:15:54,100 --> 00:15:57,439
Para outros loops, pode ser qualquer outro número inteiro,

258
00:15:57,439 --> 00:16:01,626
talvez um número maior se a saída oscilar muitas vezes enquanto a entrada

259
00:16:01,626 --> 00:16:06,041
percorre um único loop, ou pode ser um número menor se a saída oscilar apenas

260
00:16:06,041 --> 00:16:07,060
uma ou duas vezes.

261
00:16:07,060 --> 00:16:10,316
Ou esse número do enrolamento poderia até ser um número inteiro negativo,

262
00:16:10,316 --> 00:16:13,132
se a saída estivesse oscilando no sentido anti-horário enquanto

263
00:16:13,132 --> 00:16:15,200
caminhamos no sentido horário ao redor do loop.

264
00:16:15,200 --> 00:16:17,367
Mas ao longo de qualquer loop, esta quantidade

265
00:16:17,367 --> 00:16:19,720
total de enrolamento tem que ser um número inteiro.

266
00:16:19,720 --> 00:16:23,134
Quero dizer, quando você voltar ao ponto de partida,

267
00:16:23,134 --> 00:16:25,840
terá o mesmo resultado com o qual começou.

268
00:16:25,840 --> 00:16:30,579
Aliás, se um caminho realmente contém um ponto onde a saída é precisamente zero,

269
00:16:30,579 --> 00:16:34,908
então tecnicamente você não pode definir um número sinuoso ao longo dele,

270
00:16:34,908 --> 00:16:37,600
já que a saída não tem uma direção específica.

271
00:16:37,600 --> 00:16:42,364
Isso não será um problema para nós, porque todo o nosso objetivo é encontrar zeros,

272
00:16:42,364 --> 00:16:45,200
então, se isso acontecer, tivemos sorte mais cedo.

273
00:16:45,200 --> 00:16:50,157
A principal coisa a notar sobre esses números sinuosos é que eles

274
00:16:50,157 --> 00:16:55,040
somam muito bem quando você combina caminhos em caminhos maiores.

275
00:16:55,040 --> 00:16:59,080
Mas o que realmente queremos é que os números sinuosos ao longo das fronteiras

276
00:16:59,080 --> 00:17:03,120
das regiões aumentem bem quando combinamos regiões para formar regiões maiores.

277
00:17:03,120 --> 00:17:06,320
Então, temos essa propriedade?

278
00:17:06,320 --> 00:17:09,600
Bem, dê uma olhada.

279
00:17:09,600 --> 00:17:13,864
O número do enrolamento, à medida que avançamos no sentido horário em torno desta

280
00:17:13,864 --> 00:17:17,920
região à esquerda, é a soma dos números do enrolamento destes quatro caminhos.

281
00:17:17,920 --> 00:17:21,778
E o enrolamento, à medida que avançamos no sentido horário em torno desta

282
00:17:21,778 --> 00:17:25,480
região à direita, é a soma dos números sinuosos destes quatro caminhos.

283
00:17:25,480 --> 00:17:28,724
E quando combinamos essas duas regiões numa região maior,

284
00:17:28,724 --> 00:17:33,760
a maioria desses caminhos tornam-se parte da fronteira no sentido horário da região maior.

285
00:17:33,760 --> 00:17:36,040
E quanto a esses dois caminhos que não funcionam?

286
00:17:36,040 --> 00:17:40,177
Eles se cancelam perfeitamente, um deles é justamente o inverso,

287
00:17:40,177 --> 00:17:42,660
o retrocesso do outro como vimos antes.

288
00:17:42,660 --> 00:17:45,666
Portanto, os números sinuosos ao longo das fronteiras

289
00:17:45,666 --> 00:17:48,840
das regiões somam-se exatamente da maneira que desejamos.

290
00:17:48,840 --> 00:17:53,053
Além disso, observe que esse raciocínio sobre fronteiras orientadas que se somam

291
00:17:53,053 --> 00:17:57,320
bem assim aparece muito na matemática e geralmente é chamado de teorema de Stokes.

292
00:17:57,320 --> 00:18:02,880
Aqueles de vocês que estudaram cálculo multivariável podem reconhecê-lo nesse contexto.

293
00:18:02,880 --> 00:18:05,394
Então agora, finalmente, com os números sinuosos em mãos,

294
00:18:05,394 --> 00:18:08,040
podemos voltar aos nossos objetivos de resolução de equações.

295
00:18:08,040 --> 00:18:10,935
O problema com a região que vimos anteriormente é que,

296
00:18:10,935 --> 00:18:14,198
embora a sua fronteira passasse por todas as cores possíveis,

297
00:18:14,198 --> 00:18:16,620
o número do enrolamento era, na verdade, zero.

298
00:18:16,620 --> 00:18:20,591
As saídas giraram na metade do caminho, do amarelo para o vermelho,

299
00:18:20,591 --> 00:18:24,622
e então começaram a voltar no sentido anti-horário na outra direção,

300
00:18:24,622 --> 00:18:29,061
depois continuaram passando pelo azul e atingindo o vermelho do outro lado,

301
00:18:29,061 --> 00:18:32,040
tudo de tal forma que o enrolamento total foi zero.

302
00:18:32,040 --> 00:18:35,266
Mas se você encontrar um loop que não apenas atinge todas as cores,

303
00:18:35,266 --> 00:18:39,252
mas também tem a condição mais forte de um número de enrolamento diferente de zero,

304
00:18:39,252 --> 00:18:43,380
então, se você o dividir ao meio, terá a garantia de que pelo menos uma dessas metades

305
00:18:43,380 --> 00:18:46,037
terá um número de enrolamento diferente de zero também,

306
00:18:46,037 --> 00:18:48,600
já que as coisas se somam bem da maneira que queremos.

307
00:18:48,600 --> 00:18:54,280
Dessa forma, você pode continuar, estreitando-se cada vez mais em um ponto.

308
00:18:54,280 --> 00:18:57,654
E à medida que você se estreita em um ponto, você o fará com pequenos

309
00:18:57,654 --> 00:19:00,401
loops que têm números de enrolamento diferentes de zero,

310
00:19:00,401 --> 00:19:03,872
o que implica que eles passam por todas as cores possíveis e, portanto,

311
00:19:03,872 --> 00:19:07,680
como eu disse antes, o ponto em que eles estão se estreitando on deve ser zero.

312
00:19:07,680 --> 00:19:08,760
E é isso!

313
00:19:08,760 --> 00:19:12,650
Agora criamos um solucionador de equações bidimensional e,

314
00:19:12,650 --> 00:19:14,760
desta vez, prometo, não há bugs.

315
00:19:14,760 --> 00:19:16,589
Os números sinuosos são precisamente a ferramenta

316
00:19:16,589 --> 00:19:18,200
de que precisamos para fazer isso funcionar.

317
00:19:18,200 --> 00:19:22,837
Agora podemos resolver equações que se parecem com onde f de x é igual a g

318
00:19:22,837 --> 00:19:27,660
de x em duas dimensões, apenas considerando como a diferença entre f e g gira.

319
00:19:27,660 --> 00:19:30,598
Sempre que tivermos um loop cujo número de enrolamento não é zero,

320
00:19:30,598 --> 00:19:34,370
podemos executar esse algoritmo nele e com certeza encontraremos uma solução em algum

321
00:19:34,370 --> 00:19:35,160
lugar dentro dele.

322
00:19:35,160 --> 00:19:40,300
E mais, assim como em uma dimensão, esse algoritmo é incrivelmente eficiente.

323
00:19:40,300 --> 00:19:44,652
Continuamos diminuindo a metade do tamanho da nossa região a cada rodada,

324
00:19:44,652 --> 00:19:47,711
estreitando rapidamente os zeros e, ao mesmo tempo,

325
00:19:47,711 --> 00:19:52,181
só precisamos verificar o valor da função ao longo dos pontos desses loops,

326
00:19:52,181 --> 00:19:55,240
em vez de verificá-lo nos muitos pontos do interior.

327
00:19:55,240 --> 00:20:00,168
Então, de certa forma, o trabalho geral realizado é proporcional apenas

328
00:20:00,168 --> 00:20:04,960
ao perímetro do espaço de busca, e não à área total, o que é incrível.

329
00:20:04,960 --> 00:20:07,889
Agora, uma vez que você entende o que está acontecendo,

330
00:20:07,889 --> 00:20:10,870
é estranhamente fascinante apenas observar isso em ação,

331
00:20:10,870 --> 00:20:13,800
dando-lhe alguma função e deixando-o procurar por zeros.

332
00:20:13,800 --> 00:20:17,070
Como eu disse antes, os números complexos são bidimensionais,

333
00:20:17,070 --> 00:20:20,340
então vamos aplicá-los a alguma equação com números complexos.

334
00:20:20,340 --> 00:20:24,559
Por exemplo, aqui está o algoritmo que encontra os zeros da

335
00:20:24,559 --> 00:20:28,920
função x elevado ao quinto menos x menos um no plano complexo.

336
00:20:28,920 --> 00:20:33,002
Começou por considerar uma região muito grande em torno da origem,

337
00:20:33,002 --> 00:20:35,440
que acabou tendo um número sinuoso de 5.

338
00:20:35,440 --> 00:20:39,228
Cada vez que você encontra um loop com um número de enrolamento diferente de zero,

339
00:20:39,228 --> 00:20:42,880
você o divide ao meio e descobre o número de enrolamento dos dois loops menores.

340
00:20:42,880 --> 00:20:46,901
É garantido que um ou ambos tenham um número de enrolamento diferente de zero e,

341
00:20:46,901 --> 00:20:50,923
quando você vê isso, sabe que há um zero em algum lugar dentro desse loop menor,

342
00:20:50,923 --> 00:20:54,300
então continue seguindo o mesmo caminho, pesquisando o espaço menor.

343
00:20:54,300 --> 00:20:58,832
Também paramos de explorar uma região se o caminho que estamos calculando tropeçar

344
00:20:58,832 --> 00:21:03,420
em um zero, o que na verdade aconteceu uma vez neste exemplo na metade direita aqui.

345
00:21:03,420 --> 00:21:08,063
Essas ocorrências raras interferem em nossa capacidade de calcular números sinuosos,

346
00:21:08,063 --> 00:21:09,320
mas ei, obtivemos zero.

347
00:21:09,320 --> 00:21:11,667
E quanto aos loops cujo número de enrolamento é zero,

348
00:21:11,667 --> 00:21:13,320
você simplesmente não os explora mais.

349
00:21:13,320 --> 00:21:18,520
Talvez eles tenham uma solução interna, talvez não, não temos garantias.

350
00:21:18,520 --> 00:21:22,580
E deixando o nosso solucionador de equações continuar da mesma maneira,

351
00:21:22,580 --> 00:21:26,020
eventualmente converge para muitos zeros para este polinómio.

352
00:21:26,020 --> 00:21:29,080
A propósito, não é coincidência que o número total

353
00:21:29,080 --> 00:21:31,660
de enrolamentos neste exemplo tenha sido 5.

354
00:21:31,660 --> 00:21:38,620
Com números complexos, a operação x elevado a n corresponde diretamente a percorrer

355
00:21:38,620 --> 00:21:45,000
a origem da saída n vezes enquanto você percorre a origem da entrada uma vez.

356
00:21:45,000 --> 00:21:49,146
Assim, com o polinômio, para entradas grandes o suficiente, todos os termos,

357
00:21:49,146 --> 00:21:52,700
exceto o termo principal, tornam-se insignificantes em comparação.

358
00:21:52,700 --> 00:21:56,645
Portanto, qualquer polinômio complexo cujo termo inicial seja x elevado

359
00:21:56,645 --> 00:22:00,700
a n tem um número sinuoso de n em torno de um loop suficientemente grande.

360
00:22:00,700 --> 00:22:04,293
E dessa forma, a nossa tecnologia de números sinuosos

361
00:22:04,293 --> 00:22:07,620
garante que cada polinómio complexo tenha um zero.

362
00:22:07,620 --> 00:22:10,954
Este é um fato tão importante que os matemáticos

363
00:22:10,954 --> 00:22:13,880
o chamam de teorema fundamental da álgebra.

364
00:22:13,880 --> 00:22:17,840
Ter um algoritmo para encontrar soluções numéricas para equações como essa é

365
00:22:17,840 --> 00:22:21,902
extremamente prático, mas o teorema fundamental da álgebra é um bom exemplo de

366
00:22:21,902 --> 00:22:25,605
como esses números sinuosos também são bastante úteis no nível teórico,

367
00:22:25,605 --> 00:22:29,617
garantindo a existência de uma solução para uma ampla classe de equações para

368
00:22:29,617 --> 00:22:33,525
condições adequadas, que é muito mais o tipo de coisa em que os matemáticos

369
00:22:33,525 --> 00:22:34,400
gostam de pensar.

370
00:22:34,400 --> 00:22:39,267
Mostrarei mais algumas aplicações incríveis disso no contexto da topologia em um vídeo

371
00:22:39,267 --> 00:22:44,080
de acompanhamento, que inclui a correção de um erro de um vídeo antigo do 3blue1brown.

372
00:22:44,080 --> 00:22:45,080
Qual deles?

373
00:22:45,080 --> 00:22:48,569
Bem, assista a todos os vídeos, tudo neste canal,

374
00:22:48,569 --> 00:22:51,640
e veja se consegue detectar o erro primeiro.

375
00:22:51,640 --> 00:22:55,285
O autor principal deste vídeo é um dos mais novos membros da equipe 3blue1brown,

376
00:22:55,285 --> 00:22:55,960
Sridhar Ramesh.

