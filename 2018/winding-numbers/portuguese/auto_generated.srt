1
00:00:03,060 --> 00:00:06,140
Há duas coisas aqui, o tópico principal e o metatópico.

2
00:00:06,640 --> 00:00:09,992
O tópico principal será esse algoritmo realmente bacana para resolver 

3
00:00:09,992 --> 00:00:13,200
equações bidimensionais, coisas que possuem duas incógnitas reais, 

4
00:00:13,200 --> 00:00:16,840
ou também aquelas que envolvem uma única incógnita que é um número complexo.

5
00:00:17,440 --> 00:00:21,054
Por exemplo, se você quisesse encontrar as raízes complexas de um polinômio, 

6
00:00:21,054 --> 00:00:24,856
ou talvez alguns daqueles zeros de milhões de dólares da função zeta de Riemann, 

7
00:00:24,856 --> 00:00:26,500
este algoritmo faria isso por você.

8
00:00:26,800 --> 00:00:30,060
E esse método é super bonito, já que envolve muitas cores.

9
00:00:30,540 --> 00:00:34,699
E o mais importante, a ideia central subjacente se aplica a todos os tipos de matemática, 

10
00:00:34,699 --> 00:00:38,581
muito além deste algoritmo para resolver equações, incluindo um pouco de topologia, 

11
00:00:38,581 --> 00:00:40,060
sobre a qual falarei mais tarde.

12
00:00:40,740 --> 00:00:44,505
Mas o que realmente faz com que isso valha cerca de 20 minutos do 

13
00:00:44,505 --> 00:00:48,442
seu tempo é que ele ilustra uma lição muito mais útil em matemática, 

14
00:00:48,442 --> 00:00:51,980
que é tentar definir construções que se combinem bem entre si.

15
00:00:52,400 --> 00:00:54,480
Você verá o que quero dizer com isso à medida que a história avança.

16
00:00:55,060 --> 00:00:58,533
Para motivar o caso com funções que possuem entradas 2d e saídas 2d, 

17
00:00:58,533 --> 00:01:03,064
vamos começar de forma mais simples, com funções que apenas pegam um número real e cospem 

18
00:01:03,064 --> 00:01:03,820
um número real.

19
00:01:05,080 --> 00:01:09,560
Se você quiser saber quando uma função f de x é igual a alguma outra função g de x, 

20
00:01:09,560 --> 00:01:14,200
você pode pensar nisso como uma busca por quando os gráficos dessas funções se cruzam, 

21
00:01:14,200 --> 00:01:14,520
certo?

22
00:01:15,020 --> 00:01:18,520
Quero dizer, isso fornece uma entrada onde ambas as funções têm a mesma saída.

23
00:01:18,520 --> 00:01:21,976
Para dar um exemplo muito simples, imagine que f de 

24
00:01:21,976 --> 00:01:25,300
x é x ao quadrado e g de x é a função constante 2.

25
00:01:25,960 --> 00:01:28,640
Em outras palavras, você deseja encontrar a raiz quadrada de 2.

26
00:01:29,460 --> 00:01:33,434
Mesmo que você não saiba quase nada sobre como encontrar raízes quadradas, 

27
00:01:33,434 --> 00:01:38,097
provavelmente poderá ver que 1 ao quadrado é menor que 2 e 2 ao quadrado é maior que 2, 

28
00:01:38,097 --> 00:01:41,860
então você percebe, ah, haverá alguma solução entre esses dois valores.

29
00:01:42,580 --> 00:01:44,510
E então, se você quiser restringir ainda mais, 

30
00:01:44,510 --> 00:01:47,140
talvez você tente elevar ao quadrado o ponto intermediário, 1.5.

31
00:01:47,720 --> 00:01:53,760
Isso resulta em 2.25, um pouco alto demais, então você focaria na região entre 1 e 1.5.

32
00:01:54,760 --> 00:01:57,426
E assim por diante, você provavelmente pode ver como isso continuaria, 

33
00:01:57,426 --> 00:02:00,469
você continuaria computando no ponto médio e depois cortaria seu espaço de busca 

34
00:02:00,469 --> 00:02:00,920
pela metade.

35
00:02:05,100 --> 00:02:08,382
Outra maneira de pensar sobre isto, que nos tornará mais fácil 

36
00:02:08,382 --> 00:02:11,977
quando chegarmos a dimensões superiores, é concentrar-nos na questão 

37
00:02:11,977 --> 00:02:15,520
equivalente para quando a diferença entre estas duas funções é zero.

38
00:02:16,100 --> 00:02:20,245
Nesses termos, encontramos uma região de insumos onde essa 

39
00:02:20,245 --> 00:02:24,180
diferença era negativa em uma ponta e positiva na outra.

40
00:02:24,180 --> 00:02:27,940
Nós o dividimos em dois, e a metade para a qual concentramos nossa atenção 

41
00:02:27,940 --> 00:02:31,500
foi aquela em que os pontos mais externos apresentavam sinais variados.

42
00:02:31,500 --> 00:02:35,540
Assim, conseguimos continuar indefinidamente, pegando cada região com sinais 

43
00:02:35,540 --> 00:02:39,319
variados na fronteira, encontrando uma região menor entre suas metades, 

44
00:02:39,319 --> 00:02:43,360
sabendo que em última análise teremos que nos estreitar em um ponto que será 

45
00:02:43,360 --> 00:02:44,200
exatamente zero.

46
00:02:45,760 --> 00:02:50,322
Resumindo, resolver equações sempre pode ser enquadrado como encontrar quando uma 

47
00:02:50,322 --> 00:02:54,607
determinada função é igual a zero, e para fazer isso, temos esta heurística, 

48
00:02:54,607 --> 00:02:57,779
se f for positivo em um ponto e negativo em outro ponto, 

49
00:02:57,779 --> 00:03:02,675
você pode encontrar algum lugar entre onde é zero, pelo menos se tudo mudar suavemente, 

50
00:03:02,675 --> 00:03:03,900
sem saltos repentinos.

51
00:03:03,900 --> 00:03:08,933
A coisa incrível que quero mostrar é que você pode estender esse tipo de pensamento para 

52
00:03:08,933 --> 00:03:13,231
equações bidimensionais, equações entre funções cujas entradas e saídas são 

53
00:03:13,231 --> 00:03:14,080
bidimensionais.

54
00:03:14,739 --> 00:03:18,023
Por exemplo, os números complexos são 2D e esta ferramenta que estamos 

55
00:03:18,023 --> 00:03:21,400
desenvolvendo é perfeita para encontrar soluções para equações complexas.

56
00:03:22,360 --> 00:03:25,073
Agora, já que falaremos tanto sobre essas funções 2D, 

57
00:03:25,073 --> 00:03:28,340
vamos dar um breve passo lateral e considerar como as ilustramos.

58
00:03:29,060 --> 00:03:34,111
Representar graficamente uma função com entrada e saída 2D exigiria quatro dimensões, 

59
00:03:34,111 --> 00:03:38,105
e isso não funcionará tão bem em nosso mundo 3D em nossas telas 2D, 

60
00:03:38,105 --> 00:03:40,220
mas ainda temos algumas boas opções.

61
00:03:40,859 --> 00:03:45,440
Uma é apenas observar o espaço de entrada e o espaço de saída lado a lado.

62
00:03:45,540 --> 00:03:50,073
Cada ponto no espaço de entrada se move para um ponto específico no espaço de saída, 

63
00:03:50,073 --> 00:03:53,540
e posso mostrar como o movimento em torno desse ponto de entrada 

64
00:03:53,540 --> 00:03:56,260
corresponde a certos movimentos no espaço de saída.

65
00:03:56,940 --> 00:03:59,636
Todas as funções que consideramos serão contínuas, 

66
00:03:59,636 --> 00:04:03,867
no sentido de que pequenas alterações na entrada correspondem apenas a pequenas 

67
00:04:03,867 --> 00:04:06,300
alterações na saída, não há saltos repentinos.

68
00:04:06,940 --> 00:04:11,879
Outra opção que temos é imaginar a seta desde a origem do espaço de saída até esse 

69
00:04:11,879 --> 00:04:16,579
ponto de saída e anexar uma versão em miniatura dessa seta ao ponto de entrada.

70
00:04:17,360 --> 00:04:21,575
Isso pode nos dar uma ideia rápida de para onde vai um determinado ponto de entrada ou 

71
00:04:21,575 --> 00:04:25,840
para onde vão muitos pontos de entrada diferentes, desenhando o campo vetorial completo.

72
00:04:27,600 --> 00:04:31,204
E, infelizmente, quando você faz isso em muitos pontos, pode ficar bastante confuso, 

73
00:04:31,204 --> 00:04:33,495
então deixe-me fazer todas as setas do mesmo tamanho, 

74
00:04:33,495 --> 00:04:37,100
e o que isso significa é que podemos ter uma noção da direção de cada ponto de saída.

75
00:04:37,780 --> 00:04:41,465
Mas talvez a maneira mais bonita de ilustrar funções bidimensionais, 

76
00:04:41,465 --> 00:04:45,845
e a que mais usaremos neste vídeo, seja associar cada ponto nesse espaço de saída 

77
00:04:45,845 --> 00:04:46,380
a uma cor.

78
00:04:47,220 --> 00:04:52,024
Aqui usamos matizes, é onde a cor cai ao longo de um arco-íris ou roda de cores, 

79
00:04:52,024 --> 00:04:55,701
para corresponder à direção oposta à origem, e estamos usando 

80
00:04:55,701 --> 00:04:59,260
escuridão ou brilho para corresponder à distância da origem.

81
00:04:59,260 --> 00:05:02,026
Por exemplo, focando neste conjunto de resultados, 

82
00:05:02,026 --> 00:05:05,551
todos estes pontos são vermelhos, mas os mais próximos da origem 

83
00:05:05,551 --> 00:05:09,620
são um pouco mais escuros e os mais distantes são um pouco mais brilhantes.

84
00:05:10,360 --> 00:05:14,291
E focando neste conjunto de resultados, todos os pontos são verdes e, novamente, 

85
00:05:14,291 --> 00:05:17,980
mais perto da origem significa mais escuro, mais longe significa mais claro.

86
00:05:18,780 --> 00:05:21,762
E assim por diante, tudo o que estamos fazendo aqui é atribuir 

87
00:05:21,762 --> 00:05:24,840
uma cor específica para cada direção, tudo mudando continuamente.

88
00:05:25,359 --> 00:05:29,221
Você pode notar que as diferenças de escuridão e brilho aqui são bastante sutis, 

89
00:05:29,221 --> 00:05:32,462
mas para este vídeo, tudo o que nos importa é a direção das saídas, 

90
00:05:32,462 --> 00:05:34,560
não as magnitudes, os matizes, não o brilho.

91
00:05:35,300 --> 00:05:39,715
A única coisa importante que você deve notar sobre o brilho é que perto da origem, 

92
00:05:39,715 --> 00:05:43,120
que não tem uma direção específica, todas as cores ficam pretas.

93
00:05:44,440 --> 00:05:49,088
Então, para pensar em funções, agora que decidimos uma cor para cada saída, 

94
00:05:49,088 --> 00:05:53,491
podemos visualizar funções 2D colorindo cada ponto no espaço de entrada 

95
00:05:53,491 --> 00:05:57,100
com base na cor do ponto onde ele pousa no espaço de saída.

96
00:05:57,840 --> 00:06:02,029
Gosto de imaginar muitos pontos diferentes desse espaço de entrada saltando para suas 

97
00:06:02,029 --> 00:06:06,121
saídas correspondentes no espaço de saída, depois sendo pintados com base na cor do 

98
00:06:06,121 --> 00:06:10,360
ponto onde pousaram e depois voltando para o local de onde vieram no espaço de entrada.

99
00:06:11,640 --> 00:06:13,534
Fazendo isso para cada ponto no espaço de entrada, 

100
00:06:13,534 --> 00:06:16,431
você pode ter uma ideia apenas olhando para esse espaço de entrada para saber 

101
00:06:16,431 --> 00:06:18,140
aproximadamente onde a função leva cada ponto.

102
00:06:18,140 --> 00:06:23,151
Por exemplo, esta faixa de pontos rosa à esquerda nos diz que todos esses pontos são 

103
00:06:23,151 --> 00:06:28,280
mapeados em algum lugar na direção rosa, na parte inferior esquerda do espaço de saída.

104
00:06:29,780 --> 00:06:34,900
Além disso, aqueles três pontos pretos com muitas cores ao redor são os que vão para zero.

105
00:06:39,340 --> 00:06:44,110
Tudo bem, assim como no caso 1D, a resolução de equações de funções 2D sempre 

106
00:06:44,110 --> 00:06:48,880
pode ser reformulada perguntando quando uma determinada função é igual a zero.

107
00:06:49,580 --> 00:06:55,281
Então esse é o nosso desafio agora, criar um algoritmo que descubra 

108
00:06:55,281 --> 00:07:00,900
quais pontos de entrada de uma determinada função 2D vão para zero.

109
00:07:00,900 --> 00:07:04,625
Você pode apontar que se estiver olhando para um mapa de cores como este 

110
00:07:04,625 --> 00:07:08,300
vendo aqueles pontos pretos, você já sabe onde estão os zeros da função.

111
00:07:08,620 --> 00:07:11,080
Então isso conta?

112
00:07:11,080 --> 00:07:13,841
Tenha em mente que para criar um diagrama como este, 

113
00:07:13,841 --> 00:07:17,906
fizemos com que o computador calculasse a função em todos os pixels do plano, 

114
00:07:17,906 --> 00:07:21,867
mas nosso objetivo é encontrar um algoritmo mais eficiente que exija apenas 

115
00:07:21,867 --> 00:07:24,785
calcular a função no menor número possível de pontos. , 

116
00:07:24,785 --> 00:07:27,860
tendo apenas uma visão limitada das cores, por assim dizer.

117
00:07:29,360 --> 00:07:34,137
E também de um ponto de vista mais teórico, seria bom ter uma construção geral que nos 

118
00:07:34,137 --> 00:07:39,080
informasse as condições para a existência ou não de zero dentro de uma determinada região.

119
00:07:39,080 --> 00:07:43,264
Lembre-se, em uma dimensão o principal insight foi que se uma função contínua é 

120
00:07:43,264 --> 00:07:47,920
positiva em um ponto e negativa em outro, em algum ponto intermediário ela deve ser zero.

121
00:07:48,840 --> 00:07:50,580
Então, como estendemos isso para duas dimensões?

122
00:07:50,940 --> 00:07:53,580
Precisamos de algum tipo de analogia para falar sobre signos.

123
00:07:54,700 --> 00:07:58,140
Uma maneira de pensar sobre o que são os sinais são as direções.

124
00:07:58,800 --> 00:08:01,068
Positivo significa que você está apontando para a direita ao longo da 

125
00:08:01,068 --> 00:08:03,500
reta numérica e negativo significa que você está apontando para a esquerda.

126
00:08:04,200 --> 00:08:06,346
As quantidades bidimensionais também têm direção, 

127
00:08:06,346 --> 00:08:08,364
mas para elas as opções são muito mais amplas, 

128
00:08:08,364 --> 00:08:11,800
podem apontar para qualquer lugar ao longo de todo um círculo de possibilidades.

129
00:08:12,530 --> 00:08:16,714
Então, da mesma forma que em uma dimensão estávamos perguntando se uma 

130
00:08:16,714 --> 00:08:20,781
determinada função é positiva ou negativa no limite de um intervalo, 

131
00:08:20,781 --> 00:08:26,027
que é apenas dois pontos, para funções 2d estaremos olhando para o limite de uma região, 

132
00:08:26,027 --> 00:08:30,860
que é um loop e pergunte sobre a direção da saída da função ao longo desse limite.

133
00:08:33,640 --> 00:08:36,888
Por exemplo, vemos que ao longo deste loop em torno deste zero, 

134
00:08:36,888 --> 00:08:40,745
a saída passa por todas as direções possíveis, todas as cores do arco-íris, 

135
00:08:40,745 --> 00:08:45,060
vermelho, amarelo, verde, azul, de volta ao vermelho e tudo mais ao longo do caminho.

136
00:08:45,700 --> 00:08:48,554
Mas ao longo deste loop aqui, sem zeros dentro dele, 

137
00:08:48,554 --> 00:08:52,808
a saída não passa por todas as cores, passa por algumas das cores alaranjadas, 

138
00:08:52,808 --> 00:08:54,640
mas nunca, digamos, verde ou azul.

139
00:08:55,300 --> 00:08:58,460
E isso é promissor, parece muito com o modo como as coisas funcionavam em uma dimensão.

140
00:08:59,340 --> 00:09:03,566
Talvez da mesma forma que se uma função 1d recebe ambos os sinais possíveis 

141
00:09:03,566 --> 00:09:07,180
no limite de uma região 1d, havia um zero em algum lugar dentro, 

142
00:09:07,180 --> 00:09:11,240
poderíamos levantar a hipótese de que se uma função 2d atingir saídas de 

143
00:09:11,240 --> 00:09:14,299
todas as direções possíveis, todas as cores possíveis, 

144
00:09:14,299 --> 00:09:18,247
ao longo do limite de uma região 2d, então em algum lugar dentro dessa 

145
00:09:18,247 --> 00:09:19,860
região ele deve ir para zero.

146
00:09:20,960 --> 00:09:23,561
Então esse é o nosso palpite, e pare um momento para pensar 

147
00:09:23,561 --> 00:09:26,120
se isso deveria ser verdade e, em caso afirmativo, por quê.

148
00:09:27,420 --> 00:09:31,217
Se começarmos a pensar em um pequeno loop em torno de algum ponto de entrada, 

149
00:09:31,217 --> 00:09:34,138
sabemos que, como tudo é contínuo, nossa função o leva a um 

150
00:09:34,138 --> 00:09:36,280
pequeno loop próximo à saída correspondente.

151
00:09:37,140 --> 00:09:40,520
Mas veja, para a maioria dos loops minúsculos, a saída varia em cor.

152
00:09:40,980 --> 00:09:44,807
Se você escolher qualquer ponto de saída diferente de zero e desenhar um loop 

153
00:09:44,807 --> 00:09:49,125
suficientemente estreito próximo a ele, as cores do loop serão todas da mesma cor desse 

154
00:09:49,125 --> 00:09:49,420
ponto.

155
00:09:49,840 --> 00:09:54,208
Um laço apertado aqui é todo azulado, um laço apertado aqui é todo amarelado, 

156
00:09:54,208 --> 00:09:57,680
você certamente não vai conseguir todas as cores do arco-íris.

157
00:09:58,220 --> 00:10:02,270
O único ponto onde você pode apertar os laços ao redor dele e 

158
00:10:02,270 --> 00:10:06,320
ainda obter todas as cores é a origem incolor, o próprio zero.

159
00:10:07,100 --> 00:10:11,558
Portanto, é verdade que se você tiver laços passando por todas as cores do arco-íris, 

160
00:10:11,558 --> 00:10:14,202
apertando e apertando, estreitando-se em um ponto, 

161
00:10:14,202 --> 00:10:16,380
então esse ponto deve ser de fato um zero.

162
00:10:17,320 --> 00:10:19,456
E então vamos configurar um solucionador de equações 2D 

163
00:10:19,456 --> 00:10:21,860
exatamente como nosso solucionador de equações unidimensionais.

164
00:10:22,260 --> 00:10:26,382
Quando encontrarmos uma região grande cuja borda passa por todas as cores, 

165
00:10:26,382 --> 00:10:29,900
divida-a em duas e observe as cores na fronteira de cada metade.

166
00:10:30,540 --> 00:10:34,999
No exemplo mostrado aqui, a borda da metade esquerda não passa por todas as cores, 

167
00:10:34,999 --> 00:10:38,600
não há pontos mapeados nas direções laranja-amarelado, por exemplo.

168
00:10:39,060 --> 00:10:42,620
Portanto, deixarei esta área em cinza como forma de dizer que não queremos pesquisar mais.

169
00:10:43,380 --> 00:10:47,135
A metade direita passa por todas as cores, passa muito tempo na direção verde, 

170
00:10:47,135 --> 00:10:50,700
depois passa pelo amarelo laranja vermelho e também pelo azul violeta rosa.

171
00:10:51,560 --> 00:10:54,321
Agora lembre-se, o que isso significa é que os pontos desta 

172
00:10:54,321 --> 00:10:57,360
fronteira são mapeados para saídas de todas as direções possíveis.

173
00:10:57,840 --> 00:11:01,860
Então vamos explorar mais, subdividindo novamente e verificando o limite de cada região.

174
00:11:02,880 --> 00:11:06,560
O limite do topo é todo verde, então vamos parar de procurar aí.

175
00:11:06,860 --> 00:11:09,520
Mas o fundo é colorido o suficiente para merecer uma subdivisão.

176
00:11:10,340 --> 00:11:12,020
E continue assim.

177
00:11:12,360 --> 00:11:15,928
Verifique qual sub-região tem um limite que cobre todas as cores possíveis, 

178
00:11:15,928 --> 00:11:20,060
o que significa que os pontos desse limite são mapeados em todas as direções possíveis, 

179
00:11:20,060 --> 00:11:24,005
e continue cortando essas regiões pela metade, como fizemos no caso unidimensional, 

180
00:11:24,005 --> 00:11:27,480
eventualmente nos levando a um zero sobre a função. Ah, espere um segundo.

181
00:11:28,880 --> 00:11:29,920
O que aconteceu aqui?

182
00:11:30,380 --> 00:11:34,739
Nenhuma das últimas subdivisões no canto inferior direito passou por todas as cores, 

183
00:11:34,739 --> 00:11:38,381
então nosso algoritmo parou porque não queria pesquisar nenhuma delas, 

184
00:11:38,381 --> 00:11:39,920
mas também não encontrou zero.

185
00:11:41,060 --> 00:11:43,300
Ok, claramente algo está errado aqui.

186
00:11:43,540 --> 00:11:46,520
E tudo bem, estar errado é uma parte normal da matemática.

187
00:11:46,520 --> 00:11:48,948
Se olharmos para trás, tínhamos essa hipótese, 

188
00:11:48,948 --> 00:11:52,980
e ela nos levou a esse algoritmo proposto, então nos enganamos em algum lugar.

189
00:11:53,660 --> 00:11:56,548
E ser bom em matemática não é acertar na primeira vez, 

190
00:11:56,548 --> 00:12:00,329
é ter resiliência para olhar para trás com cuidado e entender os erros, 

191
00:12:00,329 --> 00:12:01,800
e entender como corrigi-los.

192
00:12:02,480 --> 00:12:05,375
Agora, o problema aqui é que tínhamos uma região cuja fronteira 

193
00:12:05,375 --> 00:12:07,999
passava por todas as cores, mas quando dividimos ao meio, 

194
00:12:07,999 --> 00:12:10,939
nenhuma das fronteiras da sub-região passava por todas as cores, 

195
00:12:10,939 --> 00:12:14,740
não tínhamos opções de onde continuar pesquisando e isso quebrou o zero localizador.

196
00:12:14,740 --> 00:12:17,560
Agora, em uma dimensão, esse tipo de coisa nunca aconteceu.

197
00:12:17,980 --> 00:12:22,398
Sempre que você tiver um intervalo cujos pontos finais têm sinais diferentes, 

198
00:12:22,398 --> 00:12:25,910
se você dividi-lo, saberá que obterá algum subintervalo cujos 

199
00:12:25,910 --> 00:12:28,460
pontos finais também terão sinais diferentes.

200
00:12:29,020 --> 00:12:32,026
Ou dito de outra forma, sempre que você tiver dois intervalos 

201
00:12:32,026 --> 00:12:34,936
cujas extremidades não mudam de sinal, se você combiná-los, 

202
00:12:34,936 --> 00:12:38,380
obterá um intervalo maior cujas extremidades também não mudam de sinal.

203
00:12:39,080 --> 00:12:42,317
Mas em duas dimensões, é possível encontrar duas regiões cujas 

204
00:12:42,317 --> 00:12:45,554
fronteiras não passam por todas as cores, mas cujos limites se 

205
00:12:45,554 --> 00:12:49,100
combinam para dar uma região cuja fronteira passa por todas as cores.

206
00:12:49,840 --> 00:12:53,500
E foi exatamente dessa maneira que nosso algoritmo proposto para encontrar o zero quebrou.

207
00:12:54,380 --> 00:12:58,240
Na verdade, se você pensar bem, poderá encontrar um grande loop cuja 

208
00:12:58,240 --> 00:13:02,380
borda passa por todas as cores possíveis sem que haja um zero dentro dele.

209
00:13:03,080 --> 00:13:06,092
Agora, isso não quer dizer que estávamos errados em nossas afirmações 

210
00:13:06,092 --> 00:13:08,975
sobre loops minúsculos quando dissemos que um loop que se estreita 

211
00:13:08,975 --> 00:13:12,160
continuamente passando por todas as cores tem que se estreitar em um zero.

212
00:13:12,800 --> 00:13:15,805
Mas o que complicou tudo para nós é que essa propriedade do tipo 

213
00:13:15,805 --> 00:13:18,579
&quot;minha fronteira passa por todas as cores ou não&quot; 

214
00:13:18,579 --> 00:13:22,140
não se combina de maneira agradável e previsível quando você combina regiões.

215
00:13:23,000 --> 00:13:26,581
Mas não se preocupe, podemos modificar isso um pouco para uma 

216
00:13:26,581 --> 00:13:30,740
propriedade mais sofisticada que se combine para nos dar o que queremos.

217
00:13:38,180 --> 00:13:41,139
A ideia é que, em vez de simplesmente perguntar se podemos 

218
00:13:41,139 --> 00:13:44,298
encontrar uma cor em algum ponto do loop, vamos acompanhar com 

219
00:13:44,298 --> 00:13:47,860
mais cuidado como essas cores mudam à medida que percorremos esse loop.

220
00:13:48,580 --> 00:13:49,960
Deixe-me mostrar o que quero dizer com um exemplo.

221
00:13:50,400 --> 00:13:53,260
Vou manter uma pequena roda de cores aqui no canto para nos ajudar a acompanhar.

222
00:13:53,940 --> 00:13:57,598
Quando as cores ao longo de um caminho de entradas se movem através do arco-íris 

223
00:13:57,598 --> 00:14:01,211
em uma direção específica, do vermelho para o amarelo, do amarelo para o verde, 

224
00:14:01,211 --> 00:14:04,960
do verde para o azul ou do azul para o vermelho, a saída oscila no sentido horário.

225
00:14:05,700 --> 00:14:09,387
Mas, por outro lado, se as cores se movem no sentido inverso no arco-íris, 

226
00:14:09,387 --> 00:14:11,698
do azul para o verde, do verde para o amarelo, 

227
00:14:11,698 --> 00:14:14,402
do amarelo para o vermelho ou do vermelho para o azul, 

228
00:14:14,402 --> 00:14:16,320
a saída oscila no sentido anti-horário.

229
00:14:17,160 --> 00:14:19,929
Então, caminhando por esse caminho curto aqui, 

230
00:14:19,929 --> 00:14:24,583
as cores serpenteiam um quinto do caminho no sentido horário na roda de cores, 

231
00:14:24,583 --> 00:14:29,355
e andando por esse caminho aqui, as cores serpenteiam outro quinto do caminho no 

232
00:14:29,355 --> 00:14:31,300
sentido horário na roda de cores.

233
00:14:31,300 --> 00:14:34,898
Claro, isso significa que se você seguir os dois caminhos, um após o outro, 

234
00:14:34,898 --> 00:14:38,640
as cores girarão um total de dois quintos de volta completa no sentido horário.

235
00:14:39,280 --> 00:14:43,836
A quantidade total de enrolamento simplesmente aumenta, e isso será fundamental, 

236
00:14:43,836 --> 00:14:47,100
esse é o tipo de combinação direta que será útil para nós.

237
00:14:47,100 --> 00:14:50,790
Quando digo quantidade total de enrolamento, quero que você imagine 

238
00:14:50,790 --> 00:14:54,697
um hodômetro antigo que avança enquanto a seta gira no sentido horário, 

239
00:14:54,697 --> 00:14:57,900
mas para trás enquanto a seta gira no sentido anti-horário.

240
00:14:58,740 --> 00:15:00,543
Portanto, o enrolamento no sentido anti-horário 

241
00:15:00,543 --> 00:15:02,460
conta como enrolamento negativo no sentido horário.

242
00:15:03,000 --> 00:15:07,240
As saídas podem girar muito, mas se parte dessa rotação for na direção oposta, 

243
00:15:07,240 --> 00:15:08,260
ela será cancelada.

244
00:15:08,920 --> 00:15:13,356
Por exemplo, se você avançar nesse caminho e depois retroceder nesse mesmo caminho, 

245
00:15:13,356 --> 00:15:16,102
a quantidade total de enrolamento acaba sendo zero, 

246
00:15:16,102 --> 00:15:20,274
o movimento para trás literalmente retrocede pelas cores vistas anteriormente, 

247
00:15:20,274 --> 00:15:24,393
invertendo todo o enrolamento anterior e retornando o hodômetro de volta para 

248
00:15:24,393 --> 00:15:25,080
onde começou.

249
00:15:26,280 --> 00:15:28,129
Para nossos propósitos, nos preocuparemos mais 

250
00:15:28,129 --> 00:15:29,900
em observar o enrolamento ao longo dos loops.

251
00:15:30,440 --> 00:15:34,780
Por exemplo, digamos que percorremos todo esse loop no sentido horário.

252
00:15:34,780 --> 00:15:38,598
As saídas que encontramos giram em torno de um total de três voltas 

253
00:15:38,598 --> 00:15:42,136
completas no sentido horário, as cores oscilavam no arco-íris, 

254
00:15:42,136 --> 00:15:46,180
em ordem, de vermelho para vermelho novamente, e novamente, e novamente.

255
00:15:46,920 --> 00:15:51,653
No jargão usado pelos matemáticos, dizemos que ao longo deste loop, 

256
00:15:51,653 --> 00:15:54,020
o número total do enrolamento é 3.

257
00:15:54,020 --> 00:15:57,101
Para outros loops, pode ser qualquer outro número inteiro, 

258
00:15:57,101 --> 00:16:00,966
talvez um número maior se a saída oscilar muitas vezes enquanto a entrada 

259
00:16:00,966 --> 00:16:05,039
percorre um único loop, ou pode ser um número menor se a saída oscilar apenas 

260
00:16:05,039 --> 00:16:05,980
uma ou duas vezes.

261
00:16:06,320 --> 00:16:09,520
Ou esse número do enrolamento poderia até ser um número inteiro negativo, 

262
00:16:09,520 --> 00:16:12,287
se a saída estivesse oscilando no sentido anti-horário enquanto 

263
00:16:12,287 --> 00:16:14,320
caminhamos no sentido horário ao redor do loop.

264
00:16:15,180 --> 00:16:16,944
Mas ao longo de qualquer loop, esta quantidade 

265
00:16:16,944 --> 00:16:18,860
total de enrolamento tem que ser um número inteiro.

266
00:16:20,880 --> 00:16:23,178
Quero dizer, quando você voltar ao ponto de partida, 

267
00:16:23,178 --> 00:16:25,000
terá o mesmo resultado com o qual começou.

268
00:16:26,180 --> 00:16:30,757
Aliás, se um caminho realmente contém um ponto onde a saída é precisamente zero, 

269
00:16:30,757 --> 00:16:34,940
então tecnicamente você não pode definir um número sinuoso ao longo dele, 

270
00:16:34,940 --> 00:16:37,540
já que a saída não tem uma direção específica.

271
00:16:37,540 --> 00:16:42,316
Isso não será um problema para nós, porque todo o nosso objetivo é encontrar zeros, 

272
00:16:42,316 --> 00:16:45,160
então, se isso acontecer, tivemos sorte mais cedo.

273
00:16:45,160 --> 00:16:47,941
A principal coisa a notar sobre esses números sinuosos é que eles 

274
00:16:47,941 --> 00:16:50,680
somam muito bem quando você combina caminhos em caminhos maiores.

275
00:16:54,800 --> 00:16:58,620
Mas o que realmente queremos é que os números sinuosos ao longo das fronteiras 

276
00:16:58,620 --> 00:17:02,440
das regiões aumentem bem quando combinamos regiões para formar regiões maiores.

277
00:17:02,980 --> 00:17:04,520
Então, temos essa propriedade?

278
00:17:07,760 --> 00:17:09,060
Bem, dê uma olhada.

279
00:17:09,540 --> 00:17:13,332
O número do enrolamento, à medida que avançamos no sentido horário em torno desta 

280
00:17:13,332 --> 00:17:16,940
região à esquerda, é a soma dos números do enrolamento destes quatro caminhos.

281
00:17:17,500 --> 00:17:21,000
E o enrolamento, à medida que avançamos no sentido horário em torno desta 

282
00:17:21,000 --> 00:17:24,359
região à direita, é a soma dos números sinuosos destes quatro caminhos.

283
00:17:25,339 --> 00:17:28,145
E quando combinamos essas duas regiões numa região maior, 

284
00:17:28,145 --> 00:17:32,500
a maioria desses caminhos tornam-se parte da fronteira no sentido horário da região maior.

285
00:17:33,260 --> 00:17:35,800
E quanto a esses dois caminhos que não funcionam?

286
00:17:36,020 --> 00:17:39,607
Eles se cancelam perfeitamente, um deles é justamente o inverso, 

287
00:17:39,607 --> 00:17:41,760
o retrocesso do outro como vimos antes.

288
00:17:42,560 --> 00:17:45,157
Portanto, os números sinuosos ao longo das fronteiras 

289
00:17:45,157 --> 00:17:47,900
das regiões somam-se exatamente da maneira que desejamos.

290
00:17:48,640 --> 00:17:52,635
Além disso, observe que esse raciocínio sobre fronteiras orientadas que se somam 

291
00:17:52,635 --> 00:17:56,680
bem assim aparece muito na matemática e geralmente é chamado de teorema de Stokes.

292
00:17:57,060 --> 00:18:01,020
Aqueles de vocês que estudaram cálculo multivariável podem reconhecê-lo nesse contexto.

293
00:18:02,360 --> 00:18:04,835
Então agora, finalmente, com os números sinuosos em mãos, 

294
00:18:04,835 --> 00:18:07,440
podemos voltar aos nossos objetivos de resolução de equações.

295
00:18:08,000 --> 00:18:10,679
O problema com a região que vimos anteriormente é que, 

296
00:18:10,679 --> 00:18:13,699
embora a sua fronteira passasse por todas as cores possíveis, 

297
00:18:13,699 --> 00:18:15,940
o número do enrolamento era, na verdade, zero.

298
00:18:16,500 --> 00:18:20,198
As saídas giraram na metade do caminho, do amarelo para o vermelho, 

299
00:18:20,198 --> 00:18:23,951
e então começaram a voltar no sentido anti-horário na outra direção, 

300
00:18:23,951 --> 00:18:28,085
depois continuaram passando pelo azul e atingindo o vermelho do outro lado, 

301
00:18:28,085 --> 00:18:30,860
tudo de tal forma que o enrolamento total foi zero.

302
00:18:31,840 --> 00:18:34,996
Mas se você encontrar um loop que não apenas atinge todas as cores, 

303
00:18:34,996 --> 00:18:38,895
mas também tem a condição mais forte de um número de enrolamento diferente de zero, 

304
00:18:38,895 --> 00:18:42,933
então, se você o dividir ao meio, terá a garantia de que pelo menos uma dessas metades 

305
00:18:42,933 --> 00:18:45,533
terá um número de enrolamento diferente de zero também, 

306
00:18:45,533 --> 00:18:48,040
já que as coisas se somam bem da maneira que queremos.

307
00:18:48,440 --> 00:18:53,500
Dessa forma, você pode continuar, estreitando-se cada vez mais em um ponto.

308
00:18:54,050 --> 00:18:57,159
E à medida que você se estreita em um ponto, você o fará com pequenos 

309
00:18:57,159 --> 00:18:59,691
loops que têm números de enrolamento diferentes de zero, 

310
00:18:59,691 --> 00:19:02,890
o que implica que eles passam por todas as cores possíveis e, portanto, 

311
00:19:02,890 --> 00:19:06,400
como eu disse antes, o ponto em que eles estão se estreitando on deve ser zero.

312
00:19:07,420 --> 00:19:08,360
E é isso!

313
00:19:08,600 --> 00:19:12,010
Agora criamos um solucionador de equações bidimensional e, 

314
00:19:12,010 --> 00:19:13,860
desta vez, prometo, não há bugs.

315
00:19:14,560 --> 00:19:16,145
Os números sinuosos são precisamente a ferramenta 

316
00:19:16,145 --> 00:19:17,540
de que precisamos para fazer isso funcionar.

317
00:19:18,100 --> 00:19:22,374
Agora podemos resolver equações que se parecem com onde f de x é igual a g 

318
00:19:22,374 --> 00:19:26,820
de x em duas dimensões, apenas considerando como a diferença entre f e g gira.

319
00:19:27,600 --> 00:19:30,538
Sempre que tivermos um loop cujo número de enrolamento não é zero, 

320
00:19:30,538 --> 00:19:34,310
podemos executar esse algoritmo nele e com certeza encontraremos uma solução em algum 

321
00:19:34,310 --> 00:19:35,100
lugar dentro dele.

322
00:19:35,660 --> 00:19:39,840
E mais, assim como em uma dimensão, esse algoritmo é incrivelmente eficiente.

323
00:19:40,240 --> 00:19:44,365
Continuamos diminuindo a metade do tamanho da nossa região a cada rodada, 

324
00:19:44,365 --> 00:19:47,264
estreitando rapidamente os zeros e, ao mesmo tempo, 

325
00:19:47,264 --> 00:19:51,501
só precisamos verificar o valor da função ao longo dos pontos desses loops, 

326
00:19:51,501 --> 00:19:54,400
em vez de verificá-lo nos muitos pontos do interior.

327
00:19:55,160 --> 00:19:59,510
Então, de certa forma, o trabalho geral realizado é proporcional apenas 

328
00:19:59,510 --> 00:20:03,740
ao perímetro do espaço de busca, e não à área total, o que é incrível.

329
00:20:04,920 --> 00:20:07,584
Agora, uma vez que você entende o que está acontecendo, 

330
00:20:07,584 --> 00:20:10,295
é estranhamente fascinante apenas observar isso em ação, 

331
00:20:10,295 --> 00:20:12,960
dando-lhe alguma função e deixando-o procurar por zeros.

332
00:20:13,620 --> 00:20:16,590
Como eu disse antes, os números complexos são bidimensionais, 

333
00:20:16,590 --> 00:20:19,560
então vamos aplicá-los a alguma equação com números complexos.

334
00:20:20,300 --> 00:20:24,136
Por exemplo, aqui está o algoritmo que encontra os zeros da 

335
00:20:24,136 --> 00:20:28,100
função x elevado ao quinto menos x menos um no plano complexo.

336
00:20:28,900 --> 00:20:32,394
Começou por considerar uma região muito grande em torno da origem, 

337
00:20:32,394 --> 00:20:34,480
que acabou tendo um número sinuoso de 5.

338
00:20:35,280 --> 00:20:38,762
Cada vez que você encontra um loop com um número de enrolamento diferente de zero, 

339
00:20:38,762 --> 00:20:42,120
você o divide ao meio e descobre o número de enrolamento dos dois loops menores.

340
00:20:42,700 --> 00:20:46,468
É garantido que um ou ambos tenham um número de enrolamento diferente de zero e, 

341
00:20:46,468 --> 00:20:50,236
quando você vê isso, sabe que há um zero em algum lugar dentro desse loop menor, 

342
00:20:50,236 --> 00:20:53,400
então continue seguindo o mesmo caminho, pesquisando o espaço menor.

343
00:20:54,180 --> 00:20:58,513
Também paramos de explorar uma região se o caminho que estamos calculando tropeçar 

344
00:20:58,513 --> 00:21:02,900
em um zero, o que na verdade aconteceu uma vez neste exemplo na metade direita aqui.

345
00:21:03,280 --> 00:21:07,105
Essas ocorrências raras interferem em nossa capacidade de calcular números sinuosos, 

346
00:21:07,105 --> 00:21:08,140
mas ei, obtivemos zero.

347
00:21:09,220 --> 00:21:11,391
E quanto aos loops cujo número de enrolamento é zero, 

348
00:21:11,391 --> 00:21:12,920
você simplesmente não os explora mais.

349
00:21:12,920 --> 00:21:16,200
Talvez eles tenham uma solução interna, talvez não, não temos garantias.

350
00:21:18,400 --> 00:21:21,442
E deixando o nosso solucionador de equações continuar da mesma maneira, 

351
00:21:21,442 --> 00:21:24,020
eventualmente converge para muitos zeros para este polinómio.

352
00:21:25,840 --> 00:21:28,639
A propósito, não é coincidência que o número total 

353
00:21:28,639 --> 00:21:31,000
de enrolamentos neste exemplo tenha sido 5.

354
00:21:31,580 --> 00:21:37,141
Com números complexos, a operação x elevado a n corresponde diretamente a percorrer 

355
00:21:37,141 --> 00:21:42,240
a origem da saída n vezes enquanto você percorre a origem da entrada uma vez.

356
00:21:44,680 --> 00:21:48,610
Assim, com o polinômio, para entradas grandes o suficiente, todos os termos, 

357
00:21:48,610 --> 00:21:51,980
exceto o termo principal, tornam-se insignificantes em comparação.

358
00:21:52,480 --> 00:21:56,080
Portanto, qualquer polinômio complexo cujo termo inicial seja x elevado 

359
00:21:56,080 --> 00:21:59,780
a n tem um número sinuoso de n em torno de um loop suficientemente grande.

360
00:22:00,540 --> 00:22:03,800
E dessa forma, a nossa tecnologia de números sinuosos 

361
00:22:03,800 --> 00:22:06,820
garante que cada polinómio complexo tenha um zero.

362
00:22:07,480 --> 00:22:09,887
Este é um fato tão importante que os matemáticos 

363
00:22:09,887 --> 00:22:12,000
o chamam de teorema fundamental da álgebra.

364
00:22:13,800 --> 00:22:17,686
Ter um algoritmo para encontrar soluções numéricas para equações como essa é 

365
00:22:17,686 --> 00:22:21,674
extremamente prático, mas o teorema fundamental da álgebra é um bom exemplo de 

366
00:22:21,674 --> 00:22:25,308
como esses números sinuosos também são bastante úteis no nível teórico, 

367
00:22:25,308 --> 00:22:29,245
garantindo a existência de uma solução para uma ampla classe de equações para 

368
00:22:29,245 --> 00:22:33,081
condições adequadas, que é muito mais o tipo de coisa em que os matemáticos 

369
00:22:33,081 --> 00:22:33,940
gostam de pensar.

370
00:22:33,940 --> 00:22:38,717
Mostrarei mais algumas aplicações incríveis disso no contexto da topologia em um vídeo 

371
00:22:38,717 --> 00:22:43,440
de acompanhamento, que inclui a correção de um erro de um vídeo antigo do 3blue1brown.

372
00:22:44,060 --> 00:22:44,440
Qual deles?

373
00:22:44,940 --> 00:22:47,418
Bem, assista a todos os vídeos, tudo neste canal, 

374
00:22:47,418 --> 00:22:49,600
e veja se consegue detectar o erro primeiro.

375
00:22:51,300 --> 00:23:07,128
O autor principal deste vídeo é um dos mais novos membros da equipe 3blue1brown, 

376
00:23:07,128 --> 00:23:10,060
Sridhar Ramesh.

