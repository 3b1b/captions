[
 {
  "input": "There's two things here, the main topic and the meta topic.",
  "model": "nmt",
  "translatedText": "Burada iki şey var; ana konu ve meta konu.",
  "time_range": [
   3.0600000000000005,
   6.14
  ],
  "n_reviews": 0
 },
 {
  "input": "The main topic is going to be this really neat algorithm for solving two-dimensional equations, things that have two unknown real numbers, or also those involving a single unknown which is a complex number.",
  "model": "nmt",
  "translatedText": "Ana konu, iki bilinmeyen gerçek sayıya sahip olan veya karmaşık bir sayı olan tek bir bilinmeyeni içeren iki boyutlu denklemleri çözmek için gerçekten düzgün bir algoritma olacak.",
  "time_range": [
   6.64,
   16.84
  ],
  "n_reviews": 0
 },
 {
  "input": "So for example, if you wanted to find the complex roots of a polynomial, or maybe some of those million dollar zeros of the Riemann zeta function, this algorithm would do it for you.",
  "model": "nmt",
  "translatedText": "Örneğin, bir polinomun karmaşık köklerini veya Riemann zeta fonksiyonunun milyon dolarlık sıfırlarından bazılarını bulmak istiyorsanız, bu algoritma bunu sizin için yapacaktır.",
  "time_range": [
   17.44,
   26.5
  ],
  "n_reviews": 0
 },
 {
  "input": "And this method is super pretty, since a lot of colors are involved.",
  "model": "nmt",
  "translatedText": "Ve bu yöntem çok güzel çünkü çok fazla renk söz konusu.",
  "time_range": [
   26.8,
   30.06
  ],
  "n_reviews": 0
 },
 {
  "input": "And more importantly, the core underlying idea applies to all sorts of math well beyond this algorithm for solving equations, including a bit of topology, which I'll talk about afterwards.",
  "model": "nmt",
  "translatedText": "Ve daha da önemlisi, altta yatan temel fikir, denklem çözmek için kullanılan bu algoritmanın çok ötesindeki her türlü matematiğe de uygulanabilir, buna biraz topoloji de dahildir, buna daha sonra değineceğim.",
  "time_range": [
   30.54,
   40.06
  ],
  "n_reviews": 0
 },
 {
  "input": "But what really makes this worth 20 minutes or so of your time is that it illustrates a lesson much more generally useful throughout math, which is try to define constructs that compose nicely with each other.",
  "model": "nmt",
  "translatedText": "Ancak bunu gerçekten 20 dakika kadar zaman ayırmaya değer kılan şey, matematikte genel olarak çok daha yararlı olan, birbirleriyle güzel bir şekilde birleşen yapıları tanımlamaya çalışan bir dersi göstermesidir.",
  "time_range": [
   40.74,
   51.98
  ],
  "n_reviews": 0
 },
 {
  "input": "You'll see what I mean by that as the story progresses.",
  "model": "nmt",
  "translatedText": "Hikaye ilerledikçe bununla ne demek istediğimi anlayacaksınız.",
  "time_range": [
   52.4,
   54.48
  ],
  "n_reviews": 0
 },
 {
  "input": "To motivate the case with functions that have 2d inputs and 2d outputs, let's start off simpler, with functions that just take in a real number and spit out a real number.",
  "model": "nmt",
  "translatedText": "Durumu 2 boyutlu girişleri ve 2 boyutlu çıktıları olan işlevlerle motive etmek için, sadece gerçek sayıyı alan ve gerçek sayıyı veren işlevlerle daha basit bir şekilde başlayalım.",
  "time_range": [
   55.06,
   63.82
  ],
  "n_reviews": 0
 },
 {
  "input": "If you want to know when a function f of x equals some other function g of x, you might think of this as searching for when the graphs of those functions intersect, right?",
  "model": "nmt",
  "translatedText": "Bir f x fonksiyonunun başka bir g x fonksiyonuna ne zaman eşit olduğunu bilmek istiyorsanız, bunu bu fonksiyonların grafiklerinin kesiştiği zamanı aramak olarak düşünebilirsiniz, değil mi?",
  "time_range": [
   65.08,
   74.52
  ],
  "n_reviews": 0
 },
 {
  "input": "I mean, that gives you an input where both functions have the same output.",
  "model": "nmt",
  "translatedText": "Demek istediğim, bu size her iki fonksiyonun da aynı çıktıya sahip olduğu bir girdi verir.",
  "time_range": [
   75.02,
   78.52
  ],
  "n_reviews": 0
 },
 {
  "input": "To take a very simple example, imagine f of x is x squared, and g of x is the constant function 2.",
  "model": "nmt",
  "translatedText": "Çok basit bir örnek alırsak, f(x)'in x kare olduğunu ve g(x)'in sabit fonksiyon 2 olduğunu hayal edin.",
  "time_range": [
   78.52,
   85.3
  ],
  "n_reviews": 0
 },
 {
  "input": "In other words, you want to find the square root of 2.",
  "model": "nmt",
  "translatedText": "Başka bir deyişle 2'nin karekökünü bulmak istiyorsunuz.",
  "time_range": [
   85.96,
   88.64
  ],
  "n_reviews": 0
 },
 {
  "input": "Even if you know almost nothing about finding square roots, you can probably see that 1 squared is less than 2, and 2 squared is bigger than 2, so you realize, ah, there's going to be some solution in between those two values.",
  "model": "nmt",
  "translatedText": "Karekök bulma konusunda neredeyse hiçbir şey bilmiyor olsanız bile, muhtemelen 1 karenin 2'den küçük olduğunu ve 2 karenin 2'den büyük olduğunu görebilirsiniz, yani bu iki değer arasında bir çözüm olacağını fark edersiniz.",
  "time_range": [
   89.46,
   101.86
  ],
  "n_reviews": 0
 },
 {
  "input": "And then if you wanted to narrow it down further, maybe you try squaring the halfway point, 1.5.",
  "model": "nmt",
  "translatedText": "Ve eğer onu daha da daraltmak isterseniz, belki de orta nokta olan 1'in karesini almayı deneyebilirsiniz.5.",
  "time_range": [
   102.58,
   107.14
  ],
  "n_reviews": 0
 },
 {
  "input": "This comes out to be 2.25, a little too high, so you'd focus on the region between 1 and 1.5.",
  "model": "nmt",
  "translatedText": "Bu 2 olarak çıkıyor.25, biraz fazla yüksek, dolayısıyla 1 ile 1 arasındaki bölgeye odaklanırsınız.5.",
  "time_range": [
   107.72,
   113.76
  ],
  "n_reviews": 0
 },
 {
  "input": "And so on, you can probably see how this would keep going, you'd keep computing at the midpoint and then chopping your search space in half.",
  "model": "nmt",
  "translatedText": "Ve bunun gibi, muhtemelen bunun nasıl devam edeceğini görebilirsiniz, orta noktada hesaplamaya devam edersiniz ve ardından arama alanınızı ikiye bölersiniz.",
  "time_range": [
   114.76,
   120.92
  ],
  "n_reviews": 0
 },
 {
  "input": "Another way to think about this, which is going to make it easier for us once we get up to higher dimensions, is to instead focus on the equivalent question for when the difference between these two functions is zero.",
  "model": "nmt",
  "translatedText": "Bunu düşünmenin başka bir yolu da, ki bu daha yüksek boyutlara çıktığımızda işimizi kolaylaştıracak, bunun yerine bu iki fonksiyon arasındaki farkın sıfır olduğu eşdeğer soruya odaklanmaktır.",
  "time_range": [
   125.10000000000001,
   135.52
  ],
  "n_reviews": 0
 },
 {
  "input": "In those terms, we found a region of inputs where that difference was negative on one end, and it was positive on another end.",
  "model": "nmt",
  "translatedText": "Bu bağlamda, bu farkın bir tarafta negatif, diğer tarafta ise pozitif olduğu bir girdi bölgesi bulduk.",
  "time_range": [
   136.1,
   144.18
  ],
  "n_reviews": 0
 },
 {
  "input": "We split it into two, and the half we narrowed our attention to was the one where the outermost points had varying signs.",
  "model": "nmt",
  "translatedText": "Onu ikiye böldük ve dikkatimizi daralttığımız kısım, en dıştaki noktaların farklı işaretlerin olduğu kısımdı.",
  "time_range": [
   144.18,
   151.5
  ],
  "n_reviews": 0
 },
 {
  "input": "Like this, we were able to keep going forever, taking each region with varying signs on the border, finding a smaller such region among its halves, knowing that ultimately we have to be narrowing in on a point which is going to be exactly zero.",
  "model": "nmt",
  "translatedText": "Bu şekilde, sınırda farklı işaretlere sahip her bölgeyi ele alarak, yarıları arasında böyle daha küçük bir bölge bularak, sonuçta tam olarak sıfır olacak bir noktaya daralmamız gerektiğini bilerek sonsuza kadar devam edebildik.",
  "time_range": [
   151.5,
   164.2
  ],
  "n_reviews": 0
 },
 {
  "input": "In short, solving equations can always be framed as finding when a certain function is equal to zero, and to do that, we have this heuristic, if f is positive at one point and negative at another point, you can find someplace in between where it's zero, at least if everything changes smoothly with no sudden jumps.",
  "model": "nmt",
  "translatedText": "Kısacası, denklemleri çözmek her zaman belirli bir fonksiyonun sıfıra eşit olduğu zamanı bulmak olarak çerçevelenebilir ve bunu yapmak için şu buluşsal yönteme sahibiz, eğer f bir noktada pozitif, başka bir noktada negatifse, bunların arasında bir yer bulabilirsiniz. en azından her şey ani sıçramalar olmadan düzgün bir şekilde değişiyorsa sıfırdır.",
  "time_range": [
   165.76,
   183.9
  ],
  "n_reviews": 0
 },
 {
  "input": "The amazing thing I want to show you is that you can extend this kind of thinking into two-dimensional equations, equations between functions whose inputs and outputs are both two-dimensional.",
  "model": "nmt",
  "translatedText": "Size göstermek istediğim muhteşem şey, bu tür düşünmeyi iki boyutlu denklemlere, yani girdileri ve çıktıları iki boyutlu olan fonksiyonlar arasındaki denklemlere genişletebilmenizdir.",
  "time_range": [
   183.9,
   194.08
  ],
  "n_reviews": 0
 },
 {
  "input": "For example, complex numbers are 2D, and this tool we're developing is perfect for finding solutions to complex equations.",
  "model": "nmt",
  "translatedText": "Örneğin, karmaşık sayılar 2 boyutludur ve geliştirdiğimiz bu araç, karmaşık denklemlere çözüm bulmak için mükemmeldir.",
  "time_range": [
   194.73999999999998,
   201.4
  ],
  "n_reviews": 0
 },
 {
  "input": "Now, since we're going to be talking about these 2D functions so much, let's take a brief side step and consider how we illustrate these.",
  "model": "nmt",
  "translatedText": "Şimdi, bu 2B işlevler hakkında bu kadar çok konuşacağımıza göre, kısa bir yan adım atalım ve bunları nasıl gösterdiğimizi düşünelim.",
  "time_range": [
   202.36,
   208.34
  ],
  "n_reviews": 0
 },
 {
  "input": "Graphing a function with a 2D input and 2D output would require four dimensions, and that's not going to work so well in our 3D world on our 2D screens, but we still have a couple good options.",
  "model": "nmt",
  "translatedText": "Bir fonksiyonun 2B giriş ve 2B çıkışla grafiğini çizmek dört boyut gerektirir ve bu, 3B dünyamızda 2B ekranlarımızda pek işe yaramayacaktır, ancak yine de birkaç iyi seçeneğimiz var.",
  "time_range": [
   209.06,
   220.22
  ],
  "n_reviews": 0
 },
 {
  "input": "One is to just look at both the input space and output space side by side.",
  "model": "nmt",
  "translatedText": "Birincisi, hem girdi uzayına hem de çıktı uzayına yan yana bakmaktır.",
  "time_range": [
   220.85999999999999,
   225.44
  ],
  "n_reviews": 0
 },
 {
  "input": "Each point in the input space moves to a particular point in the output space, and I can show how moving around that input point corresponds to certain movements in the output space.",
  "model": "nmt",
  "translatedText": "Giriş uzayındaki her nokta, çıktı uzayındaki belirli bir noktaya hareket eder ve bu girdi noktası etrafında hareket etmenin, çıktı uzayındaki belirli hareketlere nasıl karşılık geldiğini gösterebilirim.",
  "time_range": [
   225.54,
   236.26
  ],
  "n_reviews": 0
 },
 {
  "input": "All of the functions we consider will be continuous, in the sense that small little changes to the input only correspond to small little changes in the output, there's no sudden jumps.",
  "model": "nmt",
  "translatedText": "Düşündüğümüz tüm işlevler sürekli olacaktır; yani girdideki küçük küçük değişiklikler yalnızca çıktıdaki küçük küçük değişikliklere karşılık gelir; ani sıçramalar olmaz.",
  "time_range": [
   236.94,
   246.3
  ],
  "n_reviews": 0
 },
 {
  "input": "Another option we have is to imagine the arrow from the origin of the output space to that output point, and to attach a miniature version of that arrow to the input point.",
  "model": "nmt",
  "translatedText": "Diğer bir seçeneğimiz de, çıkış uzayının orijininden o çıkış noktasına kadar olan oku hayal etmek ve bu okun minyatür bir versiyonunu giriş noktasına iliştirmektir.",
  "time_range": [
   246.94,
   256.58
  ],
  "n_reviews": 0
 },
 {
  "input": "This can give us a sense, at a glance, for where a given input point goes, or where many different input points go by drawing the full vector field.",
  "model": "nmt",
  "translatedText": "Bu bize, belirli bir giriş noktasının nereye gittiğine veya tam vektör alanını çizerek birçok farklı giriş noktasının nereye gittiğine dair bir bakışta fikir verebilir.",
  "time_range": [
   257.36,
   265.84
  ],
  "n_reviews": 0
 },
 {
  "input": "And unfortunately when you do this at a lot of points it can get pretty cluttered, so here let me make all of the arrows the same size, and what this means is we can get a sense of the direction of each output point.",
  "model": "nmt",
  "translatedText": "Ve ne yazık ki bunu birçok noktada yaptığınızda, oldukça karmaşık hale gelebilir, bu yüzden burada tüm okları aynı boyutta yapayım ve bu, her çıkış noktasının yönüne dair bir fikir edinebileceğimiz anlamına geliyor.",
  "time_range": [
   267.6,
   277.1
  ],
  "n_reviews": 0
 },
 {
  "input": "But perhaps the prettiest way to illustrate two-dimensional functions, and the one we'll be using most this video, is to associate each point in that output space with a color.",
  "model": "nmt",
  "translatedText": "Ama belki de iki boyutlu fonksiyonları göstermenin en güzel yolu ve bu videoda en çok kullanacağımız yol, çıktı uzayındaki her noktayı bir renkle ilişkilendirmektir.",
  "time_range": [
   277.78,
   286.38
  ],
  "n_reviews": 0
 },
 {
  "input": "Here we've used hues, that is where the color falls along a rainbow or a color wheel, to correspond to the direction away from the origin, and we're using darkness or brightness to correspond to the distance from the origin.",
  "model": "nmt",
  "translatedText": "Burada, orijinden uzak yöne karşılık gelecek şekilde renklerin gökkuşağı veya renk tekerleği boyunca düştüğü noktalarda tonlar kullandık ve kökenden uzaklığa karşılık gelecek şekilde karanlık veya parlaklık kullanıyoruz.",
  "time_range": [
   287.22,
   299.26
  ],
  "n_reviews": 0
 },
 {
  "input": "For example, focusing on this array of outputs, all of these points are red, but the ones closer to the origin are a little darker, and the ones farther away are a little brighter.",
  "model": "nmt",
  "translatedText": "Örneğin, bu çıktı dizisine odaklandığımızda, bu noktaların tümü kırmızıdır ancak orijine yakın olanlar biraz daha koyu, uzakta olanlar ise biraz daha parlaktır.",
  "time_range": [
   299.26,
   309.62
  ],
  "n_reviews": 0
 },
 {
  "input": "And focusing on this array of outputs, all of the points are green, and again, closer to the origin means darker, farther away means lighter.",
  "model": "nmt",
  "translatedText": "Ve bu çıktı dizisine odaklanıldığında, tüm noktalar yeşildir ve yine, orijine yakın olmak daha koyu, daha uzak olmak ise daha açık anlamına gelir.",
  "time_range": [
   310.36,
   317.98
  ],
  "n_reviews": 0
 },
 {
  "input": "And so on, all we're doing here is assigning a specific color to each direction, all changing continuously.",
  "model": "nmt",
  "translatedText": "Ve böylece, burada yaptığımız tek şey her yöne belirli bir renk atamak ve hepsi sürekli değişiyor.",
  "time_range": [
   318.78,
   324.84
  ],
  "n_reviews": 0
 },
 {
  "input": "You might notice the darkness and brightness differences here are pretty subtle, but for this video, all we care about is the direction of outputs, not the magnitudes, the hues, not the brightness.",
  "model": "nmt",
  "translatedText": "Buradaki karanlık ve parlaklık farklılıklarının oldukça incelikli olduğunu fark edebilirsiniz, ancak bu video için önemsediğimiz tek şey çıktıların yönüdür, büyüklükleri, tonları veya parlaklığı değil.",
  "time_range": [
   325.35999999999996,
   334.56
  ],
  "n_reviews": 0
 },
 {
  "input": "The one important thing about brightness for you to notice is that near the origin, which has no particular direction, all of the colors fade to black.",
  "model": "nmt",
  "translatedText": "Parlaklıkla ilgili dikkat etmeniz gereken önemli nokta, belirli bir yönü olmayan orijin yakınında tüm renklerin siyaha dönüşmesidir.",
  "time_range": [
   335.3,
   343.12
  ],
  "n_reviews": 0
 },
 {
  "input": "So for thinking about functions, now that we've decided on a color for each output, we can visualize 2D functions by coloring each point in the input space based on the color of the point where it lands in the output space.",
  "model": "nmt",
  "translatedText": "Fonksiyonlar hakkında düşünmek için, artık her çıktı için bir renge karar verdiğimize göre, girdi uzayındaki her noktayı çıktı uzayına düştüğü noktanın rengine göre renklendirerek 2 boyutlu fonksiyonları görselleştirebiliriz.",
  "time_range": [
   344.44,
   357.1
  ],
  "n_reviews": 0
 },
 {
  "input": "I like to imagine many different points from that input space hopping over to their corresponding outputs in the output space, then getting painted based on the color of the point where they land, and then hopping back to where they came from in the input space.",
  "model": "nmt",
  "translatedText": "Bu girdi uzayındaki birçok farklı noktanın, çıktı uzayındaki karşılık gelen çıktılarına atladığını, sonra indikleri noktanın rengine göre boyandığını ve sonra girdi uzayında geldikleri yere geri atladıklarını hayal etmeyi seviyorum.",
  "time_range": [
   357.84,
   370.36
  ],
  "n_reviews": 0
 },
 {
  "input": "Doing this for every point in the input space, you can get a sense just by looking at that input space for roughly where the function takes each point.",
  "model": "nmt",
  "translatedText": "Bunu girdi uzayındaki her nokta için yaparak, fonksiyonun her noktayı kabaca nereye götürdüğüne dair girdi uzayına bakarak bir fikir edinebilirsiniz.",
  "time_range": [
   371.64,
   378.14
  ],
  "n_reviews": 0
 },
 {
  "input": "For example, this stripe of pink points on the left tells us that all of those points get mapped somewhere in the pink direction, that lower left of the output space.",
  "model": "nmt",
  "translatedText": "Örneğin, soldaki pembe noktalardan oluşan bu şerit bize tüm bu noktaların çıktı alanının sol alt kısmındaki pembe yönde bir yere haritalandığını söyler.",
  "time_range": [
   378.14,
   388.28
  ],
  "n_reviews": 0
 },
 {
  "input": "Also those three points which are black with lots of colors around them are the ones that go to zero.",
  "model": "nmt",
  "translatedText": "Ayrıca etraflarında pek çok renk bulunan siyah üç nokta da sıfıra giden noktalardır.",
  "time_range": [
   389.78,
   394.9
  ],
  "n_reviews": 0
 },
 {
  "input": "Alright, so just like the 1D case, solving equations of 2D functions can always be reframed by asking when a certain function is equal to zero.",
  "model": "nmt",
  "translatedText": "Tamam, tıpkı 1 boyutlu durumda olduğu gibi, 2 boyutlu fonksiyonların denklemlerini çözmek, belirli bir fonksiyonun ne zaman sıfıra eşit olduğu sorularak her zaman yeniden düzenlenebilir.",
  "time_range": [
   399.34,
   408.88
  ],
  "n_reviews": 0
 },
 {
  "input": "So that's our challenge right now, create an algorithm that finds which input points of a given 2D function go to zero.",
  "model": "nmt",
  "translatedText": "Şu andaki görevimiz bu, belirli bir 2B fonksiyonun hangi giriş noktalarının sıfıra gittiğini bulan bir algoritma oluşturmak.",
  "time_range": [
   409.58,
   420.9
  ],
  "n_reviews": 0
 },
 {
  "input": "You might point out that if you're looking at a color map like this by seeing those black dots, you already know where the zeros of the function are.",
  "model": "nmt",
  "translatedText": "Bunun gibi bir renkli haritaya bu siyah noktaları görerek bakıyorsanız, fonksiyonun sıfırlarının nerede olduğunu zaten bildiğinizi belirtebilirsiniz.",
  "time_range": [
   420.9,
   428.3
  ],
  "n_reviews": 0
 },
 {
  "input": "So does that count?",
  "model": "nmt",
  "translatedText": "Peki bu sayılır mı?",
  "time_range": [
   428.62,
   431.08
  ],
  "n_reviews": 0
 },
 {
  "input": "Keep in mind that to create a diagram like this, we've had the computer compute the function at all the pixels on the plane, but our goal is to find a more efficient algorithm that only requires computing the function at as few points as possible, only having a limited view of the colors, so to speak.",
  "model": "nmt",
  "translatedText": "Bunun gibi bir diyagram oluşturmak için, bilgisayarın düzlemdeki tüm piksellerdeki işlevi hesaplamasını sağladığımızı unutmayın; ancak amacımız, işlevi yalnızca mümkün olduğunca az sayıda noktada hesaplamayı gerektiren daha verimli bir algoritma bulmaktır. tabiri caizse yalnızca sınırlı bir renk görüşüne sahip.",
  "time_range": [
   431.08,
   447.86
  ],
  "n_reviews": 0
 },
 {
  "input": "And also from a more theoretical standpoint, it'd be nice to have a general construct that tells us the conditions for whether or not a zero exists inside a given region.",
  "model": "nmt",
  "translatedText": "Ayrıca daha teorik bir bakış açısından, belirli bir bölgede sıfırın olup olmadığının koşullarını bize söyleyen genel bir yapıya sahip olmak güzel olurdu.",
  "time_range": [
   449.36,
   459.08
  ],
  "n_reviews": 0
 },
 {
  "input": "Remember, in one dimension the main insight was that if a continuous function is positive at one point and negative at another, somewhere in between it must be zero.",
  "model": "nmt",
  "translatedText": "Unutmayın, bir boyuttaki temel anlayış, sürekli bir fonksiyonun bir noktada pozitif, diğer noktada negatif olması durumunda bu ikisinin arasında bir yerde sıfır olması gerektiğiydi.",
  "time_range": [
   459.08,
   467.92
  ],
  "n_reviews": 0
 },
 {
  "input": "So how do we extend that into two dimensions?",
  "model": "nmt",
  "translatedText": "Peki bunu iki boyuta nasıl genişletebiliriz?",
  "time_range": [
   468.84,
   470.58
  ],
  "n_reviews": 0
 },
 {
  "input": "We need some sort of analog of talking about signs.",
  "model": "nmt",
  "translatedText": "İşaretler hakkında konuşmanın bir tür analoguna ihtiyacımız var.",
  "time_range": [
   470.94,
   473.58
  ],
  "n_reviews": 0
 },
 {
  "input": "One way to think about what signs even are is directions.",
  "model": "nmt",
  "translatedText": "İşaretlerin ne olduğunu düşünmenin bir yolu da yönlerdir.",
  "time_range": [
   474.7,
   478.14
  ],
  "n_reviews": 0
 },
 {
  "input": "Positive means you're pointing to the right along the number line, and negative means you're pointing to the left.",
  "model": "nmt",
  "translatedText": "Pozitif, sayı doğrusu boyunca sağa işaret ettiğiniz anlamına gelir, negatif ise sola işaret ettiğiniz anlamına gelir.",
  "time_range": [
   478.8,
   483.5
  ],
  "n_reviews": 0
 },
 {
  "input": "Two-dimensional quantities also have direction, but for them the options are much wider, they can point anywhere along a whole circle of possibilities.",
  "model": "nmt",
  "translatedText": "İki boyutlu niceliklerin de yönü vardır, ancak onlar için seçenekler çok daha geniştir; olasılıklar çemberi boyunca herhangi bir yeri işaret edebilirler.",
  "time_range": [
   484.2,
   491.8
  ],
  "n_reviews": 0
 },
 {
  "input": "So the same way that in one dimension we were asking whether a given function is positive or negative on the boundary of a range, which is just two points, for 2d functions we're going to be looking at the boundary of a region, which is a loop, and ask about the direction of the function's output along that boundary.",
  "model": "nmt",
  "translatedText": "Aynı şekilde, bir boyutta belirli bir fonksiyonun sadece iki nokta olan bir aralığın sınırında pozitif mi yoksa negatif mi olduğunu sorduğumuz gibi, 2d fonksiyonlar için de bir bölgenin sınırına bakacağız; bir döngüdür ve fonksiyonun çıktısının bu sınır boyunca yönünü sorun.",
  "time_range": [
   492.53000000000003,
   510.86
  ],
  "n_reviews": 0
 },
 {
  "input": "For example, we see that along this loop around this zero, the output goes through every possible direction, all the colors of the rainbow, red, yellow, green, blue, back to red, and everything in between along the way.",
  "model": "nmt",
  "translatedText": "Örneğin, bu sıfır etrafındaki bu döngü boyunca çıktının mümkün olan her yönden, gökkuşağının tüm renklerinden, kırmızı, sarı, yeşil, maviden kırmızıya ve aradaki her şeyden geçtiğini görüyoruz.",
  "time_range": [
   513.64,
   525.06
  ],
  "n_reviews": 0
 },
 {
  "input": "But along this loop over here, with no zeros inside of it, the output doesn't go through every color, it goes through some of the orangish ones, but never, say, green or blue.",
  "model": "nmt",
  "translatedText": "Ama buradaki döngü boyunca, içinde hiç sıfır olmadan, çıktı her renkten geçmiyor, bazı turuncu renklerden geçiyor ama asla yeşil veya maviden geçmiyor.",
  "time_range": [
   525.7,
   534.64
  ],
  "n_reviews": 0
 },
 {
  "input": "And this is promising, it looks a lot like how things worked in one dimension.",
  "model": "nmt",
  "translatedText": "Ve bu umut verici, tek boyutta işlerin nasıl yürüdüğüne çok benziyor.",
  "time_range": [
   535.3,
   538.46
  ],
  "n_reviews": 0
 },
 {
  "input": "Maybe in the same way that if a 1d function takes both possible signs on the boundary of a 1d region, there was a zero somewhere inside, we might hypothesize that if a 2d function hits outputs of all possible directions, all possible colors, along the boundary of a 2d region, then somewhere inside that region it must go to zero.",
  "model": "nmt",
  "translatedText": "Belki aynı şekilde, eğer bir 1d fonksiyonu bir 1d bölgesinin sınırında her iki olası işareti de alıyorsa, içeride bir yerde sıfır vardır, eğer bir 2d fonksiyonu bölge boyunca tüm olası yönlerin, tüm olası renklerin çıktılarına çarpıyorsa, şunu varsayabiliriz. 2d bölgesinin sınırı varsa, bu bölgenin içinde bir yerde sıfıra gitmesi gerekir.",
  "time_range": [
   539.34,
   559.86
  ],
  "n_reviews": 0
 },
 {
  "input": "So that's our guess, and take a moment to think about if this should be true, and if so why.",
  "model": "nmt",
  "translatedText": "Bizim tahminimiz bu ve bunun doğru olup olmadığını ve eğer öyleyse nedenini düşünmek için bir dakikanızı ayırın.",
  "time_range": [
   560.96,
   566.12
  ],
  "n_reviews": 0
 },
 {
  "input": "If we start thinking about a tiny loop around some input point, we know that since everything is continuous, our function takes it to some tiny loop near the corresponding output.",
  "model": "nmt",
  "translatedText": "Bir giriş noktası etrafındaki küçük bir döngüyü düşünmeye başlarsak, her şey sürekli olduğundan fonksiyonumuzun onu karşılık gelen çıkışın yakınındaki küçük bir döngüye götürdüğünü biliyoruz.",
  "time_range": [
   567.42,
   576.28
  ],
  "n_reviews": 0
 },
 {
  "input": "But look, for most tiny loops, the output varies in color.",
  "model": "nmt",
  "translatedText": "Ancak bakın, çoğu küçük döngü için çıktının rengi değişir.",
  "time_range": [
   577.14,
   580.52
  ],
  "n_reviews": 0
 },
 {
  "input": "If you pick any output point other than zero, and draw a sufficiently tight loop near it, the loop's colors are all going to be about the same color as that point.",
  "model": "nmt",
  "translatedText": "Sıfır dışında herhangi bir çıkış noktası seçerseniz ve yakınına yeterince sıkı bir döngü çizerseniz, döngünün renklerinin tümü o noktayla hemen hemen aynı renkte olacaktır.",
  "time_range": [
   580.98,
   589.42
  ],
  "n_reviews": 0
 },
 {
  "input": "A tight loop over here is all bluish, a tight loop over here is all yellowish, you certainly aren't going to get every color of the rainbow.",
  "model": "nmt",
  "translatedText": "Buradaki sıkı bir döngü tamamen mavimsi, buradaki sıkı bir döngü tamamen sarımsı, kesinlikle gökkuşağının her rengini elde edemeyeceksiniz.",
  "time_range": [
   589.84,
   597.68
  ],
  "n_reviews": 0
 },
 {
  "input": "The only point where you can tighten loops around it while still getting all the colors is the colorless origin, zero itself.",
  "model": "nmt",
  "translatedText": "Etrafındaki ilmekleri sıkılaştırıp tüm renkleri elde edebileceğiniz tek nokta renksiz köken, yani sıfırın kendisidir.",
  "time_range": [
   598.22,
   606.32
  ],
  "n_reviews": 0
 },
 {
  "input": "So it is indeed the case that if you have loops going through every color of the rainbow, tightening and tightening, narrowing in on a point, then that point must in fact be a zero.",
  "model": "nmt",
  "translatedText": "Yani eğer gökkuşağının her renginden geçen, sıklaşan ve sıklaşan, bir noktaya daralan döngüleriniz varsa, o zaman bu noktanın aslında sıfır olması gerekir.",
  "time_range": [
   607.1,
   616.38
  ],
  "n_reviews": 0
 },
 {
  "input": "And so let's set up a 2d equation solver just like our one-dimensional equation solver.",
  "model": "nmt",
  "translatedText": "O halde hadi tek boyutlu denklem çözücümüz gibi 2 boyutlu bir denklem çözücü kuralım.",
  "time_range": [
   617.32,
   621.86
  ],
  "n_reviews": 0
 },
 {
  "input": "When we find a large region whose border goes through every color, split it into two, and then look at the colors on the boundary of each half.",
  "model": "nmt",
  "translatedText": "Sınırı her rengin içinden geçen geniş bir bölge bulduğumuzda, onu ikiye bölüp her yarının sınırındaki renklere bakalım.",
  "time_range": [
   622.26,
   629.9
  ],
  "n_reviews": 0
 },
 {
  "input": "In the example shown here, the border on the left half doesn't go through all colors, there are no points that map to the orangeish yellowish directions, for example.",
  "model": "nmt",
  "translatedText": "Burada gösterilen örnekte, sol yarıdaki kenarlık tüm renklerden geçmiyor; örneğin turuncumsu sarımsı yönlerle eşleşen hiçbir nokta yok.",
  "time_range": [
   630.54,
   638.6
  ],
  "n_reviews": 0
 },
 {
  "input": "So I'll grey out this area as a way of saying we don't want to search it any further.",
  "model": "nmt",
  "translatedText": "Bu yüzden, daha fazla araştırma yapmak istemediğimizi belirtmek için bu alanı grileştireceğim.",
  "time_range": [
   639.06,
   642.62
  ],
  "n_reviews": 0
 },
 {
  "input": "The right half does go through all the colors, spends a lot of time in the green direction, then passes through yellow orange red, as well as blue violet pink.",
  "model": "nmt",
  "translatedText": "Sağ yarı tüm renklerden geçer, yeşil yönde çok fazla zaman harcar, ardından sarı turuncu kırmızının yanı sıra mavi mor pembeye geçer.",
  "time_range": [
   643.38,
   650.7
  ],
  "n_reviews": 0
 },
 {
  "input": "Now remember, what that means is that points of this boundary get mapped to outputs of all possible directions.",
  "model": "nmt",
  "translatedText": "Şimdi bunun anlamının, bu sınırın noktalarının olası tüm yönlerin çıktılarıyla eşleştirilmesi olduğunu unutmayın.",
  "time_range": [
   651.56,
   657.36
  ],
  "n_reviews": 0
 },
 {
  "input": "So we'll explore it further, subdividing again and checking the boundary for each region.",
  "model": "nmt",
  "translatedText": "Bu yüzden onu daha fazla inceleyeceğiz, tekrar alt bölümlere ayıracağız ve her bölgenin sınırlarını kontrol edeceğiz.",
  "time_range": [
   657.84,
   661.86
  ],
  "n_reviews": 0
 },
 {
  "input": "The boundary of the top is all green, so we'll stop searching there.",
  "model": "nmt",
  "translatedText": "Tepenin sınırı tamamen yeşil, o yüzden aramayı orada bırakacağız.",
  "time_range": [
   662.88,
   666.56
  ],
  "n_reviews": 0
 },
 {
  "input": "But the bottom is colorful enough to deserve a subdivision.",
  "model": "nmt",
  "translatedText": "Ama alt kısmı bir alt bölümü hak edecek kadar renkli.",
  "time_range": [
   666.86,
   669.52
  ],
  "n_reviews": 0
 },
 {
  "input": "And just continue like this.",
  "model": "nmt",
  "translatedText": "Ve böyle devam edin.",
  "time_range": [
   670.34,
   672.02
  ],
  "n_reviews": 0
 },
 {
  "input": "Check which subregion has a boundary covering all possible colors, meaning points of that boundary get mapped to all possible directions, and keep chopping those regions in half like we did for the one-dimensional case, eventually leading us to a zero over the func- Oh, hang on a second.",
  "model": "nmt",
  "translatedText": "Hangi alt bölgenin olası tüm renkleri kapsayan bir sınırı olduğunu kontrol edin; bu, bu sınırın noktalarının tüm olası yönlere eşlendiği anlamına gelir ve tek boyutlu durumda yaptığımız gibi bu bölgeleri ikiye bölmeye devam edin, sonunda bizi fonksiyon üzerinde sıfıra yönlendirin. Ah, durun bir saniye.",
  "time_range": [
   672.36,
   687.48
  ],
  "n_reviews": 0
 },
 {
  "input": "What happened here?",
  "model": "nmt",
  "translatedText": "Burada ne oldu?",
  "time_range": [
   688.88,
   689.92
  ],
  "n_reviews": 0
 },
 {
  "input": "Neither of those last subdivisions on the bottom right passed through all the colors, so our algorithm stopped because it didn't want to search through either of those, but it also didn't find a zero.",
  "model": "nmt",
  "translatedText": "Sağ alttaki son alt bölümlerin hiçbiri tüm renkleri geçemedi, dolayısıyla algoritmamız durdu çünkü bunların hiçbirinde arama yapmak istemedi ama aynı zamanda sıfır da bulamadı.",
  "time_range": [
   690.38,
   699.92
  ],
  "n_reviews": 0
 },
 {
  "input": "Okay, clearly something's wrong here.",
  "model": "nmt",
  "translatedText": "Tamam, burada bir şeylerin yanlış olduğu açık.",
  "time_range": [
   701.06,
   703.3
  ],
  "n_reviews": 0
 },
 {
  "input": "And that's okay, being wrong is a regular part of doing math.",
  "model": "nmt",
  "translatedText": "Ve bunda sorun yok, hatalı olmak matematik yapmanın olağan bir parçasıdır.",
  "time_range": [
   703.54,
   706.52
  ],
  "n_reviews": 0
 },
 {
  "input": "If we look back, we had this hypothesis, and it led us to this proposed algorithm, so we were mistaken somewhere.",
  "model": "nmt",
  "translatedText": "Geriye dönüp baktığımızda, bir hipotezimiz vardı ve bu bizi önerilen bu algoritmaya götürdü, yani bir yerde yanılmıştık.",
  "time_range": [
   706.52,
   712.98
  ],
  "n_reviews": 0
 },
 {
  "input": "And being good at math is not about being right the first time, it's about having the resilience to carefully look back and understand the mistakes, and understand how to fix them.",
  "model": "nmt",
  "translatedText": "Ve matematikte iyi olmak ilk seferde haklı olmak değil, dikkatlice geriye bakıp hataları anlamak ve onları nasıl düzelteceğinizi anlamak için gereken dayanıklılığa sahip olmakla ilgilidir.",
  "time_range": [
   713.66,
   721.8
  ],
  "n_reviews": 0
 },
 {
  "input": "Now the problem here is that we had a region whose border went through every color, but when we split it in the middle, neither subregion's border went through every color, we had no options for where to keep searching next, and that broke the zero finder.",
  "model": "nmt",
  "translatedText": "Şimdi buradaki sorun şu ki, sınırı her renkten geçen bir bölgemiz vardı, ancak onu ortadan böldüğümüzde, hiçbir alt bölgenin sınırı her renkten geçmiyordu, bir sonraki aramaya nerede devam edeceğimiz konusunda hiçbir seçeneğimiz yoktu ve bu da sıfırı kırdı bulucu.",
  "time_range": [
   722.48,
   734.74
  ],
  "n_reviews": 0
 },
 {
  "input": "Now in one dimension, this sort of thing never happened.",
  "model": "nmt",
  "translatedText": "Şimdi, bir boyutta bu tür şeyler asla gerçekleşmedi.",
  "time_range": [
   734.74,
   737.56
  ],
  "n_reviews": 0
 },
 {
  "input": "Any time you had an interval whose endpoints have different signs, if you split it up, you know that you're guaranteed to get some subinterval whose endpoints also have different signs.",
  "model": "nmt",
  "translatedText": "Uç noktaları farklı işaretlere sahip bir aralığınız olduğunda, eğer onu bölerseniz, uç noktaları da farklı işaretlere sahip bir alt aralık elde edeceğinizin garanti olduğunu bilirsiniz.",
  "time_range": [
   737.98,
   748.46
  ],
  "n_reviews": 0
 },
 {
  "input": "Or put another way, any time you have two intervals whose endpoints don't change signs, if you combine them, you'll get a bigger interval whose endpoints also don't change sign.",
  "model": "nmt",
  "translatedText": "Veya başka bir deyişle, uç noktaları işaret değiştirmeyen iki aralığınız varsa, bunları birleştirirseniz, uç noktaları da işaret değiştirmeyen daha büyük bir aralık elde edersiniz.",
  "time_range": [
   749.02,
   758.38
  ],
  "n_reviews": 0
 },
 {
  "input": "But in two dimensions, it's possible to find two regions whose borders don't go through every color, but whose boundaries combine to give a region whose border does go through every color.",
  "model": "nmt",
  "translatedText": "Ancak iki boyutta, sınırları her renkten geçmeyen, ancak sınırları birleşerek sınırları her renkten geçen bir bölge oluşturan iki bölge bulmak mümkündür.",
  "time_range": [
   759.08,
   769.1
  ],
  "n_reviews": 0
 },
 {
  "input": "And in just this way, our proposed zero-finding algorithm broke.",
  "model": "nmt",
  "translatedText": "Ve bu şekilde, önerdiğimiz sıfır bulma algoritmamız bozuldu.",
  "time_range": [
   769.84,
   773.5
  ],
  "n_reviews": 0
 },
 {
  "input": "In fact, if you think about it, you can find a big loop whose border goes through every possible color without there being a zero inside of it.",
  "model": "nmt",
  "translatedText": "Aslında düşünürseniz, içinde sıfır olmadan, kenarları olası tüm renklerden geçen büyük bir döngü bulabilirsiniz.",
  "time_range": [
   774.38,
   782.38
  ],
  "n_reviews": 0
 },
 {
  "input": "Now that's not to say that we were wrong in our claims about tiny loops when we said that a forever narrowing loop going through every color has to be narrowing in on a zero.",
  "model": "nmt",
  "translatedText": "Bu, her renkten geçen sonsuza kadar daralan bir döngünün sıfıra doğru daralması gerektiğini söylediğimizde küçük döngülerle ilgili iddialarımızda yanıldığımız anlamına gelmiyor.",
  "time_range": [
   783.08,
   792.16
  ],
  "n_reviews": 0
 },
 {
  "input": "But what made a mess of things for us is that this does-my-border-go-through-every-color-or-not property doesn't combine in a nice, predictable way when you combine regions.",
  "model": "nmt",
  "translatedText": "Ancak bizim için işleri karıştıran şey, bu sınırım her renkten geçer veya geçmez özelliğinin, bölgeleri birleştirdiğinizde hoş ve öngörülebilir bir şekilde birleşmemesidir.",
  "time_range": [
   792.8,
   802.14
  ],
  "n_reviews": 0
 },
 {
  "input": "But don't worry, it turns out we can modify this slightly to a more sophisticated property that does combine to give us what we want.",
  "model": "nmt",
  "translatedText": "Ancak endişelenmeyin, görünen o ki bunu biraz değiştirerek bize istediğimizi verecek daha karmaşık bir özelliğe dönüştürebiliriz.",
  "time_range": [
   803.0,
   810.74
  ],
  "n_reviews": 0
 },
 {
  "input": "The idea is that instead of simply asking whether we can find a color at some point along the loop, let's keep more careful track of how these colors change as we walk around that loop.",
  "model": "nmt",
  "translatedText": "Buradaki fikir, döngünün herhangi bir noktasında bir renk bulup bulamayacağımızı sormak yerine, döngünün etrafında dolaşırken bu renklerin nasıl değiştiğini daha dikkatli takip etmemizdir.",
  "time_range": [
   818.1800000000001,
   827.86
  ],
  "n_reviews": 0
 },
 {
  "input": "Let me show you what I mean with an example.",
  "model": "nmt",
  "translatedText": "Ne demek istediğimi bir örnekle göstereyim.",
  "time_range": [
   828.58,
   829.96
  ],
  "n_reviews": 0
 },
 {
  "input": "I'll keep a little color wheel up here in the corner to help us keep track.",
  "model": "nmt",
  "translatedText": "Takip etmemize yardımcı olması için köşede küçük bir renk tekerleği tutacağım.",
  "time_range": [
   830.4,
   833.26
  ],
  "n_reviews": 0
 },
 {
  "input": "When the colors along a path of inputs move through the rainbow in a specific direction, from red to yellow, yellow to green, green to blue, or blue to red, the output is swinging clockwise.",
  "model": "nmt",
  "translatedText": "Bir girdi yolu üzerindeki renkler gökkuşağında belirli bir yönde (kırmızıdan sarıya, sarıdan yeşile, yeşilden maviye veya maviden kırmızıya) hareket ettiğinde, çıktı saat yönünde sallanır.",
  "time_range": [
   833.94,
   844.96
  ],
  "n_reviews": 0
 },
 {
  "input": "But on the other hand, if the colors move the other way through the rainbow, from blue to green, green to yellow, yellow to red, or red to blue, the output is swinging counterclockwise.",
  "model": "nmt",
  "translatedText": "Ancak diğer taraftan, eğer renkler gökkuşağının diğer yönünde, maviden yeşile, yeşilden sarıya, sarıdan kırmızıya veya kırmızıdan maviye doğru hareket ediyorsa, çıktı saat yönünün tersine sallanıyor demektir.",
  "time_range": [
   845.7,
   856.32
  ],
  "n_reviews": 0
 },
 {
  "input": "So walking along this short path here, the colors wind a fifth of the way clockwise through the color wheel, and walking along this path here, the colors wind another fifth of the way clockwise through the color wheel.",
  "model": "nmt",
  "translatedText": "Buradaki kısa yol boyunca yürürken renkler, renk tekerleği boyunca saat yönünde beşte bir oranında kıvrılır ve buradaki bu yol boyunca yürürken renkler, renk tekerleği boyunca saat yönünde beşte bir oranında daha kıvrılır.",
  "time_range": [
   857.16,
   871.3
  ],
  "n_reviews": 0
 },
 {
  "input": "Of course, that means that if you go through both paths, one after the other, the colors wind a total of two-fifths of a full turn clockwise.",
  "model": "nmt",
  "translatedText": "Elbette bu, her iki yoldan da birbiri ardına geçerseniz, renklerin saat yönünde toplam tam dönüşün beşte ikisi kadar sarıldığı anlamına gelir.",
  "time_range": [
   871.3,
   878.64
  ],
  "n_reviews": 0
 },
 {
  "input": "The total amount of winding just adds up, and this is going to be key, this is the kind of straightforward combining that will be useful to us.",
  "model": "nmt",
  "translatedText": "Toplam sarma miktarı toplanıyor ve bu önemli olacak, bu bizim için yararlı olacak türden basit bir birleştirme.",
  "time_range": [
   879.28,
   887.1
  ],
  "n_reviews": 0
 },
 {
  "input": "When I say total amount of winding, I want you to imagine an old fashioned odometer that ticks forward as the arrow spins clockwise, but backwards as the arrow spins counterclockwise.",
  "model": "nmt",
  "translatedText": "Toplam sarma miktarı dediğimde, ok saat yönünde dönerken ileri, saat yönünün tersine dönerken geriye doğru çalışan eski moda bir kilometre sayacı hayal etmenizi istiyorum.",
  "time_range": [
   887.1,
   897.9
  ],
  "n_reviews": 0
 },
 {
  "input": "So counterclockwise winding counts as negative clockwise winding.",
  "model": "nmt",
  "translatedText": "Yani saat yönünün tersine sarma, saat yönünde negatif sarma olarak sayılır.",
  "time_range": [
   898.74,
   902.46
  ],
  "n_reviews": 0
 },
 {
  "input": "The outputs may turn a lot, but if some of that turning is in the opposite direction, it cancels out.",
  "model": "nmt",
  "translatedText": "Çıkışlar çok fazla dönebilir, ancak bu dönüşün bir kısmı ters yönde ise, bunlar birbirini götürür.",
  "time_range": [
   903.0,
   908.26
  ],
  "n_reviews": 0
 },
 {
  "input": "For example, if you move forward along this path, and then move backwards along that same path, the total amount of winding ends up being zero, the backwards movement literally rewinds through the previously seen colors, reversing all the previous winding, and returning the odometer back to where it started.",
  "model": "nmt",
  "translatedText": "Örneğin, bu yol boyunca ileri doğru hareket ederseniz ve sonra aynı yol boyunca geriye doğru hareket ederseniz, toplam sarım miktarı sıfır olur, geriye doğru hareket tam anlamıyla daha önce görülen renkler arasında geri sarılır, önceki tüm sarımları tersine çevirir ve önceki sarıma geri döner. kilometre sayacı başladığı yere geri döner.",
  "time_range": [
   908.92,
   925.08
  ],
  "n_reviews": 0
 },
 {
  "input": "For our purposes, we'll care most about looking at the winding along loops.",
  "model": "nmt",
  "translatedText": "Amaçlarımız açısından, en çok ilmekler boyunca sarımlara bakmaya önem vereceğiz.",
  "time_range": [
   926.28,
   929.9
  ],
  "n_reviews": 0
 },
 {
  "input": "For example, let's say we walk around this entire loop clockwise.",
  "model": "nmt",
  "translatedText": "Örneğin tüm bu döngüyü saat yönünde yürüdüğümüzü varsayalım.",
  "time_range": [
   930.44,
   934.78
  ],
  "n_reviews": 0
 },
 {
  "input": "The outputs we come across wind around a total of three full clockwise turns, the colors swung through the rainbow, in order, from red to red again, and then again, and again.",
  "model": "nmt",
  "translatedText": "Karşılaştığımız çıktılar saat yönünde toplam üç tam dönüş etrafında dönüyor, renkler gökkuşağının içinde sırayla kırmızıdan kırmızıya, sonra tekrar ve tekrar sallanıyordu.",
  "time_range": [
   934.78,
   946.18
  ],
  "n_reviews": 0
 },
 {
  "input": "In the jargon mathematicians use, we say that along this loop, the total winding number is 3.",
  "model": "nmt",
  "translatedText": "Matematikçilerin kullandığı jargonda bu döngü boyunca toplam sarma sayısının 3 olduğunu söyleriz.",
  "time_range": [
   946.92,
   954.02
  ],
  "n_reviews": 0
 },
 {
  "input": "For other loops, it could be any other whole number, maybe a larger one if the output swings around many times as the input walks around a single loop, or it could be a smaller number if the output only swings around once or twice.",
  "model": "nmt",
  "translatedText": "Diğer döngüler için bu herhangi bir tam sayı olabilir; giriş tek bir döngü etrafında dolaşırken çıktı birçok kez salınırsa daha büyük bir sayı olabilir veya çıktı yalnızca bir veya iki kez salınırsa daha küçük bir sayı olabilir.",
  "time_range": [
   954.02,
   965.98
  ],
  "n_reviews": 0
 },
 {
  "input": "Or that winding number could even be a negative integer, if the output was swinging counterclockwise as we walk clockwise around the loop.",
  "model": "nmt",
  "translatedText": "Veya döngü etrafında saat yönünde yürüdükçe çıktı saat yönünün tersine sallanıyorsa, bu sarma numarası negatif bir tam sayı bile olabilir.",
  "time_range": [
   966.32,
   974.32
  ],
  "n_reviews": 0
 },
 {
  "input": "But along any loop, this total amount of winding has to be a whole number.",
  "model": "nmt",
  "translatedText": "Ancak herhangi bir döngü boyunca bu toplam sarım miktarının tam sayı olması gerekir.",
  "time_range": [
   975.18,
   978.86
  ],
  "n_reviews": 0
 },
 {
  "input": "I mean, by the time you get back to where you started, you'll have the same output that you started with.",
  "model": "nmt",
  "translatedText": "Demek istediğim, başladığınız yere döndüğünüzde, başladığınız çıktının aynısına sahip olacaksınız.",
  "time_range": [
   980.88,
   985.0
  ],
  "n_reviews": 0
 },
 {
  "input": "Incidentally, if a path actually contains a point where the output is precisely zero, then technically you can't define a winding number along that, since the output has no particular direction.",
  "model": "nmt",
  "translatedText": "Bu arada, eğer bir yol gerçekten çıkışın tam olarak sıfır olduğu bir nokta içeriyorsa, o zaman teknik olarak bu nokta boyunca bir sarma numarası tanımlayamazsınız çünkü çıkışın belirli bir yönü yoktur.",
  "time_range": [
   986.1800000000001,
   997.54
  ],
  "n_reviews": 0
 },
 {
  "input": "This isn't going to be a problem for us, because our whole goal is to find zeros, so if this ever comes up, we just lucked out early.",
  "model": "nmt",
  "translatedText": "Bu bizim için sorun olmayacak çünkü bütün amacımız sıfırları bulmak, yani eğer bu gerçekleşirse şansımız erkenden kaçtı.",
  "time_range": [
   997.54,
   1005.16
  ],
  "n_reviews": 0
 },
 {
  "input": "The main thing to notice about these winding numbers is that they add up nicely when you combine paths into bigger paths.",
  "model": "nmt",
  "translatedText": "Bu dolambaçlı sayılarla ilgili dikkat edilmesi gereken en önemli şey, yolları daha büyük yollarla birleştirdiğinizde güzel bir şekilde bir araya gelmeleridir.",
  "time_range": [
   1005.16,
   1010.68
  ],
  "n_reviews": 0
 },
 {
  "input": "But what we really want is for the winding numbers along the borders of regions to add up nicely when we combine regions to make bigger regions.",
  "model": "nmt",
  "translatedText": "Ancak asıl istediğimiz, bölgeleri birleştirip daha büyük bölgeler oluşturduğumuzda, bölgelerin sınırları boyunca uzanan sayıların güzel bir şekilde toplanmasıdır.",
  "time_range": [
   1014.8000000000001,
   1022.44
  ],
  "n_reviews": 0
 },
 {
  "input": "So do we have that property?",
  "model": "nmt",
  "translatedText": "Peki bizim bu özelliğimiz var mı?",
  "time_range": [
   1022.98,
   1024.52
  ],
  "n_reviews": 0
 },
 {
  "input": "Well, take a look.",
  "model": "nmt",
  "translatedText": "Peki, bir göz at.",
  "time_range": [
   1027.76,
   1029.06
  ],
  "n_reviews": 0
 },
 {
  "input": "The winding number as we go clockwise around this region on the left is the sum of the winding numbers from these four paths.",
  "model": "nmt",
  "translatedText": "Soldaki bu bölge etrafında saat yönünde gittiğimizde sarım sayısı bu dört yoldan gelen sarım sayılarının toplamıdır.",
  "time_range": [
   1029.54,
   1036.94
  ],
  "n_reviews": 0
 },
 {
  "input": "And the winding as we go clockwise around this region on the right is the sum of the winding numbers from these four paths.",
  "model": "nmt",
  "translatedText": "Ve sağdaki bu bölge etrafında saat yönünde gittiğimizde sarma, bu dört yoldan gelen sarma sayılarının toplamıdır.",
  "time_range": [
   1037.5,
   1044.36
  ],
  "n_reviews": 0
 },
 {
  "input": "And when we combine those two regions into a bigger one, most of those paths become part of the clockwise border of the bigger region.",
  "model": "nmt",
  "translatedText": "Ve bu iki bölgeyi daha büyük bir bölgede birleştirdiğimizde, bu yolların çoğu, daha büyük bölgenin saat yönündeki sınırının bir parçası haline gelir.",
  "time_range": [
   1045.34,
   1052.5
  ],
  "n_reviews": 0
 },
 {
  "input": "And as for those two paths that don't?",
  "model": "nmt",
  "translatedText": "Peki bunu yapmayan iki yola gelince?",
  "time_range": [
   1053.26,
   1055.8
  ],
  "n_reviews": 0
 },
 {
  "input": "They cancel out perfectly, one of them is just the reverse, the rewinding of the other one like we saw before.",
  "model": "nmt",
  "translatedText": "Mükemmel bir şekilde iptal oluyorlar, biri tam tersi, daha önce gördüğümüz gibi diğerinin geri sarılması.",
  "time_range": [
   1056.02,
   1061.76
  ],
  "n_reviews": 0
 },
 {
  "input": "So the winding numbers along borders of regions add up in just the way we want them to.",
  "model": "nmt",
  "translatedText": "Yani bölgelerin sınırlarındaki dolambaçlı sayılar tam bizim istediğimiz şekilde toplanıyor.",
  "time_range": [
   1062.56,
   1067.9
  ],
  "n_reviews": 0
 },
 {
  "input": "Also side note, this reasoning about oriented borders adding up nicely like this comes up a lot in mathematics, and it often goes under the name Stokes' theorem.",
  "model": "nmt",
  "translatedText": "Ayrıca yan not, yönlendirilmiş sınırların bu şekilde güzel bir şekilde toplanmasıyla ilgili bu mantık matematikte çokça karşımıza çıkıyor ve sıklıkla Stokes teoremi adı altında anılıyor.",
  "time_range": [
   1068.64,
   1076.68
  ],
  "n_reviews": 0
 },
 {
  "input": "Those of you who've studied multivariable calculus might recognize it from that context.",
  "model": "nmt",
  "translatedText": "Çok değişkenli analiz üzerine çalışmış olanlarınız bunu bu bağlamdan tanıyabilir.",
  "time_range": [
   1077.06,
   1081.02
  ],
  "n_reviews": 0
 },
 {
  "input": "So now, finally, with winding numbers in hand, we can get back to our equation solving goals.",
  "model": "nmt",
  "translatedText": "Artık nihayet elimizde dolambaçlı sayılar olduğuna göre denklem çözme hedeflerimize geri dönebiliriz.",
  "time_range": [
   1082.3600000000001,
   1087.44
  ],
  "n_reviews": 0
 },
 {
  "input": "The problem with the region we saw earlier is that even though its border passed through all possible colors, the winding number was actually zero.",
  "model": "nmt",
  "translatedText": "Daha önce gördüğümüz bölgenin sorunu, kenarları olası tüm renklerden geçmesine rağmen sarma sayısının aslında sıfır olmasıdır.",
  "time_range": [
   1088.0,
   1095.94
  ],
  "n_reviews": 0
 },
 {
  "input": "The outputs wound around halfway, through yellow to red, and then started going counterclockwise back the other direction, then continued going through blue and hitting red from the other way, all in such a way that the total winding netted out to be zero.",
  "model": "nmt",
  "translatedText": "Çıkışlar, sarıdan kırmızıya doğru yarıya kadar kıvrıldı ve sonra saat yönünün tersine diğer yöne doğru gitmeye başladı, sonra maviye doğru gitmeye ve diğer taraftan kırmızıya çarpmaya devam etti; bunların hepsi, toplam sargının net olarak sıfır olacağı şekilde oldu.",
  "time_range": [
   1096.5,
   1110.86
  ],
  "n_reviews": 0
 },
 {
  "input": "But if you find a loop which not only hits every color, but it has the stronger condition of a non-zero winding number, then if you were to split it in half, you're guaranteed that at least one of those halves has a non-zero winding number as well, since things add up nicely in the way we want them to.",
  "model": "nmt",
  "translatedText": "Ancak, yalnızca tüm renklere çarpan değil, aynı zamanda sıfırdan farklı bir sarma numarasının daha güçlü koşuluna sahip bir döngü bulursanız, o zaman onu ikiye bölerseniz, bu yarılardan en az birinin bir sayıya sahip olduğu garanti edilir. sıfır olmayan sarma sayısı da var, çünkü işler bizim istediğimiz şekilde güzel bir şekilde toplanıyor.",
  "time_range": [
   1111.84,
   1128.04
  ],
  "n_reviews": 0
 },
 {
  "input": "So in this way, you can keep going, narrowing in further and further onto one point.",
  "model": "nmt",
  "translatedText": "Yani bu şekilde, giderek daha da darlaşıp tek bir noktaya odaklanarak ilerlemeye devam edebilirsiniz.",
  "time_range": [
   1128.44,
   1133.5
  ],
  "n_reviews": 0
 },
 {
  "input": "And as you narrow in onto a point, you'll be doing so with tiny loops that have non-zero winding numbers, which implies they go through all possible colors, and therefore, like I said before, the point they're narrowing in on must be a zero.",
  "model": "nmt",
  "translatedText": "Ve bir noktaya daralttığınızda, bunu sıfırdan farklı sarma sayılarına sahip küçük döngülerle yapacaksınız, bu da onların olası tüm renklerden geçtikleri anlamına gelir ve dolayısıyla, daha önce söylediğim gibi, daraldıkları nokta sıfır olmalıdır.",
  "time_range": [
   1134.05,
   1146.4
  ],
  "n_reviews": 0
 },
 {
  "input": "And that's it!",
  "model": "nmt",
  "translatedText": "Ve bu kadar!",
  "time_range": [
   1147.42,
   1148.36
  ],
  "n_reviews": 0
 },
 {
  "input": "We have now created a two-dimensional equation solver, and this time, I promise, there are no bugs.",
  "model": "nmt",
  "translatedText": "Artık iki boyutlu bir denklem çözücü oluşturduk ve bu sefer söz veriyorum hiçbir hata olmayacak.",
  "time_range": [
   1148.6,
   1153.86
  ],
  "n_reviews": 0
 },
 {
  "input": "Winding numbers are precisely the tool we need to make this work.",
  "model": "nmt",
  "translatedText": "Sarma sayıları tam olarak bu işi yapmak için ihtiyacımız olan araçtır.",
  "time_range": [
   1154.56,
   1157.54
  ],
  "n_reviews": 0
 },
 {
  "input": "We can now solve equations that look like where does f of x equal g of x in two dimensions, just by considering how the difference between f and g winds around.",
  "model": "nmt",
  "translatedText": "Artık iki boyutta f(x) g(x) nereye eşittir gibi görünen denklemleri, sadece f ve g arasındaki farkın nasıl değiştiğini dikkate alarak çözebiliriz.",
  "time_range": [
   1158.1,
   1166.82
  ],
  "n_reviews": 0
 },
 {
  "input": "Whenever we have a loop whose winding number isn't zero, we can run this algorithm on it, and we're guaranteed to find a solution somewhere within it.",
  "model": "nmt",
  "translatedText": "Sargı sayısı sıfır olmayan bir döngümüz olduğunda, bu algoritmayı onun üzerinde çalıştırabiliriz ve onun içinde bir yerde bir çözüm bulacağımız garantidir.",
  "time_range": [
   1167.6,
   1175.1
  ],
  "n_reviews": 0
 },
 {
  "input": "And what's more, just like in one dimension, this algorithm is incredibly efficient.",
  "model": "nmt",
  "translatedText": "Dahası, tıpkı tek boyutta olduğu gibi, bu algoritma inanılmaz derecede verimlidir.",
  "time_range": [
   1175.66,
   1179.84
  ],
  "n_reviews": 0
 },
 {
  "input": "We keep narrowing in on half the size of our region each round, thus quickly narrowing in on the zeros, and all the while, we only have to check the value of the function along points of these loops, rather than checking it on the many points of the interior.",
  "model": "nmt",
  "translatedText": "Her turda bölgemizin boyutunu yarı yarıya daraltıyoruz, böylece sıfırlar hızla daralıyor ve bu arada fonksiyonun değerini birçok döngüde kontrol etmek yerine yalnızca bu döngülerin noktaları boyunca kontrol etmemiz gerekiyor. iç kısımdaki noktalar.",
  "time_range": [
   1180.24,
   1194.4
  ],
  "n_reviews": 0
 },
 {
  "input": "So in some sense, the overall work done is proportional only to the search space's perimeter, not the full area, which is amazing.",
  "model": "nmt",
  "translatedText": "Yani bir bakıma yapılan genel iş, tüm alanla değil, yalnızca arama uzayının çevresi ile orantılıdır ki bu şaşırtıcıdır.",
  "time_range": [
   1195.16,
   1203.74
  ],
  "n_reviews": 0
 },
 {
  "input": "Now once you understand what's going on, it's weirdly mesmerizing to just watch this in action, giving it some function and letting it search for zeros.",
  "model": "nmt",
  "translatedText": "Şimdi neler olup bittiğini anladığınızda, bunu sadece çalışırken izlemek, ona bir işlev kazandırmak ve sıfırları aramasına izin vermek tuhaf bir şekilde büyüleyici.",
  "time_range": [
   1204.92,
   1212.96
  ],
  "n_reviews": 0
 },
 {
  "input": "Like I said before, complex numbers are two-dimensional, so let's apply it to some equation with complex numbers.",
  "model": "nmt",
  "translatedText": "Daha önce de söylediğim gibi, karmaşık sayılar iki boyutludur, o yüzden bunu karmaşık sayılarla ilgili bir denkleme uygulayalım.",
  "time_range": [
   1213.62,
   1219.56
  ],
  "n_reviews": 0
 },
 {
  "input": "For example, here's the algorithm finding the zeros of the function x to the fifth minus x minus one over the complex plane.",
  "model": "nmt",
  "translatedText": "Örneğin, karmaşık düzlemde x üzeri beşinci eksi x eksi bir fonksiyonunun sıfırlarını bulan algoritma buradadır.",
  "time_range": [
   1220.3,
   1228.1
  ],
  "n_reviews": 0
 },
 {
  "input": "It started by considering a very large region around the origin, which ended up having a winding number of 5.",
  "model": "nmt",
  "translatedText": "Başlangıç noktası çevresinde çok geniş bir bölgeyi göz önünde bulundurarak başladı ve bu bölgenin sarma sayısı 5'e ulaştı.",
  "time_range": [
   1228.9,
   1234.48
  ],
  "n_reviews": 0
 },
 {
  "input": "Each time you find a loop with a non-zero winding number, you split it in half, and figure out the winding number of the two smaller loops.",
  "model": "nmt",
  "translatedText": "Sıfırdan farklı bir sarım numarasına sahip bir döngü bulduğunuzda, onu ikiye bölersiniz ve iki küçük döngünün sarım sayısını bulursunuz.",
  "time_range": [
   1235.28,
   1242.12
  ],
  "n_reviews": 0
 },
 {
  "input": "Either one or both of them is guaranteed to have a non-zero winding number, and when you see this, you know there's a zero somewhere inside that smaller loop, so you keep going in the same way, searching the smaller space.",
  "model": "nmt",
  "translatedText": "Bunlardan birinin veya her ikisinin de sıfır olmayan bir sarma numarasına sahip olması garanti edilir ve bunu gördüğünüzde, o küçük döngünün içinde bir yerde sıfır olduğunu bilirsiniz, böylece aynı şekilde ilerlemeye devam eder, daha küçük alanı ararsınız.",
  "time_range": [
   1242.7,
   1253.4
  ],
  "n_reviews": 0
 },
 {
  "input": "We also stop exploring a region if the path we're computing along happens to stumble across a zero, which actually happened once for this example on the right half here.",
  "model": "nmt",
  "translatedText": "Ayrıca, hesapladığımız yol sıfıra rastlarsa, bölgeyi keşfetmeyi de bırakırız; bu, aslında bu örneğin sağ yarısında bir kez yaşandı.",
  "time_range": [
   1254.18,
   1262.9
  ],
  "n_reviews": 0
 },
 {
  "input": "Those rare occurrences interfere with our ability to compute winding numbers, but hey, we got a zero.",
  "model": "nmt",
  "translatedText": "Bu nadir olaylar dolambaçlı sayıları hesaplama yeteneğimizi engelliyor, ama hey, sıfır aldık.",
  "time_range": [
   1263.28,
   1268.14
  ],
  "n_reviews": 0
 },
 {
  "input": "And as for loops whose winding number is zero, you just don't explore those further.",
  "model": "nmt",
  "translatedText": "Sargı sayısı sıfır olan döngülere gelince, bunları daha fazla araştırmazsınız.",
  "time_range": [
   1269.22,
   1272.92
  ],
  "n_reviews": 0
 },
 {
  "input": "Maybe they have a solution inside, maybe they don't, we have no guarantees.",
  "model": "nmt",
  "translatedText": "Belki içerde çözümü vardır, belki yoktur, garantimiz yok.",
  "time_range": [
   1272.92,
   1276.2
  ],
  "n_reviews": 0
 },
 {
  "input": "And letting our equation solver continue in this same way, it eventually converges to lots of zeros for this polynomial.",
  "model": "nmt",
  "translatedText": "Denklem çözücümüzün aynı şekilde devam etmesine izin verirsek, sonunda bu polinom için birçok sıfıra yakınsar.",
  "time_range": [
   1278.4,
   1284.02
  ],
  "n_reviews": 0
 },
 {
  "input": "By the way, it is no coincidence that the total winding number in this example happened to be 5.",
  "model": "nmt",
  "translatedText": "Bu arada bu örnekte toplam sarım sayısının 5 olması tesadüf değildir.",
  "time_range": [
   1285.84,
   1291.0
  ],
  "n_reviews": 0
 },
 {
  "input": "With complex numbers, the operation x to the n directly corresponds to walking around the output's origin n times as you walk around the input's origin once.",
  "model": "nmt",
  "translatedText": "Karmaşık sayılarda, x'ten n'ye işlemi, girdinin orijini etrafında bir kez dolaşırken, doğrudan çıktının orijini etrafında n kez dolaşmaya karşılık gelir.",
  "time_range": [
   1291.58,
   1302.24
  ],
  "n_reviews": 0
 },
 {
  "input": "So with the polynomial, for large enough inputs, every term other than the leading term becomes insignificant in comparison.",
  "model": "nmt",
  "translatedText": "Dolayısıyla polinomla, yeterince büyük girdiler için, baş terim dışındaki her terim, karşılaştırmada önemsiz hale gelir.",
  "time_range": [
   1304.68,
   1311.98
  ],
  "n_reviews": 0
 },
 {
  "input": "So any complex polynomial whose leading term is x to the n has a winding number of n around a large enough loop.",
  "model": "nmt",
  "translatedText": "Yani baş terimi x üzeri n olan herhangi bir karmaşık polinomun yeterince büyük bir döngü etrafında sarma sayısı n'dir.",
  "time_range": [
   1312.48,
   1319.78
  ],
  "n_reviews": 0
 },
 {
  "input": "And in that way, our winding number technology actually guarantees that every complex polynomial has a zero.",
  "model": "nmt",
  "translatedText": "Ve bu şekilde sarmal sayı teknolojimiz aslında her karmaşık polinomun sıfıra sahip olmasını garanti eder.",
  "time_range": [
   1320.54,
   1326.82
  ],
  "n_reviews": 0
 },
 {
  "input": "This is such an important fact that mathematicians call it the fundamental theorem of algebra.",
  "model": "nmt",
  "translatedText": "Bu o kadar önemli bir gerçektir ki matematikçiler buna cebirin temel teoremi adını verirler.",
  "time_range": [
   1327.48,
   1332.0
  ],
  "n_reviews": 0
 },
 {
  "input": "Having an algorithm for finding numerical solutions to equations like this is extremely practical, but the fundamental theorem of algebra is a good example of how these winding numbers are also quite useful on a theoretical level, guaranteeing the existence of a solution to a broad class of equations for suitable conditions, which is much more the kind of thing mathematicians like thinking about.",
  "model": "nmt",
  "translatedText": "Bunun gibi denklemlere sayısal çözümler bulmak için bir algoritmaya sahip olmak son derece pratiktir, ancak cebirin temel teoremi, bu sarma sayılarının teorik düzeyde nasıl oldukça faydalı olduğuna dair iyi bir örnektir ve geniş bir denklem sınıfına bir çözümün varlığını garanti eder. Uygun koşullar için denklemler ki bu, matematikçilerin düşünmeyi daha çok sevdiği türden bir şeydir.",
  "time_range": [
   1333.8,
   1353.94
  ],
  "n_reviews": 0
 },
 {
  "input": "I'll show you a couple more amazing applications of this in the context of topology in a follow-up video, which includes correcting a mistake from an old 3blue1brown video.",
  "model": "nmt",
  "translatedText": "Eski bir 3blue1brown videosundaki bir hatanın düzeltilmesini de içeren bir takip videosunda size bunun topoloji bağlamında birkaç harika uygulamasını daha göstereceğim.",
  "time_range": [
   1353.94,
   1363.44
  ],
  "n_reviews": 0
 },
 {
  "input": "Which one?",
  "model": "nmt",
  "translatedText": "Hangisi?",
  "time_range": [
   1364.06,
   1364.44
  ],
  "n_reviews": 0
 },
 {
  "input": "Well, watch all of the videos, everything on this channel, and see if you can spot the error first.",
  "model": "nmt",
  "translatedText": "Bu kanaldaki tüm videoları ve her şeyi izleyin ve önce hatayı fark edip edemeyeceğinize bakın.",
  "time_range": [
   1364.94,
   1369.6
  ],
  "n_reviews": 0
 },
 {
  "input": "The primary author of this video is one of the newest 3blue1brown team members, Sridhar Ramesh.",
  "model": "nmt",
  "translatedText": "Bu videonun ana yazarı, 3blue1brown ekibinin en yeni üyelerinden biri olan Sridhar Ramesh'tir.",
  "time_range": [
   1371.3,
   1390.06
  ],
  "n_reviews": 0
 }
]