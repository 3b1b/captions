1
00:00:03,060 --> 00:00:06,140
यहां दो चीजें हैं, मुख्य विषय और मेटा विषय।

2
00:00:06,640 --> 00:00:10,057
मुख्य विषय द्वि-आयामी समीकरणों को हल करने के लिए यह वास्तव में साफ 

3
00:00:10,057 --> 00:00:13,983
एल्गोरिथ्म होने जा रहा है, ऐसी चीजें जिनमें दो अज्ञात वास्तविक संख्याएं हैं, 

4
00:00:13,983 --> 00:00:16,840
या वे भी जिनमें एक अज्ञात शामिल है जो एक जटिल संख्या है।

5
00:00:17,440 --> 00:00:20,975
उदाहरण के लिए, यदि आप किसी बहुपद की जटिल जड़ें खोजना चाहते हैं, 

6
00:00:20,975 --> 00:00:24,621
या शायद रीमैन ज़ेटा फ़ंक्शन के उन मिलियन डॉलर शून्यों में से कुछ, 

7
00:00:24,621 --> 00:00:26,500
तो यह एल्गोरिदम आपके लिए यह करेगा।

8
00:00:26,800 --> 00:00:30,060
और यह विधि अत्यंत सुंदर है, क्योंकि इसमें बहुत सारे रंग शामिल हैं।

9
00:00:30,540 --> 00:00:33,758
और इससे भी महत्वपूर्ण बात यह है कि मूल अंतर्निहित विचार समीकरणों को हल 

10
00:00:33,758 --> 00:00:36,841
करने के लिए इस एल्गोरिदम से परे सभी प्रकार के गणित पर लागू होता है, 

11
00:00:36,841 --> 00:00:40,060
जिसमें कुछ टोपोलॉजी भी शामिल है, जिसके बारे में मैं बाद में बात करूंगा।

12
00:00:40,740 --> 00:00:44,324
लेकिन वास्तव में जो चीज़ इसे आपके 20 मिनट या उसके आसपास के समय के लायक बनाती है, 

13
00:00:44,324 --> 00:00:47,776
वह यह है कि यह पूरे गणित में अधिक सामान्यतः उपयोगी एक पाठ को चित्रित करता है, 

14
00:00:47,776 --> 00:00:51,404
जो उन संरचनाओं को परिभाषित करने का प्रयास करता है जो एक-दूसरे के साथ अच्छी तरह से 

15
00:00:51,404 --> 00:00:51,980
मेल खाते हैं।

16
00:00:52,400 --> 00:00:54,480
जैसे-जैसे कहानी आगे बढ़ेगी आप देखेंगे कि मेरा इससे क्या मतलब है।

17
00:00:55,060 --> 00:00:58,499
2डी इनपुट और 2डी आउटपुट वाले फ़ंक्शंस के साथ मामले को प्रेरित करने के लिए, 

18
00:00:58,499 --> 00:01:01,526
आइए सरलता से शुरुआत करें, ऐसे फ़ंक्शंस के साथ जो केवल एक वास्तविक 

19
00:01:01,526 --> 00:01:03,820
संख्या लेते हैं और एक वास्तविक संख्या निकालते हैं।

20
00:01:05,080 --> 00:01:09,644
यदि आप जानना चाहते हैं कि कब x का फ़ंक्शन f, x के किसी अन्य फ़ंक्शन g के बराबर होता है, 

21
00:01:09,644 --> 00:01:14,208
तो आप इसे उस खोज के रूप में सोच सकते हैं जब उन फ़ंक्शन के ग्राफ़ एक दूसरे को काटते हैं, 

22
00:01:14,208 --> 00:01:14,520
है ना?

23
00:01:15,020 --> 00:01:18,520
मेरा मतलब है, यह आपको एक इनपुट देता है जहां दोनों फ़ंक्शंस का आउटपुट समान होता है।

24
00:01:18,520 --> 00:01:22,659
एक बहुत ही सरल उदाहरण लेने के लिए, कल्पना करें कि x का f, 

25
00:01:22,659 --> 00:01:25,300
x का वर्ग है, और x का g अचर फलन 2 है।

26
00:01:25,960 --> 00:01:28,640
दूसरे शब्दों में, आप 2 का वर्गमूल ज्ञात करना चाहते हैं।

27
00:01:29,460 --> 00:01:33,691
यहां तक कि अगर आप वर्गमूल खोजने के बारे में लगभग कुछ भी नहीं जानते हैं, 

28
00:01:33,691 --> 00:01:37,805
तो आप शायद देख सकते हैं कि 1 वर्ग 2 से कम है, और 2 वर्ग 2 से बड़ा है, 

29
00:01:37,805 --> 00:01:41,860
तो आप महसूस करते हैं, आह, उन दो मानों के बीच कुछ समाधान होने वाला है।

30
00:01:42,580 --> 00:01:46,945
और फिर यदि आप इसे और कम करना चाहते हैं, तो शायद आप आधे बिंदु का वर्ग करने का प्रयास करें, 

31
00:01:46,945 --> 00:01:47,140
1.5.

32
00:01:47,720 --> 00:01:53,627
यह 2 निकला.25, थोड़ा ज़्यादा, इसलिए आप 1 और 1 के बीच के क्षेत्र पर ध्यान केंद्रित करेंगे।

33
00:01:53,627 --> 00:01:53,760
5.

34
00:01:54,760 --> 00:01:57,373
और इसी तरह, आप शायद देख सकते हैं कि यह कैसे चलता रहेगा, 

35
00:01:57,373 --> 00:02:00,920
आप मध्यबिंदु पर गणना करते रहेंगे और फिर अपने खोज स्थान को आधे में काट देंगे।

36
00:02:05,100 --> 00:02:08,518
इसके बारे में सोचने का एक और तरीका, जो उच्च आयामों तक पहुंचने 

37
00:02:08,518 --> 00:02:12,046
के बाद हमारे लिए इसे आसान बना देगा, इसके बजाय समतुल्य प्रश्न पर 

38
00:02:12,046 --> 00:02:15,520
ध्यान केंद्रित करना होगा जब इन दो कार्यों के बीच अंतर शून्य हो।

39
00:02:16,100 --> 00:02:21,911
उन शब्दों में, हमें इनपुट का एक क्षेत्र मिला जहां वह अंतर एक छोर पर नकारात्मक था, 

40
00:02:21,911 --> 00:02:24,180
और दूसरे छोर पर यह सकारात्मक था।

41
00:02:24,180 --> 00:02:27,683
हमने इसे दो भागों में विभाजित किया, और जिस आधे हिस्से पर हमने अपना 

42
00:02:27,683 --> 00:02:31,500
ध्यान केंद्रित किया वह वह था जहां सबसे बाहरी बिंदुओं पर अलग-अलग संकेत थे।

43
00:02:31,500 --> 00:02:33,968
इस तरह, हम हमेशा के लिए चलते रहने में सक्षम थे, 

44
00:02:33,968 --> 00:02:37,104
सीमा पर अलग-अलग संकेतों के साथ प्रत्येक क्षेत्र को लेते हुए, 

45
00:02:37,104 --> 00:02:39,726
उसके हिस्सों के बीच एक छोटा सा क्षेत्र ढूंढते हुए, 

46
00:02:39,726 --> 00:02:44,200
यह जानते हुए कि अंततः हमें एक ऐसे बिंदु पर सीमित होना है जो बिल्कुल शून्य होने वाला है।

47
00:02:45,760 --> 00:02:50,256
संक्षेप में, समीकरणों को हल करना हमेशा यह पता लगाने के रूप में तैयार किया जा सकता है कि 

48
00:02:50,256 --> 00:02:54,446
एक निश्चित फ़ंक्शन शून्य के बराबर है, और ऐसा करने के लिए, हमारे पास यह अनुमान है, 

49
00:02:54,446 --> 00:02:57,717
यदि एफ एक बिंदु पर सकारात्मक है और दूसरे बिंदु पर नकारात्मक है, 

50
00:02:57,717 --> 00:03:00,476
तो आप बीच में कोई जगह ढूंढ सकते हैं जहां यह शून्य है, 

51
00:03:00,476 --> 00:03:03,900
कम से कम अगर सब कुछ बिना किसी अचानक उछाल के सुचारू रूप से बदलता है।

52
00:03:03,900 --> 00:03:07,239
जो आश्चर्यजनक बात मैं आपको दिखाना चाहता हूं वह यह है कि आप इस 

53
00:03:07,239 --> 00:03:10,417
तरह की सोच को दो-आयामी समीकरणों में विस्तारित कर सकते हैं, 

54
00:03:10,417 --> 00:03:14,080
उन कार्यों के बीच समीकरण जिनके इनपुट और आउटपुट दोनों द्वि-आयामी हैं।

55
00:03:14,739 --> 00:03:18,070
उदाहरण के लिए, जटिल संख्याएँ 2डी हैं, और यह उपकरण जो हम विकसित 

56
00:03:18,070 --> 00:03:21,400
कर रहे हैं वह जटिल समीकरणों का समाधान खोजने के लिए एकदम सही है।

57
00:03:22,360 --> 00:03:25,161
अब, चूँकि हम इन 2डी फ़ंक्शंस के बारे में इतनी बात करने जा रहे हैं, 

58
00:03:25,161 --> 00:03:28,340
आइए एक संक्षिप्त कदम उठाएं और विचार करें कि हम इन्हें कैसे चित्रित करते हैं।

59
00:03:29,060 --> 00:03:32,622
2डी इनपुट और 2डी आउटपुट के साथ एक फ़ंक्शन को ग्राफ़ करने के लिए चार 

60
00:03:32,622 --> 00:03:36,395
आयामों की आवश्यकता होगी, और यह हमारी 2डी स्क्रीन पर 3डी दुनिया में इतनी 

61
00:03:36,395 --> 00:03:40,220
अच्छी तरह से काम नहीं करेगा, लेकिन हमारे पास अभी भी कुछ अच्छे विकल्प हैं।

62
00:03:40,859 --> 00:03:45,440
एक तो इनपुट स्पेस और आउटपुट स्पेस दोनों को एक साथ देखना है।

63
00:03:45,540 --> 00:03:49,957
इनपुट स्पेस में प्रत्येक बिंदु आउटपुट स्पेस में एक विशेष बिंदु पर जाता है, 

64
00:03:49,957 --> 00:03:53,314
और मैं दिखा सकता हूं कि उस इनपुट बिंदु के चारों ओर घूमना 

65
00:03:53,314 --> 00:03:56,260
आउटपुट स्पेस में कुछ आंदोलनों से कैसे मेल खाता है।

66
00:03:56,940 --> 00:03:59,868
जिन सभी कार्यों पर हम विचार कर रहे हैं वे निरंतर होंगे, 

67
00:03:59,868 --> 00:04:04,574
इस अर्थ में कि इनपुट में छोटे छोटे बदलाव केवल आउटपुट में छोटे छोटे बदलावों के अनुरूप होते 

68
00:04:04,574 --> 00:04:06,300
हैं, कोई अचानक उछाल नहीं होता है।

69
00:04:06,940 --> 00:04:11,697
हमारे पास एक अन्य विकल्प यह है कि हम आउटपुट स्पेस के मूल से उस आउटपुट बिंदु 

70
00:04:11,697 --> 00:04:16,579
तक तीर की कल्पना करें, और उस तीर का एक लघु संस्करण इनपुट बिंदु पर संलग्न करें।

71
00:04:17,360 --> 00:04:21,682
यह हमें एक नज़र में यह समझ दे सकता है कि एक दिया गया इनपुट बिंदु कहाँ जाता है, 

72
00:04:21,682 --> 00:04:25,840
या पूर्ण वेक्टर फ़ील्ड को चित्रित करके कई अलग-अलग इनपुट बिंदु कहाँ जाते हैं।

73
00:04:27,600 --> 00:04:31,284
और दुर्भाग्य से जब आप कई बिंदुओं पर ऐसा करते हैं तो यह काफी अव्यवस्थित हो सकता है, 

74
00:04:31,284 --> 00:04:33,637
इसलिए यहां मैं सभी तीरों को एक ही आकार का बनाता हूं, 

75
00:04:33,637 --> 00:04:37,100
और इसका मतलब यह है कि हम प्रत्येक आउटपुट बिंदु की दिशा का अंदाजा लगा सकते हैं।

76
00:04:37,780 --> 00:04:40,945
लेकिन शायद द्वि-आयामी कार्यों को चित्रित करने का सबसे सुंदर तरीका, 

77
00:04:40,945 --> 00:04:43,308
और जिसका हम इस वीडियो में सबसे अधिक उपयोग करेंगे, 

78
00:04:43,308 --> 00:04:46,380
वह उस आउटपुट स्पेस में प्रत्येक बिंदु को एक रंग के साथ जोड़ना है।

79
00:04:47,220 --> 00:04:52,772
यहां हमने रंगों का उपयोग किया है, अर्थात जहां रंग इंद्रधनुष या रंग चक्र के साथ गिरता है, 

80
00:04:52,772 --> 00:04:56,702
मूल से दूर की दिशा के अनुरूप, और हम मूल से दूरी के अनुरूप करने 

81
00:04:56,702 --> 00:04:59,260
के लिए अंधेरे या चमक का उपयोग कर रहे हैं।

82
00:04:59,260 --> 00:05:04,722
उदाहरण के लिए, आउटपुट की इस श्रृंखला पर ध्यान केंद्रित करते हुए, ये सभी बिंदु लाल हैं, 

83
00:05:04,722 --> 00:05:09,620
लेकिन जो मूल के करीब हैं वे थोड़े गहरे हैं, और जो दूर हैं वे थोड़े चमकीले हैं।

84
00:05:10,360 --> 00:05:14,580
और आउटपुट की इस श्रृंखला पर ध्यान केंद्रित करते हुए, सभी बिंदु हरे हैं, 

85
00:05:14,580 --> 00:05:17,980
और फिर, मूल के करीब का मतलब गहरा है, दूर का मतलब हल्का है।

86
00:05:18,780 --> 00:05:23,383
और इसी तरह, हम यहां केवल प्रत्येक दिशा को एक विशिष्ट रंग निर्दिष्ट कर रहे हैं, 

87
00:05:23,383 --> 00:05:24,840
सब कुछ लगातार बदल रहा है।

88
00:05:25,359 --> 00:05:30,490
आप देख सकते हैं कि यहां अंधेरे और चमक का अंतर बहुत सूक्ष्म है, लेकिन इस वीडियो के लिए, 

89
00:05:30,490 --> 00:05:34,560
हम केवल आउटपुट की दिशा की परवाह करते हैं, परिमाण, रंग या चमक की नहीं।

90
00:05:35,300 --> 00:05:39,574
चमक के बारे में आपके लिए ध्यान देने योग्य एक महत्वपूर्ण बात यह है कि मूल के निकट, 

91
00:05:39,574 --> 00:05:43,120
जिसकी कोई विशेष दिशा नहीं होती, सभी रंग फीके पड़कर काले हो जाते हैं।

92
00:05:44,440 --> 00:05:48,714
तो फ़ंक्शंस के बारे में सोचने के लिए, अब जब हमने प्रत्येक आउटपुट के लिए एक रंग 

93
00:05:48,714 --> 00:05:52,988
तय कर लिया है, तो हम इनपुट स्पेस में प्रत्येक बिंदु को उस बिंदु के रंग के आधार 

94
00:05:52,988 --> 00:05:57,100
पर रंगकर 2डी फ़ंक्शंस की कल्पना कर सकते हैं जहां यह आउटपुट स्पेस में आता है।

95
00:05:57,840 --> 00:06:01,171
मुझे उस इनपुट स्पेस से कई अलग-अलग बिंदुओं की कल्पना करना पसंद है, 

96
00:06:01,171 --> 00:06:03,898
जो आउटपुट स्पेस में उनके संबंधित आउटपुट पर कूदते हैं, 

97
00:06:03,898 --> 00:06:07,280
फिर उस बिंदु के रंग के आधार पर चित्रित होते हैं जहां वे उतरते हैं, 

98
00:06:07,280 --> 00:06:10,360
और फिर इनपुट स्पेस में जहां से वे आए थे, वहां वापस कूदते हैं।

99
00:06:11,640 --> 00:06:14,054
इनपुट स्पेस में प्रत्येक बिंदु के लिए ऐसा करते हुए, 

100
00:06:14,054 --> 00:06:18,140
आप उस इनपुट स्पेस को देखकर यह समझ सकते हैं कि फ़ंक्शन प्रत्येक बिंदु को कहां ले जाता है।

101
00:06:18,140 --> 00:06:23,116
उदाहरण के लिए, बाईं ओर गुलाबी बिंदुओं की यह पट्टी हमें बताती है कि वे सभी बिंदु 

102
00:06:23,116 --> 00:06:28,280
गुलाबी दिशा में कहीं मैप किए जाते हैं, जो कि आउटपुट स्पेस के निचले बाएँ भाग में है।

103
00:06:29,780 --> 00:06:33,743
इसके अलावा वे तीन बिंदु जो काले हैं और उनके चारों ओर बहुत सारे रंग हैं, 

104
00:06:33,743 --> 00:06:34,900
वे शून्य पर जाते हैं।

105
00:06:39,340 --> 00:06:44,110
ठीक है, तो 1डी मामले की तरह, 2डी फ़ंक्शन के समीकरणों को हल करने को हमेशा यह 

106
00:06:44,110 --> 00:06:48,880
पूछकर दोबारा तैयार किया जा सकता है कि कोई निश्चित फ़ंक्शन शून्य के बराबर है।

107
00:06:49,580 --> 00:06:55,283
तो अभी हमारी चुनौती यही है, एक एल्गोरिदम बनाएं जो यह पता लगाए कि 

108
00:06:55,283 --> 00:07:00,900
किसी दिए गए 2डी फ़ंक्शन के कौन से इनपुट बिंदु शून्य पर जाते हैं।

109
00:07:00,900 --> 00:07:04,771
आप यह बता सकते हैं कि यदि आप उन काले बिंदुओं को देखकर इस तरह के रंगीन मानचित्र 

110
00:07:04,771 --> 00:07:08,300
को देख रहे हैं, तो आप पहले से ही जानते हैं कि फ़ंक्शन के शून्य कहाँ हैं।

111
00:07:08,620 --> 00:07:11,080
तो क्या वह मायने रखता है?

112
00:07:11,080 --> 00:07:15,041
ध्यान रखें कि इस तरह का आरेख बनाने के लिए, हमने कंप्यूटर को समतल पर सभी 

113
00:07:15,041 --> 00:07:17,626
पिक्सेल पर फ़ंक्शन की गणना करने के लिए कहा है, 

114
00:07:17,626 --> 00:07:21,753
लेकिन हमारा लक्ष्य एक अधिक कुशल एल्गोरिदम ढूंढना है जिसके लिए केवल यथासंभव 

115
00:07:21,753 --> 00:07:25,879
कुछ बिंदुओं पर फ़ंक्शन की गणना करने की आवश्यकता होती है , ऐसा कहने के लिए, 

116
00:07:25,879 --> 00:07:27,860
केवल रंगों का एक सीमित दृष्टिकोण है।

117
00:07:29,360 --> 00:07:34,092
और अधिक सैद्धांतिक दृष्टिकोण से भी, एक सामान्य निर्माण करना अच्छा होगा जो 

118
00:07:34,092 --> 00:07:39,080
हमें किसी दिए गए क्षेत्र के अंदर शून्य मौजूद है या नहीं, इसकी शर्तें बताता है।

119
00:07:39,080 --> 00:07:43,413
याद रखें, एक आयाम में मुख्य अंतर्दृष्टि यह थी कि यदि एक सतत कार्य एक बिंदु 

120
00:07:43,413 --> 00:07:47,920
पर सकारात्मक है और दूसरे पर नकारात्मक है, तो बीच में कहीं यह शून्य होना चाहिए।

121
00:07:48,840 --> 00:07:50,580
तो हम इसे दो आयामों में कैसे विस्तारित करें?

122
00:07:50,940 --> 00:07:53,580
हमें संकेतों के बारे में बात करने के लिए किसी प्रकार के एनालॉग की आवश्यकता है।

123
00:07:54,700 --> 00:07:58,140
संकेत क्या हैं, इसके बारे में सोचने का एक तरीका दिशाएँ हैं।

124
00:07:58,800 --> 00:08:01,464
सकारात्मक का मतलब है कि आप संख्या रेखा के साथ दाईं ओर इशारा कर रहे हैं, 

125
00:08:01,464 --> 00:08:03,500
और नकारात्मक का मतलब है कि आप बाईं ओर इशारा कर रहे हैं।

126
00:08:04,200 --> 00:08:08,760
द्वि-आयामी मात्राओं की भी दिशा होती है, लेकिन उनके लिए विकल्प बहुत व्यापक होते हैं, 

127
00:08:08,760 --> 00:08:11,800
वे संभावनाओं के पूरे चक्र में कहीं भी इंगित कर सकते हैं।

128
00:08:12,530 --> 00:08:17,161
तो उसी तरह जैसे एक आयाम में हम पूछ रहे थे कि क्या कोई दिया गया फ़ंक्शन 

129
00:08:17,161 --> 00:08:21,923
किसी सीमा की सीमा पर सकारात्मक या नकारात्मक है, जो कि केवल दो बिंदु हैं, 

130
00:08:21,923 --> 00:08:26,815
2d फ़ंक्शन के लिए हम एक क्षेत्र की सीमा को देखने जा रहे हैं, जो एक लूप है, 

131
00:08:26,815 --> 00:08:30,860
और उस सीमा के साथ फ़ंक्शन के आउटपुट की दिशा के बारे में पूछें।

132
00:08:33,640 --> 00:08:37,821
उदाहरण के लिए, हम देखते हैं कि इस शून्य के चारों ओर इस लूप के साथ, 

133
00:08:37,821 --> 00:08:41,627
आउटपुट हर संभव दिशा से गुजरता है, इंद्रधनुष के सभी रंग, लाल, 

134
00:08:41,627 --> 00:08:45,060
पीला, हरा, नीला, वापस लाल और रास्ते में बीच में सब कुछ।

135
00:08:45,700 --> 00:08:48,824
लेकिन यहां इस लूप के साथ, इसके अंदर कोई शून्य नहीं होने के कारण, 

136
00:08:48,824 --> 00:08:52,813
आउटपुट हर रंग के माध्यम से नहीं जाता है, यह कुछ नारंगी रंगों के माध्यम से जाता है, 

137
00:08:52,813 --> 00:08:54,640
लेकिन कभी भी हरा या नीला नहीं होता है।

138
00:08:55,300 --> 00:08:58,460
और यह आशाजनक है, ऐसा लगता है कि चीजें एक आयाम में कैसे काम करती हैं।

139
00:08:59,340 --> 00:09:05,313
शायद उसी तरह से यदि एक 1d फ़ंक्शन 1d क्षेत्र की सीमा पर दोनों संभावित संकेत लेता है, 

140
00:09:05,313 --> 00:09:11,567
तो अंदर कहीं शून्य था, हम परिकल्पना कर सकते हैं कि यदि एक 2d फ़ंक्शन सभी संभावित दिशाओं, 

141
00:09:11,567 --> 00:09:16,346
सभी संभावित रंगों के आउटपुट को हिट करता है किसी 2d क्षेत्र की सीमा, 

142
00:09:16,346 --> 00:09:19,860
तो उस क्षेत्र के अंदर कहीं इसे शून्य पर जाना होगा।

143
00:09:20,960 --> 00:09:24,998
तो यह हमारा अनुमान है, और एक क्षण रुककर सोचें कि क्या यह सच होना चाहिए, 

144
00:09:24,998 --> 00:09:26,120
और यदि हां तो क्यों।

145
00:09:27,420 --> 00:09:31,157
यदि हम किसी इनपुट बिंदु के चारों ओर एक छोटे लूप के बारे में सोचना शुरू करते हैं, 

146
00:09:31,157 --> 00:09:33,972
तो हम जानते हैं कि चूंकि सब कुछ निरंतर है, हमारा फ़ंक्शन इसे 

147
00:09:33,972 --> 00:09:36,280
संबंधित आउटपुट के पास कुछ छोटे लूप में ले जाता है।

148
00:09:37,140 --> 00:09:40,520
लेकिन देखिए, अधिकांश छोटे लूपों के लिए, आउटपुट रंग में भिन्न होता है।

149
00:09:40,980 --> 00:09:43,972
यदि आप शून्य के अलावा कोई आउटपुट बिंदु चुनते हैं, 

150
00:09:43,972 --> 00:09:48,162
और उसके पास एक पर्याप्त तंग लूप बनाते हैं, तो लूप के सभी रंग उस बिंदु 

151
00:09:48,162 --> 00:09:49,420
के समान रंग के होंगे।

152
00:09:49,840 --> 00:09:54,555
यहाँ पर एक तंग लूप पूरी तरह से नीला है, यहाँ पर एक तंग लूप पूरी तरह से पीला है, 

153
00:09:54,555 --> 00:09:57,680
आपको निश्चित रूप से इंद्रधनुष के हर रंग नहीं मिलेंगे।

154
00:09:58,220 --> 00:10:02,383
एकमात्र बिंदु जहां आप सभी रंग प्राप्त करते हुए भी इसके 

155
00:10:02,383 --> 00:10:06,320
चारों ओर लूप कस सकते हैं वह रंगहीन मूल, शून्य ही है।

156
00:10:07,100 --> 00:10:10,144
तो वास्तव में यह मामला है कि यदि आपके पास इंद्रधनुष के हर रंग 

157
00:10:10,144 --> 00:10:12,844
के माध्यम से लूप चल रहे हैं, कस रहे हैं और कस रहे हैं, 

158
00:10:12,844 --> 00:10:16,380
एक बिंदु पर संकीर्ण हो रहे हैं, तो वह बिंदु वास्तव में शून्य होना चाहिए।

159
00:10:17,320 --> 00:10:21,860
और इसलिए आइए हमारे एक-आयामी समीकरण सॉल्वर की तरह एक 2डी समीकरण सॉल्वर स्थापित करें।

160
00:10:22,260 --> 00:10:25,555
जब हमें एक बड़ा क्षेत्र मिले जिसकी सीमा हर रंग से होकर गुजरती है, 

161
00:10:25,555 --> 00:10:29,900
तो इसे दो भागों में विभाजित करें, और फिर प्रत्येक आधे हिस्से की सीमा पर रंगों को देखें।

162
00:10:30,540 --> 00:10:34,648
यहां दिखाए गए उदाहरण में, बाएं आधे हिस्से की सीमा सभी रंगों से नहीं गुजरती है, 

163
00:10:34,648 --> 00:10:38,600
उदाहरण के लिए, नारंगी पीले रंग की दिशाओं को मैप करने वाला कोई बिंदु नहीं है।

164
00:10:39,060 --> 00:10:40,790
इसलिए मैं यह कहने के तरीके के रूप में इस क्षेत्र को 

165
00:10:40,790 --> 00:10:42,620
धुंधला कर दूंगा कि हम इसे और अधिक खोजना नहीं चाहते हैं।

166
00:10:43,380 --> 00:10:47,540
दाहिना आधा भाग सभी रंगों से गुजरता है, हरे रंग की दिशा में बहुत समय बिताता है, 

167
00:10:47,540 --> 00:10:50,700
फिर पीले नारंगी लाल, साथ ही नीले बैंगनी गुलाबी से गुजरता है।

168
00:10:51,560 --> 00:10:54,489
अब याद रखें, इसका मतलब यह है कि इस सीमा के बिंदु 

169
00:10:54,489 --> 00:10:57,360
सभी संभावित दिशाओं के आउटपुट पर मैप हो जाते हैं।

170
00:10:57,840 --> 00:10:59,932
इसलिए हम इसे आगे खोजेंगे, फिर से उप-विभाजित करेंगे 

171
00:10:59,932 --> 00:11:01,860
और प्रत्येक क्षेत्र के लिए सीमा की जाँच करेंगे।

172
00:11:02,880 --> 00:11:06,560
शीर्ष की सीमा पूरी तरह हरी है, इसलिए हम वहां खोजना बंद कर देंगे।

173
00:11:06,860 --> 00:11:09,520
लेकिन निचला भाग इतना रंगीन है कि इसे उपविभाजित किया जा सकता है।

174
00:11:10,340 --> 00:11:12,020
और ऐसे ही आगे बढ़ते रहो.

175
00:11:12,360 --> 00:11:15,898
जांचें कि किस उपक्षेत्र की सीमा सभी संभावित रंगों को कवर करती है, 

176
00:11:15,898 --> 00:11:19,920
जिसका अर्थ है कि उस सीमा के बिंदु सभी संभावित दिशाओं में मैप किए जाते हैं, 

177
00:11:19,920 --> 00:11:24,155
और उन क्षेत्रों को आधे में काटते रहें जैसे हमने एक-आयामी मामले के लिए किया था, 

178
00:11:24,155 --> 00:11:27,480
अंततः हमें फ़ंक्शन पर शून्य पर ले जाया गया- ओह, एक सेकंड रुको.

179
00:11:28,880 --> 00:11:29,920
यहां क्या हुआ?

180
00:11:30,380 --> 00:11:34,287
नीचे दाईं ओर के अंतिम उपविभाजनों में से कोई भी सभी रंगों से होकर नहीं गुजरा, 

181
00:11:34,287 --> 00:11:38,448
इसलिए हमारा एल्गोरिदम रुक गया क्योंकि वह उनमें से किसी को भी खोजना नहीं चाहता था, 

182
00:11:38,448 --> 00:11:39,920
लेकिन उसे शून्य भी नहीं मिला।

183
00:11:41,060 --> 00:11:43,300
ठीक है, यहाँ स्पष्ट रूप से कुछ गड़बड़ है।

184
00:11:43,540 --> 00:11:46,520
और यह ठीक है, गलत होना गणित करने का एक नियमित हिस्सा है।

185
00:11:46,520 --> 00:11:49,324
यदि हम पीछे मुड़कर देखें, तो हमारे पास यह परिकल्पना थी, 

186
00:11:49,324 --> 00:11:52,980
और यह हमें इस प्रस्तावित एल्गोरिदम तक ले गई, इसलिए हम कहीं न कहीं गलत थे।

187
00:11:53,660 --> 00:11:56,783
और गणित में अच्छा होना पहली बार में सही होने के बारे में नहीं है, 

188
00:11:56,783 --> 00:12:00,711
यह ध्यान से पीछे देखने और गलतियों को समझने और उन्हें ठीक करने के तरीके को समझने के 

189
00:12:00,711 --> 00:12:01,800
लचीलेपन के बारे में है।

190
00:12:02,480 --> 00:12:06,536
अब यहाँ समस्या यह है कि हमारे पास एक ऐसा क्षेत्र था जिसकी सीमा हर रंग से होकर गुजरती थी, 

191
00:12:06,536 --> 00:12:10,364
लेकिन जब हमने इसे बीच में विभाजित किया, तो किसी भी उपक्षेत्र की सीमा हर रंग से नहीं 

192
00:12:10,364 --> 00:12:13,281
गुज़री, हमारे पास कोई विकल्प नहीं था कि आगे कहाँ खोज करते रहें, 

193
00:12:13,281 --> 00:12:14,740
और इसने शून्य को तोड़ दिया खोजक.

194
00:12:14,740 --> 00:12:17,560
अब एक आयाम में, इस तरह की चीज़ कभी नहीं हुई।

195
00:12:17,980 --> 00:12:22,152
किसी भी समय आपके पास एक अंतराल होता है जिसके समापन बिंदुओं पर अलग-अलग संकेत होते हैं, 

196
00:12:22,152 --> 00:12:25,694
यदि आप इसे विभाजित करते हैं, तो आप जानते हैं कि आपको कुछ उप-अंतराल मिलने 

197
00:12:25,694 --> 00:12:28,460
की गारंटी है जिसके समापन बिंदुओं पर भी अलग-अलग संकेत हैं।

198
00:12:29,020 --> 00:12:32,011
या दूसरे तरीके से कहें तो, जब भी आपके पास दो अंतराल हों जिनके 

199
00:12:32,011 --> 00:12:34,906
समापन बिंदु संकेत नहीं बदलते हैं, यदि आप उन्हें जोड़ते हैं, 

200
00:12:34,906 --> 00:12:38,380
तो आपको एक बड़ा अंतराल मिलेगा जिसके समापन बिंदु भी संकेत नहीं बदलते हैं।

201
00:12:39,080 --> 00:12:43,948
लेकिन दो आयामों में, ऐसे दो क्षेत्र ढूंढना संभव है जिनकी सीमाएं हर रंग से नहीं गुजरती 

202
00:12:43,948 --> 00:12:48,930
हैं, लेकिन जिनकी सीमाएं मिलकर एक ऐसा क्षेत्र बनाती हैं जिसकी सीमा हर रंग से होकर गुजरती 

203
00:12:48,930 --> 00:12:49,100
है।

204
00:12:49,840 --> 00:12:53,500
और इस तरह, हमारा प्रस्तावित शून्य-खोज एल्गोरिदम टूट गया।

205
00:12:54,380 --> 00:12:58,268
वास्तव में, यदि आप इसके बारे में सोचते हैं, तो आप एक बड़ा लूप पा सकते 

206
00:12:58,268 --> 00:13:02,380
हैं जिसकी सीमा हर संभव रंग से होकर गुजरती है, इसके अंदर कोई शून्य नहीं है।

207
00:13:03,080 --> 00:13:05,957
अब इसका मतलब यह नहीं है कि हम छोटे लूपों के बारे में अपने 

208
00:13:05,957 --> 00:13:08,934
दावों में गलत थे जब हमने कहा था कि हर रंग से गुजरने वाले एक 

209
00:13:08,934 --> 00:13:12,160
हमेशा के लिए संकीर्ण होने वाले लूप को शून्य पर संकीर्ण होना होगा।

210
00:13:12,800 --> 00:13:15,827
लेकिन जिस चीज़ ने हमारे लिए गड़बड़ी पैदा कर दी वह यह है कि 

211
00:13:15,827 --> 00:13:19,881
जब आप क्षेत्रों को जोड़ते हैं तो यह मेरी-सीमा-हर-रंग-या-नहीं संपत्ति को अच्छे, 

212
00:13:19,881 --> 00:13:22,140
पूर्वानुमानित तरीके से संयोजित नहीं करती है।

213
00:13:23,000 --> 00:13:26,817
लेकिन चिंता न करें, यह पता चला है कि हम इसे एक अधिक परिष्कृत संपत्ति में 

214
00:13:26,817 --> 00:13:30,740
थोड़ा संशोधित कर सकते हैं जो हमें वह देने के लिए जोड़ती है जो हम चाहते हैं।

215
00:13:38,180 --> 00:13:42,889
विचार यह है कि केवल यह पूछने के बजाय कि क्या हम लूप के किसी बिंदु पर कोई रंग पा सकते हैं, 

216
00:13:42,889 --> 00:13:46,080
आइए अधिक सावधानीपूर्वक नज़र रखें कि जब हम उस लूप के चारों ओर 

217
00:13:46,080 --> 00:13:47,860
चलते हैं तो ये रंग कैसे बदलते हैं।

218
00:13:48,580 --> 00:13:49,960
आइए मैं आपको एक उदाहरण से समझाता हूं कि मेरा क्या मतलब है।

219
00:13:50,400 --> 00:13:53,260
हम पर नज़र रखने में मदद के लिए मैं यहां कोने में एक छोटा रंगीन पहिया रखूंगा।

220
00:13:53,940 --> 00:13:59,644
जब इनपुट के पथ पर रंग इंद्रधनुष के माध्यम से एक विशिष्ट दिशा में चलते हैं, लाल से पीला, 

221
00:13:59,644 --> 00:14:04,960
पीला से हरा, हरा से नीला, या नीला से लाल, तो आउटपुट दक्षिणावर्त दिशा में घूमता है।

222
00:14:05,700 --> 00:14:10,570
लेकिन दूसरी ओर, यदि रंग इंद्रधनुष के माध्यम से दूसरे तरीके से चलते हैं, 

223
00:14:10,570 --> 00:14:16,320
नीले से हरे, हरे से पीले, पीले से लाल, या लाल से नीले, तो आउटपुट वामावर्त झूल रहा है।

224
00:14:17,160 --> 00:14:21,557
इसलिए यहां इस छोटे रास्ते पर चलते हुए, रंग रंग चक्र के माध्यम से 

225
00:14:21,557 --> 00:14:26,631
दक्षिणावर्त दिशा में पांचवां हिस्सा घुमाते हैं, और यहां इस पथ पर चलते हुए, 

226
00:14:26,631 --> 00:14:31,300
रंग चक्र के माध्यम से दक्षिणावर्त दिशा में पांचवां हिस्सा घुमाते हैं।

227
00:14:31,300 --> 00:14:35,244
निःसंदेह, इसका मतलब यह है कि यदि आप एक के बाद एक, दोनों रास्तों से गुजरते हैं, 

228
00:14:35,244 --> 00:14:38,640
तो रंग दक्षिणावर्त दिशा में कुल मिलाकर दो-पाँचवें भाग में घूमते हैं।

229
00:14:39,280 --> 00:14:43,705
वाइंडिंग की कुल मात्रा बस जुड़ जाती है, और यह महत्वपूर्ण होने जा रही है, 

230
00:14:43,705 --> 00:14:47,100
यह एक प्रकार का सीधा संयोजन है जो हमारे लिए उपयोगी होगा।

231
00:14:47,100 --> 00:14:50,776
जब मैं वाइंडिंग की कुल मात्रा कहता हूं, तो मैं चाहता हूं कि आप एक पुराने ज़माने 

232
00:14:50,776 --> 00:14:54,866
के ओडोमीटर की कल्पना करें जो तीर के दक्षिणावर्त दिशा में घूमने पर आगे की ओर टिक करता है, 

233
00:14:54,866 --> 00:14:57,900
लेकिन जब तीर वामावर्त दिशा में घूमता है तो पीछे की ओर टिक जाता है।

234
00:14:58,740 --> 00:15:02,460
इसलिए वामावर्त वाइंडिंग को नकारात्मक क्लॉकवाइज वाइंडिंग के रूप में गिना जाता है।

235
00:15:03,000 --> 00:15:07,114
आउटपुट बहुत अधिक घूम सकते हैं, लेकिन यदि उनमें से कुछ मोड़ विपरीत दिशा में है, 

236
00:15:07,114 --> 00:15:08,260
तो यह रद्द हो जाता है।

237
00:15:08,920 --> 00:15:13,438
उदाहरण के लिए, यदि आप इस पथ पर आगे बढ़ते हैं, और फिर उसी पथ पर पीछे की ओर बढ़ते हैं, 

238
00:15:13,438 --> 00:15:17,425
तो वाइंडिंग की कुल मात्रा शून्य हो जाती है, पीछे की ओर की गति वस्तुतः पहले 

239
00:15:17,425 --> 00:15:21,624
देखे गए रंगों के माध्यम से रिवाइंड होती है, पिछली सभी वाइंडिंग को उलट देती है, 

240
00:15:21,624 --> 00:15:25,080
और वापस लौट आती है ओडोमीटर वापस वहीं ले जाएँ जहाँ से शुरू हुआ था।

241
00:15:26,280 --> 00:15:29,900
अपने उद्देश्यों के लिए, हम लूप के साथ-साथ वाइंडिंग को देखने की सबसे अधिक परवाह करेंगे।

242
00:15:30,440 --> 00:15:34,780
उदाहरण के लिए, मान लें कि हम इस पूरे लूप के चारों ओर दक्षिणावर्त घूमते हैं।

243
00:15:34,780 --> 00:15:40,447
आउटपुट में हमें कुल तीन पूर्ण दक्षिणावर्त घुमावों के आसपास हवा का सामना करना पड़ता है, 

244
00:15:40,447 --> 00:15:46,180
रंग इंद्रधनुष के माध्यम से घूमते हैं, क्रम में, लाल से फिर से लाल, और फिर से, और फिर से।

245
00:15:46,920 --> 00:15:52,131
गणितज्ञों द्वारा प्रयुक्त शब्दजाल में, हम कहते हैं कि इस लूप के साथ, 

246
00:15:52,131 --> 00:15:54,020
कुल वाइंडिंग संख्या 3 है।

247
00:15:54,020 --> 00:15:56,970
अन्य लूपों के लिए, यह कोई अन्य पूर्ण संख्या हो सकती है, 

248
00:15:56,970 --> 00:16:00,922
शायद बड़ी संख्या हो सकती है यदि आउटपुट कई बार घूमता है क्योंकि इनपुट एक ही 

249
00:16:00,922 --> 00:16:04,820
लूप के चारों ओर घूमता है, या यह एक छोटी संख्या हो सकती है यदि आउटपुट केवल 

250
00:16:04,820 --> 00:16:05,980
एक या दो बार घूमता है।

251
00:16:06,320 --> 00:16:09,401
या वह वाइंडिंग संख्या एक ऋणात्मक पूर्णांक भी हो सकती है, 

252
00:16:09,401 --> 00:16:13,455
यदि जब हम लूप के चारों ओर दक्षिणावर्त चलते हैं तो आउटपुट वामावर्त दिशा में 

253
00:16:13,455 --> 00:16:14,320
घूम रहा होता है।

254
00:16:15,180 --> 00:16:18,860
लेकिन किसी भी लूप के साथ, वाइंडिंग की यह कुल मात्रा एक पूर्ण संख्या होनी चाहिए।

255
00:16:20,880 --> 00:16:23,303
मेरा मतलब है, जब तक आप वापस वहीं पहुंचेंगे जहां से आपने शुरुआत की थी, 

256
00:16:23,303 --> 00:16:25,000
आपके पास वही आउटपुट होगा जिससे आपने शुरुआत की थी।

257
00:16:26,180 --> 00:16:30,736
संयोगवश, यदि पथ में वास्तव में एक बिंदु है जहां आउटपुट बिल्कुल शून्य है, 

258
00:16:30,736 --> 00:16:34,980
तो तकनीकी रूप से आप उस पर एक घुमावदार संख्या परिभाषित नहीं कर सकते, 

259
00:16:34,980 --> 00:16:37,540
क्योंकि आउटपुट की कोई विशेष दिशा नहीं है।

260
00:16:37,540 --> 00:16:42,187
यह हमारे लिए कोई समस्या नहीं होने वाली है, क्योंकि हमारा पूरा लक्ष्य शून्य ढूंढना है, 

261
00:16:42,187 --> 00:16:45,160
इसलिए यदि यह कभी आता है, तो हम जल्दी ही बाहर हो जाएंगे।

262
00:16:45,160 --> 00:16:47,959
इन घुमावदार संख्याओं के बारे में ध्यान देने वाली मुख्य बात यह है कि जब 

263
00:16:47,959 --> 00:16:50,680
आप पथों को बड़े पथों में जोड़ते हैं तो वे अच्छी तरह से जुड़ जाते हैं।

264
00:16:54,800 --> 00:16:58,664
लेकिन हम वास्तव में जो चाहते हैं वह यह है कि जब हम बड़े क्षेत्र बनाने के लिए क्षेत्रों 

265
00:16:58,664 --> 00:17:02,440
को जोड़ते हैं तो क्षेत्रों की सीमाओं के साथ घुमावदार संख्याएं अच्छी तरह से जुड़ जाएं।

266
00:17:02,980 --> 00:17:04,520
तो क्या हमारे पास वह संपत्ति है?

267
00:17:07,760 --> 00:17:09,060
अच्छा, देख लो.

268
00:17:09,540 --> 00:17:12,951
जैसे ही हम बाईं ओर इस क्षेत्र के चारों ओर दक्षिणावर्त घूमते हैं, 

269
00:17:12,951 --> 00:17:16,940
घुमावदार संख्या इन चार रास्तों से आने वाली घुमावदार संख्याओं का योग होती है।

270
00:17:17,500 --> 00:17:20,957
और जब हम दाहिनी ओर इस क्षेत्र के चारों ओर दक्षिणावर्त घूमते हैं 

271
00:17:20,957 --> 00:17:24,359
तो इन चार रास्तों से आने वाली घुमावदार संख्याओं का योग होता है।

272
00:17:25,339 --> 00:17:28,453
और जब हम उन दो क्षेत्रों को एक बड़े क्षेत्र में जोड़ते हैं, 

273
00:17:28,453 --> 00:17:32,500
तो उनमें से अधिकांश पथ बड़े क्षेत्र की दक्षिणावर्त सीमा का हिस्सा बन जाते हैं।

274
00:17:33,260 --> 00:17:35,800
और जहां तक उन दो रास्तों का सवाल है जो नहीं हैं?

275
00:17:36,020 --> 00:17:39,359
वे पूरी तरह से रद्द कर देते हैं, उनमें से एक बिल्कुल विपरीत है, 

276
00:17:39,359 --> 00:17:41,760
दूसरे की रिवाइंडिंग जैसा कि हमने पहले देखा था।

277
00:17:42,560 --> 00:17:45,318
इसलिए क्षेत्रों की सीमाओं पर घुमावदार संख्याएँ 

278
00:17:45,318 --> 00:17:47,900
ठीक उसी तरह जुड़ती हैं जिस तरह हम चाहते हैं।

279
00:17:48,640 --> 00:17:52,635
इसके अलावा ध्यान दें, उन्मुख सीमाओं को इस तरह अच्छी तरह से जोड़ने के बारे में यह 

280
00:17:52,635 --> 00:17:56,680
तर्क गणित में बहुत बार आता है, और इसे अक्सर स्टोक्स प्रमेय के नाम से जाना जाता है।

281
00:17:57,060 --> 00:17:59,591
आपमें से जिन लोगों ने मल्टीवेरिएबल कैलकुलस का अध्ययन किया है, 

282
00:17:59,591 --> 00:18:01,020
वे इसे उस संदर्भ से पहचान सकते हैं।

283
00:18:02,360 --> 00:18:04,954
तो अब, अंततः, घुमावदार संख्याओं के साथ, हम अपने 

284
00:18:04,954 --> 00:18:07,440
समीकरण हल करने के लक्ष्यों पर वापस आ सकते हैं।

285
00:18:08,000 --> 00:18:11,866
इस क्षेत्र के साथ समस्या जो हमने पहले देखी थी वह यह है कि भले ही इसकी सीमा 

286
00:18:11,866 --> 00:18:15,940
सभी संभावित रंगों से होकर गुजरती थी, लेकिन वाइंडिंग संख्या वास्तव में शून्य थी।

287
00:18:16,500 --> 00:18:20,120
आउटपुट लगभग आधे रास्ते में घूमते रहे, पीले से लाल होते हुए, 

288
00:18:20,120 --> 00:18:23,679
और फिर वामावर्त दिशा में दूसरी दिशा में जाना शुरू कर दिया, 

289
00:18:23,679 --> 00:18:28,144
फिर नीले रंग में जाना जारी रखा और दूसरे रास्ते से लाल पर प्रहार करते रहे, 

290
00:18:28,144 --> 00:18:30,860
सब कुछ इस तरह से कि कुल वाइंडिंग शून्य हो गई।

291
00:18:31,840 --> 00:18:34,845
लेकिन अगर आपको एक लूप मिलता है जो न केवल हर रंग को हिट करता है, 

292
00:18:34,845 --> 00:18:37,803
बल्कि इसमें गैर-शून्य वाइंडिंग संख्या की मजबूत स्थिति होती है, 

293
00:18:37,803 --> 00:18:41,982
तो यदि आप इसे आधे में विभाजित करते हैं, तो आपको गारंटी दी जाती है कि कम से कम उन हिस्सों 

294
00:18:41,982 --> 00:18:44,330
में से एक में एक है गैर-शून्य वाइंडिंग संख्या भी, 

295
00:18:44,330 --> 00:18:48,040
क्योंकि चीजें अच्छी तरह से उस तरह से जुड़ती हैं जिस तरह से हम उन्हें चाहते हैं।

296
00:18:48,440 --> 00:18:53,500
तो इस तरह, आप आगे बढ़ते रह सकते हैं, एक बिंदु पर और आगे सीमित होते जा सकते हैं।

297
00:18:54,050 --> 00:18:57,182
और जैसे ही आप एक बिंदु पर संकीर्ण होते हैं, आप छोटे लूपों के साथ ऐसा 

298
00:18:57,182 --> 00:18:59,816
कर रहे होंगे जिनमें गैर-शून्य घुमावदार संख्याएं होती हैं, 

299
00:18:59,816 --> 00:19:02,676
जिसका अर्थ है कि वे सभी संभावित रंगों से गुजरते हैं, और इसलिए, 

300
00:19:02,676 --> 00:19:06,400
जैसा कि मैंने पहले कहा था, जिस बिंदु पर वे संकीर्ण हो रहे हैं पर शून्य होना चाहिए.

301
00:19:07,420 --> 00:19:08,360
और बस!

302
00:19:08,600 --> 00:19:11,858
हमने अब एक द्वि-आयामी समीकरण सॉल्वर बनाया है, और इस बार, 

303
00:19:11,858 --> 00:19:13,860
मैं वादा करता हूं, कोई बग नहीं हैं।

304
00:19:14,560 --> 00:19:17,540
इस कार्य को करने के लिए वाइंडिंग नंबर ही वह उपकरण है जिसकी हमें आवश्यकता होती है।

305
00:19:18,100 --> 00:19:22,460
अब हम ऐसे समीकरणों को हल कर सकते हैं जो इस तरह दिखते हैं कि दो आयामों में x का f, 

306
00:19:22,460 --> 00:19:26,820
x के g के बराबर कहां है, बस इस बात पर विचार करके कि f और g के बीच का अंतर कैसा है।

307
00:19:27,600 --> 00:19:30,801
जब भी हमारे पास एक लूप होता है जिसकी वाइंडिंग संख्या शून्य नहीं होती है, 

308
00:19:30,801 --> 00:19:34,529
तो हम इस एल्गोरिदम को उस पर चला सकते हैं, और हमें इसके भीतर कहीं न कहीं समाधान खोजने 

309
00:19:34,529 --> 00:19:35,100
की गारंटी है।

310
00:19:35,660 --> 00:19:39,840
और इससे भी अधिक, एक आयाम की तरह, यह एल्गोरिदम अविश्वसनीय रूप से कुशल है।

311
00:19:40,240 --> 00:19:44,195
हम प्रत्येक दौर में अपने क्षेत्र के आधे आकार को सीमित करते रहते हैं, 

312
00:19:44,195 --> 00:19:47,692
इस प्रकार शून्य पर तेजी से संकीर्ण होते जाते हैं, और हर समय, 

313
00:19:47,692 --> 00:19:51,934
हमें केवल इन लूपों के बिंदुओं के साथ फ़ंक्शन के मान की जांच करनी होती है, 

314
00:19:51,934 --> 00:19:54,400
न कि इसे कई पर जांचना होता है आंतरिक बिंदु.

315
00:19:55,160 --> 00:20:01,063
तो कुछ अर्थों में, किया गया समग्र कार्य केवल खोज स्थान की परिधि के समानुपाती होता है, 

316
00:20:01,063 --> 00:20:03,740
पूरे क्षेत्र का नहीं, जो आश्चर्यजनक है।

317
00:20:04,920 --> 00:20:08,694
अब एक बार जब आप समझ जाते हैं कि क्या हो रहा है, तो इसे कार्य करते हुए देखना, 

318
00:20:08,694 --> 00:20:12,960
इसे कुछ फ़ंक्शन देना और इसे शून्य की खोज करने देना अजीब रूप से मंत्रमुग्ध करने वाला है।

319
00:20:13,620 --> 00:20:16,662
जैसा कि मैंने पहले कहा, सम्मिश्र संख्याएँ द्वि-आयामी होती हैं, 

320
00:20:16,662 --> 00:20:19,560
तो आइए इसे सम्मिश्र संख्याओं वाले कुछ समीकरणों पर लागू करें।

321
00:20:20,300 --> 00:20:23,894
उदाहरण के लिए, यहां जटिल तल पर फ़ंक्शन x के शून्य से 

322
00:20:23,894 --> 00:20:28,100
पांचवें शून्य x शून्य से एक तक का पता लगाने वाला एल्गोरिदम है।

323
00:20:28,900 --> 00:20:32,210
इसकी शुरुआत उद्गम के आसपास के एक बहुत बड़े क्षेत्र पर विचार करके हुई, 

324
00:20:32,210 --> 00:20:34,480
जो अंततः 5 की घुमावदार संख्या के साथ समाप्त हुई।

325
00:20:35,280 --> 00:20:38,115
हर बार जब आपको गैर-शून्य वाइंडिंग संख्या वाला एक लूप मिलता है, 

326
00:20:38,115 --> 00:20:42,120
तो आप इसे आधे में विभाजित करते हैं, और दो छोटे लूपों की वाइंडिंग संख्या का पता लगाते हैं।

327
00:20:42,700 --> 00:20:46,367
उनमें से किसी एक या दोनों में गैर-शून्य वाइंडिंग नंबर होने की गारंटी है, 

328
00:20:46,367 --> 00:20:50,285
और जब आप इसे देखते हैं, तो आप जानते हैं कि उस छोटे लूप के अंदर कहीं शून्य है, 

329
00:20:50,285 --> 00:20:53,400
इसलिए आप उसी तरह से आगे बढ़ते रहें, छोटी जगह की खोज करते रहें।

330
00:20:54,180 --> 00:20:57,038
यदि हम जिस पथ पर गणना कर रहे हैं वह शून्य पर ठोकर खाता है, 

331
00:20:57,038 --> 00:21:00,574
जो वास्तव में इस उदाहरण के लिए यहां दाहिने आधे हिस्से में एक बार हुआ था, 

332
00:21:00,574 --> 00:21:02,900
तो हम एक क्षेत्र की खोज करना भी बंद कर देते हैं।

333
00:21:03,280 --> 00:21:06,957
वे दुर्लभ घटनाएँ घुमावदार संख्याओं की गणना करने की हमारी क्षमता में बाधा डालती हैं, 

334
00:21:06,957 --> 00:21:08,140
लेकिन अरे, हमें शून्य मिला।

335
00:21:09,220 --> 00:21:11,686
और जहां तक उन लूपों की बात है जिनकी वाइंडिंग संख्या शून्य है, 

336
00:21:11,686 --> 00:21:12,920
तो आप उन्हें आगे नहीं तलाशेंगे।

337
00:21:12,920 --> 00:21:15,219
हो सकता है कि उनके अंदर कोई समाधान हो, हो सकता है कि उनके पास न हो, 

338
00:21:15,219 --> 00:21:16,200
हमारे पास कोई गारंटी नहीं है।

339
00:21:18,400 --> 00:21:20,849
और हमारे समीकरण सॉल्वर को इसी तरह से जारी रखने से, 

340
00:21:20,849 --> 00:21:24,020
यह अंततः इस बहुपद के लिए बहुत सारे शून्य में परिवर्तित हो जाता है।

341
00:21:25,840 --> 00:21:31,000
वैसे, यह कोई संयोग नहीं है कि इस उदाहरण में कुल वाइंडिंग संख्या 5 थी।

342
00:21:31,580 --> 00:21:36,802
जटिल संख्याओं के साथ, x से n तक का ऑपरेशन सीधे आउटपुट के मूल के चारों ओर 

343
00:21:36,802 --> 00:21:42,240
n बार घूमने से मेल खाता है जैसे आप इनपुट के मूल के चारों ओर एक बार चलते हैं।

344
00:21:44,680 --> 00:21:47,894
इसलिए बहुपद के साथ, पर्याप्त बड़े इनपुट के लिए, 

345
00:21:47,894 --> 00:21:51,980
अग्रणी पद के अलावा प्रत्येक पद तुलना में महत्वहीन हो जाता है।

346
00:21:52,480 --> 00:21:55,553
तो कोई भी जटिल बहुपद जिसका अग्रणी पद x से n है, 

347
00:21:55,553 --> 00:21:59,780
में एक बड़े पर्याप्त लूप के चारों ओर n की घुमावदार संख्या होती है।

348
00:22:00,540 --> 00:22:03,824
और इस तरह, हमारी घुमावदार संख्या तकनीक वास्तव में गारंटी 

349
00:22:03,824 --> 00:22:06,820
देती है कि प्रत्येक जटिल बहुपद में एक शून्य होता है।

350
00:22:07,480 --> 00:22:12,000
यह इतना महत्वपूर्ण तथ्य है कि गणितज्ञ इसे बीजगणित का मूलभूत प्रमेय कहते हैं।

351
00:22:13,800 --> 00:22:17,774
इस तरह के समीकरणों के संख्यात्मक समाधान खोजने के लिए एक एल्गोरिदम का होना 

352
00:22:17,774 --> 00:22:21,856
बेहद व्यावहारिक है, लेकिन बीजगणित का मौलिक प्रमेय इस बात का एक अच्छा उदाहरण 

353
00:22:21,856 --> 00:22:25,400
है कि ये घुमावदार संख्याएं सैद्धांतिक स्तर पर भी काफी उपयोगी हैं, 

354
00:22:25,400 --> 00:22:28,623
जो व्यापक वर्ग के लिए समाधान के अस्तित्व की गारंटी देती हैं।

355
00:22:28,623 --> 00:22:32,543
 उपयुक्त स्थितियों के लिए समीकरण, जो गणितज्ञों द्वारा सोचने से कहीं अधिक 

356
00:22:32,543 --> 00:22:33,940
पसंद की जाने वाली चीज़ है।

357
00:22:33,940 --> 00:22:38,865
मैं आपको एक अनुवर्ती वीडियो में टोपोलॉजी के संदर्भ में इसके कुछ और अद्भुत अनुप्रयोग 

358
00:22:38,865 --> 00:22:43,440
दिखाऊंगा, जिसमें एक पुराने 3ब्लू1ब्राउन वीडियो से एक गलती को सुधारना शामिल है।

359
00:22:44,060 --> 00:22:44,440
कौन सा?

360
00:22:44,940 --> 00:22:47,445
खैर, इस चैनल पर सभी वीडियो, सब कुछ देखें और देखें 

361
00:22:47,445 --> 00:22:49,600
कि क्या आप पहले त्रुटि का पता लगा सकते हैं।

362
00:22:51,300 --> 00:23:10,060
इस वीडियो के प्राथमिक लेखक 3ब्लू1ब्राउन टीम के नवीनतम सदस्यों में से एक, श्रीधर रमेश हैं।

