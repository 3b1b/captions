1
00:00:00,000 --> 00:00:06,720
यहां दो चीजें हैं, मुख्य विषय और मेटा विषय।

2
00:00:06,720 --> 00:00:10,304
मुख्य विषय द्वि-आयामी समीकरणों को हल करने के लिए यह वास्तव में साफ

3
00:00:10,304 --> 00:00:13,675
एल्गोरिथ्म होने जा रहा है, ऐसी चीजें जिनमें दो अज्ञात वास्तविक

4
00:00:13,675 --> 00:00:17,420
संख्याएं हैं, या वे भी जिनमें एक अज्ञात शामिल है जो एक जटिल संख्या है।

5
00:00:17,420 --> 00:00:22,326
उदाहरण के लिए, यदि आप किसी बहुपद की जटिल जड़ें खोजना चाहते हैं, या शायद रीमैन ज़ेटा

6
00:00:22,326 --> 00:00:27,000
फ़ंक्शन के उन मिलियन डॉलर शून्यों में से कुछ, तो यह एल्गोरिदम आपके लिए यह करेगा।

7
00:00:27,000 --> 00:00:30,520
और यह विधि अत्यंत सुंदर है, क्योंकि इसमें बहुत सारे रंग शामिल हैं।

8
00:00:30,520 --> 00:00:33,928
और इससे भी महत्वपूर्ण बात यह है कि मूल अंतर्निहित विचार समीकरणों को हल

9
00:00:33,928 --> 00:00:37,192
करने के लिए इस एल्गोरिदम से परे सभी प्रकार के गणित पर लागू होता है,

10
00:00:37,192 --> 00:00:40,600
जिसमें कुछ टोपोलॉजी भी शामिल है, जिसके बारे में मैं बाद में बात करूंगा।

11
00:00:40,600 --> 00:00:44,409
लेकिन वास्तव में जो चीज़ इसे आपके 20 मिनट या उसके आसपास के समय के लायक बनाती है, वह

12
00:00:44,409 --> 00:00:48,083
यह है कि यह पूरे गणित में अधिक सामान्यतः उपयोगी एक पाठ को चित्रित करता है, जो उन

13
00:00:48,083 --> 00:00:52,120
संरचनाओं को परिभाषित करने का प्रयास करता है जो एक-दूसरे के साथ अच्छी तरह से मेल खाते हैं।

14
00:00:52,120 --> 00:00:55,460
जैसे-जैसे कहानी आगे बढ़ेगी आप देखेंगे कि मेरा इससे क्या मतलब है।

15
00:00:55,460 --> 00:00:58,589
2डी इनपुट और 2डी आउटपुट वाले फ़ंक्शंस के साथ मामले को प्रेरित

16
00:00:58,589 --> 00:01:01,718
करने के लिए, आइए सरलता से शुरुआत करें, ऐसे फ़ंक्शंस के साथ जो

17
00:01:01,718 --> 00:01:05,100
केवल एक वास्तविक संख्या लेते हैं और एक वास्तविक संख्या निकालते हैं।

18
00:01:05,100 --> 00:01:08,119
यदि आप जानना चाहते हैं कि कब x का फ़ंक्शन f, x के किसी अन्य

19
00:01:08,119 --> 00:01:11,139
फ़ंक्शन g के बराबर होता है, तो आप इसे उस खोज के रूप में सोच

20
00:01:11,139 --> 00:01:14,260
सकते हैं जब उन फ़ंक्शन के ग्राफ़ एक दूसरे को काटते हैं, है ना?

21
00:01:14,260 --> 00:01:19,340
मेरा मतलब है, यह आपको एक इनपुट देता है जहां दोनों फ़ंक्शंस का आउटपुट समान होता है।

22
00:01:19,340 --> 00:01:22,397
एक बहुत ही सरल उदाहरण लेने के लिए, कल्पना करें

23
00:01:22,397 --> 00:01:25,520
कि x का f, x का वर्ग है, और x का g अचर फलन 2 है।

24
00:01:25,520 --> 00:01:29,620
दूसरे शब्दों में, आप 2 का वर्गमूल ज्ञात करना चाहते हैं।

25
00:01:29,620 --> 00:01:34,062
यहां तक कि अगर आप वर्गमूल खोजने के बारे में लगभग कुछ भी नहीं जानते हैं,

26
00:01:34,062 --> 00:01:38,382
तो आप शायद देख सकते हैं कि 1 वर्ग 2 से कम है, और 2 वर्ग 2 से बड़ा है,

27
00:01:38,382 --> 00:01:42,640
तो आप महसूस करते हैं, आह, उन दो मानों के बीच कुछ समाधान होने वाला है।

28
00:01:42,640 --> 00:01:45,040
और फिर यदि आप इसे और कम करना चाहते हैं, तो शायद

29
00:01:45,040 --> 00:01:47,240
आप आधे बिंदु का वर्ग करने का प्रयास करें, 1.

30
00:01:47,240 --> 00:01:47,740
5.

31
00:01:47,740 --> 00:01:49,085
यह 2 निकला.

32
00:01:49,085 --> 00:01:54,000
25, थोड़ा ज़्यादा, इसलिए आप 1 और 1 के बीच के क्षेत्र पर ध्यान केंद्रित करेंगे।

33
00:01:54,000 --> 00:01:54,940
5.

34
00:01:54,940 --> 00:02:00,480
और इसी तरह, आप शायद देख सकते हैं कि यह कैसे चलता रहेगा, आप मध्यबिंदु

35
00:02:00,480 --> 00:02:05,540
पर गणना करते रहेंगे और फिर अपने खोज स्थान को आधे में काट देंगे।

36
00:02:05,540 --> 00:02:09,095
इसके बारे में सोचने का एक और तरीका, जो उच्च आयामों तक पहुंचने

37
00:02:09,095 --> 00:02:12,766
के बाद हमारे लिए इसे आसान बना देगा, इसके बजाय समतुल्य प्रश्न पर

38
00:02:12,766 --> 00:02:16,380
ध्यान केंद्रित करना होगा जब इन दो कार्यों के बीच अंतर शून्य हो।

39
00:02:16,380 --> 00:02:20,267
उन शब्दों में, हमें इनपुट का एक क्षेत्र मिला जहां वह अंतर

40
00:02:20,267 --> 00:02:24,020
एक छोर पर नकारात्मक था, और दूसरे छोर पर यह सकारात्मक था।

41
00:02:24,020 --> 00:02:27,647
हमने इसे दो भागों में विभाजित किया, और जिस आधे हिस्से पर हमने अपना

42
00:02:27,647 --> 00:02:31,600
ध्यान केंद्रित किया वह वह था जहां सबसे बाहरी बिंदुओं पर अलग-अलग संकेत थे।

43
00:02:31,600 --> 00:02:36,288
इस तरह, हम हमेशा के लिए चलते रहने में सक्षम थे, सीमा पर अलग-अलग संकेतों के साथ

44
00:02:36,288 --> 00:02:41,096
प्रत्येक क्षेत्र को लेते हुए, उसके हिस्सों के बीच एक छोटा सा क्षेत्र ढूंढते हुए,

45
00:02:41,096 --> 00:02:46,260
यह जानते हुए कि अंततः हमें एक ऐसे बिंदु पर सीमित होना है जो बिल्कुल शून्य होने वाला है।

46
00:02:46,260 --> 00:02:50,652
संक्षेप में, समीकरणों को हल करना हमेशा यह पता लगाने के रूप में तैयार किया जा सकता है कि

47
00:02:50,652 --> 00:02:55,095
एक निश्चित फ़ंक्शन शून्य के बराबर है, और ऐसा करने के लिए, हमारे पास यह अनुमान है, यदि एफ

48
00:02:55,095 --> 00:02:59,537
एक बिंदु पर सकारात्मक है और दूसरे बिंदु पर नकारात्मक है, तो आप बीच में कोई जगह ढूंढ सकते

49
00:02:59,537 --> 00:03:03,980
हैं जहां यह शून्य है, कम से कम अगर सब कुछ बिना किसी अचानक उछाल के सुचारू रूप से बदलता है।

50
00:03:03,980 --> 00:03:07,575
जो आश्चर्यजनक बात मैं आपको दिखाना चाहता हूं वह यह है कि आप इस

51
00:03:07,575 --> 00:03:11,170
तरह की सोच को दो-आयामी समीकरणों में विस्तारित कर सकते हैं, उन

52
00:03:11,170 --> 00:03:14,940
कार्यों के बीच समीकरण जिनके इनपुट और आउटपुट दोनों द्वि-आयामी हैं।

53
00:03:14,940 --> 00:03:18,360
उदाहरण के लिए, जटिल संख्याएँ 2डी हैं, और यह उपकरण जो हम विकसित

54
00:03:18,360 --> 00:03:21,780
कर रहे हैं वह जटिल समीकरणों का समाधान खोजने के लिए एकदम सही है।

55
00:03:21,780 --> 00:03:25,553
अब, चूँकि हम इन 2डी फ़ंक्शंस के बारे में इतनी बात करने जा रहे हैं, आइए

56
00:03:25,553 --> 00:03:29,380
एक संक्षिप्त कदम उठाएं और विचार करें कि हम इन्हें कैसे चित्रित करते हैं।

57
00:03:29,380 --> 00:03:33,134
2डी इनपुट और 2डी आउटपुट के साथ एक फ़ंक्शन को ग्राफ़ करने के लिए चार

58
00:03:33,134 --> 00:03:37,109
आयामों की आवश्यकता होगी, और यह हमारी 2डी स्क्रीन पर 3डी दुनिया में इतनी

59
00:03:37,109 --> 00:03:41,140
अच्छी तरह से काम नहीं करेगा, लेकिन हमारे पास अभी भी कुछ अच्छे विकल्प हैं।

60
00:03:41,140 --> 00:03:46,020
एक तो इनपुट स्पेस और आउटपुट स्पेस दोनों को एक साथ देखना है।

61
00:03:46,020 --> 00:03:49,477
इनपुट स्पेस में प्रत्येक बिंदु आउटपुट स्पेस में एक विशेष

62
00:03:49,477 --> 00:03:53,117
बिंदु पर जाता है, और मैं दिखा सकता हूं कि उस इनपुट बिंदु के

63
00:03:53,117 --> 00:03:57,060
चारों ओर घूमना आउटपुट स्पेस में कुछ आंदोलनों से कैसे मेल खाता है।

64
00:03:57,060 --> 00:04:02,056
जिन सभी कार्यों पर हम विचार कर रहे हैं वे निरंतर होंगे, इस अर्थ में कि इनपुट में छोटे

65
00:04:02,056 --> 00:04:07,285
छोटे बदलाव केवल आउटपुट में छोटे छोटे बदलावों के अनुरूप होते हैं, कोई अचानक उछाल नहीं होता

66
00:04:07,285 --> 00:04:07,460
है।

67
00:04:07,460 --> 00:04:12,355
हमारे पास एक अन्य विकल्प यह है कि हम आउटपुट स्पेस के मूल से उस आउटपुट बिंदु

68
00:04:12,355 --> 00:04:17,380
तक तीर की कल्पना करें, और उस तीर का एक लघु संस्करण इनपुट बिंदु पर संलग्न करें।

69
00:04:17,380 --> 00:04:22,315
यह हमें एक नज़र में यह समझ दे सकता है कि एक दिया गया इनपुट बिंदु कहाँ जाता

70
00:04:22,315 --> 00:04:27,580
है, या पूर्ण वेक्टर फ़ील्ड को चित्रित करके कई अलग-अलग इनपुट बिंदु कहाँ जाते हैं।

71
00:04:27,580 --> 00:04:31,003
और दुर्भाग्य से जब आप कई बिंदुओं पर ऐसा करते हैं तो यह काफी अव्यवस्थित

72
00:04:31,003 --> 00:04:34,524
हो सकता है, इसलिए यहां मैं सभी तीरों को एक ही आकार का बनाता हूं, और इसका

73
00:04:34,524 --> 00:04:37,900
मतलब यह है कि हम प्रत्येक आउटपुट बिंदु की दिशा का अंदाजा लगा सकते हैं।

74
00:04:37,900 --> 00:04:41,031
लेकिन शायद द्वि-आयामी कार्यों को चित्रित करने का सबसे सुंदर

75
00:04:41,031 --> 00:04:44,163
तरीका, और जिसका हम इस वीडियो में सबसे अधिक उपयोग करेंगे, वह

76
00:04:44,163 --> 00:04:47,400
उस आउटपुट स्पेस में प्रत्येक बिंदु को एक रंग के साथ जोड़ना है।

77
00:04:47,400 --> 00:04:51,532
यहां हमने रंगों का उपयोग किया है, अर्थात जहां रंग इंद्रधनुष या

78
00:04:51,532 --> 00:04:55,599
रंग चक्र के साथ गिरता है, मूल से दूर की दिशा के अनुरूप, और हम

79
00:04:55,599 --> 00:05:00,060
मूल से दूरी के अनुरूप करने के लिए अंधेरे या चमक का उपयोग कर रहे हैं।

80
00:05:00,060 --> 00:05:05,168
उदाहरण के लिए, आउटपुट की इस श्रृंखला पर ध्यान केंद्रित करते हुए, ये सभी बिंदु लाल

81
00:05:05,168 --> 00:05:10,340
हैं, लेकिन जो मूल के करीब हैं वे थोड़े गहरे हैं, और जो दूर हैं वे थोड़े चमकीले हैं।

82
00:05:10,340 --> 00:05:14,527
और आउटपुट की इस श्रृंखला पर ध्यान केंद्रित करते हुए, सभी बिंदु

83
00:05:14,527 --> 00:05:18,980
हरे हैं, और फिर, मूल के करीब का मतलब गहरा है, दूर का मतलब हल्का है।

84
00:05:18,980 --> 00:05:22,200
और इसी तरह, हम यहां केवल प्रत्येक दिशा को एक विशिष्ट

85
00:05:22,200 --> 00:05:25,300
रंग निर्दिष्ट कर रहे हैं, सब कुछ लगातार बदल रहा है।

86
00:05:25,300 --> 00:05:30,364
आप देख सकते हैं कि यहां अंधेरे और चमक का अंतर बहुत सूक्ष्म है, लेकिन इस वीडियो

87
00:05:30,364 --> 00:05:35,300
के लिए, हम केवल आउटपुट की दिशा की परवाह करते हैं, परिमाण, रंग या चमक की नहीं।

88
00:05:35,300 --> 00:05:39,930
चमक के बारे में आपके लिए ध्यान देने योग्य एक महत्वपूर्ण बात यह है कि मूल के

89
00:05:39,930 --> 00:05:44,440
निकट, जिसकी कोई विशेष दिशा नहीं होती, सभी रंग फीके पड़कर काले हो जाते हैं।

90
00:05:44,440 --> 00:05:48,970
तो फ़ंक्शंस के बारे में सोचने के लिए, अब जब हमने प्रत्येक आउटपुट के लिए एक रंग

91
00:05:48,970 --> 00:05:53,501
तय कर लिया है, तो हम इनपुट स्पेस में प्रत्येक बिंदु को उस बिंदु के रंग के आधार

92
00:05:53,501 --> 00:05:57,860
पर रंगकर 2डी फ़ंक्शंस की कल्पना कर सकते हैं जहां यह आउटपुट स्पेस में आता है।

93
00:05:57,860 --> 00:06:02,475
मुझे उस इनपुट स्पेस से कई अलग-अलग बिंदुओं की कल्पना करना पसंद है, जो आउटपुट स्पेस

94
00:06:02,475 --> 00:06:07,091
में उनके संबंधित आउटपुट पर कूदते हैं, फिर उस बिंदु के रंग के आधार पर चित्रित होते

95
00:06:07,091 --> 00:06:11,820
हैं जहां वे उतरते हैं, और फिर इनपुट स्पेस में जहां से वे आए थे, वहां वापस कूदते हैं।

96
00:06:11,820 --> 00:06:15,480
इनपुट स्पेस में प्रत्येक बिंदु के लिए ऐसा करते हुए, आप उस इनपुट स्पेस

97
00:06:15,480 --> 00:06:19,140
को देखकर यह समझ सकते हैं कि फ़ंक्शन प्रत्येक बिंदु को कहां ले जाता है।

98
00:06:19,140 --> 00:06:24,470
उदाहरण के लिए, बाईं ओर गुलाबी बिंदुओं की यह पट्टी हमें बताती है कि वे सभी बिंदु

99
00:06:24,470 --> 00:06:30,000
गुलाबी दिशा में कहीं मैप किए जाते हैं, जो कि आउटपुट स्पेस के निचले बाएँ भाग में है।

100
00:06:30,000 --> 00:06:33,827
इसके अलावा वे तीन बिंदु जो काले हैं और उनके चारों

101
00:06:33,827 --> 00:06:37,120
ओर बहुत सारे रंग हैं, वे शून्य पर जाते हैं।

102
00:06:37,120 --> 00:06:43,450
ठीक है, तो 1डी मामले की तरह, 2डी फ़ंक्शन के समीकरणों को हल करने को हमेशा यह

103
00:06:43,450 --> 00:06:49,780
पूछकर दोबारा तैयार किया जा सकता है कि कोई निश्चित फ़ंक्शन शून्य के बराबर है।

104
00:06:49,780 --> 00:06:55,383
तो अभी हमारी चुनौती यही है, एक एल्गोरिदम बनाएं जो यह पता लगाए कि

105
00:06:55,383 --> 00:07:00,900
किसी दिए गए 2डी फ़ंक्शन के कौन से इनपुट बिंदु शून्य पर जाते हैं।

106
00:07:00,900 --> 00:07:04,980
आप यह बता सकते हैं कि यदि आप उन काले बिंदुओं को देखकर इस तरह के रंगीन मानचित्र

107
00:07:04,980 --> 00:07:08,700
को देख रहे हैं, तो आप पहले से ही जानते हैं कि फ़ंक्शन के शून्य कहाँ हैं।

108
00:07:08,700 --> 00:07:11,460
तो क्या वह मायने रखता है?

109
00:07:11,460 --> 00:07:15,742
ध्यान रखें कि इस तरह का आरेख बनाने के लिए, हमने कंप्यूटर को समतल पर सभी

110
00:07:15,742 --> 00:07:20,143
पिक्सेल पर फ़ंक्शन की गणना करने के लिए कहा है, लेकिन हमारा लक्ष्य एक अधिक

111
00:07:20,143 --> 00:07:24,544
कुशल एल्गोरिदम ढूंढना है जिसके लिए केवल यथासंभव कुछ बिंदुओं पर फ़ंक्शन की

112
00:07:24,544 --> 00:07:29,600
गणना करने की आवश्यकता होती है , ऐसा कहने के लिए, केवल रंगों का एक सीमित दृष्टिकोण है।

113
00:07:29,600 --> 00:07:33,835
और अधिक सैद्धांतिक दृष्टिकोण से भी, एक सामान्य निर्माण करना अच्छा होगा जो

114
00:07:33,835 --> 00:07:38,300
हमें किसी दिए गए क्षेत्र के अंदर शून्य मौजूद है या नहीं, इसकी शर्तें बताता है।

115
00:07:38,300 --> 00:07:43,505
याद रखें, एक आयाम में मुख्य अंतर्दृष्टि यह थी कि यदि एक सतत कार्य एक बिंदु

116
00:07:43,505 --> 00:07:48,920
पर सकारात्मक है और दूसरे पर नकारात्मक है, तो बीच में कहीं यह शून्य होना चाहिए।

117
00:07:48,920 --> 00:07:50,960
तो हम इसे दो आयामों में कैसे विस्तारित करें?

118
00:07:50,960 --> 00:07:55,180
हमें संकेतों के बारे में बात करने के लिए किसी प्रकार के एनालॉग की आवश्यकता है।

119
00:07:55,180 --> 00:07:59,140
संकेत क्या हैं, इसके बारे में सोचने का एक तरीका दिशाएँ हैं।

120
00:07:59,140 --> 00:08:01,669
सकारात्मक का मतलब है कि आप संख्या रेखा के साथ दाईं ओर इशारा कर

121
00:08:01,669 --> 00:08:04,240
रहे हैं, और नकारात्मक का मतलब है कि आप बाईं ओर इशारा कर रहे हैं।

122
00:08:04,240 --> 00:08:08,327
द्वि-आयामी मात्राओं की भी दिशा होती है, लेकिन उनके लिए विकल्प बहुत

123
00:08:08,327 --> 00:08:12,780
व्यापक होते हैं, वे संभावनाओं के पूरे चक्र में कहीं भी इंगित कर सकते हैं।

124
00:08:12,780 --> 00:08:18,080
तो उसी तरह जैसे एक आयाम में हम पूछ रहे थे कि क्या कोई दिया गया फ़ंक्शन

125
00:08:18,080 --> 00:08:23,158
किसी सीमा की सीमा पर सकारात्मक या नकारात्मक है, जो कि केवल दो बिंदु

126
00:08:23,158 --> 00:08:28,309
हैं, 2d फ़ंक्शन के लिए हम एक क्षेत्र की सीमा को देखने जा रहे हैं, जो

127
00:08:28,309 --> 00:08:33,760
एक लूप है, और उस सीमा के साथ फ़ंक्शन के आउटपुट की दिशा के बारे में पूछें।

128
00:08:33,760 --> 00:08:37,845
उदाहरण के लिए, हम देखते हैं कि इस शून्य के चारों ओर इस लूप के

129
00:08:37,845 --> 00:08:41,865
साथ, आउटपुट हर संभव दिशा से गुजरता है, इंद्रधनुष के सभी रंग,

130
00:08:41,865 --> 00:08:45,820
लाल, पीला, हरा, नीला, वापस लाल और रास्ते में बीच में सब कुछ।

131
00:08:45,820 --> 00:08:48,865
लेकिन यहां इस लूप के साथ, इसके अंदर कोई शून्य नहीं होने के

132
00:08:48,865 --> 00:08:52,013
कारण, आउटपुट हर रंग के माध्यम से नहीं जाता है, यह कुछ नारंगी

133
00:08:52,013 --> 00:08:55,420
रंगों के माध्यम से जाता है, लेकिन कभी भी हरा या नीला नहीं होता है।

134
00:08:55,420 --> 00:08:59,320
और यह आशाजनक है, ऐसा लगता है कि चीजें एक आयाम में कैसे काम करती हैं।

135
00:08:59,320 --> 00:09:04,512
शायद उसी तरह से यदि एक 1d फ़ंक्शन 1d क्षेत्र की सीमा पर दोनों संभावित

136
00:09:04,512 --> 00:09:09,927
संकेत लेता है, तो अंदर कहीं शून्य था, हम परिकल्पना कर सकते हैं कि यदि एक

137
00:09:09,927 --> 00:09:15,416
2d फ़ंक्शन सभी संभावित दिशाओं, सभी संभावित रंगों के आउटपुट को हिट करता है

138
00:09:15,416 --> 00:09:20,980
किसी 2d क्षेत्र की सीमा, तो उस क्षेत्र के अंदर कहीं इसे शून्य पर जाना होगा।

139
00:09:20,980 --> 00:09:24,320
तो यह हमारा अनुमान है, और एक क्षण रुककर सोचें

140
00:09:24,320 --> 00:09:27,660
कि क्या यह सच होना चाहिए, और यदि हां तो क्यों।

141
00:09:27,660 --> 00:09:30,753
यदि हम किसी इनपुट बिंदु के चारों ओर एक छोटे लूप के बारे में सोचना

142
00:09:30,753 --> 00:09:33,753
शुरू करते हैं, तो हम जानते हैं कि चूंकि सब कुछ निरंतर है, हमारा

143
00:09:33,753 --> 00:09:36,660
फ़ंक्शन इसे संबंधित आउटपुट के पास कुछ छोटे लूप में ले जाता है।

144
00:09:36,660 --> 00:09:41,140
लेकिन देखिए, अधिकांश छोटे लूपों के लिए, आउटपुट रंग में भिन्न होता है।

145
00:09:41,140 --> 00:09:45,716
यदि आप शून्य के अलावा कोई आउटपुट बिंदु चुनते हैं, और उसके पास एक पर्याप्त

146
00:09:45,716 --> 00:09:49,860
तंग लूप बनाते हैं, तो लूप के सभी रंग उस बिंदु के समान रंग के होंगे।

147
00:09:49,860 --> 00:09:53,988
यहाँ पर एक तंग लूप पूरी तरह से नीला है, यहाँ पर एक तंग लूप पूरी

148
00:09:53,988 --> 00:09:58,440
तरह से पीला है, आपको निश्चित रूप से इंद्रधनुष के हर रंग नहीं मिलेंगे।

149
00:09:58,440 --> 00:10:02,901
एकमात्र बिंदु जहां आप सभी रंग प्राप्त करते हुए भी इसके

150
00:10:02,901 --> 00:10:07,120
चारों ओर लूप कस सकते हैं वह रंगहीन मूल, शून्य ही है।

151
00:10:07,120 --> 00:10:10,479
तो वास्तव में यह मामला है कि यदि आपके पास इंद्रधनुष के हर रंग

152
00:10:10,479 --> 00:10:13,946
के माध्यम से लूप चल रहे हैं, कस रहे हैं और कस रहे हैं, एक बिंदु

153
00:10:13,946 --> 00:10:17,360
पर संकीर्ण हो रहे हैं, तो वह बिंदु वास्तव में शून्य होना चाहिए।

154
00:10:17,360 --> 00:10:22,360
और इसलिए आइए हमारे एक-आयामी समीकरण सॉल्वर की तरह एक 2डी समीकरण सॉल्वर स्थापित करें।

155
00:10:22,360 --> 00:10:26,472
जब हमें एक बड़ा क्षेत्र मिले जिसकी सीमा हर रंग से होकर गुजरती है, तो इसे दो

156
00:10:26,472 --> 00:10:30,640
भागों में विभाजित करें, और फिर प्रत्येक आधे हिस्से की सीमा पर रंगों को देखें।

157
00:10:30,640 --> 00:10:34,723
यहां दिखाए गए उदाहरण में, बाएं आधे हिस्से की सीमा सभी रंगों से नहीं गुजरती

158
00:10:34,723 --> 00:10:39,080
है, उदाहरण के लिए, नारंगी पीले रंग की दिशाओं को मैप करने वाला कोई बिंदु नहीं है।

159
00:10:39,080 --> 00:10:41,218
इसलिए मैं यह कहने के तरीके के रूप में इस क्षेत्र को

160
00:10:41,218 --> 00:10:43,480
धुंधला कर दूंगा कि हम इसे और अधिक खोजना नहीं चाहते हैं।

161
00:10:43,480 --> 00:10:47,217
दाहिना आधा भाग सभी रंगों से गुजरता है, हरे रंग की दिशा में बहुत समय

162
00:10:47,217 --> 00:10:51,120
बिताता है, फिर पीले नारंगी लाल, साथ ही नीले बैंगनी गुलाबी से गुजरता है।

163
00:10:51,120 --> 00:10:54,494
अब याद रखें, इसका मतलब यह है कि इस सीमा के बिंदु

164
00:10:54,494 --> 00:10:57,800
सभी संभावित दिशाओं के आउटपुट पर मैप हो जाते हैं।

165
00:10:57,800 --> 00:11:00,454
इसलिए हम इसे आगे खोजेंगे, फिर से उप-विभाजित करेंगे

166
00:11:00,454 --> 00:11:02,900
और प्रत्येक क्षेत्र के लिए सीमा की जाँच करेंगे।

167
00:11:02,900 --> 00:11:07,000
शीर्ष की सीमा पूरी तरह हरी है, इसलिए हम वहां खोजना बंद कर देंगे।

168
00:11:07,000 --> 00:11:10,500
लेकिन निचला भाग इतना रंगीन है कि इसे उपविभाजित किया जा सकता है।

169
00:11:10,500 --> 00:11:12,420
और ऐसे ही आगे बढ़ते रहो.

170
00:11:12,420 --> 00:11:16,734
जांचें कि किस उपक्षेत्र की सीमा सभी संभावित रंगों को कवर करती है, जिसका

171
00:11:16,734 --> 00:11:20,870
अर्थ है कि उस सीमा के बिंदु सभी संभावित दिशाओं में मैप किए जाते हैं,

172
00:11:20,870 --> 00:11:25,065
और उन क्षेत्रों को आधे में काटते रहें जैसे हमने एक-आयामी मामले के लिए

173
00:11:25,065 --> 00:11:29,320
किया था, अंततः हमें फ़ंक्शन पर शून्य पर ले जाया गया- ओह, एक सेकंड रुको.

174
00:11:29,320 --> 00:11:30,320
यहां क्या हुआ?

175
00:11:30,320 --> 00:11:33,779
नीचे दाईं ओर के अंतिम उपविभाजनों में से कोई भी सभी रंगों से

176
00:11:33,779 --> 00:11:37,469
होकर नहीं गुजरा, इसलिए हमारा एल्गोरिदम रुक गया क्योंकि वह उनमें

177
00:11:37,469 --> 00:11:41,160
से किसी को भी खोजना नहीं चाहता था, लेकिन उसे शून्य भी नहीं मिला।

178
00:11:41,160 --> 00:11:43,720
ठीक है, यहाँ स्पष्ट रूप से कुछ गड़बड़ है।

179
00:11:43,720 --> 00:11:46,680
और यह ठीक है, गलत होना गणित करने का एक नियमित हिस्सा है।

180
00:11:46,680 --> 00:11:50,044
यदि हम पीछे मुड़कर देखें, तो हमारे पास यह परिकल्पना थी, और यह

181
00:11:50,044 --> 00:11:53,680
हमें इस प्रस्तावित एल्गोरिदम तक ले गई, इसलिए हम कहीं न कहीं गलत थे।

182
00:11:53,680 --> 00:11:57,945
और गणित में अच्छा होना पहली बार में सही होने के बारे में नहीं है, यह ध्यान से पीछे

183
00:11:57,945 --> 00:12:02,520
देखने और गलतियों को समझने और उन्हें ठीक करने के तरीके को समझने के लचीलेपन के बारे में है।

184
00:12:02,520 --> 00:12:06,741
अब यहाँ समस्या यह है कि हमारे पास एक ऐसा क्षेत्र था जिसकी सीमा हर रंग से होकर गुजरती थी,

185
00:12:06,741 --> 00:12:10,726
लेकिन जब हमने इसे बीच में विभाजित किया, तो किसी भी उपक्षेत्र की सीमा हर रंग से नहीं

186
00:12:10,726 --> 00:12:14,805
गुज़री, हमारे पास कोई विकल्प नहीं था कि आगे कहाँ खोज करते रहें, और इसने शून्य को तोड़

187
00:12:14,805 --> 00:12:15,280
दिया खोजक.

188
00:12:15,280 --> 00:12:18,120
अब एक आयाम में, इस तरह की चीज़ कभी नहीं हुई।

189
00:12:18,120 --> 00:12:21,710
किसी भी समय आपके पास एक अंतराल होता है जिसके समापन बिंदुओं पर अलग-अलग

190
00:12:21,710 --> 00:12:25,455
संकेत होते हैं, यदि आप इसे विभाजित करते हैं, तो आप जानते हैं कि आपको कुछ

191
00:12:25,455 --> 00:12:29,200
उप-अंतराल मिलने की गारंटी है जिसके समापन बिंदुओं पर भी अलग-अलग संकेत हैं।

192
00:12:29,200 --> 00:12:32,421
या दूसरे तरीके से कहें तो, जब भी आपके पास दो अंतराल हों जिनके

193
00:12:32,421 --> 00:12:35,694
समापन बिंदु संकेत नहीं बदलते हैं, यदि आप उन्हें जोड़ते हैं, तो

194
00:12:35,694 --> 00:12:39,280
आपको एक बड़ा अंतराल मिलेगा जिसके समापन बिंदु भी संकेत नहीं बदलते हैं।

195
00:12:39,280 --> 00:12:44,459
लेकिन दो आयामों में, ऐसे दो क्षेत्र ढूंढना संभव है जिनकी सीमाएं हर रंग से नहीं गुजरती

196
00:12:44,459 --> 00:12:49,759
हैं, लेकिन जिनकी सीमाएं मिलकर एक ऐसा क्षेत्र बनाती हैं जिसकी सीमा हर रंग से होकर गुजरती

197
00:12:49,759 --> 00:12:49,940
है।

198
00:12:49,940 --> 00:12:53,740
और इस तरह, हमारा प्रस्तावित शून्य-खोज एल्गोरिदम टूट गया।

199
00:12:53,740 --> 00:12:58,299
वास्तव में, यदि आप इसके बारे में सोचते हैं, तो आप एक बड़ा लूप पा सकते

200
00:12:58,299 --> 00:13:03,120
हैं जिसकी सीमा हर संभव रंग से होकर गुजरती है, इसके अंदर कोई शून्य नहीं है।

201
00:13:03,120 --> 00:13:06,264
अब इसका मतलब यह नहीं है कि हम छोटे लूपों के बारे में अपने

202
00:13:06,264 --> 00:13:09,516
दावों में गलत थे जब हमने कहा था कि हर रंग से गुजरने वाले एक

203
00:13:09,516 --> 00:13:13,040
हमेशा के लिए संकीर्ण होने वाले लूप को शून्य पर संकीर्ण होना होगा।

204
00:13:13,040 --> 00:13:16,281
लेकिन जिस चीज़ ने हमारे लिए गड़बड़ी पैदा कर दी वह यह है कि

205
00:13:16,281 --> 00:13:19,633
जब आप क्षेत्रों को जोड़ते हैं तो यह मेरी-सीमा-हर-रंग-या-नहीं

206
00:13:19,633 --> 00:13:23,040
संपत्ति को अच्छे, पूर्वानुमानित तरीके से संयोजित नहीं करती है।

207
00:13:23,040 --> 00:13:30,695
लेकिन चिंता न करें, यह पता चला है कि हम इसे एक अधिक परिष्कृत संपत्ति में

208
00:13:30,695 --> 00:13:38,560
थोड़ा संशोधित कर सकते हैं जो हमें वह देने के लिए जोड़ती है जो हम चाहते हैं।

209
00:13:38,560 --> 00:13:41,654
विचार यह है कि केवल यह पूछने के बजाय कि क्या हम लूप के किसी

210
00:13:41,654 --> 00:13:44,902
बिंदु पर कोई रंग पा सकते हैं, आइए अधिक सावधानीपूर्वक नज़र रखें

211
00:13:44,902 --> 00:13:48,100
कि जब हम उस लूप के चारों ओर चलते हैं तो ये रंग कैसे बदलते हैं।

212
00:13:48,100 --> 00:13:50,060
आइए मैं आपको एक उदाहरण से समझाता हूं कि मेरा क्या मतलब है।

213
00:13:50,060 --> 00:13:54,120
हम पर नज़र रखने में मदद के लिए मैं यहां कोने में एक छोटा रंगीन पहिया रखूंगा।

214
00:13:54,120 --> 00:13:59,715
जब इनपुट के पथ पर रंग इंद्रधनुष के माध्यम से एक विशिष्ट दिशा में चलते हैं, लाल से

215
00:13:59,715 --> 00:14:05,720
पीला, पीला से हरा, हरा से नीला, या नीला से लाल, तो आउटपुट दक्षिणावर्त दिशा में घूमता है।

216
00:14:05,720 --> 00:14:11,330
लेकिन दूसरी ओर, यदि रंग इंद्रधनुष के माध्यम से दूसरे तरीके से चलते हैं, नीले

217
00:14:11,330 --> 00:14:17,160
से हरे, हरे से पीले, पीले से लाल, या लाल से नीले, तो आउटपुट वामावर्त झूल रहा है।

218
00:14:17,160 --> 00:14:21,346
इसलिए यहां इस छोटे रास्ते पर चलते हुए, रंग रंग चक्र के माध्यम से

219
00:14:21,346 --> 00:14:25,854
दक्षिणावर्त दिशा में पांचवां हिस्सा घुमाते हैं, और यहां इस पथ पर चलते

220
00:14:25,854 --> 00:14:30,620
हुए, रंग चक्र के माध्यम से दक्षिणावर्त दिशा में पांचवां हिस्सा घुमाते हैं।

221
00:14:30,620 --> 00:14:35,029
निःसंदेह, इसका मतलब यह है कि यदि आप एक के बाद एक, दोनों रास्तों से गुजरते

222
00:14:35,029 --> 00:14:39,380
हैं, तो रंग दक्षिणावर्त दिशा में कुल मिलाकर दो-पाँचवें भाग में घूमते हैं।

223
00:14:39,380 --> 00:14:43,290
वाइंडिंग की कुल मात्रा बस जुड़ जाती है, और यह महत्वपूर्ण होने जा

224
00:14:43,290 --> 00:14:47,140
रही है, यह एक प्रकार का सीधा संयोजन है जो हमारे लिए उपयोगी होगा।

225
00:14:47,140 --> 00:14:51,075
जब मैं वाइंडिंग की कुल मात्रा कहता हूं, तो मैं चाहता हूं कि आप एक पुराने ज़माने

226
00:14:51,075 --> 00:14:54,813
के ओडोमीटर की कल्पना करें जो तीर के दक्षिणावर्त दिशा में घूमने पर आगे की ओर

227
00:14:54,813 --> 00:14:58,700
टिक करता है, लेकिन जब तीर वामावर्त दिशा में घूमता है तो पीछे की ओर टिक जाता है।

228
00:14:58,700 --> 00:15:03,020
इसलिए वामावर्त वाइंडिंग को नकारात्मक क्लॉकवाइज वाइंडिंग के रूप में गिना जाता है।

229
00:15:03,020 --> 00:15:05,950
आउटपुट बहुत अधिक घूम सकते हैं, लेकिन यदि उनमें से

230
00:15:05,950 --> 00:15:08,940
कुछ मोड़ विपरीत दिशा में है, तो यह रद्द हो जाता है।

231
00:15:08,940 --> 00:15:13,165
उदाहरण के लिए, यदि आप इस पथ पर आगे बढ़ते हैं, और फिर उसी पथ पर पीछे की ओर

232
00:15:13,165 --> 00:15:17,334
बढ़ते हैं, तो वाइंडिंग की कुल मात्रा शून्य हो जाती है, पीछे की ओर की गति

233
00:15:17,334 --> 00:15:21,674
वस्तुतः पहले देखे गए रंगों के माध्यम से रिवाइंड होती है, पिछली सभी वाइंडिंग

234
00:15:21,674 --> 00:15:26,300
को उलट देती है, और वापस लौट आती है ओडोमीटर वापस वहीं ले जाएँ जहाँ से शुरू हुआ था।

235
00:15:26,300 --> 00:15:30,480
अपने उद्देश्यों के लिए, हम लूप के साथ-साथ वाइंडिंग को देखने की सबसे अधिक परवाह करेंगे।

236
00:15:30,480 --> 00:15:34,280
उदाहरण के लिए, मान लें कि हम इस पूरे लूप के चारों ओर दक्षिणावर्त घूमते हैं।

237
00:15:34,280 --> 00:15:40,663
आउटपुट में हमें कुल तीन पूर्ण दक्षिणावर्त घुमावों के आसपास हवा का सामना करना पड़ता है,

238
00:15:40,663 --> 00:15:47,120
रंग इंद्रधनुष के माध्यम से घूमते हैं, क्रम में, लाल से फिर से लाल, और फिर से, और फिर से।

239
00:15:47,120 --> 00:15:50,610
गणितज्ञों द्वारा प्रयुक्त शब्दजाल में, हम कहते

240
00:15:50,610 --> 00:15:54,100
हैं कि इस लूप के साथ, कुल वाइंडिंग संख्या 3 है।

241
00:15:54,100 --> 00:15:58,439
अन्य लूपों के लिए, यह कोई अन्य पूर्ण संख्या हो सकती है, शायद बड़ी संख्या हो

242
00:15:58,439 --> 00:16:02,835
सकती है यदि आउटपुट कई बार घूमता है क्योंकि इनपुट एक ही लूप के चारों ओर घूमता

243
00:16:02,835 --> 00:16:07,060
है, या यह एक छोटी संख्या हो सकती है यदि आउटपुट केवल एक या दो बार घूमता है।

244
00:16:07,060 --> 00:16:11,130
या वह वाइंडिंग संख्या एक ऋणात्मक पूर्णांक भी हो सकती है, यदि जब हम लूप के

245
00:16:11,130 --> 00:16:15,200
चारों ओर दक्षिणावर्त चलते हैं तो आउटपुट वामावर्त दिशा में घूम रहा होता है।

246
00:16:15,200 --> 00:16:19,720
लेकिन किसी भी लूप के साथ, वाइंडिंग की यह कुल मात्रा एक पूर्ण संख्या होनी चाहिए।

247
00:16:19,720 --> 00:16:22,600
मेरा मतलब है, जब तक आप वापस वहीं पहुंचेंगे जहां से आपने

248
00:16:22,600 --> 00:16:25,840
शुरुआत की थी, आपके पास वही आउटपुट होगा जिससे आपने शुरुआत की थी।

249
00:16:25,840 --> 00:16:29,910
संयोगवश, यदि पथ में वास्तव में एक बिंदु है जहां आउटपुट बिल्कुल

250
00:16:29,910 --> 00:16:34,046
शून्य है, तो तकनीकी रूप से आप उस पर एक घुमावदार संख्या परिभाषित

251
00:16:34,046 --> 00:16:37,600
नहीं कर सकते, क्योंकि आउटपुट की कोई विशेष दिशा नहीं है।

252
00:16:37,600 --> 00:16:41,319
यह हमारे लिए कोई समस्या नहीं होने वाली है, क्योंकि हमारा पूरा लक्ष्य

253
00:16:41,319 --> 00:16:45,200
शून्य ढूंढना है, इसलिए यदि यह कभी आता है, तो हम जल्दी ही बाहर हो जाएंगे।

254
00:16:45,200 --> 00:16:50,190
इन घुमावदार संख्याओं के बारे में ध्यान देने वाली मुख्य बात यह है कि जब

255
00:16:50,190 --> 00:16:55,040
आप पथों को बड़े पथों में जोड़ते हैं तो वे अच्छी तरह से जुड़ जाते हैं।

256
00:16:55,040 --> 00:16:59,126
लेकिन हम वास्तव में जो चाहते हैं वह यह है कि जब हम बड़े क्षेत्र बनाने के लिए क्षेत्रों

257
00:16:59,126 --> 00:17:03,120
को जोड़ते हैं तो क्षेत्रों की सीमाओं के साथ घुमावदार संख्याएं अच्छी तरह से जुड़ जाएं।

258
00:17:03,120 --> 00:17:06,320
तो क्या हमारे पास वह संपत्ति है?

259
00:17:06,320 --> 00:17:09,600
अच्छा, देख लो.

260
00:17:09,600 --> 00:17:13,966
जैसे ही हम बाईं ओर इस क्षेत्र के चारों ओर दक्षिणावर्त घूमते हैं, घुमावदार

261
00:17:13,966 --> 00:17:17,920
संख्या इन चार रास्तों से आने वाली घुमावदार संख्याओं का योग होती है।

262
00:17:17,920 --> 00:17:21,729
और जब हम दाहिनी ओर इस क्षेत्र के चारों ओर दक्षिणावर्त घूमते हैं

263
00:17:21,729 --> 00:17:25,480
तो इन चार रास्तों से आने वाली घुमावदार संख्याओं का योग होता है।

264
00:17:25,480 --> 00:17:29,620
और जब हम उन दो क्षेत्रों को एक बड़े क्षेत्र में जोड़ते हैं, तो उनमें

265
00:17:29,620 --> 00:17:33,760
से अधिकांश पथ बड़े क्षेत्र की दक्षिणावर्त सीमा का हिस्सा बन जाते हैं।

266
00:17:33,760 --> 00:17:36,040
और जहां तक उन दो रास्तों का सवाल है जो नहीं हैं?

267
00:17:36,040 --> 00:17:39,229
वे पूरी तरह से रद्द कर देते हैं, उनमें से एक बिल्कुल

268
00:17:39,229 --> 00:17:42,660
विपरीत है, दूसरे की रिवाइंडिंग जैसा कि हमने पहले देखा था।

269
00:17:42,660 --> 00:17:45,851
इसलिए क्षेत्रों की सीमाओं पर घुमावदार संख्याएँ

270
00:17:45,851 --> 00:17:48,840
ठीक उसी तरह जुड़ती हैं जिस तरह हम चाहते हैं।

271
00:17:48,840 --> 00:17:53,053
इसके अलावा ध्यान दें, उन्मुख सीमाओं को इस तरह अच्छी तरह से जोड़ने के बारे में यह

272
00:17:53,053 --> 00:17:57,320
तर्क गणित में बहुत बार आता है, और इसे अक्सर स्टोक्स प्रमेय के नाम से जाना जाता है।

273
00:17:57,320 --> 00:17:59,956
आपमें से जिन लोगों ने मल्टीवेरिएबल कैलकुलस का

274
00:17:59,956 --> 00:18:02,880
अध्ययन किया है, वे इसे उस संदर्भ से पहचान सकते हैं।

275
00:18:02,880 --> 00:18:05,514
तो अब, अंततः, घुमावदार संख्याओं के साथ, हम अपने

276
00:18:05,514 --> 00:18:08,040
समीकरण हल करने के लक्ष्यों पर वापस आ सकते हैं।

277
00:18:08,040 --> 00:18:12,218
इस क्षेत्र के साथ समस्या जो हमने पहले देखी थी वह यह है कि भले ही इसकी सीमा

278
00:18:12,218 --> 00:18:16,620
सभी संभावित रंगों से होकर गुजरती थी, लेकिन वाइंडिंग संख्या वास्तव में शून्य थी।

279
00:18:16,620 --> 00:18:21,867
आउटपुट लगभग आधे रास्ते में घूमते रहे, पीले से लाल होते हुए, और फिर वामावर्त दिशा

280
00:18:21,867 --> 00:18:26,921
में दूसरी दिशा में जाना शुरू कर दिया, फिर नीले रंग में जाना जारी रखा और दूसरे

281
00:18:26,921 --> 00:18:32,040
रास्ते से लाल पर प्रहार करते रहे, सब कुछ इस तरह से कि कुल वाइंडिंग शून्य हो गई।

282
00:18:32,040 --> 00:18:36,168
लेकिन अगर आपको एक लूप मिलता है जो न केवल हर रंग को हिट करता है, बल्कि इसमें गैर-शून्य

283
00:18:36,168 --> 00:18:40,200
वाइंडिंग संख्या की मजबूत स्थिति होती है, तो यदि आप इसे आधे में विभाजित करते हैं, तो

284
00:18:40,200 --> 00:18:44,280
आपको गारंटी दी जाती है कि कम से कम उन हिस्सों में से एक में एक है गैर-शून्य वाइंडिंग

285
00:18:44,280 --> 00:18:48,600
संख्या भी, क्योंकि चीजें अच्छी तरह से उस तरह से जुड़ती हैं जिस तरह से हम उन्हें चाहते हैं।

286
00:18:48,600 --> 00:18:54,280
तो इस तरह, आप आगे बढ़ते रह सकते हैं, एक बिंदु पर और आगे सीमित होते जा सकते हैं।

287
00:18:54,280 --> 00:18:57,679
और जैसे ही आप एक बिंदु पर संकीर्ण होते हैं, आप छोटे लूपों के साथ ऐसा

288
00:18:57,679 --> 00:19:01,078
कर रहे होंगे जिनमें गैर-शून्य घुमावदार संख्याएं होती हैं, जिसका अर्थ

289
00:19:01,078 --> 00:19:04,330
है कि वे सभी संभावित रंगों से गुजरते हैं, और इसलिए, जैसा कि मैंने

290
00:19:04,330 --> 00:19:07,680
पहले कहा था, जिस बिंदु पर वे संकीर्ण हो रहे हैं पर शून्य होना चाहिए.

291
00:19:07,680 --> 00:19:08,760
और बस!

292
00:19:08,760 --> 00:19:11,760
हमने अब एक द्वि-आयामी समीकरण सॉल्वर बनाया है,

293
00:19:11,760 --> 00:19:14,760
और इस बार, मैं वादा करता हूं, कोई बग नहीं हैं।

294
00:19:14,760 --> 00:19:18,200
इस कार्य को करने के लिए वाइंडिंग नंबर ही वह उपकरण है जिसकी हमें आवश्यकता होती है।

295
00:19:18,200 --> 00:19:22,930
अब हम ऐसे समीकरणों को हल कर सकते हैं जो इस तरह दिखते हैं कि दो आयामों में x का f,

296
00:19:22,930 --> 00:19:27,660
x के g के बराबर कहां है, बस इस बात पर विचार करके कि f और g के बीच का अंतर कैसा है।

297
00:19:27,660 --> 00:19:31,256
जब भी हमारे पास एक लूप होता है जिसकी वाइंडिंग संख्या शून्य नहीं होती है, तो हम इस

298
00:19:31,256 --> 00:19:35,160
एल्गोरिदम को उस पर चला सकते हैं, और हमें इसके भीतर कहीं न कहीं समाधान खोजने की गारंटी है।

299
00:19:35,160 --> 00:19:40,300
और इससे भी अधिक, एक आयाम की तरह, यह एल्गोरिदम अविश्वसनीय रूप से कुशल है।

300
00:19:40,300 --> 00:19:45,078
हम प्रत्येक दौर में अपने क्षेत्र के आधे आकार को सीमित करते रहते हैं, इस प्रकार

301
00:19:45,078 --> 00:19:49,977
शून्य पर तेजी से संकीर्ण होते जाते हैं, और हर समय, हमें केवल इन लूपों के बिंदुओं

302
00:19:49,977 --> 00:19:55,240
के साथ फ़ंक्शन के मान की जांच करनी होती है, न कि इसे कई पर जांचना होता है आंतरिक बिंदु.

303
00:19:55,240 --> 00:20:00,216
तो कुछ अर्थों में, किया गया समग्र कार्य केवल खोज स्थान की परिधि

304
00:20:00,216 --> 00:20:04,960
के समानुपाती होता है, पूरे क्षेत्र का नहीं, जो आश्चर्यजनक है।

305
00:20:04,960 --> 00:20:09,326
अब एक बार जब आप समझ जाते हैं कि क्या हो रहा है, तो इसे कार्य करते हुए देखना, इसे

306
00:20:09,326 --> 00:20:13,800
कुछ फ़ंक्शन देना और इसे शून्य की खोज करने देना अजीब रूप से मंत्रमुग्ध करने वाला है।

307
00:20:13,800 --> 00:20:17,149
जैसा कि मैंने पहले कहा, सम्मिश्र संख्याएँ द्वि-आयामी होती हैं,

308
00:20:17,149 --> 00:20:20,340
तो आइए इसे सम्मिश्र संख्याओं वाले कुछ समीकरणों पर लागू करें।

309
00:20:20,340 --> 00:20:24,294
उदाहरण के लिए, यहां जटिल तल पर फ़ंक्शन x के शून्य से

310
00:20:24,294 --> 00:20:28,920
पांचवें शून्य x शून्य से एक तक का पता लगाने वाला एल्गोरिदम है।

311
00:20:28,920 --> 00:20:32,235
इसकी शुरुआत उद्गम के आसपास के एक बहुत बड़े क्षेत्र पर विचार

312
00:20:32,235 --> 00:20:35,440
करके हुई, जो अंततः 5 की घुमावदार संख्या के साथ समाप्त हुई।

313
00:20:35,440 --> 00:20:39,208
हर बार जब आपको गैर-शून्य वाइंडिंग संख्या वाला एक लूप मिलता है, तो आप इसे आधे

314
00:20:39,208 --> 00:20:42,880
में विभाजित करते हैं, और दो छोटे लूपों की वाइंडिंग संख्या का पता लगाते हैं।

315
00:20:42,880 --> 00:20:46,579
उनमें से किसी एक या दोनों में गैर-शून्य वाइंडिंग नंबर होने की गारंटी

316
00:20:46,579 --> 00:20:50,439
है, और जब आप इसे देखते हैं, तो आप जानते हैं कि उस छोटे लूप के अंदर कहीं

317
00:20:50,439 --> 00:20:54,300
शून्य है, इसलिए आप उसी तरह से आगे बढ़ते रहें, छोटी जगह की खोज करते रहें।

318
00:20:54,300 --> 00:20:58,860
यदि हम जिस पथ पर गणना कर रहे हैं वह शून्य पर ठोकर खाता है, जो वास्तव में इस उदाहरण के लिए

319
00:20:58,860 --> 00:21:03,420
यहां दाहिने आधे हिस्से में एक बार हुआ था, तो हम एक क्षेत्र की खोज करना भी बंद कर देते हैं।

320
00:21:03,420 --> 00:21:06,449
वे दुर्लभ घटनाएँ घुमावदार संख्याओं की गणना करने की हमारी

321
00:21:06,449 --> 00:21:09,320
क्षमता में बाधा डालती हैं, लेकिन अरे, हमें शून्य मिला।

322
00:21:09,320 --> 00:21:11,556
और जहां तक उन लूपों की बात है जिनकी वाइंडिंग संख्या

323
00:21:11,556 --> 00:21:13,320
शून्य है, तो आप उन्हें आगे नहीं तलाशेंगे।

324
00:21:13,320 --> 00:21:15,839
हो सकता है कि उनके अंदर कोई समाधान हो, हो सकता

325
00:21:15,839 --> 00:21:18,520
है कि उनके पास न हो, हमारे पास कोई गारंटी नहीं है।

326
00:21:18,520 --> 00:21:22,366
और हमारे समीकरण सॉल्वर को इसी तरह से जारी रखने से, यह अंततः

327
00:21:22,366 --> 00:21:26,020
इस बहुपद के लिए बहुत सारे शून्य में परिवर्तित हो जाता है।

328
00:21:26,020 --> 00:21:31,660
वैसे, यह कोई संयोग नहीं है कि इस उदाहरण में कुल वाइंडिंग संख्या 5 थी।

329
00:21:31,660 --> 00:21:38,195
जटिल संख्याओं के साथ, x से n तक का ऑपरेशन सीधे आउटपुट के मूल के चारों ओर

330
00:21:38,195 --> 00:21:45,000
n बार घूमने से मेल खाता है जैसे आप इनपुट के मूल के चारों ओर एक बार चलते हैं।

331
00:21:45,000 --> 00:21:48,885
इसलिए बहुपद के साथ, पर्याप्त बड़े इनपुट के लिए, अग्रणी

332
00:21:48,885 --> 00:21:52,700
पद के अलावा प्रत्येक पद तुलना में महत्वहीन हो जाता है।

333
00:21:52,700 --> 00:21:56,559
तो कोई भी जटिल बहुपद जिसका अग्रणी पद x से n है, में एक

334
00:21:56,559 --> 00:22:00,700
बड़े पर्याप्त लूप के चारों ओर n की घुमावदार संख्या होती है।

335
00:22:00,700 --> 00:22:04,318
और इस तरह, हमारी घुमावदार संख्या तकनीक वास्तव में गारंटी

336
00:22:04,318 --> 00:22:07,620
देती है कि प्रत्येक जटिल बहुपद में एक शून्य होता है।

337
00:22:07,620 --> 00:22:13,880
यह इतना महत्वपूर्ण तथ्य है कि गणितज्ञ इसे बीजगणित का मूलभूत प्रमेय कहते हैं।

338
00:22:13,880 --> 00:22:17,929
इस तरह के समीकरणों के संख्यात्मक समाधान खोजने के लिए एक एल्गोरिदम का होना

339
00:22:17,929 --> 00:22:22,088
बेहद व्यावहारिक है, लेकिन बीजगणित का मौलिक प्रमेय इस बात का एक अच्छा उदाहरण

340
00:22:22,088 --> 00:22:26,246
है कि ये घुमावदार संख्याएं सैद्धांतिक स्तर पर भी काफी उपयोगी हैं, जो व्यापक

341
00:22:26,246 --> 00:22:30,405
वर्ग के लिए समाधान के अस्तित्व की गारंटी देती हैं। उपयुक्त स्थितियों के लिए

342
00:22:30,405 --> 00:22:34,400
समीकरण, जो गणितज्ञों द्वारा सोचने से कहीं अधिक पसंद की जाने वाली चीज़ है।

343
00:22:34,400 --> 00:22:39,419
मैं आपको एक अनुवर्ती वीडियो में टोपोलॉजी के संदर्भ में इसके कुछ और अद्भुत अनुप्रयोग

344
00:22:39,419 --> 00:22:44,080
दिखाऊंगा, जिसमें एक पुराने 3ब्लू1ब्राउन वीडियो से एक गलती को सुधारना शामिल है।

345
00:22:44,080 --> 00:22:45,080
कौन सा?

346
00:22:45,080 --> 00:22:48,606
खैर, इस चैनल पर सभी वीडियो, सब कुछ देखें और देखें

347
00:22:48,606 --> 00:22:51,640
कि क्या आप पहले त्रुटि का पता लगा सकते हैं।

348
00:22:51,640 --> 00:22:55,960
इस वीडियो के प्राथमिक लेखक 3ब्लू1ब्राउन टीम के नवीनतम सदस्यों में से एक, श्रीधर रमेश हैं।

