1
00:00:00,000 --> 00:00:06,720
यहां दो चीजें हैं, मुख्य विषय और मेटा विषय।

2
00:00:06,720 --> 00:00:10,440
मुख्य विषय द्वि-आयामी समीकरणों को हल करने के लिए यह वास्तव में साफ

3
00:00:10,440 --> 00:00:14,900
एल्गोरिथ्म होने जा रहा है, ऐसी चीजें जिनमें दो अज्ञात वास्तविक संख्याएं हैं,

4
00:00:14,900 --> 00:00:17,420
या वे भी जिनमें एक अज्ञात शामिल है जो एक जटिल संख्या है।

5
00:00:17,420 --> 00:00:21,840
उदाहरण के लिए, यदि आप किसी बहुपद की जटिल जड़ें खोजना

6
00:00:21,840 --> 00:00:25,960
चाहते हैं, या शायद रीमैन ज़ेटा फ़ंक्शन के उन मिलियन डॉलर

7
00:00:25,960 --> 00:00:26,960
शून्यों में से कुछ, तो यह एल्गोरिदम आपके लिए यह करेगा।

8
00:00:27,000 --> 00:00:30,520
और यह विधि अत्यंत सुंदर है, क्योंकि इसमें बहुत सारे रंग शामिल हैं।

9
00:00:30,520 --> 00:00:34,960
और इससे भी महत्वपूर्ण बात यह है कि मूल अंतर्निहित विचार समीकरणों को हल करने

10
00:00:34,960 --> 00:00:39,600
के लिए इस एल्गोरिदम से परे सभी प्रकार के गणित पर लागू होता है,

11
00:00:39,600 --> 00:00:40,600
जिसमें कुछ टोपोलॉजी भी शामिल है, जिसके बारे में मैं बाद में बात करूंगा।

12
00:00:40,600 --> 00:00:44,880
लेकिन वास्तव में जो चीज़ इसे आपके 20 मिनट या उसके आसपास के समय के लायक बनाती है, वह

13
00:00:44,880 --> 00:00:50,000
यह है कि यह पूरे गणित में अधिक सामान्यतः उपयोगी एक पाठ को चित्रित करता है, जो उन

14
00:00:50,000 --> 00:00:52,120
संरचनाओं को परिभाषित करने का प्रयास करता है जो एक-दूसरे के साथ अच्छी तरह से मेल खाते हैं।

15
00:00:52,120 --> 00:00:55,460
जैसे-जैसे कहानी आगे बढ़ेगी आप देखेंगे कि मेरा इससे क्या मतलब है।

16
00:00:55,460 --> 00:00:59,460
2डी इनपुट और 2डी आउटपुट वाले फ़ंक्शंस के साथ मामले को प्रेरित करने के लिए, आइए सरलता से शुरुआत

17
00:00:59,460 --> 00:01:05,100
करें, ऐसे फ़ंक्शंस के साथ जो केवल एक वास्तविक संख्या लेते हैं और एक वास्तविक संख्या निकालते हैं।

18
00:01:05,100 --> 00:01:10,060
यदि आप जानना चाहते हैं कि कब x का फ़ंक्शन f, x के किसी अन्य फ़ंक्शन g के बराबर होता है, तो

19
00:01:10,060 --> 00:01:14,260
आप इसे उस खोज के रूप में सोच सकते हैं जब उन फ़ंक्शन के ग्राफ़ एक दूसरे को काटते हैं, है ना?

20
00:01:14,260 --> 00:01:19,340
मेरा मतलब है, यह आपको एक इनपुट देता है जहां दोनों फ़ंक्शंस का आउटपुट समान होता है।

21
00:01:19,340 --> 00:01:24,520
एक बहुत ही सरल उदाहरण लेने के लिए, कल्पना करें कि x का

22
00:01:24,520 --> 00:01:25,520
f, x का वर्ग है, और x का g अचर फलन 2 है।

23
00:01:25,520 --> 00:01:29,620
दूसरे शब्दों में, आप 2 का वर्गमूल ज्ञात करना चाहते हैं।

24
00:01:29,620 --> 00:01:33,620
यहां तक कि अगर आप वर्गमूल खोजने के बारे में लगभग कुछ भी नहीं जानते हैं, तो आप

25
00:01:33,620 --> 00:01:39,260
शायद देख सकते हैं कि 1 वर्ग 2 से कम है, और 2 वर्ग 2 से बड़ा

26
00:01:39,260 --> 00:01:42,640
है, तो आप महसूस करते हैं, आह, उन दो मानों के बीच कुछ समाधान होने वाला है।

27
00:01:42,640 --> 00:01:46,740
और फिर यदि आप इसे और कम करना चाहते हैं, तो शायद आप आधे बिंदु

28
00:01:46,740 --> 00:01:47,740
का वर्ग करने का प्रयास करें, 1. 5.

29
00:01:47,740 --> 00:01:53,060
यह 2 निकला. 25, थोड़ा ज़्यादा, इसलिए आप 1 और 1 के बीच

30
00:01:53,060 --> 00:01:54,940
के क्षेत्र पर ध्यान केंद्रित करेंगे। 5.

31
00:01:54,940 --> 00:01:58,560
और इसी तरह, आप शायद देख सकते हैं कि यह कैसे चलता रहेगा, आप मध्यबिंदु

32
00:01:58,560 --> 00:02:05,540
पर गणना करते रहेंगे और फिर अपने खोज स्थान को आधे में काट देंगे।

33
00:02:05,540 --> 00:02:08,340
इसके बारे में सोचने का एक और तरीका, जो उच्च आयामों तक पहुंचने

34
00:02:08,340 --> 00:02:13,560
के बाद हमारे लिए इसे आसान बना देगा, इसके बजाय समतुल्य प्रश्न पर

35
00:02:13,560 --> 00:02:16,300
ध्यान केंद्रित करना होगा जब इन दो कार्यों के बीच अंतर शून्य हो।

36
00:02:16,380 --> 00:02:20,700
उन शब्दों में, हमें इनपुट का एक क्षेत्र मिला जहां वह अंतर

37
00:02:20,700 --> 00:02:24,020
एक छोर पर नकारात्मक था, और दूसरे छोर पर यह सकारात्मक था।

38
00:02:24,020 --> 00:02:28,660
हमने इसे दो भागों में विभाजित किया, और जिस आधे हिस्से पर हमने अपना

39
00:02:28,660 --> 00:02:31,600
ध्यान केंद्रित किया वह वह था जहां सबसे बाहरी बिंदुओं पर अलग-अलग संकेत थे।

40
00:02:31,600 --> 00:02:36,020
इस तरह, हम हमेशा के लिए चलते रहने में सक्षम थे, सीमा पर अलग-अलग संकेतों के साथ

41
00:02:36,020 --> 00:02:41,320
प्रत्येक क्षेत्र को लेते हुए, उसके हिस्सों के बीच एक छोटा सा क्षेत्र ढूंढते हुए, यह जानते

42
00:02:41,320 --> 00:02:46,260
हुए कि अंततः हमें एक ऐसे बिंदु पर सीमित होना है जो बिल्कुल शून्य होने वाला है।

43
00:02:46,260 --> 00:02:50,480
संक्षेप में, समीकरणों को हल करना हमेशा यह पता लगाने के रूप में तैयार किया जा सकता है कि एक

44
00:02:50,480 --> 00:02:55,780
निश्चित फ़ंक्शन शून्य के बराबर है, और ऐसा करने के लिए, हमारे पास यह अनुमान है, यदि एफ एक

45
00:02:55,780 --> 00:03:00,420
बिंदु पर सकारात्मक है और दूसरे बिंदु पर नकारात्मक है, तो आप बीच में कोई जगह ढूंढ सकते हैं जहां

46
00:03:00,420 --> 00:03:03,980
यह शून्य है, कम से कम अगर सब कुछ बिना किसी अचानक उछाल के सुचारू रूप से बदलता है।

47
00:03:03,980 --> 00:03:08,060
जो आश्चर्यजनक बात मैं आपको दिखाना चाहता हूं वह यह है कि आप

48
00:03:08,060 --> 00:03:13,220
इस तरह की सोच को दो-आयामी समीकरणों में विस्तारित कर सकते हैं,

49
00:03:13,220 --> 00:03:14,940
उन कार्यों के बीच समीकरण जिनके इनपुट और आउटपुट दोनों द्वि-आयामी हैं।

50
00:03:14,940 --> 00:03:19,540
उदाहरण के लिए, जटिल संख्याएँ 2डी हैं, और यह उपकरण जो हम विकसित कर

51
00:03:19,540 --> 00:03:21,780
रहे हैं वह जटिल समीकरणों का समाधान खोजने के लिए एकदम सही है।

52
00:03:21,780 --> 00:03:25,700
अब, चूँकि हम इन 2डी फ़ंक्शंस के बारे में इतनी बात करने जा रहे हैं,

53
00:03:25,700 --> 00:03:29,380
आइए एक संक्षिप्त कदम उठाएं और विचार करें कि हम इन्हें कैसे चित्रित करते हैं।

54
00:03:29,380 --> 00:03:34,700
2डी इनपुट और 2डी आउटपुट के साथ एक फ़ंक्शन को ग्राफ़ करने के लिए चार

55
00:03:34,700 --> 00:03:39,220
आयामों की आवश्यकता होगी, और यह हमारी 2डी स्क्रीन पर 3डी दुनिया में इतनी अच्छी

56
00:03:39,220 --> 00:03:41,140
तरह से काम नहीं करेगा, लेकिन हमारे पास अभी भी कुछ अच्छे विकल्प हैं।

57
00:03:41,140 --> 00:03:46,020
एक तो इनपुट स्पेस और आउटपुट स्पेस दोनों को एक साथ देखना है।

58
00:03:46,020 --> 00:03:51,540
इनपुट स्पेस में प्रत्येक बिंदु आउटपुट स्पेस में एक विशेष बिंदु पर जाता है, और मैं दिखा सकता हूं

59
00:03:51,540 --> 00:03:57,060
कि उस इनपुट बिंदु के चारों ओर घूमना आउटपुट स्पेस में कुछ आंदोलनों से कैसे मेल खाता है।

60
00:03:57,060 --> 00:04:01,460
जिन सभी कार्यों पर हम विचार कर रहे हैं वे निरंतर होंगे, इस

61
00:04:01,460 --> 00:04:05,820
अर्थ में कि इनपुट में छोटे छोटे बदलाव केवल आउटपुट में छोटे

62
00:04:05,820 --> 00:04:07,460
छोटे बदलावों के अनुरूप होते हैं, कोई अचानक उछाल नहीं होता है।

63
00:04:07,460 --> 00:04:12,020
हमारे पास एक अन्य विकल्प यह है कि हम आउटपुट स्पेस के मूल से उस आउटपुट बिंदु

64
00:04:12,020 --> 00:04:17,380
तक तीर की कल्पना करें, और उस तीर का एक लघु संस्करण इनपुट बिंदु पर संलग्न करें।

65
00:04:17,380 --> 00:04:22,340
यह हमें एक नज़र में यह समझ दे सकता है कि एक दिया गया इनपुट बिंदु कहाँ

66
00:04:22,340 --> 00:04:27,580
जाता है, या पूर्ण वेक्टर फ़ील्ड को चित्रित करके कई अलग-अलग इनपुट बिंदु कहाँ जाते हैं।

67
00:04:27,580 --> 00:04:30,740
और दुर्भाग्य से जब आप कई बिंदुओं पर ऐसा करते हैं तो यह काफी अव्यवस्थित हो

68
00:04:30,740 --> 00:04:34,340
सकता है, इसलिए यहां मैं सभी तीरों को एक ही आकार का बनाता हूं, और इसका

69
00:04:34,340 --> 00:04:37,900
मतलब यह है कि हम प्रत्येक आउटपुट बिंदु की दिशा का अंदाजा लगा सकते हैं।

70
00:04:37,900 --> 00:04:41,660
लेकिन शायद द्वि-आयामी कार्यों को चित्रित करने का सबसे सुंदर तरीका, और जिसका हम इस वीडियो में सबसे

71
00:04:41,660 --> 00:04:47,400
अधिक उपयोग करेंगे, वह उस आउटपुट स्पेस में प्रत्येक बिंदु को एक रंग के साथ जोड़ना है।

72
00:04:47,400 --> 00:04:52,180
यहां हमने रंगों का उपयोग किया है, अर्थात जहां रंग इंद्रधनुष या रंग चक्र के

73
00:04:52,180 --> 00:04:57,020
साथ गिरता है, मूल से दूर की दिशा के अनुरूप, और हम मूल से

74
00:04:57,020 --> 00:05:00,060
दूरी के अनुरूप करने के लिए अंधेरे या चमक का उपयोग कर रहे हैं।

75
00:05:00,060 --> 00:05:05,720
उदाहरण के लिए, आउटपुट की इस श्रृंखला पर ध्यान केंद्रित करते हुए, ये सभी बिंदु लाल हैं, लेकिन

76
00:05:05,720 --> 00:05:10,340
जो मूल के करीब हैं वे थोड़े गहरे हैं, और जो दूर हैं वे थोड़े चमकीले हैं।

77
00:05:10,340 --> 00:05:15,360
और आउटपुट की इस श्रृंखला पर ध्यान केंद्रित करते हुए, सभी बिंदु हरे हैं,

78
00:05:15,360 --> 00:05:18,980
और फिर, मूल के करीब का मतलब गहरा है, दूर का मतलब हल्का है।

79
00:05:18,980 --> 00:05:24,300
और इसी तरह, हम यहां केवल प्रत्येक दिशा को एक विशिष्ट

80
00:05:24,300 --> 00:05:25,300
रंग निर्दिष्ट कर रहे हैं, सब कुछ लगातार बदल रहा है।

81
00:05:25,300 --> 00:05:29,100
आप देख सकते हैं कि यहां अंधेरे और चमक का अंतर बहुत

82
00:05:29,140 --> 00:05:33,940
सूक्ष्म है, लेकिन इस वीडियो के लिए, हम केवल आउटपुट की

83
00:05:33,940 --> 00:05:35,300
दिशा की परवाह करते हैं, परिमाण, रंग या चमक की नहीं।

84
00:05:35,300 --> 00:05:39,160
चमक के बारे में आपके लिए ध्यान देने योग्य एक महत्वपूर्ण बात यह है कि मूल

85
00:05:39,160 --> 00:05:44,440
के निकट, जिसकी कोई विशेष दिशा नहीं होती, सभी रंग फीके पड़कर काले हो जाते हैं।

86
00:05:44,440 --> 00:05:48,820
तो फ़ंक्शंस के बारे में सोचने के लिए, अब जब हमने प्रत्येक आउटपुट के लिए एक रंग

87
00:05:48,820 --> 00:05:54,020
तय कर लिया है, तो हम इनपुट स्पेस में प्रत्येक बिंदु को उस बिंदु के रंग के

88
00:05:54,020 --> 00:05:57,860
आधार पर रंगकर 2डी फ़ंक्शंस की कल्पना कर सकते हैं जहां यह आउटपुट स्पेस में आता है।

89
00:05:57,860 --> 00:06:02,340
मुझे उस इनपुट स्पेस से कई अलग-अलग बिंदुओं की कल्पना करना पसंद है, जो आउटपुट स्पेस में उनके

90
00:06:02,340 --> 00:06:06,340
संबंधित आउटपुट पर कूदते हैं, फिर उस बिंदु के रंग के आधार पर चित्रित होते हैं जहां

91
00:06:06,340 --> 00:06:11,820
वे उतरते हैं, और फिर इनपुट स्पेस में जहां से वे आए थे, वहां वापस कूदते हैं।

92
00:06:11,820 --> 00:06:15,700
इनपुट स्पेस में प्रत्येक बिंदु के लिए ऐसा करते हुए, आप उस इनपुट स्पेस को

93
00:06:15,700 --> 00:06:19,140
देखकर यह समझ सकते हैं कि फ़ंक्शन प्रत्येक बिंदु को कहां ले जाता है।

94
00:06:19,140 --> 00:06:23,880
उदाहरण के लिए, बाईं ओर गुलाबी बिंदुओं की यह पट्टी हमें बताती है कि वे सभी बिंदु गुलाबी

95
00:06:23,920 --> 00:06:30,000
दिशा में कहीं मैप किए जाते हैं, जो कि आउटपुट स्पेस के निचले बाएँ भाग में है।

96
00:06:30,000 --> 00:06:34,120
इसके अलावा वे तीन बिंदु जो काले हैं और उनके चारों

97
00:06:34,120 --> 00:06:37,120
ओर बहुत सारे रंग हैं, वे शून्य पर जाते हैं।

98
00:06:37,120 --> 00:06:46,120
ठीक है, तो 1डी मामले की तरह, 2डी फ़ंक्शन के समीकरणों को हल करने को हमेशा

99
00:06:46,120 --> 00:06:49,780
यह पूछकर दोबारा तैयार किया जा सकता है कि कोई निश्चित फ़ंक्शन शून्य के बराबर है।

100
00:06:49,780 --> 00:06:54,820
तो अभी हमारी चुनौती यही है, एक एल्गोरिदम बनाएं जो यह पता लगाए कि

101
00:06:54,820 --> 00:07:00,900
किसी दिए गए 2डी फ़ंक्शन के कौन से इनपुट बिंदु शून्य पर जाते हैं।

102
00:07:00,900 --> 00:07:04,560
आप यह बता सकते हैं कि यदि आप उन काले बिंदुओं को देखकर इस तरह के रंगीन मानचित्र

103
00:07:04,560 --> 00:07:08,700
को देख रहे हैं, तो आप पहले से ही जानते हैं कि फ़ंक्शन के शून्य कहाँ हैं।

104
00:07:08,700 --> 00:07:11,460
तो क्या वह मायने रखता है?

105
00:07:11,460 --> 00:07:15,100
ध्यान रखें कि इस तरह का आरेख बनाने के लिए, हमने कंप्यूटर को समतल पर सभी

106
00:07:15,100 --> 00:07:21,020
पिक्सेल पर फ़ंक्शन की गणना करने के लिए कहा है, लेकिन हमारा लक्ष्य एक अधिक

107
00:07:21,020 --> 00:07:25,380
कुशल एल्गोरिदम ढूंढना है जिसके लिए केवल यथासंभव कुछ बिंदुओं पर फ़ंक्शन की गणना करने की

108
00:07:25,380 --> 00:07:29,600
आवश्यकता होती है , ऐसा कहने के लिए, केवल रंगों का एक सीमित दृष्टिकोण है।

109
00:07:29,600 --> 00:07:33,940
और अधिक सैद्धांतिक दृष्टिकोण से भी, एक सामान्य निर्माण करना अच्छा होगा जो हमें किसी

110
00:07:33,940 --> 00:07:38,300
दिए गए क्षेत्र के अंदर शून्य मौजूद है या नहीं, इसकी शर्तें बताता है।

111
00:07:38,300 --> 00:07:43,700
याद रखें, एक आयाम में मुख्य अंतर्दृष्टि यह थी कि यदि एक सतत कार्य एक बिंदु

112
00:07:43,700 --> 00:07:48,920
पर सकारात्मक है और दूसरे पर नकारात्मक है, तो बीच में कहीं यह शून्य होना चाहिए।

113
00:07:48,920 --> 00:07:50,960
तो हम इसे दो आयामों में कैसे विस्तारित करें?

114
00:07:50,960 --> 00:07:55,180
हमें संकेतों के बारे में बात करने के लिए किसी प्रकार के एनालॉग की आवश्यकता है।

115
00:07:55,180 --> 00:07:59,140
संकेत क्या हैं, इसके बारे में सोचने का एक तरीका दिशाएँ हैं।

116
00:07:59,140 --> 00:08:02,620
सकारात्मक का मतलब है कि आप संख्या रेखा के साथ दाईं ओर इशारा कर रहे

117
00:08:02,620 --> 00:08:04,240
हैं, और नकारात्मक का मतलब है कि आप बाईं ओर इशारा कर रहे हैं।

118
00:08:04,240 --> 00:08:08,800
द्वि-आयामी मात्राओं की भी दिशा होती है, लेकिन उनके लिए विकल्प बहुत व्यापक होते

119
00:08:08,800 --> 00:08:12,780
हैं, वे संभावनाओं के पूरे चक्र में कहीं भी इंगित कर सकते हैं।

120
00:08:12,780 --> 00:08:16,860
तो उसी तरह जैसे एक आयाम में हम पूछ रहे थे कि क्या कोई दिया गया

121
00:08:16,860 --> 00:08:22,860
फ़ंक्शन किसी सीमा की सीमा पर सकारात्मक या नकारात्मक है, जो कि केवल दो बिंदु हैं,

122
00:08:22,860 --> 00:08:28,200
2d फ़ंक्शन के लिए हम एक क्षेत्र की सीमा को देखने जा रहे हैं, जो एक

123
00:08:28,200 --> 00:08:33,760
लूप है, और उस सीमा के साथ फ़ंक्शन के आउटपुट की दिशा के बारे में पूछें।

124
00:08:33,760 --> 00:08:39,220
उदाहरण के लिए, हम देखते हैं कि इस शून्य के चारों ओर इस लूप

125
00:08:39,220 --> 00:08:43,460
के साथ, आउटपुट हर संभव दिशा से गुजरता है, इंद्रधनुष के सभी रंग,

126
00:08:43,460 --> 00:08:45,820
लाल, पीला, हरा, नीला, वापस लाल और रास्ते में बीच में सब कुछ।

127
00:08:45,820 --> 00:08:50,640
लेकिन यहां इस लूप के साथ, इसके अंदर कोई शून्य नहीं होने के कारण, आउटपुट हर रंग के माध्यम से नहीं

128
00:08:50,640 --> 00:08:55,420
जाता है, यह कुछ नारंगी रंगों के माध्यम से जाता है, लेकिन कभी भी हरा या नीला नहीं होता है।

129
00:08:55,420 --> 00:08:59,320
और यह आशाजनक है, ऐसा लगता है कि चीजें एक आयाम में कैसे काम करती हैं।

130
00:08:59,320 --> 00:09:03,540
शायद उसी तरह से यदि एक 1d फ़ंक्शन 1d क्षेत्र की सीमा पर दोनों संभावित संकेत

131
00:09:03,540 --> 00:09:09,700
लेता है, तो अंदर कहीं शून्य था, हम परिकल्पना कर सकते हैं कि यदि एक

132
00:09:09,700 --> 00:09:15,140
2d फ़ंक्शन सभी संभावित दिशाओं, सभी संभावित रंगों के आउटपुट को हिट करता है किसी

133
00:09:15,140 --> 00:09:20,980
2d क्षेत्र की सीमा, तो उस क्षेत्र के अंदर कहीं इसे शून्य पर जाना होगा।

134
00:09:20,980 --> 00:09:25,100
तो यह हमारा अनुमान है, और एक क्षण रुककर सोचें कि

135
00:09:25,100 --> 00:09:27,660
क्या यह सच होना चाहिए, और यदि हां तो क्यों।

136
00:09:27,660 --> 00:09:32,020
यदि हम किसी इनपुट बिंदु के चारों ओर एक छोटे लूप के बारे में सोचना शुरू करते हैं, तो हम जानते

137
00:09:32,020 --> 00:09:36,660
हैं कि चूंकि सब कुछ निरंतर है, हमारा फ़ंक्शन इसे संबंधित आउटपुट के पास कुछ छोटे लूप में ले जाता है।

138
00:09:36,660 --> 00:09:41,140
लेकिन देखिए, अधिकांश छोटे लूपों के लिए, आउटपुट रंग में भिन्न होता है।

139
00:09:41,140 --> 00:09:46,300
यदि आप शून्य के अलावा कोई आउटपुट बिंदु चुनते हैं, और उसके पास एक पर्याप्त तंग

140
00:09:46,300 --> 00:09:49,860
लूप बनाते हैं, तो लूप के सभी रंग उस बिंदु के समान रंग के होंगे।

141
00:09:49,860 --> 00:09:55,980
यहाँ पर एक तंग लूप पूरी तरह से नीला है, यहाँ पर एक तंग लूप

142
00:09:55,980 --> 00:09:58,440
पूरी तरह से पीला है, आपको निश्चित रूप से इंद्रधनुष के हर रंग नहीं मिलेंगे।

143
00:09:58,440 --> 00:10:03,580
एकमात्र बिंदु जहां आप सभी रंग प्राप्त करते हुए भी इसके चारों

144
00:10:03,580 --> 00:10:07,120
ओर लूप कस सकते हैं वह रंगहीन मूल, शून्य ही है।

145
00:10:07,120 --> 00:10:11,680
तो वास्तव में यह मामला है कि यदि आपके पास इंद्रधनुष के हर रंग के

146
00:10:11,680 --> 00:10:15,960
माध्यम से लूप चल रहे हैं, कस रहे हैं और कस रहे हैं, एक

147
00:10:15,960 --> 00:10:17,360
बिंदु पर संकीर्ण हो रहे हैं, तो वह बिंदु वास्तव में शून्य होना चाहिए।

148
00:10:17,360 --> 00:10:22,360
और इसलिए आइए हमारे एक-आयामी समीकरण सॉल्वर की तरह एक 2डी समीकरण सॉल्वर स्थापित करें।

149
00:10:22,360 --> 00:10:27,200
जब हमें एक बड़ा क्षेत्र मिले जिसकी सीमा हर रंग से होकर गुजरती है, तो इसे

150
00:10:27,200 --> 00:10:30,640
दो भागों में विभाजित करें, और फिर प्रत्येक आधे हिस्से की सीमा पर रंगों को देखें।

151
00:10:30,640 --> 00:10:34,920
यहां दिखाए गए उदाहरण में, बाएं आधे हिस्से की सीमा सभी रंगों से नहीं गुजरती है,

152
00:10:34,920 --> 00:10:39,080
उदाहरण के लिए, नारंगी पीले रंग की दिशाओं को मैप करने वाला कोई बिंदु नहीं है।

153
00:10:39,080 --> 00:10:43,480
इसलिए मैं यह कहने के तरीके के रूप में इस क्षेत्र को धुंधला कर दूंगा कि हम इसे और अधिक खोजना नहीं चाहते हैं।

154
00:10:43,480 --> 00:10:47,840
दाहिना आधा भाग सभी रंगों से गुजरता है, हरे रंग की दिशा में बहुत समय

155
00:10:47,840 --> 00:10:51,120
बिताता है, फिर पीले नारंगी लाल, साथ ही नीले बैंगनी गुलाबी से गुजरता है।

156
00:10:51,120 --> 00:10:56,060
अब याद रखें, इसका मतलब यह है कि इस सीमा के

157
00:10:56,060 --> 00:10:57,800
बिंदु सभी संभावित दिशाओं के आउटपुट पर मैप हो जाते हैं।

158
00:10:57,800 --> 00:11:02,900
इसलिए हम इसे आगे खोजेंगे, फिर से उप-विभाजित करेंगे और प्रत्येक क्षेत्र के लिए सीमा की जाँच करेंगे।

159
00:11:02,900 --> 00:11:07,000
शीर्ष की सीमा पूरी तरह हरी है, इसलिए हम वहां खोजना बंद कर देंगे।

160
00:11:07,000 --> 00:11:10,500
लेकिन निचला भाग इतना रंगीन है कि इसे उपविभाजित किया जा सकता है।

161
00:11:10,500 --> 00:11:12,420
और ऐसे ही आगे बढ़ते रहो.

162
00:11:12,420 --> 00:11:16,860
जांचें कि किस उपक्षेत्र की सीमा सभी संभावित रंगों को कवर करती है, जिसका अर्थ

163
00:11:16,860 --> 00:11:21,280
है कि उस सीमा के बिंदु सभी संभावित दिशाओं में मैप किए जाते हैं,

164
00:11:21,280 --> 00:11:25,400
और उन क्षेत्रों को आधे में काटते रहें जैसे हमने एक-आयामी मामले के लिए किया

165
00:11:25,400 --> 00:11:29,320
था, अंततः हमें फ़ंक्शन पर शून्य पर ले जाया गया- ओह, एक सेकंड रुको.

166
00:11:29,320 --> 00:11:30,320
यहां क्या हुआ?

167
00:11:30,320 --> 00:11:34,520
नीचे दाईं ओर के अंतिम उपविभाजनों में से कोई भी सभी रंगों से

168
00:11:34,520 --> 00:11:38,160
होकर नहीं गुजरा, इसलिए हमारा एल्गोरिदम रुक गया क्योंकि वह उनमें से किसी

169
00:11:38,160 --> 00:11:41,160
को भी खोजना नहीं चाहता था, लेकिन उसे शून्य भी नहीं मिला।

170
00:11:41,160 --> 00:11:43,720
ठीक है, यहाँ स्पष्ट रूप से कुछ गड़बड़ है।

171
00:11:43,720 --> 00:11:46,680
और यह ठीक है, गलत होना गणित करने का एक नियमित हिस्सा है।

172
00:11:46,680 --> 00:11:51,400
यदि हम पीछे मुड़कर देखें, तो हमारे पास यह परिकल्पना थी, और यह हमें

173
00:11:51,400 --> 00:11:53,680
इस प्रस्तावित एल्गोरिदम तक ले गई, इसलिए हम कहीं न कहीं गलत थे।

174
00:11:53,680 --> 00:11:56,860
और गणित में अच्छा होना पहली बार में सही होने के बारे में

175
00:11:56,860 --> 00:12:00,920
नहीं है, यह ध्यान से पीछे देखने और गलतियों को समझने और उन्हें

176
00:12:00,920 --> 00:12:02,520
ठीक करने के तरीके को समझने के लचीलेपन के बारे में है।

177
00:12:02,520 --> 00:12:06,760
अब यहाँ समस्या यह है कि हमारे पास एक ऐसा क्षेत्र था जिसकी सीमा हर रंग से होकर गुजरती थी,

178
00:12:06,760 --> 00:12:11,260
लेकिन जब हमने इसे बीच में विभाजित किया, तो किसी भी उपक्षेत्र की सीमा हर रंग से नहीं गुज़री,

179
00:12:11,260 --> 00:12:14,880
हमारे पास कोई विकल्प नहीं था कि आगे कहाँ खोज करते रहें, और इसने शून्य को तोड़ दिया खोजक.

180
00:12:15,280 --> 00:12:18,120
अब एक आयाम में, इस तरह की चीज़ कभी नहीं हुई।

181
00:12:18,120 --> 00:12:22,960
किसी भी समय आपके पास एक अंतराल होता है जिसके समापन बिंदुओं पर अलग-अलग संकेत

182
00:12:22,960 --> 00:12:28,200
होते हैं, यदि आप इसे विभाजित करते हैं, तो आप जानते हैं कि आपको

183
00:12:28,200 --> 00:12:29,200
कुछ उप-अंतराल मिलने की गारंटी है जिसके समापन बिंदुओं पर भी अलग-अलग संकेत हैं।

184
00:12:29,200 --> 00:12:34,120
या दूसरे तरीके से कहें तो, जब भी आपके पास दो अंतराल हों

185
00:12:34,120 --> 00:12:38,280
जिनके समापन बिंदु संकेत नहीं बदलते हैं, यदि आप उन्हें जोड़ते हैं, तो

186
00:12:38,280 --> 00:12:39,280
आपको एक बड़ा अंतराल मिलेगा जिसके समापन बिंदु भी संकेत नहीं बदलते हैं।

187
00:12:39,280 --> 00:12:43,140
लेकिन दो आयामों में, ऐसे दो क्षेत्र ढूंढना संभव है जिनकी सीमाएं

188
00:12:43,140 --> 00:12:48,040
हर रंग से नहीं गुजरती हैं, लेकिन जिनकी सीमाएं मिलकर एक ऐसा

189
00:12:48,040 --> 00:12:49,940
क्षेत्र बनाती हैं जिसकी सीमा हर रंग से होकर गुजरती है।

190
00:12:49,940 --> 00:12:53,740
और इस तरह, हमारा प्रस्तावित शून्य-खोज एल्गोरिदम टूट गया।

191
00:12:53,740 --> 00:12:58,680
वास्तव में, यदि आप इसके बारे में सोचते हैं, तो आप एक बड़ा लूप पा सकते

192
00:12:58,680 --> 00:13:03,120
हैं जिसकी सीमा हर संभव रंग से होकर गुजरती है, इसके अंदर कोई शून्य नहीं है।

193
00:13:03,120 --> 00:13:07,100
अब इसका मतलब यह नहीं है कि हम छोटे लूपों के बारे में अपने दावों में गलत थे जब हमने कहा

194
00:13:07,100 --> 00:13:13,040
था कि हर रंग से गुजरने वाले एक हमेशा के लिए संकीर्ण होने वाले लूप को शून्य पर संकीर्ण होना होगा।

195
00:13:13,040 --> 00:13:17,120
लेकिन जिस चीज़ ने हमारे लिए गड़बड़ी पैदा कर दी वह यह है कि जब आप क्षेत्रों

196
00:13:17,120 --> 00:13:23,040
को जोड़ते हैं तो यह मेरी-सीमा-हर-रंग-या-नहीं संपत्ति को अच्छे, पूर्वानुमानित तरीके से संयोजित नहीं करती है।

197
00:13:23,040 --> 00:13:28,100
लेकिन चिंता न करें, यह पता चला है कि हम इसे एक अधिक परिष्कृत संपत्ति में थोड़ा

198
00:13:28,100 --> 00:13:38,560
संशोधित कर सकते हैं जो हमें वह देने के लिए जोड़ती है जो हम चाहते हैं।

199
00:13:38,560 --> 00:13:42,540
विचार यह है कि केवल यह पूछने के बजाय कि क्या हम लूप के किसी

200
00:13:42,540 --> 00:13:47,100
बिंदु पर कोई रंग पा सकते हैं, आइए अधिक सावधानीपूर्वक नज़र रखें कि जब

201
00:13:47,100 --> 00:13:48,100
हम उस लूप के चारों ओर चलते हैं तो ये रंग कैसे बदलते हैं।

202
00:13:48,100 --> 00:13:50,060
आइए मैं आपको एक उदाहरण से समझाता हूं कि मेरा क्या मतलब है।

203
00:13:50,060 --> 00:13:54,120
हम पर नज़र रखने में मदद के लिए मैं यहां कोने में एक छोटा रंगीन पहिया रखूंगा।

204
00:13:54,120 --> 00:13:58,540
जब इनपुट के पथ पर रंग इंद्रधनुष के माध्यम से एक विशिष्ट

205
00:13:58,540 --> 00:14:04,380
दिशा में चलते हैं, लाल से पीला, पीला से हरा, हरा से

206
00:14:04,380 --> 00:14:05,720
नीला, या नीला से लाल, तो आउटपुट दक्षिणावर्त दिशा में घूमता है।

207
00:14:05,720 --> 00:14:09,980
लेकिन दूसरी ओर, यदि रंग इंद्रधनुष के माध्यम से दूसरे तरीके से चलते हैं, नीले से हरे,

208
00:14:09,980 --> 00:14:17,160
हरे से पीले, पीले से लाल, या लाल से नीले, तो आउटपुट वामावर्त झूल रहा है।

209
00:14:17,160 --> 00:14:22,940
इसलिए यहां इस छोटे रास्ते पर चलते हुए, रंग रंग चक्र के माध्यम से

210
00:14:22,940 --> 00:14:28,340
दक्षिणावर्त दिशा में पांचवां हिस्सा घुमाते हैं, और यहां इस पथ पर चलते

211
00:14:28,340 --> 00:14:30,620
हुए, रंग चक्र के माध्यम से दक्षिणावर्त दिशा में पांचवां हिस्सा घुमाते हैं।

212
00:14:30,620 --> 00:14:35,400
निःसंदेह, इसका मतलब यह है कि यदि आप एक के बाद एक, दोनों रास्तों से

213
00:14:35,400 --> 00:14:39,380
गुजरते हैं, तो रंग दक्षिणावर्त दिशा में कुल मिलाकर दो-पाँचवें भाग में घूमते हैं।

214
00:14:39,380 --> 00:14:43,740
वाइंडिंग की कुल मात्रा बस जुड़ जाती है, और यह महत्वपूर्ण होने जा रही

215
00:14:43,740 --> 00:14:47,140
है, यह एक प्रकार का सीधा संयोजन है जो हमारे लिए उपयोगी होगा।

216
00:14:47,140 --> 00:14:51,980
जब मैं वाइंडिंग की कुल मात्रा कहता हूं, तो मैं चाहता हूं कि आप एक पुराने ज़माने के ओडोमीटर की कल्पना करें जो तीर के दक्षिणावर्त

217
00:14:51,980 --> 00:14:58,700
दिशा में घूमने पर आगे की ओर टिक करता है, लेकिन जब तीर वामावर्त दिशा में घूमता है तो पीछे की ओर टिक जाता है।

218
00:14:58,700 --> 00:15:03,020
इसलिए वामावर्त वाइंडिंग को नकारात्मक क्लॉकवाइज वाइंडिंग के रूप में गिना जाता है।

219
00:15:03,020 --> 00:15:07,460
आउटपुट बहुत अधिक घूम सकते हैं, लेकिन यदि उनमें से कुछ

220
00:15:07,460 --> 00:15:08,940
मोड़ विपरीत दिशा में है, तो यह रद्द हो जाता है।

221
00:15:08,940 --> 00:15:13,220
उदाहरण के लिए, यदि आप इस पथ पर आगे बढ़ते हैं, और फिर उसी पथ पर पीछे

222
00:15:13,220 --> 00:15:18,100
की ओर बढ़ते हैं, तो वाइंडिंग की कुल मात्रा शून्य हो जाती है, पीछे की ओर की

223
00:15:18,100 --> 00:15:23,440
गति वस्तुतः पहले देखे गए रंगों के माध्यम से रिवाइंड होती है, पिछली सभी वाइंडिंग को उलट

224
00:15:23,440 --> 00:15:26,300
देती है, और वापस लौट आती है ओडोमीटर वापस वहीं ले जाएँ जहाँ से शुरू हुआ था।

225
00:15:26,300 --> 00:15:30,480
अपने उद्देश्यों के लिए, हम लूप के साथ-साथ वाइंडिंग को देखने की सबसे अधिक परवाह करेंगे।

226
00:15:30,480 --> 00:15:34,280
उदाहरण के लिए, मान लें कि हम इस पूरे लूप के चारों ओर दक्षिणावर्त घूमते हैं।

227
00:15:34,280 --> 00:15:39,680
आउटपुट में हमें कुल तीन पूर्ण दक्षिणावर्त घुमावों के आसपास हवा का सामना करना पड़ता है, रंग इंद्रधनुष

228
00:15:39,680 --> 00:15:47,120
के माध्यम से घूमते हैं, क्रम में, लाल से फिर से लाल, और फिर से, और फिर से।

229
00:15:47,120 --> 00:15:52,260
गणितज्ञों द्वारा प्रयुक्त शब्दजाल में, हम कहते हैं कि

230
00:15:52,260 --> 00:15:54,100
इस लूप के साथ, कुल वाइंडिंग संख्या 3 है।

231
00:15:54,100 --> 00:15:58,440
अन्य लूपों के लिए, यह कोई अन्य पूर्ण संख्या हो सकती है, शायद बड़ी संख्या हो सकती

232
00:15:58,440 --> 00:16:03,680
है यदि आउटपुट कई बार घूमता है क्योंकि इनपुट एक ही लूप के चारों ओर घूमता है,

233
00:16:03,720 --> 00:16:07,060
या यह एक छोटी संख्या हो सकती है यदि आउटपुट केवल एक या दो बार घूमता है।

234
00:16:07,060 --> 00:16:12,260
या वह वाइंडिंग संख्या एक ऋणात्मक पूर्णांक भी हो सकती है, यदि जब हम लूप

235
00:16:12,260 --> 00:16:15,200
के चारों ओर दक्षिणावर्त चलते हैं तो आउटपुट वामावर्त दिशा में घूम रहा होता है।

236
00:16:15,200 --> 00:16:19,720
लेकिन किसी भी लूप के साथ, वाइंडिंग की यह कुल मात्रा एक पूर्ण संख्या होनी चाहिए।

237
00:16:19,720 --> 00:16:23,980
मेरा मतलब है, जब तक आप वापस वहीं पहुंचेंगे जहां से आपने शुरुआत

238
00:16:23,980 --> 00:16:25,840
की थी, आपके पास वही आउटपुट होगा जिससे आपने शुरुआत की थी।

239
00:16:25,840 --> 00:16:31,520
संयोगवश, यदि पथ में वास्तव में एक बिंदु है जहां आउटपुट बिल्कुल

240
00:16:31,560 --> 00:16:35,640
शून्य है, तो तकनीकी रूप से आप उस पर एक घुमावदार संख्या

241
00:16:35,640 --> 00:16:37,600
परिभाषित नहीं कर सकते, क्योंकि आउटपुट की कोई विशेष दिशा नहीं है।

242
00:16:37,600 --> 00:16:41,740
यह हमारे लिए कोई समस्या नहीं होने वाली है, क्योंकि हमारा पूरा लक्ष्य शून्य ढूंढना

243
00:16:41,740 --> 00:16:45,200
है, इसलिए यदि यह कभी आता है, तो हम जल्दी ही बाहर हो जाएंगे।

244
00:16:45,200 --> 00:16:48,720
इन घुमावदार संख्याओं के बारे में ध्यान देने वाली मुख्य बात यह है कि जब आप

245
00:16:48,720 --> 00:16:55,040
पथों को बड़े पथों में जोड़ते हैं तो वे अच्छी तरह से जुड़ जाते हैं।

246
00:16:55,040 --> 00:16:59,440
लेकिन हम वास्तव में जो चाहते हैं वह यह है कि जब हम बड़े क्षेत्र बनाने के लिए

247
00:16:59,440 --> 00:17:03,120
क्षेत्रों को जोड़ते हैं तो क्षेत्रों की सीमाओं के साथ घुमावदार संख्याएं अच्छी तरह से जुड़ जाएं।

248
00:17:03,120 --> 00:17:06,320
तो क्या हमारे पास वह संपत्ति है?

249
00:17:06,320 --> 00:17:09,600
अच्छा, देख लो.

250
00:17:09,600 --> 00:17:14,760
जैसे ही हम बाईं ओर इस क्षेत्र के चारों ओर दक्षिणावर्त घूमते हैं, घुमावदार

251
00:17:14,760 --> 00:17:17,920
संख्या इन चार रास्तों से आने वाली घुमावदार संख्याओं का योग होती है।

252
00:17:17,920 --> 00:17:21,960
और जब हम दाहिनी ओर इस क्षेत्र के चारों ओर दक्षिणावर्त घूमते हैं

253
00:17:21,960 --> 00:17:25,480
तो इन चार रास्तों से आने वाली घुमावदार संख्याओं का योग होता है।

254
00:17:25,480 --> 00:17:29,840
और जब हम उन दो क्षेत्रों को एक बड़े क्षेत्र में जोड़ते हैं, तो

255
00:17:29,840 --> 00:17:33,760
उनमें से अधिकांश पथ बड़े क्षेत्र की दक्षिणावर्त सीमा का हिस्सा बन जाते हैं।

256
00:17:33,760 --> 00:17:36,040
और जहां तक उन दो रास्तों का सवाल है जो नहीं हैं?

257
00:17:36,040 --> 00:17:40,520
वे पूरी तरह से रद्द कर देते हैं, उनमें से एक बिल्कुल

258
00:17:40,520 --> 00:17:42,660
विपरीत है, दूसरे की रिवाइंडिंग जैसा कि हमने पहले देखा था।

259
00:17:42,660 --> 00:17:48,840
इसलिए क्षेत्रों की सीमाओं पर घुमावदार संख्याएँ ठीक उसी तरह जुड़ती हैं जिस तरह हम चाहते हैं।

260
00:17:48,840 --> 00:17:53,560
इसके अलावा ध्यान दें, उन्मुख सीमाओं को इस तरह अच्छी तरह से जोड़ने के बारे में यह तर्क

261
00:17:53,560 --> 00:17:57,320
गणित में बहुत बार आता है, और इसे अक्सर स्टोक्स प्रमेय के नाम से जाना जाता है।

262
00:17:57,320 --> 00:18:02,880
आपमें से जिन लोगों ने मल्टीवेरिएबल कैलकुलस का अध्ययन किया है, वे इसे उस संदर्भ से पहचान सकते हैं।

263
00:18:02,880 --> 00:18:08,040
तो अब, अंततः, घुमावदार संख्याओं के साथ, हम अपने समीकरण हल करने के लक्ष्यों पर वापस आ सकते हैं।

264
00:18:08,040 --> 00:18:12,400
इस क्षेत्र के साथ समस्या जो हमने पहले देखी थी वह यह है कि भले ही

265
00:18:12,400 --> 00:18:16,620
इसकी सीमा सभी संभावित रंगों से होकर गुजरती थी, लेकिन वाइंडिंग संख्या वास्तव में शून्य थी।

266
00:18:16,620 --> 00:18:22,360
आउटपुट लगभग आधे रास्ते में घूमते रहे, पीले से लाल होते हुए, और फिर वामावर्त दिशा में

267
00:18:22,360 --> 00:18:26,000
दूसरी दिशा में जाना शुरू कर दिया, फिर नीले रंग में जाना जारी रखा और दूसरे रास्ते

268
00:18:26,000 --> 00:18:32,040
से लाल पर प्रहार करते रहे, सब कुछ इस तरह से कि कुल वाइंडिंग शून्य हो गई।

269
00:18:32,040 --> 00:18:36,000
लेकिन अगर आपको एक लूप मिलता है जो न केवल हर रंग को हिट करता है, बल्कि इसमें गैर-शून्य

270
00:18:36,000 --> 00:18:41,200
वाइंडिंग संख्या की मजबूत स्थिति होती है, तो यदि आप इसे आधे में विभाजित करते हैं, तो आपको

271
00:18:41,200 --> 00:18:46,400
गारंटी दी जाती है कि कम से कम उन हिस्सों में से एक में एक है गैर-शून्य वाइंडिंग संख्या

272
00:18:46,400 --> 00:18:48,600
भी, क्योंकि चीजें अच्छी तरह से उस तरह से जुड़ती हैं जिस तरह से हम उन्हें चाहते हैं।

273
00:18:48,600 --> 00:18:54,280
तो इस तरह, आप आगे बढ़ते रह सकते हैं, एक बिंदु पर और आगे सीमित होते जा सकते हैं।

274
00:18:54,280 --> 00:18:58,440
और जैसे ही आप एक बिंदु पर संकीर्ण होते हैं, आप छोटे लूपों के साथ ऐसा कर रहे होंगे

275
00:18:58,440 --> 00:19:02,840
जिनमें गैर-शून्य घुमावदार संख्याएं होती हैं, जिसका अर्थ है कि वे सभी संभावित रंगों से गुजरते हैं, और इसलिए,

276
00:19:02,840 --> 00:19:07,680
जैसा कि मैंने पहले कहा था, जिस बिंदु पर वे संकीर्ण हो रहे हैं पर शून्य होना चाहिए.

277
00:19:07,680 --> 00:19:08,760
और बस!

278
00:19:08,760 --> 00:19:13,280
हमने अब एक द्वि-आयामी समीकरण सॉल्वर बनाया है, और इस

279
00:19:13,280 --> 00:19:14,760
बार, मैं वादा करता हूं, कोई बग नहीं हैं।

280
00:19:14,760 --> 00:19:18,200
इस कार्य को करने के लिए वाइंडिंग नंबर ही वह उपकरण है जिसकी हमें आवश्यकता होती है।

281
00:19:18,200 --> 00:19:23,040
अब हम ऐसे समीकरणों को हल कर सकते हैं जो इस तरह दिखते हैं कि दो आयामों में x का f, x

282
00:19:23,040 --> 00:19:27,660
के g के बराबर कहां है, बस इस बात पर विचार करके कि f और g के बीच का अंतर कैसा है।

283
00:19:27,660 --> 00:19:31,800
जब भी हमारे पास एक लूप होता है जिसकी वाइंडिंग संख्या शून्य नहीं होती है, तो हम इस एल्गोरिदम

284
00:19:31,800 --> 00:19:35,160
को उस पर चला सकते हैं, और हमें इसके भीतर कहीं न कहीं समाधान खोजने की गारंटी है।

285
00:19:35,160 --> 00:19:40,300
और इससे भी अधिक, एक आयाम की तरह, यह एल्गोरिदम अविश्वसनीय रूप से कुशल है।

286
00:19:40,300 --> 00:19:44,880
हम प्रत्येक दौर में अपने क्षेत्र के आधे आकार को सीमित करते रहते हैं, इस प्रकार शून्य पर

287
00:19:44,880 --> 00:19:49,840
तेजी से संकीर्ण होते जाते हैं, और हर समय, हमें केवल इन लूपों के बिंदुओं के साथ फ़ंक्शन

288
00:19:49,840 --> 00:19:55,240
के मान की जांच करनी होती है, न कि इसे कई पर जांचना होता है आंतरिक बिंदु.

289
00:19:55,240 --> 00:20:00,400
तो कुछ अर्थों में, किया गया समग्र कार्य केवल खोज स्थान की

290
00:20:00,400 --> 00:20:04,960
परिधि के समानुपाती होता है, पूरे क्षेत्र का नहीं, जो आश्चर्यजनक है।

291
00:20:04,960 --> 00:20:09,360
अब एक बार जब आप समझ जाते हैं कि क्या हो रहा है, तो इसे कार्य करते हुए देखना,

292
00:20:09,360 --> 00:20:13,800
इसे कुछ फ़ंक्शन देना और इसे शून्य की खोज करने देना अजीब रूप से मंत्रमुग्ध करने वाला है।

293
00:20:13,800 --> 00:20:18,600
जैसा कि मैंने पहले कहा, सम्मिश्र संख्याएँ द्वि-आयामी होती हैं, तो

294
00:20:18,600 --> 00:20:20,340
आइए इसे सम्मिश्र संख्याओं वाले कुछ समीकरणों पर लागू करें।

295
00:20:20,340 --> 00:20:25,240
उदाहरण के लिए, यहां जटिल तल पर फ़ंक्शन x के शून्य से पांचवें

296
00:20:25,240 --> 00:20:28,920
शून्य x शून्य से एक तक का पता लगाने वाला एल्गोरिदम है।

297
00:20:28,920 --> 00:20:33,160
इसकी शुरुआत उद्गम के आसपास के एक बहुत बड़े क्षेत्र पर विचार

298
00:20:33,160 --> 00:20:35,440
करके हुई, जो अंततः 5 की घुमावदार संख्या के साथ समाप्त हुई।

299
00:20:35,440 --> 00:20:39,640
हर बार जब आपको गैर-शून्य वाइंडिंग संख्या वाला एक लूप मिलता है, तो आप इसे आधे

300
00:20:39,640 --> 00:20:42,840
में विभाजित करते हैं, और दो छोटे लूपों की वाइंडिंग संख्या का पता लगाते हैं।

301
00:20:42,880 --> 00:20:46,880
उनमें से किसी एक या दोनों में गैर-शून्य वाइंडिंग नंबर होने की गारंटी है, और जब

302
00:20:46,880 --> 00:20:51,440
आप इसे देखते हैं, तो आप जानते हैं कि उस छोटे लूप के अंदर कहीं शून्य

303
00:20:51,440 --> 00:20:54,300
है, इसलिए आप उसी तरह से आगे बढ़ते रहें, छोटी जगह की खोज करते रहें।

304
00:20:54,300 --> 00:20:58,920
यदि हम जिस पथ पर गणना कर रहे हैं वह शून्य पर ठोकर खाता है, जो वास्तव में इस उदाहरण के लिए

305
00:20:58,920 --> 00:21:03,420
यहां दाहिने आधे हिस्से में एक बार हुआ था, तो हम एक क्षेत्र की खोज करना भी बंद कर देते हैं।

306
00:21:03,420 --> 00:21:07,600
वे दुर्लभ घटनाएँ घुमावदार संख्याओं की गणना करने की हमारी

307
00:21:07,600 --> 00:21:09,320
क्षमता में बाधा डालती हैं, लेकिन अरे, हमें शून्य मिला।

308
00:21:09,320 --> 00:21:13,320
और जहां तक उन लूपों की बात है जिनकी वाइंडिंग संख्या शून्य है, तो आप उन्हें आगे नहीं तलाशेंगे।

309
00:21:13,320 --> 00:21:18,520
हो सकता है कि उनके अंदर कोई समाधान हो, हो सकता है कि उनके पास न हो, हमारे पास कोई गारंटी नहीं है।

310
00:21:18,520 --> 00:21:22,240
और हमारे समीकरण सॉल्वर को इसी तरह से जारी रखने से, यह अंततः

311
00:21:22,240 --> 00:21:26,020
इस बहुपद के लिए बहुत सारे शून्य में परिवर्तित हो जाता है।

312
00:21:26,020 --> 00:21:30,400
वैसे, यह कोई संयोग नहीं है कि इस

313
00:21:30,400 --> 00:21:31,660
उदाहरण में कुल वाइंडिंग संख्या 5 थी।

314
00:21:31,660 --> 00:21:37,280
जटिल संख्याओं के साथ, x से n तक का ऑपरेशन सीधे आउटपुट के मूल के चारों ओर n

315
00:21:37,280 --> 00:21:45,000
बार घूमने से मेल खाता है जैसे आप इनपुट के मूल के चारों ओर एक बार चलते हैं।

316
00:21:45,000 --> 00:21:50,500
इसलिए बहुपद के साथ, पर्याप्त बड़े इनपुट के लिए, अग्रणी पद

317
00:21:50,500 --> 00:21:52,700
के अलावा प्रत्येक पद तुलना में महत्वहीन हो जाता है।

318
00:21:52,700 --> 00:21:58,780
तो कोई भी जटिल बहुपद जिसका अग्रणी पद x से n है, में

319
00:21:58,780 --> 00:22:00,700
एक बड़े पर्याप्त लूप के चारों ओर n की घुमावदार संख्या होती है।

320
00:22:00,700 --> 00:22:06,240
और इस तरह, हमारी घुमावदार संख्या तकनीक वास्तव में गारंटी देती

321
00:22:06,240 --> 00:22:07,620
है कि प्रत्येक जटिल बहुपद में एक शून्य होता है।

322
00:22:07,620 --> 00:22:13,880
यह इतना महत्वपूर्ण तथ्य है कि गणितज्ञ इसे बीजगणित का मूलभूत प्रमेय कहते हैं।

323
00:22:13,880 --> 00:22:18,040
इस तरह के समीकरणों के संख्यात्मक समाधान खोजने के लिए एक एल्गोरिदम का होना

324
00:22:18,040 --> 00:22:22,420
बेहद व्यावहारिक है, लेकिन बीजगणित का मौलिक प्रमेय इस बात का एक अच्छा उदाहरण

325
00:22:22,420 --> 00:22:27,780
है कि ये घुमावदार संख्याएं सैद्धांतिक स्तर पर भी काफी उपयोगी हैं, जो व्यापक

326
00:22:27,780 --> 00:22:32,280
वर्ग के लिए समाधान के अस्तित्व की गारंटी देती हैं। उपयुक्त स्थितियों के लिए

327
00:22:32,280 --> 00:22:34,060
समीकरण, जो गणितज्ञों द्वारा सोचने से कहीं अधिक पसंद की जाने वाली चीज़ है।

328
00:22:34,400 --> 00:22:39,360
मैं आपको एक अनुवर्ती वीडियो में टोपोलॉजी के संदर्भ में इसके कुछ और अद्भुत

329
00:22:39,360 --> 00:22:44,080
अनुप्रयोग दिखाऊंगा, जिसमें एक पुराने 3ब्लू1ब्राउन वीडियो से एक गलती को सुधारना शामिल है।

330
00:22:44,080 --> 00:22:45,080
कौन सा?

331
00:22:45,080 --> 00:22:48,740
खैर, इस चैनल पर सभी वीडियो, सब कुछ देखें और देखें

332
00:22:48,740 --> 00:22:51,640
कि क्या आप पहले त्रुटि का पता लगा सकते हैं।

333
00:22:51,640 --> 00:22:55,960
इस वीडियो के प्राथमिक लेखक 3ब्लू1ब्राउन टीम के

334
00:22:55,960 --> 00:22:56,460
नवीनतम सदस्यों में से एक, श्रीधर रमेश हैं।

