1
00:00:00,000 --> 00:00:06,720
Ada dua hal di sini, topik utama dan topik meta.

2
00:00:06,720 --> 00:00:10,440
Topik utamanya adalah algoritma yang sangat rapi untuk menyelesaikan persamaan dua

3
00:00:10,440 --> 00:00:14,900
dimensi, hal-hal yang memiliki dua bilangan real yang tidak diketahui,

4
00:00:14,900 --> 00:00:17,420
atau juga yang melibatkan satu bilangan kompleks yang tidak diketahui.

5
00:00:17,420 --> 00:00:21,840
Jadi misalnya, jika Anda ingin mencari akar kompleks dari sebuah

6
00:00:21,840 --> 00:00:25,960
polinomial, atau mungkin beberapa dari angka nol jutaan dolar dari

7
00:00:25,960 --> 00:00:26,960
fungsi Riemann zeta, algoritma ini akan melakukannya untuk Anda.

8
00:00:27,000 --> 00:00:30,520
Dan metode ini sangat cantik, karena melibatkan banyak warna.

9
00:00:30,520 --> 00:00:34,960
Dan yang lebih penting, ide inti yang mendasarinya berlaku untuk

10
00:00:34,960 --> 00:00:39,600
semua jenis matematika di luar algoritma untuk menyelesaikan persamaan

11
00:00:39,600 --> 00:00:40,600
ini, termasuk sedikit topologi, yang akan saya bicarakan nanti.

12
00:00:40,600 --> 00:00:44,880
Tapi apa yang membuat ini bernilai sekitar 20 menit dari waktu Anda adalah

13
00:00:44,880 --> 00:00:50,000
bahwa ini mengilustrasikan pelajaran yang jauh lebih berguna secara umum dalam matematika,

14
00:00:50,000 --> 00:00:52,120
yaitu mencoba mendefinisikan konstruksi yang dapat disusun dengan baik satu sama lain.

15
00:00:52,120 --> 00:00:55,460
Anda akan melihat apa yang saya maksud dengan itu seiring berjalannya cerita.

16
00:00:55,460 --> 00:00:59,460
Untuk memotivasi kasus dengan fungsi yang memiliki masukan 2d dan keluaran 2d, mari kita mulai

17
00:00:59,460 --> 00:01:05,100
dengan lebih sederhana, dengan fungsi yang hanya mengambil bilangan real dan mengeluarkan bilangan real.

18
00:01:05,100 --> 00:01:10,060
Jika Anda ingin mengetahui kapan suatu fungsi f dari x sama dengan fungsi g lainnya

19
00:01:10,060 --> 00:01:14,260
dari x, Anda mungkin menganggap ini sebagai pencarian kapan grafik dari fungsi-fungsi tersebut berpotongan, bukan?

20
00:01:14,260 --> 00:01:19,340
Maksud saya, itu memberi Anda masukan di mana kedua fungsi memiliki keluaran yang sama.

21
00:01:19,340 --> 00:01:24,520
Untuk mengambil contoh yang sangat sederhana, bayangkan f dari x adalah

22
00:01:24,520 --> 00:01:25,520
x kuadrat, dan g dari x adalah fungsi konstanta 2.

23
00:01:25,520 --> 00:01:29,620
Dengan kata lain, Anda ingin mencari akar kuadrat dari 2.

24
00:01:29,620 --> 00:01:33,620
Bahkan jika Anda hampir tidak tahu apa-apa tentang mencari akar kuadrat, Anda mungkin bisa

25
00:01:33,620 --> 00:01:39,260
melihat bahwa 1 kuadrat lebih kecil dari 2, dan 2 kuadrat lebih besar dari

26
00:01:39,260 --> 00:01:42,640
2, jadi Anda sadar, ah, akan ada solusi di antara kedua nilai tersebut.

27
00:01:42,640 --> 00:01:46,740
Lalu jika Anda ingin mempersempitnya lebih jauh, mungkin Anda mencoba

28
00:01:46,740 --> 00:01:47,740
mengkuadratkan titik tengahnya, 1. 5.

29
00:01:47,740 --> 00:01:53,060
Ini keluar menjadi 2. 25, agak terlalu tinggi, jadi Anda sebaiknya fokus pada

30
00:01:53,060 --> 00:01:54,940
wilayah antara 1 dan 1. 5.

31
00:01:54,940 --> 00:01:58,560
Dan seterusnya, Anda mungkin dapat melihat bagaimana hal ini akan terus berlanjut, Anda akan

32
00:01:58,560 --> 00:02:05,540
terus menghitung pada titik tengah dan kemudian membagi ruang pencarian Anda menjadi dua.

33
00:02:05,540 --> 00:02:08,340
Cara lain untuk memikirkan hal ini, yang akan memudahkan kita ketika

34
00:02:08,340 --> 00:02:13,560
kita mencapai dimensi yang lebih tinggi, adalah dengan berfokus pada pertanyaan

35
00:02:13,560 --> 00:02:16,300
ekuivalen mengenai kapan selisih antara kedua fungsi ini sama dengan nol.

36
00:02:16,380 --> 00:02:20,700
Dalam istilah tersebut, kami menemukan wilayah masukan yang perbedaannya

37
00:02:20,700 --> 00:02:24,020
negatif di satu sisi, dan positif di sisi lain.

38
00:02:24,020 --> 00:02:28,660
Kami membaginya menjadi dua, dan bagian yang kami persempit perhatiannya

39
00:02:28,660 --> 00:02:31,600
adalah bagian yang titik terluarnya memiliki tanda yang berbeda-beda.

40
00:02:31,600 --> 00:02:36,020
Dengan cara ini, kami dapat terus berjalan selamanya, mengambil setiap wilayah dengan tanda-tanda

41
00:02:36,020 --> 00:02:41,320
yang berbeda-beda di perbatasannya, menemukan wilayah yang lebih kecil di antara bagian-bagiannya,

42
00:02:41,320 --> 00:02:46,260
mengetahui bahwa pada akhirnya kami harus mempersempit titik yang akan menjadi nol.

43
00:02:46,260 --> 00:02:50,480
Singkatnya, menyelesaikan persamaan selalu bisa dirumuskan sebagai menemukan kapan fungsi tertentu sama dengan

44
00:02:50,480 --> 00:02:55,780
nol, dan untuk melakukannya, kita memiliki heuristik ini, jika f positif di

45
00:02:55,780 --> 00:03:00,420
satu titik dan negatif di titik lain, Anda dapat mencari di antara

46
00:03:00,420 --> 00:03:03,980
di mana itu nol, setidaknya jika semuanya berubah lancar tanpa lompatan tiba-tiba.

47
00:03:03,980 --> 00:03:08,060
Hal menakjubkan yang ingin saya tunjukkan kepada Anda adalah Anda

48
00:03:08,060 --> 00:03:13,220
dapat memperluas pemikiran seperti ini ke dalam persamaan dua dimensi,

49
00:03:13,220 --> 00:03:14,940
persamaan antara fungsi yang masukan dan keluarannya keduanya dua dimensi.

50
00:03:14,940 --> 00:03:19,540
Misalnya, bilangan kompleks berbentuk 2D, dan alat yang kami

51
00:03:19,540 --> 00:03:21,780
kembangkan ini sempurna untuk menemukan solusi persamaan kompleks.

52
00:03:21,780 --> 00:03:25,700
Sekarang, karena kita akan banyak membicarakan fungsi-fungsi 2D ini, mari

53
00:03:25,700 --> 00:03:29,380
kita mengambil langkah singkat dan mempertimbangkan bagaimana kita mengilustrasikannya.

54
00:03:29,380 --> 00:03:34,700
Membuat grafik fungsi dengan input 2D dan output 2D memerlukan empat

55
00:03:34,700 --> 00:03:39,220
dimensi, dan itu tidak akan berfungsi dengan baik di dunia 3D

56
00:03:39,220 --> 00:03:41,140
pada layar 2D, namun kami masih memiliki beberapa opsi bagus.

57
00:03:41,140 --> 00:03:46,020
Salah satunya adalah dengan melihat ruang masukan dan ruang keluaran secara berdampingan.

58
00:03:46,020 --> 00:03:51,540
Setiap titik di ruang masukan berpindah ke titik tertentu di ruang keluaran, dan saya dapat

59
00:03:51,540 --> 00:03:57,060
menunjukkan bagaimana pergerakan di sekitar titik masukan tersebut berhubungan dengan pergerakan tertentu di ruang keluaran.

60
00:03:57,060 --> 00:04:01,460
Semua fungsi yang kita pertimbangkan akan bersifat kontinu, dalam

61
00:04:01,460 --> 00:04:05,820
artian perubahan kecil pada masukan hanya sesuai dengan perubahan

62
00:04:05,820 --> 00:04:07,460
kecil pada keluaran, tidak ada lompatan yang tiba-tiba.

63
00:04:07,460 --> 00:04:12,020
Pilihan lain yang kita miliki adalah membayangkan panah dari asal ruang keluaran ke

64
00:04:12,020 --> 00:04:17,380
titik keluaran tersebut, dan melampirkan versi miniatur panah tersebut ke titik masukan.

65
00:04:17,380 --> 00:04:22,340
Sekilas hal ini dapat memberi kita gambaran tentang ke mana perginya suatu titik masukan tertentu,

66
00:04:22,340 --> 00:04:27,580
atau ke mana perginya banyak titik masukan yang berbeda dengan menggambar bidang vektor penuh.

67
00:04:27,580 --> 00:04:30,740
Dan sayangnya ketika Anda melakukan ini di banyak titik, hal ini bisa

68
00:04:30,740 --> 00:04:34,340
menjadi sangat berantakan, jadi di sini izinkan saya membuat semua panah berukuran

69
00:04:34,340 --> 00:04:37,900
sama, dan ini berarti kita bisa mengetahui arah setiap titik keluaran.

70
00:04:37,900 --> 00:04:41,660
Namun mungkin cara tercantik untuk mengilustrasikan fungsi dua dimensi, dan yang paling sering kita

71
00:04:41,660 --> 00:04:47,400
gunakan dalam video ini, adalah dengan mengasosiasikan setiap titik dalam ruang keluaran dengan warna.

72
00:04:47,400 --> 00:04:52,180
Di sini kita menggunakan warna, yaitu warna yang jatuh di sepanjang pelangi

73
00:04:52,180 --> 00:04:57,020
atau roda warna, untuk menyesuaikan dengan arah menjauhi titik asal, dan kita

74
00:04:57,020 --> 00:05:00,060
menggunakan kegelapan atau kecerahan untuk menyesuaikan dengan jarak dari titik asal.

75
00:05:00,060 --> 00:05:05,720
Misalnya, dengan fokus pada rangkaian keluaran ini, semua titik ini berwarna merah, namun titik yang lebih

76
00:05:05,720 --> 00:05:10,340
dekat ke titik asal sedikit lebih gelap, dan titik yang lebih jauh menjadi sedikit lebih terang.

77
00:05:10,340 --> 00:05:15,360
Dan dengan fokus pada rangkaian keluaran ini, semua titik berwarna hijau, dan sekali lagi,

78
00:05:15,360 --> 00:05:18,980
lebih dekat ke titik asal berarti lebih gelap, lebih jauh berarti lebih terang.

79
00:05:18,980 --> 00:05:24,300
Dan seterusnya, yang kita lakukan di sini hanyalah memberikan

80
00:05:24,300 --> 00:05:25,300
warna tertentu pada setiap arah, semuanya terus berubah.

81
00:05:25,300 --> 00:05:29,100
Anda mungkin melihat perbedaan kegelapan dan kecerahan di sini

82
00:05:29,140 --> 00:05:33,940
cukup halus, namun untuk video ini, yang kami pedulikan

83
00:05:33,940 --> 00:05:35,300
hanyalah arah keluarannya, bukan besarnya, warnanya, bukan kecerahannya.

84
00:05:35,300 --> 00:05:39,160
Satu hal penting tentang kecerahan yang harus Anda perhatikan adalah bahwa di dekat

85
00:05:39,160 --> 00:05:44,440
titik asal, yang tidak memiliki arah tertentu, semua warna memudar menjadi hitam.

86
00:05:44,440 --> 00:05:48,820
Jadi untuk memikirkan fungsi, setelah kita menentukan warna untuk setiap keluaran,

87
00:05:48,820 --> 00:05:54,020
kita dapat memvisualisasikan fungsi 2D dengan mewarnai setiap titik di

88
00:05:54,020 --> 00:05:57,860
ruang masukan berdasarkan warna titik tempatnya berada di ruang keluaran.

89
00:05:57,860 --> 00:06:02,340
Saya suka membayangkan banyak titik berbeda dari ruang masukan yang melompat ke keluaran

90
00:06:02,340 --> 00:06:06,340
yang sesuai di ruang keluaran, kemudian dicat berdasarkan warna titik di mana titik

91
00:06:06,340 --> 00:06:11,820
tersebut mendarat, dan kemudian melompat kembali ke tempat asalnya di ruang masukan.

92
00:06:11,820 --> 00:06:15,700
Dengan melakukan hal ini untuk setiap titik di ruang masukan, Anda dapat memahaminya hanya dengan

93
00:06:15,700 --> 00:06:19,140
melihat ruang masukan tersebut untuk mengetahui secara kasar di mana fungsi tersebut mengambil setiap titik.

94
00:06:19,140 --> 00:06:23,880
Misalnya, garis titik merah muda di sebelah kiri ini memberi tahu kita bahwa semua titik

95
00:06:23,920 --> 00:06:30,000
tersebut dipetakan di suatu tempat dalam arah merah muda, di kiri bawah ruang keluaran.

96
00:06:30,000 --> 00:06:34,120
Juga tiga titik yang berwarna hitam dengan banyak warna

97
00:06:34,120 --> 00:06:37,120
di sekelilingnya adalah titik yang menuju ke nol.

98
00:06:37,120 --> 00:06:46,120
Baiklah, sama seperti kasus 1D, penyelesaian persamaan fungsi 2D selalu

99
00:06:46,120 --> 00:06:49,780
dapat diubah dengan menanyakan kapan suatu fungsi sama dengan nol.

100
00:06:49,780 --> 00:06:54,820
Jadi itulah tantangan kita saat ini, membuat algoritme yang menemukan

101
00:06:54,820 --> 00:07:00,900
titik masukan mana dari fungsi 2D tertentu yang bernilai nol.

102
00:07:00,900 --> 00:07:04,560
Anda mungkin menunjukkan bahwa jika Anda melihat peta warna seperti ini dengan melihat

103
00:07:04,560 --> 00:07:08,700
titik-titik hitam tersebut, Anda sudah mengetahui di mana angka nol dari fungsinya.

104
00:07:08,700 --> 00:07:11,460
Jadi apakah itu masuk hitungan?

105
00:07:11,460 --> 00:07:15,100
Ingatlah bahwa untuk membuat diagram seperti ini, kita telah meminta komputer

106
00:07:15,100 --> 00:07:21,020
menghitung fungsi di semua piksel pada bidang, namun tujuan kita adalah

107
00:07:21,020 --> 00:07:25,380
menemukan algoritma yang lebih efisien yang hanya memerlukan komputasi fungsi pada

108
00:07:25,380 --> 00:07:29,600
titik sesedikit mungkin. , hanya memiliki pandangan terbatas terhadap warna.

109
00:07:29,600 --> 00:07:33,940
Dan juga dari sudut pandang yang lebih teoritis, akan lebih baik jika memiliki konstruksi umum

110
00:07:33,940 --> 00:07:38,300
yang memberi tahu kita kondisi apakah ada angka nol atau tidak di dalam wilayah tertentu.

111
00:07:38,300 --> 00:07:43,700
Ingat, dalam satu dimensi, pemahaman utamanya adalah jika suatu fungsi kontinu bernilai positif di

112
00:07:43,700 --> 00:07:48,920
satu titik dan negatif di titik lain, maka di antara keduanya pasti ada nol.

113
00:07:48,920 --> 00:07:50,960
Jadi bagaimana kita memperluasnya menjadi dua dimensi?

114
00:07:50,960 --> 00:07:55,180
Kita memerlukan semacam analogi dalam membicarakan tanda.

115
00:07:55,180 --> 00:07:59,140
Salah satu cara untuk memikirkan tentang tanda-tanda adalah petunjuk arah.

116
00:07:59,140 --> 00:08:02,620
Positif berarti Anda menunjuk ke kanan sepanjang garis

117
00:08:02,620 --> 00:08:04,240
bilangan, dan negatif berarti Anda menunjuk ke kiri.

118
00:08:04,240 --> 00:08:08,800
Besaran dua dimensi juga memiliki arah, tetapi bagi mereka pilihannya jauh

119
00:08:08,800 --> 00:08:12,780
lebih luas, mereka dapat menunjuk ke mana saja dalam berbagai kemungkinan.

120
00:08:12,780 --> 00:08:16,860
Jadi sama seperti dalam satu dimensi kita menanyakan apakah suatu fungsi tertentu bernilai

121
00:08:16,860 --> 00:08:22,860
positif atau negatif pada batas suatu rentang, yang hanya terdiri dari dua

122
00:08:22,860 --> 00:08:28,200
titik, untuk fungsi 2d kita akan melihat batas suatu wilayah, yang mana adalah

123
00:08:28,200 --> 00:08:33,760
sebuah loop, dan tanyakan tentang arah keluaran fungsi di sepanjang batas tersebut.

124
00:08:33,760 --> 00:08:39,220
Misalnya, kita melihat bahwa sepanjang putaran di sekitar angka nol ini, keluaran

125
00:08:39,220 --> 00:08:43,460
melewati setiap arah yang mungkin, semua warna pelangi, merah, kuning, hijau, biru,

126
00:08:43,460 --> 00:08:45,820
kembali ke merah, dan segala sesuatu di antaranya di sepanjang jalan.

127
00:08:45,820 --> 00:08:50,640
Namun di sepanjang perulangan ini, tanpa angka nol di dalamnya, keluarannya tidak melewati semua

128
00:08:50,640 --> 00:08:55,420
warna, ia melewati beberapa warna jingga, namun tidak pernah, katakanlah, hijau atau biru.

129
00:08:55,420 --> 00:08:59,320
Dan ini cukup menjanjikan, hal ini mirip dengan bagaimana segala sesuatunya bekerja dalam satu dimensi.

130
00:08:59,320 --> 00:09:03,540
Mungkin dengan cara yang sama jika fungsi 1d mengambil kedua tanda yang mungkin pada batas

131
00:09:03,540 --> 00:09:09,700
wilayah 1d, ada angka nol di suatu tempat di dalamnya, kita dapat berhipotesis bahwa jika

132
00:09:09,700 --> 00:09:15,140
fungsi 2d menghasilkan keluaran dari semua arah yang mungkin, semua kemungkinan warna, di sepanjang batas

133
00:09:15,140 --> 00:09:20,980
wilayah 2d, maka di suatu tempat di dalam wilayah itu harus menuju ke nol.

134
00:09:20,980 --> 00:09:25,100
Jadi itulah tebakan kami, dan luangkan waktu sejenak untuk memikirkan

135
00:09:25,100 --> 00:09:27,660
apakah hal ini benar, dan jika demikian, mengapa demikian.

136
00:09:27,660 --> 00:09:32,020
Jika kita mulai memikirkan perulangan kecil di sekitar titik masukan, kita tahu bahwa karena

137
00:09:32,020 --> 00:09:36,660
semuanya kontinu, fungsi kita membawanya ke perulangan kecil di dekat keluaran yang sesuai.

138
00:09:36,660 --> 00:09:41,140
Tapi lihat, untuk sebagian besar loop kecil, warna keluarannya bervariasi.

139
00:09:41,140 --> 00:09:46,300
Jika Anda memilih titik keluaran selain nol, dan menggambar lingkaran yang cukup rapat di

140
00:09:46,300 --> 00:09:49,860
dekatnya, semua warna lingkaran akan memiliki warna yang hampir sama dengan titik tersebut.

141
00:09:49,860 --> 00:09:55,980
Lingkaran ketat di sini semuanya berwarna kebiruan, lingkaran ketat di sini

142
00:09:55,980 --> 00:09:58,440
semuanya kekuningan, Anda tentu tidak akan mendapatkan semua warna pelangi.

143
00:09:58,440 --> 00:10:03,580
Satu-satunya titik di mana Anda dapat mengencangkan loop di sekelilingnya sambil tetap

144
00:10:03,580 --> 00:10:07,120
mendapatkan semua warna adalah titik asal yang tidak berwarna, nol itu sendiri.

145
00:10:07,120 --> 00:10:11,680
Jadi memang benar bahwa jika Anda memiliki loop yang

146
00:10:11,680 --> 00:10:15,960
melewati setiap warna pelangi, mengencangkan dan mengencangkan, menyempit

147
00:10:15,960 --> 00:10:17,360
pada suatu titik, maka titik tersebut pastilah nol.

148
00:10:17,360 --> 00:10:22,360
Jadi mari kita siapkan pemecah persamaan 2d seperti pemecah persamaan satu dimensi.

149
00:10:22,360 --> 00:10:27,200
Saat kita menemukan wilayah luas yang batasnya melewati setiap warna,

150
00:10:27,200 --> 00:10:30,640
bagilah menjadi dua, lalu lihat warna pada batas setiap bagiannya.

151
00:10:30,640 --> 00:10:34,920
Pada contoh yang ditunjukkan di sini, batas di bagian kiri tidak mencakup

152
00:10:34,920 --> 00:10:39,080
semua warna, misalnya tidak ada titik yang dipetakan ke arah oranye kekuningan.

153
00:10:39,080 --> 00:10:43,480
Jadi saya akan menghapus area ini dengan warna abu-abu sebagai cara untuk mengatakan bahwa kami tidak ingin mencarinya lebih jauh.

154
00:10:43,480 --> 00:10:47,840
Bagian kanan melewati semua warna, menghabiskan banyak waktu ke arah hijau,

155
00:10:47,840 --> 00:10:51,120
kemudian melewati kuning oranye merah, serta biru ungu merah muda.

156
00:10:51,120 --> 00:10:56,060
Sekarang ingat, artinya titik-titik batas ini dipetakan

157
00:10:56,060 --> 00:10:57,800
ke keluaran dari semua arah yang mungkin.

158
00:10:57,800 --> 00:11:02,900
Makanya kita telusuri lebih jauh lagi, dipecah lagi dan dicek batas tiap wilayahnya.

159
00:11:02,900 --> 00:11:07,000
Batas atas semuanya hijau, jadi kita berhenti mencari di sana.

160
00:11:07,000 --> 00:11:10,500
Tapi bagian bawahnya cukup berwarna sehingga layak untuk dibagi lagi.

161
00:11:10,500 --> 00:11:12,420
Dan terus seperti ini.

162
00:11:12,420 --> 00:11:16,860
Periksa subwilayah mana yang memiliki batas yang mencakup semua kemungkinan warna, yang berarti

163
00:11:16,860 --> 00:11:21,280
titik-titik batas tersebut akan dipetakan ke semua arah yang mungkin, dan terus

164
00:11:21,280 --> 00:11:25,400
potong wilayah tersebut menjadi dua seperti yang kita lakukan untuk kasus satu dimensi,

165
00:11:25,400 --> 00:11:29,320
yang pada akhirnya membawa kita ke nol pada fungsi- Oh, tunggu sebentar.

166
00:11:29,320 --> 00:11:30,320
Apa yang terjadi disini?

167
00:11:30,320 --> 00:11:34,520
Tak satu pun dari subdivisi terakhir di kanan bawah melewati semua

168
00:11:34,520 --> 00:11:38,160
warna, sehingga algoritme kami berhenti karena tidak ingin menelusuri salah

169
00:11:38,160 --> 00:11:41,160
satu dari warna tersebut, namun juga tidak menemukan angka nol.

170
00:11:41,160 --> 00:11:43,720
Oke, jelas ada sesuatu yang salah di sini.

171
00:11:43,720 --> 00:11:46,680
Dan tidak apa-apa, melakukan kesalahan adalah hal yang biasa dalam mengerjakan matematika.

172
00:11:46,680 --> 00:11:51,400
Jika kita melihat ke belakang, kita mempunyai hipotesis ini, dan hipotesis

173
00:11:51,400 --> 00:11:53,680
ini membawa kita pada algoritma yang diusulkan ini, jadi kita salah.

174
00:11:53,680 --> 00:11:56,860
Dan menjadi ahli dalam matematika bukan berarti menjadi benar pada

175
00:11:56,860 --> 00:12:00,920
kali pertama, namun tentang memiliki ketahanan untuk melihat ke belakang

176
00:12:00,920 --> 00:12:02,520
secara cermat dan memahami kesalahan, serta memahami cara memperbaikinya.

177
00:12:02,520 --> 00:12:06,760
Sekarang masalahnya adalah kita mempunyai wilayah yang batasnya melewati setiap warna, tapi ketika kita

178
00:12:06,760 --> 00:12:11,260
membaginya di tengah, tidak ada batas subwilayah yang melewati setiap warna, kita tidak punya

179
00:12:11,260 --> 00:12:14,880
pilihan ke mana harus terus mencari selanjutnya, dan itu memecahkan angka nol. penemu.

180
00:12:15,280 --> 00:12:18,120
Sekarang dalam satu dimensi, hal seperti ini tidak pernah terjadi.

181
00:12:18,120 --> 00:12:22,960
Setiap kali Anda memiliki interval yang titik akhirnya memiliki

182
00:12:22,960 --> 00:12:28,200
tanda berbeda, jika Anda membaginya, Anda dijamin mendapatkan

183
00:12:28,200 --> 00:12:29,200
subinterval yang titik akhirnya juga memiliki tanda berbeda.

184
00:12:29,200 --> 00:12:34,120
Atau dengan kata lain, setiap kali Anda memiliki dua interval yang

185
00:12:34,120 --> 00:12:38,280
titik akhirnya tidak berubah tanda, jika Anda menggabungkannya, Anda akan mendapatkan

186
00:12:38,280 --> 00:12:39,280
interval yang lebih besar yang titik akhirnya juga tidak berubah tanda.

187
00:12:39,280 --> 00:12:43,140
Namun dalam dua dimensi, kita bisa menemukan dua wilayah

188
00:12:43,140 --> 00:12:48,040
yang batasnya tidak menembus setiap warna, namun batas-batasnya digabungkan

189
00:12:48,040 --> 00:12:49,940
untuk menghasilkan suatu wilayah yang batasnya menembus setiap warna.

190
00:12:49,940 --> 00:12:53,740
Dan dengan cara ini, algoritma zero-finding yang kami usulkan gagal.

191
00:12:53,740 --> 00:12:58,680
Faktanya, jika dipikir-pikir, Anda dapat menemukan lingkaran besar yang batasnya melewati

192
00:12:58,680 --> 00:13:03,120
setiap warna yang mungkin tanpa ada angka nol di dalamnya.

193
00:13:03,120 --> 00:13:07,100
Hal ini tidak berarti bahwa kami salah dalam klaim kami tentang loop kecil ketika kami

194
00:13:07,100 --> 00:13:13,040
mengatakan bahwa loop yang selalu menyempit pada setiap warna harus menyempit pada angka nol.

195
00:13:13,040 --> 00:13:17,120
Namun yang membuat kami kacau adalah properti yang melakukan-perbatasan-saya-melintasi-setiap-warna-atau-tidak ini tidak digabungkan

196
00:13:17,120 --> 00:13:23,040
dengan cara yang bagus dan dapat diprediksi saat Anda menggabungkan wilayah.

197
00:13:23,040 --> 00:13:28,100
Tapi jangan khawatir, ternyata kita bisa memodifikasinya sedikit menjadi properti yang

198
00:13:28,100 --> 00:13:38,560
lebih canggih yang digabungkan untuk memberikan apa yang kita inginkan.

199
00:13:38,560 --> 00:13:42,540
Idenya adalah daripada sekadar menanyakan apakah kita dapat menemukan warna pada

200
00:13:42,540 --> 00:13:47,100
titik tertentu di sepanjang putaran, mari kita perhatikan lebih cermat

201
00:13:47,100 --> 00:13:48,100
bagaimana warna-warna ini berubah saat kita berjalan mengelilingi putaran tersebut.

202
00:13:48,100 --> 00:13:50,060
Izinkan saya menunjukkan kepada Anda apa yang saya maksud dengan sebuah contoh.

203
00:13:50,060 --> 00:13:54,120
Saya akan menyimpan roda warna kecil di pojok sini untuk membantu kita melacaknya.

204
00:13:54,120 --> 00:13:58,540
Ketika warna-warna di sepanjang jalur masukan bergerak melalui pelangi ke arah

205
00:13:58,540 --> 00:14:04,380
tertentu, dari merah ke kuning, kuning ke hijau, hijau ke

206
00:14:04,380 --> 00:14:05,720
biru, atau biru ke merah, keluarannya berayun searah jarum jam.

207
00:14:05,720 --> 00:14:09,980
Namun sebaliknya, jika warna bergerak berlawanan arah dalam pelangi, dari biru ke hijau, hijau ke

208
00:14:09,980 --> 00:14:17,160
kuning, kuning ke merah, atau merah ke biru, keluarannya berayun berlawanan arah jarum jam.

209
00:14:17,160 --> 00:14:22,940
Jadi berjalan di sepanjang jalur pendek ini, warna berputar seperlima searah jarum

210
00:14:22,940 --> 00:14:28,340
jam melalui roda warna, dan berjalan di sepanjang jalur ini di

211
00:14:28,340 --> 00:14:30,620
sini, warna berputar seperlima lagi searah jarum jam melalui roda warna.

212
00:14:30,620 --> 00:14:35,400
Tentu saja, ini berarti jika Anda melewati kedua jalur tersebut, satu demi

213
00:14:35,400 --> 00:14:39,380
satu, warnanya akan berputar sebanyak dua perlima putaran penuh searah jarum jam.

214
00:14:39,380 --> 00:14:43,740
Jumlah total penggulungan semakin bertambah, dan ini akan menjadi kuncinya,

215
00:14:43,740 --> 00:14:47,140
ini adalah jenis penggabungan langsung yang akan berguna bagi kita.

216
00:14:47,140 --> 00:14:51,980
Saat saya menyebutkan jumlah total belitan, saya ingin Anda membayangkan sebuah odometer kuno yang berdetak ke

217
00:14:51,980 --> 00:14:58,700
depan saat panah berputar searah jarum jam, namun mundur saat panah berputar berlawanan arah jarum jam.

218
00:14:58,700 --> 00:15:03,020
Jadi belitan berlawanan arah jarum jam dihitung sebagai belitan negatif searah jarum jam.

219
00:15:03,020 --> 00:15:07,460
Keluarannya mungkin banyak, tetapi jika sebagian dari

220
00:15:07,460 --> 00:15:08,940
putaran itu berlawanan arah, maka akan hilang.

221
00:15:08,940 --> 00:15:13,220
Misalnya, jika Anda bergerak maju di sepanjang jalur ini, dan kemudian bergerak

222
00:15:13,220 --> 00:15:18,100
mundur di sepanjang jalur yang sama, jumlah total belitan akan menjadi nol,

223
00:15:18,100 --> 00:15:23,440
gerakan mundur secara harafiah memundurkan warna-warna yang terlihat sebelumnya, membalikkan semua belitan

224
00:15:23,440 --> 00:15:26,300
sebelumnya, dan mengembalikan warna yang terlihat sebelumnya. odometer kembali ke tempat dimulainya.

225
00:15:26,300 --> 00:15:30,480
Untuk tujuan kita, kita akan sangat memperhatikan lilitan sepanjang loop.

226
00:15:30,480 --> 00:15:34,280
Sebagai contoh, katakanlah kita mengelilingi seluruh putaran ini searah jarum jam.

227
00:15:34,280 --> 00:15:39,680
Keluaran yang kita temui berputar sebanyak tiga kali putaran penuh searah jarum jam, warna-warna

228
00:15:39,680 --> 00:15:47,120
berayun melalui pelangi, secara berurutan, dari merah ke merah lagi, lalu lagi, dan lagi.

229
00:15:47,120 --> 00:15:52,260
Dalam jargon yang digunakan ahli matematika, kita mengatakan bahwa

230
00:15:52,260 --> 00:15:54,100
sepanjang loop ini, jumlah total belitan adalah 3.

231
00:15:54,100 --> 00:15:58,440
Untuk perulangan yang lain, bisa berupa bilangan bulat lainnya, mungkin bilangan yang lebih

232
00:15:58,440 --> 00:16:03,680
besar jika keluarannya berputar berkali-kali saat masukan berputar dalam satu putaran, atau bisa

233
00:16:03,720 --> 00:16:07,060
juga bilangan yang lebih kecil jika keluarannya hanya berputar satu atau dua kali.

234
00:16:07,060 --> 00:16:12,260
Atau bilangan belitan itu bahkan bisa berupa bilangan bulat negatif, jika keluarannya berayun

235
00:16:12,260 --> 00:16:15,200
berlawanan arah jarum jam saat kita berjalan mengelilingi loop searah jarum jam.

236
00:16:15,200 --> 00:16:19,720
Namun sepanjang loop mana pun, jumlah total belitan ini harus berupa bilangan bulat.

237
00:16:19,720 --> 00:16:23,980
Maksud saya, saat Anda kembali ke awal, Anda akan

238
00:16:23,980 --> 00:16:25,840
mendapatkan hasil yang sama seperti saat Anda memulai.

239
00:16:25,840 --> 00:16:31,520
Secara kebetulan, jika suatu jalur benar-benar berisi titik di mana keluarannya

240
00:16:31,560 --> 00:16:35,640
tepat nol, maka secara teknis Anda tidak dapat menentukan bilangan belitan

241
00:16:35,640 --> 00:16:37,600
di sepanjang jalur tersebut, karena keluarannya tidak memiliki arah tertentu.

242
00:16:37,600 --> 00:16:41,740
Ini tidak akan menjadi masalah bagi kami, karena seluruh tujuan kami adalah

243
00:16:41,740 --> 00:16:45,200
menemukan angka nol, jadi jika hal ini terjadi, kami hanya beruntung saja.

244
00:16:45,200 --> 00:16:48,720
Hal utama yang perlu diperhatikan tentang angka-angka berliku ini adalah angka-angka tersebut

245
00:16:48,720 --> 00:16:55,040
bertambah dengan baik saat Anda menggabungkan jalur menjadi jalur yang lebih besar.

246
00:16:55,040 --> 00:16:59,440
Namun yang sebenarnya kita inginkan adalah angka-angka yang berkelok-kelok di sepanjang perbatasan suatu wilayah

247
00:16:59,440 --> 00:17:03,120
dapat bertambah dengan baik ketika kita menggabungkan wilayah-wilayah tersebut menjadi wilayah yang lebih besar.

248
00:17:03,120 --> 00:17:06,320
Jadi, apakah kita memiliki properti itu?

249
00:17:06,320 --> 00:17:09,600
Nah, lihatlah.

250
00:17:09,600 --> 00:17:14,760
Bilangan belitan searah jarum jam mengelilingi wilayah di sebelah kiri

251
00:17:14,760 --> 00:17:17,920
ini adalah jumlah bilangan belitan dari keempat jalur tersebut.

252
00:17:17,920 --> 00:17:21,960
Dan lilitan yang kita putar searah jarum jam mengelilingi wilayah di sebelah

253
00:17:21,960 --> 00:17:25,480
kanan ini adalah jumlah dari bilangan lilitan dari keempat jalur tersebut.

254
00:17:25,480 --> 00:17:29,840
Dan ketika kita menggabungkan kedua wilayah tersebut menjadi satu wilayah yang lebih besar, sebagian

255
00:17:29,840 --> 00:17:33,760
besar jalur tersebut menjadi bagian dari perbatasan wilayah yang lebih besar searah jarum jam.

256
00:17:33,760 --> 00:17:36,040
Dan adapun dua jalur yang tidak?

257
00:17:36,040 --> 00:17:40,520
Mereka membatalkan dengan sempurna, salah satunya justru kebalikannya, pemutaran

258
00:17:40,520 --> 00:17:42,660
ulang yang lain seperti yang kita lihat sebelumnya.

259
00:17:42,660 --> 00:17:48,840
Jadi angka-angka yang berkelok-kelok di sepanjang batas wilayah akan bertambah sesuai dengan keinginan kita.

260
00:17:48,840 --> 00:17:53,560
Catatan tambahan, alasan tentang batas berorientasi yang dijumlahkan dengan baik seperti

261
00:17:53,560 --> 00:17:57,320
ini banyak muncul dalam matematika, dan sering kali disebut teorema Stokes.

262
00:17:57,320 --> 00:18:02,880
Anda yang pernah mempelajari kalkulus multivariabel mungkin mengenalinya dari konteks tersebut.

263
00:18:02,880 --> 00:18:08,040
Jadi sekarang, akhirnya, dengan berlikunya angka-angka di tangan, kita dapat kembali ke tujuan penyelesaian persamaan kita.

264
00:18:08,040 --> 00:18:12,400
Masalah dengan wilayah yang kita lihat sebelumnya adalah meskipun

265
00:18:12,400 --> 00:18:16,620
batasnya melewati semua kemungkinan warna, bilangan belitan sebenarnya nol.

266
00:18:16,620 --> 00:18:22,360
Outputnya berputar sekitar setengah, dari kuning ke merah, dan kemudian mulai berputar berlawanan

267
00:18:22,360 --> 00:18:26,000
arah jarum jam kembali ke arah yang lain, kemudian melanjutkan melalui biru dan

268
00:18:26,000 --> 00:18:32,040
mencapai merah dari arah lain, semuanya sedemikian rupa sehingga total belitan menjadi nol.

269
00:18:32,040 --> 00:18:36,000
Tetapi jika Anda menemukan sebuah loop yang tidak hanya mengenai setiap warna, namun juga memiliki

270
00:18:36,000 --> 00:18:41,200
kondisi yang lebih kuat dari bilangan lilitan bukan nol, maka jika Anda membaginya menjadi

271
00:18:41,200 --> 00:18:46,400
dua, Anda dijamin bahwa setidaknya salah satu dari bagian tersebut memiliki warna yang sama. bilangan

272
00:18:46,400 --> 00:18:48,600
belitan yang bukan nol juga, karena segala sesuatunya akan bertambah sesuai dengan keinginan kita.

273
00:18:48,600 --> 00:18:54,280
Jadi dengan cara ini, Anda dapat melanjutkan, semakin mempersempit ke satu titik.

274
00:18:54,280 --> 00:18:58,440
Dan saat Anda mempersempit suatu titik, Anda akan melakukannya dengan loop kecil yang memiliki

275
00:18:58,440 --> 00:19:02,840
nomor belitan bukan nol, yang berarti loop tersebut melewati semua kemungkinan warna, dan oleh

276
00:19:02,840 --> 00:19:07,680
karena itu, seperti saya katakan sebelumnya, titik di mana mereka menyempit pada harus nol.

277
00:19:07,680 --> 00:19:08,760
Dan itu saja!

278
00:19:08,760 --> 00:19:13,280
Kami sekarang telah membuat pemecah persamaan dua dimensi,

279
00:19:13,280 --> 00:19:14,760
dan kali ini, saya berjanji, tidak ada bug.

280
00:19:14,760 --> 00:19:18,200
Angka berliku adalah alat yang kita perlukan agar ini berhasil.

281
00:19:18,200 --> 00:19:23,040
Sekarang kita dapat menyelesaikan persamaan yang terlihat seperti di mana f dari x sama dengan g

282
00:19:23,040 --> 00:19:27,660
dari x dalam dua dimensi, hanya dengan mempertimbangkan bagaimana perbedaan antara f dan g berputar.

283
00:19:27,660 --> 00:19:31,800
Setiap kali kita mempunyai loop yang nomor lilitannya bukan nol, kita dapat menjalankan

284
00:19:31,800 --> 00:19:35,160
algoritma ini pada loop tersebut, dan dijamin kita akan menemukan solusi di dalamnya.

285
00:19:35,160 --> 00:19:40,300
Terlebih lagi, seperti dalam satu dimensi, algoritma ini sangat efisien.

286
00:19:40,300 --> 00:19:44,880
Kita terus mempersempit setengah ukuran wilayah kita di setiap putaran, sehingga dengan cepat

287
00:19:44,880 --> 00:19:49,840
mempersempit angka nol, dan sementara itu, kita hanya perlu memeriksa nilai fungsi

288
00:19:49,840 --> 00:19:55,240
di sepanjang titik-titik perulangan ini, daripada memeriksanya di banyak perulangan. poin interior.

289
00:19:55,240 --> 00:20:00,400
Jadi dalam beberapa hal, keseluruhan pekerjaan yang dilakukan hanya sebanding dengan

290
00:20:00,400 --> 00:20:04,960
keliling ruang pencarian, bukan seluruh luasnya, dan ini sungguh menakjubkan.

291
00:20:04,960 --> 00:20:09,360
Sekarang setelah Anda memahami apa yang terjadi, sungguh menakjubkan melihat

292
00:20:09,360 --> 00:20:13,800
ini beraksi, memberinya beberapa fungsi dan membiarkannya mencari angka nol.

293
00:20:13,800 --> 00:20:18,600
Seperti saya katakan sebelumnya, bilangan kompleks adalah dua dimensi,

294
00:20:18,600 --> 00:20:20,340
jadi mari kita terapkan pada persamaan bilangan kompleks.

295
00:20:20,340 --> 00:20:25,240
Misalnya, inilah algoritme yang mencari angka nol dari fungsi x

296
00:20:25,240 --> 00:20:28,920
hingga seperlima dikurangi x dikurangi satu pada bidang kompleks.

297
00:20:28,920 --> 00:20:33,160
Ini dimulai dengan mempertimbangkan wilayah yang sangat luas di

298
00:20:33,160 --> 00:20:35,440
sekitar titik asal, yang akhirnya memiliki jumlah lilitan 5.

299
00:20:35,440 --> 00:20:39,640
Setiap kali Anda menemukan loop dengan nomor belitan bukan nol, Anda membaginya menjadi

300
00:20:39,640 --> 00:20:42,840
dua, dan mencari tahu nomor belitan dari dua loop yang lebih kecil.

301
00:20:42,880 --> 00:20:46,880
Salah satu atau kedua-duanya dijamin memiliki nomor belitan bukan nol, dan ketika Anda melihat

302
00:20:46,880 --> 00:20:51,440
ini, Anda tahu ada nol di suatu tempat di dalam loop yang lebih kecil

303
00:20:51,440 --> 00:20:54,300
itu, jadi Anda terus melakukan hal yang sama, mencari ruang yang lebih kecil.

304
00:20:54,300 --> 00:20:58,920
Kami juga berhenti menjelajahi suatu wilayah jika jalur yang kami lalui komputasi kebetulan

305
00:20:58,920 --> 00:21:03,420
menemukan angka nol, yang sebenarnya terjadi sekali untuk contoh di sebelah kanan ini.

306
00:21:03,420 --> 00:21:07,600
Kejadian langka itu mengganggu kemampuan kita menghitung bilangan

307
00:21:07,600 --> 00:21:09,320
berliku, tapi hei, kita mendapat angka nol.

308
00:21:09,320 --> 00:21:13,320
Dan untuk loop yang nomor belitannya nol, Anda tidak perlu menjelajahinya lebih jauh.

309
00:21:13,320 --> 00:21:18,520
Mungkin mereka punya solusi di dalam, mungkin juga tidak, kami tidak punya jaminan.

310
00:21:18,520 --> 00:21:22,240
Dan membiarkan pemecah persamaan kita melanjutkan dengan cara yang sama, pada

311
00:21:22,240 --> 00:21:26,020
akhirnya persamaan tersebut akan menyatu menjadi banyak nol untuk polinomial ini.

312
00:21:26,020 --> 00:21:30,400
Ngomong-ngomong, bukan suatu kebetulan jika jumlah total

313
00:21:30,400 --> 00:21:31,660
belitan dalam contoh ini adalah 5.

314
00:21:31,660 --> 00:21:37,280
Dengan bilangan kompleks, operasi x ke n secara langsung berhubungan dengan berjalan mengelilingi

315
00:21:37,280 --> 00:21:45,000
asal keluaran sebanyak n kali saat Anda mengelilingi asal masukan satu kali.

316
00:21:45,000 --> 00:21:50,500
Jadi dengan polinomial, untuk masukan yang cukup besar, setiap

317
00:21:50,500 --> 00:21:52,700
suku selain suku utama menjadi tidak signifikan jika dibandingkan.

318
00:21:52,700 --> 00:21:58,780
Jadi setiap polinomial kompleks yang suku utamanya adalah x ke n

319
00:21:58,780 --> 00:22:00,700
mempunyai bilangan belitan n di sekitar loop yang cukup besar.

320
00:22:00,700 --> 00:22:06,240
Dan dengan cara itu, teknologi bilangan berliku kami

321
00:22:06,240 --> 00:22:07,620
menjamin bahwa setiap polinomial kompleks memiliki nol.

322
00:22:07,620 --> 00:22:13,880
Fakta ini sangat penting sehingga para ahli matematika menyebutnya sebagai teorema dasar aljabar.

323
00:22:13,880 --> 00:22:18,040
Memiliki algoritma untuk menemukan solusi numerik terhadap persamaan seperti ini

324
00:22:18,040 --> 00:22:22,420
sangatlah praktis, namun teorema dasar aljabar adalah contoh yang baik

325
00:22:22,420 --> 00:22:27,780
tentang bagaimana bilangan berliku ini juga cukup berguna pada tingkat

326
00:22:27,780 --> 00:22:32,280
teoritis, menjamin adanya solusi untuk kelas yang luas. persamaan untuk

327
00:22:32,280 --> 00:22:34,060
kondisi yang sesuai, yang lebih disukai para ahli matematika.

328
00:22:34,400 --> 00:22:39,360
Saya akan menunjukkan kepada Anda beberapa penerapan menakjubkan ini dalam konteks topologi

329
00:22:39,360 --> 00:22:44,080
dalam video tindak lanjut, termasuk memperbaiki kesalahan dari video 3blue1Brown lama.

330
00:22:44,080 --> 00:22:45,080
Yang mana?

331
00:22:45,080 --> 00:22:48,740
Tonton semua videonya, semua yang ada di saluran ini,

332
00:22:48,740 --> 00:22:51,640
dan lihat apakah Anda dapat menemukan kesalahannya terlebih dahulu.

333
00:22:51,640 --> 00:22:55,960
Penulis utama video ini adalah salah satu

334
00:22:55,960 --> 00:22:56,460
anggota tim 3blue1 brown terbaru, Sridhar Ramesh.

