1
00:00:07,740 --> 00:00:10,885
앞으로의 몇 달은 많은 노력, 깔끔한 예제, 

2
00:00:10,885 --> 00:00:14,281
깔끔하지 않은 예제, 물리학과의 아름다운 연결, 

3
00:00:14,281 --> 00:00:17,427
외워야 할 수식 더미, 벽에 머리를 부딪히며 

4
00:00:17,427 --> 00:00:20,446
막히는 순간이 많았고, 그 사이사이에 멋진 

5
00:00:20,446 --> 00:00:23,465
아하 순간도 몇 번 있었고, 이 모든 것을 

6
00:00:23,465 --> 00:00:27,240
안내해 주는 정말 멋진 그래픽 직관도 몇 번 있었어요.

7
00:00:27,630 --> 00:00:30,446
하지만 여러분 앞에 놓인 강좌가 제가 처음 접했던 

8
00:00:30,446 --> 00:00:33,364
미적분학 입문이나 그 이후 몇 년 동안 보았던 어떤 

9
00:00:33,364 --> 00:00:36,281
강좌와 비슷하다면, 여러분이 보지 못하지만 여러분의 

10
00:00:36,281 --> 00:00:38,897
학습을 크게 가속화할 수 있는 한 가지 주제가 

11
00:00:38,897 --> 00:00:39,400
있습니다.

12
00:00:40,280 --> 00:00:42,721
첫해의 거의 모든 시각적 직관은 

13
00:00:42,721 --> 00:00:44,620
그래프를 기반으로 합니다.

14
00:00:45,080 --> 00:00:47,311
미분은 그래프의 기울기이고 적분은 

15
00:00:47,311 --> 00:00:49,660
해당 그래프 아래의 특정 영역입니다.

16
00:00:50,200 --> 00:00:52,881
하지만 입력과 출력이 단순히 숫자인 함수를 

17
00:00:52,881 --> 00:00:55,562
넘어 미적분을 일반화하면 분석 중인 함수를 

18
00:00:55,562 --> 00:00:58,020
그래프로 그릴 수 없는 경우가 있습니다.

19
00:01:00,680 --> 00:01:04,139
따라서 파생상품과 같은 기본 개념에 대한 모든 

20
00:01:04,139 --> 00:01:07,998
직관이 그래프에 너무 엄격하게 뿌리를 두고 있다면, 

21
00:01:07,998 --> 00:01:11,458
다변수 미적분, 복소 분석, 미분 기하학 같은 

22
00:01:11,458 --> 00:01:14,519
인용이 필요 없는 고급 주제와 매우 높고 

23
00:01:14,519 --> 00:01:17,580
불필요한 개념적 장애물이 될 수 있습니다.

24
00:01:18,840 --> 00:01:21,454
제가 여러분과 나누고 싶은 것은 미적분이 

25
00:01:21,454 --> 00:01:23,955
등장하는 좀 더 일반적인 맥락에서 보다 

26
00:01:23,955 --> 00:01:26,797
원활하게 일반화할 수 있는 변형적 관점이라고 

27
00:01:26,797 --> 00:01:29,640
할 수 있는 파생상품에 대한 사고 방식입니다.

28
00:01:29,880 --> 00:01:32,321
그런 다음 이 대체 보기를 사용하여 반복되는 

29
00:01:32,321 --> 00:01:34,860
분수에 대한 재미있는 퍼즐을 분석해 보겠습니다.

30
00:01:35,460 --> 00:01:37,640
하지만 먼저 표준 비주얼이 무엇인지에 대해 모두 

31
00:01:37,640 --> 00:01:39,660
같은 생각을 가지고 있는지 확인하고 싶습니다.

32
00:01:40,060 --> 00:01:43,412
단순히 실수를 입력과 출력으로 사용하는 함수를 

33
00:01:43,412 --> 00:01:46,764
그래프로 그릴 때 미적분학 수업에서 가장 먼저 

34
00:01:46,764 --> 00:01:50,503
배우는 것 중 하나는 도함수가 이 그래프의 기울기를 

35
00:01:50,503 --> 00:01:53,985
제공한다는 것입니다. 여기서 도함수란 모든 입력 

36
00:01:53,985 --> 00:01:57,595
x에 대해 해당 기울기를 반환하는 새로운 함수라는 

37
00:01:57,595 --> 00:01:58,240
뜻입니다.

38
00:01:59,520 --> 00:02:01,931
이제 이 파생상품을 기울기 개념으로 생각하지 

39
00:02:01,931 --> 00:02:04,440
마시고 파생상품의 정의로 생각하시면 좋겠습니다.

40
00:02:05,000 --> 00:02:06,865
보다 근본적으로는 기능이 입력 주변의 

41
00:02:06,865 --> 00:02:08,909
작은 넛지에 얼마나 민감하게 반응하는지에 

42
00:02:08,909 --> 00:02:10,419
대한 문제라고 생각하면 됩니다.

43
00:02:11,020 --> 00:02:13,910
그리고 경사도는 이 특정 기능 보기 방식에만 관련된 

44
00:02:13,910 --> 00:02:16,900
감도에 대해 생각할 수 있는 한 가지 방법일 뿐입니다.

45
00:02:17,340 --> 00:02:19,686
이 주제에 대해 더 자세히 알아보고 싶다면 다른 

46
00:02:19,686 --> 00:02:22,120
동영상뿐만 아니라 전체 시리즈도 준비되어 있습니다.

47
00:02:22,600 --> 00:02:26,006
도함수에 대한 대체 비주얼의 기본 아이디어는 이 

48
00:02:26,006 --> 00:02:29,287
함수를 숫자 선의 모든 입력 지점을 다른 숫자 

49
00:02:29,287 --> 00:02:32,820
선의 해당 출력에 매핑하는 것으로 생각하면 됩니다.

50
00:02:33,400 --> 00:02:35,673
이러한 맥락에서 파생물이 제공하는 것은 

51
00:02:35,673 --> 00:02:37,740
입력 공간이 다양한 영역에서 얼마나 

52
00:02:37,740 --> 00:02:40,220
늘어나거나 찌그러지는지를 측정하는 것입니다.

53
00:02:41,860 --> 00:02:45,583
즉, 특정 입력 주위를 확대하여 그 주위에 

54
00:02:45,583 --> 00:02:48,842
균등하게 배치된 점들을 살펴보면 해당 

55
00:02:48,842 --> 00:02:52,255
입력의 함수 미분을 통해 매핑 후 해당 

56
00:02:52,255 --> 00:02:56,600
점들이 얼마나 퍼지거나 수축되는지 알 수 있습니다.

57
00:02:57,940 --> 00:02:59,400
여기 구체적인 예시가 도움이 될 것입니다.

58
00:02:59,740 --> 00:03:03,158
x2 함수를 사용하면 1을 1로, 2를 4로, 

59
00:03:03,158 --> 00:03:05,920
3을 9로 매핑하는 식으로 매핑합니다.

60
00:03:06,480 --> 00:03:07,705
또한 그 사이의 모든 지점에서 

61
00:03:07,705 --> 00:03:09,220
어떻게 작동하는지 확인할 수 있습니다.

62
00:03:12,720 --> 00:03:15,925
입력 1 주변의 작은 점 클러스터를 확대하여 

63
00:03:15,925 --> 00:03:18,874
관련 출력(이 함수의 경우 1이기도 함) 

64
00:03:18,874 --> 00:03:21,566
주위에 점들이 놓이는 위치를 확인하면 

65
00:03:21,566 --> 00:03:24,900
점들이 늘어나는 경향이 있음을 알 수 있습니다.

66
00:03:25,760 --> 00:03:29,020
실제로는 대략 2배 정도 늘어나는 것처럼 보입니다.

67
00:03:29,660 --> 00:03:33,762
확대하면 확대할수록 이 국부적인 동작이 마치 a를 

68
00:03:33,762 --> 00:03:37,424
곱하는 것처럼 보입니다. 입력 x가 1일 때 

69
00:03:37,424 --> 00:03:41,820
x2의 도함수가 2가 되는 것이 바로 이런 의미입니다.

70
00:03:42,340 --> 00:03:43,987
이것이 바로 트랜스포메이션의 맥락에서 

71
00:03:43,987 --> 00:03:45,400
그 사실이 어떻게 보이는지입니다.

72
00:03:46,460 --> 00:03:49,769
입력 3 주변의 점 주변을 보면 

73
00:03:49,769 --> 00:03:52,160
6배로 늘어나게 됩니다.

74
00:03:52,740 --> 00:03:55,207
입력 3에서 이 함수의 도함수가 6과 

75
00:03:55,207 --> 00:03:57,440
같다는 것은 바로 이런 의미입니다.

76
00:03:58,980 --> 00:04:01,981
입력 1 4번째 주변에서 작은 영역은 특히 

77
00:04:01,981 --> 00:04:04,733
1의 절반만큼 수축하는 경향이 있으며, 

78
00:04:04,733 --> 00:04:08,360
이는 파생상품이 1보다 작을 때 나타나는 현상입니다.

79
00:04:10,720 --> 00:04:12,600
입력 0은 흥미롭습니다.

80
00:04:13,120 --> 00:04:15,540
10배로 확대해도 계속 늘어나거나 

81
00:04:15,540 --> 00:04:17,959
찌그러지는 것처럼 보이지 않습니다.

82
00:04:18,380 --> 00:04:21,680
우선, 모든 결과물은 긍정적인 측면으로 귀결됩니다.

83
00:04:23,320 --> 00:04:30,883
점점 더 가까이, 100배 또는 1000배로 

84
00:04:30,883 --> 00:04:39,960
확대하면 점점 더 미분값이 0이 되는 것처럼 보입니다.

85
00:04:40,500 --> 00:04:42,828
로컬 동작은 점점 더 정수선에 

86
00:04:42,828 --> 00:04:45,020
0을 곱하는 것처럼 보입니다.

87
00:04:45,680 --> 00:04:48,334
특정 확대/축소 수준에서 모든 것을 한 지점으로 

88
00:04:48,334 --> 00:04:50,005
완전히 축소할 필요는 없으며, 

89
00:04:50,005 --> 00:04:52,365
점점 더 가까이 확대할 때 제한되는 동작이 

90
00:04:52,365 --> 00:04:53,840
무엇인지에 따라 달라집니다.

91
00:04:55,280 --> 00:04:58,960
여기에서 부정적인 입력을 살펴보는 것도 유익합니다.

92
00:05:00,700 --> 00:05:03,317
모든 양수 입력값과 충돌하기 때문에 약간 

93
00:05:03,317 --> 00:05:05,365
비좁은 느낌이 들기 시작하는데, 

94
00:05:05,365 --> 00:05:08,780
이는 함수를 변환으로 생각할 때의 단점 중 하나입니다.

95
00:05:09,400 --> 00:05:11,579
하지만 파생상품의 경우, 우리는 어쨌든 

96
00:05:11,579 --> 00:05:13,460
주어진 입력 주변의 작은 범위에서 

97
00:05:13,460 --> 00:05:15,640
일어나는 로컬 동작에만 관심을 갖습니다.

98
00:05:16,500 --> 00:05:18,991
여기서 음수 2 주변의 작은 이웃에 

99
00:05:18,991 --> 00:05:21,359
있는 입력이 단순히 늘어나는 것이 

100
00:05:21,359 --> 00:05:24,100
아니라 뒤집어지는 것을 볼 수 있습니다.

101
00:05:24,680 --> 00:05:28,322
특히, 이러한 이웃에 대한 동작은 확대할수록 

102
00:05:28,322 --> 00:05:31,820
점점 더 음수 4를 곱하는 것처럼 보입니다.

103
00:05:32,320 --> 00:05:35,600
함수의 도함수가 음수인 경우의 모습입니다.

104
00:05:38,460 --> 00:05:40,956
요점을 이해하신 것 같지만, 이것이 실제로 

105
00:05:40,956 --> 00:05:43,660
문제를 해결하는 데 어떻게 유용한지 살펴봅시다.

106
00:05:44,260 --> 00:05:47,364
최근 제 친구가 무한분수 1 더하기 1 곱하기 1 

107
00:05:47,364 --> 00:05:50,580
곱하기 1 곱하기 1 곱하기 1에 대해 꽤 재미있는 

108
00:05:50,580 --> 00:05:53,907
질문을 했는데요, 온라인에서 수학 동영상을 보신 적이 

109
00:05:53,907 --> 00:05:56,346
있으시니 아마 보신 적이 있으시겠지만, 

110
00:05:56,346 --> 00:05:59,119
제 친구의 질문은 사실 여기서 살펴보고 있는 

111
00:05:59,119 --> 00:06:02,334
파생상품의 관점과 관련하여 여러분이 이전에 생각하지 

112
00:06:02,334 --> 00:06:04,220
못했던 부분으로 연결이 됩니다.

113
00:06:05,020 --> 00:06:07,773
이와 같은 식을 평가하는 일반적인 방법은 

114
00:06:07,773 --> 00:06:10,527
식을 x와 동일하게 설정한 다음 그 안에 

115
00:06:10,527 --> 00:06:13,640
전체 분수의 복사본이 있음을 확인하는 것입니다.

116
00:06:14,700 --> 00:06:16,798
따라서 해당 복사본을 다른 x로 

117
00:06:16,798 --> 00:06:18,780
대체한 다음 x를 풀면 됩니다.

118
00:06:19,440 --> 00:06:22,132
즉, 원하는 것은 1 더하기 1을 x로 

119
00:06:22,132 --> 00:06:24,580
나눈 함수의 고정점을 찾는 것입니다.

120
00:06:27,160 --> 00:06:30,150
하지만 실제로 X에 대한 두 가지 해결책, 

121
00:06:30,150 --> 00:06:33,265
즉 1 더하기 1을 해당 숫자로 나누면 같은 

122
00:06:33,265 --> 00:06:36,380
결과가 나오는 두 가지 특수 숫자가 있습니다.

123
00:06:36,940 --> 00:06:41,031
하나는 약 1.618의 황금 비율인 파이이고, 

124
00:06:41,031 --> 00:06:44,179
다른 하나는 음수 0.618로 음수 

125
00:06:44,179 --> 00:06:46,540
1을 파이로 나눈 값입니다.

126
00:06:46,960 --> 00:06:49,405
저는 이 다른 번호를 파이의 동생이라고 부르는데, 

127
00:06:49,405 --> 00:06:51,240
파이가 가지고 있는 거의 모든 속성을 

128
00:06:51,240 --> 00:06:52,900
이 번호도 가지고 있기 때문입니다.

129
00:06:53,560 --> 00:06:57,185
그리고 이것은 우리가 본 무한 분수가 어떻게든 

130
00:06:57,185 --> 00:07:00,253
파이의 동생인 음수 0.618과 같다고 

131
00:07:00,253 --> 00:07:03,600
말하는 것이 타당할까라는 의문을 제기합니다.

132
00:07:04,520 --> 00:07:07,953
처음에는 왼쪽에 있는 모든 것이 양수인데 어떻게 

133
00:07:07,953 --> 00:07:11,260
음수와 같을 수 있느냐고 반문할 수도 있습니다.

134
00:07:12,500 --> 00:07:14,865
먼저 이런 표현이 실제로 무엇을 

135
00:07:14,865 --> 00:07:17,100
의미하는지 명확히 해야 합니다.

136
00:07:17,780 --> 00:07:21,430
1과 같은 상수에서 시작하여 1 더하기 1을 

137
00:07:21,430 --> 00:07:24,935
x로 나눈 함수를 반복적으로 적용한 다음, 

138
00:07:24,935 --> 00:07:28,878
계속 진행하면서 이 접근 방식은 무엇일지 상상해 

139
00:07:28,878 --> 00:07:33,260
보는 것도 한 가지 방법이며, 유일한 방법은 아닙니다.

140
00:07:36,040 --> 00:07:38,340
물론 상징적으로 보면 점점 더 무한 분수와 

141
00:07:38,340 --> 00:07:40,640
비슷해지지만, 숫자를 동일시하고 싶다면 이 

142
00:07:40,640 --> 00:07:43,420
일련의 숫자가 무엇에 가까운지 물어봐야 할 것입니다.

143
00:07:45,120 --> 00:07:48,210
그렇게 생각한다면 음수로 시작해서 전체 표현이 

144
00:07:48,210 --> 00:07:51,300
음수로 끝나는 것도 이상하지 않을 수 있습니다.

145
00:07:52,740 --> 00:07:55,990
결국, 음수 1을 파이로 나눈 값으로 시작해서 

146
00:07:55,990 --> 00:07:59,240
이 함수를 x에 1 더하기 1을 적용하면 같은 

147
00:07:59,240 --> 00:08:02,615
값인 음수 1을 파이로 나눈 값이 나오기 때문에 

148
00:08:02,615 --> 00:08:05,740
몇 번을 적용해도 이 값에 고정되어 있습니다.

149
00:08:07,820 --> 00:08:10,520
하지만 그럼에도 불구하고 파이를 이 쌍에서 가장 

150
00:08:10,520 --> 00:08:13,420
좋아하는 형으로 봐야 하는 이유가 한 가지 있습니다.

151
00:08:14,020 --> 00:08:17,665
여기, 계산기 같은 것을 띄우고 임의의 숫자로 

152
00:08:17,665 --> 00:08:21,871
시작하여 이 함수에 1 더하기 1을 x로 나눈 다음, 

153
00:08:21,871 --> 00:08:25,095
그 숫자를 1 더하기 1에 x를 곱하고, 

154
00:08:25,095 --> 00:08:28,040
또 곱하고, 또 곱하고, 또 곱하세요.

155
00:08:28,480 --> 00:08:33,159
어떤 상수로 시작하든 결국 1.618로 끝납니다.

156
00:08:33,799 --> 00:08:36,799
음수로 시작하더라도, 심지어 파이의 

157
00:08:36,799 --> 00:08:39,949
동생에 매우 가까운 음수라도 결국에는 

158
00:08:39,949 --> 00:08:43,400
그 값에서 벗어나 파이로 다시 점프합니다.

159
00:08:50,820 --> 00:08:52,460
그래서 무슨 일이 일어나고 있는 걸까요?

160
00:08:52,800 --> 00:08:54,620
이 고정점 중 하나가 다른 고정점보다 

161
00:08:54,620 --> 00:08:55,920
선호되는 이유는 무엇인가요?

162
00:08:56,720 --> 00:08:59,431
파생상품에 대한 변형적 이해가 이 설정을 이해하는 

163
00:08:59,431 --> 00:09:01,948
데 어떻게 도움이 되는지 이미 알고 계실 수도 

164
00:09:01,948 --> 00:09:04,562
있지만, 대비를 위해 이와 같은 문제를 그래프를 

165
00:09:04,562 --> 00:09:07,080
사용하여 어떻게 가르치는지 보여드리고자 합니다.

166
00:09:07,920 --> 00:09:10,901
이 함수에 임의의 입력을 연결하면 

167
00:09:10,901 --> 00:09:14,040
Y 값으로 해당 출력을 알 수 있죠?

168
00:09:14,040 --> 00:09:17,399
따라서 이 출력을 함수에 다시 연결하는 

169
00:09:17,399 --> 00:09:20,910
방법을 생각해보려면 먼저 가로로 이동하여 

170
00:09:20,910 --> 00:09:24,270
y가 x와 같은 선에 도달하면 x 값이 

171
00:09:24,270 --> 00:09:28,240
이전 y 값에 해당하는 위치를 얻을 수 있겠죠?

172
00:09:28,920 --> 00:09:31,316
그런 다음 거기에서 수직으로 이동하여 

173
00:09:31,316 --> 00:09:33,369
이 새로운 x 값이 어떤 출력을 

174
00:09:33,369 --> 00:09:35,880
갖는지 확인한 다음 반복할 수 있습니다.

175
00:09:36,340 --> 00:09:38,949
가로로 y = x 선으로 이동하여 방금 

176
00:09:38,949 --> 00:09:41,795
얻은 결과와 같은 x 값을 갖는 점을 찾은 

177
00:09:41,795 --> 00:09:44,760
다음 세로로 이동하여 함수를 다시 적용합니다.

178
00:09:45,880 --> 00:09:48,173
개인적으로는 함수를 반복적으로 적용하는 

179
00:09:48,173 --> 00:09:50,780
것이 다소 어색한 방식이라고 생각하지 않나요?

180
00:09:51,300 --> 00:09:53,920
말이 되는 말이지만, 어느 방향으로 선을 그려야 

181
00:09:53,920 --> 00:09:56,540
할지 기억하려면 잠시 멈춰서 생각해 봐야 합니다.

182
00:09:57,120 --> 00:09:59,981
그리고 원한다면 어떤 조건에서 거미줄 프로세스가 

183
00:09:59,981 --> 00:10:02,842
고정된 지점에서 좁혀지는지, 아니면 그 지점에서 

184
00:10:02,842 --> 00:10:05,280
멀어져 전파되는지 생각해 볼 수 있습니다.

185
00:10:05,860 --> 00:10:08,900
지금 잠시 멈추고 연습 삼아 생각해 보세요.

186
00:10:09,240 --> 00:10:10,460
경사면과 관련이 있습니다.

187
00:10:12,020 --> 00:10:14,553
또는 훨씬 더 만족스러운 이해를 위해 

188
00:10:14,553 --> 00:10:16,845
연습을 건너뛰고 싶다면 이 함수가 

189
00:10:16,845 --> 00:10:19,620
어떻게 변형으로 작용하는지 생각해 보세요.

190
00:10:22,280 --> 00:10:24,855
여기서는 샘플링된 다양한 입력 지점이 어디로 

191
00:10:24,855 --> 00:10:27,740
이동할지 나타내는 화살표를 여러 개 그려보겠습니다.

192
00:10:28,320 --> 00:10:30,044
참고로, 이렇게 하면 깔끔한 이머전시 

193
00:10:30,044 --> 00:10:31,440
패턴을 만들 수 있지 않을까요?

194
00:10:31,820 --> 00:10:33,461
예상하지 못했지만 애니메이션을 만들 

195
00:10:33,461 --> 00:10:35,020
때 팝업되는 것을 보니 멋졌습니다.

196
00:10:35,020 --> 00:10:38,497
1을 x로 나눈 연산이 멋진 이머징 원을 만들어내고, 

197
00:10:38,497 --> 00:10:41,280
그 다음에는 1을 1로 이동하는 것뿐입니다.

198
00:10:42,040 --> 00:10:44,201
어쨌든, 1 더하기 1 위에 x와 같은 

199
00:10:44,201 --> 00:10:46,165
함수를 반복적으로 적용하는 것이 이 

200
00:10:46,165 --> 00:10:48,720
맥락에서 어떤 의미인지 생각해 보셨으면 합니다.

201
00:10:50,240 --> 00:10:53,816
모든 입력을 출력에 매핑한 후에는 이를 새로운 

202
00:10:53,816 --> 00:10:57,668
입력으로 간주하고 동일한 프로세스를 다시 적용하고 

203
00:10:57,668 --> 00:11:01,520
다시 적용하고 원하는 횟수만큼 반복할 수 있습니다.

204
00:11:02,580 --> 00:11:05,793
샘플 포인트를 나타내는 몇 개의 점으로 애니메이션을 

205
00:11:05,793 --> 00:11:08,896
만들 때, 모든 점이 약 1.618에서 뭉치기까지 

206
00:11:08,896 --> 00:11:12,000
많은 반복이 필요하지 않다는 것을 알 수 있습니다.

207
00:11:14,620 --> 00:11:17,320
이제 1.618과 그 동생인 음수 

208
00:11:17,320 --> 00:11:20,021
0.618이 이 프로세스를 반복할 

209
00:11:20,021 --> 00:11:23,860
때마다 제자리에 고정되어 있다는 것을 기억하세요.

210
00:11:24,860 --> 00:11:27,480
하지만 파이 주변 지역을 확대하세요.

211
00:11:27,480 --> 00:11:31,286
맵에서 해당 영역의 점들은 파이를 중심으로 

212
00:11:31,286 --> 00:11:35,727
수축되는데, 이는 x에 대한 1 더하기 1 함수가 

213
00:11:35,727 --> 00:11:40,168
이 입력에서 1보다 작은 크기의 도함수를 갖는다는 

214
00:11:40,168 --> 00:11:41,120
의미입니다.

215
00:11:41,880 --> 00:11:43,914
실제로 이 파생상품은 약 마이너스 

216
00:11:43,914 --> 00:11:45,200
0.38로 계산됩니다.

217
00:11:46,120 --> 00:11:48,707
즉, 반복해서 적용할 때마다 파이를 

218
00:11:48,707 --> 00:11:51,424
향해 중력이 당기는 것처럼 이 숫자의 

219
00:11:51,424 --> 00:11:54,400
주변을 점점 더 작게 긁어낸다는 뜻입니다.

220
00:11:54,960 --> 00:11:56,834
이제 피의 동생이 사는 동네에서 어떤 

221
00:11:56,834 --> 00:11:58,620
일이 일어날 것 같은지 말해 보세요.

222
00:12:01,320 --> 00:12:04,984
저기 도함수는 실제로 1보다 큰 크기를 가지므로 

223
00:12:04,984 --> 00:12:08,920
고정점 근처의 점들은 이 도함수에서 멀어지게 됩니다.

224
00:12:09,520 --> 00:12:11,767
계산을 해보면 각 반복마다 2배 이상 

225
00:12:11,767 --> 00:12:13,800
늘어나는 것을 확인할 수 있습니다.

226
00:12:14,420 --> 00:12:17,511
여기서 파생상품이 음수이기 때문에 뒤집어지기도 

227
00:12:17,511 --> 00:12:20,840
하지만, 안정성을 위해 중요한 것은 그 크기입니다.

228
00:12:23,440 --> 00:12:26,462
수학자들은 이 오른쪽 값을 안정된 고정점, 

229
00:12:26,462 --> 00:12:29,360
왼쪽 값을 불안정한 고정점이라고 부릅니다.

230
00:12:30,000 --> 00:12:32,293
어떤 물체를 조금만 흔들어도 멀어지는 

231
00:12:32,293 --> 00:12:34,696
것이 아니라 원래 있던 곳으로 돌아오는 

232
00:12:34,696 --> 00:12:37,100
경향이 있다면 안정된 것으로 간주합니다.

233
00:12:38,180 --> 00:12:41,358
따라서 고정점의 안정성은 도함수의 크기가 

234
00:12:41,358 --> 00:12:44,536
1보다 크냐 작냐에 따라 결정된다는 매우 

235
00:12:44,536 --> 00:12:47,300
유용한 작은 사실을 알 수 있습니다.

236
00:12:47,300 --> 00:12:49,849
계산기의 엔터 키를 계속 누르는 숫자 

237
00:12:49,849 --> 00:12:52,035
놀이에 항상 파이가 등장하지만, 

238
00:12:52,035 --> 00:12:54,707
파이의 동생은 절대 그렇지 않은 이유가 

239
00:12:54,707 --> 00:12:55,800
여기에 있습니다.

240
00:12:56,460 --> 00:12:59,473
파이의 동생을 무한 분수의 유효한 값으로 

241
00:12:59,473 --> 00:13:02,880
간주할지 여부는 여러분의 선택에 달려 있습니다.

242
00:13:03,260 --> 00:13:05,882
방금 살펴본 모든 것을 통해 이 표현식을 

243
00:13:05,882 --> 00:13:08,732
제한적인 과정을 나타내는 것으로 생각한다면, 

244
00:13:08,732 --> 00:13:11,469
파이의 동생 이외의 모든 가능한 시드 값은 

245
00:13:11,469 --> 00:13:14,319
파이에 수렴하는 급수를 제공하기 때문에 서로 

246
00:13:14,319 --> 00:13:17,740
동등한 위치에 놓는 것은 어리석게 느껴질 수 있습니다.

247
00:13:18,260 --> 00:13:20,894
하지만 여러분은 이를 한계라고 생각하지 않을 

248
00:13:20,894 --> 00:13:23,740
수도 있고, 여러분이 하는 수학의 종류가 단순히 

249
00:13:23,740 --> 00:13:26,269
여러 값을 갖는 다항식의 해와 같은 순수한 

250
00:13:26,269 --> 00:13:29,220
대수적 대상으로 취급하는 데 적합할 수도 있습니다.

251
00:13:30,340 --> 00:13:32,604
어쨌든, 그것은 요점을 벗어난 것이며, 

252
00:13:32,604 --> 00:13:35,383
여기서 제 요점은 파생상품을 이러한 밀도 변화로 

253
00:13:35,383 --> 00:13:38,265
보는 것이 전체적으로 그래픽 직관보다 낫다는 것이 

254
00:13:38,265 --> 00:13:38,780
아닙니다.

255
00:13:39,600 --> 00:13:41,988
사실 전체 함수를 이런 식으로 표현하는 것은 

256
00:13:41,988 --> 00:13:44,760
그래프에 비해 다소 투박하고 비실용적일 수 있습니다.

257
00:13:45,340 --> 00:13:48,092
미분을 좀 더 유연하게 이해하는 데 도움이 

258
00:13:48,092 --> 00:13:50,729
될 수 있기 때문에 대부분의 미적분 입문 

259
00:13:50,729 --> 00:13:53,940
강좌에서 더 많이 언급할 가치가 있다고 생각합니다.

260
00:13:54,900 --> 00:13:57,400
앞서 말씀드린 것처럼, 새로운 주제를 배울 때 

261
00:13:57,400 --> 00:13:59,998
이 관점을 가져가라고 권하는 진짜 이유는 단변수 

262
00:13:59,998 --> 00:14:02,595
미적분을 이해하는 데 도움이 되기 때문이 아니라 

263
00:14:02,595 --> 00:14:05,000
그 이후에 일어날 일을 생각하기 위해서입니다.

