1
00:00:00,000 --> 00:00:09,160
전혀 관련이 없어 보이는 것들이 중요한 연관성을 갖고 있는 것으로 밝혀졌을 때 느끼는 느낌을 아시나요?

2
00:00:09,160 --> 00:00:15,380
특히 수학에서는 이러한 연결 중 하나가 제대로 작동하지 않을 때마다 느끼는 얼얼한 느낌이 있습니다.

3
00:00:15,380 --> 00:00:17,960
이것이 제가 오늘 여러분을 위해 준비한 것입니다.

4
00:00:17,960 --> 00:00:23,736
설정하는 데 시간이 좀 걸립니다. 도난당한 목걸이 문제라고 하는 이산 수학의 공정한 분할

5
00:00:23,736 --> 00:00:29,860
퍼즐과 이를 해결하는 데 사용할 구에 대한 위상학적 사실인 보르숙-울람 정리를 소개해야 합니다.

6
00:00:29,860 --> 00:00:36,000
하지만 저를 믿으십시오. 겉보기에 단절되어 있는 것처럼 보이는 이 두 가지 수학 조각이 함께 결합되는 것을 보는 것은 설정할만한 가치가 있습니다.

7
00:00:36,000 --> 00:00:38,540
우리가 풀 퍼즐부터 시작하겠습니다.

8
00:00:38,540 --> 00:00:45,260
당신과 당신의 친구는 많은 보석으로 가득 찬 목걸이를 훔쳤습니다. 아마도 사파이어, 에메랄드, 다이아몬드, 루비가 들어 있을 수도 있습니다.

9
00:00:45,260 --> 00:00:49,140
그것들은 모두 무작위 순서로 목걸이에 배열되어 있습니다.

10
00:00:49,140 --> 00:00:53,240
그리고 각 유형의 보석이 짝수개라고 가정해 보겠습니다.

11
00:00:53,240 --> 00:00:59,040
여기에는 사파이어 8개, 에메랄드 10개, 다이아몬드 4개, 루비 6개가 있습니다.

12
00:00:59,040 --> 00:01:05,301
당신과 당신의 친구는 각 보석 유형의 절반, 즉 사파이어 4개, 에메랄드 5개, 다이아몬드 2개,

13
00:01:05,301 --> 00:01:09,400
루비 3개를 각자 가져가면서 전리품을 균등하게 나누고 싶어합니다.

14
00:01:09,400 --> 00:01:14,920
물론 보석을 모두 잘라서 균등하게 나눌 수도 있지만 그건 지루하고 퍼즐도 없습니다.

15
00:01:14,920 --> 00:01:26,840
대신, 도전 과제는 목걸이를 가능한 한 적게 잘라서 결과 세그먼트를 당신과 공모자 사이에 나누어 각 보석 유형의 절반을 가져가는 것입니다.

16
00:01:26,840 --> 00:01:31,320
예를 들어 제가 여기서 보여드리는 편곡은 4컷으로만 했어요.

17
00:01:31,320 --> 00:01:45,320
내가 당신에게 위쪽 3가닥을 주고, 이 아래 2가닥을 공모자에게 준다면, 당신은 각각 사파이어 4개, 에메랄드 5개, 다이아몬드 2개, 루비 3개를 갖게 됩니다.

18
00:01:45,320 --> 00:01:56,700
제가 이 영상에서 증명하고 싶은 주장은 N개의 서로 다른 보석 유형이 있는 경우 N개 이하의 컷만으로 공평한 분할을 수행하는 것이 항상 가능하다는 것입니다.

19
00:01:56,700 --> 00:02:03,039
따라서 4가지 보석 유형의 경우 보석의 무작위 순서에 관계없이 4곳으로 자르고 5개의

20
00:02:03,039 --> 00:02:10,040
목걸이 조각을 나누어 각 도둑이 각 보석 유형의 동일한 수를 갖도록 하는 것이 가능해야 합니다.

21
00:02:10,040 --> 00:02:15,080
5가지 보석 유형을 사용하면 배열 등에 상관없이 5컷으로 할 수 있습니다.

22
00:02:15,080 --> 00:02:17,840
생각하기 좀 힘들죠?

23
00:02:17,840 --> 00:02:24,600
이러한 다양한 보석 유형을 모두 추적하여 공평하게 나누어야 하며 가능한 한 최소한으로 잘라야 합니다.

24
00:02:24,600 --> 00:02:29,080
그리고 이것을 시도해보면 이것은 증명하기가 놀라울 정도로 어려운 사실입니다.

25
00:02:29,080 --> 00:02:35,864
퍼즐이 약간 인위적으로 보일 수도 있지만, 샤딩을 최소화하고 일부 컬렉션을 균형 잡힌 방식으로

26
00:02:35,864 --> 00:02:43,160
할당하는 것과 같은 핵심 특성은 실제 응용 프로그램에서 실제로 자주 나타나는 일종의 최적화 문제입니다.

27
00:02:43,160 --> 00:02:49,760
여러분 중의 컴퓨터 시스템 사람들이라면 이것이 일종의 효율적인 메모리 할당 문제와 어떻게 유사한지 상상할 수 있을 것입니다.

28
00:02:49,760 --> 00:02:57,040
또한 궁금한 분들을 위해 설명에 이 특정 문제를 적용한 전기 공학 논문에 대한 링크를 남겨 두었습니다.

29
00:02:57,040 --> 00:03:00,840
그러나 유용성과는 별개로 확실히 좋은 퍼즐이 됩니다.

30
00:03:00,840 --> 00:03:06,520
보석의 종류만큼만 잘라서 공정한 구분을 항상 찾을 수 있습니까?

31
00:03:06,520 --> 00:03:16,520
이것이 바로 퍼즐입니다. 기억하세요. 이제 우리는 수학적 세계의 정반대인 위상수학으로 겉보기에 관련이 없어 보이는 회피 방법을 택합니다.

32
00:03:16,520 --> 00:03:24,600
3D 공간에서 구를 가져와 어떻게든 2D 평면에 밀어넣고 원하는 대로 늘리고 모핑하는 것을 상상해 보세요.

33
00:03:24,600 --> 00:03:29,565
내가 물어볼 유일한 제약은 이 작업을 지속적으로 수행해야 한다는 것입니다. 이는 이

34
00:03:29,565 --> 00:03:34,320
매핑 중에 구를 자르거나 어떤 식으로든 찢지 않는다는 의미로 생각할 수 있습니다.

35
00:03:34,320 --> 00:03:41,280
이렇게 하면 여러 개의 서로 다른 점 쌍이 비행기에 닿으면 서로 겹쳐지는데 이는 실제로 큰 문제가 아닙니다.

36
00:03:41,280 --> 00:03:57,067
Borsuk-Ulam 정리로 알려진 우리가 사용할 특별한 사실은 구의 정반대 측면에서 시작하여 도중에 서로 닿는 한 쌍의 점을 항상 찾을 수 있다는 것입니다.

37
00:03:57,067 --> 00:03:57,600
매핑.

38
00:03:57,600 --> 00:04:03,200
이와 같이 정반대에 있는 점을 대척점 또는 대척점이라고 합니다.

39
00:04:03,200 --> 00:04:16,600
예를 들어, 구를 지구로 생각하고 모든 점을 적도 평면에 직접 투영하는 매핑으로 생각하면 대척점인 북극과 남극은 각각 같은 점에 착륙합니다.

40
00:04:16,600 --> 00:04:27,080
그리고 이 예에서, 그것은 같은 지점에 착륙하는 유일한 대척 쌍이고, 다른 대척 쌍은 어떻게든 서로 오프셋되게 될 것입니다.

41
00:04:27,080 --> 00:04:34,320
이 기능을 약간 조정하면(예: 투영 중에 전단하는 경우) 북극과 남극이 더 이상 서로 착륙하지 않습니다.

42
00:04:34,320 --> 00:04:40,573
그러나 토폴로지 신들이 문을 닫으면 창을 엽니다. 왜냐하면 보르숙-울람 정리는 무슨

43
00:04:40,573 --> 00:04:46,560
일이 있어도 이제 서로 겹쳐지는 다른 대척 쌍이 있어야 함을 보장하기 때문입니다.

44
00:04:46,560 --> 00:04:54,616
Borsuk-Ulam을 소개하는 수학 교육자들이 법적으로 제시해야 하는 이 아이디어를 설명하는

45
00:04:54,616 --> 00:05:03,280
전형적인 예는 지구 반대쪽에 온도와 기압이 모두 정확히 동일한 몇 쌍의 지점이 있어야 한다는 것입니다.

46
00:05:03,280 --> 00:05:12,890
이는 지구 표면의 각 지점을 한 쌍의 숫자와 연결하는 것은 지구 표면을 2D 좌표 평면에 매핑하는 것과 동일하기 때문입니다.

47
00:05:12,890 --> 00:05:18,520
여기서 첫 번째 좌표는 온도를 나타내고 두 번째 좌표는 압력을 나타냅니다.

48
00:05:18,520 --> 00:05:24,220
여기서 암시적인 가정은 지구를 걸을 때 온도와 압력이 각각 지속적으로 변한다는 것입니다.

49
00:05:24,220 --> 00:05:33,920
따라서 이 연관은 구에서 평면으로의 연속적인 매핑이며, 해당 표면을 2차원으로 압축하는 찢어지지 않는 방식입니다.

50
00:05:33,920 --> 00:05:44,028
Borsuk-Ulam이 의미하는 바는 지구상이나 다른 행성의 날씨 패턴이 무엇이든 관계없이 두 개의 대척점이 서로 겹쳐져 있어야 한다는 것입니다.

51
00:05:44,028 --> 00:05:47,480
즉, 동일한 온도-압력 쌍에 매핑된다는 의미입니다.

52
00:05:47,480 --> 00:05:55,400
이 영상을 보고 계시는 여러분은 아마도 마음속으로는 수학자일 것이므로 이것이 사실이라는 것뿐만 아니라 왜 이것이 사실인지 알고 싶을 것입니다.

53
00:05:55,400 --> 00:06:02,120
그럼 토폴로지 방지 랜드에 대해 조금 비켜가 보겠습니다. 이것이 정말 만족스러운 추론이라는 점에 여러분도 동의하실 것입니다.

54
00:06:02,120 --> 00:06:12,511
먼저, 우리가 좀 더 상징적으로 보여주고 싶은 것이 무엇인지 다시 말하면, 구의 점 p를 받아들이고 좌표 쌍을 내뱉는 함수 f가 있다면,

55
00:06:12,511 --> 00:06:20,068
어떤 미친 함수 선택이 있더라도 이것이 무엇인지 보여주고 싶을 것입니다. 즉, 그것이 연속적인 한,

56
00:06:20,068 --> 00:06:29,380
p의 f가 음의 p의 f와 같도록 어떤 점 p를 찾을 수 있을 것입니다. 여기서 음의 p는 구의 반대편에 있는 대척점입니다.

57
00:06:29,380 --> 00:06:36,940
처음에는 작아 보일 수 있는 여기서 핵심 아이디어는 이것을 재정렬하여 f(p) - f(-p)가 0,

58
00:06:36,940 --> 00:06:45,580
0과 같다고 말하고 여기서 왼쪽으로 정의된 p의 새 함수 g에 초점을 맞추는 것입니다. f(p) - f(음수 p).

59
00:06:45,580 --> 00:06:51,660
이런 식으로 우리가 보여줘야 할 것은 g가 구의 어떤 점을 2D 공간의 원점에 매핑한다는 것입니다.

60
00:06:51,660 --> 00:07:02,740
따라서 어디든 착륙할 수 있는 한 쌍의 충돌 지점을 찾는 대신 출력 공간의 한 지점인 원점에만 초점을 맞추는 데 도움이 됩니다.

61
00:07:02,740 --> 00:07:11,020
이 함수 g는 우리에게 도움이 될 매우 특별한 속성을 가지고 있습니다. 즉, 음수 p의 g는 p의 음수 g와 같습니다.

62
00:07:11,020 --> 00:07:16,160
기본적으로 입력을 부정하려면 이러한 용어를 바꾸는 것이 포함됩니다.

63
00:07:16,160 --> 00:07:30,100
즉, 구의 대척점으로 가면 g의 출력이 출력 공간의 원점을 통해 반사되거나, 출력이 원점을 중심으로 180도 회전하게 됩니다.

64
00:07:30,100 --> 00:07:35,660
계속해서 적도 주위를 돌아다니며 g의 출력을 보면 이것이 무엇을 의미하는지 주목하세요.

65
00:07:35,660 --> 00:07:40,140
반쯤 가면 어떻게 되나요?

66
00:07:40,140 --> 00:07:48,140
글쎄, 출력은 원점을 통해 시작점의 반영으로 방황해야 합니다.

67
00:07:48,140 --> 00:08:01,540
그런 다음 계속해서 나머지 절반을 둘러볼 때 출력 경로의 후반부는 전반부의 반사여야 합니다. 즉, 전반부의 180도 회전이어야 합니다.

68
00:08:01,540 --> 00:08:11,460
이제 이러한 지점 중 하나가 원점을 통과할 가능성이 희박합니다. 이 경우 운이 좋아서 일찍 완료되었습니다.

69
00:08:11,460 --> 00:08:17,380
그러나 그렇지 않으면 여기에 있는 경로는 원점을 적어도 한 번은 감는 경로입니다.

70
00:08:17,380 --> 00:08:26,140
이제 적도상의 경로를 살펴보고 북극까지 계속해서 변형되면서 고리를 단단히 조이는 것을 상상해 보십시오.

71
00:08:26,140 --> 00:08:35,860
이렇게 하면 함수 g가 연속이므로 출력 공간의 결과 경로도 연속적으로 점으로 변형됩니다.

72
00:08:35,860 --> 00:08:47,448
이 과정 중 어떤 지점에서 원점 주위를 감았기 때문에 원점을 교차해야 하며 이는 g(p)의 좌표가 0,0인 구면에 어떤 지점 p가 있음을 의미합니다.

73
00:08:47,448 --> 00:08:58,900
이는 f(p의 f - 음의 f)를 의미합니다. p는 0,0과 같습니다. 즉, p의 f는 음수 p의 f와 동일하며, 우리가 찾고 있는 대척 충돌입니다.

74
00:08:58,900 --> 00:09:00,620
영리하지 않나요?

75
00:09:00,620 --> 00:09:04,360
그리고 이는 토폴로지의 맥락에서 매우 일반적인 논쟁 스타일입니다.

76
00:09:04,360 --> 00:09:16,260
정의한 구에서 평면까지의 특정 연속 함수가 무엇인지는 중요하지 않습니다. 이 추론 라인은 항상 서로 위에 있는 대척 쌍에 초점을 맞춥니다.

77
00:09:16,260 --> 00:09:22,380
이 시점에서 아마도 여러분은 &#39;예, 수학이 정말 멋지구나&#39;라고 생각할 수도 있겠지만, 우리는 목걸이 문제에서 꽤 멀리 벗어났습니다.

78
00:09:22,380 --> 00:09:25,260
하지만 기다리면 상황이 영리해지기 시작합니다.

79
00:09:25,260 --> 00:09:27,260
먼저 이것에 대답해 보세요.

80
00:09:27,260 --> 00:09:29,780
구란 무엇입니까?

81
00:09:29,780 --> 00:09:39,980
글쎄요, 3차원 공간의 점들은 3개의 좌표로 표현됩니다. 어떤 의미에서는 3차원 공간이 적어도 수학자에게는 가능한 모든 세 개의 숫자로 표현됩니다.

82
00:09:39,980 --> 00:09:45,992
좌표로 설명할 수 있는 가장 간단한 구는 원점을 중심으로 하는 표준 단위 구입니다.

83
00:09:45,992 --> 00:09:53,540
원점에서 거리가 1인 모든 점의 집합입니다. 즉, 제곱의 합이 1이 되는 모든 세 개의 숫자를 의미합니다.

84
00:09:53,540 --> 00:10:01,380
따라서 구에 대한 기하학적 개념은 합이 1이 되는 양수 집합에 대한 대수적 개념과 관련이 있습니다.

85
00:10:01,380 --> 00:10:04,380
그것은 간단하게 들릴지 모르지만 그것을 마음 속에 담아 두십시오.

86
00:10:04,380 --> 00:10:13,620
만약 여러분이 이 삼중항 중 하나를 가지고 있다면, 구의 반대편에 있는 점, 즉 상응하는 대척점은 각 좌표의 부호를 뒤집어서 얻을 수 있는 것입니다. 그렇죠?

87
00:10:13,620 --> 00:10:17,420
그럼 보르숙-울람 정리가 말하는 것을 상징적으로 적어봅시다.

88
00:10:17,420 --> 00:10:20,400
저를 믿으십시오. 이것은 목걸이 문제로 돌아가는 데 도움이 될 것입니다.

89
00:10:20,400 --> 00:10:29,810
구의 점을 받아들이고 제곱합이 1이 되는 세 개의 숫자를 취하고 2D 공간에 어떤 점을 뱉어내는 함수의 경우 함수가

90
00:10:29,810 --> 00:10:39,220
연속적인 한 온도 및 압력과 같은 좌표 쌍이 있을 것입니다. 모든 부호를 뒤집어도 출력이 변경되지 않도록 입력합니다.

91
00:10:39,220 --> 00:10:41,960
이를 염두에 두고 목걸이 문제를 되돌아보십시오.

92
00:10:41,960 --> 00:10:50,724
이 두 가지가 서로 매우 무관하다고 느껴지는 이유 중 하나는 목걸이 문제가 이산적인 반면 보르숙-울람 정리는 연속적이기 때문입니다.

93
00:10:50,724 --> 00:11:00,200
따라서 우리의 첫 번째 단계는 도난당한 목걸이 문제를 연속 버전으로 변환하여 목걸이 구분 사이의 연관성을 찾는 것입니다. 그리고 구 위의 점들.

94
00:11:00,200 --> 00:11:10,400
지금은 사파이어와 에메랄드 등 두 가지 보석 유형만 있는 경우로 제한하고, 두 번만 절단한 후에 이 목걸이를 공평하게 나누기를 희망합니다.

95
00:11:10,400 --> 00:11:16,360
예를 들어 화면에 목걸이에 사파이어 8개와 에메랄드 10개가 있다고 가정해 보겠습니다.

96
00:11:16,360 --> 00:11:27,200
다시 한번 말씀드리지만, 목표는 목걸이를 서로 다른 두 지점에서 자르고 세 부분을 나누어 각 도둑이 절반의 사파이어와 절반의 에메랄드를 가져가는 것입니다.

97
00:11:27,200 --> 00:11:33,040
상단과 하단에는 각각 4개의 사파이어와 5개의 에메랄드가 있습니다.

98
00:11:33,040 --> 00:11:39,716
연속화를 위해 목걸이를 길이가 1이고 보석이 균등한 간격으로 놓여 있는 선으로 생각하고

99
00:11:39,716 --> 00:11:45,440
해당 선을 각 보석에 대해 하나씩 동일한 크기의 18개 세그먼트로 나눕니다.

100
00:11:45,440 --> 00:11:56,900
그리고 각 보석을 각 부분의 개별적이고 분할할 수 없는 개체로 생각하기보다는 보석 자체를 제거하고 해당 부분을 보석의 색상으로 칠하면 됩니다.

101
00:11:56,900 --> 00:12:03,800
따라서 이 경우 선의 18분의 8은 사파이어로 칠해지고 18분의 10은 에메랄드로 칠해집니다.

102
00:12:03,800 --> 00:12:12,200
퍼즐의 연속 변형은 이제 반드시 1/18 간격 표시가 아닌 이 선의 어디에서나 두 개의 컷을 찾을 수 있는지 묻는 것입니다.

103
00:12:12,200 --> 00:12:17,480
이를 통해 각 도둑이 각 색상의 동일한 길이를 갖도록 조각을 나눌 수 있습니다.

104
00:12:17,480 --> 00:12:25,760
이 경우 각 도둑은 총 4개의 18분의 사파이어 색상 세그먼트와 5개의 18분의 에메랄드 색상 세그먼트를 가져야 합니다.

105
00:12:25,760 --> 00:12:33,900
여기서 중요하지만 다소 미묘한 점은 연속 변형을 풀 수 있으면 원래의 이산 버전도 풀 수 있다는 것입니다.

106
00:12:33,900 --> 00:12:43,160
이를 확인하기 위해 컷팅이 보석 사이에 깔끔하게 떨어지지 않는 공정한 분할을 찾았다고 가정해 보겠습니다. 어쩌면 에메랄드 세그먼트의 일부만 컷팅될 수도 있습니다.

107
00:12:43,160 --> 00:12:54,160
글쎄요, 이것은 공평한 구분이기 때문에 상단과 하단의 에메랄드 길이는 전체 에메랄드 세그먼트 5개, 즉 세그먼트 길이의 정수배가 되어야 합니다.

108
00:12:54,160 --> 00:13:01,851
따라서 분할이 왼쪽의 에메랄드 세그먼트로 부분적으로 절단되더라도 오른쪽의 에메랄드 세그먼트로 부분적으로 절단되어야 하며,

109
00:13:01,851 --> 00:13:07,280
보다 구체적으로 전체 길이가 세그먼트 길이의 정수배가 되는 방식으로 절단되어야 합니다.

110
00:13:07,280 --> 00:13:16,240
이는 분할에 영향을 주지 않고 각 컷을 조정하여 궁극적으로 1/18 표시에 정렬할 수 있다는 것을 의미합니다.

111
00:13:16,240 --> 00:13:18,240
이제 우리는 왜 이 모든 일을 하고 있는 걸까요?

112
00:13:18,240 --> 00:13:27,880
이 선에서 원하는 곳 어디든 자를 수 있는 연속 사례에서는 목걸이를 나누고 조각을 할당하는 모든 선택에 대해 생각해 보세요.

113
00:13:27,880 --> 00:13:36,240
먼저 간격을 줄이기 위해 두 위치를 선택하지만, 그것에 대해 생각하는 또 다른 방법은 합이 1이 되는 세 개의 양수를 선택하는 것입니다.

114
00:13:36,240 --> 00:13:42,560
예를 들어, 이 두 컷에 해당하는 6번째 1개, 3번째 1개, 절반 1개를 선택할 수 있습니다.

115
00:13:42,560 --> 00:13:48,600
합이 1이 되는 세 개의 양수를 찾으면 목걸이를 자르는 방법이 제공되며 그 반대의 경우도 마찬가지입니다.

116
00:13:48,600 --> 00:13:55,520
그 후, 도둑 1에게 갈 것인지 도둑 2에게 갈 것인지에 대해 각 조각에 대해 이진 선택을 해야 합니다.

117
00:13:55,520 --> 00:14:03,860
이제 이를 3차원 공간의 구에서 임의의 점, x, y, z 좌표를 가진 점을 선택하라고 요청한 경우와 비교해 보세요.

118
00:14:03,860 --> 00:14:07,020
x2 더하기 y2 더하기 z2는 1이 됩니다.

119
00:14:07,020 --> 00:14:11,260
음, 1에 더해지는 세 개의 양수를 선택하는 것으로 시작할 수도 있습니다.

120
00:14:11,260 --> 00:14:17,540
어쩌면 x2가 16이 되고, y2가 1/3이 되고, z2가 1/2이 되기를 원할 수도 있습니다.

121
00:14:17,540 --> 00:14:23,654
그런 다음 목걸이를 나누고 조각을 할당하는 것과 완전히 평행한 방식으로 양의 제곱근을

122
00:14:23,654 --> 00:14:29,260
사용할지 음의 제곱근을 사용할지 선택하여 각각에 대해 이진 선택을 해야 합니다.

123
00:14:29,260 --> 00:14:35,480
자, 이제 저와 함께 기다리세요. 이것이 전체 비디오의 핵심 관찰이기 때문입니다.

124
00:14:35,480 --> 00:14:39,560
이는 구의 점과 목걸이 부분 사이의 대응을 제공합니다.

125
00:14:39,560 --> 00:14:46,114
구의 모든 점 x, y, z에 대해 x2 + y2 + z2가 1이므로 첫 번째 조각의 길이는 x2,

126
00:14:46,114 --> 00:14:52,200
두 번째 조각의 길이는 y2, 세 번째 조각의 길이는 z2가 되도록 목걸이를자를 수 있습니다.

127
00:14:52,200 --> 00:14:58,260
첫 번째 조각에 대해 x가 양수이면 도둑 1에게 주고, 그렇지 않으면 도둑 2에게 줍니다.

128
00:14:58,260 --> 00:15:03,280
두 번째 조각의 경우 y가 양수이면 도둑 1에게 주고 그렇지 않으면 도둑 2에게 주고

129
00:15:03,280 --> 00:15:08,720
마찬가지로 세 번째 조각을 z가 양수이면 도둑 1에게 주고 z가 음수이면 도둑 2에게 줍니다.

130
00:15:08,720 --> 00:15:10,760
그리고 반대 방향으로 갈 수도 있습니다.

131
00:15:10,760 --> 00:15:16,360
목걸이를 나누고 조각을 나누는 방식은 구에 독특한 포인트를 제공합니다.

132
00:15:16,360 --> 00:15:25,540
마치 구가 기하학적인 물체만으로 가능한 모든 목걸이 분할 아이디어를 캡슐화하는 이상하게 완벽한 방법인 것 같습니다.

133
00:15:25,540 --> 00:15:28,000
그리고 여기서 우리는 감질나게 가까워졌습니다.

134
00:15:28,000 --> 00:15:31,920
이 연관성에서 대척점의 의미를 생각해 보십시오.

135
00:15:31,920 --> 00:15:40,680
구의 x, y, z 지점이 목걸이 할당에 해당하는 경우 음수 x, 음수 y 및 음수 z는 무엇에 해당합니까?

136
00:15:40,680 --> 00:15:48,460
글쎄, 이 세 좌표의 사각형은 동일하므로 각각은 목걸이에 동일한 컷을 만드는 것과 일치합니다.

137
00:15:48,460 --> 00:15:52,740
차이점은 모든 조각이 어느 도둑에 속해 있는지 전환한다는 것입니다.

138
00:15:52,740 --> 00:15:59,280
따라서 구의 반대편에 있는 대척점으로 점프하는 것은 조각을 교환하는 것과 같습니다.

139
00:15:59,280 --> 00:16:01,880
이제 우리가 실제로 찾고 있는 것이 무엇인지 기억해 보세요.

140
00:16:01,880 --> 00:16:10,080
우리는 도둑 1에 속한 각 보석 유형의 총 길이가 도둑 2의 것과 같기를 원합니다.

141
00:16:10,080 --> 00:16:17,800
즉, 공정한 분할에서 이 대척지 교환을 수행해도 각 도둑에게 속한 각 보석의 양은 변경되지 않습니다.

142
00:16:17,800 --> 00:16:22,040
이 시점에서 당신의 두뇌는 보르숙울람에 대한 생각으로 불타오르고 있을 것입니다.

143
00:16:22,040 --> 00:16:28,591
구체적으로, 주어진 목걸이 할당을 받아 두 개의 숫자, 즉 도둑 1에 속한 사파이어의

144
00:16:28,591 --> 00:16:35,280
전체 길이와 도둑 1에 속한 에메랄드의 전체 길이를 뱉어내는 함수를 구성할 수 있습니다.

145
00:16:35,280 --> 00:16:42,830
우리는 목걸이를 두 개의 컷으로 나누고 조각을 나누어 이 두 숫자가 도둑 2의 숫자와 동일하거나

146
00:16:42,830 --> 00:16:50,940
다르게 말하면 모든 조각을 교환하는 방법이 있음을 보여주고 싶습니다. 그 두 숫자는 바뀌지 않을 거예요.

147
00:16:50,940 --> 00:17:02,320
목걸이 할당과 구의 점 사이의 앞뒤로 그리고 숫자 쌍이 xy 평면의 점과 일치하기 때문에 이는 사실상 구에서 평면으로의 맵입니다.

148
00:17:02,320 --> 00:17:14,000
지금 보시는 애니메이션은 제가 보여드린 목걸이에 대한 문자 그대로의 지도입니다.

149
00:17:14,000 --> 00:17:19,363
따라서 보르숙-울람 정리는 구의 일부 대척점 쌍이 평면에서 서로 닿는 것을 보장합니다.

150
00:17:19,363 --> 00:17:26,040
이는 도둑 사이에 공평한 분할을 제공하는 두 개의 절단을 사용하여 일부 목걸이 분할이 있어야 함을 의미합니다.

151
00:17:26,040 --> 00:17:30,160
친구들이여, 그것이 바로 아름다운 수학이 느끼는 것입니다.

152
00:17:30,160 --> 00:17:36,928
좋아, 그리고 만약 당신이 나와 같은 사람이라면, 당신은 그것이 얼마나 영리한 증거인지에 대해 푹 빠져 있을 뿐입니다.

153
00:17:36,928 --> 00:17:44,000
그리고 우리가 실제로 해결하고 싶은 것은 더 일반적인 목걸이 도난 문제라는 사실을 잊어버리기 쉬울 것입니다. 보석 종류의 수.

154
00:17:44,000 --> 00:17:48,940
운 좋게도 이제 작업의 95%를 완료했으며 일반화는 매우 간단합니다.

155
00:17:48,940 --> 00:17:56,660
언급해야 할 가장 중요한 점은 더 높은 차원의 구체에 적용되는 Borsuk-Ulam 정리의 보다 일반적인 버전이 있다는 것입니다.

156
00:17:56,660 --> 00:18:02,220
예를 들어 Borsuk-Ulam은 40공간의 초구체를 3차원으로 매핑하는 데 적용됩니다.

157
00:18:02,220 --> 00:18:10,660
그리고 하이퍼스피어란 제곱의 합이 1이 되는 네 개의 좌표로 구성된 가능한 모든 목록의 집합을 의미합니다.

158
00:18:10,660 --> 00:18:14,620
이는 원점에서 1만큼 떨어진 40공간의 점입니다.

159
00:18:14,620 --> 00:18:25,180
Borsuk-Ulam은 그 집합, 모든 특수한 4중 숫자 집합을 3차원 공간에 매핑하고 각 숫자를 일부 3중 숫자와 지속적으로 연관시키려고 하면 입력 x1,

160
00:18:25,180 --> 00:18:33,340
x2, x3과 같은 대척 충돌이 있어야 한다고 말합니다. , x4, 여기서 모든 부호를 뒤집어도 출력은 변경되지 않습니다.

161
00:18:33,340 --> 00:18:38,187
이것이 보석 3개 케이스에 어떻게 적용될 수 있는지, 보르숙울람의 일반적인 진술이 무엇인지,

162
00:18:38,187 --> 00:18:44,900
그리고 그것이 일반적인 목걸이 문제에 어떻게 적용되는지에 대해 잠시 멈추고 숙고하고 생각하는 것은 여러분의 몫으로 남겨두겠습니다.

163
00:18:44,900 --> 00:18:54,020
그리고 아마도 이것은 수학자들이 물리적 현실에 존재하는지 여부에 관계없이 더 높은 차원의 구체와 같은 것에 관심을 갖는 이유에 대한 암시를 줄 것입니다.

164
00:18:54,020 --> 00:18:58,840
항상 구 자체에 관한 것이 아니라 인코딩하는 데 사용할 수 있는 수학의 다른 문제에 관한 것입니다.

