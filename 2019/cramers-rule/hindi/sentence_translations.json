[
 {
  "input": "In a previous video I've talked about linear systems of equations, and I sort of brushed aside the discussion of actually computing solutions to these systems.",
  "translatedText": "पिछले वीडियो में मैंने समीकरणों की रैखिक प्रणालियों के बारे में बात की थी, और मैंने इन प्रणालियों के लिए वास्तव में कंप्यूटिंग समाधानों की चर्चा को किनारे कर दिया था।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 11.2,
  "end": 19.14
 },
 {
  "input": "And while it's true that number crunching is typically something we leave to the computers, digging into some of these computational methods is a good litmus test for whether or not you actually understand what's going on, since that's really where the rubber meets the road.",
  "translatedText": "और जबकि यह सच है कि नंबर क्रंचिंग आम तौर पर कुछ ऐसा है जिसे हम कंप्यूटर पर छोड़ देते हैं, इनमें से कुछ कम्प्यूटेशनल तरीकों में खुदाई करना एक अच्छा लिटमस टेस्ट है कि क्या आप वास्तव में समझ रहे हैं कि क्या हो रहा है या नहीं, क्योंकि वास्तव में रबर सड़क से मिलता है।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 19.7,
  "end": 31.52
 },
 {
  "input": "Here I want to describe the geometry behind a certain method for computing solutions to these systems, known as Cramer's rule.",
  "translatedText": "यहां मैं इन प्रणालियों के समाधानों की गणना के लिए एक निश्चित विधि के पीछे की ज्यामिति का वर्णन करना चाहता हूं, जिसे क्रैमर नियम के रूप में जाना जाता है।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 32.12,
  "end": 38.88
 },
 {
  "input": "The relevant background here is understanding determinants, a little bit of dot products, and of course linear systems of equations, so be sure to watch the relevant videos on those topics if you're unfamiliar or rusty.",
  "translatedText": "यहां आवश्यक प्रासंगिक पृष्ठभूमि निर्धारकों, डॉट उत्पादों और समीकरणों की रैखिक प्रणालियों की समझ है, इसलिए यदि आप अपरिचित हैं या जंग खा रहे हैं तो उन विषयों पर प्रासंगिक वीडियो देखना सुनिश्चित करें। ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 39.68,
  "end": 50.42
 },
 {
  "input": "But first",
  "translatedText": "पर पहले! ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 51.02,
  "end": 51.44
 },
 {
  "input": "I should say up front that this Cramer's rule is not actually the best way for computing solutions to linear systems of equations,",
  "translatedText": "मुझे पहले ही कहना चाहिए कि समीकरणों की रैखिक प्रणालियों के समाधान की गणना के लिए क्रैमर का नियम सबसे अच्छा तरीका नहीं है। ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 51.44,
  "end": 57.26
 },
 {
  "input": "Gaussian elimination for example will always be faster.",
  "translatedText": "उदाहरण के लिए, गॉसियन उन्मूलन हमेशा तेज़ होगा।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 58.14,
  "end": 61.26
 },
 {
  "input": "So why learn it?",
  "translatedText": "तो इसे क्यों सीखें? ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 61.98,
  "end": 63.52
 },
 {
  "input": "Well think of it as a sort of cultural excursion. It's a helpful exercise in deepening your knowledge of the theory behind these systems.",
  "translatedText": "ख़ैर, इसे एक तरह का सांस्कृतिक भ्रमण ही समझें।यह इन प्रणालियों के पीछे के सिद्धांत के बारे में आपके ज्ञान को गहरा करने में सहायक अभ्यास है।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 63.78,
  "end": 70.46
 },
 {
  "input": "Wrapping your mind around this concept is going to help consolidate ideas from linear algebra, like the determinant and linear systems, by seeing how they relate to each other.",
  "translatedText": "इस अवधारणा के चारों ओर अपने दिमाग को लपेटने से निर्धारक और रैखिक प्रणालियों जैसे रैखिक बीजगणित से विचारों को समेकित करने में मदद मिलेगी, यह देखकर कि वे एक-दूसरे से कैसे संबंधित हैं।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 71.04,
  "end": 79.62
 },
 {
  "input": "Also from a purely artistic standpoint the ultimate result here is just really pretty to think about, way more so than Gaussian elimination.",
  "translatedText": "इसके अलावा, पूरी तरह से कलात्मक दृष्टिकोण से, यहां अंतिम परिणाम वास्तव में सोचने के लिए बहुत सुंदर है, गॉसियन उन्मूलन से कहीं अधिक।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 80.1,
  "end": 86.88
 },
 {
  "input": "Alright so the setup here will be some linear system of equations, say with two unknowns x and y and two equations.",
  "translatedText": "ठीक है, तो यहाँ सेटअप समीकरणों की कुछ रैखिक प्रणाली होगी, मान लीजिए दो अज्ञात, x और y, और दो समीकरणों के साथ।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 88.68,
  "end": 95.62
 },
 {
  "input": "In principle everything we're talking about will also work for systems with larger number of unknowns and the same number of equations,",
  "translatedText": "सिद्धांत रूप में, हम जिस चीज के बारे में बात कर रहे हैं वह बड़ी संख्या में अज्ञात और समान संख्या में समीकरणों के साथ सिस्टम पर काम करेगी। ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 96.3,
  "end": 101.94
 },
 {
  "input": "but for simplicity a smaller example is just nicer to hold in our heads.",
  "translatedText": "लेकिन सरलता के लिए, एक छोटा उदाहरण हमारे दिमाग में रखना अच्छा रहेगा। ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 102.44,
  "end": 105.58
 },
 {
  "input": "So as I talked about in a previous video you can think of this setup geometrically as a certain known matrix transforming an unknown vector x y where you know what the output is going to be, in this case negative 4 negative 2.",
  "translatedText": "तो जैसा कि मैंने पिछले वीडियो में बात की थी, आप इस सेटअप को ज्यामितीय रूप से एक अज्ञात वेक्टर को बदलने वाले एक निश्चित ज्ञात मैट्रिक्स के रूप में सोच सकते हैं, [x; y], जहां आप जानते हैं कि आउटपुट क्या होने वाला है, इस मामले में [-4; -2]। ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 106.32,
  "end": 120.04
 },
 {
  "input": "Remember the columns of this matrix are telling you how that matrix acts as a transform, each one telling you where the basis vectors of the input space land.",
  "translatedText": "याद रखें, इस मैट्रिक्स के कॉलम आपको बता रहे हैं कि यह मैट्रिक्स एक परिवर्तन के रूप में कैसे कार्य करता है, प्रत्येक आपको बता रहा है कि इनपुट स्पेस के आधार वैक्टर कहां पहुंचते हैं।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 120.8,
  "end": 130.08
 },
 {
  "input": "So what we have is a sort of puzzle, which input vector x y is going to land on this output negative",
  "translatedText": "तो हमारे पास जो है वह एक प्रकार की पहेली है।कौन सा इनपुट वेक्टर, x, y, इस आउटपुट, ऋणात्मक 4, ऋणात्मक 2 पर उतरने वाला है? यहां हमारी छोटी पहेली के बारे में सोचने का एक तरीका यह है कि हम जानते हैं कि दिया गया आउटपुट वेक्टर मैट्रिक्स के कॉलम का कुछ रैखिक संयोजन है, जहां आई-हैट लैंड करता है वहां वेक्टर का x गुना प्लस जहां जे-हैट लैंड करता है वहां वेक्टर का y गुना, लेकिन क्या हम यह पता लगाना चाहते हैं कि वास्तव में वह रैखिक संयोजन क्या होना चाहिए।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 130.86,
  "end": 137.6
 },
 {
  "input": "4 negative 2. One way to think about our little puzzle here is that we know the given output vector is some linear combination of the columns of the matrix x times the",
  "translatedText": "याद रखें, आपको यहां मिलने वाले उत्तर का प्रकार इस बात पर निर्भर हो सकता है कि परिवर्तन पूरे स्थान को निचले आयाम में कुचल देता है या नहीं। ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 137.6,
  "end": 148.4
 },
 {
  "input": "vector where i hat lands plus y times the vector where j",
  "translatedText": "अर्थात् यदि इसका निर्धारक शून्य है। ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 148.4,
  "end": 151.22
 },
 {
  "input": "hat lands, but what we want is to figure out what exactly that linear combination should be.",
  "translatedText": "उस स्थिति में, या तो कोई भी इनपुट हमारे दिए गए आउटपुट पर नहीं उतरता है या उस आउटपुट पर इनपुट का एक पूरा समूह उतर रहा है। ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 151.22,
  "end": 156.22
 },
 {
  "input": "Remember the type of answer you get here can depend on whether or not the transformation squishes all of space into a lower dimension, that is if it has a zero determinant. In that case either none of the inputs l",
  "translatedText": "लेकिन इस वीडियो के लिए, हम अपने दृष्टिकोण को एक गैर-शून्य निर्धारक के मामले तक सीमित रखेंगे, जिसका अर्थ है कि इस परिवर्तन के आउटपुट अभी भी उस पूर्ण-आयामी स्थान तक फैले हुए हैं जिसमें यह शुरू हुआ था।प्रत्येक इनपुट एक और केवल एक आउटपुट पर लैंड करता है, और प्रत्येक आउटपुट में एक और केवल एक इनपुट होता है।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 157.24,
  "end": 168.94
 },
 {
  "input": "and on our given output, or there's a whole bunch of inputs landing on that output. But for this video we'll limit our view to the case of a non-zero determinant, meaning the outputs of this transformation still span the full in-dimensional space that it started",
  "translatedText": "हमारी पहेली के बारे में सोचने का एक तरीका यह है कि हम जानते हैं कि दिया गया आउटपुट वेक्टर मैट्रिक्स के कॉलम का कुछ रैखिक संयोजन है; x*(वेक्टर जहां i-hat उतरता है) + y*(वेक्टर जहां j-hat उतरता है), लेकिन हम गणना करना चाहते हैं कि वास्तव में x और y क्या हैं। ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 168.94,
  "end": 186.72
 },
 {
  "input": "in. Every input lands on one and only one output, and every output has one and only one input. As a first pass let me show you an idea that's wrong but in the right direction.",
  "translatedText": "सबसे पहले, मैं एक विचार दिखाता हूँ जो गलत है, लेकिन सही दिशा में है। ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 186.72,
  "end": 198.16
 },
 {
  "input": "The x coordinate of this mystery input vector is what you get by taking its dot product with the first basis vector 1 0.",
  "translatedText": "इस रहस्य इनपुट वेक्टर का x-निर्देशांक वह है जो आपको इसके डॉट उत्पाद को पहले आधार वेक्टर के साथ लेने पर मिलता है, [1; 0]. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 198.8,
  "end": 205.44
 },
 {
  "input": "Likewise the y coordinate is what you get by dotting it with the second basis vector 0 1.",
  "translatedText": "इसी तरह, y-निर्देशांक वह है जो आपको दूसरे आधार वेक्टर, 0, 1 के साथ डॉट करने पर मिलता है।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 206.16,
  "end": 211.4
 },
 {
  "input": "So maybe you hope that after the transformation the dot products with the transformed version of the mystery vector with the transformed version of the basis vectors will also be these coordinates x and y.",
  "translatedText": "तो शायद आप उम्मीद करते हैं कि परिवर्तन के बाद, रहस्य वेक्टर के परिवर्तित संस्करण के साथ डॉट उत्पाद भी ये निर्देशांक, x और y होंगे।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 211.9,
  "end": 223.24
 },
 {
  "input": "That'd be fantastic because we know what the transformed version of each of those vectors are.",
  "translatedText": "यह शानदार होगा, क्योंकि हम जानते हैं कि उनमें से प्रत्येक वेक्टर का परिवर्तित संस्करण क्या है।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 223.94,
  "end": 228.74
 },
 {
  "input": "There's just one problem with it, it's not at all true.",
  "translatedText": "इसमें बस एक ही समस्या है, यह बिल्कुल भी सच नहीं है।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 231.18,
  "end": 234.2
 },
 {
  "input": "For most linear transformations the dot product before and after the transformation will look very different.",
  "translatedText": "अधिकांश रैखिक परिवर्तनों के लिए, परिवर्तन से पहले और बाद में डॉट उत्पाद बहुत अलग दिखाई देगा।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 234.64,
  "end": 240.24
 },
 {
  "input": "For example you could have two vectors generally pointing in the same direction with a positive dot product which get pulled apart from each other during the transformation in such a way that they have a negative dot product.",
  "translatedText": "उदाहरण के लिए, आपके पास एक सकारात्मक डॉट उत्पाद के साथ आम तौर पर एक ही दिशा में इंगित करने वाले दो वेक्टर हो सकते हैं, जो परिवर्तन के दौरान एक-दूसरे से इस तरह से अलग हो जाते हैं कि अंत में उनमें एक नकारात्मक डॉट उत्पाद बन जाता है।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 240.8,
  "end": 251.52
 },
 {
  "input": "Likewise things that start off perpendicular with dot product 0, like the two basis vectors, quite often don't stay perpendicular to each other after the transformation, that is they don't preserve that 0 dot product.",
  "translatedText": "इसी तरह, जो चीजें डॉट उत्पाद 0 के साथ लंबवत शुरू होती हैं, जैसे दो आधार वैक्टर, अक्सर परिवर्तन के बाद एक-दूसरे के लंबवत नहीं रहते हैं, यानी, वे उस 0 डॉट उत्पाद को संरक्षित नहीं करते हैं।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 252.22,
  "end": 263.48
 },
 {
  "input": "And looking at the example I just showed dot products certainly aren't preserved,",
  "translatedText": "जिस उदाहरण को हम देख रहे थे, उसमें डॉट उत्पाद निश्चित रूप से संरक्षित नहीं हैं। ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 264.1,
  "end": 267.16
 },
 {
  "input": "they tend to get bigger since most vectors are getting stretched",
  "translatedText": "चूंकि अधिकांश वेक्टर खिंच रहे हैं, इसलिए वे बड़े होते जा रहे हैं। ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 267.5,
  "end": 269.94
 },
 {
  "input": "out. In fact, worthwhile side note here, transformations which do preserve dot products are special enough to have their own name, orthonormal transformations.",
  "translatedText": "वास्तव में, जो परिवर्तन डॉट उत्पादों को संरक्षित करते हैं, वे इतने विशेष होते हैं कि उनका अपना नाम होता है: ऑर्थोनॉर्मल ट्रांसफॉर्मेशन। ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 269.94,
  "end": 279.1
 },
 {
  "input": "These are the ones that leave all of the basis vectors perpendicular to each other and still with unit lengths.",
  "translatedText": "ये वे हैं जो सभी आधार वैक्टरों को एक-दूसरे के लंबवत और इकाई लंबाई के साथ छोड़ते हैं।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 279.72,
  "end": 284.66
 },
 {
  "input": "You often think of these as the rotation matrices,",
  "translatedText": "आप अक्सर इन्हें रोटेशन मैट्रिक्स के रूप में सोचते हैं। ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 285.74,
  "end": 287.88
 },
 {
  "input": "they correspond to rigid motion with no stretching or squishing or morphing.",
  "translatedText": "यह कठोर गति के अनुरूप है, जिसमें कोई खिंचाव, सिकुड़न या बदलाव नहीं है। ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 288.42,
  "end": 292.2
 },
 {
  "input": "Solving a linear system with an orthonormal matrix is actually super easy. Because dot products are preserved, taking the dot product between the output vector and all the columns of your matrix will be the same as taking the dot product between the mystery input vector and all of the basis vectors, which is the same as just finding the coordinates of that mystery input.",
  "translatedText": "ऑर्थोनॉर्मल मैट्रिक्स के साथ एक रैखिक प्रणाली को हल करना बहुत आसान है: चूंकि डॉट उत्पाद संरक्षित हैं, इसलिए आउटपुट वेक्टर और आपके मैट्रिक्स के सभी कॉलमों के बीच डॉट उत्पाद लेना इनपुट वेक्टर और सभी आधारों के बीच डॉट उत्पाद लेने के समान होगा। वेक्टर, जो इनपुट वेक्टर के निर्देशांक खोजने के समान है। ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 293.0,
  "end": 312.98
 },
 {
  "input": "So in that very special case, x would be the dot product of the first column with the output vector, and y would be the dot product of the second column with the output vector.",
  "translatedText": "तो उस विशेष मामले में, x आउटपुट वेक्टर के साथ पहले कॉलम का डॉट उत्पाद होगा, और y आउटपुट वेक्टर के साथ दूसरे कॉलम का डॉट उत्पाद होगा।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 313.68,
  "end": 323.76
 },
 {
  "input": "Why am I bringing this up when this idea breaks down for almost all linear systems? Well, it points us in a direction of something to look for. Is there an alternate geometric understanding for the coordinates of our input vector that remains unchanged after the transformation?",
  "translatedText": "जब यह विचार लगभग सभी रैखिक प्रणालियों के लिए विफल हो जाता है तो मैं इसे क्यों ला रहा हूं? खैर, यह हमें देखने लायक किसी चीज़ की दिशा में इशारा करता है।क्या हमारे इनपुट वेक्टर के निर्देशांक के लिए कोई वैकल्पिक ज्यामितीय समझ है जो परिवर्तन के बाद अपरिवर्तित रहती है? ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 326.82,
  "end": 341.66
 },
 {
  "input": "If your mind has been mulling over determinants, you might think of the following clever idea. Take the parallelogram defined by the first basis vector i-hat and the mystery input vector xy.",
  "translatedText": "यदि आपका दिमाग निर्धारकों पर विचार कर रहा है, तो आप निम्नलिखित चतुर विचार के बारे में सोच सकते हैं।पहले आधार वेक्टर, आई-हैट और मिस्ट्री इनपुट वेक्टर, xy द्वारा परिभाषित समांतर चतुर्भुज लें।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 342.36,
  "end": 353.76
 },
 {
  "input": "The area of this parallelogram is the base, 1, times the height perpendicular to that base, which is the y-coordinate of that input vector.",
  "translatedText": "इस समांतर चतुर्भुज का क्षेत्रफल आधार है, जो उस आधार की लंबवत ऊंचाई का 1 गुना है, जो उस इनपुट वेक्टर का y-निर्देशांक है।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 354.44,
  "end": 362.96
 },
 {
  "input": "So the area of that parallelogram is a sort of screwy roundabout way to describe the vector's y-coordinate. It's a wacky way to talk about coordinates, but run with me.",
  "translatedText": "तो उस समांतर चतुर्भुज का क्षेत्रफल वेक्टर के y-निर्देशांक का वर्णन करने के लिए एक प्रकार का पेचीदा गोल चक्कर तरीका है।यह निर्देशांक के बारे में बात करने का एक अजीब तरीका है, लेकिन मेरे साथ चलें।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 363.68,
  "end": 373.14
 },
 {
  "input": "And actually, to be a little more accurate, you should think of this as the signed area of that parallelogram, in the sense described in the determinant video.",
  "translatedText": "और वास्तव में, थोड़ा अधिक सटीक होने के लिए, आपको इसे उस समांतर चतुर्भुज के हस्ताक्षरित क्षेत्र के रूप में सोचना चाहिए, निर्धारक वीडियो में वर्णित अर्थ में।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 373.7,
  "end": 381.64
 },
 {
  "input": "That way, a vector with a negative y-coordinate would correspond to a negative area for this parallelo",
  "translatedText": "इस तरह, नकारात्मक y-निर्देशांक वाला एक वेक्टर इस समांतर चतुर्भुज के लिए एक नकारात्मक क्षेत्र के अनुरूप होगा, कम से कम यदि आप आई-हैट के बारे में सोचते हैं कि कुछ अर्थों में यह समांतर चतुर्भुज को परिभाषित करने वाले इन दो वैक्टरों में से पहला है।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 382.2,
  "end": 388.58
 },
 {
  "input": "gram, at least if you think of i-hat as in some sense being the first out of these two vecto",
  "translatedText": "और सममित रूप से, यदि आप हमारे रहस्य इनपुट वेक्टर और दूसरे आधार, जे-हैट द्वारा फैले समांतर चतुर्भुज को देखते हैं, तो इसका क्षेत्र उस रहस्य वेक्टर का एक्स-निर्देशांक होने जा रहा है।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 388.96,
  "end": 392.96
 },
 {
  "input": "rs defining the parallelogram. And symmetrically, if you look at the parallelogram spanned by our mystery input",
  "translatedText": "फिर, यह एक्स-समन्वय का प्रतिनिधित्व करने का एक अजीब तरीका है, लेकिन आप एक पल में देखेंगे कि यह हमें क्या देता है।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 392.96,
  "end": 398.78
 },
 {
  "input": "vector and the second basis, j-hat, its area is going to be the x-coordinate of that mystery vector. Again, it's a strange way to represent the x-coordinate, but see what it buys us in a moment.",
  "translatedText": "और यह सुनिश्चित करने के लिए कि यह कैसे सामान्यीकृत हो सकता है, आइए तीन आयामों में देखें।आमतौर पर, जिस तरह से आप किसी वेक्टर के निर्देशांकों में से किसी एक के बारे में सोच सकते हैं, मान लें कि उसका z-निर्देशांक, उसके डॉट उत्पाद को तीसरे मानक आधार वेक्टर के साथ लेना होगा, जिसे अक्सर k-hat कहा जाता है।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 398.78,
  "end": 410.08
 },
 {
  "input": "And just to make sure it's clear how this might generalize,",
  "translatedText": "लेकिन एक वैकल्पिक ज्यामितीय व्याख्या उस समानांतर चतुर्भुज पर विचार करना होगा जो यह अन्य दो आधार वैक्टर, आई-हैट और जे-हैट के साथ बनाता है।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 410.68,
  "end": 412.64
 },
 {
  "input": "let's look in three dimensions. Ordinarily, the way you might think about one of a vector's c",
  "translatedText": "यदि आप आई-हैट और जे-हैट द्वारा फैलाए गए क्षेत्रफल 1 वाले वर्ग को इस पूरे आकार का आधार मानते हैं, तो इसका आयतन इसकी ऊंचाई के समान है, जो हमारे वेक्टर का तीसरा निर्देशांक है।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 412.74,
  "end": 417.14
 },
 {
  "input": "oordinates, say its z-coordinate, would be to take its dot product with the third standard basis vector, often called k-hat. But an alternate geometric interpretation would be to consider the parallelepiped that it creates",
  "translatedText": "और इसी तरह, वेक्टर के अन्य निर्देशांकों के बारे में सोचने का अजीब तरीका यह होगा कि वेक्टर का उपयोग करके एक समानांतर चतुर्भुज बनाया जाए और फिर आप जिस दिशा की तलाश कर रहे हैं उसके अनुरूप एक के अलावा अन्य सभी आधार वेक्टर बनाएं।फिर इसका आयतन आपको निर्देशांक देता है।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 417.14,
  "end": 429.72
 },
 {
  "input": "with the other two basis vectors, i-hat and j-hat. If you think of the square with area 1 spanned by i-hat and j-hat as the base of this whole shape, then its volume is the same as its height, which is th",
  "translatedText": "या बल्कि, हमें दाहिने हाथ के नियम का उपयोग करते हुए निर्धारक वीडियो में वर्णित अर्थ में, समांतर चतुर्भुज की हस्ताक्षरित मात्रा के बारे में बात करनी चाहिए।तो जिस क्रम में आप इन तीन वैक्टरों को सूचीबद्ध करते हैं वह मायने रखता है।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 429.72,
  "end": 442.38
 },
 {
  "input": "e third coordinate of our vector. And likewise, the",
  "translatedText": "इस तरह, नकारात्मक निर्देशांक अभी भी समझ में आते हैं।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 442.38,
  "end": 445.24
 },
 {
  "input": "wacky way to think about the other coordinates of the vecto",
  "translatedText": "ठीक है, तो निर्देशांक को इस प्रकार क्षेत्रफल और आयतन के रूप में क्यों सोचें? ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 445.24,
  "end": 447.5
 },
 {
  "input": "r would be to form a parallelepiped using the",
  "translatedText": "ठीक है, जैसे ही आप किसी प्रकार का मैट्रिक्स परिवर्तन लागू करते हैं, इन समांतर चतुर्भुजों के क्षेत्र, ठीक हैं, वे समान नहीं रहते हैं, वे ऊपर या नीचे स्केल किए जा सकते हैं।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 447.5,
  "end": 450.0
 },
 {
  "input": "vector and then all of the basis vectors other than the one correspon",
  "translatedText": "लेकिन(!), और यह निर्धारकों का एक प्रमुख विचार है, इन सभी क्षेत्रों को एक ही राशि से बढ़ाया जाता है। ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 450.0,
  "end": 453.96
 },
 {
  "input": "ding to the direction you're looking for. Then the volume of this gives you the coordinate.",
  "translatedText": "अर्थात्, हमारे परिवर्तन मैट्रिक्स का निर्धारक। ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 453.96,
  "end": 457.9
 },
 {
  "input": "Or rather, we should be talking about the signed volume of parallelepiped in the sense described in the determinant video using the right-hand rule. So the order in which you list these three vectors matters. That way, negative coordinates still make s",
  "translatedText": "उदाहरण के लिए, यदि आप वेक्टर द्वारा फैलाए गए समांतर चतुर्भुज को देखते हैं जहां आपका पहला आधार वेक्टर उतरता है, जो मैट्रिक्स का पहला कॉलम है, और [x; y], इसका क्षेत्रफल क्या है? ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 458.44,
  "end": 470.72
 },
 {
  "input": "ense. Okay, so why think of coordinates as areas and volumes like this? Well, as you apply some sort of matrix transformation,",
  "translatedText": "खैर, यह उस समांतर चतुर्भुज का परिवर्तित संस्करण है जिसे हम पहले देख रहे थे, जिसका क्षेत्र रहस्यमय इनपुट वेक्टर का y-निर्देशांक था।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 470.72,
  "end": 478.28
 },
 {
  "input": "the areas of these parallelograms, well, they don't stay t",
  "translatedText": "तो इसका क्षेत्र उस y-निर्देशांक से गुणा किए गए परिवर्तन का निर्धारक बनने जा रहा है।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 478.96,
  "end": 481.96
 },
 {
  "input": "he same, they might get scaled up or down. But, and this is the key idea of determinants, all of the areas get scaled by the same amount, namely the determinant of our transformation ma",
  "translatedText": "तो इसका मतलब है कि हम आउटपुट स्पेस में इस नए समांतर चतुर्भुज के क्षेत्र को पूर्ण परिवर्तन के निर्धारक द्वारा विभाजित करके y के लिए हल कर सकते हैं।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 481.96,
  "end": 492.16
 },
 {
  "input": "trix. For example, if you look at the par",
  "translatedText": "और आपको वह क्षेत्र कैसे मिलता है? ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 492.16,
  "end": 494.88
 },
 {
  "input": "allelogram spanned by the vector where your first basis vector lands, which is the first c",
  "translatedText": "खैर, हम उस निर्देशांक को जानते हैं जहां रहस्यमय इनपुट वेक्टर उतरता है, यही समीकरणों की एक रैखिक प्रणाली का संपूर्ण बिंदु है।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 494.88,
  "end": 499.88
 },
 {
  "input": "olumn of the matrix, and the transformed version of xy, what is its area? Well, this is the transformed version of the parallelogram we were looking at earlier, the one whose area was the y-coordinate of the mystery input ve",
  "translatedText": "तो आप एक नया मैट्रिक्स बना सकते हैं जिसका पहला कॉलम हमारे मैट्रिक्स के समान है, लेकिन जिसका दूसरा कॉलम आउटपुट वेक्टर है, और फिर आप इसका निर्धारक लेते हैं।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 499.88,
  "end": 512.88
 },
 {
  "input": "ctor. So its area is just going to be the determinant of the transformation multiplied by that y-coordinate. So that means we can solve for y",
  "translatedText": "तो इसे देखें, केवल परिवर्तन के आउटपुट से डेटा का उपयोग करके, अर्थात् मैट्रिक्स के कॉलम और हमारे आउटपुट वेक्टर के निर्देशांक, हम रहस्य इनपुट वेक्टर के y-समन्वय को पुनर्प्राप्त कर सकते हैं, जो सिस्टम को हल करने का आधा रास्ता है।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 512.88,
  "end": 522.1
 },
 {
  "input": "by taking the area",
  "translatedText": "इसी प्रकार, वही विचार हमें x-निर्देशांक दे सकता है।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 522.1,
  "end": 523.5
 },
 {
  "input": "of this new parallelogram in the output space divided by the determinant of the full transformation. And how do you get that area? Well, we know the coordinates for where the mystery input vector lands, that",
  "translatedText": "उस समांतर चतुर्भुज को देखें जिसे हमने पहले परिभाषित किया था, जो उस वेक्टर और जे-हैट द्वारा फैले रहस्यमय इनपुट वेक्टर के एक्स-निर्देशांक को एन्कोड करता है।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 523.5,
  "end": 537.14
 },
 {
  "input": "'s the whole point of a linear system of equations. So what you might do is create a new matrix whose first column is the same as that of our matrix, b",
  "translatedText": "इस व्यक्ति का परिवर्तित संस्करण आउटपुट वेक्टर और मैट्रिक्स के दूसरे कॉलम द्वारा फैलाया गया है, और इसका क्षेत्र उस मैट्रिक्स के निर्धारक द्वारा गुणा किया गया होगा।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 537.14,
  "end": 545.04
 },
 {
  "input": "ut whose second column is the output vector, and then you take its determinant. So look at that, just using data from the output of the transformation,",
  "translatedText": "तो x को हल करने के लिए, आप इस नए क्षेत्र को पूर्ण परिवर्तन के निर्धारक द्वारा विभाजित कर सकते हैं।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 545.06,
  "end": 555.14
 },
 {
  "input": "namely the columns of the matrix and the coordinates of our output vector, we can recover the y-coordinate of the mystery input vector, which is halfway",
  "translatedText": "और जैसा कि हमने पहले किया था, आप एक नया मैट्रिक्स बनाकर उस आउटपुट समांतर चतुर्भुज के क्षेत्र की गणना कर सकते हैं जिसका पहला कॉलम आउटपुट वेक्टर है और जिसका दूसरा कॉलम मूल मैट्रिक्स के समान है।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 555.6,
  "end": 563.42
 },
 {
  "input": "to solving the system. Likewise, the same idea can give us the x-coordinate. Look at the parallelogram we defined earlier, which encodes the x-coordinate of the mystery input vector s",
  "translatedText": "तो फिर, केवल आउटपुट स्पेस से डेटा का उपयोग करके, जो संख्याएँ हम अपने मूल रैखिक सिस्टम में देखते हैं, हम यह हल कर सकते हैं कि x क्या होना चाहिए।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 563.42,
  "end": 573.42
 },
 {
  "input": "panned by that vector and j-hat. The transformed version of this guy is spanned by the output vector and the second column of the matrix, and its area will hav",
  "translatedText": "समीकरणों की एक रैखिक प्रणाली का समाधान खोजने के इस सूत्र को क्रैमर नियम के रूप में जाना जाता है।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 573.42,
  "end": 584.48
 },
 {
  "input": "e been multiplied by",
  "translatedText": "यहाँ, स्वयं की विवेकशीलता की जाँच करने के लिए, यहाँ कुछ संख्याएँ प्लग करें।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 584.48,
  "end": 585.34
 },
 {
  "input": "the determinant of that matrix. So to solve for x, you can take this new area divided by the determinant of the full transformation.",
  "translatedText": "उस शीर्ष, परिवर्तित मैट्रिक्स का निर्धारक 4 प्लस 2 है, जो 6 है, और निचला निर्धारक 2 है, इसलिए x-निर्देशांक 3 होना चाहिए।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 585.34,
  "end": 592.94
 },
 {
  "input": "And similar to what we did before, you can compute the area of that output parallelogram by creating a new matrix whose first column is the output vector and whose second column is th",
  "translatedText": "और वास्तव में, जिस इनपुट वेक्टर से हमने शुरुआत की थी, उसे देखते हुए, x-निर्देशांक 3 है।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 593.86,
  "end": 604.34
 },
 {
  "input": "e same as the original matrix. So again, just using data fro",
  "translatedText": "इसी तरह, क्रैमर का नियम बताता है कि y-निर्देशांक 4 को 2 या 2 से विभाजित किया जाना चाहिए, और यह इनपुट वेक्टर का y-निर्देशांक है जिसके साथ हम शुरुआत कर रहे थे।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 604.34,
  "end": 607.72
 },
 {
  "input": "m the output space, the numbers we see in our original linear system, we can solve for what x must be. This formula for finding the solutions to a linear system of equations is known as Cramer's rule.",
  "translatedText": "3 या अधिक आयामों वाला मामला समान है, और मैं अत्यधिक अनुशंसा करता हूं कि आप थोड़ा रुकें और स्वयं इस पर विचार करें।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 607.72,
  "end": 618.42
 },
 {
  "input": "Here, just to sanity check ourselves, plug in some numb",
  "translatedText": "यहां, मैं आपको थोड़ी गति दूंगा।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 619.12,
  "end": 621.58
 },
 {
  "input": "ers here. The determinant of that top altered matrix is 4 plus 2, which is 6, and the bottom determinant is 2, so the x-coordinate should be 3. And indeed, looking back at the input vector",
  "translatedText": "हमारे पास कुछ 3x3 मैट्रिक्स द्वारा दिया गया एक ज्ञात परिवर्तन है, और हमारे रैखिक सिस्टम के दाईं ओर दिया गया एक ज्ञात आउटपुट वेक्टर है, और हम जानना चाहते हैं कि उस आउटपुट पर कौन सा इनपुट आता है।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 621.58,
  "end": 633.26
 },
 {
  "input": "we started with, the x-coordinate is 3. Likewise, Cramer's rule suggests that the y-coordinate should be 4 divided by 2, or 2, and that is in fact the y-coordinate of",
  "translatedText": "यदि आप इनपुट वेक्टर के z-निर्देशांक को i-hat, j-hat और मिस्ट्री इनपुट वेक्टर द्वारा फैले इस समानांतर चतुर्भुज के आयतन के रूप में सोचते हैं, तो परिवर्तन के बाद इस समानांतर चतुर्भुज के आयतन का क्या होता है? ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 633.26,
  "end": 644.64
 },
 {
  "input": "the input vector we were starting with. The case with three dimensions or more is similar, and I highly recommend you take a m",
  "translatedText": "आप उस नई मात्रा की गणना कैसे कर सकते हैं? ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 644.64,
  "end": 651.66
 },
 {
  "input": "oment to pause and think through it yourself. Here, I'll give you a little bit of momentum. What we have is a known transformation given by some 3x3 matrix and a known output vector given by the right side of our linear system, a",
  "translatedText": "वास्तव में, थोड़ा रुकें और इसे उच्च आयामों तक सामान्यीकृत करने के विवरण पर विचार करें; बड़ी रैखिक प्रणालियों के समाधान के प्रत्येक निर्देशांक के लिए एक अभिव्यक्ति ढूँढना। ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 651.66,
  "end": 664.68
 },
 {
  "input": "nd we want to know what input lands on that output. And if you think of, say, the z-coordinate of that input vector as the volume of that special parallelepiped we were looking at earlier, spanned by i-hat, j-hat, and the mystery input vector, what happens to that volume after the transformation? And what are the various ways you can compute that volume? Really, pause and think through the details of generalizing this to higher dimensions, finding an expression for each coordinate of the solution to a larger linear system. Thinking through more general cases like this and convincing yourself that it works and why it works is where all the learning really happens, much more so than listening to some dude on YouTube walk you through the same reasoning again.",
  "translatedText": "इस तरह के अधिक सामान्य मामलों के बारे में सोचना और अपने आप को यह विश्वास दिलाना कि यह काम करता है और यह क्यों काम करता है, यहीं पर वास्तव में सारी सीख मिलती है, यूट्यूब पर किसी व्यक्ति को सुनने से कहीं अधिक, जो आपको फिर से उसी तर्क के बारे में बताता है।",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 665.1,
  "end": 708.5
 }
]