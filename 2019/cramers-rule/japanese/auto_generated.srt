1
00:00:11,590 --> 00:00:14,247
以前のビデオで私は線形方程式系について話し

2
00:00:14,247 --> 00:00:16,905
ましたが、これらの系の 解を実際に計算する

3
00:00:16,905 --> 00:00:19,690
ことについての議論は脇に置いてしまいました。

4
00:00:19,690 --> 00:00:22,229
そして、数値計算は一般的にコンピューターに任せている

5
00:00:22,229 --> 00:00:24,085
のは事実ですが、これらの計算手法のい

6
00:00:24,085 --> 00:00:26,624
くつかを掘り下げることは、何が起こっているのかを実際

7
00:00:26,624 --> 00:00:28,480
に理解しているかどうかを知るための良

8
00:00:28,480 --> 00:00:31,019
いリトマス試験紙になります。なぜなら、それがまさに現

9
00:00:31,019 --> 00:00:32,680
実の世界と出会うところだからです。

10
00:00:32,680 --> 00:00:35,655
ここでは、これらのシステムの解を計算するための特定の方法

11
00:00:35,655 --> 00:00:37,913
(クラマー則として知られる) の背後にある

12
00:00:37,913 --> 00:00:39,760
幾何学について説明したいと思います。

13
00:00:39,760 --> 00:00:42,442
ここで必要となる関連する背景は、行列式、内積、

14
00:00:42,442 --> 00:00:45,124
および線形方程式系の理解です。そのため、慣れて

15
00:00:45,124 --> 00:00:47,806
いない場合や慣れていない場合は、これらのトピッ

16
00:00:47,806 --> 00:00:50,489
クに関する関連ビデオを必ず視聴してください。

17
00:00:50,489 --> 00:00:51,489
でもまず！

18
00:00:51,489 --> 00:00:54,685
クレイマーの法則は、線形方程式系の解を計算するため

19
00:00:54,685 --> 00:00:58,010
の最良の方法ではないことを、最初に言っておきます。

20
00:00:58,010 --> 00:01:01,950
たとえば、ガウス消去法は常に高速になります。

21
00:01:01,950 --> 00:01:03,950
では、なぜそれを学ぶのでしょうか？

22
00:01:03,950 --> 00:01:06,350
これを一種の文化旅行と考えてください。

23
00:01:06,350 --> 00:01:09,635
これらのシステムの理論についての知識を深めるのに役立

24
00:01:09,635 --> 00:01:10,520
つ演習です。

25
00:01:10,520 --> 00:01:13,135
この概念を頭に入れておくと、行列式や線形系な

26
00:01:13,135 --> 00:01:16,206
どの線形代数のアイデアが相互にどのように関係しているか

27
00:01:16,206 --> 00:01:19,277
を確認することができ、それ らのアイデアを統合するのに

28
00:01:19,277 --> 00:01:19,960
役立ちます。

29
00:01:19,960 --> 00:01:22,933
また、純粋に芸術的な観点から見ると、ここで

30
00:01:22,933 --> 00:01:25,636
の最終的な結果は、ガウス消去法よりもはる

31
00:01:25,636 --> 00:01:28,340
かに美しく、考えるのが非常に美しいです。

32
00:01:28,340 --> 00:01:32,097
さて、ここでの設定は、たとえば 2 つの未知数 x と

33
00:01:32,097 --> 00:01:35,990
y、および 2 つ の方程式を含む線形方程式系になります。

34
00:01:35,990 --> 00:01:38,859
原理的には、私たちが話していることはすべて、より多く

35
00:01:38,859 --> 00:01:41,840
の未知数と同じ数の方程式を持つシステムで機能します。

36
00:01:41,840 --> 00:01:44,039
ただし、わかりやすくするために、小さな例

37
00:01:44,039 --> 00:01:46,349
を頭に入れておくとわかりやすいでしょう。

38
00:01:46,349 --> 00:01:49,802
したがって、前のビデオで説明したように、この設定は、未

39
00:01:49,802 --> 00:01:53,256
知のベクトル [x; を変換する特定の既知の行列として

40
00:01:53,256 --> 00:01:55,303
幾何学的に考えることができます。

41
00:01:55,303 --> 00:01:58,373
y]、出力がどのようになるかがわかっています。

42
00:01:58,373 --> 00:02:00,420
この場合は [-4; -2]。

43
00:02:00,420 --> 00:02:03,778
この行列の列は、その行列が変換としてどのように機

44
00:02:03,778 --> 00:02:07,271
能するかを示しており、各列は入力空間の基底ベクトルが

45
00:02:07,271 --> 00:02:10,899
どこに到達するかを示していることに注意してく ださい。

46
00:02:10,899 --> 00:02:13,224
つまり、私たちが持っているのは一種のパズルです。

47
00:02:13,224 --> 00:02:15,938
どの入力ベクトル x、y がこの出力 (負の 4、負の

48
00:02:15,938 --> 00:02:18,749
2) に到達するでしょうか?ここでの小さなパズルを考える

49
00:02:18,749 --> 00:02:20,590
1 つの方法は、指定された出力ベクト

50
00:02:20,590 --> 00:02:23,498
ルが行列の列の線形結合 (i-hat が着地するベクトルの

51
00:02:23,498 --> 00:02:26,211
x 倍と、j-hat が着地する ベクトルの y 倍)

52
00:02:26,211 --> 00:02:28,150
であることがわかっているということです。

53
00:02:28,150 --> 00:02:33,359
ここで得られる答えの種類は、変換によって

54
00:02:33,359 --> 00:02:38,568
空間全体が低次元に押しつぶされるかどうか

55
00:02:38,568 --> 00:02:44,299
によって決まることを覚えておいてください。

56
00:02:44,299 --> 00:02:46,080
それは、決定要因がゼロの場合です。

57
00:02:46,080 --> 00:02:51,709
その場合、指定された出力に到達する入力がまったくないか、

58
00:02:51,709 --> 00:02:57,540
その出力に到達する入力が大量に存在するかのどちらかです。

59
00:02:57,540 --> 00:03:00,468
ただし、このビデオでは、ゼロ 以外の行列式の場合

60
00:03:00,468 --> 00:03:03,397
に視点を限定します。つまり、この変換の出力は、開

61
00:03:03,397 --> 00:03:06,935
始時の完全な次 元空間にまだ広がっていることを意味します。

62
00:03:06,935 --> 00:03:09,864
すべての入力は 1 つだけの出力に接続され、す

63
00:03:09,864 --> 00:03:12,549
べての出力には 1 つだけの入力があります。

64
00:03:12,549 --> 00:03:13,382
このパズルについて考える 1 つの方法は、指定された出

65
00:03:13,382 --> 00:03:14,216
力ベクトルが行列の列の線形結合であることがわかっている

66
00:03:14,216 --> 00:03:15,111
ということです。 x*(i-hat が着地するベクトル)

67
00:03:15,111 --> 00:03:15,975
+ y*(j-hat が着地するベクトル) しかし、x

68
00:03:15,975 --> 00:03:16,840
と y が正確に何であるかを計算したいと考えています。

69
00:03:16,840 --> 00:03:17,807
最初のパスとして、間違っているが正し

70
00:03:17,807 --> 00:03:18,829
い方向にあるアイデアを示しましょう。

71
00:03:18,829 --> 00:03:24,359
この謎の入力ベクトルの x 座標は、最初の基底ベクトル

72
00:03:24,359 --> 00:03:25,939
[1; 0]。

73
00:03:25,939 --> 00:03:29,371
同様に、y 座標は、2 番目の基底ベクトル 0,

74
00:03:29,371 --> 00:03:31,980
1 で点を打つことによって得られます。

75
00:03:31,980 --> 00:03:35,345
したがって、変換後、ミステリー ベクト

76
00:03:35,345 --> 00:03:39,046
ルと変換後のバージョンの内積もこれらの座標

77
00:03:39,046 --> 00:03:43,590
x と y になることを 期待しているかもしれません。

78
00:03:43,590 --> 00:03:47,791
これらの各ベクトルの変換バージョンが何であるかがわかって

79
00:03:47,791 --> 00:03:50,400
いるので、それは素晴らしいことです。

80
00:03:50,400 --> 00:03:54,739
ただ一つ問題があるのですが、それは全く真実ではありません。

81
00:03:54,739 --> 00:04:00,100
ほとんどの線形変換では、変換前と変換後の内積は大きく異な

82
00:04:00,100 --> 00:04:00,840
ります。

83
00:04:00,840 --> 00:04:04,754
たとえば、正の内積を持つ 2 つのベクトルが通常は同じ方

84
00:04:04,754 --> 00:04:08,399
向を向いている場合、変換中にこれらのベクトルが互いに引

85
00:04:08,399 --> 00:04:11,909
き離されて 、最終的に負の内積になる場合があります。

86
00:04:11,909 --> 00:04:15,565
同様に、2 つの基底ベク トルのように、内積 0

87
00:04:15,565 --> 00:04:19,076
で垂直に始まるものは、変換後も互いに垂直のまま

88
00:04:19,076 --> 00:04:22,733
ではないことがよくあります。つまり、その内積 0

89
00:04:22,733 --> 00:04:24,050
が保持されません。

90
00:04:24,050 --> 00:04:27,140
私たちが見ていた例では、内積は確かに保存されません。

91
00:04:27,140 --> 00:04:29,045
ほとんどのベクトルが引き伸ばされるため

92
00:04:29,045 --> 00:04:30,950
、それらは大きくなる傾向があります。

93
00:04:30,950 --> 00:04:35,267
実際、ドット積を保持する変換は、正規直交

94
00:04:35,267 --> 00:04:39,800
変換という独自の名前を持つほど特別です。

95
00:04:39,800 --> 00:04:42,455
これらは、すべての基底ベクトルを互い

96
00:04:42,455 --> 00:04:45,810
に垂直にし、単位長を維持したままにするものです。

97
00:04:45,810 --> 00:04:48,470
これらは回転行列として考えることがよくあります。

98
00:04:48,470 --> 00:04:51,490
ストレッチ、潰し、モーフィングを行わない、リジッド

99
00:04:51,490 --> 00:04:53,000
モーションに対応します。

100
00:04:53,000 --> 00:04:57,790
正規直交行列を使用して線形システムを解くのは非常に簡単です。

101
00:04:57,790 --> 00:05:01,782
内積が保存されるため、出力ベクトルと行列のすべての

102
00:05:01,782 --> 00:05:05,774
列の間の内積を求めることは、入力ベクトルとすべての

103
00:05:05,774 --> 00:05:09,287
基底の間の内積を求めることと同じになります。

104
00:05:09,287 --> 00:05:13,599
これは、入力ベクトルの座標を見つけることと同じです。

105
00:05:13,599 --> 00:05:17,058
したがっ て、この非常に特殊なケースでは、x

106
00:05:17,058 --> 00:05:20,668
は最初の列と出力ベクトルのドット 積になり、y

107
00:05:20,668 --> 00:05:24,580
は 2 番目の列と出力ベクトルのドット積になります。

108
00:05:24,580 --> 00:05:27,576
この考えはほとんどすべての線形システムで当てはまらない

109
00:05:27,576 --> 00:05:29,906
のに、なぜこれを取り上げるのでしょうか?

110
00:05:29,906 --> 00:05:33,236
そう、それは私たちに、探すべきものの方向性を示してくれます。

111
00:05:33,236 --> 00:05:36,232
変換後も変化しない、入 力ベクトルの座標に対する代替の

112
00:05:36,232 --> 00:05:39,228
幾何学的な理解はあるのでし ょうか?決定要因について考

113
00:05:39,228 --> 00:05:42,336
えているなら、次のような賢いアイデアを思いつくかもしれ

114
00:05:42,336 --> 00:05:42,780
ません。

115
00:05:42,780 --> 00:05:48,921
最初の基底ベクトル i-hat と謎の入力ベクトル

116
00:05:48,921 --> 00:05:54,590
xy によって定義される平行四辺形を 考えます。

117
00:05:54,590 --> 00:05:58,866
この平行四辺形の面積は、底辺とその底辺に垂直な高さの

118
00:05:58,866 --> 00:06:03,460
1 倍であり、 これが入力ベクトルの y 座標になります。

119
00:06:03,460 --> 00:06:06,795
したがって、その平行四辺形の面積は、 ベクトルの y

120
00:06:06,795 --> 00:06:09,636
座標を記述する一種の厄介な回りくどい方法です。

121
00:06:09,636 --> 00:06:12,972
座標について話すのは奇抜な方 法ですが、私と一緒に走り

122
00:06:12,972 --> 00:06:13,590
ましょう。

123
00:06:13,590 --> 00:06:17,234
そして実際には、もう少し正確に言うと、行列式のビデオで

124
00:06:17,234 --> 00:06:20,097
説明されている意味で、これをその平行四辺形の

125
00:06:20,097 --> 00:06:22,440
符号付き領域と考える必要があります。

126
00:06:22,440 --> 00:06:24,382
このようにして、負の y 座標を持つベクトルは、少なくとも

127
00:06:24,382 --> 00:06:26,066
i-hat が、ある意味で 、平行四辺形を定義する

128
00:06:26,066 --> 00:06:27,685
2 つのベクトルのうちの最初のものであると考える場

129
00:06:27,685 --> 00:06:29,110
合、この平 行四辺形の負の領域に対応します。

130
00:06:29,110 --> 00:06:34,147
そして対称的に、謎の入力ベクトルと 2 番目

131
00:06:34,147 --> 00:06:39,404
の基底 j ハットがまたがる平行四辺形を見ると、

132
00:06:39,404 --> 00:06:45,099
その面積がその謎のベクト ルの x 座標になります。

133
00:06:45,099 --> 00:06:47,719
繰り返しますが、これは x 座標を表す奇妙な方法

134
00:06:47,719 --> 00:06:50,449
ですが、それ が何をもたらすかはすぐにわかります。

135
00:06:50,449 --> 00:06:53,768
これがどのように一般化されるかを明確にするために、 3

136
00:06:53,768 --> 00:06:56,732
次元で見てみましょう。通常、ベクトルの座標の 1

137
00:06:56,732 --> 00:06:59,696
つ、たとえば Z 座標に ついて考える方法は、k

138
00:06:59,696 --> 00:07:03,016
ハットと呼ばれることが多い 3 番目の標準基底ベクトル

139
00:07:03,016 --> 00:07:04,439
との内積を取ることです。

140
00:07:04,439 --> 00:07:06,975
しかし、別の幾何学的な解釈は、他の 2

141
00:07:06,975 --> 00:07:10,018
つの基底ベクトル、i-h at と j-hat

142
00:07:10,018 --> 00:07:13,569
を使用して作成される平行六面体を考慮することになります。

143
00:07:13,569 --> 00:07:16,713
i-hat と j-hat がまたがるエリア 1

144
00:07:16,713 --> 00:07:20,234
の正方形をこの形状全体のベースと考えると、その体積はそ

145
00:07:20,234 --> 00:07:22,875
の高さと同じになり、これがベクトルの 3

146
00:07:22,875 --> 00:07:24,259
番目の座標になります。

147
00:07:24,259 --> 00:07:26,987
同様に、ベクトルの他の 座標について考える奇妙な方法

148
00:07:26,987 --> 00:07:29,925
は、そのベクトルを使用して平行六面体を形成し、次に、探

149
00:07:29,925 --> 00:07:32,653
している方向に対応するもの以外のすべての基底ベクトル

150
00:07:32,653 --> 00:07:34,857
を使用して平行六面体を形成するこ とです。

151
00:07:34,857 --> 00:07:37,900
そして、このボリュームによってコーディネートが決まります。

152
00:07:37,900 --> 00:07:40,650
むしろ、右手の法則を使用した 行列式ビデオで説

153
00:07:40,650 --> 00:07:44,117
明されている意味で、平行六面体の符号付き体積について話す

154
00:07:44,117 --> 00:07:46,150
べきです。したがって、これら 3

155
00:07:46,150 --> 00:07:48,900
つのベクトルをリストする順序が重要になります。

156
00:07:48,900 --> 00:07:51,610
そうすれば、負の 座標も意味を持ちます。

157
00:07:51,610 --> 00:07:53,805
では、なぜこのように座標を面積や

158
00:07:53,805 --> 00:07:56,000
体積として考えるのでしょうか?

159
00:07:56,000 --> 00:07:59,993
ある種の行列変換を適用すると、これらの平行四辺形の面積は

160
00:07:59,993 --> 00:08:04,129
同じままでは なく、拡大または縮小される可能性があります。

161
00:08:04,129 --> 00:08:07,034
しかし (!)、これは行列式の重要な考え方ですが、

162
00:08:07,034 --> 00:08:09,940
これらすべての領域は同じ量だけスケールされます。

163
00:08:09,940 --> 00:08:13,560
つまり、変換行列の行列式です。

164
00:08:13,560 --> 00:08:18,724
たとえば、最初の基底ベクトルが到達するベクトル

165
00:08:18,724 --> 00:08:25,180
(行列の最初の列) と [x; y]、その面積は何ですか?

166
00:08:25,180 --> 00:08:29,059
これは、先ほど見ていた平行四辺形の変形版であ

167
00:08:29,059 --> 00:08:33,950
り、その面積が謎の入力ベクトルの y 座標であるものです。

168
00:08:33,950 --> 00:08:36,372
したがって、その面積は、その y

169
00:08:36,372 --> 00:08:39,080
座標を乗じた変換の決定要因になります。

170
00:08:39,080 --> 00:08:41,931
したがって、謎の入力ベクトルの y

171
00:08:41,931 --> 00:08:45,892
座標は、行列の最初の列と出力ベクトルで構成されるこ

172
00:08:45,892 --> 00:08:49,852
の平行四辺形の面積を、完全な変換の行列式で割ったも

173
00:08:49,852 --> 00:08:51,120
のになります。

174
00:08:51,120 --> 00:08:53,090
そして、どうやってこの領域を取得しますか？

175
00:08:53,090 --> 00:08:57,498
そうですね、謎の入力ベクトルが到達する座標はわかっています。

176
00:08:57,498 --> 00:08:59,850
これが線形方程式系の要点です。

177
00:08:59,850 --> 00:09:03,961
したがって、最初の列が行列と同じであるが、

178
00:09:03,961 --> 00:09:07,699
2 番目の列が出力ベクトルである新しい行

179
00:09:07,699 --> 00:09:11,250
列を作成し、その行列式を 取得します。

180
00:09:11,250 --> 00:09:14,774
見てください、変換の出力からのデータ、つまり行

181
00:09:14,774 --> 00:09:18,886
列の列と出力ベクトルの座標を使用するだけで、謎の入力ベク

182
00:09:18,886 --> 00:09:21,383
トル の y 座標を回復できます。

183
00:09:21,383 --> 00:09:23,880
これはシステムの解決の途中です 。

184
00:09:23,880 --> 00:09:28,100
同様に、同じ考え方で x 座標を得ることができます。

185
00:09:28,100 --> 00:09:30,411
先ほど定義した平行四辺形を見てください。

186
00:09:30,411 --> 00:09:32,260
これは、謎の入力ベクトルの x

187
00:09:32,260 --> 00:09:34,917
座標をエンコードしており、そのベクトルと j

188
00:09:34,917 --> 00:09:36,420
ハットが広がっていま す。

189
00:09:36,420 --> 00:09:42,065
この男の変換されたバージョンは、出力ベクトルと行列の 2

190
00:09:42,065 --> 00:09:47,710
列目にまたがり、その面積はその行列の行列式で乗算されます。

191
00:09:47,710 --> 00:09:50,845
したがって、x を解くには、この新しい領域を完

192
00:09:50,845 --> 00:09:53,980
全な変換の行列式で割ったものを取 得できます。

193
00:09:53,980 --> 00:09:58,238
また、前に行ったことと同様に、最初の列が出力ベクトルで

194
00:09:58,238 --> 00:10:02,345
2 番目の列が元の行列と同じである新しい行列を作成する

195
00:10:02,345 --> 00:10:06,300
ことによって、出力平 行四辺形の面積を計算できます。

196
00:10:06,300 --> 00:10:09,014
したがって、繰り返しになりますが、出力空間からのデータ、

197
00:10:09,014 --> 00:10:11,821
つまり元の線形システムで表示される数値を使用するだけで、x

198
00:10:11,821 --> 00:10:13,600
が何であるべきかを解くことができます。

199
00:10:13,600 --> 00:10:16,520
線形方程式系の解を求めるこの公式は、

200
00:10:16,520 --> 00:10:19,440
クラマーの法則として知られています。

201
00:10:19,440 --> 00:10:20,875
ここで、健全性を確認するために、

202
00:10:20,875 --> 00:10:22,400
ここにいくつかの数字を入力します。

203
00:10:22,400 --> 00:10:25,136
一番上の変更された行列の行列式 は 4

204
00:10:25,136 --> 00:10:28,283
プラス 2、つまり 6 で、一番下の行列式は

205
00:10:28,283 --> 00:10:31,430
2 なので、x 座標は 3 になる はずです。

206
00:10:31,430 --> 00:10:35,910
実際、最初の入力ベクトルを振り返ると、x 座標は 3 です。

207
00:10:35,910 --> 00:10:39,689
同様に、Cramer の法則は、y 座標は 4 を

208
00:10:39,689 --> 00:10:43,469
2 で割った値、つまり 2 である必要があることを示

209
00:10:43,469 --> 00:10:47,540
唆しており、それが開始時の入力ベクトルの y 座標です。

210
00:10:47,540 --> 00:10:50,554
3 次元以上の場合も同様です。一度立ち止まって、自

211
00:10:50,554 --> 00:10:53,690
分自身でじっくり考えてみるこ とを強くお勧めします。

212
00:10:53,690 --> 00:10:56,770
ここで、少し勢いを付けてみましょう。

213
00:10:56,770 --> 00:10:58,926
私たちが持っているの は、3x3

214
00:10:58,926 --> 00:11:01,970
行列によって与えられる既知の変換と、線形システム

215
00:11:01,970 --> 00:11:05,141
の右側によって与えられる既知の出力ベクト ルです。

216
00:11:05,141 --> 00:11:08,185
そして、どの入力がその出力に到達するかを知りたい

217
00:11:08,185 --> 00:11:09,200
と考えています。

218
00:11:09,200 --> 00:11:12,858
たとえば、入力ベクトルの Z 座標を

219
00:11:12,858 --> 00:11:18,635
i-hat、j-hat、および謎の入力ベクトルで構成されるこ

220
00:11:18,635 --> 00:11:24,411
の平行六面体の体積と考えると、変換後にこの平行六面体の体積は

221
00:11:24,411 --> 00:11:26,530
どうなるでしょうか?

222
00:11:26,530 --> 00:11:28,190
その新しい体積はどうやって計算できるのでしょうか?

223
00:11:28,190 --> 00:11:31,474
本当に、立ち止まって、これをより高い次元に一般

224
00:11:31,474 --> 00:11:34,473
化するための詳細をじっくり考えてください。

225
00:11:34,473 --> 00:11:38,330
より大きな線形システムの解の各座標の式を見つけます。

226
00:11:38,330 --> 00:11:46,232
このようなより一般的なケースを考えて、それが機能すること

227
00:11:46,232 --> 00:11:54,135
、そしてなぜ機能 するのかを自分に納得させることによって

228
00:11:54,135 --> 00:11:58,932
、すべての学習が実際に行われます。

229
00:11:58,932 --> 00:12:06,835
Y ouTube で同じ推論をもう一度説明するのを聞くよ

230
00:12:06,835 --> 00:12:09,940
りもはるかに重要です。

