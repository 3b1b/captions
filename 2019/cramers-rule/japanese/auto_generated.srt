1
00:00:11,590 --> 00:00:15,800
以前のビデオで私は線形方程式系について話しましたが、これらの系の

2
00:00:15,840 --> 00:00:19,720
解を実際に計算することについての議論は脇に置いてしまいました。

3
00:00:19,720 --> 00:00:23,520
そして、数値計算は一般的にコンピューターに任せているのは事実ですが、これらの計算手法のい

4
00:00:23,520 --> 00:00:27,340
くつかを掘り下げることは、何が起こっているのかを実際に理解しているかどうかを知るための良

5
00:00:27,340 --> 00:00:31,380
いリトマス試験紙になります。なぜなら、それがまさに現実の世界と出会うところだからです。

6
00:00:31,380 --> 00:00:36,380
ここでは、これらのシステムの解を計算するための特定の方法 (クラマー則として知られる) の背後にある

7
00:00:36,380 --> 00:00:42,420
幾何学について説明したいと思います。ここでの関連する背景は、行列式、少しの内積、そし

8
00:00:42,420 --> 00:00:45,940
てもちろん線形連立方程式を理解することです。そのため、慣れていない場合や慣れ

9
00:00:45,940 --> 00:00:50,380
ていない場合は、これらのトピックに関する関連ビデオを必ず視聴してください。

10
00:00:50,380 --> 00:00:55,300
しかし、最初に最初に言っておきたいのは、このクラマーの法則は、実際に

11
00:00:55,500 --> 00:00:57,460
は線形方程式系の解を計算するための最良の方法ではないということです。

12
00:00:57,460 --> 00:01:03,060
たとえば、ガウス消去法は常に高速になります。では、なぜそれを学ぶのでしょうか？

13
00:01:03,060 --> 00:01:07,980
まあ、それは一種の文化旅行だと考えてください。これは、これらのシステムの背後にある理論に

14
00:01:07,980 --> 00:01:12,860
ついての知識を深めるのに役立つ演習です。この概念を頭に入れておくと、行列式や線形系な

15
00:01:12,860 --> 00:01:17,260
どの線形代数のアイデアが相互にどのように関係しているかを確認することができ、それ

16
00:01:17,260 --> 00:01:21,980
らのアイデアを統合するのに役立ちます。また、純粋に芸術的な観点から見ると、ここで

17
00:01:21,980 --> 00:01:26,900
の最終的な結果は、ガウス消去法よりもはるかに美しく、考えるのが非常に美しいです。

18
00:01:26,900 --> 00:01:31,820
さて、ここでの設定は、たとえば 2 つの未知数 x と y、および 2 つ

19
00:01:31,820 --> 00:01:37,820
の方程式を含む線形方程式系になります。原理的には、私たちが話していることは

20
00:01:37,820 --> 00:01:41,900
すべて、より多くの未知数と同じ数の方程式を持つシステムにも当てはまりますが、

21
00:01:41,900 --> 00:01:45,460
話を簡単にするために、より小さな例を頭に入れておくとわかりやすいでしょう。

22
00:01:45,460 --> 00:01:50,220
前回のビデオでお話ししたように、この設定は、未知のベクトル x、y を変換する特定の既

23
00:01:50,460 --> 00:01:57,100
知の行列として幾何学的に考えることができます。出力がどのようになるかはわかっています

24
00:01:57,100 --> 00:02:02,860
(この場合はマイナス 4)。マイナス2。この行列の列は、その行列が変換としてどのように機

25
00:02:02,860 --> 00:02:09,100
能するかを示しており、各列は入力空間の基底ベクトルがどこに到達するかを示していることに注意してく

26
00:02:09,100 --> 00:02:16,700
ださい。つまり、私たちが持っているのは一種のパズルです。どの入力ベクトル x、y がこの出力 (負の 4、負の

27
00:02:16,700 --> 00:02:22,700
2) に到達するでしょうか?ここでの小さなパズルを考える 1 つの方法は、指定された出力ベクト

28
00:02:22,700 --> 00:02:28,540
ルが行列の列の線形結合 (i-hat が着地するベクトルの x 倍と、j-hat が着地する

29
00:02:28,540 --> 00:02:33,500
ベクトルの y 倍) であることがわかっているということです。私たちが望んでいるのは、その線形

30
00:02:33,500 --> 00:02:38,940
結合が正確に何であるべきかを理解することです。ここで得られる答えの種類は、変換によって

31
00:02:38,940 --> 00:02:44,060
空間全体が低次元に押しつぶされるかどうか、つまり行列式がゼロかどうかによって決ま

32
00:02:44,060 --> 00:02:49,740
ることを覚えておいてください。その場合、指定された出力に入力がまったく到達しない

33
00:02:49,740 --> 00:02:58,620
か、その出力に大量の入力が到達するかのどちらかです。ただし、このビデオでは、ゼロ

34
00:02:58,620 --> 00:03:04,140
以外の行列式の場合に視点を限定します。つまり、この変換の出力は、開始時の完全な次

35
00:03:04,140 --> 00:03:10,060
元空間にまだ広がっていることを意味します。すべての入力は 1 つだけの出力に接続され、す

36
00:03:10,060 --> 00:03:16,460
べての出力には 1 つだけの入力があります。最初のパスとして、間違っているが正しい方向にあ

37
00:03:16,460 --> 00:03:21,900
るアイデアを示しましょう。この謎の入力ベクトルの x 座標は、最初の基底ベクトル 1

38
00:03:21,900 --> 00:03:28,300
, 0 との内積を取ることで得られるものです。同様に、y 座標は、2 番目の基底ベクトル

39
00:03:28,300 --> 00:03:34,860
0, 1 で点を打つことによって得られます。したがって、変換後、ミステリー ベクト

40
00:03:34,860 --> 00:03:39,900
ルと変換後のバージョンの内積もこれらの座標 x と y になることを

41
00:03:40,780 --> 00:03:46,780
期待しているかもしれません。これらの各ベクトルの変換バージョンが何であるかがわかって

42
00:03:46,780 --> 00:03:54,460
いるので、それは素晴らしいことです。ただ一つ問題があるのですが、それは全く真実ではありません。

43
00:03:54,460 --> 00:03:59,260
ほとんどの線形変換では、変換前と変換後の内積は大きく異な

44
00:03:59,260 --> 00:04:04,060
ります。たとえば、正の内積を持つ 2 つのベクトルが通常は同じ方

45
00:04:04,060 --> 00:04:08,780
向を向いている場合、変換中にこれらのベクトルが互いに引き離されて

46
00:04:08,860 --> 00:04:13,500
、最終的に負の内積になる場合があります。同様に、2 つの基底ベク

47
00:04:13,500 --> 00:04:19,020
トルのように、内積 0 で垂直に始まるものは、変換後も互いに垂直のまま

48
00:04:19,020 --> 00:04:23,900
ではないことがよくあります。つまり、その内積 0 が保持されません。

49
00:04:23,900 --> 00:04:27,340
そして、先ほど示した例を見ると、内積は確かに保存されず、ほとんど

50
00:04:27,340 --> 00:04:30,220
のベクトルが引き伸ばされるため、内積は大きくなる傾向があります。

51
00:04:30,940 --> 00:04:36,300
実際、ここで補足しておきますが、ドット積を保持する変換は、正規直交変換

52
00:04:36,300 --> 00:04:41,500
という独自の名前を持つほど特殊です。これらは、すべての基底ベクトルを互い

53
00:04:41,500 --> 00:04:46,700
に垂直にし、単位長を維持したままにするものです。これらは回転マトリックスと

54
00:04:46,700 --> 00:04:52,220
考えることが多く、伸びたり潰したりモーフィングを行わない剛体の動きに対応します。

55
00:04:52,860 --> 00:04:58,460
正規直交行列を使用して線形システムを解くのは、実際には非常に簡単です。ドット積は保持さ

56
00:04:58,460 --> 00:05:03,820
れるため、出力ベクトルと行列のすべての列の間のドット積を求め

57
00:05:03,820 --> 00:05:08,460
ることは、謎の入力ベクトルとすべての基底ベクトルの間のドット

58
00:05:08,460 --> 00:05:14,460
積を求めることと同じになり、単にその謎の入力の座標。したがっ

59
00:05:14,460 --> 00:05:19,820
て、この非常に特殊なケースでは、x は最初の列と出力ベクトルのドット

60
00:05:19,820 --> 00:05:23,740
積になり、y は 2 番目の列と出力ベクトルのドット積になります。

61
00:05:27,020 --> 00:05:31,260
この考えはほとんどすべての線形システムで当てはまらないのに、なぜこれを取り上げるのでしょうか?

62
00:05:31,260 --> 00:05:36,060
そう、それは私たちに、探すべきものの方向性を示してくれます。変換後も変化しない、入

63
00:05:36,060 --> 00:05:40,940
力ベクトルの座標に対する代替の幾何学的な理解はあるのでし

64
00:05:40,940 --> 00:05:45,980
ょうか?決定要因について考えているなら、次のような賢いアイデアを思いつくかもしれ

65
00:05:45,980 --> 00:05:52,700
ません。最初の基底ベクトル i-hat と謎の入力ベクトル xy によって定義される平行四辺形を

66
00:05:52,700 --> 00:05:59,820
考えます。この平行四辺形の面積は、底辺とその底辺に垂直な高さの 1 倍であり、

67
00:05:59,820 --> 00:06:05,980
これが入力ベクトルの y 座標になります。したがって、その平行四辺形の面積は、

68
00:06:05,980 --> 00:06:11,260
ベクトルの y 座標を記述する一種の厄介な回りくどい方法です。座標について話すのは奇抜な方

69
00:06:11,260 --> 00:06:16,060
法ですが、私と一緒に走りましょう。そして実際には、もう少し正確に言うと、行列式のビデオで

70
00:06:16,060 --> 00:06:21,580
説明されている意味で、これをその平行四辺形の符号付き領域と考える必要があります。

71
00:06:22,220 --> 00:06:27,660
このようにして、負の y 座標を持つベクトルは、少なくとも i-hat が、ある意味で

72
00:06:27,660 --> 00:06:32,460
、平行四辺形を定義する 2 つのベクトルのうちの最初のものであると考える場合、この平

73
00:06:32,460 --> 00:06:37,260
行四辺形の負の領域に対応します。そして対称的に、謎の入力ベクトルと 2 番目

74
00:06:37,260 --> 00:06:43,180
の基底 j ハットがまたがる平行四辺形を見ると、その面積がその謎のベクト

75
00:06:43,180 --> 00:06:48,540
ルの x 座標になります。繰り返しますが、これは x 座標を表す奇妙な方法ですが、それ

76
00:06:48,540 --> 00:06:52,540
が何をもたらすかはすぐにわかります。これがどのように一般化されるかを明確にするために、

77
00:06:52,540 --> 00:06:56,620
3 次元で見てみましょう。通常、ベクトルの座標の 1 つ、たとえば Z 座標に

78
00:06:56,620 --> 00:07:01,660
ついて考える方法は、k ハットと呼ばれることが多い 3 番目の標準基底ベクトル

79
00:07:01,660 --> 00:07:07,660
との内積を取ることです。しかし、別の幾何学的な解釈は、他の 2 つの基底ベクトル、i-h

80
00:07:07,660 --> 00:07:13,900
at と j-hat を使用して作成される平行六面体を考慮することになります。i-hat と

81
00:07:13,900 --> 00:07:20,540
j-hat がまたがるエリア 1 の正方形をこの形状全体のベースと考えると、その体積はそ

82
00:07:20,540 --> 00:07:25,500
の高さと同じになり、これがベクトルの 3 番目の座標になります。同様に、ベクトルの他の

83
00:07:25,500 --> 00:07:29,740
座標について考える奇妙な方法は、そのベクトルを使用して平行六面体を形成し、次に、探

84
00:07:29,740 --> 00:07:34,780
している方向に対応するもの以外のすべての基底ベクトルを使用して平行六面体を形成するこ

85
00:07:34,780 --> 00:07:39,580
とです。そして、このボリュームによってコーディネートが決まります。むしろ、右手の法則を使用した

86
00:07:39,580 --> 00:07:44,220
行列式ビデオで説明されている意味で、平行六面体の符号付き体積について話す

87
00:07:44,220 --> 00:07:49,580
べきです。したがって、これら 3 つのベクトルをリストする順序が重要になります。そうすれば、負の

88
00:07:49,580 --> 00:07:55,500
座標も意味を持ちます。では、なぜこのように座標を面積や体積として考えるのでしょうか?

89
00:07:55,500 --> 00:08:01,100
ある種の行列変換を適用すると、これらの平行四辺形の面積は同じままでは

90
00:08:01,100 --> 00:08:05,740
なく、拡大または縮小される可能性があります。しかし、これが行列式の重

91
00:08:05,740 --> 00:08:11,500
要な考え方ですが、すべての領域は同じ量、つまり変換行列の行列式でスケ

92
00:08:11,500 --> 00:08:17,100
ールされます。たとえば、最初の基底ベクトルが到達するベクトル (行列の最初

93
00:08:17,100 --> 00:08:22,460
の列) と xy の変換バージョンがまたがる平行四辺形を見ると、その面積は

94
00:08:22,460 --> 00:08:28,620
いくらでしょうか。これは、先ほど見ていた平行四辺形の変形版であ

95
00:08:28,620 --> 00:08:33,660
り、その面積が謎の入力ベクトルの y 座標であるものです。

96
00:08:33,660 --> 00:08:39,180
したがって、その面積は、その y 座標を乗じた変換の決定要因になります。

97
00:08:39,980 --> 00:08:46,540
つまり、出力空間内のこの新しい平行四辺形の面積を完全な変換の行列式で割ることによ

98
00:08:46,540 --> 00:08:52,380
って y を解くことができるということになります。そして、どうやってその領域を取得しますか？

99
00:08:53,020 --> 00:08:57,340
そうですね、謎の入力ベクトルが到達する座標はわかっています。これが

100
00:08:57,340 --> 00:09:03,260
線形方程式系の要点です。したがって、最初の列が行列と同じであるが、

101
00:09:03,260 --> 00:09:09,100
2 番目の列が出力ベクトルである新しい行列を作成し、その行列式を

102
00:09:09,100 --> 00:09:15,500
取得します。見てください、変換の出力からのデータ、つまり行

103
00:09:15,500 --> 00:09:19,180
列の列と出力ベクトルの座標を使用するだけで、謎の入力ベクトル

104
00:09:19,180 --> 00:09:23,980
の y 座標を回復できます。これはシステムの解決の途中です

105
00:09:23,980 --> 00:09:29,580
。同様に、同じ考え方で x 座標を得ることができます。先ほど定義した平行四辺形を見てください。

106
00:09:29,580 --> 00:09:35,180
これは、謎の入力ベクトルの x 座標をエンコードしており、そのベクトルと j ハットが広がっていま

107
00:09:35,180 --> 00:09:41,900
す。この男の変換されたバージョンは、出力ベクトルと行列の 2

108
00:09:41,900 --> 00:09:46,860
列目にまたがり、その面積はその行列の行列式で乗算されます。

109
00:09:47,500 --> 00:09:52,220
したがって、x を解くには、この新しい領域を完全な変換の行列式で割ったものを取

110
00:09:52,220 --> 00:09:57,260
得できます。また、前に行ったことと同様に、最初の列が出力ベクトルで 2

111
00:09:57,260 --> 00:10:03,260
番目の列が元の行列と同じである新しい行列を作成することによって、出力平

112
00:10:03,260 --> 00:10:08,540
行四辺形の面積を計算できます。したがって、繰り返しになりますが、出力空間からのデータ、

113
00:10:08,540 --> 00:10:12,620
つまり元の線形システムで表示される数値を使用するだけで、x が何であるべきかを解くことができます。

114
00:10:13,340 --> 00:10:18,380
線形方程式系の解を求めるこの公式は、クラマーの法則として知られています。

115
00:10:19,020 --> 00:10:23,660
ここで、健全性を確認するために、ここにいくつかの数字を入力します。一番上の変更された行列の行列式

116
00:10:23,660 --> 00:10:30,140
は 4 プラス 2、つまり 6 で、一番下の行列式は 2 なので、x 座標は 3 になる

117
00:10:30,140 --> 00:10:35,420
はずです。実際、最初の入力ベクトルを振り返ると、x 座標は 3 です。

118
00:10:36,140 --> 00:10:40,940
同様に、Cramer の法則は、y 座標は 4 を 2 で割った値、つまり 2

119
00:10:40,940 --> 00:10:46,220
である必要があることを示唆しており、それが開始時の入力ベクトルの y 座標です。

120
00:10:47,260 --> 00:10:52,300
3 次元以上の場合も同様です。一度立ち止まって、自分自身でじっくり考えてみるこ

121
00:10:52,300 --> 00:10:57,420
とを強くお勧めします。ここで、少し勢いを付けてみましょう。私たちが持っているの

122
00:10:57,420 --> 00:11:03,740
は、3x3 行列によって与えられる既知の変換と、線形システムの右側によって与えられる既知の出力ベクト

123
00:11:03,740 --> 00:11:10,060
ルです。そして、どの入力がその出力に到達するかを知りたいと考えています。そして、たとえば、その

124
00:11:10,060 --> 00:11:15,340
入力ベクトルの Z 座標を、i-hat、j-hat、および謎の入力ベクトルに

125
00:11:15,340 --> 00:11:21,580
またがる、先ほど見ていた特別な平行六面体の体積として考えると、その体積はどう

126
00:11:21,580 --> 00:11:27,420
なるでしょうか。変身後は？そして、その体積を計算するさまざまな方法にはどのようなものがあるのでしょうか?

127
00:11:28,140 --> 00:11:32,060
本当に、立ち止まって、これを高次元に一般化し、より大きな線形シ

128
00:11:32,060 --> 00:11:36,940
ステムの解の各座標の式を見つける詳細をじっくり考えてください

129
00:11:36,940 --> 00:11:42,060
。このようなより一般的なケースを考えて、それが機能すること、そしてなぜ機能

130
00:11:42,060 --> 00:11:46,780
するのかを自分に納得させることによって、すべての学習が実際に行われます。Y

131
00:11:46,780 --> 00:11:49,660
ouTube で同じ推論をもう一度説明するのを聞くよりもはるかに重要です。

