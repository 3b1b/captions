1
00:00:11,200 --> 00:00:13,805
以前のビデオで私は線形方程式系について話し

2
00:00:13,805 --> 00:00:16,410
ましたが、これらの系の 解を実際に計算する

3
00:00:16,410 --> 00:00:19,140
ことについての議論は脇に置いてしまいました。

4
00:00:19,700 --> 00:00:22,010
そして、数値計算は一般的にコンピューターに任せている

5
00:00:22,010 --> 00:00:23,699
のは事実ですが、これらの計算手法のい 

6
00:00:23,699 --> 00:00:26,009
くつかを掘り下げることは、何が起こっているのかを実際

7
00:00:26,009 --> 00:00:27,698
に理解しているかどうかを知るための良 

8
00:00:27,698 --> 00:00:30,009
いリトマス試験紙になります。なぜなら、それがまさに現

9
00:00:30,009 --> 00:00:31,520
実の世界と出会うところだからです。

10
00:00:32,119 --> 00:00:34,961
ここでは、これらのシステムの解を計算するための特定の方法 

11
00:00:34,961 --> 00:00:37,116
(クラマー則として知られる) の背後にある 

12
00:00:37,116 --> 00:00:38,880
幾何学について説明したいと思います。

13
00:00:39,680 --> 00:00:42,364
ここで必要となる関連する背景は、行列式、内積、

14
00:00:42,364 --> 00:00:45,050
および線形方程式系の理解です。そのため、慣れて

15
00:00:45,050 --> 00:00:47,735
いない場合や慣れていない場合は、これらのトピッ

16
00:00:47,735 --> 00:00:50,420
クに関する関連ビデオを必ず視聴してください。 

17
00:00:51,020 --> 00:00:51,440
でもまず！ 

18
00:00:51,440 --> 00:00:54,292
クレイマーの法則は、線形方程式系の解を計算するため

19
00:00:54,292 --> 00:00:57,260
の最良の方法ではないことを、最初に言っておきます。 

20
00:00:58,140 --> 00:01:01,260
たとえば、ガウス消去法は常に高速になります。 

21
00:01:01,980 --> 00:01:03,520
では、なぜそれを学ぶのでしょうか？ 

22
00:01:03,780 --> 00:01:06,220
これを一種の文化旅行と考えてください。

23
00:01:06,220 --> 00:01:09,560
これらのシステムの理論についての知識を深めるのに役立

24
00:01:09,560 --> 00:01:10,460
つ演習です。 

25
00:01:11,040 --> 00:01:13,417
この概念を頭に入れておくと、行列式や線形系な 

26
00:01:13,417 --> 00:01:16,208
どの線形代数のアイデアが相互にどのように関係しているか

27
00:01:16,208 --> 00:01:18,999
を確認することができ、それ らのアイデアを統合するのに

28
00:01:18,999 --> 00:01:19,620
役立ちます。

29
00:01:20,100 --> 00:01:22,505
また、純粋に芸術的な観点から見ると、ここで 

30
00:01:22,505 --> 00:01:24,692
の最終的な結果は、ガウス消去法よりもはる

31
00:01:24,692 --> 00:01:26,880
かに美しく、考えるのが非常に美しいです。

32
00:01:28,680 --> 00:01:32,089
さて、ここでの設定は、たとえば 2 つの未知数 x と 

33
00:01:32,089 --> 00:01:35,620
y、および 2 つ の方程式を含む線形方程式系になります。

34
00:01:36,300 --> 00:01:39,066
原理的には、私たちが話していることはすべて、より多く

35
00:01:39,066 --> 00:01:41,940
の未知数と同じ数の方程式を持つシステムで機能します。 

36
00:01:42,440 --> 00:01:43,971
ただし、わかりやすくするために、小さな例

37
00:01:43,971 --> 00:01:45,580
を頭に入れておくとわかりやすいでしょう。 

38
00:01:46,320 --> 00:01:49,687
したがって、前のビデオで説明したように、この設定は、未

39
00:01:49,687 --> 00:01:53,055
知のベクトル [x; を変換する特定の既知の行列として

40
00:01:53,055 --> 00:01:55,050
幾何学的に考えることができます。

41
00:01:55,050 --> 00:01:58,044
 y]、出力がどのようになるかがわかっています。

42
00:01:58,044 --> 00:02:00,040
この場合は [-4; -2]。 

43
00:02:00,800 --> 00:02:03,774
この行列の列は、その行列が変換としてどのように機 

44
00:02:03,774 --> 00:02:06,867
能するかを示しており、各列は入力空間の基底ベクトルが

45
00:02:06,867 --> 00:02:10,080
どこに到達するかを示していることに注意してく ださい。

46
00:02:10,860 --> 00:02:11,768
つまり、私たちが持っているのは一種のパズルです。

47
00:02:11,768 --> 00:02:12,828
どの入力ベクトル x、y がこの出力 (負の 4、負の 

48
00:02:12,828 --> 00:02:13,927
2) に到達するでしょうか?ここでの小さなパズルを考える 

49
00:02:13,927 --> 00:02:14,646
1 つの方法は、指定された出力ベクト 

50
00:02:14,646 --> 00:02:15,782
ルが行列の列の線形結合 (i-hat が着地するベクトルの 

51
00:02:15,782 --> 00:02:16,842
x 倍と、j-hat が着地する ベクトルの y 倍) 

52
00:02:16,842 --> 00:02:17,600
であることがわかっているということです。

53
00:02:17,600 --> 00:02:21,083
ここで得られる答えの種類は、変換によって

54
00:02:21,083 --> 00:02:24,567
空間全体が低次元に押しつぶされるかどうか

55
00:02:24,567 --> 00:02:28,400
によって決まることを覚えておいてください。 

56
00:02:28,400 --> 00:02:31,220
それは、決定要因がゼロの場合です。 

57
00:02:31,220 --> 00:02:33,676
その場合、指定された出力に到達する入力がまったくないか、

58
00:02:33,676 --> 00:02:36,220
その出力に到達する入力が大量に存在するかのどちらかです。 

59
00:02:37,240 --> 00:02:39,522
ただし、このビデオでは、ゼロ 以外の行列式の場合

60
00:02:39,522 --> 00:02:41,805
に視点を限定します。つまり、この変換の出力は、開

61
00:02:41,805 --> 00:02:44,564
始時の完全な次 元空間にまだ広がっていることを意味します。

62
00:02:44,564 --> 00:02:46,847
すべての入力は 1 つだけの出力に接続され、す 

63
00:02:46,847 --> 00:02:48,940
べての出力には 1 つだけの入力があります。

64
00:02:48,940 --> 00:02:52,393
このパズルについて考える 1 つの方法は、指定された出

65
00:02:52,393 --> 00:02:55,847
力ベクトルが行列の列の線形結合であることがわかっている

66
00:02:55,847 --> 00:02:59,556
ということです。 x*(i-hat が着地するベクトル) 

67
00:02:59,556 --> 00:03:03,138
+ y*(j-hat が着地するベクトル) しかし、x 

68
00:03:03,138 --> 00:03:06,720
と y が正確に何であるかを計算したいと考えています。 

69
00:03:06,720 --> 00:03:12,285
最初のパスとして、間違っているが正し

70
00:03:12,285 --> 00:03:18,160
い方向にあるアイデアを示しましょう。 

71
00:03:18,800 --> 00:03:23,964
この謎の入力ベクトルの x 座標は、最初の基底ベクトル 

72
00:03:23,964 --> 00:03:25,440
[1; 0]。 

73
00:03:26,160 --> 00:03:29,137
同様に、y 座標は、2 番目の基底ベクトル 0, 

74
00:03:29,137 --> 00:03:31,400
1 で点を打つことによって得られます。

75
00:03:31,900 --> 00:03:35,186
したがって、変換後、ミステリー ベクト 

76
00:03:35,186 --> 00:03:38,802
ルと変換後のバージョンの内積もこれらの座標 

77
00:03:38,802 --> 00:03:43,240
x と y になることを 期待しているかもしれません。

78
00:03:43,940 --> 00:03:46,901
これらの各ベクトルの変換バージョンが何であるかがわかって 

79
00:03:46,901 --> 00:03:48,740
いるので、それは素晴らしいことです。

80
00:03:51,180 --> 00:03:54,200
ただ一つ問題があるのですが、それは全く真実ではありません。

81
00:03:54,640 --> 00:03:59,561
ほとんどの線形変換では、変換前と変換後の内積は大きく異な 

82
00:03:59,561 --> 00:04:00,240
ります。

83
00:04:00,800 --> 00:04:04,591
たとえば、正の内積を持つ 2 つのベクトルが通常は同じ方 

84
00:04:04,591 --> 00:04:08,120
向を向いている場合、変換中にこれらのベクトルが互いに引

85
00:04:08,120 --> 00:04:11,520
き離されて 、最終的に負の内積になる場合があります。

86
00:04:12,220 --> 00:04:15,611
同様に、2 つの基底ベク トルのように、内積 0 

87
00:04:15,611 --> 00:04:18,867
で垂直に始まるものは、変換後も互いに垂直のまま 

88
00:04:18,867 --> 00:04:22,259
ではないことがよくあります。つまり、その内積 0 

89
00:04:22,259 --> 00:04:23,480
が保持されません。

90
00:04:24,100 --> 00:04:27,160
私たちが見ていた例では、内積は確かに保存されません。 

91
00:04:27,500 --> 00:04:28,720
ほとんどのベクトルが引き伸ばされるため

92
00:04:28,720 --> 00:04:29,940
、それらは大きくなる傾向があります。 

93
00:04:29,940 --> 00:04:34,408
実際、ドット積を保持する変換は、正規直交

94
00:04:34,408 --> 00:04:39,100
変換という独自の名前を持つほど特別です。 

95
00:04:39,720 --> 00:04:41,902
これらは、すべての基底ベクトルを互い 

96
00:04:41,902 --> 00:04:44,660
に垂直にし、単位長を維持したままにするものです。

97
00:04:45,740 --> 00:04:47,880
これらは回転行列として考えることがよくあります。 

98
00:04:48,420 --> 00:04:50,940
ストレッチ、潰し、モーフィングを行わない、リジッド 

99
00:04:50,940 --> 00:04:52,200
モーションに対応します。 

100
00:04:53,000 --> 00:04:57,646
正規直交行列を使用して線形システムを解くのは非常に簡単です。

101
00:04:57,646 --> 00:05:01,518
内積が保存されるため、出力ベクトルと行列のすべての

102
00:05:01,518 --> 00:05:05,390
列の間の内積を求めることは、入力ベクトルとすべての

103
00:05:05,390 --> 00:05:08,798
基底の間の内積を求めることと同じになります。

104
00:05:08,798 --> 00:05:12,980
これは、入力ベクトルの座標を見つけることと同じです。 

105
00:05:13,680 --> 00:05:16,855
したがっ て、この非常に特殊なケースでは、x 

106
00:05:16,855 --> 00:05:20,169
は最初の列と出力ベクトルのドット 積になり、y 

107
00:05:20,169 --> 00:05:23,760
は 2 番目の列と出力ベクトルのドット積になります。

108
00:05:26,820 --> 00:05:29,263
この考えはほとんどすべての線形システムで当てはまらない

109
00:05:29,263 --> 00:05:31,163
のに、なぜこれを取り上げるのでしょうか? 

110
00:05:31,163 --> 00:05:33,878
そう、それは私たちに、探すべきものの方向性を示してくれます。

111
00:05:33,878 --> 00:05:36,321
変換後も変化しない、入 力ベクトルの座標に対する代替の

112
00:05:36,321 --> 00:05:38,764
幾何学的な理解はあるのでし ょうか?決定要因について考

113
00:05:38,764 --> 00:05:41,298
えているなら、次のような賢いアイデアを思いつくかもしれ 

114
00:05:41,298 --> 00:05:41,660
ません。

115
00:05:42,360 --> 00:05:48,288
最初の基底ベクトル i-hat と謎の入力ベクトル 

116
00:05:48,288 --> 00:05:53,760
xy によって定義される平行四辺形を 考えます。

117
00:05:54,440 --> 00:05:58,547
この平行四辺形の面積は、底辺とその底辺に垂直な高さの 

118
00:05:58,547 --> 00:06:02,960
1 倍であり、 これが入力ベクトルの y 座標になります。

119
00:06:03,680 --> 00:06:06,794
したがって、その平行四辺形の面積は、 ベクトルの y 

120
00:06:06,794 --> 00:06:09,448
座標を記述する一種の厄介な回りくどい方法です。

121
00:06:09,448 --> 00:06:12,563
座標について話すのは奇抜な方 法ですが、私と一緒に走り

122
00:06:12,563 --> 00:06:13,140
ましょう。

123
00:06:13,700 --> 00:06:16,969
そして実際には、もう少し正確に言うと、行列式のビデオで 

124
00:06:16,969 --> 00:06:19,538
説明されている意味で、これをその平行四辺形の

125
00:06:19,538 --> 00:06:21,640
符号付き領域と考える必要があります。

126
00:06:22,200 --> 00:06:24,058
このようにして、負の y 座標を持つベクトルは、少なくとも 

127
00:06:24,058 --> 00:06:25,668
i-hat が、ある意味で 、平行四辺形を定義する 

128
00:06:25,668 --> 00:06:27,217
2 つのベクトルのうちの最初のものであると考える場

129
00:06:27,217 --> 00:06:28,580
合、この平 行四辺形の負の領域に対応します。

130
00:06:28,960 --> 00:06:30,220
そして対称的に、謎の入力ベクトルと 2 番目 

131
00:06:30,220 --> 00:06:31,535
の基底 j ハットがまたがる平行四辺形を見ると、

132
00:06:31,535 --> 00:06:32,960
その面積がその謎のベクト ルの x 座標になります。

133
00:06:32,960 --> 00:06:35,810
繰り返しますが、これは x 座標を表す奇妙な方法

134
00:06:35,810 --> 00:06:38,780
ですが、それ が何をもたらすかはすぐにわかります。

135
00:06:38,780 --> 00:06:41,461
これがどのように一般化されるかを明確にするために、 3 

136
00:06:41,461 --> 00:06:43,855
次元で見てみましょう。通常、ベクトルの座標の 1 

137
00:06:43,855 --> 00:06:46,249
つ、たとえば Z 座標に ついて考える方法は、k 

138
00:06:46,249 --> 00:06:48,930
ハットと呼ばれることが多い 3 番目の標準基底ベクトル 

139
00:06:48,930 --> 00:06:50,080
との内積を取ることです。

140
00:06:50,680 --> 00:06:51,224
しかし、別の幾何学的な解釈は、他の 2 

141
00:06:51,224 --> 00:06:51,877
つの基底ベクトル、i-h at と j-hat 

142
00:06:51,877 --> 00:06:52,640
を使用して作成される平行六面体を考慮することになります。

143
00:06:52,740 --> 00:06:54,034
i-hat と j-hat がまたがるエリア 1 

144
00:06:54,034 --> 00:06:55,483
の正方形をこの形状全体のベースと考えると、その体積はそ 

145
00:06:55,483 --> 00:06:56,570
の高さと同じになり、これがベクトルの 3 

146
00:06:56,570 --> 00:06:57,140
番目の座標になります。

147
00:06:57,140 --> 00:06:59,656
同様に、ベクトルの他の 座標について考える奇妙な方法

148
00:06:59,656 --> 00:07:02,365
は、そのベクトルを使用して平行六面体を形成し、次に、探 

149
00:07:02,365 --> 00:07:04,881
している方向に対応するもの以外のすべての基底ベクトル

150
00:07:04,881 --> 00:07:06,913
を使用して平行六面体を形成するこ とです。

151
00:07:06,913 --> 00:07:09,720
そして、このボリュームによってコーディネートが決まります。

152
00:07:09,720 --> 00:07:12,885
むしろ、右手の法則を使用した 行列式ビデオで説

153
00:07:12,885 --> 00:07:16,875
明されている意味で、平行六面体の符号付き体積について話す 

154
00:07:16,875 --> 00:07:19,215
べきです。したがって、これら 3 

155
00:07:19,215 --> 00:07:22,380
つのベクトルをリストする順序が重要になります。

156
00:07:22,380 --> 00:07:25,240
そうすれば、負の 座標も意味を持ちます。

157
00:07:25,240 --> 00:07:26,370
では、なぜこのように座標を面積や

158
00:07:26,370 --> 00:07:27,500
体積として考えるのでしょうか? 

159
00:07:27,500 --> 00:07:28,728
ある種の行列変換を適用すると、これらの平行四辺形の面積は

160
00:07:28,728 --> 00:07:30,000
同じままでは なく、拡大または縮小される可能性があります。

161
00:07:30,000 --> 00:07:31,980
しかし (!)、これは行列式の重要な考え方ですが、

162
00:07:31,980 --> 00:07:33,960
これらすべての領域は同じ量だけスケールされます。 

163
00:07:33,960 --> 00:07:37,900
つまり、変換行列の行列式です。 

164
00:07:38,440 --> 00:07:43,897
たとえば、最初の基底ベクトルが到達するベクトル 

165
00:07:43,897 --> 00:07:50,720
(行列の最初の列) と [x; y]、その面積は何ですか? 

166
00:07:50,720 --> 00:07:54,063
これは、先ほど見ていた平行四辺形の変形版であ 

167
00:07:54,063 --> 00:07:58,280
り、その面積が謎の入力ベクトルの y 座標であるものです。

168
00:07:58,960 --> 00:08:00,376
したがって、その面積は、その y 

169
00:08:00,376 --> 00:08:01,960
座標を乗じた変換の決定要因になります。

170
00:08:01,960 --> 00:08:04,375
したがって、謎の入力ベクトルの y 

171
00:08:04,375 --> 00:08:07,731
座標は、行列の最初の列と出力ベクトルで構成されるこ

172
00:08:07,731 --> 00:08:11,086
の平行四辺形の面積を、完全な変換の行列式で割ったも

173
00:08:11,086 --> 00:08:12,160
のになります。 

174
00:08:12,160 --> 00:08:14,880
そして、どうやってこの領域を取得しますか？ 

175
00:08:14,880 --> 00:08:18,140
そうですね、謎の入力ベクトルが到達する座標はわかっています。

176
00:08:18,140 --> 00:08:19,880
これが線形方程式系の要点です。 

177
00:08:19,880 --> 00:08:24,568
したがって、最初の列が行列と同じであるが、 

178
00:08:24,568 --> 00:08:28,830
2 番目の列が出力ベクトルである新しい行

179
00:08:28,830 --> 00:08:32,880
列を作成し、その行列式を 取得します。

180
00:08:32,880 --> 00:08:35,453
見てください、変換の出力からのデータ、つまり行 

181
00:08:35,453 --> 00:08:38,454
列の列と出力ベクトルの座標を使用するだけで、謎の入力ベク

182
00:08:38,454 --> 00:08:40,277
トル の y 座標を回復できます。

183
00:08:40,277 --> 00:08:42,100
これはシステムの解決の途中です 。

184
00:08:42,100 --> 00:08:43,500
同様に、同じ考え方で x 座標を得ることができます。

185
00:08:43,500 --> 00:08:47,288
先ほど定義した平行四辺形を見てください。

186
00:08:47,288 --> 00:08:50,319
これは、謎の入力ベクトルの x 

187
00:08:50,319 --> 00:08:54,677
座標をエンコードしており、そのベクトルと j 

188
00:08:54,677 --> 00:08:57,140
ハットが広がっていま す。

189
00:08:57,140 --> 00:09:01,089
この男の変換されたバージョンは、出力ベクトルと行列の 2 

190
00:09:01,089 --> 00:09:05,040
列目にまたがり、その面積はその行列の行列式で乗算されます。

191
00:09:05,060 --> 00:09:10,099
したがって、x を解くには、この新しい領域を完

192
00:09:10,099 --> 00:09:15,140
全な変換の行列式で割ったものを取 得できます。

193
00:09:15,600 --> 00:09:18,303
また、前に行ったことと同様に、最初の列が出力ベクトルで 

194
00:09:18,303 --> 00:09:20,909
2 番目の列が元の行列と同じである新しい行列を作成する

195
00:09:20,909 --> 00:09:23,420
ことによって、出力平 行四辺形の面積を計算できます。

196
00:09:23,420 --> 00:09:27,137
したがって、繰り返しになりますが、出力空間からのデータ、 

197
00:09:27,137 --> 00:09:30,984
つまり元の線形システムで表示される数値を使用するだけで、x 

198
00:09:30,984 --> 00:09:33,420
が何であるべきかを解くことができます。

199
00:09:33,420 --> 00:09:38,950
線形方程式系の解を求めるこの公式は、

200
00:09:38,950 --> 00:09:44,480
クラマーの法則として知られています。

201
00:09:44,480 --> 00:09:44,896
ここで、健全性を確認するために、

202
00:09:44,896 --> 00:09:45,340
ここにいくつかの数字を入力します。

203
00:09:45,340 --> 00:09:47,643
一番上の変更された行列の行列式 は 4 

204
00:09:47,643 --> 00:09:50,291
プラス 2、つまり 6 で、一番下の行列式は 

205
00:09:50,291 --> 00:09:52,940
2 なので、x 座標は 3 になる はずです。

206
00:09:53,860 --> 00:10:04,340
実際、最初の入力ベクトルを振り返ると、x 座標は 3 です。

207
00:10:04,340 --> 00:10:05,438
同様に、Cramer の法則は、y 座標は 4 を 

208
00:10:05,438 --> 00:10:06,537
2 で割った値、つまり 2 である必要があることを示

209
00:10:06,537 --> 00:10:07,720
唆しており、それが開始時の入力ベクトルの y 座標です。

210
00:10:07,720 --> 00:10:12,965
3 次元以上の場合も同様です。一度立ち止まって、自

211
00:10:12,965 --> 00:10:18,420
分自身でじっくり考えてみるこ とを強くお勧めします。

212
00:10:19,120 --> 00:10:21,580
ここで、少し勢いを付けてみましょう。

213
00:10:21,580 --> 00:10:23,606
私たちが持っているの は、3x3 

214
00:10:23,606 --> 00:10:26,466
行列によって与えられる既知の変換と、線形システム

215
00:10:26,466 --> 00:10:29,446
の右側によって与えられる既知の出力ベクト ルです。

216
00:10:29,446 --> 00:10:32,306
そして、どの入力がその出力に到達するかを知りたい

217
00:10:32,306 --> 00:10:33,260
と考えています。

218
00:10:33,260 --> 00:10:35,662
たとえば、入力ベクトルの Z 座標を 

219
00:10:35,662 --> 00:10:39,455
i-hat、j-hat、および謎の入力ベクトルで構成されるこ

220
00:10:39,455 --> 00:10:43,249
の平行六面体の体積と考えると、変換後にこの平行六面体の体積は

221
00:10:43,249 --> 00:10:44,640
どうなるでしょうか? 

222
00:10:44,640 --> 00:10:51,660
その新しい体積はどうやって計算できるのでしょうか? 

223
00:10:51,660 --> 00:10:55,877
本当に、立ち止まって、これをより高い次元に一般

224
00:10:55,877 --> 00:10:59,728
化するための詳細をじっくり考えてください。

225
00:10:59,728 --> 00:11:04,680
より大きな線形システムの解の各座標の式を見つけます。 

226
00:11:05,100 --> 00:11:15,950
このようなより一般的なケースを考えて、それが機能すること

227
00:11:15,950 --> 00:11:26,800
、そしてなぜ機能 するのかを自分に納得させることによって

228
00:11:26,800 --> 00:11:33,387
、すべての学習が実際に行われます。

229
00:11:33,387 --> 00:11:44,237
Y ouTube で同じ推論をもう一度説明するのを聞くよ

230
00:11:44,237 --> 00:11:48,500
りもはるかに重要です。

