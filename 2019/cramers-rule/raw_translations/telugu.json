[
 {
  "input": "In a previous video, I’ve talked about linear 00:00:15,800 --> 00:00:19,690 3  is a good litmus test for whether or not you actually understand what’s going on, since 00:00:31,680 --> 00:00:32,680 00:00:32,680 --> 00:00:36,379 8 9  sure to watch the relevant videos on those topics if you’re unfamiliar or rusty.",
  "model": "nmt",
  "translatedText": "మునుపటి వీడియోలో నేను సమీకరణాల సరళ వ్యవస్థల గురించి మాట్లాడాను మరియు ఈ సిస్టమ్‌లకు వాస్తవానికి కంప్యూటింగ్ పరిష్కారాల చర్చను నేను పక్కన పెట్టాను. నంబర్ క్రంచింగ్ అనేది సాధారణంగా మనం కంప్యూటర్‌లకు వదిలివేస్తాం అనేది నిజం అయితే, ఈ గణన పద్ధతుల్లో కొన్నింటిని త్రవ్వడం అనేది మీరు నిజంగా ఏమి జరుగుతుందో అర్థం చేసుకున్నారా లేదా అనేదానికి మంచి లిట్మస్ పరీక్ష, ఎందుకంటే రబ్బరు రహదారిని కలిసేది ఇక్కడే. క్రామెర్స్ రూల్ అని పిలువబడే ఈ సిస్టమ్‌లకు పరిష్కారాలను కంప్యూటింగ్ చేయడానికి ఒక నిర్దిష్ట పద్ధతి వెనుక ఉన్న జ్యామితిని నేను ఇక్కడ వివరించాలనుకుంటున్నాను. ఇక్కడ సంబంధిత నేపథ్యం డిటర్మినేట్‌లను అర్థం చేసుకోవడం, కొంచెం డాట్ ప్రొడక్ట్‌లు మరియు ఈక్వేషన్‌ల లీనియర్ సిస్టమ్‌లను అర్థం చేసుకోవడం, కాబట్టి మీకు తెలియని లేదా తుప్పు పట్టి ఉంటే ఆ అంశాలపై సంబంధిత వీడియోలను తప్పకుండా చూడండి. అయితే మొదట నేను ముందుగా చెప్పాలి, ఈ క్రేమర్ నియమం వాస్తవానికి సరళ సమీకరణ వ్యవస్థలకు పరిష్కారాలను కంప్యూటింగ్ చేయడానికి ఉత్తమ మార్గం కాదు. ఉదాహరణకు, గాస్సియన్ తొలగింపు ఎల్లప్పుడూ వేగంగా ఉంటుంది. కాబట్టి దీన్ని ఎందుకు నేర్చుకోవాలి? ఇది ఒక విధమైన సాంస్కృతిక విహారంగా భావించండి."
 },
 {
  "input": "But first!",
  "model": "nmt",
  "translatedText": "ఈ వ్యవస్థల వెనుక ఉన్న సిద్ధాంతం గురించి మీ జ్ఞానాన్ని మరింతగా పెంచుకోవడంలో ఇది సహాయక వ్యాయామం."
 },
 {
  "input": "I should say up front that Cramer’s rule 00:00:56,379 --> 00:00:58,010 00:00:58,010 --> 00:01:01,950 16 17   help consolidate ideas from linear algebra, like the determinant and linear systems, by 00:01:19,960 --> 00:01:24,619 22 23   will work systems with a larger number of unknowns, and the same number of equations.",
  "model": "nmt",
  "translatedText": "ఈ కాన్సెప్ట్ చుట్టూ మీ మనస్సును చుట్టడం వలన, అవి ఒకదానితో ఒకటి ఎలా సంబంధం కలిగి ఉన్నాయో చూడటం ద్వారా, డిటర్మినెంట్ మరియు లీనియర్ సిస్టమ్‌ల వంటి లీనియర్ ఆల్జీబ్రా నుండి ఆలోచనలను ఏకీకృతం చేయడంలో సహాయపడతాయి. అలాగే, పూర్తిగా కళాత్మక దృక్కోణం నుండి, ఇక్కడ అంతిమ ఫలితం గాస్సియన్ ఎలిమినేషన్ కంటే ఆలోచించడం చాలా అందంగా ఉంది. సరే, కాబట్టి ఇక్కడ సెటప్ కొన్ని సరళ సమీకరణాల వ్యవస్థగా ఉంటుంది, రెండు తెలియనివి, x మరియు y మరియు రెండు సమీకరణాలతో చెప్పండి. సూత్రప్రాయంగా, మనం మాట్లాడుతున్న ప్రతిదీ పెద్ద సంఖ్యలో తెలియని మరియు అదే సంఖ్యలో సమీకరణాలు కలిగిన సిస్టమ్‌ల కోసం కూడా పని చేస్తుంది, కానీ సరళత కోసం ఒక చిన్న ఉదాహరణ మన తలలో ఉంచుకోవడం మంచిది. కాబట్టి నేను మునుపటి వీడియోలో మాట్లాడినట్లుగా, మీరు ఈ సెటప్‌ను రేఖాగణితంగా ఆలోచించవచ్చు, తెలియని వెక్టర్, x, yని మార్చే నిర్దిష్ట తెలిసిన మాతృకగా, అవుట్‌పుట్ ఎలా ఉంటుందో మీకు తెలుసు, ఈ సందర్భంలో, ప్రతికూల 4, ప్రతికూల 2. గుర్తుంచుకోండి, ఈ మాత్రిక యొక్క నిలువు వరుసలు ఆ మాతృక రూపాంతరం వలె ఎలా పనిచేస్తుందో మీకు తెలియజేస్తున్నాయని గుర్తుంచుకోండి, ఇన్‌పుట్ స్థలం యొక్క ప్రాతిపదిక వెక్టర్స్ ఎక్కడ ల్యాండ్ అవుతాయో ప్రతి ఒక్కటి మీకు తెలియజేస్తుంది. కాబట్టి మనకు ఉన్నది ఒక విధమైన పజిల్. ఏ ఇన్‌పుట్ వెక్టార్, x, y, ఈ అవుట్‌పుట్, నెగెటివ్ 4, నెగెటివ్ 2పై ల్యాండ్ కాబోతోంది? ఇక్కడ మా చిన్న పజిల్ గురించి ఆలోచించడానికి ఒక మార్గం ఏమిటంటే, ఇచ్చిన అవుట్‌పుట్ వెక్టార్ మాతృక యొక్క నిలువు వరుసల యొక్క కొంత సరళ కలయిక అని మాకు తెలుసు, i-hat ల్యాండ్ అయ్యే వెక్టర్ కంటే x రెట్లు మరియు j-hat ల్యాండ్ అయ్యే వెక్టార్ కంటే y రెట్లు, అయితే ఏమిటి ఆ సరళ కలయిక ఖచ్చితంగా ఏమిటో గుర్తించడం మాకు అవసరం."
 },
 {
  "input": "But for simplicity, a smaller example is nicer 00:01:46,349 --> 00:01:50,599 29  -2].",
  "model": "nmt",
  "translatedText": "గుర్తుంచుకోండి, మీరు ఇక్కడ పొందే సమాధానం రకం పరివర్తన మొత్తం స్థలాన్ని తక్కువ పరిమాణంలోకి మారుస్తుందా లేదా అనేదానిపై ఆధారపడి ఉంటుంది, అంటే అది సున్నా నిర్ణయాధికారిని కలిగి ఉంటే. అలాంటప్పుడు, మనం ఇచ్చిన అవుట్‌పుట్‌పై ఇన్‌పుట్‌లు ఏవీ ల్యాండ్ కావు లేదా ఆ అవుట్‌పుట్‌పై మొత్తం ఇన్‌పుట్‌లు ల్యాండ్ అవుతాయి. కానీ ఈ వీడియో కోసం, మేము మా వీక్షణను సున్నా కాని డిటర్మినెంట్ విషయంలో పరిమితం చేస్తాము, అంటే ఈ పరివర్తన యొక్క అవుట్‌పుట్‌లు అది ప్రారంభించిన పూర్తి ఇన్-డైమెన్షనల్ స్పేస్‌ను కలిగి ఉంటాయి."
 },
 {
  "input": "Remember, the columns of this matrix tell 00:02:06,250 --> 00:02:10,899 33   type of answer you get here can depend on whether or not the transformation squishes 00:02:44,299 --> 00:02:46,080 00:02:46,080 --> 00:02:51,849 39 40  the full n-dimensional space it started in; every input lands on one and only one output 00:03:12,549 --> 00:03:14,840 44  compute what exactly x and y are.",
  "model": "nmt",
  "translatedText": "ప్రతి ఇన్‌పుట్ ఒకే ఒక అవుట్‌పుట్‌పైకి వస్తుంది మరియు ప్రతి అవుట్‌పుట్‌కు ఒకే ఇన్‌పుట్ ఉంటుంది. మొదటి పాస్‌గా, తప్పు కానీ సరైన దిశలో ఉన్న ఆలోచనను మీకు చూపుతాను. ఈ మిస్టరీ ఇన్‌పుట్ వెక్టర్ యొక్క x-కోఆర్డినేట్ మీరు దాని డాట్ ఉత్పత్తిని మొదటి ప్రాతిపదిక వెక్టర్, 1, 0తో తీసుకోవడం ద్వారా పొందుతుంది. అదేవిధంగా, y-కోఆర్డినేట్ అనేది రెండవ ప్రాతిపదిక వెక్టర్, 0, 1తో డాట్ చేయడం ద్వారా మీరు పొందేది. కాబట్టి బహుశా మీరు పరివర్తన తర్వాత, రూపాంతరం చెందిన సంస్కరణతో మిస్టరీ వెక్టర్ యొక్క రూపాంతరం చెందిన సంస్కరణతో డాట్ ఉత్పత్తులు కూడా ఈ కోఆర్డినేట్‌లు, x మరియు y అవుతాయని మీరు ఆశిస్తున్నారు. ఇది అద్భుతంగా ఉంటుంది, ఎందుకంటే ప్రతి వెక్టర్ యొక్క రూపాంతరం చెందిన సంస్కరణ ఏమిటో మాకు తెలుసు. ఇందులో ఒకే ఒక సమస్య ఉంది, అది నిజం కాదు. చాలా సరళ రూపాంతరాల కోసం, పరివర్తనకు ముందు మరియు తర్వాత డాట్ ఉత్పత్తి చాలా భిన్నంగా కనిపిస్తుంది. ఉదాహరణకు, మీరు సానుకూల డాట్ ఉత్పత్తితో సాధారణంగా ఒకే దిశలో సూచించే రెండు వెక్టర్‌లను కలిగి ఉండవచ్చు, అవి రూపాంతరం సమయంలో ఒకదానికొకటి వేరుగా ఉంటాయి, తద్వారా అవి ప్రతికూల డాట్ ఉత్పత్తిని కలిగి ఉంటాయి. అదేవిధంగా, డాట్ ఉత్పత్తి 0తో లంబంగా ప్రారంభమయ్యే అంశాలు, రెండు ప్రాతిపదిక వెక్టర్స్ వంటివి, పరివర్తన తర్వాత చాలా తరచుగా ఒకదానికొకటి లంబంగా ఉండవు, అంటే, అవి ఆ 0 డాట్ ఉత్పత్తిని భద్రపరచవు. మరియు నేను ఇప్పుడే చూపిన ఉదాహరణను చూస్తే, డాట్ ఉత్పత్తులు ఖచ్చితంగా భద్రపరచబడవు, చాలా వెక్టర్‌లు విస్తరించి ఉన్నందున అవి పెద్దవిగా ఉంటాయి. వాస్తవానికి, ఇక్కడ విలువైన సైడ్ నోట్, డాట్ ఉత్పత్తులను సంరక్షించే పరివర్తనలు వాటి స్వంత పేరు, ఆర్థోనార్మల్ పరివర్తనలను కలిగి ఉండటానికి తగినంత ప్రత్యేకమైనవి. ఇవి అన్ని ప్రాతిపదిక వెక్టర్‌లను ఒకదానికొకటి లంబంగా మరియు ఇప్పటికీ యూనిట్ పొడవుతో వదిలివేస్తాయి."
 },
 {
  "input": "As a first pass, let me show an idea that 00:03:18,829 --> 00:03:23,340 48 49   the dot products with the transformed version of the mystery vector with the transformed 00:03:41,939 --> 00:03:43,590 00:03:43,590 --> 00:03:50,400 55  before and after the transformation will be very different.",
  "model": "nmt",
  "translatedText": "మీరు తరచుగా వీటిని భ్రమణ మాత్రికలుగా భావిస్తారు, అవి సాగదీయడం లేదా స్క్విషింగ్ లేదా మార్ఫింగ్ లేకుండా దృఢమైన కదలికకు అనుగుణంగా ఉంటాయి. ఆర్థోనార్మల్ మ్యాట్రిక్స్‌తో సరళ వ్యవస్థను పరిష్కరించడం నిజానికి చాలా సులభం. డాట్ ఉత్పత్తులు భద్రపరచబడినందున, అవుట్‌పుట్ వెక్టర్ మరియు మీ మ్యాట్రిక్స్‌లోని అన్ని నిలువు వరుసల మధ్య డాట్ ఉత్పత్తిని తీసుకోవడం మిస్టరీ ఇన్‌పుట్ వెక్టర్ మరియు అన్ని ప్రాతిపదిక వెక్టర్‌ల మధ్య డాట్ ఉత్పత్తిని తీసుకున్నట్లే ఉంటుంది, ఇది కేవలం కనుగొనడం వంటిదే ఆ మిస్టరీ ఇన్‌పుట్ యొక్క కోఆర్డినేట్‌లు. కాబట్టి ఆ ప్రత్యేక సందర్భంలో, x అనేది అవుట్‌పుట్ వెక్టార్‌తో మొదటి నిలువు వరుస యొక్క డాట్ ఉత్పత్తి అవుతుంది మరియు అవుట్‌పుట్ వెక్టర్‌తో ఉన్న రెండవ నిలువు వరుస యొక్క డాట్ ఉత్పత్తి y అవుతుంది. దాదాపు అన్ని లీనియర్ సిస్టమ్‌ల కోసం ఈ ఆలోచన విచ్ఛిన్నమైనప్పుడు నేను దీన్ని ఎందుకు తీసుకువస్తున్నాను? సరే, ఇది మనల్ని వెతకవలసిన దిశలో చూపుతుంది. మా ఇన్‌పుట్ వెక్టార్ యొక్క కోఆర్డినేట్‌ల కోసం ప్రత్యామ్నాయ రేఖాగణిత అవగాహన ఉందా, అది రూపాంతరం చెందిన తర్వాత మారదు? మీ మనస్సు నిర్ణయాధికారాలపై ఆలోచిస్తున్నట్లయితే, మీరు ఈ క్రింది తెలివైన ఆలోచన గురించి ఆలోచించవచ్చు. మొదటి ప్రాతిపదిక వెక్టర్, i-hat మరియు మిస్టరీ ఇన్‌పుట్ వెక్టర్, xy ద్వారా నిర్వచించబడిన సమాంతర చతుర్భుజాన్ని తీసుకోండి. ఈ సమాంతర చతుర్భుజం యొక్క వైశాల్యం ఆ స్థావరానికి లంబంగా ఉండే ఎత్తు కంటే 1 రెట్లు ఎక్కువ, ఇది ఆ ఇన్‌పుట్ వెక్టర్ యొక్క y-కోఆర్డినేట్."
 },
 {
  "input": "For example, you could have two vectors generally 00:04:04,959 --> 00:04:09,270 60 61  will stay perpendicular after the transformation, preserving that zero dot product.",
  "model": "nmt",
  "translatedText": "కాబట్టి ఆ సమాంతర చతుర్భుజం యొక్క వైశాల్యం వెక్టర్ యొక్క y-కోఆర్డినేట్‌ను వివరించడానికి ఒక విధమైన స్క్రూ రౌండ్‌అబౌట్ మార్గం. కోఆర్డినేట్‌ల గురించి మాట్లాడటం అసంబద్ధమైన మార్గం, కానీ నాతో పరుగెత్తండి. మరియు వాస్తవానికి, కొంచెం ఖచ్చితమైనదిగా ఉండాలంటే, నిర్ణయాత్మక వీడియోలో వివరించిన అర్థంలో మీరు దీన్ని ఆ సమాంతర చతుర్భుజం యొక్క సంతకం చేసిన ప్రాంతంగా భావించాలి. ఆ విధంగా, ప్రతికూల y-కోఆర్డినేట్ ఉన్న వెక్టర్ ఈ సమాంతర చతుర్భుజానికి ప్రతికూల ప్రాంతానికి అనుగుణంగా ఉంటుంది, కనీసం మీరు i-hatని ఏదో ఒక కోణంలో సమాంతర చతుర్భుజాన్ని నిర్వచించే ఈ రెండు వెక్టర్‌లలో మొదటిది అని అనుకుంటే. మరియు సమరూపంగా, మీరు మా మిస్టరీ ఇన్‌పుట్ వెక్టర్ మరియు రెండవ ఆధారం, j-hat ద్వారా విస్తరించిన సమాంతర చతుర్భుజాన్ని చూస్తే, దాని ప్రాంతం ఆ మిస్టరీ వెక్టర్ యొక్క x-కోఆర్డినేట్ అవుతుంది."
 },
 {
  "input": "In the example we were looking at, dot products 00:04:27,140 --> 00:04:30,950 66   vectors perpendicular to each other with unit lengths.",
  "model": "nmt",
  "translatedText": "మళ్ళీ, ఇది x-కోఆర్డినేట్‌ను సూచించడానికి ఒక విచిత్రమైన మార్గం, కానీ అది ఒక క్షణంలో మాకు ఏమి కొనుగోలు చేస్తుందో మీరు చూస్తారు. మరియు ఇది ఎలా సాధారణీకరించబడుతుందో స్పష్టంగా నిర్ధారించుకోవడానికి, మూడు కోణాలలో చూద్దాం. సాధారణంగా, మీరు వెక్టర్ కోఆర్డినేట్‌లలో ఒకదాని గురించి ఆలోచించే విధానం, దాని z-కోఆర్డినేట్ చెప్పాలంటే, దాని డాట్ ఉత్పత్తిని మూడవ ప్రామాణిక ప్రాతిపదిక వెక్టర్‌తో తీసుకోవడం, దీనిని తరచుగా k-hat అని పిలుస్తారు. కానీ ఇతర రెండు ప్రాతిపదిక వెక్టర్స్, i-hat మరియు j-hatలతో సృష్టించే సమాంతర పైప్‌ను పరిగణించడం ప్రత్యామ్నాయ రేఖాగణిత వివరణ. ఈ మొత్తం ఆకారానికి i-hat మరియు j-hatతో విస్తరించిన ప్రాంతం 1తో కూడిన చతురస్రాన్ని మీరు భావిస్తే, దాని వాల్యూమ్ దాని ఎత్తుకు సమానంగా ఉంటుంది, ఇది మా వెక్టర్ యొక్క మూడవ కోఆర్డినేట్."
 },
 {
  "input": "You often think of these as rotation matrices.",
  "model": "nmt",
  "translatedText": ""
 },
 {
  "input": "The correspond to rigid motion, with no stretching, 00:04:53,000 --> 00:04:58,920 73  products between the input vector and all the basis vectors, which is the same as finding 00:05:13,599 --> 00:05:18,690 77  most linear systems, it points us in the direction of something to look for: Is there an alternate 00:05:37,780 --> 00:05:42,780 81  vector, i-hat, and the mystery input vector [x; y].",
  "model": "nmt",
  "translatedText": "అలాగే, వెక్టర్ యొక్క ఇతర కోఆర్డినేట్‌ల గురించి ఆలోచించడానికి అసంబద్ధమైన మార్గం ఏమిటంటే, వెక్టార్‌ని ఉపయోగించి సమాంతర పైప్డ్‌ను ఏర్పరచడం మరియు మీరు వెతుకుతున్న దిశకు సంబంధించినది కాకుండా అన్ని ప్రాతిపదిక వెక్టర్‌లను రూపొందించడం. అప్పుడు దీని వాల్యూమ్ మీకు కోఆర్డినేట్ ఇస్తుంది. లేదా బదులుగా, మేము కుడి చేతి నియమాన్ని ఉపయోగించి నిర్ణయాత్మక వీడియోలో వివరించిన అర్థంలో, సమాంతర పైప్ యొక్క సంతకం వాల్యూమ్ గురించి మాట్లాడాలి. కాబట్టి మీరు ఈ మూడు వెక్టర్‌లను జాబితా చేసే క్రమం ముఖ్యం. ఆ విధంగా, ప్రతికూల కోఆర్డినేట్‌లు ఇప్పటికీ అర్ధవంతంగా ఉంటాయి. సరే, కోఆర్డినేట్‌లను ఇలా ఏరియాలు మరియు వాల్యూమ్‌లుగా ఎందుకు భావించాలి? సరే, మీరు మాతృక పరివర్తనను వర్తింపజేసినప్పుడు, ఈ సమాంతర చతుర్భుజాల ప్రాంతాలు, అలాగే, అవి ఒకేలా ఉండవు, అవి పైకి లేదా క్రిందికి స్కేల్ చేయబడవచ్చు. కానీ, మరియు ఇది డిటర్‌మినెంట్‌ల యొక్క ముఖ్య ఆలోచన, అన్ని ప్రాంతాలు ఒకే మొత్తంలో స్కేల్ చేయబడతాయి, అవి మా పరివర్తన మాతృక యొక్క డిటర్మినేట్. ఉదాహరణకు, మీరు మీ మొదటి ప్రాతిపదిక వెక్టార్ ల్యాండ్ అయ్యే వెక్టార్ ద్వారా విస్తరించిన సమాంతర చతుర్భుజాన్ని చూస్తే, ఇది మాతృక యొక్క మొదటి నిలువు వరుస మరియు xy యొక్క రూపాంతరం చెందిన సంస్కరణ, దాని వైశాల్యం ఎంత? సరే, ఇది మనం ఇంతకు ముందు చూస్తున్న సమాంతర చతుర్భుజం యొక్క రూపాంతరం చెందిన సంస్కరణ, దీని ప్రాంతం మిస్టరీ ఇన్‌పుట్ వెక్టర్ యొక్క y-కోఆర్డినేట్. కాబట్టి దాని వైశాల్యం ఆ y-కోఆర్డినేట్ ద్వారా గుణించబడిన పరివర్తన యొక్క నిర్ణయాధికారి అవుతుంది. కాబట్టి మనం ఈ కొత్త సమాంతర చతుర్భుజం యొక్క వైశాల్యాన్ని అవుట్‌పుట్ స్థలంలో తీసుకొని, పూర్తి పరివర్తన యొక్క డిటర్మినేట్‌తో విభజించడం ద్వారా y కోసం పరిష్కరించవచ్చు. మరియు మీరు ఆ ప్రాంతాన్ని ఎలా పొందుతారు?"
 },
 {
  "input": "The area of this parallelogram is its base, 00:05:59,990 --> 00:06:03,460 86  to talk about coordinates, but run with me.",
  "model": "nmt",
  "translatedText": "సరే, మిస్టరీ ఇన్‌పుట్ వెక్టర్ ల్యాండ్ అయ్యే కోఆర్డినేట్‌లు మనకు తెలుసు, అదే సమీకరణాల సరళ వ్యవస్థ యొక్క మొత్తం పాయింట్. కాబట్టి మీరు చేయగలిగేది కొత్త మ్యాట్రిక్స్‌ని సృష్టించడం, దీని మొదటి నిలువు వరుస మా మాతృక వలె ఉంటుంది, కానీ దాని రెండవ నిలువు వరుస అవుట్‌పుట్ వెక్టర్, ఆపై మీరు దాని నిర్ణయాధికారిని తీసుకుంటారు. కాబట్టి దానిని చూడండి, పరివర్తన యొక్క అవుట్‌పుట్ నుండి డేటాను ఉపయోగించి, అవి మాతృక యొక్క నిలువు వరుసలు మరియు మా అవుట్‌పుట్ వెక్టర్ యొక్క కోఆర్డినేట్‌లు, మేము సిస్టమ్‌ను పరిష్కరించడానికి సగం మార్గంలో ఉన్న మిస్టరీ ఇన్‌పుట్ వెక్టర్ యొక్క y-కోఆర్డినేట్‌ను తిరిగి పొందవచ్చు."
 },
 {
  "input": "Actually, to be more accurate, you should 00:06:19,690 --> 00:06:22,440 90   look at the parallelogram spanned by the vector and the second basis vector, j-hat, its area 00:06:45,099 --> 00:06:49,370 95 96  would be to take its dot product with the third standard basis vector, k-hat.",
  "model": "nmt",
  "translatedText": "అదేవిధంగా, అదే ఆలోచన మనకు x-కోఆర్డినేట్‌ను ఇస్తుంది. మేము ఇంతకు ముందు నిర్వచించిన సమాంతర చతుర్భుజాన్ని చూడండి, ఇది మిస్టరీ ఇన్‌పుట్ వెక్టర్ యొక్క x-కోఆర్డినేట్‌ను ఎన్కోడ్ చేస్తుంది, ఆ వెక్టర్ మరియు j-hat ద్వారా విస్తరించి ఉంటుంది. ఈ వ్యక్తి యొక్క రూపాంతరం చెందిన సంస్కరణ అవుట్‌పుట్ వెక్టార్ మరియు మాతృక యొక్క రెండవ నిలువు వరుస ద్వారా విస్తరించబడింది మరియు దాని వైశాల్యం ఆ మాత్రిక యొక్క డిటర్మినెంట్‌తో గుణించబడుతుంది. కాబట్టి x కోసం పరిష్కరించడానికి, మీరు ఈ కొత్త ప్రాంతాన్ని పూర్తి పరివర్తన యొక్క డిటర్మినేట్ ద్వారా విభజించవచ్చు. మరియు మేము ఇంతకు ముందు చేసిన దానిలాగే, మీరు కొత్త మాతృకను సృష్టించడం ద్వారా ఆ అవుట్‌పుట్ సమాంతర చతుర్భుజం యొక్క వైశాల్యాన్ని గణించవచ్చు, దీని మొదటి నిలువు వరుస అవుట్‌పుట్ వెక్టర్ మరియు దాని రెండవ నిలువు వరుస అసలు మాతృక వలె ఉంటుంది. కాబట్టి మళ్ళీ, అవుట్‌పుట్ స్పేస్ నుండి డేటాను ఉపయోగించి, మన అసలైన లీనియర్ సిస్టమ్‌లో మనం చూసే సంఖ్యలు, x అంటే ఏమిటో మనం పరిష్కరించవచ్చు. సమీకరణాల సరళ వ్యవస్థకు పరిష్కారాలను కనుగొనే ఈ సూత్రాన్ని క్రామెర్స్ నియమం అంటారు. ఇక్కడ, మనల్ని మనం పరీక్షించుకోవడానికి, ఇక్కడ కొన్ని సంఖ్యలను ప్లగ్ చేయండి. ఆ టాప్, మార్చబడిన మాతృక యొక్క డిటర్మినేట్ 4 ప్లస్ 2, ఇది 6, మరియు దిగువ డిటర్మినెంట్ 2, కాబట్టి x-కోఆర్డినేట్ 3 అయి ఉండాలి."
 },
 {
  "input": "But instead, consider the parallelepiped it 00:07:11,870 --> 00:07:13,569 00:07:13,569 --> 00:07:20,030 102  other coordinate of this vector is to form the parallelepiped between this vector an 00:07:34,950 --> 00:07:37,900 00:07:37,900 --> 00:07:42,490 107  rule.",
  "model": "nmt",
  "translatedText": "మరియు నిజానికి, మేము ప్రారంభించిన ఇన్‌పుట్ వెక్టార్‌ని తిరిగి చూస్తే, x-కోఆర్డినేట్ 3. అదేవిధంగా, క్రామెర్ యొక్క నియమం y-కోఆర్డినేట్ 4ని 2 లేదా 2తో విభజించాలని సూచిస్తుంది మరియు అది మనం ప్రారంభించిన ఇన్‌పుట్ వెక్టర్ యొక్క y-కోఆర్డినేట్. 3 లేదా అంతకంటే ఎక్కువ కొలతలు ఉన్న సందర్భం సారూప్యంగా ఉంటుంది మరియు కొంత సమయం ఆగి, మీరే ఆలోచించుకోవాలని నేను సిఫార్సు చేస్తున్నాను. ఇక్కడ, నేను మీకు కొంచెం ఊపందుకుంటున్నాను. మనకు ఉన్నది కొంత 3x3 మాతృక ద్వారా అందించబడిన పరివర్తన, మరియు మన లీనియర్ సిస్టమ్ యొక్క కుడి వైపున అందించబడిన తెలిసిన అవుట్‌పుట్ వెక్టార్, మరియు ఆ అవుట్‌పుట్‌పై ఏ ఇన్‌పుట్ ల్యాండ్ అవుతుందో తెలుసుకోవాలనుకుంటున్నాము. మరియు మీరు ఆలోచించినట్లయితే, ఆ ఇన్‌పుట్ వెక్టర్ యొక్క z-కోఆర్డినేట్ మనం ఇంతకు ముందు చూస్తున్న ఆ ప్రత్యేక సమాంతర పైప్డ్ యొక్క వాల్యూమ్‌గా, i-hat, j-hat మరియు మిస్టరీ ఇన్‌పుట్ వెక్టర్‌తో విస్తరించి ఉంటే, ఆ వాల్యూమ్‌కి ఏమి జరుగుతుంది పరివర్తన తర్వాత? మరియు మీరు ఆ వాల్యూమ్‌ను గణించగల వివిధ మార్గాలు ఏమిటి? నిజంగా, ఒక పెద్ద లీనియర్ సిస్టమ్‌కి పరిష్కారం యొక్క ప్రతి కోఆర్డినేట్‌కు వ్యక్తీకరణను కనుగొనడం ద్వారా దీన్ని అధిక కొలతలకు సాధారణీకరించే వివరాల ద్వారా కొంత సమయం ఆగి, ఆలోచించండి."
 },
 {
  "input": "That way negative coordinates still make sense.",
  "model": "nmt",
  "translatedText": ""
 },
 {
  "input": "Okay, so why think of coordinates as areas 00:07:56,000 --> 00:08:02,039 112 113  matrix.",
  "model": "nmt",
  "translatedText": "ఇలాంటి మరిన్ని సాధారణ కేసుల గురించి ఆలోచించడం మరియు ఇది పని చేస్తుందని మరియు ఎందుకు పని చేస్తుందని మిమ్మల్ని మీరు ఒప్పించుకోవడం అనేది నిజంగా నేర్చుకునే చోటే జరుగుతుంది, YouTubeలో కొంతమంది వాసి మాటలు వినడం కంటే మీరు మళ్లీ అదే తార్కికం ద్వారా మిమ్మల్ని నడిపిస్తారు."
 },
 {
  "input": "For example, if you look the parallelogram 00:08:17,850 --> 00:08:22,850 117 118  input vector.",
  "model": "nmt",
  "translatedText": ""
 },
 {
  "input": "So its area will be the determinant of the 00:08:39,080 --> 00:08:44,590 122    mystery input vector lands, that’s the whole point of a linear system of equations.",
  "model": "nmt",
  "translatedText": ""
 },
 {
  "input": "So, create a matrix whose first column is 00:09:05,670 --> 00:09:11,250 129  vector, we can recover the y-coordinate of our mystery input vector.",
  "model": "nmt",
  "translatedText": ""
 },
 {
  "input": "Likewise, the same idea can get you the x-coordinate.",
  "model": "nmt",
  "translatedText": ""
 },
 {
  "input": "Look at that parallelogram we defined early 00:09:32,580 --> 00:09:36,420 135  multiplied by the determinant of the matrix.",
  "model": "nmt",
  "translatedText": ""
 },
 {
  "input": "So the x-coordinate of our mystery input vector 00:09:52,000 --> 00:09:53,980 00:09:53,980 --> 00:09:58,900 140   space, the numbers we see in our original linear system, we can recover the x-coordinate 00:10:13,600 --> 00:10:18,440 145 146  is 4+2, which is 6, and the bottom determinant is 2, so the x-coordinate should be 3.",
  "model": "nmt",
  "translatedText": ""
 },
 {
  "input": "And indeed, looking back at that input vector 00:10:35,910 --> 00:10:43,850 151  and I highly recommend you pause to think it through yourself.",
  "model": "nmt",
  "translatedText": ""
 },
 {
  "input": "Here, I’ll give you a little momentum.",
  "model": "nmt",
  "translatedText": ""
 },
 {
  "input": "We have this known transformation, given by 00:11:02,780 --> 00:11:07,580 157 158  vector, what happens to the volume of this parallelepiped after the transformation?",
  "model": "nmt",
  "translatedText": ""
 },
 {
  "input": "How can you compute that new volume?",
  "model": "nmt",
  "translatedText": ""
 },
 {
  "input": "Really, pause and take a moment to think through 00:11:32,200 --> 00:11:37,330 164 165  some dude on YouTube walk through the reasoning again.",
  "model": "nmt",
  "translatedText": ""
 }
]