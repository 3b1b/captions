1
00:00:11,200 --> 00:00:13,775
이전 비디오에서 나는 선형 방정식 시스템에 

2
00:00:13,775 --> 00:00:16,135
대해 이야기했으며 이러한 시스템에 대한 

3
00:00:16,135 --> 00:00:19,140
실제로 컴퓨팅 솔루션에 대한 논의는 무시했습니다. 

4
00:00:19,700 --> 00:00:22,468
그리고 숫자 분석이 일반적으로 컴퓨터에 맡기는 

5
00:00:22,468 --> 00:00:25,237
것이 사실이지만, 이러한 계산 방법 중 일부를 

6
00:00:25,237 --> 00:00:28,112
파헤치는 것은 실제로 무슨 일이 일어나고 있는지 

7
00:00:28,112 --> 00:00:30,668
이해하고 있는지 여부에 대한 좋은 리트머스 

8
00:00:30,668 --> 00:00:31,520
테스트입니다. 

9
00:00:32,119 --> 00:00:34,129
여기서는 Cramer의 법칙으로 알려진 

10
00:00:34,129 --> 00:00:36,322
이러한 시스템에 대한 컴퓨팅 솔루션을 위한 

11
00:00:36,322 --> 00:00:38,880
특정 방법 뒤에 있는 기하학을 설명하고 싶습니다. 

12
00:00:39,680 --> 00:00:42,280
여기에 필요한 관련 배경 지식은 행렬식, 

13
00:00:42,280 --> 00:00:44,654
내적 및 방정식의 선형 시스템에 대한 

14
00:00:44,654 --> 00:00:47,141
이해이므로 익숙하지 않거나 녹슬지 않은 

15
00:00:47,141 --> 00:00:50,420
경우 해당 주제에 대한 관련 비디오를 시청하십시오. 

16
00:00:51,020 --> 00:00:51,440
하지만 먼저! 

17
00:00:51,440 --> 00:00:53,472
나는 Cramer의 법칙이 선형 방정식 

18
00:00:53,472 --> 00:00:55,412
시스템의 해를 계산하는 최선의 방법이 

19
00:00:55,412 --> 00:00:57,260
아니라는 점을 미리 말해야 합니다. 

20
00:00:58,140 --> 00:01:01,260
예를 들어 가우스 소거법은 항상 더 빠릅니다. 

21
00:01:01,980 --> 00:01:03,520
그렇다면 왜 배워야 할까요? 

22
00:01:03,780 --> 00:01:05,913
일종의 문화탐방이라고 생각하시면 됩니다. 

23
00:01:05,913 --> 00:01:08,140
이는 이러한 시스템 뒤에 있는 이론에 대한 

24
00:01:08,140 --> 00:01:10,460
지식을 심화하는 데 도움이 되는 연습입니다. 

25
00:01:11,040 --> 00:01:13,026
이 개념을 염두에 두는 것은 행렬식 및 

26
00:01:13,026 --> 00:01:15,284
선형 시스템과 같은 선형 대수학의 아이디어가 

27
00:01:15,284 --> 00:01:17,362
서로 어떻게 연관되어 있는지 확인함으로써 

28
00:01:17,362 --> 00:01:19,620
아이디어를 통합하는 데 도움이 될 것입니다. 

29
00:01:20,100 --> 00:01:22,163
또한 순전히 예술적인 관점에서 볼 때 

30
00:01:22,163 --> 00:01:24,521
여기서의 최종 결과는 가우스 제거보다 훨씬 

31
00:01:24,521 --> 00:01:26,880
더 생각하기 정말 아름답습니다. 좋습니다. 

32
00:01:28,680 --> 00:01:32,213
여기서 설정은 두 개의 미지수 x와 y와 두 개의 

33
00:01:32,213 --> 00:01:35,620
방정식을 사용하는 선형 방정식 시스템이 됩니다. 

34
00:01:36,300 --> 00:01:38,090
원칙적으로 우리가 말하는 모든 것은 

35
00:01:38,090 --> 00:01:39,880
더 많은 수의 미지수와 동일한 수의 

36
00:01:39,880 --> 00:01:41,940
방정식을 사용하는 시스템에서 작동합니다. 

37
00:01:42,440 --> 00:01:43,935
그러나 단순함을 위해 더 작은 예를 

38
00:01:43,935 --> 00:01:45,580
머릿속에 담아 두는 것이 더 좋습니다. 

39
00:01:46,320 --> 00:01:49,677
이전 비디오에서 제가 이야기한 것처럼 이 

40
00:01:49,677 --> 00:01:53,325
설정은 기하학적으로 알 수 없는 벡터 [x; 

41
00:01:53,325 --> 00:01:57,558
y], 여기서 출력이 어떻게 될지 알 수 있습니다. 

42
00:01:57,558 --> 00:02:00,040
이 경우에는 [-4; -2]. 

43
00:02:00,800 --> 00:02:04,067
이 행렬의 열은 해당 행렬이 어떻게 변환으로 

44
00:02:04,067 --> 00:02:07,204
작동하는지 알려주며, 각 열은 입력 공간의 

45
00:02:07,204 --> 00:02:10,080
기본 벡터가 어디에 있는지 알려줍니다. 

46
00:02:10,860 --> 00:02:11,939
그래서 우리가 가지고 있는 것은 일종의 퍼즐입니다. 

47
00:02:11,939 --> 00:02:12,833
어떤 입력 벡터 x, y가 이 출력(-4, 

48
00:02:12,833 --> 00:02:13,801
-2)에 도달하게 될까요? 여기서 우리의 작은 

49
00:02:13,801 --> 00:02:14,732
퍼즐에 대해 생각하는 한 가지 방법은 주어진 

50
00:02:14,732 --> 00:02:15,477
출력 벡터가 행렬 열의 선형 조합, 

51
00:02:15,477 --> 00:02:16,371
즉 i-hat이 착지하는 벡터의 x 배 + 

52
00:02:16,371 --> 00:02:17,264
j-hat이 착지하는 벡터의 y배라는 것을 

53
00:02:17,264 --> 00:02:17,600
아는 것입니다. 

54
00:02:17,600 --> 00:02:21,055
여기에서 얻을 수 있는 답변 유형은 변환이 

55
00:02:21,055 --> 00:02:24,368
모든 공간을 더 낮은 차원으로 압축하는지 

56
00:02:24,368 --> 00:02:28,400
여부에 따라 달라질 수 있다는 점을 기억하십시오. 

57
00:02:28,400 --> 00:02:31,220
즉, 행렬식이 0인 경우입니다. 

58
00:02:31,220 --> 00:02:33,720
이 경우 주어진 출력에 입력이 전혀 포함되지 

59
00:02:33,720 --> 00:02:36,220
않거나 해당 출력에 전체 입력이 포함됩니다. 

60
00:02:37,240 --> 00:02:39,383
하지만 이 비디오에서는 0이 아닌 행렬식의 

61
00:02:39,383 --> 00:02:41,080
경우로 뷰를 제한하겠습니다. 즉, 

62
00:02:41,080 --> 00:02:43,223
이 변환의 출력이 여전히 시작된 전체 차원 

63
00:02:43,223 --> 00:02:44,831
공간에 걸쳐 있음을 의미합니다. 

64
00:02:44,831 --> 00:02:47,064
모든 입력은 단 하나의 출력에 도달하고 모든 

65
00:02:47,064 --> 00:02:48,940
출력에는 단 하나의 입력이 있습니다. 

66
00:02:48,940 --> 00:02:52,257
퍼즐에 대해 생각하는 한 가지 방법은 주어진 

67
00:02:52,257 --> 00:02:55,574
출력 벡터가 행렬 열의 선형 조합이라는 것을 

68
00:02:55,574 --> 00:02:58,758
아는 것입니다. x*(i-hat이 착지하는 

69
00:02:58,758 --> 00:03:02,208
벡터) + y*(j-hat이 착지하는 벡터), 

70
00:03:02,208 --> 00:03:05,260
그러나 우리는 정확히 x와 y가 무엇인지 

71
00:03:05,260 --> 00:03:06,720
계산하려고 합니다. 

72
00:03:06,720 --> 00:03:11,831
첫 번째 단계로, 잘못되었지만 올바른 

73
00:03:11,831 --> 00:03:18,160
방향으로 나아가는 아이디어를 보여드리겠습니다. 

74
00:03:18,800 --> 00:03:22,205
이 미스터리 입력 벡터의 x 좌표는 

75
00:03:22,205 --> 00:03:25,440
첫 번째 기본 벡터 [1; 0]. 

76
00:03:26,160 --> 00:03:29,235
마찬가지로 y 좌표는 두 번째 기본 벡터인 0, 

77
00:03:29,235 --> 00:03:31,400
1로 점을 찍어서 얻는 것입니다. 

78
00:03:31,900 --> 00:03:35,912
따라서 변환 후에 변환된 버전의 미스터리 

79
00:03:35,912 --> 00:03:39,401
벡터와 변환된 버전의 내적이 x 및 

80
00:03:39,401 --> 00:03:43,240
y 좌표가 되기를 바랄 수도 있습니다. 

81
00:03:43,940 --> 00:03:46,288
우리는 각 벡터의 변환된 버전이 무엇인지 

82
00:03:46,288 --> 00:03:48,740
알고 있기 때문에 정말 환상적일 것입니다. 

83
00:03:51,180 --> 00:03:54,200
다만 한 가지 문제가 있는데, 전혀 사실이 아닙니다. 

84
00:03:54,640 --> 00:03:57,224
대부분의 선형 변환의 경우 변환 

85
00:03:57,224 --> 00:04:00,240
전후의 내적은 매우 다르게 보입니다. 

86
00:04:00,800 --> 00:04:03,591
예를 들어, 일반적으로 양의 내적을 사용하여 

87
00:04:03,591 --> 00:04:06,383
동일한 방향을 가리키는 두 개의 벡터가 있을 

88
00:04:06,383 --> 00:04:08,951
수 있습니다. 이 벡터는 변환 중에 서로 

89
00:04:08,951 --> 00:04:11,520
떨어져서 결국 음의 내적을 갖게 됩니다. 

90
00:04:12,220 --> 00:04:15,065
마찬가지로, 두 개의 기본 벡터처럼 내적 

91
00:04:15,065 --> 00:04:17,911
0과 수직으로 시작하는 것들은 변환 후에 

92
00:04:17,911 --> 00:04:21,005
서로 수직을 유지하지 않는 경우가 많습니다. 

93
00:04:21,005 --> 00:04:23,480
즉, 0 내적을 유지하지 않습니다. 

94
00:04:24,100 --> 00:04:27,160
우리가 본 예에서 내적은 확실히 보존되지 않습니다. 

95
00:04:27,500 --> 00:04:28,720
대부분의 벡터가 늘어나기 때문에 

96
00:04:28,720 --> 00:04:29,940
벡터가 커지는 경향이 있습니다. 

97
00:04:29,940 --> 00:04:33,837
실제로 내적을 보존하는 변환은 직교 

98
00:04:33,837 --> 00:04:39,100
변환이라는 고유한 이름을 가질 만큼 특별합니다. 

99
00:04:39,720 --> 00:04:42,253
이는 모든 기본 벡터를 단위 길이로 

100
00:04:42,253 --> 00:04:44,660
서로 수직으로 유지하는 것입니다. 

101
00:04:45,740 --> 00:04:47,880
흔히 이것을 회전 행렬이라고 생각합니다. 

102
00:04:48,420 --> 00:04:50,508
이는 늘어나거나 찌그러지거나 변형되지 

103
00:04:50,508 --> 00:04:52,200
않는 강체 모션에 해당합니다. 

104
00:04:53,000 --> 00:04:56,632
직교 행렬을 사용하여 선형 시스템을 푸는 것은 

105
00:04:56,632 --> 00:05:00,684
실제로 매우 쉽습니다. 내적이 보존되기 때문에 출력 

106
00:05:00,684 --> 00:05:04,736
벡터와 행렬의 모든 열 사이에서 내적을 구하는 것은 

107
00:05:04,736 --> 00:05:08,369
미스터리 입력 벡터와 모든 기저 벡터 사이에서 

108
00:05:08,369 --> 00:05:10,884
내적을 구하는 것과 동일합니다. 

109
00:05:10,884 --> 00:05:12,980
그 미스터리 입력의 좌표. 

110
00:05:13,680 --> 00:05:16,987
따라서 아주 특별한 경우에 x는 출력 

111
00:05:16,987 --> 00:05:19,822
벡터와 첫 번째 열의 내적이고, 

112
00:05:19,822 --> 00:05:23,760
y는 출력 벡터와 두 번째 열의 내적입니다. 

113
00:05:26,820 --> 00:05:29,974
이 아이디어가 거의 모든 선형 시스템에 적용되지 

114
00:05:29,974 --> 00:05:32,896
않는데 왜 이것을 언급하는 걸까요? 글쎄요, 

115
00:05:32,896 --> 00:05:36,168
그것은 우리가 찾아야 할 것의 방향을 알려줍니다. 

116
00:05:36,168 --> 00:05:39,206
변환 후에도 변경되지 않은 입력 벡터의 좌표에 

117
00:05:39,206 --> 00:05:41,660
대한 대체 기하학적 이해가 있습니까? 

118
00:05:42,360 --> 00:05:45,074
당신의 마음이 행렬식에 대해 고민하고 있다면 

119
00:05:45,074 --> 00:05:48,222
다음과 같은 영리한 아이디어를 생각할 수 있습니다. 

120
00:05:48,222 --> 00:05:51,045
첫 번째 기본 벡터 i-hat과 미스터리 입력 

121
00:05:51,045 --> 00:05:53,760
벡터 xy로 정의된 평행사변형을 사용합니다. 

122
00:05:54,440 --> 00:05:58,547
이 평행사변형의 면적은 밑변에 수직인 높이(해당 

123
00:05:58,547 --> 00:06:02,960
입력 벡터의 y 좌표)에 밑변 1을 곱한 값입니다. 

124
00:06:03,680 --> 00:06:06,636
따라서 평행사변형의 영역은 벡터의 y 좌표를 

125
00:06:06,636 --> 00:06:08,883
설명하는 일종의 우회 방법입니다. 

126
00:06:08,883 --> 00:06:11,957
좌표에 관해 이야기하는 엉뚱한 방법이지만 저와 

127
00:06:11,957 --> 00:06:13,140
함께 달려보세요. 

128
00:06:13,700 --> 00:06:16,167
그리고 실제로 좀 더 정확하게 말하자면, 

129
00:06:16,167 --> 00:06:18,635
이것을 행렬식 비디오에서 설명한 의미에서 

130
00:06:18,635 --> 00:06:21,640
평행사변형의 부호 있는 영역으로 생각해야 합니다. 

131
00:06:22,200 --> 00:06:25,390
그런 식으로 음의 y 좌표를 가진 벡터는 

132
00:06:25,390 --> 00:06:28,580
이 평행사변형의 음의 영역에 해당합니다. 

133
00:06:28,960 --> 00:06:29,754
적어도 i-hat이 평행사변형을 정의하는 이 두 

134
00:06:29,754 --> 00:06:30,518
벡터 중 첫 번째 벡터라고 생각한다면 말이죠. 

135
00:06:30,518 --> 00:06:31,312
그리고 대칭적으로 미스터리 입력 벡터와 두 번째 

136
00:06:31,312 --> 00:06:32,077
기저 j-hat에 걸쳐 있는 평행사변형을 보면 

137
00:06:32,077 --> 00:06:32,960
해당 영역은 해당 미스터리 벡터의 x 좌표가 됩니다. 

138
00:06:32,960 --> 00:06:34,845
다시 말하지만, 이는 x 좌표를 나타내는 

139
00:06:34,845 --> 00:06:36,894
이상한 방법이지만 잠시 후에 이것이 우리에게 

140
00:06:36,894 --> 00:06:38,780
무엇을 가져다 주는지 알게 될 것입니다. 

141
00:06:38,780 --> 00:06:41,040
이것이 어떻게 일반화될 수 있는지 확실히 하기 

142
00:06:41,040 --> 00:06:42,604
위해 3차원으로 살펴보겠습니다. 

143
00:06:42,604 --> 00:06:44,429
일반적으로 벡터의 좌표 중 하나(예: 

144
00:06:44,429 --> 00:06:46,429
z 좌표)에 대해 생각할 수 있는 방식은 

145
00:06:46,429 --> 00:06:48,515
k-hat이라고 불리는 세 번째 표준 기저 

146
00:06:48,515 --> 00:06:50,080
벡터와 내적을 취하는 것입니다. 

147
00:06:50,680 --> 00:06:51,361
그러나 대체 기하학적 해석은 다른 두 기본 

148
00:06:51,361 --> 00:06:51,986
벡터 i-hat과 j-hat을 사용하여 

149
00:06:51,986 --> 00:06:52,640
생성하는 평행육면체를 고려하는 것입니다. 

150
00:06:52,740 --> 00:06:54,118
i-hat과 j-hat에 걸쳐 있는 면적 1이 

151
00:06:54,118 --> 00:06:55,602
있는 정사각형을 이 전체 모양의 기본으로 생각하면 

152
00:06:55,602 --> 00:06:57,140
그 부피는 벡터의 세 번째 좌표인 높이와 같습니다. 

153
00:06:57,140 --> 00:07:00,393
마찬가지로, 벡터의 다른 좌표에 대해 생각하는 이상한 

154
00:07:00,393 --> 00:07:03,646
방법은 벡터와 찾고 있는 방향에 해당하는 벡터 이외의 

155
00:07:03,646 --> 00:07:06,575
모든 기본 벡터를 사용하여 평행육면체를 형성하는 

156
00:07:06,575 --> 00:07:09,720
것입니다. 그러면 이것의 부피가 좌표를 제공합니다. 

157
00:07:09,720 --> 00:07:12,792
또는 오히려, 우리는 오른손 법칙을 사용하여 

158
00:07:12,792 --> 00:07:15,988
행렬식 비디오에서 설명한 의미에서 평행육면체의 

159
00:07:15,988 --> 00:07:18,938
부호 있는 부피에 대해 이야기해야 합니다. 

160
00:07:18,938 --> 00:07:22,380
따라서 이 세 벡터를 나열하는 순서가 중요합니다. 

161
00:07:22,380 --> 00:07:25,240
그렇게 하면 음의 좌표가 여전히 의미가 있습니다. 

162
00:07:25,240 --> 00:07:26,472
좋아요, 그럼 왜 좌표를 이렇게 

163
00:07:26,472 --> 00:07:27,500
면적과 부피로 생각할까요? 

164
00:07:27,500 --> 00:07:28,242
음, 일종의 행렬 변환을 적용하면 

165
00:07:28,242 --> 00:07:29,062
평행사변형의 영역이 동일하게 유지되지 

166
00:07:29,062 --> 00:07:30,000
않고 크기가 커지거나 작아질 수 있습니다. 

167
00:07:30,000 --> 00:07:33,960
그러나 이것이 행렬식의 핵심 아이디어입니다. 

168
00:07:33,960 --> 00:07:36,039
모든 영역은 동일한 양, 즉 변환 

169
00:07:36,039 --> 00:07:37,900
행렬의 행렬식으로 확장됩니다. 

170
00:07:38,440 --> 00:07:42,483
예를 들어, 행렬의 첫 번째 열인 첫 번째 기저 

171
00:07:42,483 --> 00:07:46,676
벡터가 도달하는 벡터와 xy의 변환된 버전에 걸쳐 

172
00:07:46,676 --> 00:07:50,720
있는 평행사변형을 보면 해당 영역은 얼마입니까? 

173
00:07:50,720 --> 00:07:53,449
음, 이것은 우리가 이전에 보았던 평행사변형의 

174
00:07:53,449 --> 00:07:55,970
변환된 버전입니다. 이 평행사변형의 면적은 

175
00:07:55,970 --> 00:07:58,280
미스터리 입력 벡터의 y 좌표였습니다. 

176
00:07:58,960 --> 00:08:00,460
따라서 그 면적은 y 좌표를 곱한 

177
00:08:00,460 --> 00:08:01,960
변환의 결정 요인이 될 것입니다. 

178
00:08:01,960 --> 00:08:05,194
따라서 미스터리 입력 벡터의 y 좌표는 행렬의 

179
00:08:05,194 --> 00:08:08,925
첫 번째 열과 출력 벡터에 걸쳐 있는 이 평행사변형의 

180
00:08:08,925 --> 00:08:12,160
면적을 전체 변환의 행렬식으로 나눈 값입니다. 

181
00:08:12,160 --> 00:08:14,880
그리고 이 지역은 어떻게 얻나요? 

182
00:08:14,880 --> 00:08:16,519
글쎄요, 우리는 신비한 입력 벡터가 

183
00:08:16,519 --> 00:08:17,994
도달하는 좌표를 알고 있습니다. 

184
00:08:17,994 --> 00:08:19,880
이것이 선형 방정식 시스템의 핵심입니다. 

185
00:08:19,880 --> 00:08:24,160
따라서 여러분이 할 수 있는 일은 첫 번째 열이 

186
00:08:24,160 --> 00:08:28,599
행렬의 것과 동일하지만 두 번째 열이 출력 벡터인 

187
00:08:28,599 --> 00:08:32,880
새 행렬을 만든 다음 행렬식을 취하는 것입니다. 

188
00:08:32,880 --> 00:08:35,847
따라서 변환 출력의 데이터, 즉 행렬의 열과 출력 

189
00:08:35,847 --> 00:08:38,708
벡터의 좌표를 사용하여 미스터리 입력 벡터의 y 

190
00:08:38,708 --> 00:08:41,358
좌표를 복구할 수 있으며 이는 시스템 해결의 

191
00:08:41,358 --> 00:08:42,100
절반입니다. 

192
00:08:42,100 --> 00:08:42,778
마찬가지로 동일한 아이디어로 

193
00:08:42,778 --> 00:08:43,500
x 좌표를 얻을 수 있습니다. 

194
00:08:43,500 --> 00:08:47,524
이전에 정의한 평행사변형은 해당 

195
00:08:47,524 --> 00:08:52,444
벡터와 j-hat에 걸쳐 있는 미스터리 

196
00:08:52,444 --> 00:08:57,140
입력 벡터의 x 좌표를 인코딩합니다. 

197
00:08:57,140 --> 00:08:59,616
이 녀석의 변환된 버전은 출력 벡터와 

198
00:08:59,616 --> 00:09:02,210
행렬의 두 번째 열에 걸쳐 있으며 해당 

199
00:09:02,210 --> 00:09:05,040
영역에는 해당 행렬의 행렬식이 곱해집니다. 

200
00:09:05,060 --> 00:09:09,870
따라서 x를 풀려면 이 새로운 영역을 

201
00:09:09,870 --> 00:09:15,140
전체 변환의 행렬식으로 나누어야 합니다. 

202
00:09:15,600 --> 00:09:17,964
이전에 했던 것과 유사하게 첫 번째 열이 출력 

203
00:09:17,964 --> 00:09:20,328
벡터이고 두 번째 열이 원래 행렬과 동일한 새 

204
00:09:20,328 --> 00:09:22,874
행렬을 만들어 출력 평행사변형의 면적을 계산할 수 

205
00:09:22,874 --> 00:09:23,420
있습니다. 

206
00:09:23,420 --> 00:09:26,255
따라서 다시 출력 공간의 데이터, 

207
00:09:26,255 --> 00:09:29,390
즉 원래 선형 시스템에서 볼 수 있는 

208
00:09:29,390 --> 00:09:33,420
숫자를 사용하여 x가 무엇인지 풀 수 있습니다. 

209
00:09:33,420 --> 00:09:39,180
선형 방정식 시스템의 해를 구하는 이 공식은 

210
00:09:39,180 --> 00:09:44,480
Cramer의 법칙으로 알려져 있습니다. 

211
00:09:44,480 --> 00:09:44,857
여기, 우리 자신의 정신 상태를 

212
00:09:44,857 --> 00:09:45,340
확인하기 위해 여기에 숫자를 연결하세요. 

213
00:09:45,340 --> 00:09:47,669
위쪽의 변경된 행렬의 행렬식은 4 

214
00:09:47,669 --> 00:09:50,120
더하기 2(6)이고 아래쪽 행렬식은 

215
00:09:50,120 --> 00:09:52,940
2이므로 x 좌표는 3이 되어야 합니다. 

216
00:09:53,860 --> 00:09:59,241
실제로 우리가 시작한 입력 벡터를 

217
00:09:59,241 --> 00:10:04,340
되돌아보면 x 좌표는 3입니다. 

218
00:10:04,340 --> 00:10:05,393
마찬가지로 Cramer의 법칙에 따르면 y 

219
00:10:05,393 --> 00:10:06,271
좌표는 4를 2로 나누어야 합니다. 

220
00:10:06,271 --> 00:10:07,324
즉 2가 바로 우리가 시작했던 입력 벡터의 

221
00:10:07,324 --> 00:10:07,720
y 좌표입니다. 

222
00:10:07,720 --> 00:10:11,650
3차원 이상의 경우도 비슷하니, 

223
00:10:11,650 --> 00:10:18,201
잠시 멈춰서 스스로 생각해 보시길 적극 권해 드립니다.

224
00:10:18,201 --> 00:10:18,420
 

225
00:10:19,120 --> 00:10:21,580
여기서 약간의 추진력을 드리겠습니다. 

226
00:10:21,580 --> 00:10:24,590
우리가 가지고 있는 것은 일부 3x3 행렬로 

227
00:10:24,590 --> 00:10:27,118
제공되는 알려진 변환과 선형 시스템의 

228
00:10:27,118 --> 00:10:30,008
오른쪽으로 제공되는 알려진 출력 벡터이며, 

229
00:10:30,008 --> 00:10:33,260
해당 출력에 어떤 입력이 있는지 알고 싶습니다. 

230
00:10:33,260 --> 00:10:36,310
예를 들어 입력 벡터의 z 좌표를 i-hat, 

231
00:10:36,310 --> 00:10:39,008
j-hat 및 미스터리 입력 벡터에 걸쳐 

232
00:10:39,008 --> 00:10:41,824
있는 이 평행육면체의 부피로 생각하면 변환 

233
00:10:41,824 --> 00:10:44,640
후 이 평행육면체의 부피는 어떻게 됩니까? 

234
00:10:44,640 --> 00:10:51,660
새로운 볼륨을 어떻게 계산할 수 있나요? 

235
00:10:51,660 --> 00:10:55,596
정말로, 잠시 멈추고 이것을 더 높은 차원으로 

236
00:10:55,596 --> 00:10:58,926
일반화하는 세부 사항을 생각해 보세요. 

237
00:10:58,926 --> 00:11:03,014
더 큰 선형 시스템에 대한 해의 각 좌표에 대한 

238
00:11:03,014 --> 00:11:04,680
표현식을 찾습니다. 

239
00:11:05,100 --> 00:11:13,281
이와 같은 보다 일반적인 사례를 생각하고 

240
00:11:13,281 --> 00:11:22,531
그것이 작동하고 왜 작동하는지 스스로 확신하는 

241
00:11:22,531 --> 00:11:31,424
것이 모든 학습이 실제로 일어나는 곳입니다. 

242
00:11:31,424 --> 00:11:40,318
YouTube에서 누군가의 말을 듣는 것보다 

243
00:11:40,318 --> 00:11:48,500
훨씬 더 동일한 추론을 다시 안내합니다. 

