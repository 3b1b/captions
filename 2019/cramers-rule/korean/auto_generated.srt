1
00:00:11,199 --> 00:00:19,140
이전 비디오에서 나는 선형 방정식 시스템에 대해 이야기했으며 이러한 시스템에 대한 실제로 컴퓨팅 솔루션에 대한 논의는 무시했습니다. 

2
00:00:19,700 --> 00:00:25,769
그리고 숫자 분석이 일반적으로 컴퓨터에 맡기는 것이 사실이지만, 이러한 계산 방법 중 일부를 파헤치는 

3
00:00:25,769 --> 00:00:31,520
것은 실제로 무슨 일이 일어나고 있는지 이해하고 있는지 여부에 대한 좋은 리트머스 테스트입니다. 

4
00:00:32,119 --> 00:00:38,880
여기서는 Cramer의 법칙으로 알려진 이러한 시스템에 대한 컴퓨팅 솔루션을 위한 특정 방법 뒤에 있는 기하학을 설명하고 싶습니다. 

5
00:00:39,680 --> 00:00:45,332
여기에 필요한 관련 배경 지식은 행렬식, 내적 및 방정식의 선형 시스템에 대한 이해이므로 

6
00:00:45,332 --> 00:00:50,420
익숙하지 않거나 녹슬지 않은 경우 해당 주제에 대한 관련 비디오를 시청하십시오. 

7
00:00:51,020 --> 00:00:51,440
하지만 먼저! 

8
00:00:51,440 --> 00:00:57,260
나는 Cramer의 법칙이 선형 방정식 시스템의 해를 계산하는 최선의 방법이 아니라는 점을 미리 말해야 합니다. 

9
00:00:58,140 --> 00:01:01,260
예를 들어 가우스 소거법은 항상 더 빠릅니다. 

10
00:01:01,980 --> 00:01:03,840
그렇다면 왜 배워야 할까요? 

11
00:01:03,840 --> 00:01:10,460
일종의 문화탐방이라고 생각하시면 됩니다. 이는 이러한 시스템 뒤에 있는 이론에 대한 지식을 심화하는 데 도움이 되는 연습입니다. 

12
00:01:11,040 --> 00:01:15,284
이 개념을 염두에 두는 것은 행렬식 및 선형 시스템과 같은 선형 대수학의 아이디어가 

13
00:01:15,284 --> 00:01:19,620
서로 어떻게 연관되어 있는지 확인함으로써 아이디어를 통합하는 데 도움이 될 것입니다. 

14
00:01:20,100 --> 00:01:26,880
또한 순전히 예술적인 관점에서 볼 때 여기서의 최종 결과는 가우스 제거보다 훨씬 더 생각하기 정말 아름답습니다. 좋습니다. 

15
00:01:28,680 --> 00:01:35,620
여기서 설정은 두 개의 미지수 x와 y와 두 개의 방정식을 사용하는 선형 방정식 시스템이 됩니다. 

16
00:01:36,300 --> 00:01:41,940
원칙적으로 우리가 말하는 모든 것은 더 많은 수의 미지수와 동일한 수의 방정식을 사용하는 시스템에서 작동합니다. 

17
00:01:42,440 --> 00:01:45,320
그러나 단순함을 위해 더 작은 예를 머릿속에 담아 두는 것이 더 좋습니다. 

18
00:01:45,320 --> 00:01:52,836
이전 비디오에서 제가 이야기한 것처럼 이 설정은 기하학적으로 알 수 없는 벡터 [x; 

19
00:01:52,836 --> 00:02:00,040
y], 여기서 출력이 어떻게 될지 알 수 있습니다. 이 경우에는 [-4; -2]. 

20
00:02:00,800 --> 00:02:11,460
이 행렬의 열은 해당 행렬이 어떻게 변환으로 작동하는지 알려주며, 각 열은 입력 공간의 기본 벡터가 어디에 있는지 알려줍니다. 

21
00:02:11,460 --> 00:02:13,146
그래서 우리가 가지고 있는 것은 일종의 퍼즐입니다. 어떤 입력 벡터 x, y가 이 출력(-4, 

22
00:02:13,146 --> 00:02:15,406
-2)에 도달하게 될까요? 여기서 우리의 작은 퍼즐에 대해 생각하는 한 가지 방법은 주어진 출력 벡터가 행렬 열의 선형 조합, 

23
00:02:15,406 --> 00:02:17,220
즉 i-hat이 착지하는 벡터의 x 배 + j-hat이 착지하는 벡터의 y배라는 것을 아는 것입니다. 

24
00:02:17,220 --> 00:02:26,780
여기에서 얻을 수 있는 답변 유형은 변환이 모든 공간을 더 낮은 차원으로 압축하는지 여부에 따라 달라질 수 있다는 점을 기억하십시오. 

25
00:02:26,780 --> 00:02:28,240
즉, 행렬식이 0인 경우입니다. 

26
00:02:28,240 --> 00:02:34,240
이 경우 주어진 출력에 입력이 전혀 포함되지 않거나 해당 출력에 전체 입력이 포함됩니다. 

27
00:02:34,240 --> 00:02:44,310
하지만 이 비디오에서는 0이 아닌 행렬식의 경우로 뷰를 제한하겠습니다. 즉, 이 변환의 출력이 여전히 시작된 전체 차원 공간에 걸쳐 있음을 의미합니다. 

28
00:02:44,310 --> 00:02:49,760
모든 입력은 단 하나의 출력에 도달하고 모든 출력에는 단 하나의 입력이 있습니다. 

29
00:02:49,760 --> 00:02:57,685
퍼즐에 대해 생각하는 한 가지 방법은 주어진 출력 벡터가 행렬 열의 선형 조합이라는 것을 아는 것입니다. 

30
00:02:57,685 --> 00:03:07,760
x*(i-hat이 착지하는 벡터) + y*(j-hat이 착지하는 벡터), 그러나 우리는 정확히 x와 y가 무엇인지 계산하려고 합니다. 

31
00:03:07,760 --> 00:03:11,380
첫 번째 단계로, 잘못되었지만 올바른 방향으로 나아가는 아이디어를 보여드리겠습니다. 

32
00:03:11,380 --> 00:03:19,820
이 미스터리 입력 벡터의 x 좌표는 첫 번째 기본 벡터 [1; 0]. 

33
00:03:19,820 --> 00:03:26,960
마찬가지로 y 좌표는 두 번째 기본 벡터인 0, 1로 점을 찍어서 얻는 것입니다. 

34
00:03:26,960 --> 00:03:38,460
따라서 변환 후에 변환된 버전의 미스터리 벡터와 변환된 버전의 내적이 x 및 y 좌표가 되기를 바랄 수도 있습니다. 

35
00:03:38,460 --> 00:03:42,880
우리는 각 벡터의 변환된 버전이 무엇인지 알고 있기 때문에 정말 환상적일 것입니다. 

36
00:03:42,880 --> 00:03:45,700
다만 한 가지 문제가 있는데, 전혀 사실이 아닙니다. 

37
00:03:45,700 --> 00:03:53,460
대부분의 선형 변환의 경우 변환 전후의 내적은 매우 다르게 보입니다. 

38
00:03:53,460 --> 00:04:00,238
예를 들어, 일반적으로 양의 내적을 사용하여 동일한 방향을 가리키는 두 개의 벡터가 있을 수 있습니다. 

39
00:04:00,238 --> 00:04:04,680
이 벡터는 변환 중에 서로 떨어져서 결국 음의 내적을 갖게 됩니다. 

40
00:04:04,680 --> 00:04:13,434
마찬가지로, 두 개의 기본 벡터처럼 내적 0과 수직으로 시작하는 것들은 변환 후에 서로 수직을 유지하지 않는 경우가 많습니다. 

41
00:04:13,434 --> 00:04:15,900
즉, 0 내적을 유지하지 않습니다. 

42
00:04:15,900 --> 00:04:19,380
우리가 본 예에서 내적은 확실히 보존되지 않습니다. 

43
00:04:19,380 --> 00:04:23,480
대부분의 벡터가 늘어나기 때문에 벡터가 커지는 경향이 있습니다. 

44
00:04:24,100 --> 00:04:29,260
실제로 내적을 보존하는 변환은 직교 변환이라는 고유한 이름을 가질 만큼 특별합니다. 

45
00:04:29,260 --> 00:04:34,700
이는 모든 기본 벡터를 단위 길이로 서로 수직으로 유지하는 것입니다. 

46
00:04:34,700 --> 00:04:36,980
흔히 이것을 회전 행렬이라고 생각합니다. 

47
00:04:36,980 --> 00:04:41,500
이는 늘어나거나 찌그러지거나 변형되지 않는 강체 모션에 해당합니다. 

48
00:04:41,500 --> 00:04:52,404
직교 행렬을 사용하여 선형 시스템을 푸는 것은 실제로 매우 쉽습니다. 내적이 보존되기 때문에 출력 벡터와 행렬의 모든 열 사이에서 

49
00:04:52,404 --> 00:05:02,860
내적을 구하는 것은 미스터리 입력 벡터와 모든 기저 벡터 사이에서 내적을 구하는 것과 동일합니다. 그 미스터리 입력의 좌표. 

50
00:05:02,860 --> 00:05:11,320
따라서 아주 특별한 경우에 x는 출력 벡터와 첫 번째 열의 내적이고, y는 출력 벡터와 두 번째 열의 내적입니다. 

51
00:05:11,320 --> 00:05:18,673
이 아이디어가 거의 모든 선형 시스템에 적용되지 않는데 왜 이것을 언급하는 걸까요? 글쎄요, 

52
00:05:18,673 --> 00:05:29,280
그것은 우리가 찾아야 할 것의 방향을 알려줍니다. 변환 후에도 변경되지 않은 입력 벡터의 좌표에 대한 대체 기하학적 이해가 있습니까? 

53
00:05:29,280 --> 00:05:34,649
당신의 마음이 행렬식에 대해 고민하고 있다면 다음과 같은 영리한 아이디어를 생각할 수 있습니다. 

54
00:05:34,649 --> 00:05:39,720
첫 번째 기본 벡터 i-hat과 미스터리 입력 벡터 xy로 정의된 평행사변형을 사용합니다. 

55
00:05:39,720 --> 00:05:46,380
이 평행사변형의 면적은 밑변에 수직인 높이(해당 입력 벡터의 y 좌표)에 밑변 1을 곱한 값입니다. 

56
00:05:46,380 --> 00:05:59,440
따라서 평행사변형의 영역은 벡터의 y 좌표를 설명하는 일종의 우회 방법입니다. 좌표에 관해 이야기하는 엉뚱한 방법이지만 저와 함께 달려보세요. 

57
00:05:59,440 --> 00:06:07,880
그리고 실제로 좀 더 정확하게 말하자면, 이것을 행렬식 비디오에서 설명한 의미에서 평행사변형의 부호 있는 영역으로 생각해야 합니다. 

58
00:06:07,880 --> 00:06:12,760
그런 식으로 음의 y 좌표를 가진 벡터는 이 평행사변형의 음의 영역에 해당합니다. 

59
00:06:12,760 --> 00:06:16,088
적어도 i-hat이 평행사변형을 정의하는 이 두 벡터 중 첫 번째 벡터라고 생각한다면 말이죠. 

60
00:06:16,088 --> 00:06:21,300
그리고 대칭적으로 미스터리 입력 벡터와 두 번째 기저 j-hat에 걸쳐 있는 평행사변형을 보면 해당 영역은 해당 미스터리 벡터의 x 좌표가 됩니다. 

61
00:06:21,300 --> 00:06:26,720
다시 말하지만, 이는 x 좌표를 나타내는 이상한 방법이지만 잠시 후에 이것이 우리에게 무엇을 가져다 주는지 알게 될 것입니다. 

62
00:06:26,720 --> 00:06:32,350
이것이 어떻게 일반화될 수 있는지 확실히 하기 위해 3차원으로 살펴보겠습니다. 일반적으로 벡터의 좌표 중 하나(예: 

63
00:06:32,350 --> 00:06:37,980
z 좌표)에 대해 생각할 수 있는 방식은 k-hat이라고 불리는 세 번째 표준 기저 벡터와 내적을 취하는 것입니다. 

64
00:06:37,980 --> 00:06:44,860
그러나 대체 기하학적 해석은 다른 두 기본 벡터 i-hat과 j-hat을 사용하여 생성하는 평행육면체를 고려하는 것입니다. 

65
00:06:44,860 --> 00:06:53,280
i-hat과 j-hat에 걸쳐 있는 면적 1이 있는 정사각형을 이 전체 모양의 기본으로 생각하면 그 부피는 벡터의 세 번째 좌표인 높이와 같습니다. 

66
00:06:53,280 --> 00:06:58,686
마찬가지로, 벡터의 다른 좌표에 대해 생각하는 이상한 방법은 벡터와 찾고 있는 방향에 해당하는 벡터 

67
00:06:58,686 --> 00:07:04,480
이외의 모든 기본 벡터를 사용하여 평행육면체를 형성하는 것입니다. 그러면 이것의 부피가 좌표를 제공합니다. 

68
00:07:04,480 --> 00:07:13,640
또는 오히려, 우리는 오른손 법칙을 사용하여 행렬식 비디오에서 설명한 의미에서 평행육면체의 부호 있는 부피에 대해 이야기해야 합니다. 

69
00:07:13,640 --> 00:07:17,060
따라서 이 세 벡터를 나열하는 순서가 중요합니다. 

70
00:07:17,060 --> 00:07:18,800
그렇게 하면 음의 좌표가 여전히 의미가 있습니다. 

71
00:07:18,800 --> 00:07:22,080
좋아요, 그럼 왜 좌표를 이렇게 면적과 부피로 생각할까요? 

72
00:07:22,080 --> 00:07:28,040
음, 일종의 행렬 변환을 적용하면 평행사변형의 영역이 동일하게 유지되지 않고 크기가 커지거나 작아질 수 있습니다. 

73
00:07:28,040 --> 00:07:32,500
그러나 이것이 행렬식의 핵심 아이디어입니다. 

74
00:07:32,500 --> 00:07:34,700
모든 영역은 동일한 양, 즉 변환 행렬의 행렬식으로 확장됩니다. 

75
00:07:34,700 --> 00:07:43,660
예를 들어, 행렬의 첫 번째 열인 첫 번째 기저 벡터가 도달하는 벡터와 xy의 변환된 버전에 걸쳐 있는 평행사변형을 보면 해당 영역은 얼마입니까? 

76
00:07:43,660 --> 00:07:50,520
음, 이것은 우리가 이전에 보았던 평행사변형의 변환된 버전입니다. 이 평행사변형의 면적은 미스터리 입력 벡터의 y 좌표였습니다. 

77
00:07:50,520 --> 00:07:56,600
따라서 그 면적은 y 좌표를 곱한 변환의 결정 요인이 될 것입니다. 

78
00:07:56,600 --> 00:08:06,620
따라서 미스터리 입력 벡터의 y 좌표는 행렬의 첫 번째 열과 출력 벡터에 걸쳐 있는 이 평행사변형의 면적을 전체 변환의 행렬식으로 나눈 값입니다. 

79
00:08:06,980 --> 00:08:08,020
그리고 이 지역은 어떻게 얻나요? 

80
00:08:08,020 --> 00:08:16,660
글쎄요, 우리는 신비한 입력 벡터가 도달하는 좌표를 알고 있습니다. 이것이 선형 방정식 시스템의 핵심입니다. 

81
00:08:16,660 --> 00:08:25,780
따라서 여러분이 할 수 있는 일은 첫 번째 열이 행렬의 것과 동일하지만 두 번째 열이 출력 벡터인 새 행렬을 만든 다음 행렬식을 취하는 것입니다. 

82
00:08:26,060 --> 00:08:36,299
따라서 변환 출력의 데이터, 즉 행렬의 열과 출력 벡터의 좌표를 사용하여 미스터리 입력 벡터의 y 좌표를 복구할 수 있으며 이는 시스템 해결의 절반입니다. 

83
00:08:36,299 --> 00:08:39,280
마찬가지로 동일한 아이디어로 x 좌표를 얻을 수 있습니다. 

84
00:08:40,179 --> 00:08:48,960
이전에 정의한 평행사변형은 해당 벡터와 j-hat에 걸쳐 있는 미스터리 입력 벡터의 x 좌표를 인코딩합니다. 

85
00:08:48,960 --> 00:08:59,160
이 녀석의 변환된 버전은 출력 벡터와 행렬의 두 번째 열에 걸쳐 있으며 해당 영역에는 해당 행렬의 행렬식이 곱해집니다. 

86
00:08:59,720 --> 00:09:04,660
따라서 x를 풀려면 이 새로운 영역을 전체 변환의 행렬식으로 나누어야 합니다. 

87
00:09:04,660 --> 00:09:17,160
이전에 했던 것과 유사하게 첫 번째 열이 출력 벡터이고 두 번째 열이 원래 행렬과 동일한 새 행렬을 만들어 출력 평행사변형의 면적을 계산할 수 있습니다. 

88
00:09:17,160 --> 00:09:25,340
따라서 다시 출력 공간의 데이터, 즉 원래 선형 시스템에서 볼 수 있는 숫자를 사용하여 x가 무엇인지 풀 수 있습니다. 

89
00:09:25,600 --> 00:09:29,620
선형 방정식 시스템의 해를 구하는 이 공식은 Cramer의 법칙으로 알려져 있습니다. 

90
00:09:29,620 --> 00:09:34,300
여기, 우리 자신의 정신 상태를 확인하기 위해 여기에 숫자를 연결하세요. 

91
00:09:34,300 --> 00:09:41,500
위쪽의 변경된 행렬의 행렬식은 4 더하기 2(6)이고 아래쪽 행렬식은 2이므로 x 좌표는 3이 되어야 합니다. 

92
00:09:41,500 --> 00:09:45,520
실제로 우리가 시작한 입력 벡터를 되돌아보면 x 좌표는 3입니다. 

93
00:09:45,520 --> 00:09:55,100
마찬가지로 Cramer의 법칙에 따르면 y 좌표는 4를 2로 나누어야 합니다. 즉 2가 바로 우리가 시작했던 입력 벡터의 y 좌표입니다. 

94
00:09:55,340 --> 00:10:01,220
3차원 이상의 경우도 비슷하니, 잠시 멈춰서 스스로 생각해 보시길 적극 권해 드립니다. 

95
00:10:01,220 --> 00:10:04,220
여기서 약간의 추진력을 드리겠습니다. 

96
00:10:04,220 --> 00:10:11,508
우리가 가지고 있는 것은 일부 3x3 행렬로 제공되는 알려진 변환과 선형 시스템의 오른쪽으로 제공되는 알려진 출력 벡터이며, 

97
00:10:11,508 --> 00:10:14,320
해당 출력에 어떤 입력이 있는지 알고 싶습니다. 

98
00:10:14,320 --> 00:10:21,018
예를 들어 입력 벡터의 z 좌표를 i-hat, j-hat 및 미스터리 입력 벡터에 걸쳐 

99
00:10:21,018 --> 00:10:27,580
있는 이 평행육면체의 부피로 생각하면 변환 후 이 평행육면체의 부피는 어떻게 됩니까? 

100
00:10:27,580 --> 00:10:30,200
새로운 볼륨을 어떻게 계산할 수 있나요? 

101
00:10:30,200 --> 00:10:43,160
정말로, 잠시 멈추고 이것을 더 높은 차원으로 일반화하는 세부 사항을 생각해 보세요. 더 큰 선형 시스템에 대한 해의 각 좌표에 대한 표현식을 찾습니다. 

102
00:10:43,160 --> 00:11:22,792
이와 같은 보다 일반적인 사례를 생각하고 그것이 작동하고 왜 작동하는지 스스로 확신하는 것이 모든 학습이 실제로 일어나는 곳입니다. 

103
00:11:22,792 --> 00:11:48,500
YouTube에서 누군가의 말을 듣는 것보다 훨씬 더 동일한 추론을 다시 안내합니다. 

