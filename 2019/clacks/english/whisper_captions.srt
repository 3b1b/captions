1
00:00:04,000 --> 00:00:08,000
Sometimes, math and physics conspire in ways that just feel too good to be true.

2
00:00:08,640 --> 00:00:10,780
Let's play a strange sort of mathematical croquet.

3
00:00:11,280 --> 00:00:13,540
We're going to have two sliding blocks and a wall.

4
00:00:14,080 --> 00:00:17,960
The first block starts by coming in at some velocity from the right, while the second

5
00:00:17,960 --> 00:00:19,180
one starts out stationary.

6
00:00:19,920 --> 00:00:24,000
Being overly idealistic physicists, let's assume there's no friction and all of the

7
00:00:24,000 --> 00:00:27,780
collisions are perfectly elastic, which means no energy is lost.

8
00:00:28,400 --> 00:00:32,880
The astute among you might complain that such collisions would make no sound, but your goal

9
00:00:32,880 --> 00:00:38,000
here is to count how many collisions take place, so in slight conflict with that assumption

10
00:00:38,000 --> 00:00:41,680
I want to leave a little clack sound to better draw your attention to that count.

11
00:00:42,320 --> 00:00:44,920
The simplest case is when both blocks have the same mass.

12
00:00:45,380 --> 00:00:50,040
The first block hits the second, transferring all of its momentum, then the second one bounces

13
00:00:50,040 --> 00:00:54,380
off the wall, and then transfers all of its momentum back to the first, which then sails

14
00:00:54,380 --> 00:00:55,280
off towards infinity.

15
00:00:55,860 --> 00:00:56,800
Three total clacks.

16
00:00:57,440 --> 00:01:01,180
What about if the first block was 100 times the mass of the second one?

17
00:01:01,840 --> 00:01:06,000
I promise I will explain to you all the relevant physics in due course, it's not entirely

18
00:01:06,000 --> 00:01:09,660
obvious how you would predict the dynamics here, but in the spirit of getting to the

19
00:01:09,660 --> 00:01:11,280
punchline, let's watch what happens.

20
00:01:11,900 --> 00:01:15,500
The second one will keep bouncing back and forth between the wall and the first block,

21
00:01:15,600 --> 00:01:20,880
100 times its mass, like a satisfying game of Breakout, slowly and discreetly redirecting

22
00:01:20,880 --> 00:01:23,840
that first block's momentum to point in the opposite direction.

23
00:01:23,840 --> 00:01:29,120
In total, there will be 31 collisions before each block is sliding off towards infinity,

24
00:01:29,620 --> 00:01:30,620
never to be touched again.

25
00:01:31,580 --> 00:01:35,180
What if the first block was 10,000 times the mass of the second one?

26
00:01:35,860 --> 00:01:40,140
In that case, there would be quite a few more clacks, all happening very rapidly at one

27
00:01:40,140 --> 00:01:48,160
point, adding up and all to 313 total collisions.

28
00:01:48,920 --> 00:01:50,040
Well, actually, hang on.

29
00:01:50,660 --> 00:01:51,480
Wait for it.

30
00:01:51,480 --> 00:01:54,280
Wait for it.

31
00:01:56,980 --> 00:01:58,480
Okay, 314 clacks.

32
00:01:59,300 --> 00:02:03,640
If the first block was 1,000,000 times the mass of the other, then again, with all of

33
00:02:03,640 --> 00:02:08,880
our crazy idealistic conditions, almost all of the clacks happen in one big burst, this

34
00:02:08,880 --> 00:02:12,680
time resulting in a total of 3,141 collisions.

35
00:02:13,760 --> 00:02:17,660
Perhaps you see the pattern here, though it's forgivable if you don't, since it defies

36
00:02:17,660 --> 00:02:18,600
all expectation.

37
00:02:18,600 --> 00:02:23,380
When the mass of that first block is some power of 100 times the mass of the second,

38
00:02:23,740 --> 00:02:27,200
the total number of collisions have the same digits as pi.

39
00:02:28,240 --> 00:02:31,260
This absolutely blew my mind when it was first shared with me.

40
00:02:31,660 --> 00:02:35,900
Credit to the viewer Henry Cavill for introducing me to this fact, which was originally discovered

41
00:02:35,900 --> 00:02:40,960
by the mathematician Gregory Galperin in 1995 and published in 2003.

42
00:02:41,920 --> 00:02:46,120
Part of what I love about this is that if ever there were Olympic games for algorithms

43
00:02:46,120 --> 00:02:51,340
that compute pi, this one would have to win medals both for being the most elegant, and

44
00:02:51,340 --> 00:02:53,360
for being the most comically inefficient.

45
00:02:54,060 --> 00:02:56,220
I mean, think about the actual algorithm here.

46
00:02:56,520 --> 00:02:58,420
Step 1, implement a physics engine.

47
00:02:58,880 --> 00:03:03,000
Step 2, choose the number of digits d of pi you'd like to compute.

48
00:03:03,680 --> 00:03:09,800
Step 3, set the mass of one of the blocks to be 100 to the power d-1, then send it travelling

49
00:03:09,800 --> 00:03:12,280
on a frictionless surface towards a block of mass 1.

50
00:03:12,820 --> 00:03:14,980
Step 4, count all of the collisions.

51
00:03:16,420 --> 00:03:21,740
For example, to calculate only 20 digits of pi, which fits so cleanly on this screen,

52
00:03:22,260 --> 00:03:26,660
one block would have to have 100 billion billion billion billion times the mass of the other,

53
00:03:27,240 --> 00:03:32,100
which if that small block was 1 kilogram, means the big one has a mass about 10 times

54
00:03:32,100 --> 00:03:34,980
that of the supermassive black hole at the center of the Milky Way.

55
00:03:35,640 --> 00:03:38,920
That means you would need to count 31 billion billion collisions.

56
00:03:38,920 --> 00:03:43,860
At one point in this virtual process, the frequency of clacks would be around 100 billion

57
00:03:43,860 --> 00:03:45,900
billion billion billion clacks per second.

58
00:03:46,380 --> 00:03:50,500
So let's just say you would need very good numerical precision to get this working accurately,

59
00:03:50,840 --> 00:03:53,480
and it would take a very long time for the algorithm to complete.

60
00:03:54,300 --> 00:03:58,880
I'll emphasize again that this process is way over-idealized, quickly departing from

61
00:03:58,880 --> 00:04:00,960
anything that could possibly happen in real physics.

62
00:04:01,760 --> 00:04:05,960
But of course, you all know this is not interesting because of its potential as an actual pi computing

63
00:04:05,960 --> 00:04:08,700
algorithm or as a pragmatic physics demonstration.

64
00:04:09,120 --> 00:04:14,440
It's mind-boggling because why on earth would pi show up here?

65
00:04:14,920 --> 00:04:17,380
And it's in such a weird way too.

66
00:04:17,460 --> 00:04:22,260
Its decimal digits are counting something, but usually pi shows up when its precise value

67
00:04:22,260 --> 00:04:23,940
is describing something continuous.

68
00:04:24,800 --> 00:04:26,200
I will show you why this is true.

69
00:04:26,580 --> 00:04:30,280
Where there is pi, there is a hidden circle, and in this case, that hidden circle comes

70
00:04:30,280 --> 00:04:31,620
from the conservation of energy.

71
00:04:32,060 --> 00:04:36,340
In fact, you're going to see two separate methods, which are each as stunning and surprising

72
00:04:36,340 --> 00:04:37,380
as the fact itself.

73
00:04:38,160 --> 00:04:41,560
Delaying gratification though, I will make you wait until the next video to see what's

74
00:04:41,560 --> 00:04:42,240
going on.

75
00:04:42,520 --> 00:04:47,140
In the meantime, I highly encourage you to take a stab at it yourself, and be social

76
00:04:47,140 --> 00:04:47,640
about it.

77
00:04:47,720 --> 00:04:51,640
It's a hard puzzle, so it never hurts to recruit some other smart minds to the task.

78
00:05:01,620 --> 00:05:12,240
Thank you.

