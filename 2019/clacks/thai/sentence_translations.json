[
 {
  "input": "Sometimes, math and physics conspire in ways that just feel too good to be true. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   4.0,
   8.0
  ],
  "n_reviews": 0
 },
 {
  "input": "Let's play a strange sort of mathematical croquet. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   8.64,
   10.78
  ],
  "n_reviews": 0
 },
 {
  "input": "We're going to have two sliding blocks and a wall. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   11.28,
   13.54
  ],
  "n_reviews": 0
 },
 {
  "input": "The first block starts by coming in at some velocity from the right, while the second one starts out stationary. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   14.08,
   19.18
  ],
  "n_reviews": 0
 },
 {
  "input": "Being overly idealistic physicists, let's assume there's no friction and all of the collisions are perfectly elastic, which means no energy is lost. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   19.92,
   27.78
  ],
  "n_reviews": 0
 },
 {
  "input": "The astute among you might complain that such collisions would make no sound, but your goal here is to count how many collisions take place. ",
  "translatedText": "บางครั้งคณิตศาสตร์และฟิสิกส์ก็สมรู้ร่วมคิดกันในแบบที่รู้สึกดีเกินจริง มาเล่นโครเก้ทางคณิตศาสตร์ประเภทแปลกๆ กันดีกว่า เราจะมีบล็อกเลื่อนสองอันและกำแพงหนึ่งอัน บล็อกแรกเริ่มต้นด้วยการเข้ามาด้วยความเร็วหนึ่งจากทางขวา ในขณะที่บล็อกที่สองเริ่มหยุดนิ่ง ในฐานะนักฟิสิกส์อุดมคติมากเกินไป สมมติว่าไม่มีแรงเสียดทานและการชนทั้งหมดนั้นยืดหยุ่นได้อย่างสมบูรณ์แบบ ซึ่งหมายความว่าไม่มีการสูญเสียพลังงาน ความฉลาดในหมู่คุณอาจบ่นว่าการชนดังกล่าวไม่มีเสียง แต่เป้าหมายของคุณที่นี่คือนับจำนวนการชนที่เกิดขึ้น ดังนั้น ในการขัดแย้งเล็กน้อยกับสมมติฐานนั้น ฉันอยากจะทิ้งเสียงกระทบกันเล็กน้อย เพื่อดึงความสนใจของคุณไปที่การนับนั้นได้ดีขึ้น กรณีที่ง่ายที่สุดคือเมื่อทั้งสองบล็อกมีมวลเท่ากัน บล็อกแรกกระทบบล็อกที่สอง ถ่ายโอนโมเมนตัมทั้งหมด จากนั้นบล็อกที่สองกระเด็นออกจากกำแพง จากนั้นถ่ายโอนโมเมนตัมทั้งหมดกลับไปยังบล็อกแรก ซึ่งจากนั้นแล่นออกไปสู่ระยะอนันต์ แคร็กทั้งหมดสามอัน แล้วถ้าบล็อกแรกมีมวลเป็น 100 เท่าของมวลบล็อกที่สองล่ะ? ",
  "model": "nmt",
  "time_range": [
   28.4,
   35.68
  ],
  "n_reviews": 0
 },
 {
  "input": "So in slight conflict with that assumption, I want to leave a little clack sound to better draw your attention to that count. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   36.04,
   41.68
  ],
  "n_reviews": 0
 },
 {
  "input": "The simplest case is when both blocks have the same mass. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   42.32,
   44.92
  ],
  "n_reviews": 0
 },
 {
  "input": "The first block hits the second, transferring all of its momentum, then the second one bounces off the wall, and then transfers all of its momentum back to the first, which then sails off towards infinity. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   45.38,
   55.28
  ],
  "n_reviews": 0
 },
 {
  "input": "Three total clacks. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   55.86,
   56.8
  ],
  "n_reviews": 0
 },
 {
  "input": "What about if the first block was 100 times the mass of the second one? ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   57.44,
   61.18
  ],
  "n_reviews": 0
 },
 {
  "input": "I promise I will explain to you all the relevant physics in due course, it's not entirely obvious how you would predict the dynamics here, but in the spirit of getting to the punchline, let's watch what happens. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   61.84,
   71.28
  ],
  "n_reviews": 0
 },
 {
  "input": "The second one will keep bouncing back and forth between the wall and the first block, 100 times its mass, like a satisfying game of Breakout, slowly and discreetly redirecting that first block's momentum to point in the opposite direction. ",
  "translatedText": "ฉันสัญญาว่าฉันจะอธิบายฟิสิกส์ที่เกี่ยวข้องทั้งหมดให้คุณฟังในเวลาที่เหมาะสม มันไม่ชัดเจนนักว่าคุณจะทำนายไดนามิกส์ที่นี่ได้อย่างไร แต่ด้วยจิตวิญญาณของการไปสู่จุดเน้นหลัก มาดูกันว่าเกิดอะไรขึ้น อันที่สองจะเด้งกลับไปกลับมาระหว่างกำแพงกับบล็อกแรกซึ่งมีมวลเป็น 100 เท่า เช่นเดียวกับเกม Breakout ที่น่าพึงพอใจ โดยค่อยๆ เปลี่ยนเส้นทางโมเมนตัมของบล็อกแรกนั้นอย่างช้าๆ และรอบคอบเพื่อชี้ไปในทิศทางตรงกันข้าม โดยรวมแล้ว จะมีการชนกัน 31 ครั้งก่อนที่แต่ละบล็อกจะเลื่อนออกไปสู่ระยะอนันต์ และจะไม่มีใครแตะต้องอีกเลย จะเกิดอะไรขึ้นถ้าบล็อกแรกมีมวลมากกว่าบล็อกที่สอง 10,000 เท่า? ",
  "model": "nmt",
  "time_range": [
   71.9,
   83.84
  ],
  "n_reviews": 0
 },
 {
  "input": "In total, there will be 31 collisions before each block is sliding off towards infinity, never to be touched again. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   83.84,
   90.62
  ],
  "n_reviews": 0
 },
 {
  "input": "What if the first block was 10,000 times the mass of the second one? ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   91.58,
   95.18
  ],
  "n_reviews": 0
 },
 {
  "input": "In that case, there would be quite a few more clacks, all happening very rapidly at one point, adding up to 313 total collisions. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   95.86,
   109.44
  ],
  "n_reviews": 0
 },
 {
  "input": "Well, hang on, wait for it…wait for it… Okay, 314 clacks. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   109.5,
   118.48
  ],
  "n_reviews": 0
 },
 {
  "input": "If the first block was 1,000,000 times the mass of the other, then again, with all of our crazy idealistic conditions, almost all of the clacks happen in one big burst, this time resulting in a total of 3,141 collisions. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   119.3,
   132.68
  ],
  "n_reviews": 0
 },
 {
  "input": "Perhaps you see the pattern here, though it's forgivable if you don't, since it defies all expectation. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   133.76,
   138.6
  ],
  "n_reviews": 0
 },
 {
  "input": "When the mass of that first block is some power of 100 times the mass of the second, the total number of collisions have the same digits as pi. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   138.6,
   147.2
  ],
  "n_reviews": 0
 },
 {
  "input": "This absolutely blew my mind when it was first shared with me. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   148.24,
   151.26
  ],
  "n_reviews": 0
 },
 {
  "input": "Credit to the viewer Henry Cavill for introducing me to this fact, which was originally discovered by the mathematician Gregory Galperin in 1995 and published in 2003. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   151.66,
   160.96
  ],
  "n_reviews": 0
 },
 {
  "input": "Part of what I love about this is that if ever there were Olympic Games for algorithms that compute pi, this one would have to win medals both for being the most elegant, and for being the most comically inefficient. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   161.92,
   173.36
  ],
  "n_reviews": 0
 },
 {
  "input": "I mean, think about the actual algorithm here. ",
  "translatedText": "ในกรณีนั้น ก็จะมีการชนกันอีกไม่กี่ครั้ง ทั้งหมดเกิดขึ้นอย่างรวดเร็วมาก ณ จุดหนึ่ง รวมเป็นจำนวนการชนกันทั้งหมด 313 ครั้ง เอาล่ะ รอก่อน...รอก่อน...โอเค 314 เสียงกระทบกัน ถ้าบล็อกแรกเป็น 1,000,000 เท่าของมวลอีกบล็อกหนึ่ง เช่นนั้นอีกครั้ง ด้วยเงื่อนไขอุดมคติอันบ้าคลั่งของเรา เสียงกระทบกันเกือบทั้งหมดเกิดขึ้นในการระเบิดครั้งใหญ่เพียงครั้งเดียว คราวนี้ทำให้เกิดการชนกันทั้งหมด 3,141 ครั้ง บางทีคุณอาจเห็นรูปแบบนี้ แม้ว่าจะให้อภัยได้ถ้าคุณไม่ทำ เพราะมันท้าทายความคาดหวังทั้งหมด เมื่อมวลของบล็อกแรกนั้นมีกำลังเป็น 100 เท่าของมวลของวินาที จำนวนการชนทั้งหมดจะมีหลักเดียวกันกับพาย สิ่งนี้ทำให้ฉันทึ่งมากเมื่อมันถูกแบ่งปันกับฉันครั้งแรก ขอขอบคุณผู้ชม Henry Cavill ที่แนะนำข้อเท็จจริงนี้ให้ฉันรู้จัก ซึ่งเดิมค้นพบโดยนักคณิตศาสตร์ Gregory Galperin ในปี 1995 และตีพิมพ์ในปี 2003 ส่วนหนึ่งของสิ่งที่ฉันชอบเกี่ยวกับเรื่องนี้ก็คือ ถ้าเคยมีการแข่งขันกีฬาโอลิมปิกสำหรับอัลกอริธึมที่คำนวณค่าพาย เกมนี้จะต้องได้รับเหรียญรางวัลทั้งจากการเป็นคนที่มีความสง่างามที่สุด และการเป็นคนที่ไม่มีประสิทธิภาพอย่างตลกขบขันที่สุด ฉันหมายถึง ลองคิดถึงอัลกอริธึมจริงที่นี่ ขั้นตอนที่ 1 ใช้เครื่องมือฟิสิกส์ ขั้นตอนที่ 2 เลือกจำนวนหลัก d ของพายที่คุณต้องการคำนวณ ขั้นตอนที่ 3 ตั้งค่ามวลของบล็อกหนึ่งเป็น 100 ยกกำลัง d-1 จากนั้นส่งมันเคลื่อนที่บนพื้นผิวที่ไม่มีแรงเสียดทานไปยังบล็อกที่มีมวล 1 ขั้นตอนที่ 4 นับการชนทั้งหมด ตัวอย่างเช่น ในการคำนวณค่าไพเพียง 20 หลัก ซึ่งพอดีบนหน้าจอนี้ บล็อกหนึ่งจะต้องมีมวล 100 พันล้านล้านล้านเท่าของมวลอีกบล็อกหนึ่ง ซึ่งหากบล็อกเล็กนั้นคือ 1 กิโลกรัม หมายความว่าบล็อกใหญ่ มีมวลประมาณ 10 เท่าของหลุมดำมวลมหาศาลที่ใจกลางทางช้างเผือก นั่นหมายความว่าคุณจะต้องนับการชนกันถึง 31 พันล้านครั้ง ณ จุดหนึ่งของกระบวนการเสมือนนี้ ความถี่ของเสียงแคร็กจะอยู่ที่ประมาณ 100 พันล้านล้านล้านเสียงแคร็กต่อวินาที สมมติว่าคุณต้องการความแม่นยำเชิงตัวเลขที่ดีมากเพื่อให้ทำงานได้อย่างแม่นยำ และอัลกอริธึมจะใช้เวลานานมากจึงจะเสร็จสมบูรณ์ ฉันจะย้ำอีกครั้งว่ากระบวนการนี้มีอุดมคติมากเกินไป และแยกออกจากสิ่งที่อาจเกิดขึ้นในฟิสิกส์จริงอย่างรวดเร็ว แต่แน่นอน คุณทุกคนรู้ว่าสิ่งนี้ไม่น่าสนใจ เนื่องจากมันมีศักยภาพในฐานะอัลกอริธึมการคำนวณ pi จริง ๆ หรือการสาธิตทางฟิสิกส์เชิงปฏิบัติ มันน่าเหลือเชื่อมาก เพราะเหตุใด pi ถึงมาปรากฏตัวที่นี่? ",
  "model": "nmt",
  "time_range": [
   174.06,
   176.22
  ],
  "n_reviews": 0
 },
 {
  "input": "Step 1, implement a physics engine. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   176.52,
   178.42
  ],
  "n_reviews": 0
 },
 {
  "input": "Step 2, choose the number of digits d of pi you'd like to compute. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   178.88,
   183.0
  ],
  "n_reviews": 0
 },
 {
  "input": "Step 3, set the mass of one of the blocks to be 100 to the power d-1, then send it travelling on a frictionless surface towards a block of mass 1. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   183.68,
   192.28
  ],
  "n_reviews": 0
 },
 {
  "input": "Step 4, count all collisions. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   192.82,
   194.98
  ],
  "n_reviews": 0
 },
 {
  "input": "For example, to calculate only 20 digits of pi, which fits so cleanly on this screen, one block would have to have 100 billion billion billion billion times the mass of the other, which if that small block was 1 kilogram, means the big one has a mass about 10 times that of the supermassive black hole at the center of the Milky Way. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   196.42000000000002,
   214.98
  ],
  "n_reviews": 0
 },
 {
  "input": "That means you would need to count 31 billion billion collisions. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   215.64,
   218.92
  ],
  "n_reviews": 0
 },
 {
  "input": "At one point in this virtual process, the frequency of clacks would be around 100 billion billion billion billion clacks per second. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   218.92,
   225.9
  ],
  "n_reviews": 0
 },
 {
  "input": "So let's just say you would need very good numerical precision to get this working accurately, and it would take a very long time for the algorithm to complete. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   226.38,
   233.48
  ],
  "n_reviews": 0
 },
 {
  "input": "I'll emphasize again that this process is way over-idealized, quickly departing from anything that could possibly happen in real physics. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   234.3,
   240.96
  ],
  "n_reviews": 0
 },
 {
  "input": "But of course, you all know this is not interesting because of its potential as an actual pi computing algorithm, or as a pragmatic physics demonstration. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   241.76,
   248.7
  ],
  "n_reviews": 0
 },
 {
  "input": "It's mind-boggling because why on earth would pi show up here? ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   249.12,
   254.44
  ],
  "n_reviews": 0
 },
 {
  "input": "And it's in such a weird way too. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   254.92,
   257.38
  ],
  "n_reviews": 0
 },
 {
  "input": "Its decimal digits are counting something, but usually pi shows up when its precise value is describing something continuous. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   257.46,
   263.94
  ],
  "n_reviews": 0
 },
 {
  "input": "I will show you why this is true. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   264.8,
   266.2
  ],
  "n_reviews": 0
 },
 {
  "input": "Where there is pi, there is a hidden circle, and in this case, that hidden circle comes from the conservation of energy. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   266.58,
   271.62
  ],
  "n_reviews": 0
 },
 {
  "input": "In fact, you're going to see two separate methods, which are each as stunning and surprising as the fact itself. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   272.06,
   277.38
  ],
  "n_reviews": 0
 },
 {
  "input": "Delaying gratification though, I will make you wait until the next video to see what's going on. ",
  "translatedText": "และมันก็เป็นวิธีที่แปลกเช่นกัน เลขฐานสิบของมันคือการนับอะไรบางอย่าง แต่โดยปกติแล้ว pi จะปรากฏขึ้นเมื่อค่าที่แม่นยำของมันคือการอธิบายบางสิ่งที่ต่อเนื่องกัน ฉันจะแสดงให้คุณเห็นว่าเหตุใดสิ่งนี้จึงเป็นความจริง เมื่อมีพาย ที่นั่นย่อมมีวงกลมซ่อนอยู่ และในกรณีนี้ วงกลมที่ซ่อนอยู่นั้นมาจากการอนุรักษ์พลังงาน ในความเป็นจริง คุณจะเห็นสองวิธีที่แยกจากกัน ซึ่งแต่ละวิธีก็น่าทึ่งและน่าประหลาดใจไม่แพ้กับความเป็นจริงเลย อย่างไรก็ตาม ฉันจะทำให้คุณรอจนถึงวิดีโอหน้าเพื่อดูว่าเกิดอะไรขึ้น ในระหว่างนี้ ฉันขอแนะนำให้คุณลองดูด้วยตัวเองและเข้าสังคมเกี่ยวกับเรื่องนี้ มันเป็นปริศนาที่ยาก ดังนั้นจึงไม่เจ็บเลยที่จะจ้างคนฉลาดคนอื่นๆ มาทำงานนี้ ขอบคุณที่รับชม. ",
  "model": "nmt",
  "time_range": [
   278.16,
   282.24
  ],
  "n_reviews": 0
 },
 {
  "input": "In the meantime, I highly encourage you to take a stab at it yourself, and be social about it. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   282.52,
   287.64
  ],
  "n_reviews": 0
 },
 {
  "input": "It's a hard puzzle, so it never hurts to recruit some other smart minds to the task. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   287.72,
   291.64
  ],
  "n_reviews": 0
 },
 {
  "input": "Thanks for watching. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   301.62,
   291.64
  ],
  "n_reviews": 0
 },
 {
  "input": "I'll see you next time. ",
  "translatedText": "ฉันจะพบคุณครั้งต่อไป ลาก่อน. ",
  "model": "nmt",
  "time_range": [
   301.62,
   312.24
  ],
  "n_reviews": 0
 },
 {
  "input": "Bye. ",
  "translatedText": "",
  "model": "nmt",
  "time_range": [
   312.24,
   312.24
  ],
  "n_reviews": 0
 }
]