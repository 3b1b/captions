1
00:00:04,000 --> 00:00:06,000
때때로 수학과 물리학은 사실이라고 하기에는 

2
00:00:06,000 --> 00:00:08,000
너무 좋은 방식으로 음모를 꾸미기도 합니다.

3
00:00:08,640 --> 00:00:10,780
이상한 종류의 수학 크로켓 게임을 해보겠습니다.

4
00:00:11,280 --> 00:00:13,540
두 개의 슬라이딩 블록과 벽이 있습니다.

5
00:00:14,080 --> 00:00:15,753
첫 번째 블록은 오른쪽에서 어느 정도 

6
00:00:15,753 --> 00:00:17,267
속도로 들어오는 것으로 시작하고, 

7
00:00:17,267 --> 00:00:19,180
두 번째 블록은 정지된 상태에서 시작합니다.

8
00:00:19,920 --> 00:00:22,362
지나치게 이상주의적인 물리학자이기 때문에 

9
00:00:22,362 --> 00:00:24,805
마찰이 없고 모든 충돌이 완벽하게 탄성이 

10
00:00:24,805 --> 00:00:27,780
있어 에너지가 손실되지 않는다고 가정해 보겠습니다.

11
00:00:28,400 --> 00:00:31,116
영리한 분들은 그런 충돌이 소리가 나지 않는다고 

12
00:00:31,116 --> 00:00:33,631
불평할 수도 있지만, 여기서 여러분의 목표는 

13
00:00:33,631 --> 00:00:36,146
얼마나 많은 충돌이 발생하는지 세는 것이므로 

14
00:00:36,146 --> 00:00:38,561
그 가정과 약간 상충되지만, 그 세기에 더 

15
00:00:38,561 --> 00:00:41,277
집중할 수 있도록 약간의 딸깍 소리를 남겨두려고 

16
00:00:41,277 --> 00:00:41,680
합니다.

17
00:00:42,320 --> 00:00:44,920
가장 간단한 경우는 두 블록의 질량이 같은 경우입니다.

18
00:00:45,380 --> 00:00:47,905
첫 번째 블록이 두 번째 블록에 부딪혀 모든 

19
00:00:47,905 --> 00:00:50,330
운동량을 전달하고, 두 번째 블록은 벽에서 

20
00:00:50,330 --> 00:00:52,653
튕겨져 나간 다음 모든 운동량을 다시 첫 

21
00:00:52,653 --> 00:00:55,280
번째 블록에 전달하여 무한대를 향해 날아갑니다.

22
00:00:55,860 --> 00:00:56,800
총 세 번의 클랙킹.

23
00:00:57,440 --> 00:00:59,420
첫 번째 블록이 두 번째 블록의 

24
00:00:59,420 --> 00:01:01,180
질량의 100배라면 어떨까요?

25
00:01:01,840 --> 00:01:04,071
적절한 시기에 모든 관련 물리학에 대해 설명해 

26
00:01:04,071 --> 00:01:06,474
드릴 것을 약속드리며, 여기서 역학 관계를 어떻게 

27
00:01:06,474 --> 00:01:08,877
예측할 수 있을지 완전히 명확하지는 않지만 요점을 

28
00:01:08,877 --> 00:01:11,280
파악하는 차원에서 어떤 일이 일어나는지 지켜봅시다.

29
00:01:11,900 --> 00:01:14,970
두 번째 블록은 만족스러운 브레이크아웃 게임처럼 

30
00:01:14,970 --> 00:01:17,813
벽과 첫 번째 블록 사이를 100배 질량으로 

31
00:01:17,813 --> 00:01:20,656
계속 앞뒤로 튕기며 첫 번째 블록의 추진력을 

32
00:01:20,656 --> 00:01:23,840
반대 방향으로 천천히 조심스럽게 방향을 전환합니다.

33
00:01:23,840 --> 00:01:27,365
각 블록이 무한대를 향해 미끄러져 다시는 닿지 

34
00:01:27,365 --> 00:01:30,620
않을 때까지 총 31번의 충돌이 일어납니다.

35
00:01:31,580 --> 00:01:33,331
첫 번째 블록이 두 번째 블록의 

36
00:01:33,331 --> 00:01:35,180
질량의 10,000배라면 어떨까요?

37
00:01:35,860 --> 00:01:42,009
이 경우 한 번에 매우 빠르게 발생하는 충돌이 꽤 

38
00:01:42,009 --> 00:01:48,160
많이 더 발생하여 총 313건의 충돌이 합산됩니다.

39
00:01:48,920 --> 00:01:50,040
사실, 잠깐만요.

40
00:01:50,660 --> 00:01:50,040
기다리세요.

41
00:01:50,660 --> 00:01:54,280
기다리세요.

42
00:01:56,980 --> 00:01:58,480
좋아요, 314클릭입니다.

43
00:01:59,300 --> 00:02:01,976
첫 번째 블록이 다른 블록의 질량의 

44
00:02:01,976 --> 00:02:05,053
1,000,000배였다면, 이번에는 모든 

45
00:02:05,053 --> 00:02:08,264
이상주의적 조건으로 인해 거의 모든 충돌이 

46
00:02:08,264 --> 00:02:11,475
한꺼번에 발생하여 총 3,141번의 충돌이 

47
00:02:11,475 --> 00:02:12,680
발생하게 됩니다.

48
00:02:13,760 --> 00:02:15,428
여기서 패턴을 보셨을 수도 있지만, 

49
00:02:15,428 --> 00:02:17,682
예상과 다른 것이기 때문에 예상하지 못하셨더라도 

50
00:02:17,682 --> 00:02:18,600
용서할 수 있습니다.

51
00:02:18,600 --> 00:02:21,556
첫 번째 블록의 질량이 두 번째 블록의 

52
00:02:21,556 --> 00:02:24,512
질량의 100배의 거듭제곱이면 총 충돌 

53
00:02:24,512 --> 00:02:27,200
횟수는 파이와 같은 숫자를 갖습니다.

54
00:02:28,240 --> 00:02:31,260
처음 이 소식을 접했을 때 정말 깜짝 놀랐습니다.

55
00:02:31,660 --> 00:02:34,474
1995년 수학자 그레고리 갈페린이 처음 

56
00:02:34,474 --> 00:02:37,656
발견하고 2003년에 발표한 이 사실을 소개해 

57
00:02:37,656 --> 00:02:40,960
준 시청자 헨리 카빌에게 감사의 마음을 전합니다.

58
00:02:41,920 --> 00:02:44,488
제가 파이를 계산하는 알고리즘을 겨루는 

59
00:02:44,488 --> 00:02:46,939
올림픽이 있다면, 이 알고리즘은 가장 

60
00:02:46,939 --> 00:02:49,624
우아하면서도 가장 우스꽝스럽게 비효율적인 

61
00:02:49,624 --> 00:02:52,192
알고리즘으로 메달을 따야 할 것 같다는 

62
00:02:52,192 --> 00:02:53,360
생각이 들었습니다.

63
00:02:54,060 --> 00:02:56,220
여기서 실제 알고리즘에 대해 생각해 보세요.

64
00:02:56,520 --> 00:02:58,420
1단계, 물리 엔진을 구현합니다.

65
00:02:58,880 --> 00:03:03,000
2단계, 계산할 파이의 자릿수 d를 선택합니다.

66
00:03:03,680 --> 00:03:06,183
3단계, 블록 중 하나의 질량을 d-1의 

67
00:03:06,183 --> 00:03:09,123
거듭제곱으로 100으로 설정한 다음 마찰이 없는 

68
00:03:09,123 --> 00:03:12,280
표면에서 질량 1의 블록을 향해 이동하도록 보냅니다.

69
00:03:12,820 --> 00:03:14,980
4단계, 모든 충돌을 계산합니다.

70
00:03:16,420 --> 00:03:20,213
예를 들어, 이 화면에 깔끔하게 들어맞는 20자리 

71
00:03:20,213 --> 00:03:23,871
파이를 계산하려면 한 블록의 질량이 다른 블록의 

72
00:03:23,871 --> 00:03:26,309
1000억 배에 달해야 하는데, 

73
00:03:26,309 --> 00:03:30,102
작은 블록이 1kg이라면 큰 블록은 은하수 중심에 

74
00:03:30,102 --> 00:03:33,760
있는 초질량 블랙홀의 약 10배의 질량을 가지고 

75
00:03:33,760 --> 00:03:34,980
있다는 뜻입니다.

76
00:03:35,640 --> 00:03:38,920
즉, 310억 개의 충돌을 계산해야 한다는 뜻입니다.

77
00:03:38,920 --> 00:03:42,280
이 가상 프로세스의 한 시점에서 클럭의 빈도는 

78
00:03:42,280 --> 00:03:45,900
초당 약 1,000억 번의 클럭이 발생하게 됩니다.

79
00:03:46,380 --> 00:03:48,804
따라서 이 작업을 정확하게 수행하려면 매우 우수한 

80
00:03:48,804 --> 00:03:51,055
수치 정밀도가 필요하며 알고리즘이 완료되는 데 

81
00:03:51,055 --> 00:03:53,480
매우 오랜 시간이 걸릴 것이라고 가정해 보겠습니다.

82
00:03:54,300 --> 00:03:56,554
다시 한 번 강조하지만, 이 프로세스는 

83
00:03:56,554 --> 00:03:58,808
실제 물리학에서 일어날 수 있는 일과는 

84
00:03:58,808 --> 00:04:00,960
거리가 먼 지나치게 이상화된 것입니다.

85
00:04:01,760 --> 00:04:04,245
물론 실제 파이 계산 알고리즘이나 실용적인 

86
00:04:04,245 --> 00:04:06,628
물리학 데모로서의 잠재력 때문에 흥미롭지 

87
00:04:06,628 --> 00:04:08,700
않다는 것은 모두 알고 계실 겁니다.

88
00:04:09,120 --> 00:04:14,440
도대체 파이가 왜 여기에 나타날까요?

89
00:04:14,920 --> 00:04:17,380
그리고 그 방식도 정말 이상합니다.

90
00:04:17,459 --> 00:04:19,733
십진수는 무언가를 세는 숫자이지만, 

91
00:04:19,733 --> 00:04:23,030
일반적으로 파이의 정확한 값은 연속적인 것을 설명할 

92
00:04:23,030 --> 00:04:23,940
때 표시됩니다.

93
00:04:24,800 --> 00:04:26,200
그 이유를 보여드리겠습니다.

94
00:04:26,580 --> 00:04:28,898
파이가 있는 곳에는 숨겨진 원이 있으며, 

95
00:04:28,898 --> 00:04:31,620
이 경우 숨겨진 원은 에너지 보존에서 비롯됩니다.

96
00:04:32,060 --> 00:04:34,534
사실, 사실 그 자체만큼이나 놀랍고 

97
00:04:34,534 --> 00:04:37,380
놀라운 두 가지 방법을 보게 될 것입니다.

98
00:04:38,160 --> 00:04:40,159
하지만 만족을 미루고 다음 영상까지 기다려야 

99
00:04:40,159 --> 00:04:42,240
무슨 일이 벌어지고 있는지 확인할 수 있습니다.

100
00:04:42,520 --> 00:04:45,029
그 동안에는 직접 한 번 시도해 보시고 소셜 

101
00:04:45,029 --> 00:04:47,640
미디어를 통해 공유해 보시기를 적극 권장합니다.

102
00:04:47,720 --> 00:04:49,632
어려운 퍼즐이기 때문에 다른 똑똑한 

103
00:04:49,632 --> 00:04:51,640
인재를 영입하는 것도 나쁘지 않습니다.

104
00:05:01,620 --> 00:05:12,240
감사합니다.

