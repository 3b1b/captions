1
00:00:04,080 --> 00:00:08,380
有時候數學和物理
會在意想不到的地方一起出現

2
00:00:08,380 --> 00:00:11,100
讓我們玩一個奇妙的數學槌球遊戲吧

3
00:00:11,100 --> 00:00:14,090
我們有兩個滑動的方塊和一道牆

4
00:00:14,090 --> 00:00:19,640
第一個方塊從右側以某個速度接近
同時第二個方塊保持靜止不動

5
00:00:19,640 --> 00:00:20,140
 

6
00:00:20,140 --> 00:00:23,661
先當一個理想主義的物理學家
讓我們假設沒有摩擦力

7
00:00:23,661 --> 00:00:28,570
且所有的碰撞都是完全彈性碰撞
也就是沒有任何能量散失

8
00:00:28,570 --> 00:00:32,260
你們當中精明的人可能會抗議
這樣的碰撞並不會產生聲音

9
00:00:32,260 --> 00:00:35,860
但你現在的目標是要數出
有多少次碰撞發生

10
00:00:35,940 --> 00:00:41,940
所以儘管和假設有點衝突
我們仍然保留一點聲音讓你能注意到碰撞次數

11
00:00:41,940 --> 00:00:45,440
最簡單的情況是
有兩個相同質量的方塊

12
00:00:45,440 --> 00:00:48,840
第一個方塊撞上第二個方塊
轉移所有動量

13
00:00:48,840 --> 00:00:53,520
接著，第二個方塊撞上牆壁反彈
並將所有動量傳回第一個方塊

14
00:00:53,520 --> 00:00:55,760
並繼續滑動到無窮遠處

15
00:00:55,760 --> 00:00:57,660
總共三次的碰撞聲音

16
00:00:57,660 --> 00:01:01,449
如果第一個方塊的質量是
第二個方塊的100倍呢？

17
00:01:01,449 --> 00:01:04,840
我保證我晚點會解釋所有相關的物理知識

18
00:01:04,840 --> 00:01:08,080
目前還不是很清楚
如何預測這個情況下的方塊運動情形

19
00:01:08,080 --> 00:01:09,960
但為了先切入重點

20
00:01:09,970 --> 00:01:11,570
我們先看到底發生了什麼事

21
00:01:11,570 --> 00:01:16,900
第二個方塊會持續在牆壁以及
有其100倍質量的第一個方塊之間來回碰撞

22
00:01:16,900 --> 00:01:18,880
就像有趣的打磚塊遊戲一樣

23
00:01:18,900 --> 00:01:24,720
慢慢的在一次次碰撞中
將第一個方塊的動量轉成相反方向

24
00:01:24,720 --> 00:01:30,840
總共會有31次碰撞
直到方塊各自滑向無窮遠處且永遠不再碰撞

25
00:01:30,880 --> 00:01:31,680
 

26
00:01:31,680 --> 00:01:35,880
如果第一個方塊的質量
是第二個方塊的10,000倍呢？

27
00:01:35,880 --> 00:01:40,680
這種情況下，將會有不少次碰撞聲音
全都發生在很短的時間內

28
00:01:44,980 --> 00:01:48,580
全部加起來總共313次碰撞

29
00:01:48,580 --> 00:01:52,860
歐，事實上...等等...等等...

30
00:01:52,860 --> 00:01:54,920
等等...

31
00:01:56,560 --> 00:01:58,820
好，314次碰撞

32
00:01:59,080 --> 00:02:05,500
如果質量是1,000,000倍呢？
再一次，在我們理想情況的假設下

33
00:02:05,500 --> 00:02:08,660
幾乎所有的碰撞聲音都連在一起

34
00:02:08,660 --> 00:02:13,220
這次總共產生了3,141次碰撞

35
00:02:13,680 --> 00:02:15,420
或許你察覺到了規律

36
00:02:15,420 --> 00:02:18,920
但如果沒發現也很正常
因為確實超出了所有預期

37
00:02:18,920 --> 00:02:23,800
當第一個方塊的質量是第二個方塊的
(100 ^ n ) 倍時

38
00:02:23,800 --> 00:02:28,350
碰撞的次數會和圓周率 pi 的前幾位數字相同

39
00:02:28,350 --> 00:02:31,560
我第一次得知時
對此大感震驚

40
00:02:31,560 --> 00:02:34,680
感謝觀眾 Henry Kavle 介紹我這個了解事實

41
00:02:34,680 --> 00:02:41,820
而這是最先由數學家 Gregory Galperin 
於 1995 年發現，並於 2003 年發表

42
00:02:41,840 --> 00:02:43,660
我喜歡這個的部份原因是

43
00:02:43,660 --> 00:02:47,340
如果世界上有
圓周率計算演算法的奧運比賽的話

44
00:02:47,340 --> 00:02:51,120
這方法將能獲得獎牌
因為這方法最優雅

45
00:02:51,120 --> 00:02:53,780
同時也最沒有效率

46
00:02:53,780 --> 00:02:56,480
我的意思是，想想看實際上的計算方式吧

47
00:02:56,490 --> 00:02:58,950
第一步：做出一個引擎

48
00:02:58,950 --> 00:03:03,660
第二步：選擇想要計算的 pi 的位數 ｄ

49
00:03:03,660 --> 00:03:08,820
第三步：將一個方塊的質量設為 100^(d-1)

50
00:03:08,820 --> 00:03:13,120
並讓它在無摩擦的平面上滑向質量1的方塊

51
00:03:13,130 --> 00:03:16,170
第四步：數碰撞次數

52
00:03:16,170 --> 00:03:22,040
舉例來說，要計算20位的 pi
就如剛好可以完整顯示在螢幕上的這數字

53
00:03:22,040 --> 00:03:23,720
一個方塊的質量需要是另一個方塊的

54
00:03:23,720 --> 00:03:26,840
100 的十億的十億的十億的十億倍

55
00:03:26,840 --> 00:03:29,540
如果小方塊質量是1公斤的話

56
00:03:29,540 --> 00:03:35,700
大方塊的質量等同於是 10 個銀河系中心的超大質量黑洞

57
00:03:35,700 --> 00:03:39,220
而且你需要數 31的十億的十億倍
這麼多次的碰撞

58
00:03:39,220 --> 00:03:40,900
而且在某個時刻

59
00:03:40,900 --> 00:03:45,860
碰撞的頻率將高達
每秒 100的十億的十億的十億的十億倍 次

60
00:03:45,860 --> 00:03:50,700
簡單說，你會需要非常好的數值精確度
才能準確完成

61
00:03:50,700 --> 00:03:53,980
而且還需要很長的時間才能完成這個演算法

62
00:03:53,980 --> 00:03:57,900
我在此強調
這實在太過理想化

63
00:03:57,900 --> 00:04:01,620
過程很快就違背了真實物理情況

64
00:04:01,620 --> 00:04:06,800
但這方法有趣的地方
當然不在於這能實際應用於計算 pi

65
00:04:06,819 --> 00:04:08,970
也不在於實際物理情況的展示

66
00:04:08,970 --> 00:04:14,980
它讓人感到驚奇的是
到底，為什麼， pi 的位數會出現在這種地方

67
00:04:14,980 --> 00:04:17,280
而且是以一種奇怪的方式出現

68
00:04:17,280 --> 00:04:19,400
這個數字來自於『計算次數』

69
00:04:19,760 --> 00:04:24,800
然而通常 pi 出現時
其準確數值應該是描述某種連續的東西

70
00:04:24,800 --> 00:04:26,689
我會告訴你為何如此

71
00:04:26,689 --> 00:04:28,540
有pi 的地方，就會有一個隱藏的圓

72
00:04:28,540 --> 00:04:32,200
在這個例子中
隱藏的圓來自於『能量守恆』

73
00:04:32,200 --> 00:04:34,900
事實上，你會看到兩個不同的方法

74
00:04:34,900 --> 00:04:38,039
兩個方法都和 pi 的出現一樣讓人驚訝

75
00:04:38,040 --> 00:04:42,100
先吊一點胃口
我會讓你等一等，直到下部影片再解釋

76
00:04:42,100 --> 00:04:42,600
 

77
00:04:42,600 --> 00:04:46,240
與此同時，我非常鼓勵你自己試試

78
00:04:46,240 --> 00:04:47,740
並分享出去

79
00:04:47,740 --> 00:04:51,720
這是一個困難的題目
所以找一些聰明的人來幫你也不是什麼壞事

