1
00:00:05,120 --> 00:00:08,457
Here, we look at the math behind an animation like this one, 

2
00:00:08,457 --> 00:00:10,700
what's known as a complex Fourier series.

3
00:00:11,240 --> 00:00:15,021
Each little vector is rotating at some constant integer frequency, 

4
00:00:15,021 --> 00:00:20,100
and when you add them together, tip to tail, the final tip draws out some shape over time.

5
00:00:21,220 --> 00:00:24,375
By tweaking the initial size and angle of each vector, 

6
00:00:24,375 --> 00:00:28,620
we can make it draw pretty much anything we want, and here you'll see how.

7
00:00:31,120 --> 00:00:33,566
Before diving into it all, I want you to take 

8
00:00:33,566 --> 00:00:36,120
a moment to just linger on how striking this is.

9
00:00:37,200 --> 00:00:40,900
This particular animation has 300 rotating arrows in total.

10
00:00:41,420 --> 00:00:44,960
Go full screen for this if you can, the intricacy is worth it.

11
00:00:50,440 --> 00:00:54,229
Think about this, the action of each individual arrow is perhaps 

12
00:00:54,229 --> 00:00:57,960
the simplest thing you could imagine, rotation at a steady rate.

13
00:00:58,600 --> 00:01:02,227
And yet the collection of all added together is anything but simple, 

14
00:01:02,227 --> 00:01:06,538
and the mind-boggling complexity is put into an even sharper focus the farther we 

15
00:01:06,538 --> 00:01:09,902
zoom in, revealing the contributions of the littlest, quickest, 

16
00:01:09,902 --> 00:01:11,480
and downright frenetic arrows.

17
00:01:12,300 --> 00:01:15,274
When you consider the chaotic frenzy you're looking at, 

18
00:01:15,274 --> 00:01:18,195
and the clockwork rigidity underlying all the motions, 

19
00:01:18,195 --> 00:01:21,859
it's bizarre how the swarm acts with a kind of coordination to trace 

20
00:01:21,859 --> 00:01:23,400
out some very specific shape.

21
00:01:23,840 --> 00:01:27,340
And unlike much of the emergent complexity you find elsewhere in nature, 

22
00:01:27,340 --> 00:01:31,080
this is something that we have the math to describe and to control completely.

23
00:01:31,660 --> 00:01:34,680
Just by tuning the starting conditions, nothing more, 

24
00:01:34,680 --> 00:01:39,378
we can make this swarm conspire in all of the right ways to draw anything you want, 

25
00:01:39,378 --> 00:01:41,560
provided you have enough little arrows.

26
00:01:42,180 --> 00:01:46,520
What's even crazier is that the ultimate formula for all of this is incredibly short.

27
00:01:52,960 --> 00:01:56,855
Now often, Fourier series are described in terms of something that looks a little 

28
00:01:56,855 --> 00:02:00,560
different, functions of real numbers being broken down as a sum of sine waves.

29
00:02:01,260 --> 00:02:04,538
That turns out to be a special case of this more general rotating vector 

30
00:02:04,538 --> 00:02:07,906
phenomenon that we'll build up to, but it's where Fourier himself started, 

31
00:02:07,906 --> 00:02:10,780
and there's good reason for us to start the story there as well.

32
00:02:11,420 --> 00:02:14,876
Technically, this is the third video in a sequence about the heat equation, 

33
00:02:14,876 --> 00:02:17,560
what Fourier was working on when he developed his big idea.

34
00:02:18,200 --> 00:02:21,768
I would like to teach you about Fourier series in a way that doesn't depend on 

35
00:02:21,768 --> 00:02:25,337
you coming from those chapters, but if you have at least a high-level idea for 

36
00:02:25,337 --> 00:02:28,590
the problem from physics which originally motivated this piece of math, 

37
00:02:28,590 --> 00:02:32,340
it gives some indication for just how unexpectedly far-reaching Fourier series are.

38
00:02:32,820 --> 00:02:36,820
All you need to know is that we had a certain equation which tells us 

39
00:02:36,820 --> 00:02:40,591
how the temperature distribution on a rod would evolve over time, 

40
00:02:40,591 --> 00:02:44,820
and incidentally it also describes many other phenomena unrelated to heat.

41
00:02:44,820 --> 00:02:49,001
While it's hard to directly use this equation to figure out what will happen to an 

42
00:02:49,001 --> 00:02:53,233
arbitrary heat distribution, there's a simple solution if the initial function just 

43
00:02:53,233 --> 00:02:57,616
happens to look like a cosine wave, with the frequency tuned so that it's flat at each 

44
00:02:57,616 --> 00:02:58,120
end point.

45
00:02:58,560 --> 00:03:01,501
Specifically, as you graph what happens over time, 

46
00:03:01,501 --> 00:03:04,384
these waves simply get scaled down exponentially, 

47
00:03:04,384 --> 00:03:07,960
with higher frequency waves having a faster exponential decay.

48
00:03:10,360 --> 00:03:15,432
The heat equation happens to be what's known in the business as a linear equation, 

49
00:03:15,432 --> 00:03:20,200
meaning if you know two solutions and add them up, that sum is a new solution.

50
00:03:20,880 --> 00:03:23,166
You can even scale them each by some constant, 

51
00:03:23,166 --> 00:03:27,400
which gives you some dials to turn to construct a custom function solving the equation.

52
00:03:29,240 --> 00:03:32,710
This is a fairly straightforward property that you can verify for yourself, 

53
00:03:32,710 --> 00:03:34,080
but it's incredibly important.

54
00:03:34,080 --> 00:03:37,119
It means we can take our infinite family of solutions, 

55
00:03:37,119 --> 00:03:41,043
these exponentially decaying cosine waves, scale a few of them by some 

56
00:03:41,043 --> 00:03:45,465
custom constants of our choosing, and combine them to get a solution for a new, 

57
00:03:45,465 --> 00:03:49,500
tailor-made initial condition, which is some combination of cosine waves.

58
00:03:50,200 --> 00:03:54,499
One important thing I'd like you to notice is that when you combine these waves, 

59
00:03:54,499 --> 00:03:57,046
because the higher frequency ones decay faster, 

60
00:03:57,046 --> 00:04:00,072
the sum you construct will tend to smooth out over time, 

61
00:04:00,072 --> 00:04:02,832
as all the high frequency terms quickly go to zero, 

62
00:04:02,832 --> 00:04:05,380
leaving only the low frequency terms dominating.

63
00:04:06,100 --> 00:04:09,453
So in a funny way, all of the complexity in the evolution of this heat 

64
00:04:09,453 --> 00:04:12,524
distribution which the heat equation implies is captured by this 

65
00:04:12,524 --> 00:04:16,019
difference in the decay rates for the different pure frequency components.

66
00:04:18,040 --> 00:04:20,480
It's at this point that Fourier gains immortality.

67
00:04:21,279 --> 00:04:24,204
I think most normal people at this stage would say, well, 

68
00:04:24,204 --> 00:04:28,541
I can solve the heat equation when the initial distribution just happens to look like 

69
00:04:28,541 --> 00:04:32,828
a wave, or a sum of waves, but what a shame it is that most real world distributions 

70
00:04:32,828 --> 00:04:34,240
don't at all look like that.

71
00:04:34,800 --> 00:04:37,633
I mean, for example, let's say you brought together two rods 

72
00:04:37,633 --> 00:04:40,420
which were each at some uniform temperature, and you wanted 

73
00:04:40,420 --> 00:04:43,300
to know what happens immediately after they come into contact.

74
00:04:45,060 --> 00:04:49,493
To make the number simple, let's say the temperature of the left rod is 1 degree, 

75
00:04:49,493 --> 00:04:53,115
and the right rod is negative 1 degree, and that the total length, 

76
00:04:53,115 --> 00:04:54,900
L, of the combined two rods is 1.

77
00:04:54,900 --> 00:04:59,270
What this means is our initial temperature distribution is a step function, 

78
00:04:59,270 --> 00:05:03,640
which is so obviously different from a sine wave, or the sum of sine waves, 

79
00:05:03,640 --> 00:05:04,560
don't you think?

80
00:05:05,100 --> 00:05:09,820
I mean, it's almost entirely flat, not wavy, and for god's sake it's even discontinuous!

81
00:05:10,600 --> 00:05:13,700
And yet Fourier thought to ask a question which seems absurd.

82
00:05:14,300 --> 00:05:16,660
How do you express this as a sum of sine waves?

83
00:05:17,120 --> 00:05:21,340
Even more boldly, how do you express any initial distribution as a sum of sine waves?

84
00:05:21,800 --> 00:05:23,760
And it's more constrained than just that!

85
00:05:24,120 --> 00:05:28,560
You have to restrict yourself to adding waves which satisfy a certain boundary condition, 

86
00:05:28,560 --> 00:05:32,458
and as we saw last video, that means working with these cosine functions whose 

87
00:05:32,458 --> 00:05:36,060
frequencies are all some whole number multiple of a given base frequency.

88
00:05:36,920 --> 00:05:40,466
And by the way, if you were working with some different boundary condition, 

89
00:05:40,466 --> 00:05:44,293
say that the endpoints have to stay fixed, you'd have a different set of waves at 

90
00:05:44,293 --> 00:05:48,213
your disposal to piece together, in this case replacing that cosine expression with 

91
00:05:48,213 --> 00:05:48,540
a sine.

92
00:05:49,560 --> 00:05:52,456
It's strange how often progress in math looks more like 

93
00:05:52,456 --> 00:05:55,560
asking a new question rather than simply answering old ones.

94
00:05:56,240 --> 00:05:58,742
Fourier really does have a kind of immortality now, 

95
00:05:58,742 --> 00:06:01,775
with his name essentially synonymous with the idea of breaking 

96
00:06:01,775 --> 00:06:05,000
down functions and patterns as combinations of simple oscillations.

97
00:06:05,700 --> 00:06:09,343
It's really hard to overstate just how important and far-reaching that idea 

98
00:06:09,343 --> 00:06:12,940
turned out to be, well beyond anything Fourier himself could have imagined.

99
00:06:13,600 --> 00:06:16,884
And yet, the origin of all this is a piece of physics which, 

100
00:06:16,884 --> 00:06:20,600
at first glance, has nothing to do with frequencies and oscillations.

101
00:06:21,280 --> 00:06:23,438
If nothing else, this should give you a hint about 

102
00:06:23,438 --> 00:06:25,300
the general applicability of Fourier series.

103
00:06:26,040 --> 00:06:29,537
Now hang on, I hear some of you saying, none of these sums of sine waves that 

104
00:06:29,537 --> 00:06:33,080
you're showing are actually the step function, they're all just approximations.

105
00:06:33,540 --> 00:06:37,903
And it's true, any finite sum of sine waves will never be perfectly flat, 

106
00:06:37,903 --> 00:06:41,500
except for a constant function, nor will it be discontinuous.

107
00:06:42,020 --> 00:06:45,460
But Fourier thought more broadly, considering infinite sums.

108
00:06:46,240 --> 00:06:51,663
In the case of our step function, it turns out to be equal to this infinite sum, 

109
00:06:51,663 --> 00:06:57,355
where the coefficients are 1, negative one third, plus one fifth, minus one seventh, 

110
00:06:57,355 --> 00:07:02,980
and so on for all the odd frequencies, and all of it is rescaled by 4 divided by pi.

111
00:07:03,800 --> 00:07:05,960
I'll explain where those numbers come from in a moment.

112
00:07:06,400 --> 00:07:10,541
Before that, it's worth being clear about what we mean by a phrase like infinite sum, 

113
00:07:10,541 --> 00:07:12,660
which runs the risk of being a little vague.

114
00:07:13,540 --> 00:07:17,028
Consider the simpler context of numbers, where you could say, 

115
00:07:17,028 --> 00:07:21,080
for example, that this infinite sum of fractions equals pi divided by 4.

116
00:07:21,680 --> 00:07:26,457
As you keep adding the terms one by one, at all times what you have is rational, 

117
00:07:26,457 --> 00:07:29,760
it never actually equals the irrational pi divided by 4.

118
00:07:30,380 --> 00:07:34,746
But this sequence of partial sums approaches pi over 4, which is to say, 

119
00:07:34,746 --> 00:07:37,915
the numbers you see, while never equaling pi over 4, 

120
00:07:37,915 --> 00:07:42,880
get arbitrarily close to that value, and they stay arbitrarily close to that value.

121
00:07:43,720 --> 00:07:46,653
That's all a mouthful to say, so instead we abbreviate 

122
00:07:46,653 --> 00:07:49,160
and just say the infinite sum equals pi over 4.

123
00:07:50,620 --> 00:07:54,700
With functions, you're doing the same thing, but with many different values in parallel.

124
00:07:55,920 --> 00:07:58,720
Consider a specific input, and the value of all 

125
00:07:58,720 --> 00:08:01,520
of these scaled cosine functions for that input.

126
00:08:02,120 --> 00:08:07,740
If that input is less than 0.5, as you add more and more terms, the sum will approach 1.

127
00:08:10,000 --> 00:08:13,810
If that input is greater than 0.5, as you add more and more terms, 

128
00:08:13,810 --> 00:08:15,460
it would approach negative 1.

129
00:08:17,260 --> 00:08:20,830
At the input 0.5 itself, all of the cosines are 0, 

130
00:08:20,830 --> 00:08:23,840
so the limit of the partial sums is also 0.

131
00:08:24,600 --> 00:08:28,813
That means that, somewhat awkwardly, for this infinite sum to be strictly true, 

132
00:08:28,813 --> 00:08:32,395
we have to prescribe the value of this set function at the point of 

133
00:08:32,395 --> 00:08:35,240
discontinuity to be 0, sort of halfway along the jump.

134
00:08:36,080 --> 00:08:40,748
Analogous to an infinite sum of rational numbers being irrational, 

135
00:08:40,748 --> 00:08:46,740
the infinite sum of wavy continuous functions can equal a discontinuous flat function.

136
00:08:47,160 --> 00:08:50,442
Getting limits into the game allows for qualitative changes, 

137
00:08:50,442 --> 00:08:52,380
which finite sums alone never could.

138
00:08:53,280 --> 00:08:56,660
There are multiple technical nuances that I'm sweeping under the rug here.

139
00:08:56,660 --> 00:08:59,958
Does the fact that we're forced into a certain value for the step function 

140
00:08:59,958 --> 00:09:03,300
at the point of discontinuity make any difference for the heat flow problem?

141
00:09:03,820 --> 00:09:06,051
For that matter, what does it really mean to solve 

142
00:09:06,051 --> 00:09:08,020
a PDE with a discontinuous initial condition?

143
00:09:09,280 --> 00:09:13,020
Can we be sure that the limit of solutions to the heat equation is also a solution?

144
00:09:13,580 --> 00:09:16,880
And can we be sure that all functions actually have a Fourier series like this?

145
00:09:17,180 --> 00:09:18,400
If not, when not?

146
00:09:19,080 --> 00:09:22,558
These are exactly the kind of questions which real analysis is built to answer, 

147
00:09:22,558 --> 00:09:25,384
but it falls a bit deeper in the weeds than I'd like to go here, 

148
00:09:25,384 --> 00:09:28,080
so I'll relegate that all to links in the video's description.

149
00:09:28,720 --> 00:09:33,145
The upshot is that when you take the heat equation solutions associated with 

150
00:09:33,145 --> 00:09:37,111
these cosine waves and add them all up, all infinitely many of them, 

151
00:09:37,111 --> 00:09:41,996
you do get an exact solution describing how the step function will evolve over time, 

152
00:09:41,996 --> 00:09:46,480
and if you had done this in 1822, you would have become immortal for doing so.

153
00:09:47,140 --> 00:09:51,240
The key challenge in all of this, of course, is to find these coefficients.

154
00:09:53,880 --> 00:09:57,124
So far, we've been thinking about functions with real number outputs, 

155
00:09:57,124 --> 00:10:00,831
but for the computations, I'd like to show you something more general than what 

156
00:10:00,831 --> 00:10:04,770
Fourier originally did, applying to functions whose output can be any complex number 

157
00:10:04,770 --> 00:10:08,524
in the 2D plane, which is where all these rotating vectors from the opening come 

158
00:10:08,524 --> 00:10:09,220
back into play.

159
00:10:10,880 --> 00:10:12,260
Why the added complexity?

160
00:10:12,260 --> 00:10:16,706
Well, aside from being more general, in my view, the computations become cleaner, 

161
00:10:16,706 --> 00:10:19,580
and it's easier to understand why they actually work.

162
00:10:20,300 --> 00:10:24,045
More importantly, it sets a good foundation for the ideas that will come up later on 

163
00:10:24,045 --> 00:10:27,880
in the series, like the Laplace transform, and the importance of exponential functions.

164
00:10:29,300 --> 00:10:33,736
We'll still think of functions whose input is some real number on a finite interval, 

165
00:10:33,736 --> 00:10:37,702
say from 0 up to 1 for simplicity, but whereas something like a temperature 

166
00:10:37,702 --> 00:10:40,416
function will have outputs on the real number line, 

167
00:10:40,416 --> 00:10:44,540
this broader view will let the outputs wander anywhere in the 2D complex plane.

168
00:10:45,120 --> 00:10:47,625
You might think of such a function as a drawing, 

169
00:10:47,625 --> 00:10:51,461
with a pencil tip tracing out different points in the complex plane as the 

170
00:10:51,461 --> 00:10:52,740
input ranges from 0 to 1.

171
00:10:53,340 --> 00:10:56,491
And instead of sine waves being the fundamental building block, 

172
00:10:56,491 --> 00:10:59,937
as you saw at the start, we'll focus on breaking these functions down 

173
00:10:59,937 --> 00:11:03,680
as a sum of little vectors, all rotating at some constant integer frequency.

174
00:11:03,680 --> 00:11:09,021
Functions with real number outputs are essentially really boring drawings, 

175
00:11:09,021 --> 00:11:11,300
a one-dimensional pencil sketch.

176
00:11:11,980 --> 00:11:14,688
You might not be used to thinking of them like this, 

177
00:11:14,688 --> 00:11:17,600
since usually we visualize such a function with a graph, 

178
00:11:17,600 --> 00:11:20,820
but right now the path being drawn is only in the output space.

179
00:11:25,420 --> 00:11:30,246
If you do one of these decompositions into rotating vectors for a boring one-dimensional 

180
00:11:30,246 --> 00:11:34,747
drawing, what will happen is that the vectors with frequency 1 and negative 1 will 

181
00:11:34,747 --> 00:11:38,760
have the same length, and they'll be horizontal reflections of each other.

182
00:11:39,500 --> 00:11:42,323
When you just look at the sum of these two as they rotate, 

183
00:11:42,323 --> 00:11:46,200
that sum stays fixed on the real number line, and it oscillates like a sine wave.

184
00:11:46,920 --> 00:11:51,008
If you haven't seen it before, this might be a really weird way to think about what a 

185
00:11:51,008 --> 00:11:55,001
sine wave is, since we're used to looking at its graph rather than the output alone 

186
00:11:55,001 --> 00:11:59,184
wandering on the real number line, but in the broader context of functions with complex 

187
00:11:59,184 --> 00:12:03,320
number outputs, this oscillation on the horizontal line is what a sine wave looks like.

188
00:12:04,920 --> 00:12:09,456
Similarly, the pair of rotating vectors with frequencies 2 and negative 2 will 

189
00:12:09,456 --> 00:12:14,050
add another sine wave component, and so on, with the sine waves we were looking 

190
00:12:14,050 --> 00:12:18,760
for earlier now corresponding to pairs of vectors rotating in opposite directions.

191
00:12:19,640 --> 00:12:22,189
So the context that Fourier originally studied, 

192
00:12:22,189 --> 00:12:25,004
breaking down real-valued functions into sine waves, 

193
00:12:25,004 --> 00:12:29,200
is a special case of the more general idea of 2D drawings and rotating vectors.

194
00:12:34,580 --> 00:12:37,835
And at this point, maybe you don't trust me that widening our view to 

195
00:12:37,835 --> 00:12:41,137
complex functions makes things easier to understand, but bear with me, 

196
00:12:41,137 --> 00:12:44,021
it's really worth the added effort to see the fuller picture, 

197
00:12:44,021 --> 00:12:47,463
and I think you'll be pleased with how clean the actual computation is in 

198
00:12:47,463 --> 00:12:48,440
this broader context.

199
00:12:49,100 --> 00:12:52,613
You may also wonder why, if we're going to bump things up into two dimensions, 

200
00:12:52,613 --> 00:12:55,416
we don't just talk about 2D vectors, what does the square root 

201
00:12:55,416 --> 00:12:57,240
of negative one have to do with anything?

202
00:12:58,100 --> 00:13:03,700
Well, the heart and soul of Fourier series is the complex exponential, e to the i times t.

203
00:13:04,480 --> 00:13:07,940
As the input t ticks forward with time, this value walks 

204
00:13:07,940 --> 00:13:11,340
around the unit circle at a rate of one unit per second.

205
00:13:12,280 --> 00:13:16,058
In the next video you'll see a quick intuition for why exponentiating imaginary 

206
00:13:16,058 --> 00:13:20,120
numbers walks around circles like this from the perspective of differential equations.

207
00:13:20,480 --> 00:13:23,628
And beyond that, as the series progresses, I hope to give you some 

208
00:13:23,628 --> 00:13:27,060
sense for why complex exponentials like this are actually very important.

209
00:13:27,740 --> 00:13:31,798
In theory, you could describe all of the Fourier series stuff purely in terms of vectors, 

210
00:13:31,798 --> 00:13:34,640
and never breathe a word of i, the square root of negative one.

211
00:13:35,300 --> 00:13:38,474
The formulas would become more convoluted, but beyond that, 

212
00:13:38,474 --> 00:13:42,389
leaving out the function e to the x would somehow no longer authentically 

213
00:13:42,389 --> 00:13:46,780
reflect why this idea turns out to be so useful for solving differential equations.

214
00:13:47,420 --> 00:13:50,526
For right now, if you want, you can think of e to the i t as a 

215
00:13:50,526 --> 00:13:53,189
notational shorthand for describing rotating vectors, 

216
00:13:53,189 --> 00:13:57,480
but just keep in the back of your mind that it is more significant than mere shorthand.

217
00:13:58,540 --> 00:14:02,580
You'll notice I'm being a little loose with language using the words vector and complex 

218
00:14:02,580 --> 00:14:06,437
numbers somewhat interchangeably, in large part because thinking of complex numbers 

219
00:14:06,437 --> 00:14:10,340
as little arrows makes the idea of adding a lot of them together easier to visualize.

220
00:14:11,340 --> 00:14:13,863
Alright, armed with the function e to the i times t, 

221
00:14:13,863 --> 00:14:17,720
let's write down a formula for each of these rotating vectors we're working with.

222
00:14:18,120 --> 00:14:20,396
For right now, think of each of them as starting 

223
00:14:20,396 --> 00:14:22,580
pointing one unit to the right at the number 1.

224
00:14:23,080 --> 00:14:27,971
The easiest vector to describe is the constant one, which stays at the number 1, 

225
00:14:27,971 --> 00:14:32,260
never moving, or if you prefer, it's rotating just at a frequency of 0.

226
00:14:33,100 --> 00:14:36,772
Then there will be the vector rotating one cycle every second, 

227
00:14:36,772 --> 00:14:39,220
which we write as e to the 2 pi i times t.

228
00:14:39,740 --> 00:14:42,961
That 2 pi is there because as t goes from 0 to 1, 

229
00:14:42,961 --> 00:14:46,440
it needs to cover a distance of 2 pi along the circle.

230
00:14:47,700 --> 00:14:51,486
Technically it's actually one cycle every 10 seconds so things aren't too dizzying, 

231
00:14:51,486 --> 00:14:53,560
I'm slowing everything down by a factor of 10.

232
00:14:55,320 --> 00:14:59,848
We also have a vector rotating at one cycle per second in the other direction, 

233
00:14:59,848 --> 00:15:01,740
e to the negative 2 pi i times t.

234
00:15:04,300 --> 00:15:10,276
Similarly, the one going two rotations per second is e to the 2 times 2 pi i times t, 

235
00:15:10,276 --> 00:15:16,253
where that 2 times 2 pi in the exponent describes how much distance is covered in one 

236
00:15:16,253 --> 00:15:16,740
second.

237
00:15:20,600 --> 00:15:25,084
And we go on like this over all integers, both positive and negative, 

238
00:15:25,084 --> 00:15:28,800
with a general formula of e to the n times 2 pi times i t.

239
00:15:29,340 --> 00:15:32,766
Notice, this makes it more consistent to write that constant vector 

240
00:15:32,766 --> 00:15:35,991
as e to the 0 times 2 pi times i t, which feels like an awfully 

241
00:15:35,991 --> 00:15:39,620
complicated way to write the number 1, but at least it fits the pattern.

242
00:15:40,500 --> 00:15:43,950
The control that we have, the set of knobs and dials we get to turn, 

243
00:15:43,950 --> 00:15:46,900
is the initial size and direction of each of these numbers.

244
00:15:47,480 --> 00:15:51,871
The way we control that is by multiplying each one by some complex constant, 

245
00:15:51,871 --> 00:15:53,240
which I'll call c sub n.

246
00:15:53,880 --> 00:15:58,616
For example, if we wanted the constant vector not to be at the number 1, 

247
00:15:58,616 --> 00:16:01,860
but to have a length of 0.5, c sub 0 would be 0.5.

248
00:16:02,540 --> 00:16:06,497
If we wanted the vector rotating at 1 cycle per second to start off at an 

249
00:16:06,497 --> 00:16:10,721
angle of 45 degrees, we'd multiply it by a complex number which has the effect 

250
00:16:10,721 --> 00:16:15,000
of rotating it by that much, which you can write as e to the pi fourths times i.

251
00:16:15,640 --> 00:16:18,779
And if its initial length needed to be 0.3, then the 

252
00:16:18,779 --> 00:16:21,800
coefficient c sub 1 would be 0.3 times that amount.

253
00:16:22,760 --> 00:16:27,409
Likewise, everyone in our infinite family of rotating vectors has some complex constant 

254
00:16:27,409 --> 00:16:31,900
being multiplied into it, which determines its initial angle and its total magnitude.

255
00:16:32,820 --> 00:16:36,468
Our goal is to express any arbitrary function f of t, 

256
00:16:36,468 --> 00:16:40,657
say this one that draws an eighth note as t goes from 0 to 1, 

257
00:16:40,657 --> 00:16:46,061
as a sum of terms like this, so we need some way of picking out these constants 

258
00:16:46,061 --> 00:16:49,440
one by one, given the data of the function itself.

259
00:16:51,840 --> 00:16:54,540
The easiest of these to find is the constant term.

260
00:16:55,080 --> 00:16:58,480
This term represents a sort of center of mass for the full drawing.

261
00:16:59,000 --> 00:17:02,771
If you were to sample a bunch of evenly spaced values for the 

262
00:17:02,771 --> 00:17:06,726
input t as it ranges from 0 to 1, the average of all the outputs 

263
00:17:06,726 --> 00:17:10,619
of the function for those samples would be the constant term c0.

264
00:17:11,359 --> 00:17:14,974
Or more accurately, as you consider finer and finer samples, 

265
00:17:14,974 --> 00:17:19,240
the average of the outputs for these samples approaches c0 in the limit.

266
00:17:20,000 --> 00:17:24,162
What I'm describing, finer and finer sums of a function for samples of 

267
00:17:24,162 --> 00:17:28,500
t from the input range, is an integral, an integral of f of t from 0 to 1.

268
00:17:30,820 --> 00:17:33,812
Normally, since I'm framing this all in terms of averages, 

269
00:17:33,812 --> 00:17:37,058
you would divide the integral by the length of the input range, 

270
00:17:37,058 --> 00:17:40,710
but that length is 1, so in this case, taking an integral and taking an 

271
00:17:40,710 --> 00:17:42,080
average are the same thing.

272
00:17:42,640 --> 00:17:46,580
There's a very nice way to think about why this integral would pull out c0.

273
00:17:47,380 --> 00:17:51,617
Remember, we want to think of this function as a sum of rotating vectors, 

274
00:17:51,617 --> 00:17:56,600
so consider this integral, this continuous average, as being applied to that whole sum.

275
00:17:57,460 --> 00:18:02,580
The average of a sum like this is the same as the sum over the averages of each part.

276
00:18:06,080 --> 00:18:09,240
You can read this move as a sort of subtle shift in perspective.

277
00:18:09,520 --> 00:18:13,471
Rather than looking at the sum of all the vectors at each point in time 

278
00:18:13,471 --> 00:18:17,368
and taking the average value they sweep out, look at the average of an 

279
00:18:17,368 --> 00:18:21,540
individual vector as t goes from 0 to 1, and then add up all these averages.

280
00:18:22,480 --> 00:18:27,280
But each of these vectors just makes a whole number of rotations around 0, 

281
00:18:27,280 --> 00:18:30,800
so its average value as t ranges from 0 to 1 will be 0.

282
00:18:31,340 --> 00:18:33,440
The only exception is the constant term.

283
00:18:33,940 --> 00:18:37,361
Since it stays static and doesn't rotate, its average value 

284
00:18:37,361 --> 00:18:40,840
is just whatever number it happened to start on, which is c0.

285
00:18:41,600 --> 00:18:44,412
So doing this average over the whole function is a 

286
00:18:44,412 --> 00:18:47,500
sort of clever way to kill all the terms that aren't c0.

287
00:18:48,040 --> 00:18:49,560
But here's the actual clever part.

288
00:18:49,860 --> 00:18:52,756
Let's say you wanted to compute a different term, like c2, 

289
00:18:52,756 --> 00:18:55,800
sitting in front of the vector rotating two cycles per second.

290
00:18:56,420 --> 00:19:01,037
The trick is to first multiply f of t by something that makes that vector hold still, 

291
00:19:01,037 --> 00:19:05,440
sort of the mathematical equivalent of giving a smartphone to an overactive child.

292
00:19:06,260 --> 00:19:10,629
Specifically, if you multiply the whole function by e to the negative 

293
00:19:10,629 --> 00:19:14,500
2 times 2 pi i times t, think about what happens to each term.

294
00:19:16,640 --> 00:19:21,166
Since multiplying exponentials results in adding what's in the exponent, 

295
00:19:21,166 --> 00:19:25,320
the frequency term in each of our exponents gets shifted down by 2.

296
00:19:29,660 --> 00:19:33,030
So now, as we do our averages of each term, that c-1 

297
00:19:33,030 --> 00:19:36,720
vector spins around negative 3 times with an average of 0.

298
00:19:37,560 --> 00:19:43,196
The c0 vector, previously constant, now rotates twice as t ranges from 0 to 1, 

299
00:19:43,196 --> 00:19:44,980
so its average is also 0.

300
00:19:46,520 --> 00:19:51,737
And likewise, all vectors other than the c2 term make some whole number of rotations, 

301
00:19:51,737 --> 00:19:53,740
meaning they average out to be 0.

302
00:19:55,280 --> 00:19:58,543
So taking the average of this modified function is 

303
00:19:58,543 --> 00:20:01,680
a clever way to kill all the terms other than c2.

304
00:20:02,360 --> 00:20:05,206
And of course, there's nothing special about the number 2 here, 

305
00:20:05,206 --> 00:20:08,676
you could replace it with any other n, and you have a general formula for cn, 

306
00:20:08,676 --> 00:20:10,100
which is what we're looking for.

307
00:20:10,660 --> 00:20:14,322
Out of context, this expression might look complicated, but remember, 

308
00:20:14,322 --> 00:20:17,722
you can read it as first modifying our function, our 2d drawing, 

309
00:20:17,722 --> 00:20:20,234
so as to make the nth little vector hold still, 

310
00:20:20,234 --> 00:20:23,896
and then performing an average which kills all the moving vectors and 

311
00:20:23,896 --> 00:20:25,780
leaves you only with the still part.

312
00:20:26,460 --> 00:20:27,080
Isn't that crazy?

313
00:20:27,500 --> 00:20:31,690
All of the complexity in these decompositions you're seeing of drawings into 

314
00:20:31,690 --> 00:20:35,880
sums of many rotating vectors is entirely captured in this little expression.

315
00:20:36,540 --> 00:20:40,820
So when I'm rendering these animations, that's exactly what I'm having the computer do.

316
00:20:41,280 --> 00:20:45,846
It treats the path like a complex function, and for a certain range of values n, 

317
00:20:45,846 --> 00:20:49,060
it computes this integral to find the coefficient c of n.

318
00:20:51,080 --> 00:20:54,606
For those of you curious about where the data for a path itself comes from, 

319
00:20:54,606 --> 00:20:57,808
I'm going the easy route and just having the program read in an SVG, 

320
00:20:57,808 --> 00:21:01,752
which is a file format that defines the image in terms of mathematical curves rather 

321
00:21:01,752 --> 00:21:02,820
than with pixel values.

322
00:21:03,280 --> 00:21:08,960
So the mapping f of t from a time parameter to points in space basically comes predefined.

323
00:21:10,540 --> 00:21:14,228
In what's shown right now, I'm using 101 rotating vectors, 

324
00:21:14,228 --> 00:21:17,480
computing the values of n from negative 50 up to 50.

325
00:21:18,120 --> 00:21:21,647
In practice, each of these integrals is computed numerically, 

326
00:21:21,647 --> 00:21:26,653
basically meaning it chops up the unit interval into many small pieces of size delta t, 

327
00:21:26,653 --> 00:21:31,545
and then adds up this value, f of t times e to the negative n 2 pi i t times delta t, 

328
00:21:31,545 --> 00:21:32,740
for each one of them.

329
00:21:33,280 --> 00:21:36,541
There are fancier methods for more efficient numerical integration, 

330
00:21:36,541 --> 00:21:37,980
but this gives the basic idea.

331
00:21:38,820 --> 00:21:42,809
And after you compute these 101 constants, each one determines an initial 

332
00:21:42,809 --> 00:21:47,391
angle and magnitude for the little vectors, and then you just set them all rotating, 

333
00:21:47,391 --> 00:21:51,273
adding them tip to tail as they go, and the path drawn out by the final 

334
00:21:51,273 --> 00:21:54,400
tip is some approximation of the original path you fed in.

335
00:21:55,100 --> 00:21:57,940
As the number of vectors used approaches infinity, 

336
00:21:57,940 --> 00:22:00,780
the approximation path gets more and more accurate.

337
00:22:14,140 --> 00:22:18,275
To bring this all back down to earth, consider the example we were looking at earlier, 

338
00:22:18,275 --> 00:22:22,077
of a step function, which remember was useful for modeling the heat dissipation 

339
00:22:22,077 --> 00:22:25,500
between two rods at different temperatures after they come into contact.

340
00:22:26,620 --> 00:22:29,508
Like any real number valued function, the step function 

341
00:22:29,508 --> 00:22:32,500
is like a boring drawing that's confined to one dimension.

342
00:22:33,240 --> 00:22:38,197
But this one is an especially dull drawing, since for inputs between 0 and 0.5, 

343
00:22:38,197 --> 00:22:42,783
the output just stays static at the number 1, and then it discontinuously 

344
00:22:42,783 --> 00:22:45,820
jumps to negative 1 for inputs between 0.5 and 1.

345
00:22:46,440 --> 00:22:49,870
So in the Fourier series approximation, the vector sum stays really 

346
00:22:49,870 --> 00:22:53,804
close to 1 for the first half of the cycle, then quickly jumps to negative 1, 

347
00:22:53,804 --> 00:22:56,680
and stays close to that for the second half of the cycle.

348
00:22:57,500 --> 00:23:01,116
And remember, each pair of vectors rotating in opposite directions 

349
00:23:01,116 --> 00:23:04,680
corresponds to one of the cosine waves we were looking at earlier.

350
00:23:06,080 --> 00:23:09,315
To find the coefficients, you would need to compute this integral, 

351
00:23:09,315 --> 00:23:13,372
and for the ambitious viewers among you itching to work out some integrals by hand, 

352
00:23:13,372 --> 00:23:16,994
this is one where you can actually do the calculus to get an exact answer, 

353
00:23:16,994 --> 00:23:19,940
rather than just having a computer do it numerically for you.

354
00:23:19,940 --> 00:23:22,287
I'll leave it as an exercise to work this out, 

355
00:23:22,287 --> 00:23:26,132
and to relate it back to the idea of cosine waves by pairing off the vectors 

356
00:23:26,132 --> 00:23:27,880
that rotate in opposite directions.

357
00:23:28,780 --> 00:23:32,736
And for the even more ambitious, I'll leave another exercise up on the screen for 

358
00:23:32,736 --> 00:23:36,693
how to relate this more general computation with what you might see in a textbook 

359
00:23:36,693 --> 00:23:40,940
describing Fourier series only in terms of real valued functions with sines and cosines.

360
00:23:41,840 --> 00:23:45,052
By the way, if you're looking for more Fourier series content, 

361
00:23:45,052 --> 00:23:48,416
I highly recommend the videos by Mathologer and The Coding Train, 

362
00:23:48,416 --> 00:23:51,680
and I'd also recommend this blog post, links in the description.

363
00:23:53,620 --> 00:23:57,097
So on the one hand, this concludes our discussion of the heat equation, 

364
00:23:57,097 --> 00:24:00,720
which was a little window into the study of partial differential equations.

365
00:24:01,240 --> 00:24:05,920
But on the other hand, this Fourier-to-Fourier series is a first glimpse at a deeper idea.

366
00:24:06,500 --> 00:24:09,863
Exponential functions, including their generalization into complex 

367
00:24:09,863 --> 00:24:13,980
numbers and even matrices, play a very important role for differential equations, 

368
00:24:13,980 --> 00:24:16,240
especially when it comes to linear equations.

369
00:24:16,920 --> 00:24:19,797
What you just saw, breaking down a function as a combination 

370
00:24:19,797 --> 00:24:23,145
of these exponentials and using that to solve a differential equation, 

371
00:24:23,145 --> 00:24:25,740
comes up again and again in different shapes and forms.

372
00:24:44,900 --> 00:24:45,900
Thank you.

