[
 {
  "input": "Here, we look at the math behind an animation like this one, what's known as a complex Fourier series. ",
  "translatedText": "在这里，我们看看像这样的动画背后的 数学原理，即所谓的复杂傅里叶级数。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 5.12,
  "end": 10.7
 },
 {
  "input": "Each little vector is rotating at some constant integer frequency, and when you add them together, tip to tail, the final tip draws out some shape over time. ",
  "translatedText": "每个小向量都以某个恒定的整数频率旋转，当你将它们从头到尾 加在一起时，随着时间的推移，最终的尖端会绘制出某种形状。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 11.24,
  "end": 20.1
 },
 {
  "input": "By tweaking the initial size and angle of each vector, we can make it draw pretty much anything we want, and here you'll see how. ",
  "translatedText": "通过调整每个向量的初始大小和角度，我们可以让它绘制 几乎任何我们想要的东西，在这里您将看到如何操作。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 21.22,
  "end": 28.62
 },
 {
  "input": "Before diving into it all, I want you to take a moment to just linger on how striking this is. ",
  "translatedText": "在深入探讨这一切之前，我希望您花 点时间思考一下这是多么引人注目。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 31.12,
  "end": 36.12
 },
 {
  "input": "This particular animation has 300 rotating arrows in total. ",
  "translatedText": "这个特定的动画总共有 300 个旋转箭头。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 37.2,
  "end": 40.9
 },
 {
  "input": "Go full screen for this if you can, the intricacy is worth it. ",
  "translatedText": "如果可以的话，请全屏显示，这种复杂性是值得的。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 41.42,
  "end": 44.96
 },
 {
  "input": "Think about this, the action of each individual arrow is perhaps the simplest thing you could imagine, rotation at a steady rate. ",
  "translatedText": "想想看，每个箭头的动作可能是您能想象 到的最简单的事情，以稳定的速度旋转。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 50.44,
  "end": 57.96
 },
 {
  "input": "And yet the collection of all added together is anything but simple, and the mind-boggling complexity is put into an even sharper focus the farther we zoom in, revealing the contributions of the littlest, quickest, and downright frenetic arrows. ",
  "translatedText": "然而，所有这些加在一起的集合绝非简单，我们 放大得越远，令人难以置信的复杂性就越清晰， 揭示了最小、最快和彻底疯狂的箭头的贡献。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 58.6,
  "end": 71.48
 },
 {
  "input": "When you consider the chaotic frenzy you're looking at, and the clockwork rigidity underlying all the motions, it's bizarre how the swarm acts with a kind of coordination to trace out some very specific shape. ",
  "translatedText": "当你考虑到你所看到的混乱的疯狂，以及所有运动背 后的发条僵化时，你会发现蜂群如何以一种协调的 方式描绘出一些非常具体的形状，这是很奇怪的。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 72.3,
  "end": 83.4
 },
 {
  "input": "And unlike much of the emergent complexity you find elsewhere in nature, this is something we have the math to describe and control completely. ",
  "translatedText": "与自然界其他地方发现的许多新兴复杂性不同， 这是我们可以用数学来完全描述和控制的东西。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 83.84,
  "end": 91.08
 },
 {
  "input": "Just by tuning the starting conditions, nothing more, we can make this swarm conspire in all the right ways to draw anything you want, provided you have enough little arrows. ",
  "translatedText": "只需调整起始条件，仅此而已，我们就可以让这群人以所有正确 的方式密谋绘制任何你想要的东西，只要你有足够的小箭头。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 91.66,
  "end": 101.56
 },
 {
  "input": "What's even crazier is that the ultimate formula for all of this is incredibly short. ",
  "translatedText": "更疯狂的是，所有这一切的最终公式都非常短。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 102.18,
  "end": 106.52
 },
 {
  "input": "Often Fourier series are described in terms of something that looks a little different, functions of real numbers being broken down as a sum of sine waves. ",
  "translatedText": "通常，傅立叶级数是用看起来有点不同的东西 来描述的，即实数函数被分解为正弦波之和。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 112.96,
  "end": 120.56
 },
 {
  "input": "That turns out to be a special case of this more general rotating vector phenomenon we'll build up to, but it's where Fourier himself started, and there's good reason for us to start the story there as well. ",
  "translatedText": "事实证明，这是我们将要构建的更普遍的旋转矢 量现象的一个特例，但这是傅立叶本人的起点 ，我们也有充分的理由从那里开始这个故事。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 121.26,
  "end": 130.78
 },
 {
  "input": "Technically, this is the third video in a sequence about the heat equation, what Fourier was working on when he developed his big idea. ",
  "translatedText": "从技术上讲，这是关于热方程的系列视频中的第三个视 频，傅里叶在提出他的伟大想法时正在研究这个方程。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 131.42,
  "end": 137.56
 },
 {
  "input": "I would like to teach you about Fourier series in a way that doesn't depend on you coming from those chapters, but if you have at least a high level idea for the problem from physics which originally motivated this piece of math, it gives some indication for just how unexpectedly far-reaching Fourier series are. ",
  "translatedText": "我想以一种不依赖于你是否读完这些章节的方式教你有 关傅里叶级数的知识，但如果你至少对最初激发这部 分数学的物理学问题有一个高层次的想法，它会给出一 些这表明傅里叶级数的影响有多么出人意料地深远。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 138.2,
  "end": 152.34
 },
 {
  "input": "All you need to know is that we had a certain equation which tells us how the temperature distribution on a rod would evolve over time, and incidentally it also describes many other phenomena unrelated to heat. ",
  "translatedText": "您需要知道的是，我们有一个特定的方程，它告 诉我们棒上的温度分布如何随时间演变，顺便说 一句，它还描述了许多与热无关的其他现象。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 152.82,
  "end": 164.82
 },
 {
  "input": "And while it's hard to directly use this equation to figure out what will happen to an arbitrary heat distribution, there's a simple solution if the initial function just happens to look like a cosine wave, with a frequency tuned so that it's flat at each end point. ",
  "translatedText": "虽然很难直接使用这个方程来计算出任意热量 分布会发生什么，但如果初始函数恰好看起 来像余弦波，并且频率经过调整以使其在每 个端点处平坦，则有一个简单的解决方案。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 164.82,
  "end": 178.12
 },
 {
  "input": "Specifically, as you graph what happens over time, these waves simply get scaled down exponentially, with higher frequency waves having a faster exponential decay. ",
  "translatedText": "具体来说，当您绘制随时间推移发生的情况时，这些波只 是按指数比例缩小，频率较高的波具有更快的指数衰减。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 178.56,
  "end": 187.96
 },
 {
  "input": "The heat equation happens to be what's known in the business as a linear equation, meaning if you know two solutions and add them up, that sum is a new solution. ",
  "translatedText": "热方程恰好是商业中所谓的线性方程，这意味着如果 您知道两个解并将它们相加，则该和就是一个新解。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 190.36,
  "end": 200.2
 },
 {
  "input": "You can even scale them each by some constant, which gives you some dials to turn to construct a custom function solving the equation. ",
  "translatedText": "您甚至可以将它们分别缩放某个常数，这为您提 供了一些转盘来构建求解方程的自定义函数。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 200.88,
  "end": 207.4
 },
 {
  "input": "This is a fairly straightforward property that you can verify for yourself, but it's incredibly important. ",
  "translatedText": "这是一个相当简单的属性，您可 以自己验证，但它非常重要。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 209.24,
  "end": 214.08
 },
 {
  "input": "It means that we can take our infinite family of solutions, these exponentially decaying cosine waves, scale a few of them by some custom constants of our choosing, and combine them to get a solution for a new, tailor-made initial condition, which is some combination of cosine waves. ",
  "translatedText": "这意味着我们可以采用无限系列的解决方案，这些指 数衰减的余弦波，通过我们选择的一些自定义常数 来缩放其中一些，并将它们组合起来以获得新的、定 制的初始条件的解决方案，即余弦波的某种组合。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 214.08,
  "end": 229.5
 },
 {
  "input": "One important thing I'd like you to notice is that when you combine these waves, because the higher frequency ones decay faster, the sum you construct will tend to smooth out over time as all the high frequency terms quickly go to zero, leaving only the low frequency terms dominating. ",
  "translatedText": "我希望您注意的一件重要的事情是，当您组合这些 波时，因为频率较高的波衰减得更快，您构建的 总和将随着时间的推移而趋于平滑，因为所有高频 项都会快速变为零，只留下低频项占主导地位。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 230.2,
  "end": 245.38
 },
 {
  "input": "So in a funny way, all of the complexity in the evolution of this heat distribution which the heat equation implies is captured by this difference in the decay rates for the different pure frequency components. ",
  "translatedText": "因此，以一种有趣的方式，热方程所暗示的 这种热分布演变的所有复杂性都是通过不 同纯频率分量的衰减率的差异来捕获的。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 246.1,
  "end": 256.02
 },
 {
  "input": "It's at this point that Fourier gains immortality. ",
  "translatedText": "正是在这一点上，傅里叶获得了不朽。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 258.04,
  "end": 260.48
 },
 {
  "input": "I think most normal people at this stage would say, well, I can solve the heat equation when the initial distribution just happens to look like a wave, or a sum of waves, but what a shame it is that most real world distributions don't at all look like that. ",
  "translatedText": "我想这个阶段的大多数普通人都会说，好吧，当初始分布恰好看 起来像波或波的总和时，我可以求解热方程，但遗憾的是大多 数现实世界的分布都做不到这一点。看起来根本不是那样的。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 261.28,
  "end": 274.24
 },
 {
  "input": "I mean, for example, let's say you brought together two rods which were each at some uniform temperature, and you wanted to know what happens immediately after they come into contact. ",
  "translatedText": "我的意思是，例如，假设您将两根 温度均匀的棒放在一起，并且您想 知道它们接触后立即发生什么。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 274.8,
  "end": 283.3
 },
 {
  "input": "To make the numbers simple, let's say the temperature of the left rod is 1 degree, and the right rod is negative 1 degree, and that the total length, L, of the combined two rods is 1. ",
  "translatedText": "为了使数字简单，假设左棒的温度为 1 度，右棒的温度为负 1 度， 并且两根棒的总长度 L 为 1。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 285.06,
  "end": 294.9
 },
 {
  "input": "What this means is that our initial temperature distribution is a step function, which is so obviously different from a sine wave, or the sum of sine waves, don't you think? ",
  "translatedText": "这意味着我们的初始温度分布是阶跃函数，它与 正弦波或正弦波之和明显不同，您不觉得吗？",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 294.9,
  "end": 304.56
 },
 {
  "input": "I mean, it's almost entirely flat, not wavy, and for god's sake it's even discontinuous! ",
  "translatedText": "我的意思是，它几乎完全是平坦的，而不是波浪状的，而且看在上帝的份上，它甚至是不连续的！",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 305.1,
  "end": 309.82
 },
 {
  "input": "And yet Fourier thought to ask a question which seems absurd. ",
  "translatedText": "然而傅立叶却想问一个看似荒谬的问题。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 310.6,
  "end": 313.7
 },
 {
  "input": "How do you express this as a sum of sine waves? ",
  "translatedText": "如何将其表示为正弦波之和？",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 314.3,
  "end": 316.66
 },
 {
  "input": "Even more boldly, how do you express any initial distribution as a sum of sine waves? ",
  "translatedText": "更大胆的是，如何将任何初始分布表示为正弦波之和？",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 317.12,
  "end": 321.34
 },
 {
  "input": "And it's more constrained than just that. ",
  "translatedText": "而且它受到的限制还不止于此。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 321.8,
  "end": 323.76
 },
 {
  "input": "You have to restrict yourself to adding waves which satisfy a certain boundary condition, and as we saw last video, that means working with these cosine functions whose frequencies are all some whole number multiple of a given base frequency. ",
  "translatedText": "您必须限制自己添加满足特定边界条件的波，正如 我们在上一个视频中看到的那样，这意味着使用 这些余弦函数，其频率都是给定基频的整数倍。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 324.12,
  "end": 336.06
 },
 {
  "input": "And by the way, if you were working with some different boundary condition, say that the endpoints have to stay fixed, you'd have a different set of waves at your disposal to piece together, in this case replacing that cosine expression with a sine. ",
  "translatedText": "顺便说一句，如果您正在处理一些不同的边界条件，比如 说端点必须保持固定，您将有一组不同的波可供您使用来 拼凑在一起，在这种情况下，用正弦替换余弦表达式。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 336.92,
  "end": 348.54
 },
 {
  "input": "It's strange how often progress in math looks more like asking a new question rather than simply answering old ones. ",
  "translatedText": "奇怪的是，数学的进步常常看起来更像是提 出一个新问题，而不是简单地回答旧问题。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 349.56,
  "end": 355.56
 },
 {
  "input": "Fourier really does have a kind of immortality now, with his name essentially synonymous with the idea of breaking down functions and patterns as combinations of simple oscillations. ",
  "translatedText": "傅里叶现在确实具有某种不朽的魅力，他的名字基本上 与将函数和模式分解为简单振荡的组合的想法同义。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 356.24,
  "end": 365.0
 },
 {
  "input": "It's really hard to overstate just how important and far-reaching that idea turned out to be, well beyond anything Fourier himself could have imagined. ",
  "translatedText": "很难夸大这个想法的重要性和影响力 ，远远超出了傅里叶本人的想象。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 365.7,
  "end": 372.94
 },
 {
  "input": "And yet the origin of all this is a piece of physics which, at first glance, has nothing to do with frequencies and oscillations. ",
  "translatedText": "然而，这一切的根源是物理学， 乍一看，它与频率和振荡无关。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 373.6,
  "end": 380.6
 },
 {
  "input": "If nothing else, this should give you a hint about the general applicability of Fourier series. ",
  "translatedText": "如果不出意外，这应该可以让您 了解傅立叶级数的一般适用性。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 381.28,
  "end": 385.3
 },
 {
  "input": "Now hang on, I hear some of you saying, none of these sums of sine waves you're showing are actually the step function, they're all just approximations. ",
  "translatedText": "现在等一下，我听到你们中的一些人说，您显示的这些正 弦波之和实际上都不是阶跃函数，它们都只是近似值。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 386.04,
  "end": 393.08
 },
 {
  "input": "And it's true, any finite sum of sine waves will never be perfectly flat, except for a constant function, nor will it be discontinuous. ",
  "translatedText": "确实，除了常数函数之外，任何有限的正弦波之 和永远不会是完全平坦的，也不会是不连续的。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 393.54,
  "end": 401.5
 },
 {
  "input": "But Fourier thought more broadly, considering infinite sums. ",
  "translatedText": "但傅立叶的思考范围更广，考虑了无限和。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 402.02,
  "end": 405.46
 },
 {
  "input": "In the case of our step function, it turns out to be equal to this infinite sum, where the coefficients are 1, negative one third, plus one fifth, minus one seventh, and so on for all the odd frequencies, and all of it is rescaled by 4 divided by pi. ",
  "translatedText": "在我们的阶跃函数的情况下，它等于这个无限和，其中系数为 1、负三分之一、正五分之一、负七分之一，依此类推，对于所 有奇数频率，以及所有奇数频率重新调整为 4 除以 pi。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 406.24,
  "end": 422.98
 },
 {
  "input": "I'll explain where those numbers come from in a moment. ",
  "translatedText": "我稍后会解释这些数字的来源。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 423.8,
  "end": 425.96
 },
 {
  "input": "Before that, it's worth being clear about what we mean by a phrase like infinite sum, which runs the risk of being a little vague. ",
  "translatedText": "在此之前，有必要明确一下“无限总和”这样 的短语的含义，该短语可能有点含糊不清。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 426.4,
  "end": 432.66
 },
 {
  "input": "Consider the simpler context of numbers, where you could say, for example, that this infinite sum of fractions equals pi divided by 4. ",
  "translatedText": "考虑更简单的数字环境，例如，您可以说这 个无限分数之和等于 pi 除以 4。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 433.54,
  "end": 441.08
 },
 {
  "input": "As you keep adding the terms one by one, at all times what you have is rational, it never actually equals the irrational pi divided by 4. ",
  "translatedText": "当你不断地把这些项一项一项相加时，你得到的总是有理 数，它实际上永远不会等于无理数 pi 除以 4。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 441.68,
  "end": 449.76
 },
 {
  "input": "But this sequence of partial sums approaches pi over 4, which is to say, the numbers you see while never equaling pi over 4 get arbitrarily close to that value, and they stay arbitrarily close to that value. ",
  "translatedText": "但是这个部分和序列接近 pi 大于 4，也就是说 ，您看到的数字在不等于 pi 大于 4 的情况 下会任意接近该值，并且它们会保持任意接近该值。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 450.38,
  "end": 462.88
 },
 {
  "input": "That's all a mouthful to say, so instead we abbreviate and just say the infinite sum equals pi over 4. ",
  "translatedText": "说起来很拗口，所以我们缩写一下，直接 说无穷大之和等于 pi 除以 4。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 463.72,
  "end": 469.16
 },
 {
  "input": "With functions, you're doing the same thing, but with many different values in parallel. ",
  "translatedText": "使用函数，您可以做同样的事情，但是并行地使用许多不同的值。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 470.62,
  "end": 474.7
 },
 {
  "input": "Consider a specific input, and the value of all of these scaled cosine functions for that input. ",
  "translatedText": "考虑一个特定的输入，以及该输入 的所有这些缩放余弦函数的值。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 475.92,
  "end": 481.52
 },
 {
  "input": "If that input is less than 0.5, as you add more and more terms, the sum will approach 1. ",
  "translatedText": "如果该输入小于 0。5、当你添加越来越 多的项时，总和将接近1。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 482.12,
  "end": 487.74
 },
 {
  "input": "If that input is greater than 0.5, as you add more and more terms, it would approach negative 1. ",
  "translatedText": "如果该输入大于 0。5，当你添加越来越 多的项时，它会接近负1。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 490.0,
  "end": 495.46
 },
 {
  "input": "At the input 0.5 itself, all of the cosines are 0, so the limit of the partial sums is also 0. ",
  "translatedText": "在输入 0 处。5本身，所有余弦都是0 ，所以部分和的极限也是0。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 497.26,
  "end": 503.84
 },
 {
  "input": "That means that, somewhat awkwardly, for this infinite sum to be strictly true, we have to prescribe the value of this set function at the point of discontinuity to be 0, sort of halfway along the jump. ",
  "translatedText": "这意味着，有点尴尬的是，为了让这个无限 和严格为真，我们必须规定这个集合函数在 不连续点的值为 0，有点像跳跃的中途。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 504.6,
  "end": 515.24
 },
 {
  "input": "Analogous to an infinite sum of rational numbers being irrational, the infinite sum of wavy continuous functions can equal a discontinuous flat function. ",
  "translatedText": "类似于无理数的无限和，波状连续函数 的无限和可以等于不连续平坦函数。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 516.08,
  "end": 526.74
 },
 {
  "input": "Getting limits into the game allows for qualitative changes, which finite sums alone never could. ",
  "translatedText": "在游戏中加入限制可以带来质的变化，而仅靠有限的总和是不可能实现的。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 527.16,
  "end": 532.38
 },
 {
  "input": "There are multiple technical nuances that I'm sweeping under the rug here. ",
  "translatedText": "我在这里隐藏了多种技术上的细微差别。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 533.28,
  "end": 536.66
 },
 {
  "input": "Does the fact that we're forced into a certain value for the step function at the point of discontinuity make any difference for the heat flow problem? ",
  "translatedText": "我们在不连续点处被迫将阶跃函数设置为某 个值这一事实对热流问题有什么影响吗？",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 536.66,
  "end": 543.3
 },
 {
  "input": "For that matter, what does it really mean to solve a PDE with a discontinuous initial condition? ",
  "translatedText": "就此而言，求解具有不连续初始条 件的偏微分方程到底意味着什么？",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 543.82,
  "end": 548.02
 },
 {
  "input": "Can we be sure that the limit of solutions to the heat equation is also a solution? ",
  "translatedText": "我们能否确定热方程的极限解也是一个解？",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 549.28,
  "end": 553.02
 },
 {
  "input": "And can we be sure that all functions actually have a Fourier series like this? ",
  "translatedText": "我们能否确定所有函数实际上都有这样的傅里叶级数？",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 553.58,
  "end": 556.88
 },
 {
  "input": "If not, when not? ",
  "translatedText": "如果没有，什么时候没有？",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 557.18,
  "end": 558.4
 },
 {
  "input": "These are exactly the kind of questions which real analysis is built to answer, but it falls a bit deeper in the weeds than I'd like to go here, so I'll relegate that all to links in the video's description. ",
  "translatedText": "这些正是真正的分析要回答的问题，但它 比我想在这里讨论的更深一些，所以我将 把所有这些都归咎于视频描述中的链接。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 559.08,
  "end": 568.08
 },
 {
  "input": "The upshot is that when you take the heat equation solutions associated with these cosine waves and add them all up, all infinitely many of them, you do get an exact solution describing how the step function will evolve over time, and if you had done this in 1822, you would have become immortal for doing so. ",
  "translatedText": "结果是，当您获取与这些余弦波相关的热方程解并将它 们全部加起来（全部无限多个）时，您确实会得到一 个精确的解，描述阶跃函数如何随时间演变，如果您 这样做了在 1822 年，你会因此而永垂不朽。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 568.72,
  "end": 586.48
 },
 {
  "input": "The key challenge in all of this, of course, is to find these coefficients. ",
  "translatedText": "当然，所有这一切的关键挑战是找到这些系数。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 587.14,
  "end": 591.24
 },
 {
  "input": "So far we've been thinking about functions with real number outputs, but for the computations, I'd like to show you something more general than what Fourier originally did, applying to functions whose output can be any complex number in the 2d plane, which is where all these rotating vectors from the opening come back into play. ",
  "translatedText": "到目前为止，我们一直在考虑具有实数输出的函数，但对于 计算，我想向您展示一些比傅里叶最初所做的更一般的东西 ，适用于输出可以是 2d 平面中的任何复数的函数，这 就是来自开口的所有这些旋转矢量重新发挥作用的地方。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 593.88,
  "end": 609.22
 },
 {
  "input": "Why the added complexity? ",
  "translatedText": "为什么增加了复杂性？",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 610.88,
  "end": 612.26
 },
 {
  "input": "Well aside from being more general, in my view the computations become cleaner, and it's easier to understand why they actually work. ",
  "translatedText": "除了更通用之外，在我看来，计算变得更清 晰，并且更容易理解它们实际工作的原因。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 612.26,
  "end": 619.58
 },
 {
  "input": "More importantly, it sets a good foundation for the ideas that will come up later on in the series, like the Laplace transform, and the importance of exponential functions. ",
  "translatedText": "更重要的是，它为本系列后面出现的想法奠定了良好 的基础，例如拉普拉斯变换以及指数函数的重要性。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 620.3,
  "end": 627.88
 },
 {
  "input": "We'll still think of functions whose input is some real number on a finite interval, say from 0 up to 1 for simplicity. ",
  "translatedText": "我们仍然会考虑输入是有限区间内的某个实数 的函数，为简单起见，例如从 0 到 1。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 629.3,
  "end": 636.0
 },
 {
  "input": "But whereas something like a temperature function will have outputs on the real number line, this broader view will let the outputs wander anywhere in the 2d complex plane. ",
  "translatedText": "但是，虽然温度函数之类的东西会在实数线上有输出，但这 种更广泛的视野将使输出在二维复平面上的任何地方漂移。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 636.56,
  "end": 644.54
 },
 {
  "input": "You might think of such a function as a drawing, with a pencil tip tracing out different points in the complex plane as the input ranges from 0 to 1. ",
  "translatedText": "您可能会将此类函数视为绘图，当输入范围从 0 到 1 时，用铅笔尖在复平面上画出不同的点。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 645.12,
  "end": 652.74
 },
 {
  "input": "And instead of sine waves being the fundamental building block, as you saw at the start, we'll focus on breaking these functions down as a sum of little vectors, all rotating at some constant integer frequency. ",
  "translatedText": "正如您在开始时看到的那样，我们将专注于将这些函 数分解为小向量的总和，而不是将正弦波作为基本构 建块，所有这些向量都以某个恒定的整数频率旋转。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 653.34,
  "end": 663.68
 },
 {
  "input": "Functions with real number outputs are essentially really boring drawings, a one-dimensional pencil sketch. ",
  "translatedText": "具有实数输出的函数本质上是非常 无聊的绘图，即一维铅笔草图。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 663.68,
  "end": 671.3
 },
 {
  "input": "You might not be used to thinking of them like this, since usually we visualize such a function with a graph, but right now the path being drawn is only in the output space. ",
  "translatedText": "您可能不习惯这样思考它们，因为通常我们用图形来可 视化这样的函数，但现在绘制的路径仅在输出空间中。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 671.98,
  "end": 680.82
 },
 {
  "input": "If you do one of these decompositions into rotating vectors for a boring drawing, what will happen is that the vectors with frequency 1 and negative 1 will have the same length, and they'll be horizontal reflections of each other. ",
  "translatedText": "如果您将这些分解之一分解为旋转矢量以绘制无聊的 绘图，则会发生频率为 1 和负 1 的矢量将 具有相同的长度，并且它们将是彼此的水平反射。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 685.42,
  "end": 698.76
 },
 {
  "input": "When you just look at the sum of these two as they rotate, that sum stays fixed on the real number line, and it oscillates like a sine wave. ",
  "translatedText": "当您仅查看这两者旋转时的总和时，该总和保 持固定在实数线上，并且像正弦波一样振荡。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 699.5,
  "end": 706.2
 },
 {
  "input": "If you haven't seen it before, this might be a really weird way to think about what a sine wave is, since we're used to looking at its graph rather than the output alone wandering on the real number line, but in the broader context of functions with complex number outputs, this oscillation on the horizontal line is what a sine wave looks like. ",
  "translatedText": "如果您以前没有见过，这可能是一种非常奇怪的思考正弦 波是什么的方式，因为我们习惯于查看它的图形而不是单 独在实数线上徘徊的输出，但是在在具有复数输出的更广 泛的函数背景下，水平线上的振荡就是正弦波的样子。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 706.92,
  "end": 723.32
 },
 {
  "input": "Similarly, the pair of rotating vectors with frequencies 2 and negative 2 will add another sine wave component, and so on, with the sine waves we were looking for earlier now corresponding to pairs of vectors rotating in opposite directions. ",
  "translatedText": "类似地，频率为 2 和负 2 的旋转矢量对将 添加另一个正弦波分量，依此类推，我们之前寻找 的正弦波现在对应于沿相反方向旋转的矢量对。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 724.92,
  "end": 738.76
 },
 {
  "input": "So the context that Fourier originally studied, breaking down real valued functions into sine waves, is a special case of the more general idea of 2D drawings and rotating vectors. ",
  "translatedText": "因此，傅里叶最初研究的背景是将实值函数分解为正 弦波，是二维绘图和旋转矢量的更一般概念的特例。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 739.64,
  "end": 749.2
 },
 {
  "input": "And at this point, maybe you don't trust me that widening our view to complex functions makes things easier to understand, but bear with me, it's really worth the added effort to see the fuller picture, and I think you'll be pleased with how clean the actual computation is in this broader context. ",
  "translatedText": "在这一点上，也许您不相信我认为将我们的视野扩大到 复杂的函数会使事情更容易理解，但请耐心等待，为了 看到更全面的情况而付出额外的努力确实值得，我想您 会很高兴在这个更广泛的背景下实际计算的干净程度。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 754.58,
  "end": 768.44
 },
 {
  "input": "You may also wonder why, if we're going to bump things up into two dimensions, we don't just talk about 2D vectors, what does the square root of negative one have to do with anything? ",
  "translatedText": "您可能还想知道为什么，如果我们要将 事物提升为二维，我们不仅仅谈论二维 向量，负一的平方根与什么有关系？",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 769.1,
  "end": 777.24
 },
 {
  "input": "Well, the heart and soul of Fourier series is the complex exponential e to the i times t. ",
  "translatedText": "嗯，傅里叶级数的核心和灵魂是复 指数 e 的 i 乘以 t。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 778.1,
  "end": 783.7
 },
 {
  "input": "As the input t ticks forward with time, this value walks around the unit circle at a rate of one unit per second. ",
  "translatedText": "当输入 t 随着时间向前移动时，该值 以每秒一个单位的速率绕单位圆移动。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 784.48,
  "end": 791.34
 },
 {
  "input": "In the next video you'll see a quick intuition for why exponentiating imaginary numbers walks around circles like this from the perspective of differential equations, and beyond that, as the series progresses, I hope to give you some sense for why complex exponentials like this are actually very important. ",
  "translatedText": "在下一个视频中，您将快速直观地了解为什么从微 分方程的角度对虚数取幂会像这样绕圈子走动，除 此之外，随着系列的进展，我希望能让您对为什么 复杂的指数像这样有一些了解实际上非常重要。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 792.28,
  "end": 807.06
 },
 {
  "input": "In theory, you could describe all of the Fourier series stuff purely in terms of vectors, and never breathe a word of i, the square root of negative one. ",
  "translatedText": "从理论上讲，你可以纯粹用向量来描述所有傅里叶级数 ，而无需呼吸任何“i”这个词，即负一的平方根。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 807.74,
  "end": 814.64
 },
 {
  "input": "The formulas would become more convoluted, but beyond that, leaving out the function e to the x would somehow no longer authentically reflect why this idea turns out to be so useful for solving differential equations. ",
  "translatedText": "公式会变得更加复杂，但除此之外，将函数 e 省略给 x 会以某种方式不再真实地反映 为什么这个想法对于求解微分方程如此有用。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 815.3,
  "end": 826.78
 },
 {
  "input": "For right now, if you want, you can think of e to the i t as a notational shorthand for describing rotating vectors, but just keep in the back of your mind that it is more significant than mere shorthand. ",
  "translatedText": "现在，如果您愿意，您可以将 e 和 it 视为描述旋转向量的符号简写 ，但请记住，它比单纯的简写更重要。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 827.42,
  "end": 837.48
 },
 {
  "input": "You'll notice I'm being a little loose with language using the words vector and complex numbers somewhat interchangeably, in large part because thinking of complex numbers as little arrows makes the idea of adding a lot of them together easier to visualize. ",
  "translatedText": "你会注意到我在语言上有点宽松地使用向量和复数这两个词， 这在某种程度上可以互换，这在很大程度上是因为将复数视 为小箭头使得将大量复数相加在一起的想法更容易可视化。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 838.54,
  "end": 850.34
 },
 {
  "input": "Alright, armed with the function e to the i times t, let's write down a formula for each of these rotating vectors we're working with. ",
  "translatedText": "好吧，有了函数 e 到 i 乘以 t，让我们 为我们正在使用的每个旋转向量写下一个公式。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 851.34,
  "end": 857.72
 },
 {
  "input": "For right now, think of each of them as starting pointing one unit to the right at the number 1. ",
  "translatedText": "现在，将它们中的每一个视为从数字 1 向右指向一个单位的起点。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 858.12,
  "end": 862.58
 },
 {
  "input": "The easiest vector to describe is the constant one, which stays at the number 1, never moving, or if you prefer, it's quote-unquote rotating just at a frequency of 0. ",
  "translatedText": "最容易描述的向量是常量向量，它保持数字 1，从不移动，或 者如果您愿意，它只是以 0 的频率进行引用-反引用旋转。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 863.08,
  "end": 872.26
 },
 {
  "input": "Then there will be the vector rotating one cycle every second, which we write as e to the 2 pi i times t. ",
  "translatedText": "那么就会有每秒旋转一个周期的向量，我们将 其写为 2 pi i 乘以 t 的 e。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 873.1,
  "end": 879.22
 },
 {
  "input": "That 2 pi is there because as t goes from 0 to 1, it needs to cover a distance of 2 pi along the circle. ",
  "translatedText": "存在 2 pi 是因为当 t 从 0 到 1 时，它需要沿着圆移动 2 pi 的距离。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 879.74,
  "end": 886.44
 },
 {
  "input": "Technically in what's being shown, it's actually one cycle every 10 seconds so things aren't too dizzying, I'm slowing everything down by a factor of 10. ",
  "translatedText": "从技术上讲，在所展示的内容中，它实际上是每 10 秒一个周期 ，因此事情不会太令人眼花缭乱，我将一切速度放慢了 10 倍。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 887.7,
  "end": 893.56
 },
 {
  "input": "We also have a vector rotating at one cycle per second in the other direction, e to the negative 2 pi i times t. ",
  "translatedText": "我们还有一个以每秒一个周期向另一个方向旋转的向 量，即 e 旋转到负 2 pi i 乘以 t。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 895.32,
  "end": 901.74
 },
 {
  "input": "Similarly, the one going two rotations per second is e to the 2 times 2 pi i times t, where that 2 times 2 pi in the exponent describes how much distance is covered in one second. ",
  "translatedText": "类似地，每秒旋转两圈是 e 到 2 乘以 2 pi i 乘以 t，其中指数中的 2 乘以 2 pi 描述了一秒内走过的距离。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 904.3,
  "end": 916.74
 },
 {
  "input": "And we go on like this over all integers, both positive and negative, with a general formula of e to the n times 2 pi times i t. ",
  "translatedText": "我们对所有整数（无论是正数还是负数）都进行这样的操作，并 使用 e 到 n 乘以 2 pi 乘以 i t 的通式。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 920.6,
  "end": 928.8
 },
 {
  "input": "Notice this makes it more consistent to write that constant vector as e to the 0 times 2 pi times i t, which feels like an awfully complicated way to write the number 1, but at least it fits the pattern. ",
  "translatedText": "请注意，这使得将该常量向量写为 e 等于 0 乘 以 2 pi 乘以它变得更加一致，这感觉像是一种 非常复杂的写数字 1 的方法，但至少它符合模式。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 929.34,
  "end": 939.62
 },
 {
  "input": "The control we have, the set of knobs and dials we get to turn, is the initial size and direction of each of these numbers. ",
  "translatedText": "我们拥有的控件，即我们可以转动的一组旋 钮和转盘，是每个数字的初始大小和方向。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 940.5,
  "end": 946.9
 },
 {
  "input": "The way we control that is by multiplying each one by some complex constant, which I'll call c sub n. ",
  "translatedText": "我们控制这一点的方法是将每个值乘以某个 复数常数，我将其称为 c sub n。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 947.48,
  "end": 953.24
 },
 {
  "input": "For example, if we wanted the constant vector not to be at the number 1, but to have a length of 0.5, c sub 0 would be 0.5. ",
  "translatedText": "例如，如果我们希望常数向量不是数字 1，而是长度为 0。5、c sub 0 将为 0。5. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 953.88,
  "end": 961.86
 },
 {
  "input": "If we wanted the vector rotating at 1 cycle per second to start off at an angle of 45 degrees, we'd multiply it by a complex number which has the effect of rotating it by that much, which you can write as e to the pi fourths times i. ",
  "translatedText": "如果我们希望以每秒 1 个周期旋转的向量以 45 度 的角度开始，我们会将其乘以一个复数，该复数具有将其旋 转那么多的效果，您可以将其写为 pi 的 e第四次岛 如果它的初始长度需要为0。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 962.54,
  "end": 975.0
 },
 {
  "input": "And if its initial length needed to be 0.3, then the coefficient c sub 1 would be 0.3 times that amount. ",
  "translatedText": "3，则系数 c sub 1 将为 0。该 金额的3倍。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 975.64,
  "end": 981.8
 },
 {
  "input": "Likewise, everyone in our infinite family of rotating vectors has some complex constant being multiplied into it, which determines its initial angle and its total magnitude. ",
  "translatedText": "同样，我们无限的旋转向量家族中的每个向量都乘以 一些复杂的常数，这决定了它的初始角度和总大小。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 982.76,
  "end": 991.9
 },
 {
  "input": "Our goal is to express any arbitrary function f of t, say this one that draws an eighth note as t goes from 0 to 1, as a sum of terms like this, so we need some way of picking out these constants one by one, given the data of the function itself. ",
  "translatedText": "我们的目标是将 t 的任意函数 f 表示为这样的项之和，例 如当 t 从 0 到 1 时绘制八分音符的函数 f，因此 我们需要某种方法来逐个挑选这些常数，给定函数本身的数据。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 992.82,
  "end": 1009.44
 },
 {
  "input": "The easiest of these to find is the constant term. ",
  "translatedText": "其中最容易找到的是常数项。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1011.84,
  "end": 1014.54
 },
 {
  "input": "This term represents a sort of center of mass for the full drawing. ",
  "translatedText": "该术语代表整个绘图的一种质心。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1015.08,
  "end": 1018.48
 },
 {
  "input": "If you were to sample a bunch of evenly spaced values for the input t as it ranges from 0 to 1, the average of all the outputs of the function for those samples would be the constant term c0. ",
  "translatedText": "如果您要对输入 t 的一系列均匀间隔的值（ 范围从 0 到 1）进行采样，则这些样本 的函数所有输出的平均值将是常数项 c0。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1019.0,
  "end": 1030.62
 },
 {
  "input": "Or more accurately, as you consider finer and finer samples, the average of the outputs for these samples approaches c0 in the limit. ",
  "translatedText": "或者更准确地说，当您考虑越来越精细的样本时 ，这些样本的输出平均值在极限内接近 c0。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1031.36,
  "end": 1039.24
 },
 {
  "input": "What I'm describing, finer and finer sums of a function for samples of t from the input range, is an integral, an integral of f of t from 0 to 1. ",
  "translatedText": "我所描述的是，输入范围中 t 样本的函数的越来越精细的 和是一个积分，即 t 从 0 到 1 的 f 的积分。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1040.0,
  "end": 1048.5
 },
 {
  "input": "Normally, since I'm framing this all in terms of averages, you would divide the integral by the length of the input range, but that length is 1, so in this case, taking an integral and taking an average are the same thing. ",
  "translatedText": "通常，由于我用平均值来构建这一切，因此您可以 将积分除以输入范围的长度，但该长度为 1，因 此在这种情况下，取积分和取平均值是同一件事。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1050.82,
  "end": 1062.08
 },
 {
  "input": "There's a very nice way to think about why this integral would pull out c0. ",
  "translatedText": "有一个很好的方法来思考为什么这个积分会得出 c0。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1062.64,
  "end": 1066.58
 },
 {
  "input": "Remember, we want to think of this function as a sum of rotating vectors, so consider this integral, this continuous average, as being applied to that whole sum. ",
  "translatedText": "请记住，我们希望将此函数视为旋转向量的总和，因此 请考虑将此积分（此连续平均值）应用于整个总和。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1067.38,
  "end": 1076.6
 },
 {
  "input": "The average of a sum like this is the same as the sum over the averages of each part. ",
  "translatedText": "这样的总和的平均值与每个部分的平均值之和相同。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1077.46,
  "end": 1082.58
 },
 {
  "input": "You can read this move as a sort of subtle shift in perspective. ",
  "translatedText": "你可以将这一举动解读为一种微妙的视角转变。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1086.08,
  "end": 1089.24
 },
 {
  "input": "Rather than looking at the sum of all the vectors at each point in time and taking the average value they sweep out, look at the average of an individual vector as t goes from 0 to 1, and then add up all these averages. ",
  "translatedText": "与其查看每个时间点所有向量的总和并取它们扫出 的平均值，不如查看 t 从 0 到 1 时单 个向量的平均值，然后将所有这些平均值相加。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1089.52,
  "end": 1101.54
 },
 {
  "input": "But each of these vectors just makes a whole number of rotations around 0, so its average value as t ranges from 0 to 1 will be 0. ",
  "translatedText": "但这些向量中的每一个都只是围绕 0 旋转整数次，因此 当 t 从 0 到 1 变化时，其平均值将为 0。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1102.48,
  "end": 1110.8
 },
 {
  "input": "The only exception is the constant term. ",
  "translatedText": "唯一的例外是常数项。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1111.34,
  "end": 1113.44
 },
 {
  "input": "Since it stays static and doesn't rotate, its average value is just whatever number it happened to start on, which is c0. ",
  "translatedText": "由于它保持静态并且不旋转，因此它的平均 值就是它开始时的任何数字，即 c0。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1113.94,
  "end": 1120.84
 },
 {
  "input": "So doing this average over the whole function is a sort of clever way to kill all the terms that aren't c0. ",
  "translatedText": "因此，对整个函数进行平均是一种巧妙的 方法，可以消除所有不是 c0 的项。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1121.6,
  "end": 1127.5
 },
 {
  "input": "But here's the clever part. ",
  "translatedText": "但这是聪明的部分。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1128.04,
  "end": 1129.56
 },
 {
  "input": "Let's say you wanted to compute a different term, like c2, sitting in front of the vector rotating two cycles per second. ",
  "translatedText": "假设您想要计算一个不同的项，例如 c 2，位于每秒旋转两个周期的向量前面。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1129.86,
  "end": 1135.8
 },
 {
  "input": "The trick is to first multiply f of t by something that makes that vector hold still, sort of the mathematical equivalent of giving a smartphone to an overactive child. ",
  "translatedText": "诀窍是首先将 t 的 f 乘以使该向量保持静止的某个值 ，这在数学上相当于给一个过度活跃的孩子一部智能手机。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1136.42,
  "end": 1145.44
 },
 {
  "input": "Specifically, if you multiply the whole function by e to the negative 2 times 2 pi i times t, think about what happens to each term. ",
  "translatedText": "具体来说，如果将整个函数乘以 e 得到负 2 乘以 2 pi i 乘以 t，请考虑每一项会发生什么。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1146.26,
  "end": 1154.5
 },
 {
  "input": "Since multiplying exponentials results in adding what's in the exponent, the frequency term in each of our exponents gets shifted down by 2. ",
  "translatedText": "由于指数相乘会导致指数中的内容相加， 因此每个指数中的频率项都会下移 2。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1156.64,
  "end": 1165.32
 },
 {
  "input": "So now, as we do our averages of each term, that c-1 vector spins around negative 3 times with an average of 0. ",
  "translatedText": "所以现在，当我们计算每一项的平均值时，c- 1 向量围绕负旋转 3 次，平均值为 0。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1169.66,
  "end": 1176.72
 },
 {
  "input": "The c0 vector, previously constant, now rotates twice as t ranges from 0 to 1, so its average is also 0. ",
  "translatedText": "c0 向量以前是恒定的，现在随着 t 从 0 到 1 的变化而旋转两次，因此它的平均值也是 0。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1177.56,
  "end": 1184.98
 },
 {
  "input": "Likewise, all vectors other than the c2 term make some whole number of rotations, meaning they average out to be 0. ",
  "translatedText": "同样，除了 c2 项之外的所有向量都会进行 一些整数旋转，这意味着它们的平均值为 0。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1186.52,
  "end": 1193.74
 },
 {
  "input": "So taking the average of this modified function is a clever way to kill all the terms other than c2. ",
  "translatedText": "因此，取这个修改后的函数的平均值是消 除除 c2 之外的所有项的聪明方法。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1195.28,
  "end": 1201.68
 },
 {
  "input": "And of course, there's nothing special about the number 2 here, you could replace it with any other n, and you have a general formula for cn, which is what we're looking for. ",
  "translatedText": "当然，这里的数字 2 没有什么特别的，你可以用任何其他 n 替换它，你就有了 cn 的通用公式，这就是我们正在寻找的。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1202.36,
  "end": 1210.1
 },
 {
  "input": "Out of context, this expression might look complicated, but remember, you can read it as first modifying our function, our 2d drawing, so as to make the nth little vector hold still, and then performing an average which kills all the moving vectors and leaves you only with the still part. ",
  "translatedText": "脱离上下文，这个表达式可能看起来很复杂，但请记住 ，您可以将其理解为首先修改我们的函数，我们的二 维绘图，以便使第 n 个小向量保持静止，然后执行 平均，杀死所有移动向量，并且只剩下静止的部分。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1210.66,
  "end": 1225.78
 },
 {
  "input": "Isn't that crazy? ",
  "translatedText": "这不是很疯狂吗？",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1226.46,
  "end": 1227.08
 },
 {
  "input": "All of the complexity in these decompositions you're seeing of drawings into sums of many rotating vectors is entirely captured in this little expression. ",
  "translatedText": "您所看到的将绘图分解为许多旋转向量之和的 所有复杂性都完全在这个小表达式中捕获。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1227.5,
  "end": 1235.88
 },
 {
  "input": "So when I'm rendering these animations, that's exactly what I'm having the computer do. ",
  "translatedText": "因此，当我渲染这些动画时，这 正是我让计算机所做的事情。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1236.54,
  "end": 1240.82
 },
 {
  "input": "It computes the path like a complex function, and for a certain range of values n, it computes this integral to find the coefficient c of n. ",
  "translatedText": "它像复杂函数一样计算路径，并且对于特定范围的 值 n，它计算该积分以找到 n 的系数 c。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1241.28,
  "end": 1249.06
 },
 {
  "input": "For those of you curious about where the data for a path itself comes from, I'm going the easy route and just having the program read in an SVG, which is a file format that defines the image in terms of mathematical curves rather than with pixel values. ",
  "translatedText": "对于那些对路径本身的数据来自哪里感到好奇的人，我将采用简 单的方法，只需以 SVG 形式读取程序即可，这是一种根据 数学曲线而不是用数学曲线来定义图像的文件格式。像素值。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1251.08,
  "end": 1262.82
 },
 {
  "input": "So the mapping f of t from a time parameter to points in space basically comes predefined. ",
  "translatedText": "因此，t 的 f 从时间参数到空间点的映射基本上是预先定义的。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1263.28,
  "end": 1268.96
 },
 {
  "input": "In what's shown right now, I'm using 101 rotating vectors, computing the values of n from negative 50 up to 50. ",
  "translatedText": "在现在显示的内容中，我使用 101 个旋转向 量，计算从负 50 到 50 的 n 值。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1270.54,
  "end": 1277.48
 },
 {
  "input": "In practice, each of these integrals is computed numerically, basically meaning it chops up the unit interval into many small pieces of size delta t, and then adds up this value, f of t times e to the negative n 2 pi i t times delta t, for each one of them. ",
  "translatedText": "实际上，这些积分中的每一个都是以数值方式计算的，基本上意味着它将单位间隔分 成许多大小为 delta t 的小块，然后将这个值（t 的 f 乘以 e ）相加到负 n 2 pi it 乘以 delta t ，对于其中每一个。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1278.12,
  "end": 1292.74
 },
 {
  "input": "There are fancier methods for more efficient numerical integration, but this gives the basic idea. ",
  "translatedText": "有更奇特的方法可以实现更有效的 数值积分，但这给出了基本思想。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1293.28,
  "end": 1297.98
 },
 {
  "input": "And after you compute these 101 constants, each one determines an initial angle and magnitude for the little vectors, and then you just set them all rotating, adding them tip to tail as they go, and the path drawn out by the final tip is some approximation of the original path you fed in. ",
  "translatedText": "计算完这 101 个常数后，每个常数都会 确定小向量的初始角度和大小，然后将它们全 部设置为旋转，将它们从头尾相加，最终尖端 绘制的路径是您输入的原始路径的近似值。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1298.82,
  "end": 1314.4
 },
 {
  "input": "As the number of vectors used approaches infinity, the approximation path gets more and more accurate. ",
  "translatedText": "随着使用的向量数量接近无穷大 ，近似路径变得越来越准确。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1315.1,
  "end": 1320.78
 },
 {
  "input": "To bring this all back down to Earth, consider the example we were looking at earlier, of a step function, which remember was useful for modeling the heat dissipation between two rods at different temperatures after they come into contact. ",
  "translatedText": "为了让这一切回到现实，考虑一下我们之 前看到的阶跃函数的例子，它对于模拟两 个棒接触后在不同温度下的散热很有用。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1334.14,
  "end": 1345.5
 },
 {
  "input": "Like any real number valued function, the step function is like a boring drawing confined to one dimension. ",
  "translatedText": "与任何实数值函数一样，阶跃函 数就像仅限于一维的无聊绘图。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1346.62,
  "end": 1352.5
 },
 {
  "input": "But this one is an especially dull drawing, since for inputs between 0 and 0.5, the output just stays static at the number 1, and then it discontinuously jumps to negative 1 for inputs between 0.5 and 1. ",
  "translatedText": "但这是一张特别乏味的图，因为输入介于 0 和 0 之间。在图 5 中，输出只是在数字 1 处保持静态，然后对于 0 之 间的输入，它会不连续地跳转到负 1。5和1。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1353.24,
  "end": 1365.82
 },
 {
  "input": "So in the Fourier series approximation, the vector sum stays really close to 1 for the first half of the cycle, then quickly jumps to negative 1 and stays close to that for the second half of the cycle. ",
  "translatedText": "因此，在傅立叶级数近似中，向量和在周期的 前半部分保持非常接近 1，然后快速跳至负 1，并在周期的后半部分保持接近负 1。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1366.44,
  "end": 1376.68
 },
 {
  "input": "And remember, each pair of vectors rotating in opposite directions corresponds to one of the cosine waves we were looking at earlier. ",
  "translatedText": "请记住，每对沿相反方向旋转的矢量 对应于我们之前看到的余弦波之一。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1377.5,
  "end": 1384.68
 },
 {
  "input": "To find the coefficients, you would need to compute this integral, and for the ambitious viewers among you itching to work out some integrals by hand, this is one where you can actually do the calculus to get an exact answer, rather than just having a computer do it numerically for you. ",
  "translatedText": "为了找到系数，您需要计算这个积分，对于你们中那 些渴望手动计算出一些积分的雄心勃勃的观众来说， 这是一个您可以实际进行微积分以获得准确答案的地 方，而不仅仅是得到一个计算机会为你计算数字。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1386.08,
  "end": 1399.94
 },
 {
  "input": "I'll leave it as an exercise to work this out, and to relate it back to the idea of cosine waves by pairing off the vectors that rotate in opposite directions. ",
  "translatedText": "我将把它作为一个练习来解决这个问题，并通过配对沿 相反方向旋转的矢量将其与余弦波的概念联系起来。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1399.94,
  "end": 1407.88
 },
 {
  "input": "And for the even more ambitious, I'll leave another exercise up on the screen for how to relate this more general computation with what you might see in a textbook describing Fourier series only in terms of real-valued functions with sines and cosines. ",
  "translatedText": "对于更雄心勃勃的人，我将在屏幕上留下另一个练习，说 明如何将这种更一般的计算与您在教科书中看到的仅用正 弦和余弦的实值函数描述傅立叶级数的内容联系起来。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1408.78,
  "end": 1420.94
 },
 {
  "input": "By the way, if you're looking for more Fourier series content, I highly recommend the videos by Mathologer and The Coding Train, and I'd also recommend this blog post, links of course in the description. ",
  "translatedText": "顺便说一句，如果您正在寻找更多傅里叶级数内容，我强烈推荐 Mathologer 和 The Coding Tra in 的视频，我还会推荐这篇博文，当然还有描述中的链接。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1421.84,
  "end": 1431.68
 },
 {
  "input": "So on the one hand, this concludes our discussion of the heat equation, which was a little window into the study of partial differential equations. ",
  "translatedText": "一方面，这结束了我们对热方程的讨论 ，这是研究偏微分方程的一个小窗口。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1433.62,
  "end": 1440.72
 },
 {
  "input": "But on the other hand, this Fourier into Fourier series is a first glimpse at a deeper idea. ",
  "translatedText": "但另一方面，从傅里叶到傅里叶级数是对更深层次想法的第一次了解。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1441.24,
  "end": 1445.92
 },
 {
  "input": "Exponential functions, including their generalization into complex numbers and even matrices, play a very important role for differential equations, especially when it comes to linear equations. ",
  "translatedText": "指数函数，包括将其推广为复数甚至矩阵，对于微分 方程起着非常重要的作用，尤其是在线性方程中。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1446.5,
  "end": 1456.24
 },
 {
  "input": "What you just saw, breaking down a function as a combination of these exponentials and using that to solve a differential equation, comes up again and again in different shapes and forms. ",
  "translatedText": "您刚才看到的，将函数分解为这些指数 的组合，并用它来求解微分方程，会以 不同的形状和形式一次又一次地出现。",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1456.92,
  "end": 1485.9
 }
]