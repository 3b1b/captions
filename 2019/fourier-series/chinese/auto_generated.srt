1
00:00:05,119 --> 00:00:07,989
在这里，我们看看像这样的动画背后的 

2
00:00:07,989 --> 00:00:10,700
数学原理，即所谓的复杂傅里叶级数。

3
00:00:11,240 --> 00:00:15,747
每个小向量都以某个恒定的整数频率旋转，当你将它们从头到尾 

4
00:00:15,747 --> 00:00:20,100
加在一起时，随着时间的推移，最终的尖端会绘制出某种形状。

5
00:00:21,220 --> 00:00:25,067
通过调整每个向量的初始大小和角度，我们可以让它绘制 

6
00:00:25,067 --> 00:00:28,620
几乎任何我们想要的东西，在这里您将看到如何操作。

7
00:00:31,120 --> 00:00:33,695
在深入探讨这一切之前，我希望您花 

8
00:00:33,695 --> 00:00:36,120
点时间思考一下这是多么引人注目。

9
00:00:37,199 --> 00:00:40,900
这个特定的动画总共有 300 个旋转箭头。

10
00:00:41,420 --> 00:00:44,960
如果可以的话，请全屏显示，这种复杂性是值得的。

11
00:00:50,440 --> 00:00:54,301
想想看，每个箭头的动作可能是您能想象 

12
00:00:54,301 --> 00:00:57,960
到的最简单的事情，以稳定的速度旋转。

13
00:00:58,600 --> 00:01:03,027
然而，所有这些加在一起的集合绝非简单，我们 

14
00:01:03,027 --> 00:01:07,455
放大得越远，令人难以置信的复杂性就越清晰， 

15
00:01:07,455 --> 00:01:11,480
揭示了最小、最快和彻底疯狂的箭头的贡献。

16
00:01:12,300 --> 00:01:16,160
当你考虑到你所看到的混乱的疯狂，以及所有运动背 

17
00:01:16,160 --> 00:01:19,860
后的发条僵化时，你会发现蜂群如何以一种协调的 

18
00:01:19,860 --> 00:01:23,400
方式描绘出一些非常具体的形状，这是很奇怪的。

19
00:01:23,839 --> 00:01:27,544
与自然界其他地方发现的许多新兴复杂性不同， 

20
00:01:27,544 --> 00:01:31,080
这是我们可以用数学来完全描述和控制的东西。

21
00:01:31,660 --> 00:01:36,786
只需调整起始条件，仅此而已，我们就可以让这群人以所有正确 

22
00:01:36,786 --> 00:01:41,560
的方式密谋绘制任何你想要的东西，只要你有足够的小箭头。

23
00:01:42,180 --> 00:01:53,360
更疯狂的是，所有这一切的最终公式都非常短。

24
00:01:53,360 --> 00:01:57,047
通常，傅立叶级数是用看起来有点不同的东西 

25
00:01:57,047 --> 00:02:00,560
来描述的，即实数函数被分解为正弦波之和。

26
00:02:01,260 --> 00:02:04,584
事实证明，这是我们将要构建的更普遍的旋转矢 

27
00:02:04,584 --> 00:02:07,757
量现象的一个特例，但这是傅立叶本人的起点 

28
00:02:07,757 --> 00:02:10,780
，我们也有充分的理由从那里开始这个故事。

29
00:02:11,420 --> 00:02:14,552
从技术上讲，这是关于热方程的系列视频中的第三个视 

30
00:02:14,552 --> 00:02:17,560
频，傅里叶在提出他的伟大想法时正在研究这个方程。

31
00:02:18,200 --> 00:02:21,844
我想以一种不依赖于你是否读完这些章节的方式教你有 

32
00:02:21,844 --> 00:02:25,342
关傅里叶级数的知识，但如果你至少对最初激发这部 

33
00:02:25,342 --> 00:02:28,987
分数学的物理学问题有一个高层次的想法，它会给出一 

34
00:02:28,987 --> 00:02:32,340
些这表明傅里叶级数的影响有多么出人意料地深远。

35
00:02:32,820 --> 00:02:36,945
您需要知道的是，我们有一个特定的方程，它告 

36
00:02:36,945 --> 00:02:41,070
诉我们棒上的温度分布如何随时间演变，顺便说 

37
00:02:41,070 --> 00:02:44,820
一句，它还描述了许多与热无关的其他现象。

38
00:02:44,820 --> 00:02:48,311
虽然很难直接使用这个方程来计算出任意热量 

39
00:02:48,311 --> 00:02:51,636
分布会发生什么，但如果初始函数恰好看起 

40
00:02:51,636 --> 00:02:54,961
来像余弦波，并且频率经过调整以使其在每 

41
00:02:54,961 --> 00:02:58,120
个端点处平坦，则有一个简单的解决方案。

42
00:02:58,560 --> 00:03:03,352
具体来说，当您绘制随时间推移发生的情况时，这些波只 

43
00:03:03,352 --> 00:03:07,960
是按指数比例缩小，频率较高的波具有更快的指数衰减。

44
00:03:10,359 --> 00:03:15,384
热方程恰好是商业中所谓的线性方程，这意味着如果 

45
00:03:15,384 --> 00:03:20,200
您知道两个解并将它们相加，则该和就是一个新解。

46
00:03:20,880 --> 00:03:24,295
您甚至可以将它们分别缩放某个常数，这为您提 

47
00:03:24,295 --> 00:03:27,400
供了一些转盘来构建求解方程的自定义函数。

48
00:03:29,240 --> 00:03:34,080
这是一个相当简单的属性，您可 以自己验证，但它非常重要。

49
00:03:34,080 --> 00:03:38,059
这意味着我们可以采用无限系列的解决方案，这些指 

50
00:03:38,059 --> 00:03:41,872
数衰减的余弦波，通过我们选择的一些自定义常数 

51
00:03:41,872 --> 00:03:45,852
来缩放其中一些，并将它们组合起来以获得新的、定 

52
00:03:45,852 --> 00:03:49,500
制的初始条件的解决方案，即余弦波的某种组合。

53
00:03:50,200 --> 00:03:54,122
我希望您注意的一件重要的事情是，当您组合这些 

54
00:03:54,122 --> 00:03:57,875
波时，因为频率较高的波衰减得更快，您构建的 

55
00:03:57,875 --> 00:04:01,798
总和将随着时间的推移而趋于平滑，因为所有高频 

56
00:04:01,798 --> 00:04:05,380
项都会快速变为零，只留下低频项占主导地位。

57
00:04:06,100 --> 00:04:09,580
因此，以一种有趣的方式，热方程所暗示的 

58
00:04:09,580 --> 00:04:12,887
这种热分布演变的所有复杂性都是通过不 

59
00:04:12,887 --> 00:04:16,019
同纯频率分量的衰减率的差异来捕获的。

60
00:04:18,040 --> 00:04:20,480
正是在这一点上，傅里叶获得了不朽。

61
00:04:21,279 --> 00:04:25,754
我想这个阶段的大多数普通人都会说，好吧，当初始分布恰好看 

62
00:04:25,754 --> 00:04:30,074
起来像波或波的总和时，我可以求解热方程，但遗憾的是大多 

63
00:04:30,074 --> 00:04:34,240
数现实世界的分布都做不到这一点。看起来根本不是那样的。

64
00:04:34,800 --> 00:04:37,756
我的意思是，例如，假设您将两根 

65
00:04:37,756 --> 00:04:43,300
温度均匀的棒放在一起，并且您想 知道它们接触后立即发生什么。

66
00:04:45,060 --> 00:04:50,512
为了使数字简单，假设左棒的温度为 1 度，右棒的温度为负 

67
00:04:50,512 --> 00:04:54,460
1 度， 并且两根棒的总长度 L 为 1。

68
00:04:54,460 --> 00:04:59,750
这意味着我们的初始温度分布是阶跃函数，它与 

69
00:04:59,750 --> 00:05:04,560
正弦波或正弦波之和明显不同，您不觉得吗？

70
00:05:05,100 --> 00:05:07,405
我的意思是，它几乎完全是平坦的，而不是波浪

71
00:05:07,405 --> 00:05:09,820
状的，而且看在上帝的份上，它甚至是不连续的！

72
00:05:10,600 --> 00:05:13,700
然而傅立叶却想问一个看似荒谬的问题。

73
00:05:14,300 --> 00:05:16,660
如何将其表示为正弦波之和？

74
00:05:17,120 --> 00:05:21,340
更大胆的是，如何将任何初始分布表示为正弦波之和？

75
00:05:21,800 --> 00:05:23,760
而且它受到的限制还不止于此。

76
00:05:24,120 --> 00:05:28,280
您必须限制自己添加满足特定边界条件的波，正如 

77
00:05:28,280 --> 00:05:32,260
我们在上一个视频中看到的那样，这意味着使用 

78
00:05:32,260 --> 00:05:36,060
这些余弦函数，其频率都是给定基频的整数倍。

79
00:05:36,920 --> 00:05:40,895
顺便说一句，如果您正在处理一些不同的边界条件，比如 

80
00:05:40,895 --> 00:05:44,870
说端点必须保持固定，您将有一组不同的波可供您使用来 

81
00:05:44,870 --> 00:05:48,540
拼凑在一起，在这种情况下，用正弦替换余弦表达式。

82
00:05:49,560 --> 00:05:52,636
奇怪的是，数学的进步常常看起来更像是提 

83
00:05:52,636 --> 00:05:55,560
出一个新问题，而不是简单地回答旧问题。

84
00:05:56,240 --> 00:06:00,802
傅里叶现在确实具有某种不朽的魅力，他的名字基本上 

85
00:06:00,802 --> 00:06:05,000
与将函数和模式分解为简单振荡的组合的想法同义。

86
00:06:05,700 --> 00:06:09,546
很难夸大这个想法的重要性和影响力 

87
00:06:09,546 --> 00:06:12,940
，远远超出了傅里叶本人的想象。

88
00:06:13,599 --> 00:06:20,600
然而，这一切的根源是物理学， 乍一看，它与频率和振荡无关。

89
00:06:21,280 --> 00:06:25,300
如果不出意外，这应该可以让您 了解傅立叶级数的一般适用性。

90
00:06:26,040 --> 00:06:29,700
现在等一下，我听到你们中的一些人说，您显示的这些正 

91
00:06:29,700 --> 00:06:33,080
弦波之和实际上都不是阶跃函数，它们都只是近似值。

92
00:06:33,540 --> 00:06:37,612
确实，除了常数函数之外，任何有限的正弦波之 

93
00:06:37,612 --> 00:06:41,500
和永远不会是完全平坦的，也不会是不连续的。

94
00:06:42,020 --> 00:06:45,460
但傅立叶的思考范围更广，考虑了无限和。

95
00:06:46,240 --> 00:06:51,754
在我们的阶跃函数的情况下，它等于这个无限和，其中系数为 

96
00:06:51,754 --> 00:06:57,465
1、负三分之一、正五分之一、负七分之一，依此类推，对于所 

97
00:06:57,465 --> 00:07:02,980
有奇数频率，以及所有奇数频率重新调整为 4 除以 pi。

98
00:07:03,800 --> 00:07:05,960
我稍后会解释这些数字的来源。

99
00:07:06,400 --> 00:07:09,686
在此之前，有必要明确一下“无限总和”这样 

100
00:07:09,686 --> 00:07:12,660
的短语的含义，该短语可能有点含糊不清。

101
00:07:13,540 --> 00:07:17,508
考虑更简单的数字环境，例如，您可以说这 

102
00:07:17,508 --> 00:07:21,080
个无限分数之和等于 pi 除以 4。

103
00:07:21,680 --> 00:07:25,881
当你不断地把这些项一项一项相加时，你得到的总是有理 

104
00:07:25,881 --> 00:07:29,760
数，它实际上永远不会等于无理数 pi 除以 4。

105
00:07:30,380 --> 00:07:34,720
但是这个部分和序列接近 pi 大于 4，也就是说 

106
00:07:34,720 --> 00:07:38,886
，您看到的数字在不等于 pi 大于 4 的情况 

107
00:07:38,886 --> 00:07:42,880
下会任意接近该值，并且它们会保持任意接近该值。

108
00:07:43,720 --> 00:07:46,591
说起来很拗口，所以我们缩写一下，直接 

109
00:07:46,591 --> 00:07:49,160
说无穷大之和等于 pi 除以 4。

110
00:07:50,620 --> 00:07:54,700
使用函数，您可以做同样的事情，但是并行地使用许多不同的值。

111
00:07:55,920 --> 00:08:01,520
考虑一个特定的输入，以及该输入 的所有这些缩放余弦函数的值。

112
00:08:02,120 --> 00:08:05,632
如果该输入小于 0。5、当你添加越来越 

113
00:08:05,632 --> 00:08:07,740
多的项时，总和将接近1。

114
00:08:10,000 --> 00:08:13,412
如果该输入大于 0。5，当你添加越来越 

115
00:08:13,412 --> 00:08:15,460
多的项时，它会接近负1。

116
00:08:17,260 --> 00:08:21,247
在输入 0 处。5本身，所有余弦都是0 

117
00:08:21,247 --> 00:08:23,840
，所以部分和的极限也是0。

118
00:08:24,600 --> 00:08:28,206
这意味着，有点尴尬的是，为了让这个无限 

119
00:08:28,206 --> 00:08:33,256
和严格为真，我们必须规定这个集合函数在 不连续点的值为 

120
00:08:33,256 --> 00:08:35,240
0，有点像跳跃的中途。

121
00:08:36,080 --> 00:08:41,723
类似于无理数的无限和，波状连续函数 

122
00:08:41,723 --> 00:08:46,740
的无限和可以等于不连续平坦函数。

123
00:08:47,160 --> 00:08:49,690
在游戏中加入限制可以带来质的变化

124
00:08:49,690 --> 00:08:52,380
，而仅靠有限的总和是不可能实现的。

125
00:08:53,280 --> 00:08:56,660
我在这里隐藏了多种技术上的细微差别。

126
00:08:56,660 --> 00:09:00,154
我们在不连续点处被迫将阶跃函数设置为某 

127
00:09:00,154 --> 00:09:03,300
个值这一事实对热流问题有什么影响吗？

128
00:09:03,820 --> 00:09:05,987
就此而言，求解具有不连续初始条 

129
00:09:05,987 --> 00:09:08,020
件的偏微分方程到底意味着什么？

130
00:09:09,280 --> 00:09:13,020
我们能否确定热方程的极限解也是一个解？

131
00:09:13,580 --> 00:09:16,880
我们能否确定所有函数实际上都有这样的傅里叶级数？

132
00:09:17,180 --> 00:09:18,400
如果没有，什么时候没有？

133
00:09:19,080 --> 00:09:22,133
这些正是真正的分析要回答的问题，但它 

134
00:09:22,133 --> 00:09:25,187
比我想在这里讨论的更深一些，所以我将 

135
00:09:25,187 --> 00:09:28,080
把所有这些都归咎于视频描述中的链接。

136
00:09:28,720 --> 00:09:33,345
结果是，当您获取与这些余弦波相关的热方程解并将它 

137
00:09:33,345 --> 00:09:37,785
们全部加起来（全部无限多个）时，您确实会得到一 

138
00:09:37,785 --> 00:09:42,225
个精确的解，描述阶跃函数如何随时间演变，如果您 

139
00:09:42,225 --> 00:09:46,480
这样做了在 1822 年，你会因此而永垂不朽。

140
00:09:47,140 --> 00:09:51,240
当然，所有这一切的关键挑战是找到这些系数。

141
00:09:53,880 --> 00:09:57,787
到目前为止，我们一直在考虑具有实数输出的函数，但对于 

142
00:09:57,787 --> 00:10:01,694
计算，我想向您展示一些比傅里叶最初所做的更一般的东西 

143
00:10:01,694 --> 00:10:05,602
，适用于输出可以是 2d 平面中的任何复数的函数，这 

144
00:10:05,602 --> 00:10:09,220
就是来自开口的所有这些旋转矢量重新发挥作用的地方。

145
00:10:10,880 --> 00:10:12,260
为什么增加了复杂性？

146
00:10:12,260 --> 00:10:16,013
除了更通用之外，在我看来，计算变得更清 

147
00:10:16,013 --> 00:10:19,580
晰，并且更容易理解它们实际工作的原因。

148
00:10:20,300 --> 00:10:24,170
更重要的是，它为本系列后面出现的想法奠定了良好 

149
00:10:24,170 --> 00:10:27,880
的基础，例如拉普拉斯变换以及指数函数的重要性。

150
00:10:29,300 --> 00:10:32,731
我们仍然会考虑输入是有限区间内的某个实数 

151
00:10:32,731 --> 00:10:36,000
的函数，为简单起见，例如从 0 到 1。

152
00:10:36,560 --> 00:10:40,625
但是，虽然温度函数之类的东西会在实数线上有输出，但这 

153
00:10:40,625 --> 00:10:44,540
种更广泛的视野将使输出在二维复平面上的任何地方漂移。

154
00:10:45,120 --> 00:10:48,676
您可能会将此类函数视为绘图，当输入范围从 

155
00:10:48,676 --> 00:10:52,740
0 到 1 时，用铅笔尖在复平面上画出不同的点。

156
00:10:53,340 --> 00:10:56,835
正如您在开始时看到的那样，我们将专注于将这些函 

157
00:10:56,835 --> 00:11:00,330
数分解为小向量的总和，而不是将正弦波作为基本构 

158
00:11:00,330 --> 00:11:03,680
建块，所有这些向量都以某个恒定的整数频率旋转。

159
00:11:03,680 --> 00:11:11,300
具有实数输出的函数本质上是非常 无聊的绘图，即一维铅笔草图。

160
00:11:11,980 --> 00:11:16,490
您可能不习惯这样思考它们，因为通常我们用图形来可 

161
00:11:16,490 --> 00:11:20,820
视化这样的函数，但现在绘制的路径仅在输出空间中。

162
00:11:25,420 --> 00:11:30,060
如果您将这些分解之一分解为旋转矢量以绘制无聊的 

163
00:11:30,060 --> 00:11:34,506
绘图，则会发生频率为 1 和负 1 的矢量将 

164
00:11:34,506 --> 00:11:38,760
具有相同的长度，并且它们将是彼此的水平反射。

165
00:11:39,500 --> 00:11:42,931
当您仅查看这两者旋转时的总和时，该总和保 

166
00:11:42,931 --> 00:11:46,200
持固定在实数线上，并且像正弦波一样振荡。

167
00:11:46,920 --> 00:11:51,100
如果您以前没有见过，这可能是一种非常奇怪的思考正弦 

168
00:11:51,100 --> 00:11:55,280
波是什么的方式，因为我们习惯于查看它的图形而不是单 

169
00:11:55,280 --> 00:11:59,461
独在实数线上徘徊的输出，但是在在具有复数输出的更广 

170
00:11:59,461 --> 00:12:03,320
泛的函数背景下，水平线上的振荡就是正弦波的样子。

171
00:12:04,920 --> 00:12:09,671
类似地，频率为 2 和负 2 的旋转矢量对将 

172
00:12:09,671 --> 00:12:14,422
添加另一个正弦波分量，依此类推，我们之前寻找 

173
00:12:14,422 --> 00:12:18,760
的正弦波现在对应于沿相反方向旋转的矢量对。

174
00:12:19,640 --> 00:12:24,521
因此，傅里叶最初研究的背景是将实值函数分解为正 

175
00:12:24,521 --> 00:12:29,200
弦波，是二维绘图和旋转矢量的更一般概念的特例。

176
00:12:34,580 --> 00:12:38,080
在这一点上，也许您不相信我认为将我们的视野扩大到 

177
00:12:38,080 --> 00:12:41,580
复杂的函数会使事情更容易理解，但请耐心等待，为了 

178
00:12:41,580 --> 00:12:45,080
看到更全面的情况而付出额外的努力确实值得，我想您 

179
00:12:45,080 --> 00:12:48,440
会很高兴在这个更广泛的背景下实际计算的干净程度。

180
00:12:49,100 --> 00:12:51,917
您可能还想知道为什么，如果我们要将 

181
00:12:51,917 --> 00:12:54,735
事物提升为二维，我们不仅仅谈论二维 

182
00:12:54,735 --> 00:12:57,240
向量，负一的平方根与什么有关系？

183
00:12:58,100 --> 00:13:03,700
嗯，傅里叶级数的核心和灵魂是复 指数 e 的 i 乘以 t。

184
00:13:04,480 --> 00:13:08,100
当输入 t 随着时间向前移动时，该值 

185
00:13:08,100 --> 00:13:11,340
以每秒一个单位的速率绕单位圆移动。

186
00:13:12,280 --> 00:13:16,057
在下一个视频中，您将快速直观地了解为什么从微 

187
00:13:16,057 --> 00:13:19,834
分方程的角度对虚数取幂会像这样绕圈子走动，除 

188
00:13:19,834 --> 00:13:23,611
此之外，随着系列的进展，我希望能让您对为什么 

189
00:13:23,611 --> 00:13:27,060
复杂的指数像这样有一些了解实际上非常重要。

190
00:13:27,740 --> 00:13:31,333
从理论上讲，你可以纯粹用向量来描述所有傅里叶级数 

191
00:13:31,333 --> 00:13:34,640
，而无需呼吸任何“i”这个词，即负一的平方根。

192
00:13:35,300 --> 00:13:39,003
公式会变得更加复杂，但除此之外，将函数 

193
00:13:39,003 --> 00:13:43,076
e 省略给 x 会以某种方式不再真实地反映 

194
00:13:43,076 --> 00:13:46,780
为什么这个想法对于求解微分方程如此有用。

195
00:13:47,420 --> 00:13:51,482
现在，如果您愿意，您可以将 e 和 it 

196
00:13:51,482 --> 00:13:56,512
视为描述旋转向量的符号简写 ，但请记住，它比单纯的简

197
00:13:56,512 --> 00:13:57,480
写更重要。

198
00:13:58,540 --> 00:14:02,619
你会注意到我在语言上有点宽松地使用向量和复数这两个词， 

199
00:14:02,619 --> 00:14:06,552
这在某种程度上可以互换，这在很大程度上是因为将复数视 

200
00:14:06,552 --> 00:14:10,340
为小箭头使得将大量复数相加在一起的想法更容易可视化。

201
00:14:11,340 --> 00:14:14,675
好吧，有了函数 e 到 i 乘以 t，让我们 

202
00:14:14,675 --> 00:14:17,720
为我们正在使用的每个旋转向量写下一个公式。

203
00:14:18,120 --> 00:14:20,192
现在，将它们中的每一个视为从数字 

204
00:14:20,192 --> 00:14:21,900
1 向右指向一个单位的起点。

205
00:14:21,900 --> 00:14:27,170
最容易描述的向量是常量向量，它保持数字 1，从不移动，或 

206
00:14:27,170 --> 00:14:32,260
者如果您愿意，它只是以 0 的频率进行引用-反引用旋转。

207
00:14:33,100 --> 00:14:36,234
那么就会有每秒旋转一个周期的向量，我们将 

208
00:14:36,234 --> 00:14:39,220
其写为 2 pi i 乘以 t 的 e。

209
00:14:39,739 --> 00:14:42,553
存在 2 pi 是因为当 t 从 0 到 

210
00:14:42,553 --> 00:14:45,500
1 时，它需要沿着圆移动 2 pi 的距离。

211
00:14:45,500 --> 00:14:48,406
从技术上讲，在所展示的内容中，它实际上是每 

212
00:14:48,406 --> 00:14:51,049
10 秒一个周期 ，因此事情不会太令人眼

213
00:14:51,049 --> 00:14:53,560
花缭乱，我将一切速度放慢了 10 倍。

214
00:14:55,320 --> 00:14:58,598
我们还有一个以每秒一个周期向另一个方向旋转的向 

215
00:14:58,598 --> 00:15:01,740
量，即 e 旋转到负 2 pi i 乘以 t。

216
00:15:04,300 --> 00:15:08,513
类似地，每秒旋转两圈是 e 到 2 乘以 

217
00:15:08,513 --> 00:15:12,325
2 pi i 乘以 t，其中指数中的 

218
00:15:12,325 --> 00:15:16,740
2 乘以 2 pi 描述了一秒内走过的距离。

219
00:15:20,600 --> 00:15:24,771
我们对所有整数（无论是正数还是负数）都进行这样的操作，并 

220
00:15:24,771 --> 00:15:28,800
使用 e 到 n 乘以 2 pi 乘以 i t 的通式。

221
00:15:29,339 --> 00:15:32,535
请注意，这使得将该常量向量写为 e 等于 0 

222
00:15:32,535 --> 00:15:36,285
乘 以 2 pi 乘以它变得更加一致，这感觉像是一种 

223
00:15:36,285 --> 00:15:39,620
非常复杂的写数字 1 的方法，但至少它符合模式。

224
00:15:40,500 --> 00:15:43,782
我们拥有的控件，即我们可以转动的一组旋 

225
00:15:43,782 --> 00:15:46,900
钮和转盘，是每个数字的初始大小和方向。

226
00:15:47,480 --> 00:15:50,433
我们控制这一点的方法是将每个值乘以某个 

227
00:15:50,433 --> 00:15:53,240
复数常数，我将其称为 c sub n。

228
00:15:53,880 --> 00:15:58,737
例如，如果我们希望常数向量不是数字 1，而是长度为 0。

229
00:15:58,737 --> 00:16:01,860
5、c sub 0 将为 0。5. 

230
00:16:02,540 --> 00:16:05,456
如果我们希望以每秒 1 个周期旋转的向量以 

231
00:16:05,456 --> 00:16:08,504
45 度 的角度开始，我们会将其乘以一个复数，

232
00:16:08,504 --> 00:16:11,818
该复数具有将其旋 转那么多的效果，您可以将其写为 

233
00:16:11,818 --> 00:16:15,000
pi 的 e第四次岛 如果它的初始长度需要为0。

234
00:16:15,640 --> 00:16:21,800
3，则系数 c sub 1 将为 0。该 金额的3倍。

235
00:16:22,760 --> 00:16:27,427
同样，我们无限的旋转向量家族中的每个向量都乘以 

236
00:16:27,427 --> 00:16:31,900
一些复杂的常数，这决定了它的初始角度和总大小。

237
00:16:32,820 --> 00:16:38,551
我们的目标是将 t 的任意函数 f 表示为这样的项之和，例 

238
00:16:38,551 --> 00:16:44,091
如当 t 从 0 到 1 时绘制八分音符的函数 f，因此 

239
00:16:44,091 --> 00:16:49,440
我们需要某种方法来逐个挑选这些常数，给定函数本身的数据。

240
00:16:51,840 --> 00:16:54,540
其中最容易找到的是常数项。

241
00:16:55,080 --> 00:16:58,480
该术语代表整个绘图的一种质心。

242
00:16:59,000 --> 00:17:03,057
如果您要对输入 t 的一系列均匀间隔的值（ 

243
00:17:03,057 --> 00:17:06,931
范围从 0 到 1）进行采样，则这些样本 

244
00:17:06,931 --> 00:17:10,619
的函数所有输出的平均值将是常数项 c0。

245
00:17:11,359 --> 00:17:15,391
或者更准确地说，当您考虑越来越精细的样本时 

246
00:17:15,391 --> 00:17:19,240
，这些样本的输出平均值在极限内接近 c0。

247
00:17:20,000 --> 00:17:24,327
我所描述的是，输入范围中 t 样本的函数的越来越精细的 

248
00:17:24,327 --> 00:17:28,500
和是一个积分，即 t 从 0 到 1 的 f 的积分。

249
00:17:30,820 --> 00:17:34,628
通常，由于我用平均值来构建这一切，因此您可以 

250
00:17:34,628 --> 00:17:38,437
将积分除以输入范围的长度，但该长度为 1，因 

251
00:17:38,437 --> 00:17:42,080
此在这种情况下，取积分和取平均值是同一件事。

252
00:17:42,640 --> 00:17:46,580
有一个很好的方法来思考为什么这个积分会得出 c0。

253
00:17:47,380 --> 00:17:52,182
请记住，我们希望将此函数视为旋转向量的总和，因此 

254
00:17:52,182 --> 00:17:56,600
请考虑将此积分（此连续平均值）应用于整个总和。

255
00:17:57,460 --> 00:18:02,580
这样的总和的平均值与每个部分的平均值之和相同。

256
00:18:06,080 --> 00:18:09,240
你可以将这一举动解读为一种微妙的视角转变。

257
00:18:09,520 --> 00:18:13,646
与其查看每个时间点所有向量的总和并取它们扫出 

258
00:18:13,646 --> 00:18:17,772
的平均值，不如查看 t 从 0 到 1 时单 

259
00:18:17,772 --> 00:18:21,540
个向量的平均值，然后将所有这些平均值相加。

260
00:18:22,480 --> 00:18:26,800
但这些向量中的每一个都只是围绕 0 旋转整数次，因此 

261
00:18:26,800 --> 00:18:30,800
当 t 从 0 到 1 变化时，其平均值将为 0。

262
00:18:31,340 --> 00:18:33,440
唯一的例外是常数项。

263
00:18:33,940 --> 00:18:37,571
由于它保持静态并且不旋转，因此它的平均 

264
00:18:37,571 --> 00:18:40,840
值就是它开始时的任何数字，即 c0。

265
00:18:41,600 --> 00:18:44,629
因此，对整个函数进行平均是一种巧妙的 

266
00:18:44,629 --> 00:18:47,500
方法，可以消除所有不是 c0 的项。

267
00:18:48,040 --> 00:18:49,560
但这是聪明的部分。

268
00:18:49,860 --> 00:18:52,589
假设您想要计算一个不同的项，例如 

269
00:18:52,589 --> 00:18:55,800
c 2，位于每秒旋转两个周期的向量前面。

270
00:18:56,420 --> 00:19:01,097
诀窍是首先将 t 的 f 乘以使该向量保持静止的某个值 

271
00:19:01,097 --> 00:19:05,440
，这在数学上相当于给一个过度活跃的孩子一部智能手机。

272
00:19:06,260 --> 00:19:10,544
具体来说，如果将整个函数乘以 e 得到负 2 乘以 

273
00:19:10,544 --> 00:19:14,500
2 pi i 乘以 t，请考虑每一项会发生什么。

274
00:19:16,640 --> 00:19:21,097
由于指数相乘会导致指数中的内容相加， 

275
00:19:21,097 --> 00:19:25,320
因此每个指数中的频率项都会下移 2。

276
00:19:29,660 --> 00:19:33,272
所以现在，当我们计算每一项的平均值时，c- 

277
00:19:33,272 --> 00:19:36,720
1 向量围绕负旋转 3 次，平均值为 0。

278
00:19:37,560 --> 00:19:41,958
c0 向量以前是恒定的，现在随着 t 从 0 

279
00:19:41,958 --> 00:19:46,740
到 1 的变化而旋转两次，因此它的平均值也是 0。

280
00:19:46,740 --> 00:19:50,321
同样，除了 c2 项之外的所有向量都会进行 

281
00:19:50,321 --> 00:19:53,740
一些整数旋转，这意味着它们的平均值为 0。

282
00:19:55,280 --> 00:19:58,566
因此，取这个修改后的函数的平均值是消 

283
00:19:58,566 --> 00:20:01,680
除除 c2 之外的所有项的聪明方法。

284
00:20:02,360 --> 00:20:06,033
当然，这里的数字 2 没有什么特别的，你可以用任何其他 

285
00:20:06,033 --> 00:20:09,837
n 替换它，你就有了 cn 的通用公式，这就是我们正在寻找

286
00:20:09,837 --> 00:20:10,100
的。

287
00:20:10,660 --> 00:20:14,556
脱离上下文，这个表达式可能看起来很复杂，但请记住 

288
00:20:14,556 --> 00:20:18,297
，您可以将其理解为首先修改我们的函数，我们的二 

289
00:20:18,297 --> 00:20:22,194
维绘图，以便使第 n 个小向量保持静止，然后执行 

290
00:20:22,194 --> 00:20:25,780
平均，杀死所有移动向量，并且只剩下静止的部分。

291
00:20:26,460 --> 00:20:27,080
这不是很疯狂吗？

292
00:20:27,500 --> 00:20:31,899
您所看到的将绘图分解为许多旋转向量之和的 

293
00:20:31,899 --> 00:20:35,880
所有复杂性都完全在这个小表达式中捕获。

294
00:20:36,540 --> 00:20:40,820
因此，当我渲染这些动画时，这 正是我让计算机所做的事情。

295
00:20:41,280 --> 00:20:45,256
它像复杂函数一样计算路径，并且对于特定范围的 

296
00:20:45,256 --> 00:20:49,060
值 n，它计算该积分以找到 n 的系数 c。

297
00:20:51,080 --> 00:20:55,085
对于那些对路径本身的数据来自哪里感到好奇的人，我将采用简 

298
00:20:55,085 --> 00:20:59,090
单的方法，只需以 SVG 形式读取程序即可，这是一种根据 

299
00:20:59,090 --> 00:21:02,820
数学曲线而不是用数学曲线来定义图像的文件格式。像素值。

300
00:21:03,280 --> 00:21:06,028
因此，t 的 f 从时间参数到

301
00:21:06,028 --> 00:21:08,960
空间点的映射基本上是预先定义的。

302
00:21:10,540 --> 00:21:14,167
在现在显示的内容中，我使用 101 个旋转向 

303
00:21:14,167 --> 00:21:17,480
量，计算从负 50 到 50 的 n 值。

304
00:21:18,120 --> 00:21:21,676
实际上，这些积分中的每一个都是以数值方式计算的，基本上

305
00:21:21,676 --> 00:21:25,100
意味着它将单位间隔分 成许多大小为 delta t 

306
00:21:25,100 --> 00:21:28,788
的小块，然后将这个值（t 的 f 乘以 e ）相加到负 

307
00:21:28,788 --> 00:21:32,740
n 2 pi it 乘以 delta t ，对于其中每一个。

308
00:21:33,280 --> 00:21:35,705
有更奇特的方法可以实现更有效的 

309
00:21:35,705 --> 00:21:37,980
数值积分，但这给出了基本思想。

310
00:21:38,820 --> 00:21:42,810
计算完这 101 个常数后，每个常数都会 

311
00:21:42,810 --> 00:21:46,800
确定小向量的初始角度和大小，然后将它们全 

312
00:21:46,800 --> 00:21:50,790
部设置为旋转，将它们从头尾相加，最终尖端 

313
00:21:50,790 --> 00:21:54,400
绘制的路径是您输入的原始路径的近似值。

314
00:21:55,100 --> 00:22:00,780
随着使用的向量数量接近无穷大 ，近似路径变得越来越准确。

315
00:22:14,140 --> 00:22:17,994
为了让这一切回到现实，考虑一下我们之 

316
00:22:17,994 --> 00:22:21,848
前看到的阶跃函数的例子，它对于模拟两 

317
00:22:21,848 --> 00:22:25,500
个棒接触后在不同温度下的散热很有用。

318
00:22:26,620 --> 00:22:32,500
与任何实数值函数一样，阶跃函 数就像仅限于一维的无聊绘图。

319
00:22:33,240 --> 00:22:37,535
但这是一张特别乏味的图，因为输入介于 0 和 0 之间。

320
00:22:37,535 --> 00:22:41,831
在图 5 中，输出只是在数字 1 处保持静态，然后对于 

321
00:22:41,831 --> 00:22:45,820
0 之 间的输入，它会不连续地跳转到负 1。5和1。

322
00:22:46,440 --> 00:22:49,965
因此，在傅立叶级数近似中，向量和在周期的 

323
00:22:49,965 --> 00:22:53,490
前半部分保持非常接近 1，然后快速跳至负 

324
00:22:53,490 --> 00:22:56,680
1，并在周期的后半部分保持接近负 1。

325
00:22:57,500 --> 00:23:01,198
请记住，每对沿相反方向旋转的矢量 

326
00:23:01,198 --> 00:23:04,680
对应于我们之前看到的余弦波之一。

327
00:23:06,080 --> 00:23:09,618
为了找到系数，您需要计算这个积分，对于你们中那 

328
00:23:09,618 --> 00:23:13,157
些渴望手动计算出一些积分的雄心勃勃的观众来说， 

329
00:23:13,157 --> 00:23:16,696
这是一个您可以实际进行微积分以获得准确答案的地 

330
00:23:16,696 --> 00:23:19,940
方，而不仅仅是得到一个计算机会为你计算数字。

331
00:23:19,940 --> 00:23:24,075
我将把它作为一个练习来解决这个问题，并通过配对沿 

332
00:23:24,075 --> 00:23:27,880
相反方向旋转的矢量将其与余弦波的概念联系起来。

333
00:23:28,780 --> 00:23:32,734
对于更雄心勃勃的人，我将在屏幕上留下另一个练习，说 

334
00:23:32,734 --> 00:23:36,689
明如何将这种更一般的计算与您在教科书中看到的仅用正 

335
00:23:36,689 --> 00:23:40,340
弦和余弦的实值函数描述傅立叶级数的内容联系起来。

336
00:23:40,340 --> 00:23:44,208
顺便说一句，如果您正在寻找更多傅里叶级数内容，我强烈推荐 

337
00:23:44,208 --> 00:23:47,944
Mathologer 和 The Coding Tra 

338
00:23:47,944 --> 00:23:51,680
in 的视频，我还会推荐这篇博文，当然还有描述中的链接。

339
00:23:53,620 --> 00:23:57,271
一方面，这结束了我们对热方程的讨论 

340
00:23:57,271 --> 00:24:00,720
，这是研究偏微分方程的一个小窗口。

341
00:24:01,240 --> 00:24:03,504
但另一方面，从傅里叶到傅里叶级

342
00:24:03,504 --> 00:24:05,920
数是对更深层次想法的第一次了解。

343
00:24:06,500 --> 00:24:11,581
指数函数，包括将其推广为复数甚至矩阵，对于微分 

344
00:24:11,581 --> 00:24:16,240
方程起着非常重要的作用，尤其是在线性方程中。

345
00:24:16,920 --> 00:24:26,762
您刚才看到的，将函数分解为这些指数 

346
00:24:26,762 --> 00:24:36,604
的组合，并用它来求解微分方程，会以 

347
00:24:36,604 --> 00:24:45,900
不同的形状和形式一次又一次地出现。

