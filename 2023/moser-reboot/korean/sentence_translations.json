[
 {
  "input": "This is a very famous cautionary tale in math, known as Moser's circle problem.",
  "translatedText": "이것은 모저의 원 문제로 알려진 수학에서 매우 유명한 경고의 이야기입니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 0.0,
  "end": 4.26
 },
 {
  "input": "Some of you may have seen this before, but what I want to do here is really explain what's going on.",
  "translatedText": "이미 보신 분들도 계시겠지만, 여기서 제가 하고 싶은 말은 실제로 무슨 일이 벌어지고 있는지 설명하는 것입니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 4.78,
  "end": 9.08
 },
 {
  "input": "The way this starts is we take a circle and put two points on that circle and connect them with a line, that is a chord of the circle, and note that it divides the circle into two different regions.",
  "translatedText": "시작 방법은 원을 그리고 그 원 위에 두 점을 놓고 그 점을 원의 화음인 선으로 연결하면 원을 두 개의 다른 영역으로 나눈다는 점에 유의하세요.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 9.74,
  "end": 20.06
 },
 {
  "input": "If I add a third point and then connect that to the previous two points with two more chords, then these lines all divide the circle into four separate regions.",
  "translatedText": "세 번째 점을 추가한 다음 이전 두 점에 두 개의 코드를 더 연결하면 이 선들이 모두 원을 네 개의 개별 영역으로 나눕니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 20.66,
  "end": 29.26
 },
 {
  "input": "Then if you add a fourth point and connect that to the previous three, and you play the same game, you count up how many regions has this cut the circle into, you end up with eight.",
  "translatedText": "그런 다음 네 번째 점을 추가하여 이전 세 점과 연결하고 동일한 게임을 플레이하면서 이것이 원을 몇 개의 영역으로 잘랐는지 세어보면 8개가 됩니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 29.26,
  "end": 38.94
 },
 {
  "input": "Add a fifth point to the circle, connect it to the previous four, count up the total number of regions, and if you're careful with your counting, you'll get a total of sixteen.",
  "translatedText": "동그라미에 다섯 번째 점을 추가하고 앞의 네 개에 연결한 다음 총 지역 수를 세어보면 조심스럽게 세어보면 총 16개가 나옵니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 39.54,
  "end": 48.14
 },
 {
  "input": "Naturally, you can guess what might come next, but would you bet your life on it?",
  "translatedText": "당연히 다음에 어떤 일이 일어날지 짐작할 수 있지만, 목숨을 걸고 도전하시겠습니까?",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 48.96,
  "end": 52.28
 },
 {
  "input": "Add a sixth point, connect it to all the previous ones, and if you carefully count up all the different regions, you end up not with the power of two you might have expected, but just one shy of it.",
  "translatedText": "여섯 번째 점을 추가하고 이전의 모든 점과 연결한 다음, 다른 모든 지역을 주의 깊게 세어보면 예상했던 2의 거듭제곱이 아니라 1에 약간 못 미치는 결과가 나옵니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 52.54,
  "end": 62.66
 },
 {
  "input": "Some of you might be raising your hand saying, doesn't it depend on where we put the points?",
  "translatedText": "포인트를 어디에 두느냐에 따라 달라지지 않느냐고 손을 들어보시는 분도 계실 겁니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 64.04,
  "end": 67.96
 },
 {
  "input": "For example, watch how this middle region disappears if I place everything nice and symmetrically around the circle.",
  "translatedText": "예를 들어, 원 주위에 모든 것을 대칭으로 멋지게 배치하면 가운데 영역이 어떻게 사라지는지 보세요.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 68.86,
  "end": 74.1
 },
 {
  "input": "So yes, it does depend, but we're going to consider the cases where you never have any three lines intersecting with each other.",
  "translatedText": "따라서 상황에 따라 다르지만 세 개의 선이 서로 교차하지 않는 경우를 고려해 보겠습니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 74.32,
  "end": 80.3
 },
 {
  "input": "This would be the generic case if you just choose n random points, almost certainly you'll never have three lines coincide, but setting aside the technical nuances, the problem is such a tease, it looks so convincingly like powers of two until it just barely breaks.",
  "translatedText": "무작위로 n개의 점을 선택하면 세 개의 선이 일치하는 경우는 거의 없지만, 기술적인 뉘앙스는 차치하고서라도, 간신히 깨질 때까지 2의 거듭제곱처럼 보일 정도로 이 문제는 매우 재미있습니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 80.54,
  "end": 93.54
 },
 {
  "input": "And I have such a strange soft spot for this particular question, when I was younger I wrote a poem about it and also a song, and on the one hand it's kind of silly because this is just one example of what the mathematician Richard Guy called the strong law of small numbers, summed up in the phrase, there aren't enough small numbers to meet the many demands made of them.",
  "translatedText": "그리고 저는 이 특정 질문에 묘한 약점을 가지고 있습니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 93.92,
  "end": 112.0
 },
 {
  "input": "But I think what I really like about this problem is that if you sit down to try to work out what is the real pattern, what's actually going on here, one, it's just a really good exercise in problem solving, so it makes for a nice lesson right here, but also it's not just a coincidence that it starts off being powers of two, there's a very good reason this happens, and it's also not a coincidence that you seemingly randomly hit another power of two a little bit later on the tenth iteration.",
  "translatedText": "어렸을 때 이에 대한 시와 노래도 썼어요.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 112.8,
  "end": 136.92
 },
 {
  "input": "So we've got this pattern, and what you want to find is what function describes it.",
  "translatedText": "수학자 리처드 가이가 '작은 숫자는 많은 수요를 충족하기에 충분하지 않다'는 말로 요약한 '작은 숫자의 강력한 법칙'의 한 예에 불과하기 때문입니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 142.1,
  "end": 146.3
 },
 {
  "input": "If you put n points on the boundary of a circle, and you connect them with all the possible chords, and you count how many regions the circle has been cut into, if the answer isn't a power of two, what is it?",
  "translatedText": "하지만 제가 이 문제를 정말 좋아하는 이유는 실제 패턴이 무엇인지, 여기서 실제로 무슨 일이 일어나고 있는지 알아내기 위해 앉아 있으면 첫째, 문제 해결에 정말 좋은 연습이 되기 때문에 바로 여기서 좋은 교훈이 될 뿐만 아니라 2의 거듭제곱으로 시작하는 것이 우연이 아니라는 점입니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 146.54,
  "end": 156.78
 },
 {
  "input": "What function of n should we plug in?",
  "translatedText": "이런 일이 발생하는 데에는 아주 좋은 이유가 있습니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 156.98,
  "end": 158.66
 },
 {
  "input": "As always with math, problem solving rule number one if you're stuck, is to try solving easier questions somehow related to the problem at hand.",
  "translatedText": "그리고 10번째 반복에서 2의 거듭제곱을 조금 지나서 무작위로 또 다른 2의 거듭제곱이 나온 것도 우연이 아닙니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 159.34,
  "end": 167.14
 },
 {
  "input": "It helps you get a foothold, and sometimes those answers are helpful in the final question.",
  "translatedText": "따라서 이 패턴이 있고 이를 설명하는 함수를 찾고자 하는 것입니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 167.48,
  "end": 171.26
 },
 {
  "input": "In this case, two warm-up questions that come to mind are, how many total chords are there in this diagram, and at how many points within the circle do those chords intersect each other?",
  "translatedText": "원의 경계에 n개의 점을 놓고 가능한 모든 화음으로 연결한 다음 원이 몇 개의 영역으로 잘려나갔는지 세어본다면, 2의 거듭제곱이 아니라면 그 답은 무엇일까요?",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 171.72,
  "end": 181.5
 },
 {
  "input": "The first question is relatively friendly, every one of those chords corresponds uniquely with a pair of points on the circle.",
  "translatedText": "n의 어떤 기능을 연결해야 하나요?",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 182.2,
  "end": 188.84
 },
 {
  "input": "So effectively what you want to do is count how many distinct pairs of points are there.",
  "translatedText": "수학에서 항상 그렇듯이, 막혔을 때 문제 해결의 첫 번째 규칙은 당면한 문제와 관련된 쉬운 문제부터 풀어보는 것입니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 189.64,
  "end": 193.8
 },
 {
  "input": "There's a function that does this, it's called n choose two.",
  "translatedText": "발판을 마련하는 데 도움이 되며, 때로는 이러한 답변이 최종 질문에서 도움이 되기도 합니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 194.3,
  "end": 196.98
 },
 {
  "input": "By definition, this counts the number of distinct pairs that you can choose from a set of n items, where order doesn't matter.",
  "translatedText": "이 경우 떠오르는 두 가지 준비 질문은 이 다이어그램에 화음이 있고, 이 화음이 원 안의 몇 개 지점에서 서로 교차하는가 하는 것입니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 197.42,
  "end": 204.34
 },
 {
  "input": "To calculate it, the way you often think about it is that you have n choices for what your first item should be, and then you have n minus one options for what that second item should be, but simply multiplying those would over count, since for a given pair you would have two distinct ways to arrive at that pair.",
  "translatedText": "첫 번째 질문은 비교적 친근한 질문입니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 205.0,
  "end": 222.14
 },
 {
  "input": "And remember, we don't care about order.",
  "translatedText": "이러한 모든 화음은 원의 한 쌍의 점과 고유하게 대응합니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 222.68,
  "end": 224.16
 },
 {
  "input": "To account for this you divide by two.",
  "translatedText": "따라서 효과적으로 수행하려는 작업은 별개의 포인트 쌍이 몇 개 있는지 세는 것입니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 224.74,
  "end": 226.42
 },
 {
  "input": "So for example, seven choose two would look like seven times six divided by two, which is seven times three, or twenty-one, and if you count up the number of distinct pairs of seven items, there are indeed twenty-one of them.",
  "translatedText": "이 작업을 수행하는 함수가 있는데, 이를 n 선택 2라고 합니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 226.42,
  "end": 239.86
 },
 {
  "input": "Counting the number of intersection points in the diagram is a little bit trickier.",
  "translatedText": "정의에 따르면, 순서는 중요하지 않은 n개의 항목 집합에서 선택할 수 있는 고유한 쌍의 수를 계산합니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 241.4,
  "end": 244.94
 },
 {
  "input": "One idea might be that it should be the number of pairs of chords, since every intersection point comes from two different chords.",
  "translatedText": "이를 계산할 때 흔히 생각하는 방식은 첫 번째 항목이 무엇이어야 하는지에 대해 n개의 선택지가 있고, 두 번째 항목이 무엇이어야 하는지에 대해 n개에서 1을 뺀 선택지가 있지만, 주어진 쌍에 대해 해당 쌍에 도달하는 방법이 두 가지가 있기 때문에 단순히 곱하면 초과 계산이 될 수 있다는 것입니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 245.34,
  "end": 252.46
 },
 {
  "input": "However, that would not quite be right, because the association is not unique.",
  "translatedText": "저희는 순서를 따지지 않습니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 253.02,
  "end": 256.7
 },
 {
  "input": "You can find a pair of chords that don't intersect within the circle.",
  "translatedText": "이를 설명하기 위해 2로 나눕니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 257.1,
  "end": 260.26
 },
 {
  "input": "As I said, it's a little bit tricky.",
  "translatedText": "예를 들어, 7개를 선택하면 7개를 6으로 나눈 값은 2로 나눈 값인 7×3, 즉 21개가 되며, 7개 항목의 고유한 쌍의 수를 세어보면 실제로 21개가 있습니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 260.98,
  "end": 262.24
 },
 {
  "input": "I'd encourage you to try to pause and think about it for yourself, and if you do that, you give yourself a moment, maybe if you're a little bit lucky, here's one thing you might notice.",
  "translatedText": "다이어그램에서 교차점의 수를 세는 것은 조금 더 까다롭습니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 262.56,
  "end": 271.16
 },
 {
  "input": "Every intersection point is uniquely associated with a quadruplet of points on the exterior.",
  "translatedText": "한 가지 아이디어는 모든 교차점이 두 개의 다른 코드에서 나오기 때문에 코드 쌍의 수여야 한다는 것입니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 271.9,
  "end": 276.92
 },
 {
  "input": "For a given quadruplet, you look at the two kind of diagonal chords between them, and those will intersect within the circle, and it goes the other way around.",
  "translatedText": "그러나 이 협회는 고유한 조직이 아니기 때문에 이는 옳지 않습니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 277.72,
  "end": 285.08
 },
 {
  "input": "Every intersection point corresponds with some quadruplet of points.",
  "translatedText": "원 안에서 교차하지 않는 한 쌍의 코드를 찾을 수 있습니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 285.38,
  "end": 288.74
 },
 {
  "input": "So, what you want now is to count how many distinct ways can you choose four items given n total choices.",
  "translatedText": "앞서 말했듯이 약간 까다롭습니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 290.66,
  "end": 297.46
 },
 {
  "input": "This is very similar to the previous question.",
  "translatedText": "잠시 멈춰서서 스스로 생각해보고, 그렇게 해서 잠시 시간을 내면 운이 좋다면 한 가지를 발견할 수 있을 것입니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 298.24,
  "end": 300.38
 },
 {
  "input": "The function that answers it is called n choose four, which by definition counts the number of quadruplets from a set of size n, and the way to calculate it is similar to what we saw before.",
  "translatedText": "모든 교차점은 외부에 있는 네 개의 점과 고유하게 연결됩니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 300.76,
  "end": 311.0
 },
 {
  "input": "You would think of having n choices for your first item, leaving you with n minus one choices for the next item, leaving you with n minus two choices for the third item, and n minus three choices for the last item.",
  "translatedText": "주어진 4중주의 경우, 그 사이에 있는 두 종류의 대각선 화음을 보면 원 안에서 교차하고 그 반대 방향으로도 교차합니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 311.0,
  "end": 322.94
 },
 {
  "input": "That, however, would grossly overcount the total number, since all the different ways you can permute these four items would be counted separately.",
  "translatedText": "모든 교차점은 점의 4분의 1에 해당합니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 323.8,
  "end": 331.18
 },
 {
  "input": "To account for that, you divide out by the extent to which you've overcounted, the number of permutations of four items, which looks like four factorial.",
  "translatedText": "따라서 이제 원하는 것은 총 선택지가 n개 주어졌을 때 네 가지 항목을 선택할 수 있는 방법이 몇 가지나 되는지 세는 것입니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 331.64,
  "end": 339.32
 },
 {
  "input": "For example, if you calculate four choose four, everything cancels and you just get one, and indeed, there is a single intersection point in this diagram.",
  "translatedText": "이는 이전 질문과 매우 유사합니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 340.12,
  "end": 349.14
 },
 {
  "input": "If you calculate six choose four, it works out to be 15, and if you look at this diagram and you count them all up, you would notice there are indeed 15 different intersection points.",
  "translatedText": "이에 대한 답을 구하는 함수를 n 선택 4라고 하는데, 정의에 따라 크기 n의 집합에서 사분면의 수를 계산하며, 계산 방법은 앞서 살펴본 것과 유사합니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 349.8,
  "end": 360.5
 },
 {
  "input": "And even if you would never want to count it up by hand, if we had a diagram that has 100 distinct points on the exterior, and we drew all of the connecting lines, you can conclude that there have to be 100 choose four, or just about four million intersection points somewhere in the middle.",
  "translatedText": "첫 번째 항목에는 n개의 선택지가 있고, 다음 항목에는 n개에서 1개를 뺀 선택지가 있으며, 세 번째 항목에는 n개에서 2개를 뺀 선택지가 있고, 마지막 항목에는 n개에서 3개를 뺀 선택지가 있는 것으로 생각할 수 있습니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 361.32,
  "end": 376.94
 },
 {
  "input": "You've probably guessed this, but these are more than just warm-up questions.",
  "translatedText": "그러나 이렇게 하면 이 네 가지 항목을 순열할 수 있는 모든 방법이 개별적으로 계산되기 때문에 총 개수가 지나치게 많아지게 됩니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 377.84,
  "end": 380.88
 },
 {
  "input": "They give us the necessary information to answer the question we care about.",
  "translatedText": "이를 설명하기 위해 초과 계산한 정도, 즉 4개 항목의 순열 수로 나누면 4개의 계승처럼 보입니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 381.14,
  "end": 384.6
 },
 {
  "input": "How many regions has the circle been cut into?",
  "translatedText": "예를 들어 4를 선택하면 모든 것이 취소되고 하나만 남게 되며, 실제로 이 다이어그램에는 하나의 교차점이 있습니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 384.74,
  "end": 386.98
 },
 {
  "input": "The trick is to use a very nice little fact about planar graphs.",
  "translatedText": "6 선택 4를 계산하면 15가 되는데, 이 다이어그램을 보고 모두 세어보면 실제로 15개의 교차점이 있다는 것을 알 수 있습니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 387.4,
  "end": 390.62
 },
 {
  "input": "Here I'm using the word graph in the sense of a diagram that has nodes and lines connecting them, and what it means to be planar is that you can draw this diagram without any of the lines intersecting with each other.",
  "translatedText": "손으로 일일이 세고 싶지 않더라도 외부에 100개의 뚜렷한 점이 있는 다이어그램이 있고 모든 연결선을 그렸다면, 중간 어딘가에 100개의 선택 4, 즉 약 400만 개의 교차점이 있어야 한다는 결론을 내릴 수 있습니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 391.08,
  "end": 401.7
 },
 {
  "input": "In graph theory lingo, you typically call those nodes vertices and the lines connecting them edges, and the wonderful fact that we can leverage is that if you count up the number of vertices, and then you subtract the total number of edges, and then you consider the number of regions that this graph has cut the plane into, including that infinite outer region, then always, no matter what planar graph you started with, you get two.",
  "translatedText": "이미 짐작하셨겠지만, 이 질문들은 단순한 예행 연습용 질문이 아닙니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 402.28,
  "end": 425.3
 },
 {
  "input": "It's actually very fun.",
  "translatedText": "궁금한 질문에 답하는 데 필요한 정보를 제공합니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 425.84,
  "end": 426.8
 },
 {
  "input": "Try this for yourself.",
  "translatedText": "원은 몇 개의 영역으로 잘랐나요?",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 427.0,
  "end": 427.78
 },
 {
  "input": "Draw any graph, make sure the lines don't intersect, and then count the number of vertices, subtract the number of edges, and count the number of regions that it's cut the plane into, and no matter what diagram you chose, the answer always works out to be two.",
  "translatedText": "비결은 평면 그래프에 대한 아주 작은 사실을 이용하는 것입니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 428.12,
  "end": 442.16
 },
 {
  "input": "More commonly you would see this written as v minus e plus f is equal to two, since originally the equation described the vertices, edges, and faces of three-dimensional polyhedra, and if you want to know why this magical fact is true, you can think about building up your graph from a trivial case where you have a single node and no edges.",
  "translatedText": "여기서 그래프라는 단어는 노드와 노드를 연결하는 선이 있는 다이어그램의 의미로 사용하며, 평면적이라는 의미는 선이 서로 교차하지 않고 이 다이어그램을 그릴 수 있다는 뜻입니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 443.18,
  "end": 462.82
 },
 {
  "input": "So v would be equal to one, f would also be equal to one because of that infinite outer region, and e is zero, so the equation is obviously true.",
  "translatedText": "그래프 이론 용어로는 일반적으로 이러한 노드를 정점, 노드를 연결하는 선을 에지라고 부르는데, 우리가 활용할 수 있는 놀라운 사실은 정점의 수를 세고 총 에지 수를 뺀 다음 무한한 외부 영역을 포함하여 이 그래프가 평면을 잘라낸 영역의 수를 고려하면 어떤 평면 그래프로 시작했든 항상 두 개가 나온다는 것입니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 463.46,
  "end": 471.96
 },
 {
  "input": "Then if you build up your graph one edge at a time, one thing that could happen is that for each new edge you introduce a new vertex, so e goes up by one, but v also goes up by one, leaving the equation balanced.",
  "translatedText": "실제로 매우 재미있어요.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 472.6,
  "end": 484.78
 },
 {
  "input": "But if a new edge doesn't correspond to a new vertex, meaning it's connecting to a pre-existing vertex, that means that it's enclosed a new region of space, so e goes up by one, but f also goes up by one, which again leaves the equation balanced.",
  "translatedText": "직접 체험해 보세요.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 485.5,
  "end": 499.8
 },
 {
  "input": "So as you build up some potentially complicated graph, v minus e plus f always stays fixed at two.",
  "translatedText": "그래프를 그리고 선이 교차하지 않는지 확인한 다음 꼭지점 수를 세고 가장자리 수를 뺀 다음 평면을 잘라낸 영역의 수를 세어보면 어떤 다이어그램을 선택하든 답은 항상 2로 나옵니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 500.92,
  "end": 507.14
 },
 {
  "input": "This equation has a name, it's called Euler's characteristic formula, and I remember when I made a video about this a while ago I had some dumb joke in there about Euler's being German for beautiful, and there were a decent number of comments that were like, you know, Euler is actually a person, I speak German, and it doesn't mean beautiful.",
  "translatedText": "원래 이 방정식은 3차원 다면체의 꼭지점과 가장자리, 면을 설명하는 방정식이기 때문에 일반적으로 v 마이너스 e 더하기 f는 2라고 쓰는데, 이 마법 같은 사실이 왜 사실인지 알고 싶다면 노드가 하나이고 가장자리가 없는 사소한 경우부터 그래프를 구성해 볼 수 있습니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 507.6,
  "end": 523.84
 },
 {
  "input": "Anyway, for our purposes it gives us a tool for counting the number of regions that a planar graph has cut space into.",
  "translatedText": "따라서 v는 1과 같고, 무한한 외부 영역으로 인해 f도 1과 같으며, e는 0이므로 방정식은 분명히 참입니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 524.58,
  "end": 531.24
 },
 {
  "input": "Rearranging a little, you would take the number of edges minus the number of vertices plus two.",
  "translatedText": "그래프를 한 번에 하나의 가장자리로 구성하면 새로운 가장자리마다 새로운 정점을 도입하는 일이 발생할 수 있습니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 531.72,
  "end": 536.54
 },
 {
  "input": "This is exactly the tool that we want to understand our circle question, although in that case we don't care about the infinite outer region, so instead I'll write this as e minus v plus one.",
  "translatedText": "따라서 e가 1씩 올라가지만 v도 1씩 올라가므로 방정식의 균형이 유지됩니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 537.02,
  "end": 547.02
 },
 {
  "input": "And at first you might complain, but we can't use Euler's formula in this case, because it only applies to planar graphs, and in our case the lines absolutely intersect with each other.",
  "translatedText": "그러나 새로운 에지가 새로운 정점에 해당하지 않는다면, 즉 기존 정점에 연결되어 있다면, 이는 새로운 공간 영역이 포함되었다는 것을 의미하므로 e는 하나씩 올라가지만 f도 하나씩 올라가므로 방정식의 균형이 다시 유지됩니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 547.82,
  "end": 557.02
 },
 {
  "input": "We even counted how many times they intersect with each other.",
  "translatedText": "따라서 잠재적으로 복잡한 그래프를 만들 때 v 마이너스 e 더하기 f는 항상 2로 고정됩니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 557.2,
  "end": 559.72
 },
 {
  "input": "But the key is to treat this as a new graph where those intersection points are themselves vertices, so the total number of vertices here would not be n, but n plus the n choose 4 total intersection points.",
  "translatedText": "이 방정식에는 오일러의 특성 공식이라는 이름이 있는데, 얼마 전에 이 방정식에 대한 영상을 만들었을 때 오일러가 독일어로 아름답다는 바보 같은 농담을 했는데, 오일러는 실제로 사람이고 독일어를 하는데 아름답다는 뜻이 아니라는 댓글이 꽤 많이 달렸던 기억이 납니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 560.24,
  "end": 571.78
 },
 {
  "input": "That in turn chops up all of our chords into a larger number of edges, it's much more than just n choose 2, and initially it might seem really annoying and tricky to think about exactly how much it's chopped them up, but one way you can think about it is that every intersection point takes what started as two separate lines and then turns it into four lines.",
  "translatedText": "어쨌든, 우리의 목적에 따라 평면 그래프가 공간을 잘라낸 영역의 수를 세는 도구를 제공합니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 572.06,
  "end": 591.1
 },
 {
  "input": "So in effect each intersection point adds two more edges.",
  "translatedText": "조금만 재배열하면 가장자리 수에서 정점 수를 뺀 값에 2를 더한 값이 됩니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 591.1,
  "end": 595.54
 },
 {
  "input": "For example look at this simple diagram where we have three lines and two intersection points.",
  "translatedText": "이 경우 무한한 바깥쪽 영역은 신경 쓰지 않으므로 대신 e 마이너스 v 더하기 1로 작성하겠습니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 596.62,
  "end": 601.36
 },
 {
  "input": "The total number of edges after the chopping would look like three plus two times two, or seven.",
  "translatedText": "처음에는 불평할 수도 있지만 오일러의 공식은 평면 그래프에만 적용되고 우리의 경우 선이 서로 절대적으로 교차하기 때문에 이 경우 오일러의 공식을 사용할 수 없습니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 602.02,
  "end": 607.58
 },
 {
  "input": "If you had four lines that intersected at three separate points then the total number of little lines after chopping would be four plus two times three, or ten.",
  "translatedText": "심지어 서로 교차하는 횟수까지 세어보았습니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 608.06,
  "end": 617.34
 },
 {
  "input": "And for the diagram we care about where we started off with n choose two separate lines and they're getting chopped up at n choose four points in the middle, you would end up with n choose two plus two times n choose four edges.",
  "translatedText": "하지만 핵심은 이 그래프를 새로운 그래프로 취급하는 것인데, 교차점 자체가 정점이므로 여기서 정점의 총 개수는 n이 아니라 n에 n을 더한 개수가 총 4개의 교차점을 선택하게 됩니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 617.34,
  "end": 630.14
 },
 {
  "input": "And actually there are a few more than that, because we're including the circle we also need to count the n different arcs that sit on the outside of this diagram.",
  "translatedText": "이는 모든 코드를 더 많은 수의 가장자리로 잘라내는 것으로, 단순히 2를 선택하는 것 이상의 의미를 가지며, 처음에는 코드를 정확히 얼마나 잘랐는지 생각하기가 정말 귀찮고 까다로워 보일 수 있지만, 한 가지 방법으로 생각할 수 있는 것은 모든 교차점이 두 개의 개별 선으로 시작하여 네 개의 선으로 바뀐다고 생각하면 됩니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 630.68,
  "end": 638.56
 },
 {
  "input": "So with all of that you have the information you need to answer the original question.",
  "translatedText": "따라서 사실상 각 교차점은 두 개의 가장자리를 더 추가합니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 639.34,
  "end": 643.56
 },
 {
  "input": "Pulling up our variant of Euler's formula that counts the number of regions we'll plug in the expression for the number of vertices which is n plus the n choose four intersection points, and you also plug in the slightly larger expression for the new number of edges n choose two plus two times n choose four plus n, and the expression has a lot of nice cancellation, for example you are adding an n but also subtracting an n and you're adding two copies of n choose four but subtracting another copy of n choose four and when all the dust settles the answer to the question is one plus n choose two plus n choose four.",
  "translatedText": "예를 들어 세 개의 선과 두 개의 교차점이 있는 이 간단한 다이어그램을 살펴보세요.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 643.78,
  "end": 676.76
 },
 {
  "input": "On the one hand you're done you answered the question.",
  "translatedText": "잘라낸 후의 총 가장자리 수는 3 더하기 2 곱하기 2 또는 7처럼 보일 것입니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 676.76,
  "end": 679.38
 },
 {
  "input": "I give you one of these circle diagrams with n points on the boundary and using this formula you can figure out how many regions the circle has been cut into.",
  "translatedText": "세 지점에서 교차하는 4개의 선이 있다면 잘라낸 후의 작은 선의 총 개수는 4에 2를 곱한 3, 즉 10이 됩니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 679.94,
  "end": 687.82
 },
 {
  "input": "But of course we're not really done because that doesn't scratch the itch.",
  "translatedText": "그리고 우리가 관심 있는 다이어그램의 경우, n개의 개별 선으로 시작하여 중간에서 n개의 선이 잘려나가는 경우, 결국 n개의 선과 2번의 n개의 선이 더해져 총 4개의 가장자리가 됩니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 688.58,
  "end": 691.2
 },
 {
  "input": "Why is it the case that this looks like powers of two and then falls short by just one?",
  "translatedText": "실제로는 그보다 몇 개 더 있는데, 원을 포함하기 때문에 이 다이어그램의 바깥쪽에 있는 다른 호의 개수도 세어봐야 합니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 691.62,
  "end": 696.18
 },
 {
  "input": "It's not just a coincidence and the key to answering it is to consider Pascal's triangle.",
  "translatedText": "이 모든 것을 통해 원래 질문에 답하는 데 필요한 정보를 얻었으며, 영역 수를 계산하는 오일러 공식의 변형을 가져와서 정점 수에 대한 표현식인 n과 n 선택 4 교차점을 더하고 새로운 가장자리 수에 대한 약간 더 큰 표현식도 연결합니다, n 선택 2 더하기 2 곱하기 n 선택 4 더하기 n, 이 표현식에는 예를 들어 n을 더하지만 n을 빼고, n 선택 4의 복사본 두 개를 더하지만 다른 복사본을 빼고, 모든 먼지가 해결되면 질문에 대한 답은 1 더하기 n 선택 2 더하기 n 선택 4입니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 696.6,
  "end": 701.0
 },
 {
  "input": "You know this triangle, it's the one where each term looks like a sum of the two different terms above it and there are basically two facts we need to bring in about this triangle.",
  "translatedText": "한편으로는 질문에 대한 답변이 끝났습니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 701.7,
  "end": 709.92
 },
 {
  "input": "The first is that every term inside this triangle looks like n choose k for some value of n and k.",
  "translatedText": "경계에 n개의 점이 있는 원 다이어그램 중 하나를 보여드리면 이 공식을 사용하여 원이 몇 개의 영역으로 잘려나갔는지 파악할 수 있습니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 710.52,
  "end": 717.02
 },
 {
  "input": "That is the answer to the question of how many ways can you select a subset of size k from a set of size n is visible within this triangle.",
  "translatedText": "물론 아직 끝나지 않았습니다. 아직 가려운 곳을 긁어주지 못했기 때문입니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 717.64,
  "end": 726.1
 },
 {
  "input": "The way to think about it is by indexing the rows and columns starting from zero.",
  "translatedText": "왜 2의 거듭제곱처럼 보이다가 1이 모자라는 경우가 발생하나요?",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 726.62,
  "end": 730.1
 },
 {
  "input": "For example if you count up to the 0 1 2 3 4 5th row and you count in to the 0 1 2 3rd element you see 10 and indeed 5 choose 3 is equal to 10.",
  "translatedText": "이는 단순한 우연이 아니며, 이에 대한 해답의 열쇠는 파스칼의 삼각형을 고려하는 것입니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 730.54,
  "end": 742.04
 },
 {
  "input": "If you've never seen this before and you want to know why it's true there's a really lovely argument.",
  "translatedText": "이 삼각형은 각 항이 그 위에 있는 두 개의 다른 항의 합처럼 보이는 삼각형으로, 이 삼각형에 대해 기본적으로 두 가지 사실을 알아야 합니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 742.86,
  "end": 747.1
 },
 {
  "input": "I'll leave it up as an exercise but moving on to the second thing that we need to know.",
  "translatedText": "첫 번째는 이 삼각형 안의 모든 항이 n과 k의 일부 값에 대해 n이 k를 선택하는 것처럼 보인다는 것입니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 747.22,
  "end": 751.7
 },
 {
  "input": "Notice what happens when you add up the rows of this triangle.",
  "translatedText": "즉, 크기 n의 집합에서 크기 k의 하위 집합을 몇 가지 방법으로 선택할 수 있는가라는 질문에 대한 답이 이 삼각형 안에 표시됩니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 752.08,
  "end": 754.88
 },
 {
  "input": "You get 1 and then 1 plus 1 is 2, 1 plus 2 plus 1 is 4, 1 plus 3 plus 3 plus 1 is 8 and as you continue on you always get powers of 2.",
  "translatedText": "이를 생각하는 방법은 0부터 시작하는 행과 열을 인덱싱하는 것입니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 755.54,
  "end": 765.4
 },
 {
  "input": "Maybe at this point you're a little gun shy about jumping to conclusions about powers of 2 too quickly but in this case it's a genuine pattern.",
  "translatedText": "예를 들어 0, 1, 2, 3, 4, 5번째 행까지 세고 0, 1, 2, 3번째 요소까지 세면 10이 표시됩니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 766.18,
  "end": 772.64
 },
 {
  "input": "There's no trickery being pulled and there are a few ways that you can think about why there should be powers of 2 here.",
  "translatedText": "실제로 5 선택 3은 10과 같습니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 772.74,
  "end": 778.5
 },
 {
  "input": "The one that I like is to think about how as you go from that first row to the next one it's like the number 1 is sort of donating two copies of itself into the next row.",
  "translatedText": "이 글을 본 적이 없는데 왜 그런지 알고 싶으시다면, 정말 멋진 논쟁이 있으니 연습 삼아 남겨두겠습니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 779.08,
  "end": 787.78
 },
 {
  "input": "Likewise as you go from the second row to the third each of those ones is donating two copies of itself to the next row and in general as you go from one row to the next each number donates two copies of itself to the one below.",
  "translatedText": "이제 두 번째로 알아야 할 사항으로 넘어가서, 이 삼각형의 행을 더하면 어떤 일이 일어나는지 살펴보세요.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 788.58,
  "end": 801.3
 },
 {
  "input": "So as you add up the totals for each of these rows it stands to reason that those totals double on each iteration.",
  "translatedText": "1을 얻으면 1 더하기 1은 2, 1 더하기 2 더하기 1은 4, 1 더하기 3 더하기 3 더하기 1은 8이 되고, 계속하면 항상 2의 제곱을 얻게 됩니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 801.92,
  "end": 807.82
 },
 {
  "input": "Circling back to our original question think about what this means.",
  "translatedText": "이 시점에서 2의 거듭제곱에 대해 너무 성급하게 결론을 내리는 것에 대해 약간 겁이 날 수도 있지만, 이 경우에는 진짜 패턴이며 속임수가 사용되지 않았습니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 808.86,
  "end": 812.08
 },
 {
  "input": "The answer to our question looked like 1 plus n choose 2 plus n choose 4.",
  "translatedText": "여기에 2의 거듭제곱이 있어야 하는 이유에 대해 생각해 볼 수 있는 몇 가지 방법이 있습니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 812.7,
  "end": 817.32
 },
 {
  "input": "In the context of Pascal's triangle you could think about that as adding up the 0th, 2nd and 4th terms inside some row of that triangle.",
  "translatedText": "하지만 제가 좋아하는 방법 중 하나는 첫 번째 줄에서 다음 줄로 넘어갈 때 숫자 1이 다음 줄에 두 장을 기부하는 것과 같다고 생각하는 것입니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 817.32,
  "end": 825.98
 },
 {
  "input": "For instance when n is equal to 5 it looks like adding up 1 plus 10 plus 5.",
  "translatedText": "마찬가지로 두 번째 줄에서 세 번째 줄로 넘어갈 때 각 1은 다음 줄에 두 개씩 기부하고, 일반적으로 한 줄에서 다음 줄로 넘어갈 때 각 숫자는 아래 줄에 두 개씩 기부합니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 826.8,
  "end": 831.12
 },
 {
  "input": "Now because each of those numbers is the sum of the two above it this is the same thing as adding up the first five elements in the previous row which in this case is adding up the entire previous row hence why it's a power of 2.",
  "translatedText": "따라서 이러한 각 행의 총계를 더하면 반복할 때마다 총계가 두 배가 되는 것은 당연합니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 831.7,
  "end": 845.08
 },
 {
  "input": "Same deal for all the numbers that are 5 or less.",
  "translatedText": "원래 질문으로 돌아가서 이것이 무엇을 의미하는지 생각해 보세요.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 845.08,
  "end": 847.72
 },
 {
  "input": "When you situate this formula inside Pascal's triangle and you relate it to the previous row what you're doing is adding up the entirety of that previous row.",
  "translatedText": "질문에 대한 답은 1 더하기 n 선택 2 더하기 n 선택 4입니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 848.16,
  "end": 856.42
 },
 {
  "input": "The point at which this breaks is for n equals 6 because in that case when you relate this to the previous row adding up the first five elements of that row it doesn't cover the whole thing.",
  "translatedText": "파스칼의 삼각형의 맥락에서 보면, 삼각형의 일부 행 안에 있는 0번째, 2번째, 4번째 항을 더하는 것으로 생각할 수 있습니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 857.32,
  "end": 867.26
 },
 {
  "input": "It falls short specifically by just one which is why we miss the power of 2 and why it falls short specifically by just one.",
  "translatedText": "예를 들어 n이 5인 경우 1 더하기 10 더하기 5를 더하는 것처럼 보입니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 867.52,
  "end": 874.96
 },
 {
  "input": "Also notice what happens when we plug in n equals 10.",
  "translatedText": "이제 각 숫자는 그 위에 있는 두 숫자의 합이므로 이전 행의 처음 5개 요소를 더하는 것과 같으며, 이 경우 이전 행 전체를 더하는 것이므로 2의 거듭제곱이 됩니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 875.68,
  "end": 878.36
 },
 {
  "input": "Looking down at the 10th row and relating those terms to the previous one adding the first five elements of the ninth row is exactly half of that row and because the triangle is symmetric this means that when you add them up you get exactly half of a power of 2 which itself of course is another power of 2.",
  "translatedText": "5 이하의 모든 숫자에 대해서도 마찬가지입니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 878.74,
  "end": 895.7
 },
 {
  "input": "And as a challenge problem for you I don't actually know if this is the last time that you'll ever see a power of 2.",
  "translatedText": "이 공식을 파스칼의 삼각형 안에 넣고 이전 행과 연관시키면 이전 행 전체를 더하는 것입니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 896.24,
  "end": 901.66
 },
 {
  "input": "Maybe one of you out there who's cleverer with diaphantine equations than I am can come up with some clever proof.",
  "translatedText": "이 부분이 끊어지는 지점은 n이 6인 경우인데, 이 경우 이전 행과 연관시켜 해당 행의 처음 5개의 요소를 더하면 전체가 포함되지 않기 때문입니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 902.18,
  "end": 907.06
 },
 {
  "input": "Stepping back to summarize we started by counting the total number of chords and the total number of intersection points which by thinking about the right associations is the same as computing n choose 2 and n choose 4.",
  "translatedText": "구체적으로 1이 부족하기 때문에 2의 힘을 놓치고, 구체적으로 1이 부족하기 때문에 2의 힘을 놓치는 것입니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 909.34,
  "end": 921.14
 },
 {
  "input": "Bringing in Euler's formula this let us get an exact closed form expression for the number of regions inside the circle.",
  "translatedText": "또한 n을 10으로 연결하면 어떤 일이 발생하는지 살펴보세요.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 921.52,
  "end": 927.84
 },
 {
  "input": "Then connecting that with Pascal's triangle gives us a very visceral connection with the powers of 2 and why they break when they do.",
  "translatedText": "10번째 행을 내려다보고 이 항들을 이전 행과 관련지어 보면, 9번째 행의 처음 5개의 원소를 더하면 그 행의 정확히 절반이 되고, 삼각형은 대칭이므로 이를 더하면 2의 거듭제곱의 정확히 절반이 되며, 그 자체도 당연히 2의 또 다른 거듭제곱이 된다는 뜻입니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 927.84,
  "end": 935.8
 },
 {
  "input": "So yes, Moser's circle problem is a cautionary tale about being wary of patterns without proof but at a deeper level it also tells us that what's sometimes chalked up to be coincidence still leaves room for satisfying understandings.",
  "translatedText": "그리고 여러분에게 도전 과제로, 2의 거듭제곱을 보는 것이 이번이 마지막일지 모르겠습니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 937.28,
  "end": 949.86
 }
]