[
 {
  "input": "This is a very famous cautionary tale in math, known as Moser's circle problem.",
  "translatedText": "이것은 모저의 원 문제(Moser's Circle Problem)로 알려진 수학에서 매우 유명한 경고 이야기입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 0.0,
  "end": 4.26
 },
 {
  "input": "Some of you may have seen this before, but what I want to do here is really explain what's going on.",
  "translatedText": "여러분 중 일부는 이전에 이것을 보았을 수도 있지만 여기서 하고 싶은 것은 실제로 무슨 일이 일어나고 있는지 설명하는 것입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 4.78,
  "end": 9.08
 },
 {
  "input": "The way this starts is we take a circle and put two points on that circle and connect them with a line, that is a chord of the circle, and note that it divides the circle into two different regions.",
  "translatedText": "이것이 시작되는 방식은 원을 선택하고 그 원 위에 두 점을 놓고 이를 선, 즉 원의 현으로 연결하는 것입니다. 그리고 이것이 원을 두 개의 서로 다른 영역으로 나누는 것에 주목합니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 9.74,
  "end": 20.06
 },
 {
  "input": "If I add a third point and then connect that to the previous two points with two more chords, then these lines all divide the circle into four separate regions.",
  "translatedText": "세 번째 점을 추가한 다음 이를 두 개의 현으로 이전 두 점에 연결하면 이 선은 모두 원을 네 개의 별도 영역으로 나눕니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 20.66,
  "end": 29.26
 },
 {
  "input": "Then if you add a fourth point and connect that to the previous three, and you play the same game, you count up how many regions has this cut the circle into, you end up with eight.",
  "translatedText": "그런 다음 네 번째 점을 추가하고 이를 이전 세 개에 연결하고 동일한 게임을 플레이하면 이것이 원을 자르는 영역 수를 세어 결국 8개가 됩니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 29.26,
  "end": 38.94
 },
 {
  "input": "Add a fifth point to the circle, connect it to the previous four, count up the total number of regions, and if you're careful with your counting, you'll get a total of sixteen.",
  "translatedText": "원에 다섯 번째 점을 추가하고 이전 4개에 연결한 다음 총 지역 수를 세어보세요. 주의 깊게 계산하면 총 16개가 됩니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 39.54,
  "end": 48.14
 },
 {
  "input": "Naturally, you can guess what might come next, but would you bet your life on it?",
  "translatedText": "당연히 다음에 무슨 일이 일어날지 추측할 수 있지만, 그것에 인생을 걸겠습니까?",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 48.96,
  "end": 52.28
 },
 {
  "input": "Add a sixth point, connect it to all the previous ones, and if you carefully count up all the different regions, you end up not with the power of two you might have expected, but just one shy of it.",
  "translatedText": "여섯 번째 점을 추가하고 이를 이전의 모든 점에 연결한 다음 모든 다른 영역을 주의 깊게 세어 보면 예상했던 2의 거듭제곱이 아니라 단 한 점의 부끄러움만 남는 결과를 얻게 됩니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 52.54,
  "end": 62.66
 },
 {
  "input": "Some of you might be raising your hand saying, doesn't it depend on where we put the points?",
  "translatedText": "여러분 중에는 포인트를 어디에 두느냐에 따라 달라지지 않느냐고 손을 들고 계신 분들도 계실 것입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 64.04,
  "end": 67.96
 },
 {
  "input": "For example, watch how this middle region disappears if I place everything nice and symmetrically around the circle.",
  "translatedText": "예를 들어, 모든 것을 원 주위에 대칭적으로 멋지게 배치하면 이 중간 영역이 어떻게 사라지는지 살펴보세요.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 68.86,
  "end": 74.1
 },
 {
  "input": "So yes, it does depend, but we're going to consider the cases where you never have any three lines intersecting with each other.",
  "translatedText": "그렇습니다. 상황에 따라 다르지만 세 개의 선이 서로 교차하지 않는 경우를 고려해 보겠습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 74.32,
  "end": 80.3
 },
 {
  "input": "This would be the generic case if you just choose n random points, almost certainly you'll never have three lines coincide, but setting aside the technical nuances, the problem is such a tease, it looks so convincingly like powers of two until it just barely breaks.",
  "translatedText": "n개의 무작위 점을 선택하면 일반적인 경우가 될 것입니다. 거의 확실하게 세 개의 선이 일치하지 않을 것입니다. 그러나 기술적인 뉘앙스를 제쳐두고 문제는 정말 애타게 보입니다. 거의 깨지지 않습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 80.54,
  "end": 93.54
 },
 {
  "input": "And I have such a strange soft spot for this particular question, when I was younger I wrote a poem about it and also a song, and on the one hand it's kind of silly because this is just one example of what the mathematician Richard Guy called the strong law of small numbers, summed up in the phrase, there aren't enough small numbers to meet the many demands made of them.",
  "translatedText": "그리고 저는 이 특별한 질문에 대해 매우 묘한 애착을 가지고 있습니다. 제가 어렸을 때 저는 그것에 관한 시와 노래도 썼습니다. 한편으로는 그것은 다소 어리석습니다. 왜냐하면 이것은 수학자 Richard Guy가 말한 것의 한 예일 뿐이기 때문입니다. 소수의 강력한 법칙은 다음과 같이 요약됩니다. 즉, 많은 수요를 충족시킬 만큼 작은 수가 충분하지 않다는 것입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 93.92,
  "end": 112.0
 },
 {
  "input": "But I think what I really like about this problem is that if you sit down to try to work out what is the real pattern, what's actually going on here, one, it's just a really good exercise in problem solving, so it makes for a nice lesson right here, but also it's not just a coincidence that it starts off being powers of two, there's a very good reason this happens, and it's also not a coincidence that you seemingly randomly hit another power of two a little bit later on the tenth iteration.",
  "translatedText": "하지만 제가 이 문제에 대해 정말 좋아하는 점은 실제 패턴이 무엇인지, 즉 여기서 실제로 무슨 일이 일어나고 있는지 알아내기 위해 앉아서 노력한다면 문제 해결에 있어서 정말 좋은 연습이 될 수 있다는 것입니다. 여기서 좋은 교훈을 얻습니다. 하지만 그것이 2의 거듭제곱으로 시작하는 것은 단순한 우연이 아닙니다. 이런 일이 발생하는 데는 아주 타당한 이유가 있으며, 조금 나중에 무작위로 또 다른 2의 거듭제곱에 도달하는 것처럼 보이는 것도 우연이 아닙니다. 열 번째 반복.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 112.8,
  "end": 136.92
 },
 {
  "input": "So we've got this pattern, and what you want to find is what function describes it.",
  "translatedText": "그래서 우리는 이 패턴을 얻었고, 여러분이 찾고 싶은 것은 어떤 함수가 그것을 설명하는지입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 142.1,
  "end": 146.3
 },
 {
  "input": "If you put n points on the boundary of a circle, and you connect them with all the possible chords, and you count how many regions the circle has been cut into, if the answer isn't a power of two, what is it?",
  "translatedText": "원의 경계에 n개의 점을 놓고 이를 가능한 모든 현으로 연결하고 원이 몇 개의 영역으로 잘려졌는지 세어본다면 답이 2의 거듭제곱이 아니라면 그것은 무엇입니까?",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 146.54,
  "end": 156.78
 },
 {
  "input": "What function of n should we plug in?",
  "translatedText": "n의 어떤 기능을 연결해야 할까요?",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 156.98,
  "end": 158.66
 },
 {
  "input": "As always with math, problem solving rule number one if you're stuck, is to try solving easier questions somehow related to the problem at hand.",
  "translatedText": "항상 수학에서 그렇듯이, 막혔을 때 문제 해결 규칙 첫 번째는 당면한 문제와 관련된 더 쉬운 문제를 해결하려고 노력하는 것입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 159.34,
  "end": 167.14
 },
 {
  "input": "It helps you get a foothold, and sometimes those answers are helpful in the final question.",
  "translatedText": "이는 발판을 마련하는 데 도움이 되며, 때로는 이러한 답변이 최종 질문에 도움이 되기도 합니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 167.48,
  "end": 171.26
 },
 {
  "input": "In this case, two warm-up questions that come to mind are, how many total chords are there in this diagram, and at how many points within the circle do those chords intersect each other?",
  "translatedText": "이 경우 마음에 떠오르는 두 가지 준비 질문은 이 다이어그램에 총 현이 몇 개 있는지, 그리고 해당 현이 원 내에서 몇 개의 지점에서 서로 교차하는지입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 171.72,
  "end": 181.5
 },
 {
  "input": "The first question is relatively friendly, every one of those chords corresponds uniquely with a pair of points on the circle.",
  "translatedText": "첫 번째 질문은 상대적으로 친숙합니다. 모든 화음은 원 위의 한 쌍의 점과 고유하게 일치합니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 182.2,
  "end": 188.84
 },
 {
  "input": "So effectively what you want to do is count how many distinct pairs of points are there.",
  "translatedText": "그래서 효과적으로 당신이 원하는 것은 얼마나 많은 별개의 점 쌍이 있는지 계산하는 것입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 189.64,
  "end": 193.8
 },
 {
  "input": "There's a function that does this, it's called n choose two.",
  "translatedText": "이를 수행하는 함수가 있는데, n choose two라는 함수입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 194.3,
  "end": 196.98
 },
 {
  "input": "By definition, this counts the number of distinct pairs that you can choose from a set of n items, where order doesn't matter.",
  "translatedText": "정의에 따르면 이는 순서가 중요하지 않은 n개 항목 집합에서 선택할 수 있는 고유 쌍의 수를 계산합니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 197.42,
  "end": 204.34
 },
 {
  "input": "To calculate it, the way you often think about it is that you have n choices for what your first item should be, and then you have n minus one options for what that second item should be, but simply multiplying those would over count, since for a given pair you would have two distinct ways to arrive at that pair.",
  "translatedText": "이를 계산하기 위해 흔히 생각하는 방식은 첫 번째 항목이 무엇이어야 하는지에 대한 n개의 선택 사항이 있고 두 번째 항목이 무엇이어야 하는지에 대한 n - 1 옵션이 있지만 단순히 이를 곱하면 너무 많이 계산된다는 것입니다. 주어진 쌍에 대해 해당 쌍에 도달하는 두 가지 별개의 방법이 있습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 205.0,
  "end": 222.14
 },
 {
  "input": "And remember, we don't care about order.",
  "translatedText": "그리고 우리는 순서에 관심이 없다는 것을 기억하십시오.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 222.68,
  "end": 224.16
 },
 {
  "input": "To account for this you divide by two.",
  "translatedText": "이를 설명하기 위해 2로 나눕니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 224.74,
  "end": 226.42
 },
 {
  "input": "So for example, seven choose two would look like seven times six divided by two, which is seven times three, or twenty-one, and if you count up the number of distinct pairs of seven items, there are indeed twenty-one of them.",
  "translatedText": "예를 들어, 7이 2를 선택하면 7 곱하기 6을 2로 나눈 값, 즉 7 곱하기 3, 즉 21처럼 보일 것입니다. 그리고 7개 항목의 서로 다른 쌍의 수를 세어보면 실제로 21개가 있습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 226.42,
  "end": 239.86
 },
 {
  "input": "Counting the number of intersection points in the diagram is a little bit trickier.",
  "translatedText": "다이어그램에서 교차점 수를 계산하는 것은 약간 까다롭습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 241.4,
  "end": 244.94
 },
 {
  "input": "One idea might be that it should be the number of pairs of chords, since every intersection point comes from two different chords.",
  "translatedText": "한 가지 아이디어는 모든 교차점이 두 개의 서로 다른 코드에서 나오므로 코드 쌍의 수여야 한다는 것입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 245.34,
  "end": 252.46
 },
 {
  "input": "However, that would not quite be right, because the association is not unique.",
  "translatedText": "그러나 연관성이 고유하지 않기 때문에 이는 옳지 않습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 253.02,
  "end": 256.7
 },
 {
  "input": "You can find a pair of chords that don't intersect within the circle.",
  "translatedText": "원 내에서 교차하지 않는 화음 쌍을 찾을 수 있습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 257.1,
  "end": 260.26
 },
 {
  "input": "As I said, it's a little bit tricky.",
  "translatedText": "내가 말했듯이 조금 까다 롭습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 260.98,
  "end": 262.24
 },
 {
  "input": "I'd encourage you to try to pause and think about it for yourself, and if you do that, you give yourself a moment, maybe if you're a little bit lucky, here's one thing you might notice.",
  "translatedText": "잠시 멈춰서 스스로 생각해보라고 권하고 싶습니다. 그렇게 한다면 잠시 시간을 내어 보세요. 운이 조금 좋다면 여기에서 알아차릴 수 있는 한 가지 사항이 있습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 262.56,
  "end": 271.16
 },
 {
  "input": "Every intersection point is uniquely associated with a quadruplet of points on the exterior.",
  "translatedText": "모든 교차점은 외부에 있는 4개의 점과 고유하게 연결됩니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 271.9,
  "end": 276.92
 },
 {
  "input": "For a given quadruplet, you look at the two kind of diagonal chords between them, and those will intersect within the circle, and it goes the other way around.",
  "translatedText": "주어진 네쌍둥이에 대해 두 개의 대각선 사이에 있는 두 종류의 현을 보면 원 안에서 교차하고 반대 방향으로 회전합니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 277.72,
  "end": 285.08
 },
 {
  "input": "Every intersection point corresponds with some quadruplet of points.",
  "translatedText": "모든 교차점은 네 개의 점으로 이루어진 일부와 일치합니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 285.38,
  "end": 288.74
 },
 {
  "input": "So, what you want now is to count how many distinct ways can you choose four items given n total choices.",
  "translatedText": "이제 당신이 원하는 것은 총 n개의 선택 항목이 주어졌을 때 4개의 항목을 선택할 수 있는 서로 다른 방법의 수를 세는 것입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 290.66,
  "end": 297.46
 },
 {
  "input": "This is very similar to the previous question.",
  "translatedText": "이는 이전 질문과 매우 유사합니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 298.24,
  "end": 300.38
 },
 {
  "input": "The function that answers it is called n choose four, which by definition counts the number of quadruplets from a set of size n, and the way to calculate it is similar to what we saw before.",
  "translatedText": "이에 답하는 함수는 n choose four라고 불리며, 정의에 따라 크기 n 집합에서 네 쌍둥이의 수를 세고 이를 계산하는 방법은 이전에 본 것과 유사합니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 300.76,
  "end": 311.0
 },
 {
  "input": "You would think of having n choices for your first item, leaving you with n minus one choices for the next item, leaving you with n minus two choices for the third item, and n minus three choices for the last item.",
  "translatedText": "첫 번째 항목에 대해 n개의 선택권이 있고, 다음 항목에 대한 n-1개의 선택권이 있고, 세 번째 항목에 대한 n-2개의 선택권이 있고, 마지막 항목에 대한 n-3개의 선택권이 있다고 생각할 것입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 311.0,
  "end": 322.94
 },
 {
  "input": "That, however, would grossly overcount the total number, since all the different ways you can permute these four items would be counted separately.",
  "translatedText": "그러나 이 네 가지 항목을 치환할 수 있는 모든 다른 방법은 별도로 계산되기 때문에 총 개수를 너무 많이 계산하게 됩니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 323.8,
  "end": 331.18
 },
 {
  "input": "To account for that, you divide out by the extent to which you've overcounted, the number of permutations of four items, which looks like four factorial.",
  "translatedText": "이를 설명하기 위해 초과 계산한 정도에 따라 4개 항목의 순열 수를 나눕니다. 이는 4개의 계승처럼 보입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 331.64,
  "end": 339.32
 },
 {
  "input": "For example, if you calculate four choose four, everything cancels and you just get one, and indeed, there is a single intersection point in this diagram.",
  "translatedText": "예를 들어 4개를 선택하여 4개를 계산하면 모든 것이 취소되고 하나만 얻게 되며 실제로 이 다이어그램에는 교차점이 하나 있습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 340.12,
  "end": 349.14
 },
 {
  "input": "If you calculate six choose four, it works out to be 15, and if you look at this diagram and you count them all up, you would notice there are indeed 15 different intersection points.",
  "translatedText": "6개를 선택해 4개를 선택해 계산하면 15개가 됩니다. 이 다이어그램을 보고 모두 세어보면 실제로 15개의 서로 다른 교차점이 있다는 것을 알 수 있습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 349.8,
  "end": 360.5
 },
 {
  "input": "And even if you would never want to count it up by hand, if we had a diagram that has 100 distinct points on the exterior, and we drew all of the connecting lines, you can conclude that there have to be 100 choose four, or just about four million intersection points somewhere in the middle.",
  "translatedText": "그리고 손으로 세고 싶지 않더라도 외부에 100개의 서로 다른 점이 있는 다이어그램이 있고 모든 연결 선을 그렸다면 4개를 선택하여 100개가 있어야 한다고 결론을 내릴 수 있습니다. 중간 어딘가에 약 400만 개의 교차점이 있습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 361.32,
  "end": 376.94
 },
 {
  "input": "You've probably guessed this, but these are more than just warm-up questions.",
  "translatedText": "아마도 짐작하셨겠지만 이것은 단순한 준비 질문 그 이상입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 377.84,
  "end": 380.88
 },
 {
  "input": "They give us the necessary information to answer the question we care about.",
  "translatedText": "그들은 우리가 관심을 갖는 질문에 대답하는 데 필요한 정보를 제공합니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 381.14,
  "end": 384.6
 },
 {
  "input": "How many regions has the circle been cut into?",
  "translatedText": "원은 몇 개의 영역으로 잘려졌나요?",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 384.74,
  "end": 386.98
 },
 {
  "input": "The trick is to use a very nice little fact about planar graphs.",
  "translatedText": "비결은 평면 그래프에 대한 아주 좋은 작은 사실을 사용하는 것입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 387.4,
  "end": 390.62
 },
 {
  "input": "Here I'm using the word graph in the sense of a diagram that has nodes and lines connecting them, and what it means to be planar is that you can draw this diagram without any of the lines intersecting with each other.",
  "translatedText": "여기서는 노드와 노드를 연결하는 선이 있는 다이어그램이라는 의미로 그래프라는 단어를 사용하고 있습니다. 평면형이란 선이 서로 교차하지 않고 이 다이어그램을 그릴 수 있다는 의미입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 391.08,
  "end": 401.7
 },
 {
  "input": "In graph theory lingo, you typically call those nodes vertices and the lines connecting them edges, and the wonderful fact that we can leverage is that if you count up the number of vertices, and then you subtract the total number of edges, and then you consider the number of regions that this graph has cut the plane into, including that infinite outer region, then always, no matter what planar graph you started with, you get two.",
  "translatedText": "그래프 이론 용어에서는 일반적으로 이러한 노드를 정점이라고 부르며 이를 연결하는 선을 가장자리라고 부릅니다. 우리가 활용할 수 있는 놀라운 사실은 정점의 수를 세고 총 가장자리 수를 빼면 다음이 가능하다는 것입니다. 무한한 외부 영역을 포함하여 이 그래프가 평면을 잘라낸 영역의 수를 고려하면 어떤 평면 그래프로 시작하든 항상 두 개가 됩니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 402.28,
  "end": 425.3
 },
 {
  "input": "It's actually very fun.",
  "translatedText": "실제로는 매우 재미있습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 425.84,
  "end": 426.8
 },
 {
  "input": "Try this for yourself.",
  "translatedText": "직접 시도해 보세요.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 427.0,
  "end": 427.78
 },
 {
  "input": "Draw any graph, make sure the lines don't intersect, and then count the number of vertices, subtract the number of edges, and count the number of regions that it's cut the plane into, and no matter what diagram you chose, the answer always works out to be two.",
  "translatedText": "그래프를 그리고 선이 교차하지 않는지 확인한 다음 꼭지점 수를 세고 모서리 수를 뺀 다음 평면을 자르는 영역 수를 세어보세요. 어떤 다이어그램을 선택하든 답은 됩니다. 항상 둘이 되는 것 같아요.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 428.12,
  "end": 442.16
 },
 {
  "input": "More commonly you would see this written as v minus e plus f is equal to two, since originally the equation described the vertices, edges, and faces of three-dimensional polyhedra, and if you want to know why this magical fact is true, you can think about building up your graph from a trivial case where you have a single node and no edges.",
  "translatedText": "더 일반적으로 v 빼기 e 더하기 f는 2와 같다는 것을 볼 수 있습니다. 원래 방정식은 3차원 다면체의 꼭지점, 모서리 및 면을 설명했기 때문입니다. 그리고 이 마법 같은 사실이 왜 사실인지 알고 싶다면, 단일 노드가 있고 가장자리가 없는 사소한 경우에서 그래프를 구축하는 것에 대해 생각할 수 있습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 443.18,
  "end": 462.82
 },
 {
  "input": "So v would be equal to one, f would also be equal to one because of that infinite outer region, and e is zero, so the equation is obviously true.",
  "translatedText": "따라서 v는 1과 같을 것이고, 무한한 외부 영역 때문에 f도 1과 같을 것이고, e는 0이므로 방정식은 분명히 참입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 463.46,
  "end": 471.96
 },
 {
  "input": "Then if you build up your graph one edge at a time, one thing that could happen is that for each new edge you introduce a new vertex, so e goes up by one, but v also goes up by one, leaving the equation balanced.",
  "translatedText": "그런 다음 그래프를 한 번에 하나씩 모서리로 구성하면 발생할 수 있는 한 가지 일은 각각의 새 모서리에 대해 새 꼭지점을 도입하므로 e도 하나씩 올라가고 v도 하나씩 올라가서 방정식이 균형을 유지하게 된다는 것입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 472.6,
  "end": 484.78
 },
 {
  "input": "But if a new edge doesn't correspond to a new vertex, meaning it's connecting to a pre-existing vertex, that means that it's enclosed a new region of space, so e goes up by one, but f also goes up by one, which again leaves the equation balanced.",
  "translatedText": "그러나 새 모서리가 새 꼭지점에 해당하지 않으면, 즉 기존 꼭지점에 연결되어 있다는 의미이며, 이는 새 공간 영역을 포함한다는 의미이므로 e도 하나씩 올라가고 f도 하나씩 올라갑니다. 이는 다시 방정식의 균형을 유지합니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 485.5,
  "end": 499.8
 },
 {
  "input": "So as you build up some potentially complicated graph, v minus e plus f always stays fixed at two.",
  "translatedText": "따라서 잠재적으로 복잡한 그래프를 만들 때 v - e + f는 항상 2로 고정되어 있습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 500.92,
  "end": 507.14
 },
 {
  "input": "This equation has a name, it's called Euler's characteristic formula, and I remember when I made a video about this a while ago I had some dumb joke in there about Euler's being German for beautiful, and there were a decent number of comments that were like, you know, Euler is actually a person, I speak German, and it doesn't mean beautiful.",
  "translatedText": "이 방정식에는 이름이 있는데 오일러의 특성 공식이라고 합니다. 제가 얼마 전에 이에 대한 비디오를 만들었을 때 오일러가 독일어로 '아름답다'는 뜻이라는 멍청한 농담을 했던 기억이 나네요. 댓글이 상당히 많았습니다. , 아시다시피 오일러는 실제로 사람입니다. 저는 독일어를 사용하며 그것이 아름답다는 의미는 아닙니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 507.6,
  "end": 523.84
 },
 {
  "input": "Anyway, for our purposes it gives us a tool for counting the number of regions that a planar graph has cut space into.",
  "translatedText": "어쨌든, 우리의 목적을 위해 평면 그래프가 공간을 잘라낸 영역 수를 계산하는 도구를 제공합니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 524.58,
  "end": 531.24
 },
 {
  "input": "Rearranging a little, you would take the number of edges minus the number of vertices plus two.",
  "translatedText": "조금 재정렬하면 모서리 수에서 정점 수를 뺀 값에 2를 더한 값을 취하게 됩니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 531.72,
  "end": 536.54
 },
 {
  "input": "This is exactly the tool that we want to understand our circle question, although in that case we don't care about the infinite outer region, so instead I'll write this as e minus v plus one.",
  "translatedText": "이것은 정확히 우리가 원 질문을 이해하기 위한 도구입니다. 비록 이 경우 우리는 무한한 외부 영역에 관심이 없지만 대신 e - v + 1로 쓸 것입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 537.02,
  "end": 547.02
 },
 {
  "input": "And at first you might complain, but we can't use Euler's formula in this case, because it only applies to planar graphs, and in our case the lines absolutely intersect with each other.",
  "translatedText": "처음에는 불평할 수도 있지만 이 경우에는 오일러의 공식을 사용할 수 없습니다. 왜냐하면 이 공식은 평면 그래프에만 적용되고 우리의 경우 선은 서로 절대적으로 교차하기 때문입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 547.82,
  "end": 557.02
 },
 {
  "input": "We even counted how many times they intersect with each other.",
  "translatedText": "우리는 그들이 서로 몇 번이나 교차하는지까지 세었습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 557.2,
  "end": 559.72
 },
 {
  "input": "But the key is to treat this as a new graph where those intersection points are themselves vertices, so the total number of vertices here would not be n, but n plus the n choose 4 total intersection points.",
  "translatedText": "그러나 핵심은 이것을 교차점 자체가 꼭지점인 새로운 그래프로 처리하는 것입니다. 따라서 여기서 총 꼭지점 수는 n이 아니라 n 더하기 n이 총 4개의 교차점을 선택하는 것입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 560.24,
  "end": 571.78
 },
 {
  "input": "That in turn chops up all of our chords into a larger number of edges, it's much more than just n choose 2, and initially it might seem really annoying and tricky to think about exactly how much it's chopped them up, but one way you can think about it is that every intersection point takes what started as two separate lines and then turns it into four lines.",
  "translatedText": "그러면 모든 코드가 더 많은 수의 가장자리로 잘립니다. 이는 단순히 n이 2를 선택하는 것보다 훨씬 더 많은 일이며, 처음에는 코드를 얼마나 잘랐는지 정확히 생각하는 것이 정말 짜증나고 까다로워 보일 수 있지만 한 가지 방법으로 할 수 있습니다. 모든 교차점은 두 개의 개별 선으로 시작된 것을 취한 다음 네 개의 선으로 바꾸는 것입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 572.06,
  "end": 591.1
 },
 {
  "input": "So in effect each intersection point adds two more edges.",
  "translatedText": "따라서 실제로 각 교차점은 두 개의 가장자리를 더 추가합니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 591.1,
  "end": 595.54
 },
 {
  "input": "For example look at this simple diagram where we have three lines and two intersection points.",
  "translatedText": "예를 들어 세 개의 선과 두 개의 교차점이 있는 이 간단한 다이어그램을 살펴보세요.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 596.62,
  "end": 601.36
 },
 {
  "input": "The total number of edges after the chopping would look like three plus two times two, or seven.",
  "translatedText": "잘린 후 모서리의 총 개수는 3 더하기 2 곱하기 2 또는 7처럼 보입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 602.02,
  "end": 607.58
 },
 {
  "input": "If you had four lines that intersected at three separate points then the total number of little lines after chopping would be four plus two times three, or ten.",
  "translatedText": "세 개의 개별 지점에서 교차하는 네 개의 선이 있다면 잘린 후의 작은 선의 총 개수는 4 더하기 2 곱하기 3, 즉 10이 될 것입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 608.06,
  "end": 617.34
 },
 {
  "input": "And for the diagram we care about where we started off with n choose two separate lines and they're getting chopped up at n choose four points in the middle, you would end up with n choose two plus two times n choose four edges.",
  "translatedText": "그리고 다이어그램에서 우리는 n이 두 개의 별도 선을 선택하여 시작한 위치에 관심이 있고 n은 중간에 있는 4개의 점을 선택하여 잘려지고, 결국 n은 2 더하기 2번을 선택하고 n은 4개의 모서리를 선택하게 됩니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 617.34,
  "end": 630.14
 },
 {
  "input": "And actually there are a few more than that, because we're including the circle we also need to count the n different arcs that sit on the outside of this diagram.",
  "translatedText": "그리고 실제로는 그보다 몇 가지가 더 있습니다. 원을 포함하고 있기 때문에 이 다이어그램 외부에 있는 n개의 서로 다른 호도 계산해야 합니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 630.68,
  "end": 638.56
 },
 {
  "input": "So with all of that you have the information you need to answer the original question.",
  "translatedText": "따라서 이 모든 정보를 통해 원래 질문에 답하는 데 필요한 정보를 얻을 수 있습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 639.34,
  "end": 643.56
 },
 {
  "input": "Pulling up our variant of Euler's formula that counts the number of regions we'll plug in the expression for the number of vertices which is n plus the n choose four intersection points, and you also plug in the slightly larger expression for the new number of edges n choose two plus two times n choose four plus n, and the expression has a lot of nice cancellation, for example you are adding an n but also subtracting an n and you're adding two copies of n choose four but subtracting another copy of n choose four and when all the dust settles the answer to the question is one plus n choose two plus n choose four.",
  "translatedText": "영역 수를 계산하는 오일러 공식의 변형을 풀면 정점 수에 대한 표현식을 연결합니다. n 더하기 n은 4개의 교차점을 선택하고 새로운 수에 대해 약간 더 큰 표현식도 연결합니다. 모서리 n은 2 더하기 2번을 선택합니다. n은 4와 n을 선택하고 표현식에는 많은 좋은 취소가 있습니다. 예를 들어 n을 추가하면서 n도 빼고 n의 사본 2개를 추가하고 4를 선택하고 다른 사본을 뺍니다. n 중 4개를 선택하고 모든 문제가 해결되면 질문에 대한 답은 1 더하기 n은 2를 선택하고 n은 4를 선택합니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 643.78,
  "end": 676.76
 },
 {
  "input": "On the one hand you're done you answered the question.",
  "translatedText": "한편으로는 질문에 대한 답변이 완료되었습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 676.76,
  "end": 679.38
 },
 {
  "input": "I give you one of these circle diagrams with n points on the boundary and using this formula you can figure out how many regions the circle has been cut into.",
  "translatedText": "경계에 n개의 점이 있는 원 다이어그램 중 하나를 제공하고 이 공식을 사용하면 원이 몇 개의 영역으로 잘렸는지 파악할 수 있습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 679.94,
  "end": 687.82
 },
 {
  "input": "But of course we're not really done because that doesn't scratch the itch.",
  "translatedText": "하지만 물론 가려운 부분이 긁히지 않기 때문에 아직 끝난 것은 아닙니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 688.58,
  "end": 691.2
 },
 {
  "input": "Why is it the case that this looks like powers of two and then falls short by just one?",
  "translatedText": "이것이 2의 거듭제곱처럼 보이다가 단 1만큼 부족한 이유는 무엇입니까?",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 691.62,
  "end": 696.18
 },
 {
  "input": "It's not just a coincidence and the key to answering it is to consider Pascal's triangle.",
  "translatedText": "이는 단순한 우연이 아니며 이에 답하는 열쇠는 파스칼의 삼각형을 고려하는 것입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 696.6,
  "end": 701.0
 },
 {
  "input": "You know this triangle, it's the one where each term looks like a sum of the two different terms above it and there are basically two facts we need to bring in about this triangle.",
  "translatedText": "이 삼각형을 아시죠. 각 항이 위에 있는 두 개의 서로 다른 항의 합처럼 보이고 기본적으로 이 삼각형에 대해 알아야 할 두 가지 사실이 있습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 701.7,
  "end": 709.92
 },
 {
  "input": "The first is that every term inside this triangle looks like n choose k for some value of n and k.",
  "translatedText": "첫 번째는 이 삼각형 안의 모든 항이 n과 k의 어떤 값에 대해 k를 선택하는 것처럼 보인다는 것입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 710.52,
  "end": 717.02
 },
 {
  "input": "That is the answer to the question of how many ways can you select a subset of size k from a set of size n is visible within this triangle.",
  "translatedText": "이는 이 삼각형 내에 표시되는 크기 n 집합에서 크기 k 부분 집합을 선택할 수 있는 방법의 수에 대한 질문에 대한 답입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 717.64,
  "end": 726.1
 },
 {
  "input": "The way to think about it is by indexing the rows and columns starting from zero.",
  "translatedText": "그것에 대해 생각하는 방법은 0부터 시작하는 행과 열을 인덱싱하는 것입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 726.62,
  "end": 730.1
 },
 {
  "input": "For example if you count up to the 0 1 2 3 4 5th row and you count in to the 0 1 2 3rd element you see 10 and indeed 5 choose 3 is equal to 10.",
  "translatedText": "예를 들어 0 1 2 3 4 5번째 행까지 세고 0 1 2 3번째 요소까지 세면 10이 표시되고 실제로 5를 선택하면 3은 10과 같습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 730.54,
  "end": 742.04
 },
 {
  "input": "If you've never seen this before and you want to know why it's true there's a really lovely argument.",
  "translatedText": "이전에 이것을 본 적이 없고 그것이 왜 사실인지 알고 싶다면 정말 멋진 주장이 있습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 742.86,
  "end": 747.1
 },
 {
  "input": "I'll leave it up as an exercise but moving on to the second thing that we need to know.",
  "translatedText": "연습용으로 남겨두겠지만 우리가 알아야 할 두 번째 사항으로 넘어가겠습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 747.22,
  "end": 751.7
 },
 {
  "input": "Notice what happens when you add up the rows of this triangle.",
  "translatedText": "이 삼각형의 행을 더하면 어떤 일이 발생하는지 확인하세요.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 752.08,
  "end": 754.88
 },
 {
  "input": "You get 1 and then 1 plus 1 is 2, 1 plus 2 plus 1 is 4, 1 plus 3 plus 3 plus 1 is 8 and as you continue on you always get powers of 2.",
  "translatedText": "1을 얻은 다음 1 더하기 1은 2, 1 더하기 2 더하기 1은 4, 1 더하기 3 더하기 3 더하기 1은 8이고 계속 진행하면 항상 2의 거듭제곱을 얻습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 755.54,
  "end": 765.4
 },
 {
  "input": "Maybe at this point you're a little gun shy about jumping to conclusions about powers of 2 too quickly but in this case it's a genuine pattern.",
  "translatedText": "아마도 이 시점에서 당신은 2의 거듭제곱에 대해 너무 빨리 결론을 내리는 것에 대해 약간 부끄러워할 것입니다. 그러나 이 경우에는 그것은 진짜 패턴입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 766.18,
  "end": 772.64
 },
 {
  "input": "There's no trickery being pulled and there are a few ways that you can think about why there should be powers of 2 here.",
  "translatedText": "어떤 속임수도 사용하지 않으며 여기에 2의 거듭제곱이 있어야 하는 이유에 대해 생각할 수 있는 몇 가지 방법이 있습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 772.74,
  "end": 778.5
 },
 {
  "input": "The one that I like is to think about how as you go from that first row to the next one it's like the number 1 is sort of donating two copies of itself into the next row.",
  "translatedText": "제가 좋아하는 것은 첫 번째 행에서 다음 행으로 이동할 때 숫자 1이 자신의 복사본 두 개를 다음 행에 기부하는 것과 같다고 생각하는 것입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 779.08,
  "end": 787.78
 },
 {
  "input": "Likewise as you go from the second row to the third each of those ones is donating two copies of itself to the next row and in general as you go from one row to the next each number donates two copies of itself to the one below.",
  "translatedText": "마찬가지로 두 번째 행에서 세 번째 행으로 갈 때 각 숫자는 다음 행에 자신의 복사본 두 개를 기부하고 일반적으로 한 행에서 다음 행으로 이동할 때 각 숫자는 아래 행에 자신의 복사본 두 개를 기부합니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 788.58,
  "end": 801.3
 },
 {
  "input": "So as you add up the totals for each of these rows it stands to reason that those totals double on each iteration.",
  "translatedText": "따라서 각 행의 합계를 합산하면 반복할 때마다 해당 합계가 두 배가 되는 것으로 보입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 801.92,
  "end": 807.82
 },
 {
  "input": "Circling back to our original question think about what this means.",
  "translatedText": "원래 질문으로 돌아가서 이것이 무엇을 의미하는지 생각해 보세요.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 808.86,
  "end": 812.08
 },
 {
  "input": "The answer to our question looked like 1 plus n choose 2 plus n choose 4.",
  "translatedText": "우리 질문에 대한 답은 1 더하기 n 선택 2 더하기 n 선택 4처럼 보였습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 812.7,
  "end": 817.32
 },
 {
  "input": "In the context of Pascal's triangle you could think about that as adding up the 0th, 2nd and 4th terms inside some row of that triangle.",
  "translatedText": "파스칼의 삼각형의 맥락에서 삼각형의 일부 행 내부에 0번째, 2번째, 4번째 항을 더하는 것으로 생각할 수 있습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 817.32,
  "end": 825.98
 },
 {
  "input": "For instance when n is equal to 5 it looks like adding up 1 plus 10 plus 5.",
  "translatedText": "예를 들어 n이 5일 때 1 더하기 10 더하기 5를 더한 것처럼 보입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 826.8,
  "end": 831.12
 },
 {
  "input": "Now because each of those numbers is the sum of the two above it this is the same thing as adding up the first five elements in the previous row which in this case is adding up the entire previous row hence why it's a power of 2.",
  "translatedText": "이제 각 숫자는 위의 두 숫자의 합이기 때문에 이전 행의 처음 5개 요소를 더하는 것과 동일합니다. 이 경우 이전 행 전체를 더하므로 2의 거듭제곱이 됩니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 831.7,
  "end": 845.08
 },
 {
  "input": "Same deal for all the numbers that are 5 or less.",
  "translatedText": "5 이하의 모든 숫자에 대해 동일한 거래가 이루어집니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 845.08,
  "end": 847.72
 },
 {
  "input": "When you situate this formula inside Pascal's triangle and you relate it to the previous row what you're doing is adding up the entirety of that previous row.",
  "translatedText": "이 공식을 파스칼의 삼각형 안에 배치하고 이를 이전 행과 연관시키면 이전 행 전체를 더하는 것입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 848.16,
  "end": 856.42
 },
 {
  "input": "The point at which this breaks is for n equals 6 because in that case when you relate this to the previous row adding up the first five elements of that row it doesn't cover the whole thing.",
  "translatedText": "이것이 중단되는 지점은 n이 6인 경우입니다. 왜냐하면 이 경우 이전 행과 관련하여 해당 행의 처음 5개 요소를 더하면 전체를 포괄하지 않기 때문입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 857.32,
  "end": 867.26
 },
 {
  "input": "It falls short specifically by just one which is why we miss the power of 2 and why it falls short specifically by just one.",
  "translatedText": "구체적으로 단 1만큼 부족하기 때문에 2의 거듭제곱을 놓치고 특히 1만큼 부족한 것입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 867.52,
  "end": 874.96
 },
 {
  "input": "Also notice what happens when we plug in n equals 10.",
  "translatedText": "또한 n이 10과 같을 때 어떤 일이 일어나는지 주목하세요.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 875.68,
  "end": 878.36
 },
 {
  "input": "Looking down at the 10th row and relating those terms to the previous one adding the first five elements of the ninth row is exactly half of that row and because the triangle is symmetric this means that when you add them up you get exactly half of a power of 2 which itself of course is another power of 2.",
  "translatedText": "10번째 행을 내려다보고 해당 항을 이전 항목과 연관시키면 9번째 행의 처음 5개 요소를 더하는 것이 정확히 해당 행의 절반이 되며 삼각형이 대칭이기 때문에 이를 더하면 정확히 절반의 거듭제곱을 얻게 됩니다. 2의 거듭제곱은 물론 2의 또 다른 거듭제곱입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 878.74,
  "end": 895.7
 },
 {
  "input": "And as a challenge problem for you I don't actually know if this is the last time that you'll ever see a power of 2.",
  "translatedText": "그리고 여러분을 위한 도전 문제로서 저는 이것이 여러분이 2의 거듭제곱을 보게 될 마지막 시간인지 실제로는 알지 못합니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 896.24,
  "end": 901.66
 },
 {
  "input": "Maybe one of you out there who's cleverer with diaphantine equations than I am can come up with some clever proof.",
  "translatedText": "아마도 저보다 다이아판틴 방정식에 대해 더 영리한 여러분 중 한 분이 영리한 증거를 생각해 낼 수 있을 것입니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 902.18,
  "end": 907.06
 },
 {
  "input": "Stepping back to summarize we started by counting the total number of chords and the total number of intersection points which by thinking about the right associations is the same as computing n choose 2 and n choose 4.",
  "translatedText": "요약하기 위해 한 걸음 물러나서 우리는 총 화음 수와 총 교차점 수를 세는 것으로 시작했습니다. 이는 올바른 연관성에 대해 생각함으로써 n이 2를 선택하고 n이 4를 선택하는 것을 계산하는 것과 같습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 909.34,
  "end": 921.14
 },
 {
  "input": "Bringing in Euler's formula this let us get an exact closed form expression for the number of regions inside the circle.",
  "translatedText": "오일러의 공식을 도입하면 원 내부의 영역 수에 대한 정확한 닫힌 형식 표현을 얻을 수 있습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 921.52,
  "end": 927.84
 },
 {
  "input": "Then connecting that with Pascal's triangle gives us a very visceral connection with the powers of 2 and why they break when they do.",
  "translatedText": "그런 다음 이를 파스칼의 삼각형과 연결하면 2의 거듭제곱과 왜 깨질 때 깨지는지에 대한 매우 본능적인 연결을 얻을 수 있습니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 927.84,
  "end": 935.8
 },
 {
  "input": "So yes, Moser's circle problem is a cautionary tale about being wary of patterns without proof but at a deeper level it also tells us that what's sometimes chalked up to be coincidence still leaves room for satisfying understandings.",
  "translatedText": "그렇습니다. Moser의 원 문제는 증거 없는 패턴을 경계하는 것에 대한 경고적인 이야기입니다. 그러나 더 깊은 수준에서는 때때로 우연이라고 여겨지는 일이 여전히 만족스러운 이해의 여지를 남긴다는 것을 알려줍니다.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 937.28,
  "end": 949.86
 }
]