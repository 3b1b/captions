[
 {
  "input": "This is a very famous cautionary tale in math, known as Moser's circle problem.",
  "model": "nmt",
  "translatedText": "这是数学中一个非常著名的警示故事，被称为莫泽圆问题。",
  "time_range": [
   0.0,
   4.5600000000000005
  ]
 },
 {
  "input": "Some of you may have seen this before, but what I want to do here is really explain what's going on.",
  "model": "nmt",
  "translatedText": "你们中的一些人可能以前见过这个，但我在这里想做的是真正解释发生了什么。",
  "time_range": [
   4.5600000000000005,
   9.6
  ]
 },
 {
  "input": "The way this starts is we take a circle and put two points on that circle and connect them with a line, that is a chord of the circle, and note that it divides the circle into two different regions.",
  "model": "nmt",
  "translatedText": "首先，我们取一个圆，在该圆上放置两个 点，然后用一条线（即圆的弦）连接它们 ，并注意它将圆分为两个不同的区域。",
  "time_range": [
   9.6,
   20.64
  ]
 },
 {
  "input": "If I add a third point and then connect that to the previous two points with two more chords, then these lines all divide the circle into four separate regions.",
  "model": "nmt",
  "translatedText": "如果我添加第三个点，然后用另外两个弦将其连接到前 两个点，那么这些线都会将圆分成四个单独的区域。",
  "time_range": [
   20.64,
   29.68
  ]
 },
 {
  "input": "Then if you add a fourth point and connect that to the previous three, and you play the same game, you count up how many regions has this cut the circle into, you end up with eight.",
  "model": "nmt",
  "translatedText": "然后，如果您添加第四个点并将其与前三个点 连接起来，然后您玩相同的游戏，您计算出 该圆被切割成多少个区域，最终得到八个。",
  "time_range": [
   29.68,
   39.36
  ]
 },
 {
  "input": "Add a fifth point to the circle, connect it to the previous four, count up the total number of regions, and if you're careful with your counting, you'll get a total of sixteen.",
  "model": "nmt",
  "translatedText": "在圆上添加第五个点，将其与前四个 点连接起来，计算区域总数，如果 您仔细计算，总共会得到十六个。",
  "time_range": [
   39.36,
   48.72
  ]
 },
 {
  "input": "Naturally, you can guess what might come next, but would you bet your life on it?",
  "model": "nmt",
  "translatedText": "当然，你可以猜测接下来会发生什么，但你会赌上自己的生命吗？",
  "time_range": [
   48.72,
   52.4
  ]
 },
 {
  "input": "Add a sixth point, connect it to all the previous ones, and if you carefully count up all the different regions, you end up not with the power of two you might have expected, but just one shy of it.",
  "model": "nmt",
  "translatedText": "添加第六个点，将其与之前的所有点连接起来，如 果你仔细计算所有不同的区域，你最终得到的不是 你预期的 2 点的力量，而是只差 1 点。",
  "time_range": [
   52.4,
   63.92
  ]
 },
 {
  "input": "Some of you might be raising your hand saying, doesn't it depend on where we put the points?",
  "model": "nmt",
  "translatedText": "你们中有些人可能会举手说，这 不取决于我们把点放在哪里吗？",
  "time_range": [
   63.92,
   68.72
  ]
 },
 {
  "input": "For example, watch how this middle region disappears if I place everything nice and symmetrically around the circle.",
  "model": "nmt",
  "translatedText": "例如，如果我将所有东西都漂亮且对称地 围绕圆放置，请观察中间区域如何消失。",
  "time_range": [
   68.72,
   74.48
  ]
 },
 {
  "input": "So yes, it does depend, but we're going to consider the cases where you never have any three lines intersecting with each other.",
  "model": "nmt",
  "translatedText": "所以，是的，这确实取决于，但我们将考 虑从未有任何三条线彼此相交的情况。",
  "time_range": [
   74.48,
   80.4
  ]
 },
 {
  "input": "This would be the generic case if you just choose n random points, almost certainly you'll never have three lines coincide, but setting aside the technical nuances, the problem is such a tease, it looks so convincingly like powers of two until it just barely breaks.",
  "model": "nmt",
  "translatedText": "如果你只是选择n个随机点，这将是一般情况，几乎 可以肯定你永远不会有三条线重合，但抛开技术上 的细微差别，问题是这样一个戏弄，它看起来如此 令人信服地像二的幂，直到它只是几乎没有破裂。",
  "time_range": [
   80.4,
   93.76
  ]
 },
 {
  "input": "And I have such a strange soft spot for this particular question, when I was younger I wrote a poem about it and also a song, and on the one hand it's kind of silly because this is just one example of what the mathematician Richard Guy called the strong law of small numbers, summed up in the phrase, there aren't enough small numbers to meet the many demands made of them.",
  "model": "nmt",
  "translatedText": "我对这个特殊的问题有一个奇怪的情结，当 我年轻的时候，我写了一首关于它的诗和 一首歌，一方面它有点愚蠢，因为这只是 数学家理查德·盖伊所说的一个例子小数 的强大法则，总结为这样一句话：没有足 够的小数来满足对它们提出的许多要求。",
  "time_range": [
   93.76,
   112.64
  ]
 },
 {
  "input": "But I think what I really like about this problem is that if you sit down to try to work out what is the real pattern, what's actually going on here, one, it's just a really good exercise in problem solving, so it makes for a nice lesson right here, but also it's not just a coincidence that it starts off being powers of two, there's a very good reason this happens, and it's also not a coincidence that you seemingly randomly hit another power of two a little bit later on the tenth iteration.",
  "model": "nmt",
  "translatedText": "但我认为我真正喜欢这个问题的是，如果 你坐下来尝试弄清楚真正的模式是什么 ，这里实际上发生了什么，一，这只是 解决问题的一个非常好的练习，所以它 可以为你提供一个解决问题的方法。 这是 很好的一课，而且它一开始是2的幂这 不仅仅是巧合，发生这种情况有一个很 好的理由，而且稍后你似乎随机击中另 一个2的幂也不是巧合。 第十次迭代。",
  "time_range": [
   112.64,
   142.24
  ]
 },
 {
  "input": "So we've got this pattern, and what you want to find is what function describes it.",
  "model": "nmt",
  "translatedText": "所以我们已经有了这个模式，你 想要找到的是描述它的函数。",
  "time_range": [
   142.24,
   146.4
  ]
 },
 {
  "input": "If you put n points on the boundary of a circle, and you connect them with all the possible chords, and you count how many regions the circle has been cut into, if the answer isn't a power of two, what is it?",
  "model": "nmt",
  "translatedText": "如果你把n个点放在一个圆的边界上 ，用所有可能的弦连接它们，然后数 一下这个圆被分割成多少个区域，如 果答案不是2的幂，那它是什么？",
  "time_range": [
   146.4,
   156.8
  ]
 },
 {
  "input": "What function of n should we plug in?",
  "model": "nmt",
  "translatedText": "我们应该插入 n 的什么函数？",
  "time_range": [
   156.8,
   159.2
  ]
 },
 {
  "input": "As always with math, problem solving rule number one if you're stuck, is to try solving easier questions somehow related to the problem at hand.",
  "model": "nmt",
  "translatedText": "与数学一样，如果你遇到困难，解决问题的第一条规 则就是尝试解决与手头问题相关的更简单的问题。",
  "time_range": [
   159.2,
   167.36
  ]
 },
 {
  "input": "It helps you get a foothold, and sometimes those answers are helpful in the final question.",
  "model": "nmt",
  "translatedText": "它可以帮助您站稳脚跟，有时这 些答案对最终问题很有帮助。",
  "time_range": [
   167.36,
   171.6
  ]
 },
 {
  "input": "In this case, two warm-up questions that come to mind are, how many total chords are there in this diagram, and at how many points within the circle do those chords intersect each other?",
  "model": "nmt",
  "translatedText": "在这种情况下，我想到的两个热身问题 是，该图中共有多少个和弦，以及这些 和弦在圆内的多少个点处彼此相交？",
  "time_range": [
   171.6,
   182.0
  ]
 },
 {
  "input": "The first question is relatively friendly, every one of those chords corresponds uniquely with a pair of points on the circle.",
  "model": "nmt",
  "translatedText": "第一个问题相对友好，每一个和 弦都唯一对应于圆上的一对点。",
  "time_range": [
   182.0,
   189.36
  ]
 },
 {
  "input": "So effectively what you want to do is count how many distinct pairs of points are there.",
  "model": "nmt",
  "translatedText": "因此，您想要做的实际上是计算有多少个不同的点对。",
  "time_range": [
   189.36,
   194.24
  ]
 },
 {
  "input": "There's a function that does this, it's called n choose two.",
  "model": "nmt",
  "translatedText": "有一个函数可以执行此操作，称为 n 选择二。",
  "time_range": [
   194.24,
   197.36
  ]
 },
 {
  "input": "By definition, this counts the number of distinct pairs that you can choose from a set of n items, where order doesn't matter.",
  "model": "nmt",
  "translatedText": "根据定义，这计算了您可以从一组 n 个项目 中选择的不同对的数量，其中顺序并不重要。",
  "time_range": [
   197.36,
   204.8
  ]
 },
 {
  "input": "To calculate it, the way you often think about it is that you have n choices for what your first item should be, and then you have n minus one options for what that second item should be, but simply multiplying those would over count, since for a given pair you would have two distinct ways to arrive at that pair.",
  "model": "nmt",
  "translatedText": "为了计算它，你经常想到的方式是，你对第一 个项目应该有 n 个选择，然后你对第二 个项目应该有 n 个减一个选项，但简单地 将这些相乘就会超出计数，因为对于给定的 一对，您将有两种不同的方法来获得该对。",
  "time_range": [
   204.8,
   222.4
  ]
 },
 {
  "input": "And remember, we don't care about order.",
  "model": "nmt",
  "translatedText": "请记住，我们不关心顺序。",
  "time_range": [
   222.4,
   224.56
  ]
 },
 {
  "input": "To account for this you divide by two.",
  "model": "nmt",
  "translatedText": "为了解释这一点，您除以二。",
  "time_range": [
   224.56,
   226.8
  ]
 },
 {
  "input": "So for example, seven choose two would look like seven times six divided by two, which is seven times three, or twenty-one, and if you count up the number of distinct pairs of seven items, there are indeed twenty-one of them.",
  "model": "nmt",
  "translatedText": "例如，七选二看起来像七乘以六除以二， 即七乘以三，或二十一，如果你数一下 七项不同对的数量，确实有二十一个。",
  "time_range": [
   226.8,
   241.28
  ]
 },
 {
  "input": "Counting the number of intersection points in the diagram is a little bit trickier.",
  "model": "nmt",
  "translatedText": "计算图中交叉点的数量有点棘手。",
  "time_range": [
   241.28,
   245.2
  ]
 },
 {
  "input": "One idea might be that it should be the number of pairs of chords, since every intersection point comes from two different chords.",
  "model": "nmt",
  "translatedText": "一种想法可能是它应该是和弦对的数量， 因为每个交点都来自两个不同的和弦。",
  "time_range": [
   245.2,
   252.8
  ]
 },
 {
  "input": "However, that would not quite be right, because the association is not unique.",
  "model": "nmt",
  "translatedText": "然而，这并不完全正确，因为该关联并不是唯一的。",
  "time_range": [
   252.8,
   256.96
  ]
 },
 {
  "input": "You can find a pair of chords that don't intersect within the circle.",
  "model": "nmt",
  "translatedText": "您可以找到一对在圆内不相交的和弦。",
  "time_range": [
   256.96,
   260.8
  ]
 },
 {
  "input": "As I said, it's a little bit tricky.",
  "model": "nmt",
  "translatedText": "正如我所说，这有点棘手。",
  "time_range": [
   260.8,
   262.32
  ]
 },
 {
  "input": "I'd encourage you to try to pause and think about it for yourself, and if you do that, you give yourself a moment, maybe if you're a little bit lucky, here's one thing you might notice.",
  "model": "nmt",
  "translatedText": "我鼓励你尝试停下来自己思考一下，如果你 这样做了，你就给自己一点时间，如果你 幸运的话，也许你可能会注意到一件事。",
  "time_range": [
   262.32,
   271.76
  ]
 },
 {
  "input": "Every intersection point is uniquely associated with a quadruplet of points on the exterior.",
  "model": "nmt",
  "translatedText": "每个交点都与外部的四组点唯一关联。",
  "time_range": [
   271.76,
   277.6
  ]
 },
 {
  "input": "For a given quadruplet, you look at the two kind of diagonal chords between them, and those will intersect within the circle, and it goes the other way around.",
  "model": "nmt",
  "translatedText": "对于给定的四连音，您查看它们之间的两种 对角弦，它们将在圆内相交，反之亦然。",
  "time_range": [
   277.6,
   285.12
  ]
 },
 {
  "input": "Every intersection point corresponds with some quadruplet of points.",
  "model": "nmt",
  "translatedText": "每个交点对应于一些四组点。",
  "time_range": [
   285.12,
   290.72
  ]
 },
 {
  "input": "So, what you want now is to count how many distinct ways can you choose four items given n total choices.",
  "model": "nmt",
  "translatedText": "所以，你现在想要计算的是，在给定 n 个选项的情 况下，你可以用多少种不同的方式来选择四个项目。",
  "time_range": [
   290.72,
   298.08
  ]
 },
 {
  "input": "This is very similar to the previous question.",
  "model": "nmt",
  "translatedText": "这与上一个问题非常相似。",
  "time_range": [
   298.08,
   300.64
  ]
 },
 {
  "input": "The function that answers it is called n choose four, which by definition counts the number of quadruplets from a set of size n, and the way to calculate it is similar to what we saw before.",
  "model": "nmt",
  "translatedText": "回答这个问题的函数称为 n choice f our，根据定义计算大小为 n 的集合中四 联体的数量，计算方法与我们之前看到的类似。",
  "time_range": [
   300.64,
   311.12
  ]
 },
 {
  "input": "You would think of having n choices for your first item, leaving you with n minus one choices for the next item, leaving you with n minus two choices for the third item, and n minus three choices for the last item.",
  "model": "nmt",
  "translatedText": "你会想到第一个项目有 n 个选择， 下一个项目有 n 减去一个选择， 第三个项目有 n 减去两个选择，最 后一个项目有 n 减去三个选择。",
  "time_range": [
   311.12,
   323.76
  ]
 },
 {
  "input": "That, however, would grossly overcount the total number, since all the different ways you can permute these four items would be counted separately.",
  "model": "nmt",
  "translatedText": "然而，这会严重高估总数，因为排列这四 个项目的所有不同方式都将单独计算。",
  "time_range": [
   323.76,
   331.44
  ]
 },
 {
  "input": "To account for that, you divide out by the extent to which you've overcounted, the number of permutations of four items, which looks like four factorial.",
  "model": "nmt",
  "translatedText": "为了解释这一点，您可以除以多算的程度，即 四个项目的排列数，这看起来像四个阶乘。",
  "time_range": [
   331.44,
   340.24
  ]
 },
 {
  "input": "For example, if you calculate four choose four, everything cancels and you just get one, and indeed, there is a single intersection point in this diagram.",
  "model": "nmt",
  "translatedText": "例如，如果您计算四选四，则所有内容都会取消 ，您只得到一，实际上，该图中只有一个交点。",
  "time_range": [
   340.24,
   349.68
  ]
 },
 {
  "input": "If you calculate six choose four, it works out to be 15, and if you look at this diagram and you count them all up, you would notice there are indeed 15 different intersection points.",
  "model": "nmt",
  "translatedText": "如果你计算六选四，结果是 15，如 果你看这个图，把它们全部数起来，你 会发现确实有 15 个不同的交点。",
  "time_range": [
   349.68,
   361.12
  ]
 },
 {
  "input": "And even if you would never want to count it up by hand, if we had a diagram that has 100 distinct points on the exterior, and we drew all of the connecting lines, you can conclude that there have to be 100 choose four, or just about four million intersection points somewhere in the middle.",
  "model": "nmt",
  "translatedText": "即使你永远不想用手去数它，如果我们有一 个外部有 100 个不同点的图表，并 且我们绘制了所有连接线，你也可以得出结 论，必须有 100 个选择 4，或者 中间的某个地方大约有四百万个交叉点。",
  "time_range": [
   361.12,
   377.76
  ]
 },
 {
  "input": "You've probably guessed this, but these are more than just warm-up questions.",
  "model": "nmt",
  "translatedText": "您可能已经猜到了，但这些不仅仅是热身问题。",
  "time_range": [
   377.76,
   381.12
  ]
 },
 {
  "input": "They give us the necessary information to answer the question we care about.",
  "model": "nmt",
  "translatedText": "他们为我们提供必要的信息来回答我们关心的问题。",
  "time_range": [
   381.12,
   384.72
  ]
 },
 {
  "input": "How many regions has the circle been cut into?",
  "model": "nmt",
  "translatedText": "圆被分成了多少个区域？",
  "time_range": [
   384.72,
   387.28
  ]
 },
 {
  "input": "The trick is to use a very nice little fact about planar graphs.",
  "model": "nmt",
  "translatedText": "诀窍是使用关于平面图的一个非常好的小事实。",
  "time_range": [
   387.28,
   390.96
  ]
 },
 {
  "input": "Here I'm using the word graph in the sense of a diagram that has nodes and lines connecting them, and what it means to be planar is that you can draw this diagram without any of the lines intersecting with each other.",
  "model": "nmt",
  "translatedText": "在这里，我使用的词图是指具有节点和连 接它们的线的图，平面的意思是您可以在 没有任何线相互交叉的情况下绘制该图。",
  "time_range": [
   390.96,
   402.08
  ]
 },
 {
  "input": "In graph theory lingo, you typically call those nodes vertices and the lines connecting them edges, and the wonderful fact that we can leverage is that if you count up the number of vertices, and then you subtract the total number of edges, and then you consider the number of regions that this graph has cut the plane into, including that infinite outer region, then always, no matter what planar graph you started with, you get two.",
  "model": "nmt",
  "translatedText": "在图论术语中，您通常将这些节点称为顶点以 及连接它们的线，我们可以利用的一个奇妙 的事实是，如果您计算顶点的数量，然后减 去边的总数，然后您考虑该图将平面切割成的 区域数量，包括无限的外部区域，那么无论 您从什么平面图开始，您总是会得到两个。",
  "time_range": [
   402.08,
   425.76
  ]
 },
 {
  "input": "It's actually very fun.",
  "model": "nmt",
  "translatedText": "这实际上非常有趣。",
  "time_range": [
   425.76,
   426.84000000000003
  ]
 },
 {
  "input": "Try this for yourself.",
  "model": "nmt",
  "translatedText": "亲自尝试一下。",
  "time_range": [
   426.84000000000003,
   427.92
  ]
 },
 {
  "input": "Draw any graph, make sure the lines don't intersect, and then count the number of vertices, subtract the number of edges, and count the number of regions that it's cut the plane into, and no matter what diagram you chose, the answer always works out to be two.",
  "model": "nmt",
  "translatedText": "绘制任何图形，确保线条不相交，然后计算顶点 数，减去边数，并计算将平面切割成的区域数， 无论您选择什么图，答案都是总是结果是两个。",
  "time_range": [
   427.92,
   442.96
  ]
 },
 {
  "input": "More commonly you would see this written as v minus e plus f is equal to two, since originally the equation described the vertices, edges, and faces of three-dimensional polyhedra, and if you want to know why this magical fact is true, you can think about building up your graph from a trivial case where you have a single node and no edges.",
  "model": "nmt",
  "translatedText": "更常见的是，你会看到它写成 v 减去 e 加 f 等于 2，因为最初这个方程描述了三维多面体的顶点、边和面 ，如果你想知道为什么这个神奇的事实是正确的，你可以考 虑从一个只有一个节点且没有边的简单情况来构建您的图。",
  "time_range": [
   442.96,
   463.2
  ]
 },
 {
  "input": "So v would be equal to one, f would also be equal to one because of that infinite outer region, and e is zero, so the equation is obviously true.",
  "model": "nmt",
  "translatedText": "因此 v 等于 1，由于外部区域无限大，f 也等 于 1，并且 e 为零，所以该方程显然是正确的。",
  "time_range": [
   463.2,
   472.4
  ]
 },
 {
  "input": "Then if you build up your graph one edge at a time, one thing that could happen is that for each new edge you introduce a new vertex, so e goes up by one, but v also goes up by one, leaving the equation balanced.",
  "model": "nmt",
  "translatedText": "然后，如果您一次构建一条边，则可能发生的一件事是，对于每条新边， 您都会引入一个新顶点，因此 e 增加 1，但 v 也增加 1， 从而使方程保持平衡。",
  "time_range": [
   472.4,
   485.03710843373494
  ]
 },
 {
  "input": "But if a new edge doesn't correspond to a new vertex, meaning it's connecting to a pre-existing vertex, that means that it's enclosed a new region of space, so e goes up by one, but f also goes up by one, which again leaves the equation balanced.",
  "model": "nmt",
  "translatedText": "但是如果一条新边不对应于一个新顶点，这意味着 它连接到一个预先存在的顶点，这意味着它封闭了一个新的空间区域，所 以 e 增加了 1，但 f 也增加了 1，这再次使等式保持平衡。",
  "time_range": [
   485.03710843373494,
   500.64
  ]
 },
 {
  "input": "So as you build up some potentially complicated graph, v minus e plus f always stays fixed at two.",
  "model": "nmt",
  "translatedText": "因此，当您构建一些可能复杂的图表时，v 减去 e 加 f 始终保持固定为 2。",
  "time_range": [
   500.64,
   507.36
  ]
 },
 {
  "input": "This equation has a name, it's called Euler's characteristic formula, and I remember when I made a video about this a while ago I had some dumb joke in there about Euler's being German for beautiful, and there were a decent number of comments that were like, you know, Euler is actually a person, I speak German, and it doesn't mean beautiful.",
  "model": "nmt",
  "translatedText": "这个方程有一个名字，叫做欧拉特征公式，我记得不久前我制作一个 关于这个的视频时，我在那里开了一个愚蠢的笑话，说欧拉在德语 中是美丽的意思，并且有相当多的评论，比如，你知道，欧拉其实 是一个人，我说德语，并没有美丽的意思。",
  "time_range": [
   507.36,
   524.4016326530611
  ]
 },
 {
  "input": "Anyway, for our purposes it gives us a tool for counting the number of regions that a planar graph has cut space into.",
  "model": "nmt",
  "translatedText": "无论如何，就我们的目的而言 ，它为我们提供了一个工具来计算平面图将空间切割成的区域数量。",
  "time_range": [
   524.4016326530611,
   531.3286597938145
  ]
 },
 {
  "input": "Rearranging a little, you would take the number of edges minus the number of vertices plus two.",
  "model": "nmt",
  "translatedText": "稍微重新排 列一下，你可以用边的数量减去顶点的数量再加上二。",
  "time_range": [
   531.3286597938145,
   537.1600000000001
  ]
 },
 {
  "input": "This is exactly the tool that we want to understand our circle question, although in that case we don't care about the infinite outer region, so instead I'll write this as e minus v plus one.",
  "model": "nmt",
  "translatedText": "这正是我们 想要理解圆问题的工具，尽管在这种情况下我们不关心无限的 外部区域，所以我将其写为 e 减 v 加一。",
  "time_range": [
   537.1600000000001,
   547.3175510204082
  ]
 },
 {
  "input": "And at first you might complain, but we can't use Euler's formula in this case, because it only applies to planar graphs, and in our case the lines absolutely intersect with each other.",
  "model": "nmt",
  "translatedText": "一开始你可能 会抱怨，但在这种情况下我们不能使用欧拉公式，因为它只适用于 平面图，而在我们的例子中，线条彼此绝对相交。",
  "time_range": [
   547.3175510204082,
   556.8444444444444
  ]
 },
 {
  "input": "We even counted how many times they intersect with each other.",
  "model": "nmt",
  "translatedText": "我们甚至计算 了它们彼此相交的次数。",
  "time_range": [
   556.8444444444444,
   559.8688659793814
  ]
 },
 {
  "input": "But the key is to treat this as a new graph where those intersection points are themselves vertices, so the total number of vertices here would not be n, but n plus the n choose 4 total intersection points.",
  "model": "nmt",
  "translatedText": "但关键是将其视为一个新图，其中这些 交点本身就是顶点，因此这里的顶点总数不是 n，而是 n 加 上 n 选择总共 4 个交点。",
  "time_range": [
   559.8688659793814,
   571.7178021978023
  ]
 },
 {
  "input": "That in turn chops up all of our chords into a larger number of edges, it's much more than just n choose 2, and initially it might seem really annoying and tricky to think about exactly how much it's chopped them up, but one way you can think about it is that every intersection point takes what started as two separate lines and then turns it into four lines.",
  "model": "nmt",
  "translatedText": "这反过来又将我们所有的和弦 切碎成更多数量的边，这不仅仅是 n 选择 2，一开始，考 虑到底将它们切碎了多少可能看起来真的很烦人和棘手，但有一 种方法可以想想看，每个交叉点都将最初是两条单独的线，然后将 其变成四条线。",
  "time_range": [
   571.7178021978023,
   591.5651764705883
  ]
 },
 {
  "input": "So in effect each intersection point adds two more edges.",
  "model": "nmt",
  "translatedText": "因此，实际上每个交点都会添加两条边。",
  "time_range": [
   591.5651764705883,
   596.2324705882352
  ]
 },
 {
  "input": "For example look at this simple diagram where we have three lines and two intersection points.",
  "model": "nmt",
  "translatedText": "例如 ，看看这个简单的图表，其中有三条线和两个交点。",
  "time_range": [
   596.2324705882352,
   601.7381818181818
  ]
 },
 {
  "input": "The total number of edges after the chopping would look like three plus two times two, or seven.",
  "model": "nmt",
  "translatedText": "切割后 的边总数看起来像三加二乘二，即七。",
  "time_range": [
   601.7381818181818,
   607.9081188118813
  ]
 },
 {
  "input": "If you had four lines that intersected at three separate points then the total number of little lines after chopping would be four plus two times three, or ten.",
  "model": "nmt",
  "translatedText": "如果有四 条线在三个不同的点相交，那么切割后小线的总数 将是四加二乘三，即十。",
  "time_range": [
   607.9081188118813,
   616.8255319148936
  ]
 },
 {
  "input": "And for the diagram we care about where we started off with n choose two separate lines and they're getting chopped up at n choose four points in the middle, you would end up with n choose two plus two times n choose four edges.",
  "model": "nmt",
  "translatedText": "对于图表，我们关心的是我们 从哪里开始，n选择两条单独的线，它们在n选择中间的四个点处 被切碎，你最终会得到n选择二加两次n选择四个边。",
  "time_range": [
   616.8255319148936,
   630.3958762886599
  ]
 },
 {
  "input": "And actually there are a few more than that, because we're including the circle we also need to count the n different arcs that sit on the outside of this diagram.",
  "model": "nmt",
  "translatedText": "实际上还 有更多，因为我们包括了圆，所以我们还需要计算位于 该图外部的 n 条不同的弧。",
  "time_range": [
   630.3958762886599,
   639.034606741573
  ]
 },
 {
  "input": "So with all of that you have the information you need to answer the original question.",
  "model": "nmt",
  "translatedText": "这样，您就拥有了 回答原始问题所需的信息。",
  "time_range": [
   639.034606741573,
   643.6669767441861
  ]
 },
 {
  "input": "Pulling up our variant of Euler's formula that counts the number of regions we'll plug in the expression for the number of vertices which is n plus the n choose four intersection points, and you also plug in the slightly larger expression for the new number of edges n choose two plus two times n choose four plus n, and the expression has a lot of nice cancellation, for example you are adding an n but also subtracting an n and you're adding two copies of n choose four but subtracting another copy of n choose four and when all the dust settles the answer to the question is one plus n choose two plus n choose four.",
  "model": "nmt",
  "translatedText": "拉出我们计算区域数量的欧 拉公式的变体，我们将插入顶点数量的表达式，即 n 加上 n 选择四个交点，并且您还可以插入稍大的表达式来表示新的顶点数 量边 n 选择二加两次 n 选择四加 n，并且该表达式有很 多很好的取消，例如，您要添加一个 n 但也减去一个 n 并 且您要添加 n 的两个副本 选择四但减去另一个副本n 选择四 ，当一切尘埃落定后，问题的答案是一加n 选择二加n 选择四。",
  "time_range": [
   643.6669767441861,
   675.6116853932584
  ]
 },
 {
  "input": "On the one hand you're done you answered the question.",
  "model": "nmt",
  "translatedText": "一方面，你已经回答了问题。",
  "time_range": [
   675.6116853932584,
   679.0094382022472
  ]
 },
 {
  "input": "I give you one of these circle diagrams with n points on the boundary and using this formula you can figure out how many regions the circle has been cut into.",
  "model": "nmt",
  "translatedText": "我给你一张圆形图， 边界上有 n 个点，使用这个公式你可以算出圆被切割 成多少个区域。",
  "time_range": [
   679.0094382022472,
   687.6362886597939
  ]
 },
 {
  "input": "But of course we're not really done because that doesn't scratch the itch.",
  "model": "nmt",
  "translatedText": "当然，我们还没有真正完成，因为这并不能解决问题。",
  "time_range": [
   687.6362886597939,
   691.1261538461539
  ]
 },
 {
  "input": "Why is it the case that this looks like powers of two and then falls short by just one?",
  "model": "nmt",
  "translatedText": "为什么看起来像是 2 的幂，但实际上却只差 1 次方呢？",
  "time_range": [
   691.1261538461539,
   696.48
  ]
 },
 {
  "input": "It's not just a coincidence and the key to answering it is to consider Pascal's triangle.",
  "model": "nmt",
  "translatedText": "这不仅仅是巧合，回答这个问题的关键是考虑帕斯卡三角形。",
  "time_range": [
   696.48,
   701.6
  ]
 },
 {
  "input": "You know this triangle, it's the one where each term looks like a sum of the two different terms above it and there are basically two facts we need to bring in about this triangle.",
  "model": "nmt",
  "translatedText": "你知道这个三角形，它的每一项看起来都像是它上面的两个不同项的总 和，关于这个三角形，我们基本上需要引入两个事实。",
  "time_range": [
   701.6,
   710.3663999999999
  ]
 },
 {
  "input": "The first is that every term inside this triangle looks like n choose k for some value of n and k.",
  "model": "nmt",
  "translatedText": "第一个是这个三角 形内的每一项看起来都像 n 选择 k 作为 n 和 k 的某个值。",
  "time_range": [
   710.3663999999999,
   717.3327472527473
  ]
 },
 {
  "input": "That is the answer to the question of how many ways can you select a subset of size k from a set of size n is visible within this triangle.",
  "model": "nmt",
  "translatedText": "这就是问题 的答案：有多少种方法可以从该三角形内可见的大小为 n 的集合中选择 大小为 k 的子集。",
  "time_range": [
   717.3327472527473,
   725.9466666666667
  ]
 },
 {
  "input": "The way to think about it is by indexing the rows and columns starting from zero.",
  "model": "nmt",
  "translatedText": "考虑它的方法是从零开始索引行 和列。",
  "time_range": [
   725.9466666666667,
   730.5527272727273
  ]
 },
 {
  "input": "For example if you count up to the 0 1 2 3 4 5th row and you count in to the 0 1 2 3rd element you see 10 and indeed 5 choose 3 is equal to 10.",
  "model": "nmt",
  "translatedText": "例如，如果您数到 0 1 2 3 4 第 5 行，并且数到 0 1 2 3 个 元素，您会看到 10，实际上 5 选择 3 等于 10。",
  "time_range": [
   730.5527272727273,
   741.221224489796
  ]
 },
 {
  "input": "If you've never seen this before and you want to know why it's true there's a really lovely argument.",
  "model": "nmt",
  "translatedText": "如果你以前从未见过这个，并且想 知道为什么这是真的，那么这里有一个非常可爱的论点。",
  "time_range": [
   741.221224489796,
   747.3953684210527
  ]
 },
 {
  "input": "I'll leave it up as an exercise but moving on to the second thing that we need to know.",
  "model": "nmt",
  "translatedText": "我将把它作为练习，但 继续讨论我们需要知道的第二件事。",
  "time_range": [
   747.3953684210527,
   751.8254545454545
  ]
 },
 {
  "input": "Notice what happens when you add up the rows of this triangle.",
  "model": "nmt",
  "translatedText": "请注意将这个三角形的行相加时会 发生什么。",
  "time_range": [
   751.8254545454545,
   755.424
  ]
 },
 {
  "input": "You get 1 and then 1 plus 1 is 2, 1 plus 2 plus 1 is 4, 1 plus 3 plus 3 plus 1 is 8 and as you continue on you always get powers of 2.",
  "model": "nmt",
  "translatedText": "你得到 1，然后 1 加 1 等于 2，1 加 2 加 1 等于 4，1 加 3 加 3 加 1 等于 8，继续下去你总是得到 2 的幂。",
  "time_range": [
   755.424,
   765.2121212121212
  ]
 },
 {
  "input": "Maybe at this point you're a little gun shy about jumping to conclusions about powers of 2 too quickly but in this case it's a genuine pattern.",
  "model": "nmt",
  "translatedText": "也许此时您有点不好意思太快地得出 关于 2 的幂的结论，但在这种情况下，这是一个真实的模式。",
  "time_range": [
   765.2121212121212,
   772.64
  ]
 },
 {
  "input": "There's no trickery being pulled and there are a few ways that you can think about why there should be powers of 2 here.",
  "model": "nmt",
  "translatedText": "这里没有任何技巧，你可以通过几种方法来思考为什么这里应该 有 2 的幂。",
  "time_range": [
   772.64,
   778.3983673469388
  ]
 },
 {
  "input": "The one that I like is to think about how as you go from that first row to the next one it's like the number 1 is sort of donating two copies of itself into the next row.",
  "model": "nmt",
  "translatedText": "我喜欢的是思考当你从第一行到下一行时， 数字 1 是如何将其自身的两个副本捐赠到下一行的。",
  "time_range": [
   778.3983673469388,
   788.4
  ]
 },
 {
  "input": "Likewise as you go from the second row to the third each of those ones is donating two copies of itself to the next row and in general as you go from one row to the next each number donates two copies of itself to the one below.",
  "model": "nmt",
  "translatedText": "同样，当您从第二行到第三行时，每个数字都会将自己的两个副本捐赠 给下一行，并且通常当您从一行到下一行时，每个数字都会将自己的两 个副本捐赠给下面的行。",
  "time_range": [
   788.4,
   801.4048979591837
  ]
 },
 {
  "input": "So as you add up the totals for each of these rows it stands to reason that those totals double on each iteration.",
  "model": "nmt",
  "translatedText": "因此，当您将每一行的总数加起来时，这些总数 在每次迭代中都会加倍，这是理所当然的。",
  "time_range": [
   801.4048979591837,
   808.3314285714287
  ]
 },
 {
  "input": "Circling back to our original question think about what this means.",
  "model": "nmt",
  "translatedText": "回到我们最初的问题，想一 想这意味着什么。",
  "time_range": [
   808.3314285714287,
   812.509010989011
  ]
 },
 {
  "input": "The answer to our question looked like 1 plus n choose 2 plus n choose 4.",
  "model": "nmt",
  "translatedText": "我们问题的答案看起来像 1 加 n 选择 2 加 n 选择 4。",
  "time_range": [
   812.509010989011,
   817.0761290322581
  ]
 },
 {
  "input": "In the context of Pascal's triangle you could think about that as adding up the 0th, 2nd and 4th terms inside some row of that triangle.",
  "model": "nmt",
  "translatedText": "在帕斯卡三角形的背景下，您可以将其视为将该三角形的某行内的 第 0、第 2 和第 4 项相加。",
  "time_range": [
   817.0761290322581,
   825.9163218390804
  ]
 },
 {
  "input": "For instance when n is equal to 5 it looks like adding up 1 plus 10 plus 5.",
  "model": "nmt",
  "translatedText": "例如，当 n 等于 5 时，看起来 就像 1 加 10 加 5。",
  "time_range": [
   825.9163218390804,
   831.0012121212121
  ]
 },
 {
  "input": "Now because each of those numbers is the sum of the two above it this is the same thing as adding up the first five elements in the previous row which in this case is adding up the entire previous row hence why it's a power of 2.",
  "model": "nmt",
  "translatedText": "现在，因为每个数字都是上面两个数字的总 和，所以这与将前一行中的前五个元素相加是一样的，在本例中， 将前一行的整个内容相加，因此它是 2 的幂。",
  "time_range": [
   831.0012121212121,
   845.0241758241759
  ]
 },
 {
  "input": "Same deal for all the numbers that are 5 or less.",
  "model": "nmt",
  "translatedText": "所有 5 或以下的 数字都同样处理。",
  "time_range": [
   845.0241758241759,
   847.7907070707072
  ]
 },
 {
  "input": "When you situate this formula inside Pascal's triangle and you relate it to the previous row what you're doing is adding up the entirety of that previous row.",
  "model": "nmt",
  "translatedText": "当您将此公式放在帕斯卡三角形内并将其与前 一行相关联时，您所做的就是将前一行的全部相加。",
  "time_range": [
   847.7907070707072,
   857.0465979381445
  ]
 },
 {
  "input": "The point at which this breaks is for n equals 6 because in that case when you relate this to the previous row adding up the first five elements of that row it doesn't cover the whole thing.",
  "model": "nmt",
  "translatedText": "中断点是 n 等于 6，因为在这种情况下，当您将其与上一行相关联， 将该行的前五个元素相加时，它不会覆盖整个内容。",
  "time_range": [
   857.0465979381445,
   867.5612903225807
  ]
 },
 {
  "input": "It falls short specifically by just one which is why we miss the power of 2 and why it falls short specifically by just one.",
  "model": "nmt",
  "translatedText": "它仅落后于 1，这就是为什么我们错过了 2 的幂以及它仅落后于 1 的原 因。",
  "time_range": [
   867.5612903225807,
   874.8102127659574
  ]
 },
 {
  "input": "Also notice what happens when we plug in n equals 10.",
  "model": "nmt",
  "translatedText": "另请注意当我们代入 n 等于 10 时会发生什么。",
  "time_range": [
   874.8102127659574,
   878.0578723404258
  ]
 },
 {
  "input": "Looking down at the 10th row and relating those terms to the previous one adding the first five elements of the ninth row is exactly half of that row and because the triangle is symmetric this means that when you add them up you get exactly half of a power of 2 which itself of course is another power of 2.",
  "model": "nmt",
  "translatedText": "向下看第 10 行， 并将这些项与前一项相关联，添加第九行的前五个元素正好是该 行的一半，并且因为三角形是对称的，这意味着当您将它们相加 时，您将得到恰好一半的幂2 本身当然是 2 的另一个幂。",
  "time_range": [
   878.0578723404258,
   896.16
  ]
 },
 {
  "input": "And as a challenge problem for you I don't actually know if this is the last time that you'll ever see a power of 2.",
  "model": "nmt",
  "translatedText": "作为对你来说的挑战问题，我实际上不知道这是否是你最后一 次看到 2 的幂。",
  "time_range": [
   896.16,
   901.6938666666667
  ]
 },
 {
  "input": "Maybe one of you out there who's cleverer with diaphantine equations than I am can come up with some clever proof.",
  "model": "nmt",
  "translatedText": "也许你们当中有人比我更擅长 使用透明方程，可以想出一些巧妙的证明。",
  "time_range": [
   901.6938666666667,
   909.28
  ]
 },
 {
  "input": "Stepping back to summarize we started by counting the total number of chords and the total number of intersection points which by thinking about the right associations is the same as computing n choose 2 and n choose 4.",
  "model": "nmt",
  "translatedText": "回过头来总结一下，我们首先计算和弦总数和交点总数，通过 考虑正确的关联，这与计算 n 选择 2 和 n 选择 4 相同。",
  "time_range": [
   909.28,
   920.8654545454544
  ]
 },
 {
  "input": "Bringing in Euler's formula this let us get an exact closed form expression for the number of regions inside the circle.",
  "model": "nmt",
  "translatedText": "引入欧拉公式，我们可以得到圆内区域 数量的精确封闭形式表达式。",
  "time_range": [
   920.8654545454544,
   928.1294382022472
  ]
 },
 {
  "input": "Then connecting that with Pascal's triangle gives us a very visceral connection with the powers of 2 and why they break when they do.",
  "model": "nmt",
  "translatedText": "然后将其与帕斯卡三角形联系起 来，让我们对 2 的幂以及为什么它们会破裂产生一种非常本能的联系。",
  "time_range": [
   928.1294382022472,
   937.12
  ]
 },
 {
  "input": "So yes, Moser's circle problem is a cautionary tale about being wary of patterns without proof but at a deeper level it also tells us that what's sometimes chalked up to be coincidence still leaves room for satisfying understandings.",
  "model": "nmt",
  "translatedText": "所以，是的，莫泽的圆问题是一个关于对没有证据的模式保 持警惕的警示故事，但在更深层次上，它也告诉我们，有时 被认为是巧合的东西仍然为令人满意的理解留下了空间。",
  "time_range": [
   937.12,
   948.08
  ]
 }
]