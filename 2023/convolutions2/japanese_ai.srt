1
00:00:00,000 --> 00:00:06,240
まずはクイズから始めましょう。 このよく知られた釣鐘曲線形状の正規分布をとり、その分布から抽出された確率変数 x

2
00:00:06,240 --> 00:00:10,320
があるとします。

3
00:00:10,320 --> 00:00:14,800
つまり、今見ているのは、その確率変数の繰り返しサンプルです。

4
00:00:14,800 --> 00:00:20,400
簡単に思い出していただきたいのですが、この曲線を解釈する方法、つまり関数が実際に何を意味するかというと、サンプルが特定の値の範囲内に収まる確率が必要な場合は、サンプルがマイナス 1

5
00:00:20,400 --> 00:00:25,200
から

6
00:00:25,200 --> 00:00:28,720
2 の間に収まる確率を言います。そうですね、それはその値の範囲におけるこの曲線の下の面積に等しくなります。

7
00:00:28,720 --> 00:00:35,200
それが曲線が実際に意味するものです。

8
00:00:35,200 --> 00:00:39,520
また、2

9
00:00:39,520 --> 00:00:43,280
番目の確率変数も取得します。これも正規分布に従いますが、今回はもう少し分散して、標準偏差が少し大きくなるかもしれません。

10
00:00:43,280 --> 00:00:47,280
ここでクイズです。 これらの変数の両方を繰り返しサンプリングし、各反復で 2

11
00:00:47,280 --> 00:00:54,000
つの結果を合計すると、その合計は独自の確率変数のように動作します。

12
00:00:54,000 --> 00:00:59,120
そして問題は、あなたが調べているその合計がどのような分布で表されているかということです。

13
00:00:59,120 --> 00:01:02,560
少し考えてみると、おそらく推測ができるでしょう。おそらく、わかりませんが、これは別の正規分布か、あるいは形状が異なる何かだと思います。

14
00:01:02,560 --> 00:01:07,040


15
00:01:07,040 --> 00:01:14,720
言うまでもなく、推測するだけでは十分ではありません。 本当のクイズは、なぜそのような答えが得られるのかを説明できることです。

16
00:01:14,720 --> 00:01:21,040
この場合、答えがなぜそうなるのかを骨の髄まで内臓レベルで理解していれば、正規分布が確率において果たす特別な機能を果たす理由を理解するのに長い道のりとなるでしょう。

17
00:01:21,040 --> 00:01:28,080


18
00:01:28,080 --> 00:01:31,520
ただし、ズームアウトすると、これは実際には、分布に関係なく

19
00:01:31,520 --> 00:01:35,840
2

20
00:01:35,840 --> 00:01:39,040
つの異なる確率変数を追加する方法について、必ずしも正規分布のものだけではなく、より一般的なレッスンを目的としています。

21
00:01:39,040 --> 00:01:44,560
これは、それらの変数の基礎となる分布に適用する特別な操作に相当します。

22
00:01:44,560 --> 00:01:47,840
この操作には特別な名前があり、畳み込みと呼ばれます。

23
00:01:47,840 --> 00:01:57,120
そして、あなたと私が今日行う主な仕事は、連続関数の畳み込みがどのように見えるかを視覚化するための 2

24
00:01:57,120 --> 00:02:01,920
つの異なる方法を動機付けて構築し、これら 2

25
00:02:01,920 --> 00:02:04,800
つの異なる視覚化がそれぞれ異なる方法でどのように役立つかについて、特別な方法で話すことです。中心極限定理に焦点を当てます。

26
00:02:04,800 --> 00:02:12,080
全体的なレッスンを行った後、冒頭のクイズに戻り、いつもと違って満足のいく答え方を提供したいと思います。

27
00:02:12,080 --> 00:02:17,920
ちょっとした余談ですが、定期的に視聴している方は、このチャンネルに畳み込みに関するビデオがすでに存在していることをご存じかもしれません。

28
00:02:17,920 --> 00:02:21,520
しかし、それはかなり異なる焦点を持っていて、私たちは離散的なケースだけを扱っていました、そして私は確率だけでなく、それがさまざまな状況でどのように現れるかを示したかったのです。

29
00:02:21,520 --> 00:02:26,800


30
00:02:26,800 --> 00:02:31,840
それがこのビデオの前提条件になるのはあまり意味がないので、少し厄介な立場にいますが、今日のウォーミングアップに最適な方法は、本質的にそのビデオで使用されているのと同じ例の 1

31
00:02:31,840 --> 00:02:37,840
つを取り上げることだと思います。

32
00:02:37,840 --> 00:02:41,680
したがって、そこからまっすぐに来る場合は、おそらく安全にスキップして先に進むことができます。

33
00:02:41,680 --> 00:02:43,440
それ以外の場合は、すぐに始めましょう。

34
00:02:47,040 --> 00:02:53,360
この冒頭のクイズの質問では、各確率変数は、連続した無限の値の範囲内の値 (すべての可能な実数)

35
00:02:53,360 --> 00:02:55,040
を取ることができます。

36
00:02:55,040 --> 00:02:59,360
加重サイコロを振るような、より離散的で有限な設定でウォームアップすると、はるかに簡単になります。

37
00:02:59,360 --> 00:03:02,400


38
00:03:02,400 --> 00:03:06,640
ここで、あなたが見ているアニメーションは 2

39
00:03:06,640 --> 00:03:10,320
つの重み付けされたサイコロをシミュレートしており、おそらく何が起こっているかがわかるでしょう。しかし、明確に説明すると、青いサイコロはより低い値に偏った分布に従っており、赤いサイコロはより低い値に偏っているように見えます。

40
00:03:10,320 --> 00:03:14,960
die には明確な分布があるため、それぞれから繰り返しサンプリングし、反復ごとに

41
00:03:14,960 --> 00:03:17,520
2

42
00:03:17,520 --> 00:03:23,520
つの値の合計を記録します。

43
00:03:23,520 --> 00:03:29,120
このようなサンプルを何度も何度も繰り返すことで、最終的な分布をヒューリスティックに把握できるようになりますが、今日の私たちの本当の仕事は、その分布を正確に計算することです。

44
00:03:29,120 --> 00:03:32,720


45
00:03:32,720 --> 00:03:39,760
すべての可能性に対して、2、または 3、または 4、または 5 が延々と続く正確な確率はどれくらいですか?

46
00:03:39,760 --> 00:03:44,800
それほど難しい質問ではありません。実際に、立ち止まって自分で解決してみることをお勧めします。

47
00:03:44,800 --> 00:03:48,960
このウォームアップ セクションの主な目標は、基礎となる計算を視覚化する

48
00:03:48,960 --> 00:03:53,040
2 つの異なる方法を説明することです。

49
00:03:53,040 --> 00:03:59,040
たとえば、考え始める 1 つの方法は、36

50
00:03:59,040 --> 00:04:02,800
の異なる可能な結果があり、それらの結果を小さな 6x6 グリッドに整理できるということです。

51
00:04:02,800 --> 00:04:08,080
さて、これらの特定の結果のいずれかが表示される確率、たとえば青 4 と赤

52
00:04:08,080 --> 00:04:12,880
2 が表示される確率はどれくらいかと尋ねたら、あなたは何と答えますか?

53
00:04:12,880 --> 00:04:18,800
青 4 の確率と赤 2 の確率を乗じたものであるべきだと言えるかもしれません。

54
00:04:18,800 --> 00:04:23,440
そして、サイコロの目が互いに独立していると仮定すると、それは正しいでしょう。

55
00:04:23,440 --> 00:04:27,680
それはちょっと衒学的だと言われるかもしれません。もちろん、サイコロの目は互いに独立している必要がありますが、この単純な例から最終的な結果に至るまで、ここから先に行うことはすべて重要であるため、これは強調する価値のある点です。中心極限定理では、確率変数が独立していると仮定します。

56
00:04:27,680 --> 00:04:32,240


57
00:04:32,240 --> 00:04:35,600


58
00:04:35,600 --> 00:04:38,640


59
00:04:38,640 --> 00:04:43,360
現実の世界では、この仮定が実際に当てはまるかどうかを注意深く監視する必要があります。

60
00:04:43,360 --> 00:04:46,880
ここで私がやろうとしていることは、考えられるすべての結果のこのグリッドを取得し、それにいくつかの数字を入力し始めることです。

61
00:04:46,880 --> 00:04:49,040


62
00:04:49,040 --> 00:04:53,040
おそらく、青いサイコロのすべての確率の数字を一番下に置き、赤いサイコロのすべての確率を左側に置き、それからグリッドを埋めて、グリッド内のすべての結果の確率を記入します。青の分布の

63
00:04:53,040 --> 00:04:56,080
1

64
00:04:56,080 --> 00:05:00,800
つの数値と赤の分布の

65
00:05:00,800 --> 00:05:04,320
1

66
00:05:04,320 --> 00:05:06,480
つの数値の間の積のように見えます。

67
00:05:06,480 --> 00:05:10,640
別の考え方としては、基本的には九九を構築しているということです。

68
00:05:10,640 --> 00:05:15,200
これらすべてをもう少し視覚的に理解するには、これらの確率のそれぞれを、この種の 3

69
00:05:15,200 --> 00:05:20,080
次元プロットの正方形の上のバーの高さとしてプロットすることができます。

70
00:05:20,080 --> 00:05:24,000
ある意味、この 3

71
00:05:24,000 --> 00:05:25,520
次元プロットには、サイコロを振る際に知っておく必要があるすべてのデータが含まれています。

72
00:05:26,240 --> 00:05:29,840
そこで問題は、知りたいこと、つまりさまざまな合計の確率をどのように抽出するかということです。

73
00:05:29,840 --> 00:05:32,160


74
00:05:33,440 --> 00:05:38,080
さて、特定の合計、たとえば 6

75
00:05:38,720 --> 00:05:41,600
の合計ですべての結果を強調表示すると、それらすべてが特定の対角線上にどのように配置されるかに注目してください。

76
00:05:41,600 --> 00:05:44,880
合計が 7 であるすべてのペアを強調表示しても、同じ処理になります。

77
00:05:44,880 --> 00:05:47,120
彼らは異なる対角線に沿って座っています。

78
00:05:47,120 --> 00:05:50,160
したがって、考えられるそれぞれの合計の確率を計算するには、これらの対角線の 1

79
00:05:50,160 --> 00:05:54,640
つにあるすべてのエントリを合計することになります。

80
00:05:54,640 --> 00:06:02,240
3D プロットを表示すると、考えられる合計の分布が、これらの対角スライスの

81
00:06:02,240 --> 00:06:05,440
1

82
00:06:05,440 --> 00:06:10,320
つに沿ってこのプロットの高さのすべてを組み合わせたもののように見えると言うことで、後でこれをどこに進めるかをより適切に予測できます。

83
00:06:12,160 --> 00:06:15,920
これは、考えられるすべての結果についてこの完全な分布を取得し、それを 1

84
00:06:15,920 --> 00:06:18,880
つの方向に沿って折りたたんだようなものです。

85
00:06:20,800 --> 00:06:24,320
そして確かに、現時点ではアニメーションを少し楽しんでいるだけで、紙と鉛筆を使ってこれを作成する場合のように

86
00:06:24,560 --> 00:06:26,800
3

87
00:06:26,800 --> 00:06:29,200
次元のプロットを描くようなものではありません。

88
00:06:29,200 --> 00:06:30,080
でも楽しいですよ！

89
00:06:30,080 --> 00:06:33,840
この方向に折りたたむと、実際には同じ分布が得られます。そうすべきであることはわかっていましたが、それでも見るのは楽しいです。

90
00:06:33,840 --> 00:06:36,240


91
00:06:36,880 --> 00:06:39,760
また、これらすべてが少しふざけているように見えたり、不必要に複雑に見えたりするかもしれませんが、斜めのスライスに関するこの直感は、後で本当に満足のいく証明として戻ってくることを約束できます。

92
00:06:39,760 --> 00:06:42,240


93
00:06:42,240 --> 00:06:45,200


94
00:06:45,200 --> 00:06:48,400


95
00:06:48,960 --> 00:06:52,320
しかし、もう少し単純なサイコロのケースに焦点を当てて、これについて考えることができる 2

96
00:06:52,320 --> 00:06:54,560
番目の方法を示します。

97
00:06:54,560 --> 00:06:58,160
その一番下の分布を水平方向に反転して、右から左に行くにつれてサイコロの値が増加するようにします。

98
00:06:58,160 --> 00:07:01,200


99
00:07:02,560 --> 00:07:04,400
なぜこんなことをするのかと疑問に思うかもしれません。

100
00:07:04,400 --> 00:07:08,160
さて、サイコロの値のどのペアが互いに並んでいるかに注目してください。

101
00:07:08,800 --> 00:07:14,960
現在の位置では、1 と 6、2 と 5、3 と 4 などがあります。

102
00:07:14,960 --> 00:07:18,480
合計すると 7 になるすべての値のペアです。

103
00:07:18,480 --> 00:07:21,760
したがって、7

104
00:07:21,760 --> 00:07:24,480


105
00:07:24,480 --> 00:07:28,480
が出る確率について考えたい場合、その計算を頭の中に留めておく方法は、互いに並んでいる確率のペアをすべて取得し、それらのペアを掛け合わせてから、すべてを合計することです。結果。

106
00:07:28,480 --> 00:07:32,080


107
00:07:32,720 --> 00:07:35,600
これを一種の内積と考えたい人もいるかもしれません。

108
00:07:36,160 --> 00:07:40,240
しかし、全体としての演算は 1 つのドット積ではなく、多数のドット積になります。

109
00:07:40,240 --> 00:07:43,840
この一番下の分布をもう少し左にスライドすると、この場合、並んでいるサイコロの値は 1 と

110
00:07:43,840 --> 00:07:50,480
4、2 と 3、3

111
00:07:50,480 --> 00:07:52,720
と 2、4

112
00:07:53,280 --> 00:07:57,680
と 1、つまりすべてのサイコロの値のように見えます。合計が 5

113
00:07:57,680 --> 00:08:02,480
になるものです。ドット積をとれば、並んでいる確率のペアを掛け合わせて加算すると、5 が出る合計確率が得られます。

114
00:08:03,040 --> 00:08:07,440
一般に、この観点から見ると、合計の完全な分布を計算することは、その最下位の分布をさまざまな異なる位置にスライドさせ、途中でこのドット積を計算するように見えます。

115
00:08:07,440 --> 00:08:11,120


116
00:08:11,120 --> 00:08:13,120


117
00:08:14,960 --> 00:08:20,080
これは、先ほど説明した斜めのスライスとまったく同じ操作です。

118
00:08:20,160 --> 00:08:23,760
これらは、同じ基礎となる操作を視覚化するための 2 つの異なる方法にすぎません。

119
00:08:27,360 --> 00:08:32,880
どのような視覚化を選択しても、2

120
00:08:32,880 --> 00:08:37,280
つの異なる分布を取り込み、関連する確率変数の合計を表す新しい分布を吐き出すこの操作は畳み込みと呼ばれ、多くの場合このアスタリスクで示されます。

121
00:08:37,280 --> 00:08:41,280


122
00:08:41,280 --> 00:08:45,120
実際には、特に継続的なケースを設定する場合、2

123
00:08:45,120 --> 00:08:49,200
つの異なる関数を組み合わせて新しい関数を吐き出すと考えるのが望ましいでしょう。

124
00:08:50,160 --> 00:08:55,680
たとえば、この場合、最初のディストリビューションの関数に px という名前を付けるとします。

125
00:08:55,680 --> 00:09:00,640
これは、3

126
00:09:00,640 --> 00:09:03,040
などのサイコロの可能な値を取り込み、対応する確率を出力する関数になります。

127
00:09:04,320 --> 00:09:08,480
同様に、2 番目の分布の関数を py とし、合計の分布を記述する関数を

128
00:09:08,480 --> 00:09:12,960
px と y に加えます。

129
00:09:13,760 --> 00:09:18,720
専門用語では、px + y は

130
00:09:18,720 --> 00:09:20,960
px と py の間の畳み込みに等しいと言えます。

131
00:09:21,520 --> 00:09:26,320
ここで考えていただきたいのは、この演算の式がどのようになるべきかということです。

132
00:09:26,320 --> 00:09:30,800
これを視覚化する 2 つの異なる方法を見てきましたが、実際にそれを記号で記述するにはどうすればよいでしょうか?

133
00:09:30,800 --> 00:09:34,240
状況を把握するには、4 を接続する場合など、合計が

134
00:09:34,240 --> 00:09:38,880
4

135
00:09:38,880 --> 00:09:41,520
になる入力のペアに対応するさまざまなペアごとの積をすべて合計する、具体的な例を書き留めておくと役立つでしょう。

136
00:09:42,240 --> 00:09:44,320
より一般的には、次のようになります。

137
00:09:44,880 --> 00:09:50,800
この新しい関数は、ランダム変数 (s と呼ぶことにします) の可能な合計を入力として受け取り、出力されるものは、x

138
00:09:50,800 --> 00:09:55,840
と y の一連の値のペアの合計のように見えます。

139
00:09:55,840 --> 00:09:59,360
ただし、通常の書き方では x と y を使用するのではなく、変数の

140
00:09:59,360 --> 00:10:03,200
1 つ (この場合は x) に焦点を当て、取り得るすべての値の範囲を指定します。これは単に

141
00:10:03,200 --> 00:10:08,640
1 から 6 までを意味します。 。

142
00:10:08,640 --> 00:10:12,160
そして、y を書く代わりに、s から x

143
00:10:12,160 --> 00:10:15,520
を引いたものを書きます。基本的に、合計が s になるように数値を何でもいいのです。

144
00:10:17,120 --> 00:10:22,000
ここで、賢明な方は、この式が書かれていると、少し奇妙な癖があることに気づくかもしれません。

145
00:10:22,000 --> 00:10:25,600
たとえば、s が 4 に等しいなどの特定の値を入力し、この合計を展開して、x

146
00:10:25,600 --> 00:10:31,280
の範囲を 1 から 6

147
00:10:31,280 --> 00:10:37,200
までのすべての可能な値に設定すると、対応する y の値が定義域を下回る場合があります。明示的に定義しました。

148
00:10:37,200 --> 00:10:40,480
たとえば、0、負の 1、および負の 2 を接続します。

149
00:10:41,280 --> 00:10:45,840
これは実際にはそれほど大したことではありません。本質的には、これらの値がすべて 0

150
00:10:45,840 --> 00:10:48,560
であるため、後の項はすべてカウントされないと言うだけです。

151
00:10:48,560 --> 00:10:49,760
そしてそれはある程度意味があるはずです。

152
00:10:49,760 --> 00:10:53,680
赤いサイコロを振ってマイナス 1 になる確率はいくらですか?

153
00:10:53,680 --> 00:10:56,320
まあ、0ですよ。 それはありえない結果だ。

154
00:11:01,040 --> 00:11:04,960
次のステップとして、連続分布に注目してみましょう。連続分布では、ランダム変数は、すべての実数と同様に、無限連続体の任意の値を取ることができます。

155
00:11:04,960 --> 00:11:09,280


156
00:11:09,280 --> 00:11:11,360


157
00:11:11,360 --> 00:11:15,680
おそらく、気象モデリングを行って明日の正午の気温を予測しようとしているかもしれません。あるいは、財務予測を行っているかもしれません。あるいは、バスが到着するまでの一般的な待ち時間をモデル化しているかもしれません。

158
00:11:15,680 --> 00:11:17,520


159
00:11:17,520 --> 00:11:20,720


160
00:11:20,720 --> 00:11:23,760
継続性を処理する必要があるあらゆる種類のものがあります。

161
00:11:23,760 --> 00:11:28,080
私たちが描いたすべてのグラフにおいて、x

162
00:11:28,080 --> 00:11:32,640
値は依然として確率変数が取り得る数値を表していますが、y

163
00:11:32,640 --> 00:11:37,920
軸の解釈は少し異なります。これは、もはや確率を表すのではなく、代わりに、私たちがグラフにしているのは、いわゆる確率密度です。

164
00:11:37,920 --> 00:11:40,160


165
00:11:40,160 --> 00:11:43,280
これについては以前にもお話ししたので、ご存知のとおりです。

166
00:11:43,280 --> 00:11:48,320
基本的に、変数のサンプルが特定の範囲内に収まる確率は、その範囲内の曲線の下の面積のようになります。

167
00:11:48,320 --> 00:11:51,440


168
00:11:51,440 --> 00:11:55,760
この曲線を記述する関数は一般に確率密度関数と呼ばれ、よく使われる言葉であるため、単に PDF

169
00:11:55,760 --> 00:12:00,160
という略語が与えられることもよくあります。

170
00:12:00,160 --> 00:12:04,160
したがって、これらすべてを書き留める適切な方法は、サンプルが特定の範囲内に収まる確率が、その範囲内での PDF

171
00:12:04,240 --> 00:12:09,120
の積分 (確率密度関数)

172
00:12:09,120 --> 00:12:11,920
に似ている、ということになります。

173
00:12:12,720 --> 00:12:17,040
一般的な経験則として、離散の場合に合計を表示するときは常に、連続の場合には積分を使用します。

174
00:12:17,040 --> 00:12:19,520


175
00:12:20,320 --> 00:12:23,280
それでは、それが私たちの主な例で何を意味するのか考えてみましょう。

176
00:12:23,920 --> 00:12:28,320
2

177
00:12:28,320 --> 00:12:34,000
つの異なる確率変数があるとします。ただし、今回はそれぞれが連続分布に従い、それらの合計とその合計を表す新しい分布を理解したいとします。

178
00:12:34,960 --> 00:12:38,960
おそらく、その式がどのようなものになるかは、すでに類推して推測できるでしょう。

179
00:12:38,960 --> 00:12:44,720
先ほど書き留めた式で、p sub x

180
00:12:44,720 --> 00:12:49,440
が最初の変数の関数、p sub y

181
00:12:49,440 --> 00:12:55,920
が 2 番目の変数の関数であることを思い出してください。それらの間の畳み込み、これらの変数の合計を記述するもの自体は次のようになります。多数のペアごとの積を組み合わせた合計のようなものです。

182
00:12:55,920 --> 00:13:00,080
連続の場合の式は実際には 100%

183
00:13:00,080 --> 00:13:03,200
類似しています。単にその合計を積分に置き換えているだけです。

184
00:13:03,520 --> 00:13:08,960
学生が文脈を無視してこの畳み込みの定義を見ると、少し怖く感じることがあります。

185
00:13:08,960 --> 00:13:14,320
このたとえ話だけで十分に理解できると思いますが、継続的な性質が実際に異なる味わいを与えているため、それ自体が何を意味するのかを数分かけて考えてみる価値はあります。

186
00:13:14,320 --> 00:13:18,640


187
00:13:18,640 --> 00:13:25,600
そこで、式の各部分とそれが実際に何を言っているのかを解き明かすのに役立つ、小さなインタラクティブなデモを作成しました。

188
00:13:25,600 --> 00:13:29,200
たとえば、この積分の最初の項は x の f

189
00:13:29,200 --> 00:13:33,760
で、これは 2 つの確率変数の最初の密度関数を表します。

190
00:13:33,760 --> 00:13:39,520
この場合、その分布に対してこの種のくさび形関数を選択していますが、何でも構いません。

191
00:13:39,520 --> 00:13:43,920
同様に、 g は

192
00:13:43,920 --> 00:13:47,120
2 番目の確率変数の密度関数を表し、この種の二重塊状分布を選択しています。

193
00:13:47,120 --> 00:13:52,240
そして、先ほど与えられた合計を持つサイコロの値の可能なすべてのペアを調べたのと同じように、この積分について考えたいのは、次の値 x と

194
00:13:52,240 --> 00:13:56,560
y の可能なすべてのペアを反復処理することです。与えられた合計

195
00:13:56,560 --> 00:14:03,280
s に制約されます。

196
00:14:03,280 --> 00:14:06,640
これを対称的に行うための優れた表記法は実際にはありません。そのため、代わりに一般的にそれを書き留める方法は、変数の 1 つ (この場合は

197
00:14:06,640 --> 00:14:13,280
x) を人為的に強調し、その値 x

198
00:14:13,280 --> 00:14:18,960
の範囲をすべての可能な実数にします。負の無限大から無限大まで、関数 g に代入するのは

199
00:14:18,960 --> 00:14:25,040
s から x

200
00:14:25,040 --> 00:14:29,360
を引いたもので、本質的にはこの合計が s に制限されるようにするために必要なものは何でもです。

201
00:14:29,360 --> 00:14:35,120
したがって、デモでは、g を直接グラフ化する代わりに、s から x を引いたものをグラフ化したいと考えています。

202
00:14:35,120 --> 00:14:37,920
それはどのようなものですか?と自問するかもしれません。

203
00:14:37,920 --> 00:14:44,640
そうですね、負の x を入力として接続すると、グラフが水平方向に反転する効果があります。

204
00:14:44,640 --> 00:14:48,720
そして、このパラメータ s

205
00:14:48,720 --> 00:14:54,560
を投入すると、ある種の定数として扱われ、s が正か負かに応じてグラフを左または右にシフトする効果があります。

206
00:14:54,560 --> 00:14:58,560
デモでは、 s はパラメータであり、これを取得して少し移動します。

207
00:14:58,560 --> 00:15:04,800
本当の楽しみは、これら 2 つのグラフ間の積である積分の内容全体をグラフ化することから生まれます。

208
00:15:04,800 --> 00:15:08,800
これは、前に見たペアごとの商品のリストに似ていますが、この場合、これらのペアごとの商品をすべて合計するのではなく、それらを統合する必要があります。これは、この商品グラフの下の領域として解釈されます。

209
00:15:08,800 --> 00:15:14,160


210
00:15:14,160 --> 00:15:18,080


211
00:15:18,080 --> 00:15:27,200
s のこの値を中心にシフトすると、積グラフの形状が変化し、対応する領域も変化します。

212
00:15:27,200 --> 00:15:33,760
左側の 3 つのグラフすべてで、入力は x であり、数値 s は単なるパラメーターであることに注意してください。

213
00:15:33,760 --> 00:15:37,600
しかし、右側の最後のグラフ、つまり結果として得られる畳み込み自体の場合、この数値 s はその関数への入力であり、対応する出力は、左下のグラフの面積が何であれ、この

214
00:15:37,600 --> 00:15:45,680
f と

215
00:15:45,680 --> 00:15:50,480
g の組み合わせの積分が何であれ、対応する出力になります。であることが判明。

216
00:15:53,520 --> 00:15:56,240
ここで、2 つの確率変数のそれぞれが値の負の 1/2

217
00:15:56,240 --> 00:16:04,560
と正の 1/2 の間の一様分布に従うという簡単な例を行うと役立つかもしれません。

218
00:16:04,560 --> 00:16:09,840
つまり、密度関数はそれぞれこの種のトップハット形状になっており、グラフは負の 1/2 と正の 1/2 の間のすべての入力で

219
00:16:09,840 --> 00:16:17,040
1 に等しく、それ以外の場合は 0 に等しくなります。

220
00:16:17,040 --> 00:16:22,080
いつものように、問題は、合計の分布がどのようになるべきかということです。

221
00:16:22,080 --> 00:16:25,440
それでは、デモ内でどのように見えるかを説明しましょう。

222
00:16:25,440 --> 00:16:29,600
この場合、2 つのグラフ間の積は非常に簡単に解釈できます。

223
00:16:29,600 --> 00:16:34,720
グラフが互いに重なっている場合は 1 ですが、それ以外の場合は 0 になります。

224
00:16:34,720 --> 00:16:43,520
したがって、このパラメータを左に十分にスライドさせて、上のグラフがまったく重ならないようにすると、積のグラフはどこでも 0

225
00:16:43,520 --> 00:16:47,360
になり、これは、この合計が達成不可能であることを意味します。

226
00:16:47,360 --> 00:16:55,760
それは理にかなっているはずです。 2 つの変数はそれぞれマイナスの 2 分の 1 までしか取り得ないため、合計がマイナス 1 を下回ることはありません。

227
00:16:55,760 --> 00:16:59,840
s

228
00:16:59,840 --> 00:17:06,160
を右にスライドし始め、グラフが互いに重なり合うと、グラフが完全に重なり最大値に達するまで、面積は直線的に増加します。

229
00:17:06,160 --> 00:17:15,440
そして、その点を過ぎると、再び直線的に減少し始めます。これは、合計の分布がこの種のくさび形になることを意味します。

230
00:17:15,440 --> 00:17:21,920
そして、これは、サイコロのペア、つまり重みのないサイコロについて考えたことがある人にとっては、実際にいくらか馴染みがあるものだと思います。

231
00:17:21,920 --> 00:17:29,920
そこで、2 つの異なる一様分布変数を合計すると、合計の分布は特定のくさび形になります。

232
00:17:29,920 --> 00:17:36,400
確率は 7 で最大になるまで増加し、その後再び減少します。

233
00:17:36,400 --> 00:17:42,480
これがさらに面白くなるのは、2 つの均一に分布した変数の合計を求める代わりに、3

234
00:17:42,480 --> 00:17:47,280
つの異なる均一に分布した変数を合計するとどうなるかを尋ねる場合です。

235
00:17:47,280 --> 00:17:53,360
最初は、「わからない、2 つではなく 3 つのものを組み合わせて視覚化する新しい方法が必要だ」と思うかもしれません。

236
00:17:53,360 --> 00:18:01,200
しかし、実際にここでできることは、最初の 2

237
00:18:01,200 --> 00:18:05,040
つの合計を独自の変数として考え、それがこのくさび形分布に従っていることを理解し、それとトップハット関数の間の畳み込みを計算することです。

238
00:18:05,040 --> 00:18:07,840
デモを起動すると、次のようになります。

239
00:18:07,840 --> 00:18:16,720
繰り返しになりますが、トップ ハット関数が非常に優れているのは、トップ ハット関数を乗算すると、上のグラフから値をフィルタリングするような効果があることです。

240
00:18:16,720 --> 00:18:22,400
下の積は上のグラフのコピーと同じように見えますが、特定のウィンドウに限定されています。

241
00:18:22,400 --> 00:18:30,000
もう一度、これを左右にスライドさせ、領域が大きくなったり小さくなったりすると、結果は中央で最大になりますが、どちらかの側に向かって先細になりますが、今回はよりスムーズに動作します。

242
00:18:30,000 --> 00:18:32,560


243
00:18:32,560 --> 00:18:36,880
左上のグラフの移動平均を取っているようなものです。

244
00:18:36,880 --> 00:18:42,480
実際には、これは単なる一種ではなく、文字通り左上のグラフの移動平均です。

245
00:18:42,480 --> 00:18:45,440
これをさらに推し進めることも考えられるかもしれません。

246
00:18:45,440 --> 00:18:49,440
私たちが始めた方法は、2

247
00:18:49,440 --> 00:18:52,560
つのトップハット関数を組み合わせてこのウェッジを取得し、次に最初の関数をそのウェッジで置き換え、畳み込みを行うと、3

248
00:18:52,560 --> 00:18:59,520
つの異なる一様変数の合計を表すこのより滑らかな形状が得られました。ただ繰り返すだけです。

249
00:18:59,520 --> 00:19:01,120


250
00:19:01,120 --> 00:19:07,040
それを一番上の関数と交換し、それを平坦な長方形関数と畳み込みます。どのような結果が得られても、4

251
00:19:07,040 --> 00:19:13,600
つの均一に分布した確率変数の合計を表すはずです。

252
00:19:13,600 --> 00:19:17,840
中心極限定理に関するビデオを見た人なら、何を期待するかわかるはずです。

253
00:19:17,840 --> 00:19:22,800
この作業を何度も繰り返すうちに、形はどんどんベルカーブに近づいていきます。

254
00:19:22,800 --> 00:19:29,520
より正確に言えば、反復ごとに x 軸を再スケールして、標準偏差が

255
00:19:29,520 --> 00:19:35,280
1 になるようにする必要があります。これは、この反復された畳み込み

256
00:19:35,280 --> 00:19:37,520
(反復移動平均プロセスの一種) の主な効果は、関数を全体にわたって平坦化することであるためです。時間。

257
00:19:37,520 --> 00:19:40,160
したがって、制限内ではゼロに向かって平坦になります。

258
00:19:40,160 --> 00:19:43,680
しかし、再スケーリングとは、「はい、はい、平坦になるのはわかっていますが、その根底にある実際の形状は何ですか?」ということです。

259
00:19:43,680 --> 00:19:46,160


260
00:19:48,160 --> 00:19:53,040
中心極限定理のステートメントは、確率から得られる最も優れた事実の 1

261
00:19:53,040 --> 00:19:58,480
つであり、基本的にどのような分布でも開始でき、これは依然として真実であるということです。

262
00:19:58,480 --> 00:20:05,520
このように畳み込みを繰り返して、与えられた確率変数の合計がますます大きくなるようにすると、その合計を表す分布は、最初は正規分布とは大きく異なって見えるかもしれませんが、時間の経過とともに徐々に滑らかになり、最終的には任意の値になります。正規分布に近い。

263
00:20:05,520 --> 00:20:11,600


264
00:20:11,600 --> 00:20:18,080


265
00:20:18,080 --> 00:20:23,680
畳み込みを通じて平滑化を繰り返すこのプロセスを適用するとき、釣鐘曲線は、大まかに言えば、可能な限り滑らかな分布、可能なすべての関数の空間における魅力的な固定点であるかのようです。

266
00:20:23,680 --> 00:20:27,120


267
00:20:27,120 --> 00:20:30,880


268
00:20:35,520 --> 00:20:41,520
当然、なぜ正規分布なのか疑問に思うかもしれません。 なぜ他の機能ではなくこの機能があるのでしょうか?

269
00:20:41,520 --> 00:20:45,520
これは非常に良い答えです。その答えを示す最も楽しい方法は、畳み込みについて示す最後の視覚化に照らして行うことだと思います。

270
00:20:45,520 --> 00:20:50,240


271
00:20:50,240 --> 00:20:53,920
離散的なケースで、2

272
00:20:53,920 --> 00:20:56,720
つの視覚化のうちの最初に、この種の乗算表を作成し、考えられるすべての結果の確率を表示し、対角線に沿って加算することがどのように含まれたかを覚えていますか?

273
00:20:56,720 --> 00:21:02,720


274
00:21:02,720 --> 00:21:08,320
おそらくもうお気づきかと思いますが、最後のステップはこれを連続ケースに一般化することです。

275
00:21:08,320 --> 00:21:11,760
そしてそれは美しいですが、少し注意する必要があります。

276
00:21:11,760 --> 00:21:16,000
以前と同じ 2 つの関数、x の f

277
00:21:16,000 --> 00:21:22,240
と y の g を取り出した場合、この場合、前に調べた可能なペアのグリッドに類似したものは何でしょうか?

278
00:21:22,240 --> 00:21:26,080
この場合、各変数は任意の実数を取ることができるため、考えられるすべての実数のペアについて考えたいと思います。xy

279
00:21:26,080 --> 00:21:32,480
平面が思い浮かびます。

280
00:21:32,480 --> 00:21:37,840
すべての点は、両方の分布からサンプリングした場合に考えられる結果に対応します。

281
00:21:37,840 --> 00:21:41,200
ここで、これらの結果のいずれか 1 つの確率 xy、またはむしろその点の周りの確率密度は、この 2

282
00:21:41,200 --> 00:21:47,520
つが独立していると仮定すると、x の f と

283
00:21:47,520 --> 00:21:49,760
y の g を掛けたものになります。

284
00:21:49,760 --> 00:21:56,480
したがって、当然のこととして、この関数 (x の f と y の

285
00:21:56,480 --> 00:22:00,320
g の積) を 2 変数関数としてグラフ化すると、xy 平面上の表面のように見えるものが得られます。

286
00:22:00,400 --> 00:22:05,280
この例では、ある角度から見ると、つまり x

287
00:22:05,280 --> 00:22:09,360
値が変化していることがわかり、最初のグラフの形状になりますが、別の角度から見ると、y 方向の変化が強調されることに注目してください。

288
00:22:09,360 --> 00:22:14,240
2 番目のグラフの形になります。

289
00:22:14,240 --> 00:22:17,920
この 3 次元グラフには、必要な情報がすべてエンコードされています。

290
00:22:17,920 --> 00:22:21,040
これは、考えられるすべての結果のすべての確率密度を示します。

291
00:22:21,760 --> 00:22:26,880
そして、x と y

292
00:22:26,880 --> 00:22:31,520
が特定の合計になるように制約される結果のみにビューを制限したい場合、それはビューを対角のスライス、具体的には x と

293
00:22:31,520 --> 00:22:35,840
y が何らかの定数に等しい線上のスライスに限定することになります。

294
00:22:35,840 --> 00:22:40,480
この制約の対象となる結果の可能な確率密度はすべて、このグラフの下のスライスのように見えます。制約している特定の合計を中心に変更すると、注目している特定の対角スライスの周囲にシフトします。

295
00:22:40,480 --> 00:22:45,520


296
00:22:45,520 --> 00:22:50,480


297
00:22:50,480 --> 00:22:58,560
ここで、これらのスライスの 1

298
00:22:58,560 --> 00:23:04,320
つに沿ってすべての確率密度を結合する方法、つまりそれらを統合する方法は、この曲線の下の領域 (サーフェスのスライス)

299
00:23:04,320 --> 00:23:09,680
として解釈できると予想されるかもしれません。 そしてそれはほぼ正しいです。

300
00:23:09,680 --> 00:23:14,080
2

301
00:23:14,080 --> 00:23:20,640
の平方根の係数に関しては説明する必要がある微妙な詳細がありますが、一定の係数までは、これらのスライスの面積から畳み込みの値が得られます。

302
00:23:21,280 --> 00:23:25,360
実際、私たちが見ているこれらのスライスはすべて、前に見ていた製品グラフとまったく同じです。

303
00:23:25,360 --> 00:23:28,160


304
00:23:29,280 --> 00:23:34,080
ここで、この点を強調するために、両方のビジュアライゼーションを並べて表示します。s の値をゆっくりと減らしていきます。これは、左側では異なるスライスを見ていることを意味し、右側では、

305
00:23:34,080 --> 00:23:39,200
g

306
00:23:39,200 --> 00:23:44,080
の修正されたグラフを中心に再シフトします。

307
00:23:45,440 --> 00:23:49,120
右下のグラフの形状 (関数間の積)

308
00:23:49,120 --> 00:23:54,560
が、あらゆる点で斜めのスライスの形状とまったく同じに見えることに注目してください。

309
00:23:58,640 --> 00:24:02,480
そして、これには意味があるはずです。 これらは、同じものを視覚化する 2 つの異なる方法です。

310
00:24:03,040 --> 00:24:07,680
言葉にすると大変そうに聞こえますが、私たちが注目しているのは、指定された合計を持つ入力のペアに対応する関数の出力間の可能なすべての積です。

311
00:24:07,680 --> 00:24:13,040


312
00:24:13,040 --> 00:24:18,240
繰り返しになりますが、ちょっと口の悪い話ですが、私の言いたいことがおわかりいただけると思います。これには 2

313
00:24:18,240 --> 00:24:20,320
つの異なる見方があります。

314
00:24:31,200 --> 00:24:34,800
斜めスライスの視覚化の優れた点は、それが対称的な操作であることがより明確になることです。

315
00:24:34,800 --> 00:24:40,240
f と g を畳み込んだものは、g

316
00:24:40,240 --> 00:24:46,240
と f を畳み込んだものと同じであることがはるかに明白です。 技術的には、斜めのスライスはまったく同じ形状ではありません。

317
00:24:46,240 --> 00:24:51,120
実際には 2 の平方根の係数だけ引き伸ばされています。

318
00:24:51,680 --> 00:24:56,800
基本的な理由は、x と y が定数に等しいこれらの線の

319
00:24:56,800 --> 00:25:03,440
1 つに沿って小さなステップを踏むことを想像すると、x の値の変化、ここではデルタ x

320
00:25:03,440 --> 00:25:08,880
はそのステップの長さと同じではないからです。 このステップは実際には 2 の平方根の係数だけ長くなります。

321
00:25:09,440 --> 00:25:13,680
立ち止まって熟考したい微積分愛好家のために画面にメモを残しておきますが、結論は非常に単純で、畳み込みの出力は技術的にはこれらの対角スライスの領域にはまったく及ばないということです。

322
00:25:13,680 --> 00:25:18,960


323
00:25:18,960 --> 00:25:24,000
これらの面積を 2 の平方根で割る必要があります。

324
00:25:26,080 --> 00:25:29,920
これらすべてから少し離れて、私はこれがとても美しいと思うだけです。

325
00:25:29,920 --> 00:25:34,720
私たちは、2 つの確率変数をどのように足し合わせるのかという、非常に単純な質問、少なくとも一見単純な質問から始めました。

326
00:25:34,720 --> 00:25:40,160
そして最終的に行き着くのは、2 つの異なる関数を組み合わせるための非常に複雑な操作です。

327
00:25:40,160 --> 00:25:45,600
それを理解するための非常にきれいな方法が少なくとも

328
00:25:45,600 --> 00:25:50,400
2 つあります。しかし、それでも、皆さんの中には手を挙げて、きれいな写真はすべて良いものですが、実際に何かを計算するのに役立つのでしょうか、と言う人もいるかもしれません。

329
00:25:50,400 --> 00:25:55,360
たとえば、2

330
00:25:55,360 --> 00:26:01,280
つの正規分布確率変数の追加に関する最初のクイズの質問にはまだ答えていません。 そうですね、この種の質問に取り組む通常の方法は、宿題などで出題された場合、正規分布の公式を畳み込みの定義に組み込むことです。ここで説明してきました。

331
00:26:01,280 --> 00:26:05,360


332
00:26:05,360 --> 00:26:10,800


333
00:26:10,800 --> 00:26:16,720
その場合、ビジュアライゼーションは実際には表現が何を言っているかを明確にするために存在するだけですが、後部座席に座っています。

334
00:26:16,720 --> 00:26:22,080
この場合、積分は法外に難しいものではなく、分析手法もありますが、この例では、視覚化、具体的には斜めのスライスがより中心的な役割を果たす、より楽しい手法を紹介したいと思います。証明そのもの。

335
00:26:22,080 --> 00:26:28,400


336
00:26:28,400 --> 00:26:33,840


337
00:26:33,840 --> 00:26:39,120
皆さんの多くは、これが自分にとってどのようになるかを予測するのを実際に楽しんでいると思います。

338
00:26:39,120 --> 00:26:44,480
この

339
00:26:44,480 --> 00:26:49,360
3D グラフが 2

340
00:26:49,360 --> 00:26:55,040
つの正規分布の場合にどのようになるか、また、それがどのような特性を持っていてそれを利用できるかを考えてください。 そして、両方の分布が同じ標準偏差を持つ場合から始めると、確かに最も簡単です。

341
00:26:55,040 --> 00:27:00,960
詳細が必要な場合や、答えが中心極限定理にどのように適合するかを確認したい場合は、次のビデオに参加してください。

342
00:27:00,960 --> 00:27:05,280


