[
 {
  "input": "Have you ever wondered how it's possible to scratch a CD or a DVD and still have it play back whatever it's storing? ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 3.62,
  "end": 10.1
 },
 {
  "input": "The scratch really does affect the 1s and 0s on the disk, so it reads off different data from what was stored, but unless it's really scratched up, the bits it reads off are decoded into precisely the same file that was encoded onto it, a bit for bit copy, despite all those errors. ",
  "translatedText": "کیا آپ نے کبھی سوچا ہے کہ کسی سی ڈی یا ڈی وی ڈی کو سکریچ کرنا کیسے ممکن ہے اور پھر بھی اسے جو کچھ بھی اسٹور کیا جا رہا ہے اسے پلے بیک کرنا ہے؟ سکریچ واقعی ڈسک پر موجود 1s اور 0s کو متاثر کرتی ہے، اس لیے یہ ذخیرہ کیے گئے ڈیٹا سے مختلف ڈیٹا کو پڑھتا ہے، لیکن جب تک اسے واقعی سکریچ نہ کیا جائے، اس کے پڑھنے والے بٹس کو بالکل اسی فائل میں ڈی کوڈ کیا جاتا ہے جو اس پر انکوڈ کی گئی تھی۔ان تمام غلطیوں کے باوجود بٹ برائے بٹ کاپی۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 10.9,
  "end": 27.44
 },
 {
  "input": "There is a whole pile of mathematical cleverness that allows us to store data, and just as importantly to transmit data, in a way that's resilient to errors. ",
  "translatedText": "ریاضی کی ہوشیاری کا ایک پورا ڈھیر ہے جو ہمیں ڈیٹا کو ذخیرہ کرنے کی اجازت دیتا ہے، اور بالکل اسی طرح اہم بات یہ ہے کہ ڈیٹا کو منتقل کرنے کے لیے، اس طریقے سے جو غلطیوں کے لیے لچکدار ہو۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 27.44,
  "end": 36.66
 },
 {
  "input": "Well, okay, actually it doesn't take that much cleverness to come up with a way to do this. ",
  "translatedText": "ٹھیک ہے، ٹھیک ہے، درحقیقت ایسا کرنے کا کوئی طریقہ نکالنے میں اتنی چالاکی کی ضرورت نہیں ہے۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 37.52,
  "end": 41.6
 },
 {
  "input": "Any file, whether it's a video or sound or text, some code, an image, whatever, is ultimately some sequence of 1s and 0s. ",
  "translatedText": "کوئی بھی فائل، چاہے وہ ویڈیو ہو یا آواز یا ٹیکسٹ، کچھ کوڈ، کوئی تصویر، جو بھی ہو، بالآخر 1s اور 0s کی کچھ ترتیب ہوتی ہے۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 42.06,
  "end": 50.38
 },
 {
  "input": "And a simple strategy to correct any bit that gets flipped would be to store three copies of each bit. ",
  "translatedText": "اور پلٹ جانے والے کسی بھی بٹ کو درست کرنے کی ایک سادہ حکمت عملی یہ ہوگی کہ ہر بٹ کی تین کاپیاں اسٹور کی جائیں۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 50.68,
  "end": 56.0
 },
 {
  "input": "Then the machine reading this file could compare these three copies and always take the best 2 out of 3 whenever there's a discrepancy. ",
  "translatedText": "پھر اس فائل کو پڑھنے والی مشین ان تین کاپیوں کا موازنہ کر سکتی ہے اور جب بھی کوئی تضاد ہو تو ہمیشہ 3 میں سے بہترین 2 لے سکتی ہے۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 57.58,
  "end": 64.06
 },
 {
  "input": "But what that means is using two thirds of your space for redundancy. ",
  "translatedText": "لیکن اس کا مطلب یہ ہے کہ آپ کی جگہ کا دو تہائی فالتو پن کے لیے استعمال کرنا ہے۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 67.16,
  "end": 70.86
 },
 {
  "input": "And even then, for all of that space given up, there's no strong guarantee about what happens if more than one bit gets flipped. ",
  "translatedText": "اور پھر بھی، اس ساری جگہ کے لیے، اس بات کی کوئی مضبوط گارنٹی نہیں ہے کہ اگر ایک سے زیادہ بٹ پلٹ جائیں تو کیا ہوتا ہے۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 71.48,
  "end": 77.24
 },
 {
  "input": "The much more interesting question is how to make it so that errors can be corrected while giving up as little space as possible. ",
  "translatedText": "زیادہ دلچسپ سوال یہ ہے کہ اسے کیسے بنایا جائے تاکہ کم سے کم جگہ چھوڑتے ہوئے غلطیوں کو درست کیا جا سکے۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 77.98,
  "end": 84.02
 },
 {
  "input": "For example, using the method you'll learn about this video, you could store your data in 256-bit blocks, where each block uses 9 bits, 9! ",
  "translatedText": "مثال کے طور پر، اس ویڈیو کے بارے میں جو طریقہ آپ سیکھیں گے اس کو استعمال کرتے ہوئے، آپ اپنا ڈیٹا 256 بٹ بلاکس میں محفوظ کر سکتے ہیں، جہاں ہر بلاک 9 بٹس استعمال کرتا ہے، 9! ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 84.52,
  "end": 93.36
 },
 {
  "input": "to act as a kind of redundancy, and the other 247 bits are free to carry whatever meaningful message or data you want. ",
  "translatedText": "ایک قسم کی فالتو پن کے طور پر کام کرنے کے لیے، اور دیگر 247 بٹس جو بھی بامعنی پیغام یا ڈیٹا آپ چاہتے ہیں لے جانے کے لیے آزاد ہیں۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 93.76,
  "end": 100.3
 },
 {
  "input": "And it will still be the case that if any bit gets flipped here, just by looking at this block and nothing more, a machine will be able to identify that there was an error and precisely where it was so that it knows how to correct it. ",
  "translatedText": "اور پھر بھی یہ صورت رہے گی کہ اگر یہاں کوئی بٹ پلٹ جائے تو صرف اس بلاک کو دیکھ کر اور کچھ نہیں، ایک مشین اس بات کی نشاندہی کر سکے گی کہ غلطی کہاں تھی اور ٹھیک کہاں تھی تاکہ اسے درست کرنے کا طریقہ معلوم ہو جائے۔. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 100.9,
  "end": 112.66
 },
 {
  "input": "And honestly, that feels like magic. ",
  "translatedText": "اور ایمانداری سے، یہ جادو کی طرح محسوس ہوتا ہے. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 112.66,
  "end": 114.62
 },
 {
  "input": "And for this particular scheme, if two bits get flipped, the machine will at least be able to detect that there were two errors, though it won't know how to fix them. ",
  "translatedText": "اور اس مخصوص اسکیم کے لیے، اگر دو بٹس پلٹ جاتے ہیں، تو مشین کم از کم اس بات کا پتہ لگانے کے قابل ہو جائے گی کہ دو خرابیاں تھیں، حالانکہ اسے یہ نہیں معلوم ہوگا کہ انہیں کیسے ٹھیک کیا جائے۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 115.44,
  "end": 122.86
 },
 {
  "input": "We'll talk a little bit later about how this scales for blocks with different sizes. ",
  "translatedText": "ہم تھوڑی دیر بعد اس بارے میں بات کریں گے کہ یہ مختلف سائز والے بلاکس کے لیے کیسے پیمانہ بناتا ہے۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 123.52,
  "end": 126.9
 },
 {
  "input": "Methods that let you correct errors like this are known, reasonably enough, as error correction codes. ",
  "translatedText": "وہ طریقے جو آپ کو اس طرح کی غلطیوں کو درست کرنے دیتے ہیں، کافی حد تک، غلطی کو درست کرنے والے کوڈز کے طور پر جانا جاتا ہے۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 127.86,
  "end": 132.9
 },
 {
  "input": "For the better part of the last century, this field has been a really rich source of surprisingly deep math that gets incorporated into devices we use every day. ",
  "translatedText": "پچھلی صدی کے بہتر حصے کے لیے، یہ فیلڈ حیرت انگیز طور پر گہری ریاضی کا ایک بہت بڑا ذریعہ رہا ہے جو ان آلات میں شامل ہو جاتا ہے جنہیں ہم ہر روز استعمال کرتے ہیں۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 133.66,
  "end": 141.94
 },
 {
  "input": "The goal here is to give you a very thorough understanding of one of the earliest examples, known as a Hamming code. ",
  "translatedText": "یہاں مقصد یہ ہے کہ آپ کو ابتدائی مثالوں میں سے ایک، جسے ہیمنگ کوڈ کے نام سے جانا جاتا ہے، کی مکمل تفہیم فراہم کی جائے۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 142.84,
  "end": 148.66
 },
 {
  "input": "And by the way, the way I'm thinking about the structure of this video is less about explaining it as directly as possible, and more a matter of prompting you to invent it for yourself, with a little gentle guidance here and there. ",
  "translatedText": "اور ویسے، میں اس ویڈیو کی ساخت کے بارے میں جس طرح سے سوچ رہا ہوں، اس کی براہ راست وضاحت کرنے کے بارے میں کم ہے، اور یہاں اور وہاں تھوڑی سی نرم رہنمائی کے ساتھ، آپ کو اپنے لیے اسے ایجاد کرنے کی ترغیب دینے کا معاملہ ہے۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 149.52,
  "end": 159.82
 },
 {
  "input": "So when you feel like you see where it's going at some point, take that moment to pause, actively predict what the scheme is going to be before I tell you. ",
  "translatedText": "لہذا جب آپ کو لگتا ہے کہ آپ دیکھتے ہیں کہ یہ کسی وقت کہاں جا رہا ہے، تو اس لمحے کو توقف کریں، فعال طور پر پیش گوئی کریں کہ اس سے پہلے کہ میں آپ کو بتاؤں کہ اسکیم کیا ہونے والی ہے۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 160.12,
  "end": 166.72
 },
 {
  "input": "Also, if you want your understanding to get down to the hardware level, Ben Eater has made a video in conjunction with this one showing you how to actually implement Hamming codes on breadboards, which is extremely satisfying. ",
  "translatedText": "اس کے علاوہ، اگر آپ چاہتے ہیں کہ آپ کی سمجھ بوجھ ہارڈ ویئر کی سطح تک پہنچ جائے، تو بین ایٹر نے اس کے ساتھ مل کر ایک ویڈیو بنائی ہے جس میں آپ کو دکھایا گیا ہے کہ بریڈ بورڈز پر ہیمنگ کوڈز کو حقیقت میں کیسے نافذ کیا جائے، جو کہ انتہائی اطمینان بخش ہے۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 167.24,
  "end": 178.24
 },
 {
  "input": "You should know, Hamming codes are not as widely used as more modern codes, like the Reed-Solomon algorithm, but there is a certain magic to the contrast between just how impossible this task feels at the start, and how utterly reasonable it seems once you learn about Hamming. ",
  "translatedText": "آپ کو معلوم ہونا چاہیے، ہیمنگ کوڈز زیادہ جدید کوڈز کی طرح وسیع پیمانے پر استعمال نہیں کیے جاتے ہیں، جیسا کہ ریڈ-سلومن الگورتھم، لیکن اس کام کے آغاز میں کتنا ناممکن محسوس ہوتا ہے، اور یہ ایک بار کتنا معقول لگتا ہے اس کے برعکس ایک خاص جادو ہے۔آپ ہیمنگ کے بارے میں سیکھتے ہیں۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 179.3,
  "end": 193.0
 },
 {
  "input": "The basic principle of error correction is that in a vast space of all possible messages, only some subset are going to be considered valid messages. ",
  "translatedText": "غلطی کی تصحیح کا بنیادی اصول یہ ہے کہ تمام ممکنہ پیغامات کی ایک وسیع جگہ میں، صرف کچھ ذیلی سیٹ کو درست پیغامات سمجھا جائے گا۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 193.72,
  "end": 202.18
 },
 {
  "input": "As an analogy, think about correctly spelled words vs incorrectly spelled words. ",
  "translatedText": "تشبیہ کے طور پر، صحیح ہجے والے الفاظ بمقابلہ غلط ہجے والے الفاظ کے بارے میں سوچیں۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 202.8,
  "end": 206.94
 },
 {
  "input": "Whenever a valid message gets altered, the receiver is responsible for correcting what they see back to the nearest valid neighbor, as you might do with a typo. ",
  "translatedText": "جب بھی کسی درست پیغام میں ردوبدل کیا جاتا ہے، وصول کنندہ کی ذمہ داری ہے کہ وہ اسے درست کرے جو وہ قریب ترین درست پڑوسی کو دیکھتا ہے، جیسا کہ آپ ٹائپنگ کی غلطی کے ساتھ کر سکتے ہیں۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 208.9,
  "end": 217.34
 },
 {
  "input": "Coming up with a concrete algorithm to efficiently categorize messages like this, though, takes a certain cleverness. ",
  "translatedText": "اس طرح کے پیغامات کو مؤثر طریقے سے درجہ بندی کرنے کے لیے ایک ٹھوس الگورتھم کے ساتھ آنا، اگرچہ، ایک خاص ہوشیاری کی ضرورت ہے۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 218.22,
  "end": 224.06
 },
 {
  "input": "The story begins in the 1940s, when a young Richard Hamming was working for Bell Labs, and some of his work involved using a very big expensive punch card computer that he had only limited access to. ",
  "translatedText": "کہانی 1940 کی دہائی میں شروع ہوتی ہے، جب ایک نوجوان رچرڈ ہیمنگ بیل لیبز کے لیے کام کر رہا تھا، اور اس کے کچھ کاموں میں ایک بہت بڑا مہنگا پنچ کارڈ کمپیوٹر استعمال کرنا شامل تھا جس تک اس کی رسائی محدود تھی۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 226.78,
  "end": 237.42
 },
 {
  "input": "And the programs he kept putting through it kept failing, because every now and then a bit would get misread. ",
  "translatedText": "اور جو پروگرام وہ اس کے ذریعے ڈالتے رہے وہ ناکام ہوتے رہے، کیونکہ ہر وقت اور پھر تھوڑا سا غلط پڑھا جاتا تھا۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 237.8,
  "end": 242.4
 },
 {
  "input": "Frustration being the crucible of invention, he got so fed up that he invented the world's first error correction code. ",
  "translatedText": "فرسٹریشن ایجاد کا سنگ میل ہونے کی وجہ سے وہ اتنا تنگ آ گیا کہ اس نے دنیا کا پہلا غلطی کو درست کرنے والا کوڈ ایجاد کیا۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 243.12,
  "end": 248.42
 },
 {
  "input": "There are many different ways to frame Hamming codes, but as a first pass we're going to go through it the way Hamming himself thought about them. ",
  "translatedText": "ہیمنگ کوڈز کو فریم کرنے کے بہت سے مختلف طریقے ہیں، لیکن پہلے پاس کے طور پر ہم اس سے گزریں گے جس طرح سے ہیمنگ نے خود ان کے بارے میں سوچا تھا۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 249.06,
  "end": 255.38
 },
 {
  "input": "Let's use an example that's simple, but not too simple, a block of 16 bits. ",
  "translatedText": "آئیے ایک مثال استعمال کرتے ہیں جو سادہ ہے، لیکن بہت آسان نہیں، 16 بٹس کا ایک بلاک۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 256.52,
  "end": 260.94
 },
 {
  "input": "We'll number the positions of these bits from 0 up to 15. ",
  "translatedText": "ہم ان بٹس کی پوزیشن کو 0 سے 15 تک نمبر دیں گے۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 261.82,
  "end": 264.74
 },
 {
  "input": "The actual data we want to store is only going to make up 12 of these bits, while 4 of the positions are reserved as a kind of redundancy. ",
  "translatedText": "اصل ڈیٹا جو ہم ذخیرہ کرنا چاہتے ہیں وہ ان بٹس میں سے صرف 12 پر مشتمل ہے، جبکہ 4 پوزیشنیں ایک قسم کی فالتو پن کے طور پر محفوظ ہیں۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 265.62,
  "end": 273.0
 },
 {
  "input": "The word redundant here doesn't simply mean copy, after all, those 4 bits don't give us enough room to blindly copy the data. ",
  "translatedText": "یہاں فالتو لفظ کا مطلب صرف کاپی نہیں ہے، آخر کار، وہ 4 بٹس ہمیں اتنی گنجائش نہیں دیتے کہ ڈیٹا کو آنکھیں بند کرکے کاپی کر سکیں۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 273.9,
  "end": 280.04
 },
 {
  "input": "Instead, they'll need to be a much more nuanced and clever kind of redundancy, not adding any new information, but adding resilience. ",
  "translatedText": "اس کے بجائے، انہیں بہت زیادہ نفیس اور ہوشیار قسم کی فالتو پن کی ضرورت ہوگی، کوئی نئی معلومات شامل نہیں کرنا، بلکہ لچک کا اضافہ کرنا ہوگا۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 280.72,
  "end": 287.28
 },
 {
  "input": "You might expect these 4 special bits to come nicely packaged together, maybe at the end or something like that, but as you'll see, having them sit in positions which are powers of 2 allows for something that's really elegant by the end. ",
  "translatedText": "آپ توقع کر سکتے ہیں کہ یہ 4 خصوصی بٹس اچھی طرح سے ایک ساتھ پیک کیے جائیں گے، شاید آخر میں یا اس طرح کی کوئی چیز، لیکن جیسا کہ آپ دیکھیں گے، ان کو پوزیشنوں پر بیٹھنے سے جو کہ 2 کی طاقتیں ہیں آخر تک ایسی چیز کی اجازت دیتی ہے جو واقعی خوبصورت ہو۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 288.6,
  "end": 299.62
 },
 {
  "input": "It also might give you a little hint about how this scales for larger blocks. ",
  "translatedText": "یہ آپ کو اس بارے میں تھوڑا سا اشارہ بھی دے سکتا ہے کہ یہ بڑے بلاکس کے لیے کس طرح ترازو کرتا ہے۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 300.2,
  "end": 303.54
 },
 {
  "input": "Also technically it ends up being only 11 bits of data, you'll find there's a mild nuance for what goes on at position 0, but don't worry about that for now. ",
  "translatedText": "نیز تکنیکی طور پر یہ صرف 11 بٹس ڈیٹا پر ختم ہوتا ہے، آپ کو معلوم ہوگا کہ پوزیشن 0 پر کیا ہوتا ہے اس کے لیے ایک ہلکی اہمیت ہے، لیکن فی الحال اس کی فکر نہ کریں۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 304.9,
  "end": 313.26
 },
 {
  "input": "Like any error correction algorithm, this will involve two players, a sender who's responsible for setting these 4 special bits, and a receiver who's responsible for performing some kind of check and correcting the errors. ",
  "translatedText": "کسی بھی غلطی کو درست کرنے والے الگورتھم کی طرح، اس میں دو کھلاڑی شامل ہوں گے، ایک بھیجنے والا جو ان 4 خصوصی بٹس کو ترتیب دینے کا ذمہ دار ہے، اور ایک وصول کنندہ جو کسی قسم کی جانچ پڑتال کرنے اور غلطیوں کو درست کرنے کا ذمہ دار ہے۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 314.14,
  "end": 325.54
 },
 {
  "input": "Of course, the words sender and receiver really refer to machines or software that's doing all the checks, and the idea of a message is meant really broadly, to include things like storage. ",
  "translatedText": "بلاشبہ، بھیجنے والے اور وصول کنندہ کے الفاظ واقعی ان مشینوں یا سافٹ ویئر کا حوالہ دیتے ہیں جو تمام چیک کر رہے ہیں، اور پیغام کے خیال کا مطلب واقعی وسیع پیمانے پر ہے، اسٹوریج جیسی چیزوں کو شامل کرنا۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 326.3,
  "end": 334.74
 },
 {
  "input": "After all, storing data is the same thing as sending a message just from the past to the future instead of from one place to another. ",
  "translatedText": "بہر حال، ڈیٹا کو ذخیرہ کرنا وہی چیز ہے جو ایک جگہ سے دوسری جگہ کی بجائے ماضی سے مستقبل کو پیغام بھیجنا ہے۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 335.34,
  "end": 341.68
 },
 {
  "input": "So that's the setup, but before we can dive in we need to talk about a related idea which was fresh on Hamming's mind in the time of his discovery, a method which lets you detect any single bit errors, but not to correct them, known in the business as a parity check. ",
  "translatedText": "تو یہ سیٹ اپ ہے، لیکن اس سے پہلے کہ ہم اس میں غوطہ لگا سکیں ہمیں ایک متعلقہ آئیڈیا کے بارے میں بات کرنے کی ضرورت ہے جو ہیمنگ کے ذہن میں اس کی دریافت کے وقت تازہ تھا، ایک ایسا طریقہ جو آپ کو کسی بھی چھوٹی غلطی کا پتہ لگانے دیتا ہے، لیکن ان کو درست کرنے کے لیے نہیں، معلوم ہے۔کاروبار میں برابری کی جانچ کے طور پر۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 342.56,
  "end": 356.3
 },
 {
  "input": "For a parity check, we separate out only one single bit that the sender is responsible for tuning, and the rest are free to carry a message. ",
  "translatedText": "برابری کی جانچ کے لیے، ہم صرف ایک ہی بٹ کو الگ کرتے ہیں کہ بھیجنے والا ٹیوننگ کے لیے ذمہ دار ہے، اور باقی پیغام لے جانے کے لیے آزاد ہیں۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 356.88,
  "end": 363.82
 },
 {
  "input": "The only job of this special bit is to make sure that the total number of 1s in the message is an even number. ",
  "translatedText": "اس خاص بٹ کا واحد کام اس بات کو یقینی بنانا ہے کہ پیغام میں 1s کی کل تعداد ایک ہموار نمبر ہے۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 364.88,
  "end": 371.28
 },
 {
  "input": "So for example right now, that total number of 1s is 7, that's odd, so the sender needs to flip that special bit to be a 1, making the count even. ",
  "translatedText": "تو مثال کے طور پر اس وقت، 1s کی کل تعداد 7 ہے، یہ عجیب ہے، لہذا بھیجنے والے کو اس خاص بٹ کو 1 ہونے کے لیے پلٹنا ہوگا، جس سے گنتی برابر ہوجائے گی۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 372.08,
  "end": 379.96
 },
 {
  "input": "But if the block had already started off with an even number of 1s, then this special bit would have been kept at a 0. ",
  "translatedText": "لیکن اگر بلاک پہلے ہی 1s کے یکساں نمبر کے ساتھ شروع ہو چکا ہوتا، تو اس خاص بٹ کو 0 پر رکھا جاتا۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 380.8,
  "end": 386.42
 },
 {
  "input": "This is pretty simple, deceptively simple, but it's an incredibly elegant way to distill the idea of change anywhere in a message to be reflected in a single bit of information. ",
  "translatedText": "یہ بہت آسان ہے، دھوکہ دہی سے آسان ہے، لیکن یہ ایک ناقابل یقین حد تک خوبصورت طریقہ ہے کہ کسی پیغام میں کہیں بھی تبدیلی کے خیال کو کسی بھی معلومات میں جھلکنے کا۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 387.34,
  "end": 396.78
 },
 {
  "input": "Notice if any bit of this message gets flipped, either from 0 to 1 or 1 to 0, it changes the total count of 1s from being even to being odd. ",
  "translatedText": "نوٹ کریں کہ اگر اس پیغام کا کوئی حصہ پلٹ جاتا ہے، یا تو 0 سے 1 یا 1 سے 0 تک، یہ 1s کی کل گنتی کو برابر سے طاق میں بدل دیتا ہے۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 397.5,
  "end": 406.54
 },
 {
  "input": "So if you're the receiver, you look at this message, and you see an odd number of 1s, you can know for sure that some error has occurred, even though you might have no idea where it was. ",
  "translatedText": "لہذا اگر آپ وصول کنندہ ہیں، آپ اس پیغام کو دیکھتے ہیں، اور آپ کو 1s کی ایک طاق تعداد نظر آتی ہے، آپ یقینی طور پر جان سکتے ہیں کہ کچھ خرابی واقع ہوئی ہے، حالانکہ آپ کو اندازہ نہیں ہوگا کہ یہ کہاں تھا۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 407.98,
  "end": 417.46
 },
 {
  "input": "In the jargon, whether a group of bits has an even or odd number of 1s is known as its parity. ",
  "translatedText": "جملے میں، چاہے بٹس کے ایک گروپ میں 1s کی یکساں یا طاق تعداد ہو اسے برابری کہا جاتا ہے۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 418.5,
  "end": 423.34
 },
 {
  "input": "You could also use numbers and say the parity is 0 or 1, which is typically more helpful once you start doing math with the idea. ",
  "translatedText": "آپ اعداد بھی استعمال کر سکتے ہیں اور کہہ سکتے ہیں کہ برابری 0 یا 1 ہے، جو عام طور پر زیادہ مددگار ثابت ہوتی ہے جب آپ خیال کے ساتھ ریاضی کرنا شروع کر دیتے ہیں۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 424.86,
  "end": 430.72
 },
 {
  "input": "And this special bit that the sender uses to control the parity is called the parity bit. ",
  "translatedText": "اور یہ خاص بٹ جسے بھیجنے والا برابری کو کنٹرول کرنے کے لیے استعمال کرتا ہے اسے برابری بٹ کہا جاتا ہے۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 431.22,
  "end": 435.52
 },
 {
  "input": "And actually, we should be clear, if the receiver sees an odd parity, it doesn't necessarily mean there was just one error, there might have been 3 errors, or 5, or any other odd number, but they can know for sure that it wasn't 0. ",
  "translatedText": "اور درحقیقت، ہمیں واضح ہونا چاہیے، اگر وصول کنندہ کو عجیب برابری نظر آتی ہے، تو اس کا مطلب یہ نہیں ہے کہ صرف ایک غلطی تھی، ہو سکتا ہے 3 غلطیاں ہوں، یا 5، یا کوئی اور طاق عدد، لیکن وہ یقینی طور پر جان سکتے ہیں۔کہ یہ 0 نہیں تھا۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 437.56,
  "end": 449.26
 },
 {
  "input": "On the other hand, if there had been 2 errors, or any even number of errors, that final count of 1s would still be even, so the receiver can't have full confidence that an even count necessarily means the message is error-free. ",
  "translatedText": "دوسری طرف، اگر 2 غلطیاں ہوتیں، یا غلطیوں کی کوئی بھی تعداد ہوتی، تو 1s کی حتمی گنتی ابھی بھی برابر ہوتی، اس لیے وصول کنندہ کو مکمل اعتماد نہیں ہو سکتا کہ مساوی گنتی کا لازمی مطلب ہے کہ پیغام غلطی سے پاک ہے۔. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 449.98,
  "end": 462.3
 },
 {
  "input": "You might complain that a message which gets messed up by only 2 bit flips is pretty weak, and you would be absolutely right. ",
  "translatedText": "آپ شکایت کر سکتے ہیں کہ ایک پیغام جو صرف 2 بٹ پلٹنے سے گڑبڑ ہو جاتا ہے وہ کافی کمزور ہے، اور آپ بالکل درست ہوں گے۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 462.84,
  "end": 469.08
 },
 {
  "input": "Keep in mind, though, there is no method for error detection or correction that could give you 100% confidence that the message you receive is the one the sender intended. ",
  "translatedText": "ذہن میں رکھیں، اگرچہ، غلطی کا پتہ لگانے یا درست کرنے کا کوئی طریقہ نہیں ہے جو آپ کو 100% یقین دلا سکے کہ آپ کو جو پیغام موصول ہوتا ہے وہی بھیجنے والے کا ارادہ ہے۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 469.7,
  "end": 478.9
 },
 {
  "input": "After all, enough random noise could always change one valid message into another valid message just by pure chance. ",
  "translatedText": "سب کے بعد، کافی بے ترتیب شور ہمیشہ ایک درست پیغام کو صرف خالص موقع سے دوسرے درست پیغام میں بدل سکتا ہے۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 479.58,
  "end": 485.44
 },
 {
  "input": "Instead, the goal is to come up with a scheme that's robust up to a certain maximum number of errors, or maybe to reduce the probability of a false positive like this. ",
  "translatedText": "اس کے بجائے، مقصد ایک ایسی اسکیم کے ساتھ آنا ہے جو غلطیوں کی ایک خاص زیادہ سے زیادہ تعداد تک مضبوط ہو، یا شاید اس طرح کے غلط مثبت ہونے کے امکان کو کم کرنا۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 486.24,
  "end": 495.38
 },
 {
  "input": "Parity checks on their own are pretty weak, but by distilling the idea of change across a full message down to a single bit, what they give us is a powerful building block for more sophisticated schemes. ",
  "translatedText": "اپنے طور پر برابری کی جانچ پڑتال کافی کمزور ہیں، لیکن ایک مکمل پیغام میں تبدیلی کے خیال کو ایک ہی جگہ تک پھیلانے سے، وہ ہمیں جو کچھ دیتے ہیں وہ زیادہ نفیس سکیموں کے لیے ایک طاقتور عمارت ہے۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 496.26,
  "end": 507.16
 },
 {
  "input": "For example, as Hamming was searching for a way to identify where an error happened, not just that it happened, his key insight was that if you apply some parity checks not to the full message, but to certain carefully selected subsets, you can ask a more refined series of questions that pin down the location of any single bit error. ",
  "translatedText": "مثال کے طور پر، جیسا کہ ہیمنگ یہ شناخت کرنے کا طریقہ تلاش کر رہا تھا کہ غلطی کہاں ہوئی، نہ صرف یہ کہ یہ ہوا، اس کی اہم بصیرت یہ تھی کہ اگر آپ کچھ برابری کی جانچ پڑتال پورے پیغام پر نہیں، بلکہ احتیاط سے منتخب کردہ کچھ ذیلی سیٹوں پر کرتے ہیں، تو آپ پوچھ سکتے ہیں۔سوالات کی ایک مزید بہتر سیریز جو کسی ایک بٹ کی غلطی کے مقام کو پن کرتی ہے۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 507.94,
  "end": 525.94
 },
 {
  "input": "The overall feeling is a bit like playing a game of 20 questions, asking yes or no queries that chop the space of possibilities in half. ",
  "translatedText": "مجموعی احساس کچھ ایسا ہی ہے جیسے 20 سوالات کا کھیل کھیلنا، ہاں یا نہیں کے سوالات پوچھنا جو امکانات کی جگہ کو آدھے حصے میں کاٹ دیتے ہیں۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 526.68,
  "end": 533.38
 },
 {
  "input": "For example, let's say we do a parity check just on these 8 bits, all of the odd numbered positions. ",
  "translatedText": "مثال کے طور پر، ہم کہتے ہیں کہ ہم صرف ان 8 بٹس پر برابری کی جانچ کرتے ہیں، تمام طاق نمبر والی پوزیشنوں پر۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 534.16,
  "end": 539.38
 },
 {
  "input": "Then if an error is detected, it gives the receiver a little more information about where specifically the error is, namely that it's in an odd position. ",
  "translatedText": "پھر اگر کسی غلطی کا پتہ چل جاتا ہے، تو یہ وصول کنندہ کو اس بارے میں تھوڑی زیادہ معلومات فراہم کرتا ہے کہ خاص طور پر خرابی کہاں ہے، یعنی یہ کہ یہ ایک عجیب پوزیشن میں ہے۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 540.1,
  "end": 548.24
 },
 {
  "input": "If no error is detected among those 8 bits, it either means there's no error at all, or it sits somewhere in the even positions. ",
  "translatedText": "اگر ان 8 بٹس میں کوئی خرابی نہیں پائی جاتی ہے، تو اس کا مطلب ہے کہ یا تو کوئی غلطی نہیں ہے، یا یہ یکساں پوزیشنوں میں کہیں بیٹھا ہے۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 548.94,
  "end": 556.24
 },
 {
  "input": "You might think that limiting a parity check to half the bits makes it less effective, but when it's done in conjunction with other well-chosen checks, it counterintuitively gives us something a lot more powerful. ",
  "translatedText": "آپ سوچ سکتے ہیں کہ برابری کی جانچ کو آدھے بٹس تک محدود کرنے سے یہ کم موثر ہو جاتا ہے، لیکن جب یہ دوسرے اچھی طرح سے منتخب کردہ چیکوں کے ساتھ مل کر کیا جاتا ہے، تو یہ جوابی طور پر ہمیں بہت زیادہ طاقتور چیز فراہم کرتا ہے۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 557.18,
  "end": 567.2
 },
 {
  "input": "To actually set up that parity check, remember, it requires earmarking some special bit that has control for the parity of that full group. ",
  "translatedText": "حقیقت میں اس برابری کی جانچ کو ترتیب دینے کے لیے، یاد رکھیں، اس کے لیے کچھ خاص بٹ کو نشان زد کرنے کی ضرورت ہوتی ہے جس میں اس پورے گروپ کی برابری کے لیے کنٹرول ہو۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 569.24,
  "end": 576.62
 },
 {
  "input": "Here let's just choose position 1. ",
  "translatedText": "یہاں آئیے صرف پوزیشن 1 کا انتخاب کرتے ہیں۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 577.48,
  "end": 579.18
 },
 {
  "input": "For the example shown, the parity of these 8 bits is currently odd, so the sender is responsible for toggling that parity bit, and now it's even. ",
  "translatedText": "مثال کے طور پر، ان 8 بٹس کی برابری فی الحال عجیب ہے، لہذا بھیجنے والا اس برابری بٹ کو ٹوگل کرنے کا ذمہ دار ہے، اور اب یہ برابر ہے۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 579.72,
  "end": 586.98
 },
 {
  "input": "This is only 1 out of 4 parity checks that we'll do. ",
  "translatedText": "یہ 4 میں سے صرف 1 برابری چیک ہے جو ہم کریں گے۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 587.94,
  "end": 590.68
 },
 {
  "input": "The second check is among the 8 bits on the right half of the grid, at least as we've drawn it here. ",
  "translatedText": "دوسرا چیک گرڈ کے دائیں نصف پر 8 بٹس میں سے ہے، کم از کم جیسا کہ ہم نے اسے یہاں کھینچا ہے۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 590.92,
  "end": 596.3
 },
 {
  "input": "This time we might use position 2 as a parity bit, so these 8 bits already have an even parity, and the sender can feel good leaving that bit number 2 unchanged. ",
  "translatedText": "اس بار ہم پوزیشن 2 کو برابری بٹ کے طور پر استعمال کر سکتے ہیں، اس لیے ان 8 بٹس میں پہلے سے ہی برابر برابری موجود ہے، اور بھیجنے والا اس بٹ نمبر 2 کو بغیر کسی تبدیلی کے چھوڑ کر اچھا محسوس کر سکتا ہے۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 596.68,
  "end": 606.06
 },
 {
  "input": "Then on the other end, if the receiver checks the parity of this group and they find that it's odd, they'll know that the error is somewhere among these 8 bits on the right. ",
  "translatedText": "پھر دوسرے سرے پر، اگر وصول کنندہ اس گروپ کی برابری کو چیک کرتا ہے اور اسے معلوم ہوتا ہے کہ یہ عجیب ہے، تو وہ جان لیں گے کہ غلطی دائیں جانب ان 8 بٹس میں کہیں ہے۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 607.02,
  "end": 615.38
 },
 {
  "input": "Otherwise it means either there's no error, or the error is somewhere on the left half. ",
  "translatedText": "بصورت دیگر اس کا مطلب ہے کہ یا تو کوئی خرابی نہیں ہے، یا غلطی بائیں آدھے حصے میں کہیں ہے۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 615.82,
  "end": 620.58
 },
 {
  "input": "Or I guess there could have been two errors, but for right now we're going to assume that there's at most one error in the entire block. ",
  "translatedText": "یا میرا اندازہ ہے کہ دو غلطیاں ہو سکتی ہیں، لیکن ابھی کے لیے ہم یہ فرض کرنے جا رہے ہیں کہ پورے بلاک میں زیادہ سے زیادہ ایک غلطی ہے۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 621.12,
  "end": 626.5
 },
 {
  "input": "Things break down completely for more than that. ",
  "translatedText": "اس سے زیادہ چیزیں مکمل طور پر ٹوٹ جاتی ہیں۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 626.94,
  "end": 628.74
 },
 {
  "input": "Here, before we look at the next two checks, take a moment to think about what these first two allow us to do when you consider them together. ",
  "translatedText": "یہاں، اس سے پہلے کہ ہم اگلے دو چیکوں کو دیکھیں، اس کے بارے میں سوچنے کے لیے ایک لمحہ نکالیں کہ جب آپ ان کو ایک ساتھ دیکھتے ہیں تو یہ پہلے دو ہمیں کیا کرنے کی اجازت دیتے ہیں۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 629.16,
  "end": 635.1
 },
 {
  "input": "Let's say you detect an error among the odd columns, and among the right half. ",
  "translatedText": "ہم کہتے ہیں کہ آپ کو طاق کالموں کے درمیان اور دائیں نصف کے درمیان ایک خرابی کا پتہ چلا ہے۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 635.8,
  "end": 639.66
 },
 {
  "input": "It necessarily means the error is somewhere in the last column. ",
  "translatedText": "اس کا لازمی مطلب یہ ہے کہ غلطی آخری کالم میں کہیں ہے۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 640.2,
  "end": 643.04
 },
 {
  "input": "If there was no error in the odd column but there was one in the right half, that tells you it's in the second to last column. ",
  "translatedText": "اگر طاق کالم میں کوئی خرابی نہیں تھی لیکن دائیں نصف میں ایک تھی، تو یہ بتاتا ہے کہ یہ دوسرے سے آخری کالم میں ہے۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 643.82,
  "end": 649.7
 },
 {
  "input": "Likewise if there is an error in the odd columns but not in the right half, you know it's somewhere in the second column. ",
  "translatedText": "اسی طرح اگر طاق کالموں میں کوئی خرابی ہے لیکن دائیں نصف میں نہیں، تو آپ جانتے ہیں کہ یہ دوسرے کالم میں کہیں ہے۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 650.44,
  "end": 656.02
 },
 {
  "input": "And if neither of those two parity checks detects anything, it means the only place that an error could be is in that leftmost column. ",
  "translatedText": "اور اگر ان دونوں برابری کی جانچ پڑتال میں سے کوئی بھی چیز کا پتہ نہیں لگاتا ہے، تو اس کا مطلب ہے کہ ایک ہی جگہ غلطی ہوسکتی ہے جو اس بائیں کالم میں ہے۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 656.02,
  "end": 663.12
 },
 {
  "input": "But it also might simply mean there's no error at all. ",
  "translatedText": "لیکن اس کا سیدھا مطلب یہ بھی ہو سکتا ہے کہ کوئی غلطی نہیں ہے۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 663.34,
  "end": 666.12
 },
 {
  "input": "Which is all a rather belabored way to say that two parity checks let us pin down the column. ",
  "translatedText": "جو کہ یہ کہنے کا سب سے زیادہ پیچیدہ طریقہ ہے کہ دو برابری کی جانچ ہمیں کالم کو پن کرنے دیتی ہے۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 666.3,
  "end": 670.84
 },
 {
  "input": "From here, you can probably guess what follows. ",
  "translatedText": "یہاں سے، آپ شاید اندازہ لگا سکتے ہیں کہ کیا ہوتا ہے۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 671.48,
  "end": 673.64
 },
 {
  "input": "We do basically the same thing but for the rows. ",
  "translatedText": "ہم بنیادی طور پر ایک ہی کام کرتے ہیں لیکن قطاروں کے لیے۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 673.8,
  "end": 676.14
 },
 {
  "input": "There's going to be a parity check on the odd rows, using position 4 as a parity bit. ",
  "translatedText": "پوزیشن 4 کو برابری بٹ کے طور پر استعمال کرتے ہوئے، طاق قطاروں پر برابری کی جانچ کی جائے گی۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 676.44,
  "end": 680.9
 },
 {
  "input": "So in this example that group already has an even parity, so bit 4 would be set to a 0. ",
  "translatedText": "تو اس مثال میں اس گروپ میں پہلے سے ہی برابر برابری ہے، لہذا بٹ 4 کو 0 پر سیٹ کیا جائے گا۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 681.38,
  "end": 685.82
 },
 {
  "input": "And finally there's a parity check on the bottom two rows, using position 8 as a parity bit. ",
  "translatedText": "اور آخر میں نچلی دو قطاروں پر برابری کی جانچ پڑتال ہے، پوزیشن 8 کو برابری بٹ کے طور پر استعمال کرتے ہوئے۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 686.56,
  "end": 691.58
 },
 {
  "input": "In this case, it looks like the sender needs to turn that bit 8 on in order to give the group even parity. ",
  "translatedText": "اس معاملے میں، ایسا لگتا ہے کہ بھیجنے والے کو اس بٹ کو 8 کو آن کرنے کی ضرورت ہے تاکہ گروپ کو برابری مل سکے۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 692.12,
  "end": 696.82
 },
 {
  "input": "Just as the first two checks let us pin down the column, these next two let you pin down the row. ",
  "translatedText": "جس طرح پہلے دو چیک ہمیں کالم کو نیچے کرنے دیتے ہیں، یہ اگلے دو آپ کو قطار کو پن کرنے دیتے ہیں۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 697.7,
  "end": 701.84
 },
 {
  "input": "As an example, imagine that during the transmission there's an error at, say, position 3. ",
  "translatedText": "مثال کے طور پر، تصور کریں کہ ٹرانسمیشن کے دوران پوزیشن 3 پر ایک خرابی ہے۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 702.88,
  "end": 707.54
 },
 {
  "input": "Well this affects the first parity group, and it also affects the second parity group, so the receiver knows that there's an error somewhere in that right column. ",
  "translatedText": "ٹھیک ہے یہ پہلے برابری گروپ کو متاثر کرتا ہے، اور یہ دوسرے برابری گروپ کو بھی متاثر کرتا ہے، لہذا وصول کنندہ جانتا ہے کہ اس دائیں کالم میں کہیں غلطی ہے۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 708.18,
  "end": 715.56
 },
 {
  "input": "But it doesn't affect the third group, and it doesn't affect the fourth group. ",
  "translatedText": "لیکن یہ تیسرے گروپ کو متاثر نہیں کرتا ہے، اور یہ چوتھے گروپ کو متاثر نہیں کرتا ہے۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 716.1,
  "end": 720.54
 },
 {
  "input": "And that lets the receiver pinpoint the error up to the first row, which necessarily means position 3, so they can fix the error. ",
  "translatedText": "اور یہ وصول کنندہ کو پہلی قطار تک غلطی کی نشاندہی کرنے دیتا ہے، جس کا لازمی مطلب ہے پوزیشن 3، تاکہ وہ غلطی کو ٹھیک کر سکیں۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 721.24,
  "end": 727.52
 },
 {
  "input": "You might enjoy taking a moment to convince yourself that the answers to these four questions really will always let you pin down a specific location, no matter where they turn out to be. ",
  "translatedText": "آپ اپنے آپ کو یہ باور کرانے کے لیے ایک لمحہ نکال کر لطف اندوز ہو سکتے ہیں کہ ان چار سوالوں کے جوابات واقعی آپ کو ہمیشہ ایک مخصوص جگہ کو پن کرنے دیں گے، چاہے وہ کہیں بھی کیوں نہ ہوں۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 728.58,
  "end": 737.1
 },
 {
  "input": "In fact, the astute among you might even notice a connection between these questions and binary counting. ",
  "translatedText": "درحقیقت، آپ میں سے ہوشیار ان سوالات اور بائنری گنتی کے درمیان تعلق کو بھی محسوس کر سکتے ہیں۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 737.72,
  "end": 743.06
 },
 {
  "input": "And if you do, again let me emphasize, pause, try for yourself to draw the connection before I spoil it. ",
  "translatedText": "اور اگر آپ ایسا کرتے ہیں، تو مجھے دوبارہ زور دینے دیں، توقف کریں، اپنے لیے کوشش کریں کہ اس سے پہلے کہ میں اسے خراب کروں۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 743.5,
  "end": 748.92
 },
 {
  "input": "If you're wondering what happens if a parity bit itself gets affected, well, you can just try it. ",
  "translatedText": "اگر آپ سوچ رہے ہیں کہ کیا ہوتا ہے اگر ایک برابری بٹ خود متاثر ہو جاتا ہے، ٹھیک ہے، آپ اسے آزما سکتے ہیں۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 750.5,
  "end": 756.06
 },
 {
  "input": "Take a moment to think about how any error among these four special bits is going to be tracked down just like any other, with the same group of four questions. ",
  "translatedText": "اس بارے میں سوچنے کے لیے ایک لمحہ نکالیں کہ ان چار خصوصی بٹس میں سے کسی بھی غلطی کو کسی دوسرے کی طرح چار سوالات کے ایک ہی گروپ کے ساتھ کیسے ٹریک کیا جائے گا۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 756.44,
  "end": 764.18
 },
 {
  "input": "It doesn't really matter, since at the end of the day what we want is to protect the message bits, the error correction bits are just riding along. ",
  "translatedText": "اس سے کوئی فرق نہیں پڑتا، کیوں کہ دن کے اختتام پر ہم پیغام بٹس کی حفاظت کرنا چاہتے ہیں، غلطی کو درست کرنے والے بٹس صرف ساتھ چل رہے ہیں۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 767.06,
  "end": 773.1
 },
 {
  "input": "But protecting those bits as well is something that naturally falls out of the scheme as a byproduct. ",
  "translatedText": "لیکن ان بٹس کی حفاظت بھی ایک ایسی چیز ہے جو قدرتی طور پر اسکیم سے بطور پروڈکٹ خارج ہوجاتی ہے۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 773.6,
  "end": 777.82
 },
 {
  "input": "You might also enjoy anticipating how this scales. ",
  "translatedText": "آپ یہ اندازہ لگا کر بھی لطف اندوز ہو سکتے ہیں کہ یہ ترازو کیسے ہوتا ہے۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 779.2,
  "end": 781.76
 },
 {
  "input": "If we used a block of size 256 bits, for example, in order to pin down a location, you need only eight yes or no questions to binary search your way down to some specific spot. ",
  "translatedText": "اگر ہم نے سائز 256 بٹس کا ایک بلاک استعمال کیا ہے، مثال کے طور پر، کسی مقام کو پن کرنے کے لیے، آپ کو کسی مخصوص جگہ پر بائنری تلاش کرنے کے لیے صرف آٹھ ہاں یا نہیں سوالات کی ضرورت ہے۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 782.3,
  "end": 792.78
 },
 {
  "input": "And remember, each question requires giving up only a single bit to set the appropriate parity check. ",
  "translatedText": "اور یاد رکھیں، ہر سوال کے لیے مناسب برابری کی جانچ پڑتال کے لیے صرف ایک بٹ کو ترک کرنے کی ضرورت ہوتی ہے۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 795.64,
  "end": 800.5
 },
 {
  "input": "Some of you may already see it, but we'll talk later about the systematic way to find what these questions are in just a minute or two. ",
  "translatedText": "آپ میں سے کچھ لوگ اسے پہلے ہی دیکھ سکتے ہیں، لیکن ہم بعد میں ایک یا دو منٹ میں یہ سوالات تلاش کرنے کے منظم طریقے کے بارے میں بات کریں گے۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 803.16,
  "end": 809.36
 },
 {
  "input": "Hopefully this sketch is enough to appreciate the efficiency of what we're developing here. ",
  "translatedText": "امید ہے کہ یہ خاکہ اس کی کارکردگی کی تعریف کرنے کے لیے کافی ہے جو ہم یہاں تیار کر رہے ہیں۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 809.88,
  "end": 813.66
 },
 {
  "input": "The first thing, except for those eight highlighted parity bits, can be whatever you want it to be, carrying whatever message or data you want. ",
  "translatedText": "پہلی چیز، ان آٹھ ہائی لائٹ کردہ برابری بٹس کے علاوہ، جو بھی آپ چاہتے ہیں ہو سکتا ہے، جو بھی پیغام یا ڈیٹا آپ چاہتے ہیں لے کر جا سکتے ہیں۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 813.66,
  "end": 821.0
 },
 {
  "input": "The 8 bits are redundant in the sense that they're completely determined by the rest of the message, but it's in a much smarter way than simply copying the message as a whole. ",
  "translatedText": "8 بٹس اس لحاظ سے بے کار ہیں کہ ان کا بقیہ پیغام سے مکمل طور پر تعین کیا جاتا ہے، لیکن یہ پیغام کو مجموعی طور پر کاپی کرنے سے کہیں زیادہ ہوشیار طریقے سے ہے۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 821.72,
  "end": 830.02
 },
 {
  "input": "And still, for so little given up, you would be able to identify and fix any single bit error. ",
  "translatedText": "اور پھر بھی، بہت کم ترک کرنے کے لیے، آپ کسی ایک بھی غلطی کی شناخت اور اسے ٹھیک کرنے کے قابل ہو جائیں گے۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 833.6,
  "end": 838.38
 },
 {
  "input": "Well, almost. ",
  "translatedText": "ٹھیک ہے، تقریبا. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 839.2,
  "end": 840.4
 },
 {
  "input": "Okay, so the one problem here is that if none of the four parity checks detect an error, meaning that the specially selected subsets of 8 bits all have even parities, just like the sender intended, then it either means there was no error at all, or it narrows us down into position 0. ",
  "translatedText": "ٹھیک ہے، تو یہاں ایک مسئلہ یہ ہے کہ اگر چار برابری چیک میں سے کوئی بھی خرابی کا پتہ نہیں لگاتا، یعنی 8 بٹس کے خصوصی طور پر منتخب کردہ سب سیٹس میں برابری ہوتی ہے، بالکل اسی طرح جیسے بھیجنے والے کا ارادہ ہے، تو اس کا مطلب ہے کہ کوئی غلطی نہیں تھی۔، یا یہ ہمیں پوزیشن 0 تک محدود کر دیتا ہے۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 840.96,
  "end": 856.86
 },
 {
  "input": "You see, with four yes or no questions, we have 16 possible outcomes for our parity checks, and at first that feels perfect for pinpointing 1 out of 16 positions in the block, but you also need to communicate a 17th outcome, the no error condition. ",
  "translatedText": "آپ نے دیکھا، ہاں یا نہیں کے چار سوالات کے ساتھ، ہمارے پاس اپنے برابری کی جانچ کے 16 ممکنہ نتائج ہیں، اور سب سے پہلے جو بلاک میں 16 میں سے 1 پوزیشن کی نشاندہی کرنے کے لیے بہترین محسوس ہوتا ہے، لیکن آپ کو 17 ویں نتیجے کے بارے میں بھی بتانا ہوگا، کوئی غلطی نہیں حالت. ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 857.74,
  "end": 871.9
 },
 {
  "input": "The solution here is actually pretty simple, just forget about that 0th bit entirely. ",
  "translatedText": "یہاں کا حل دراصل بہت آسان ہے، بس اس 0 ویں بٹ کو مکمل طور پر بھول جائیں۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 873.02,
  "end": 877.3
 },
 {
  "input": "So when we do our four parity checks and we see that they're all even, it unambiguously means that there is no error. ",
  "translatedText": "لہذا جب ہم اپنے چار برابری کی جانچ پڑتال کرتے ہیں اور ہم دیکھتے ہیں کہ وہ سب برابر ہیں، تو اس کا غیر مبہم مطلب ہے کہ کوئی غلطی نہیں ہے۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 877.84,
  "end": 883.46
 },
 {
  "input": "What that means is rather than working with a 16-bit block, we work with a 15-bit block, where 11 of the bits are free to carry a message and 4 of them are there for redundancy. ",
  "translatedText": "اس کا مطلب یہ ہے کہ 16 بٹ بلاک کے ساتھ کام کرنے کے بجائے، ہم 15 بٹ بلاک کے ساتھ کام کرتے ہیں، جہاں 11 بٹس پیغام لے جانے کے لیے آزاد ہیں اور ان میں سے 4 فالتو پن کے لیے ہیں۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 884.24,
  "end": 893.22
 },
 {
  "input": "And with that, we now have what people in the business would refer to as a 15-11 Hamming code. ",
  "translatedText": "اور اس کے ساتھ، اب ہمارے پاس وہ ہے جسے کاروبار میں لوگ 15-11 ہیمنگ کوڈ کے طور پر حوالہ دیتے ہیں۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 893.78,
  "end": 898.8
 },
 {
  "input": "That said, it's nice to have a block size that's a clean power of 2, and there's a clever way we can keep that 0th bit around and get it to do a little extra work for us. ",
  "translatedText": "اس نے کہا، یہ اچھی بات ہے کہ بلاک کا سائز 2 کی کلین پاور ہے، اور ایک ہوشیار طریقہ ہے کہ ہم اس 0 ویں حصے کو اپنے پاس رکھ سکتے ہیں اور اسے ہمارے لیے تھوڑا سا اضافی کام کرنے کے لیے حاصل کر سکتے ہیں۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 899.86,
  "end": 908.14
 },
 {
  "input": "If we use it as a parity bit across the whole block, it lets us actually detect, even though we can't correct, 2-bit errors. ",
  "translatedText": "اگر ہم اسے پورے بلاک میں برابری بٹ کے طور پر استعمال کرتے ہیں، تو یہ ہمیں حقیقت میں پتہ لگانے دیتا ہے، اگرچہ ہم 2 بٹ کی غلطیوں کو درست نہیں کر سکتے۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 908.7,
  "end": 915.54
 },
 {
  "input": "Here's how it works. ",
  "translatedText": "یہ کیسے کام کرتا ہے۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 916.16,
  "end": 916.82
 },
 {
  "input": "After setting those four special error-correcting bits, we set that 0th one so that the parity of the full block is even, just like a normal parity check. ",
  "translatedText": "ان چار خصوصی غلطیوں کو درست کرنے والے بٹس کو ترتیب دینے کے بعد، ہم نے وہ 0 واں سیٹ کیا تاکہ پورے بلاک کی برابری برابر ہو، بالکل عام برابری کی جانچ کی طرح۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 917.18,
  "end": 924.94
 },
 {
  "input": "Now, if there's a single bit error, then the parity of the full block toggles to be odd, but we would catch that anyway thanks to the four error-correcting checks. ",
  "translatedText": "اب، اگر ایک بھی چھوٹی غلطی ہے، تو پورے بلاک کی برابری طاق ہو جائے گی، لیکن ہم اسے بہرحال پکڑ لیں گے چار غلطی کو درست کرنے والے چیکس کی بدولت۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 925.7,
  "end": 933.6
 },
 {
  "input": "However, if there's two errors, then the overall parity is going to toggle back to being even, but the receiver would still see that there's been at least some error because of what's going on with those four parity checks. ",
  "translatedText": "تاہم، اگر دو غلطیاں ہیں، تو مجموعی برابری دوبارہ برابر ہونے والی ہو جائے گی، لیکن وصول کنندہ پھر بھی دیکھے گا کہ ان چار برابری چیک کے ساتھ کیا ہو رہا ہے اس کی وجہ سے کم از کم کچھ خرابی ہوئی ہے۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 934.16,
  "end": 945.18
 },
 {
  "input": "So if they notice an even parity overall, but something non-zero happening with the other checks, it tells them there were at least two errors. ",
  "translatedText": "لہذا اگر وہ مجموعی طور پر یکساں برابری دیکھتے ہیں، لیکن دوسرے چیک کے ساتھ کچھ غیر صفر ہوتا ہے، تو یہ انہیں بتاتا ہے کہ کم از کم دو غلطیاں تھیں۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 945.18,
  "end": 952.7
 },
 {
  "input": "Isn't that clever? ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 953.52,
  "end": 954.0
 },
 {
  "input": "Even though we can't correct those 2-bit errors, just by putting that one little bothersome 0th bit back to work, it lets us detect them. ",
  "translatedText": "کیا یہ ہوشیار نہیں ہے؟ اگرچہ ہم ان 2 بٹ کی غلطیوں کو درست نہیں کر سکتے ہیں، صرف ایک چھوٹی سی پریشان کن 0 ویں بٹ کو کام پر ڈال کر، یہ ہمیں ان کا پتہ لگانے دیتا ہے۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 954.3,
  "end": 961.26
 },
 {
  "input": "This is pretty standard, it's known as an extended Hamming code. ",
  "translatedText": "یہ کافی معیاری ہے، اسے ایک توسیعی ہیمنگ کوڈ کے نام سے جانا جاتا ہے۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 962.26,
  "end": 965.22
 },
 {
  "input": "Technically speaking, you now have a full description of what a Hamming code does, at least for the example of a 16-bit block. ",
  "translatedText": "تکنیکی طور پر، اب آپ کے پاس ہیمنگ کوڈ کی مکمل تفصیل ہے، کم از کم 16 بٹ بلاک کی مثال کے طور پر۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 966.54,
  "end": 972.88
 },
 {
  "input": "But I think you'll find it more satisfying to check your understanding and solidify everything up to this point by doing one full example from start to finish yourself. ",
  "translatedText": "لیکن مجھے لگتا ہے کہ آپ کو اپنی سمجھ کی جانچ کرنا اور اپنے آپ کو شروع سے ختم کرنے تک ایک مکمل مثال دے کر اس مقام تک ہر چیز کو مستحکم کرنا زیادہ اطمینان بخش ہوگا۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 972.88,
  "end": 981.32
 },
 {
  "input": "I'll step through it with you though so you can check yourself. ",
  "translatedText": "اگرچہ میں آپ کے ساتھ اس کے ذریعے قدم اٹھاؤں گا تاکہ آپ خود کو چیک کر سکیں۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 982.08,
  "end": 984.3
 },
 {
  "input": "To set up a message, whether that's a literal message you're translating over space or some data you want to store over time, the first step is to divide it up into 11-bit chunks. ",
  "translatedText": "کسی پیغام کو ترتیب دینے کے لیے، چاہے وہ لفظی پیغام ہو جس کا آپ جگہ پر ترجمہ کر رہے ہیں یا کچھ ڈیٹا جسے آپ وقت کے ساتھ ذخیرہ کرنا چاہتے ہیں، پہلا قدم اسے 11 بٹ حصوں میں تقسیم کرنا ہے۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 985.12,
  "end": 994.66
 },
 {
  "input": "Each chunk is going to get packaged into an error-resistant 16-bit block. ",
  "translatedText": "ہر ٹکڑا غلطی سے بچنے والے 16 بٹ بلاک میں پیک کیا جائے گا۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 995.58,
  "end": 999.76
 },
 {
  "input": "So let's take this one as an example and actually work it out. ",
  "translatedText": "تو آئیے اسے ایک مثال کے طور پر لیتے ہیں اور حقیقت میں اس پر کام کرتے ہیں۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 999.76,
  "end": 1003.22
 },
 {
  "input": "Go ahead, actually do it! ",
  "translatedText": "آگے بڑھو، اصل میں یہ کرو! ",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1003.74,
  "end": 1004.94
 },
 {
  "input": "Let's pause and try putting together this block. ",
  "translatedText": "آئیے توقف کریں اور اس بلاک کو اکٹھا کرنے کی کوشش کریں۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1005.22,
  "end": 1007.02
 },
 {
  "input": "Okay, you ready? ",
  "translatedText": "",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1012.72,
  "end": 1013.68
 },
 {
  "input": "Remember, position 0 along with the other powers of 2 are reserved for error correction duty, so you start by placing the message bits in all of the remaining spots, in order. ",
  "translatedText": "ٹھیک ہے، آپ تیار ہیں؟ یاد رکھیں، پوزیشن 0 کے ساتھ ساتھ 2 کے دیگر اختیارات بھی غلطی کی اصلاح کے لیے مخصوص ہیں، اس لیے آپ پیغام بٹس کو باقی تمام جگہوں پر ترتیب سے رکھ کر شروع کریں۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1014.24,
  "end": 1023.32
 },
 {
  "input": "You need this group to have an even parity, which it already does, so you should have set that parity bit in position 1 to be a 0. ",
  "translatedText": "آپ کو اس گروپ کے پاس برابر برابری کی ضرورت ہے، جو یہ پہلے سے ہی کرتا ہے، لہذا آپ کو اس برابری بٹ کو پوزیشن 1 میں 0 پر سیٹ کرنا چاہیے تھا۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1025.34,
  "end": 1032.34
 },
 {
  "input": "The next group starts off with an odd parity, so you should have set its parity bit to be 1. ",
  "translatedText": "اگلا گروپ ایک عجیب برابری کے ساتھ شروع ہوتا ہے، لہذا آپ کو اس کی برابری بٹ کو 1 پر سیٹ کرنا چاہیے تھا۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1033.02,
  "end": 1037.88
 },
 {
  "input": "The group after that starts with an odd parity, so again you should have set its parity bit to 1. ",
  "translatedText": "اس کے بعد گروپ ایک عجیب برابری کے ساتھ شروع ہوتا ہے، لہذا آپ کو دوبارہ اس کی برابری بٹ کو 1 پر سیٹ کرنا چاہیے تھا۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1039.16,
  "end": 1044.24
 },
 {
  "input": "And the final group also has an odd parity, meaning we set that bit in position 8 to be a 1. ",
  "translatedText": "اور فائنل گروپ میں بھی ایک عجیب برابری ہے، یعنی ہم اس بٹ کو پوزیشن 8 میں 1 پر سیٹ کرتے ہیں۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1044.78,
  "end": 1050.06
 },
 {
  "input": "And then as the final step, the full block now has an even parity, meaning you can set that bit number 0, the overarching parity bit, to be 0. ",
  "translatedText": "اور پھر آخری مرحلے کے طور پر، پورے بلاک میں اب ایک برابر برابری ہے، یعنی آپ اس بٹ نمبر 0، اوور آرچنگ برابری بٹ کو 0 پر سیٹ کر سکتے ہیں۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1051.3,
  "end": 1060.32
 },
 {
  "input": "So as this block is sent off, the parity of the four special subsets and the block as a whole will all be even, or 0. ",
  "translatedText": "تو جیسے ہی اس بلاک کو بھیجا جائے گا، چار خصوصی ذیلی سیٹوں کی برابری اور مجموعی طور پر بلاک سبھی برابر ہوں گے، یا 0۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1061.34,
  "end": 1068.14
 },
 {
  "input": "As the second part of the exercise, let's have you play the role of the receiver. ",
  "translatedText": "مشق کے دوسرے حصے کے طور پر، آئیے آپ کو وصول کنندہ کا کردار ادا کرنے دیں۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1068.82,
  "end": 1072.18
 },
 {
  "input": "Of course, that would mean you don't already know what this message is, maybe some of you memorized it, but let's assume that you haven't. ",
  "translatedText": "یقیناً، اس کا مطلب یہ ہوگا کہ آپ پہلے سے نہیں جانتے کہ یہ پیغام کیا ہے، ہوسکتا ہے کہ آپ میں سے کچھ لوگوں نے اسے یاد کیا ہو، لیکن مان لیتے ہیں کہ آپ نے ایسا نہیں کیا۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1073.48,
  "end": 1079.78
 },
 {
  "input": "What I'm going to do is change either 0, 1, or 2 of the bits in that block, and then ask you to figure out what it is that I did. ",
  "translatedText": "میں کیا کرنے جا رہا ہوں یا تو اس بلاک میں بٹس میں سے 0، 1، یا 2 کو تبدیل کریں، اور پھر آپ سے پوچھیں کہ میں نے کیا کیا ہے۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1080.02,
  "end": 1087.74
 },
 {
  "input": "So again, pause and try working it out. ",
  "translatedText": "تو ایک بار پھر، روکیں اور اس پر کام کرنے کی کوشش کریں۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1088.26,
  "end": 1090.81
 },
 {
  "input": "Okay, so you as the receiver now check the first parity group and you can see that it's even, so any error that exists would have to be in an even column. ",
  "translatedText": "ٹھیک ہے، لہذا آپ بطور وصول کنندہ اب پہلے برابری والے گروپ کو چیک کریں اور آپ دیکھ سکتے ہیں کہ یہ برابر ہے، لہذا جو بھی خامی موجود ہے اسے برابر کالم میں ہونا چاہیے۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1098.79,
  "end": 1107.91
 },
 {
  "input": "The next check gives us an odd number, telling us both that there's at least one error, and narrowing us down into this specific column. ",
  "translatedText": "اگلا چیک ہمیں ایک طاق نمبر دیتا ہے، جو ہم دونوں کو بتاتا ہے کہ کم از کم ایک خرابی ہے، اور ہمیں اس مخصوص کالم تک محدود کر دیتی ہے۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1109.69,
  "end": 1117.03
 },
 {
  "input": "The third check is even, chopping down the possibilities even further. ",
  "translatedText": "تیسرا چیک برابر ہے، امکانات کو مزید کاٹتا ہے۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1118.55,
  "end": 1121.79
 },
 {
  "input": "And the last parity check is odd, telling us there's an error somewhere in the bottom, which by now we can see must be in position number 10. ",
  "translatedText": "اور آخری برابری کی جانچ عجیب ہے، ہمیں بتاتی ہے کہ نیچے میں کہیں ایک خرابی ہے، جسے اب تک ہم دیکھ سکتے ہیں کہ پوزیشن نمبر 10 میں ہونا چاہیے۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1122.65,
  "end": 1129.65
 },
 {
  "input": "What's more, the parity of the whole block is odd, giving us confidence that there was one flip and not two. ",
  "translatedText": "مزید یہ کہ پورے بلاک کی برابری عجیب ہے، جس سے ہمیں یہ اعتماد ملتا ہے کہ ایک پلٹنا تھا دو نہیں تھا۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1131.49,
  "end": 1137.53
 },
 {
  "input": "If it's three or more, all bets are off. ",
  "translatedText": "اگر یہ تین یا اس سے زیادہ ہے تو، تمام شرطیں بند ہیں۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1138.07,
  "end": 1139.97
 },
 {
  "input": "After correcting that bit number 10, pulling out the 11 bits that were not used for correction gives us the relevant segment of the original message, which if you rewind and compare is indeed exactly what we started the example with. ",
  "translatedText": "اس بٹ نمبر 10 کو درست کرنے کے بعد، 11 بٹس کو نکالنے سے جو درست کرنے کے لیے استعمال نہیں کیے گئے تھے، ہمیں اصل پیغام کا متعلقہ سیگمنٹ فراہم کرتا ہے، جسے اگر آپ ریوائنڈ اور موازنہ کرتے ہیں تو حقیقت میں وہی ہے جس کے ساتھ ہم نے مثال شروع کی تھی۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1141.31,
  "end": 1154.39
 },
 {
  "input": "And now that you know how to do all this by hand, I'd like to show you how you can carry out the core part of all of this logic with a single line of Python code. ",
  "translatedText": "اور اب جب کہ آپ یہ سب کچھ ہاتھ سے کرنا جانتے ہیں، میں آپ کو دکھانا چاہوں گا کہ آپ Python کوڈ کی ایک لائن کے ساتھ اس تمام منطق کے بنیادی حصے کو کیسے انجام دے سکتے ہیں۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1155.71,
  "end": 1163.17
 },
 {
  "input": "You see, what I haven't told you yet is just how elegant this algorithm really is, how simple it is to get a machine to point to the position of an error, how to systematically scale it, and how we can frame all of this as one single operation rather than multiple separate parity checks. ",
  "translatedText": "آپ نے دیکھا کہ میں نے آپ کو ابھی تک جو کچھ نہیں بتایا وہ یہ ہے کہ یہ الگورتھم واقعی کتنا خوبصورت ہے، کسی مشین کو غلطی کی پوزیشن کی طرف اشارہ کرنے کے لیے حاصل کرنا کتنا آسان ہے، اسے منظم طریقے سے کیسے پیمانہ کیا جائے، اور ہم کس طرح ان تمام چیزوں کو ترتیب دے سکتے ہیں۔یہ متعدد الگ الگ برابری چیک کے بجائے ایک واحد آپریشن کے طور پر ہے۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1163.87,
  "end": 1178.75
 },
 {
  "input": "To see what I mean, come join me in part 2. ",
  "translatedText": "یہ دیکھنے کے لیے کہ میرا کیا مطلب ہے، حصہ 2 میں میرے ساتھ شامل ہوں۔",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1179.43,
  "end": 1181.31
 }
]