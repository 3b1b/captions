[
 {
  "input": "Have you ever wondered how it's possible to scratch a CD or a DVD and still have it play back whatever it's storing?",
  "translatedText": "क्या आपने कभी सोचा है कि किसी सीडी या डीवीडी को स्क्रैच करना और उसमें जो कुछ भी संग्रहीत है उसे प्लेबैक करना कैसे संभव है?",
  "n_reviews": 0,
  "start": 3.62,
  "end": 10.1
 },
 {
  "input": "The scratch really does affect the 1s and 0s on the disk, so it reads off different data from what was stored, but unless it's really scratched up, the bits it reads off are decoded into precisely the same file that was encoded onto it, a bit for bit copy, despite all those errors.",
  "translatedText": "स्क्रैच वास्तव में डिस्क पर 1s और 0s को प्रभावित करता है, इसलिए यह संग्रहीत किए गए डेटा से भिन्न डेटा को पढ़ता है, लेकिन जब तक इसे वास्तव में स्क्रैच नहीं किया जाता है, तब तक इसके द्वारा पढ़े गए बिट्स ठीक उसी फ़ाइल में डीकोड हो जाते हैं जो उस पर एन्कोड किया गया था, ए उन सभी त्रुटियों के बावजूद, बिट कॉपी के लिए बिट।",
  "n_reviews": 0,
  "start": 10.9,
  "end": 27.44
 },
 {
  "input": "There is a whole pile of mathematical cleverness that allows us to store data, and just as importantly to transmit data, in a way that's resilient to errors.",
  "translatedText": "गणितीय चतुराई का एक पूरा ढेर है जो हमें डेटा संग्रहीत करने की अनुमति देता है, और उतना ही महत्वपूर्ण रूप से डेटा संचारित करने की अनुमति देता है, जो त्रुटियों के प्रति लचीला है।",
  "n_reviews": 0,
  "start": 27.44,
  "end": 36.66
 },
 {
  "input": "Well, okay, actually it doesn't take that much cleverness to come up with a way to do this.",
  "translatedText": "ठीक है, ठीक है, वास्तव में ऐसा करने का कोई तरीका निकालने के लिए उतनी चतुराई की आवश्यकता नहीं है।",
  "n_reviews": 0,
  "start": 37.52,
  "end": 41.6
 },
 {
  "input": "Any file, whether it's a video or sound or text, some code, an image, whatever, is ultimately some sequence of 1s and 0s.",
  "translatedText": "कोई भी फ़ाइल, चाहे वह वीडियो हो या ध्वनि या पाठ, कोई कोड, कोई छवि, जो भी हो, अंततः 1s और 0s का कुछ अनुक्रम है।",
  "n_reviews": 0,
  "start": 42.06,
  "end": 50.38
 },
 {
  "input": "And a simple strategy to correct any bit that gets flipped would be to store three copies of each bit.",
  "translatedText": "और जो भी बिट फ़्लिप हो जाता है उसे ठीक करने की एक सरल रणनीति यह होगी कि प्रत्येक बिट की तीन प्रतियां संग्रहीत की जाएं।",
  "n_reviews": 0,
  "start": 50.68,
  "end": 56.0
 },
 {
  "input": "Then the machine reading this file could compare these three copies and always take the best 2 out of 3 whenever there's a discrepancy.",
  "translatedText": "फिर इस फ़ाइल को पढ़ने वाली मशीन इन तीन प्रतियों की तुलना कर सकती है और जब भी कोई विसंगति हो तो हमेशा 3 में से सर्वश्रेष्ठ 2 को ले सकती है।",
  "n_reviews": 0,
  "start": 57.58,
  "end": 64.06
 },
 {
  "input": "But what that means is using two thirds of your space for redundancy.",
  "translatedText": "लेकिन इसका मतलब यह है कि आपके स्थान का दो-तिहाई हिस्सा अतिरेक के लिए उपयोग किया जा रहा है।",
  "n_reviews": 0,
  "start": 67.16,
  "end": 70.86
 },
 {
  "input": "And even then, for all of that space given up, there's no strong guarantee about what happens if more than one bit gets flipped.",
  "translatedText": "और फिर भी, छोड़ी गई सारी जगह के लिए, इस बात की कोई पुख्ता गारंटी नहीं है कि यदि एक से अधिक बिट फ़्लिप हो जाते हैं तो क्या होगा।",
  "n_reviews": 0,
  "start": 71.48,
  "end": 77.24
 },
 {
  "input": "The much more interesting question is how to make it so that errors can be corrected while giving up as little space as possible.",
  "translatedText": "इससे भी अधिक दिलचस्प सवाल यह है कि इसे कैसे बनाया जाए ताकि यथासंभव कम जगह छोड़ते हुए त्रुटियों को ठीक किया जा सके।",
  "n_reviews": 0,
  "start": 77.98,
  "end": 84.02
 },
 {
  "input": "For example, using the method you'll learn about this video, you could store your data in 256-bit blocks, where each block uses 9 bits, 9!",
  "translatedText": "उदाहरण के लिए, जिस विधि के बारे में आप इस वीडियो के बारे में जानेंगे, उसका उपयोग करके आप अपना डेटा 256-बिट ब्लॉक में संग्रहीत कर सकते हैं, जहां प्रत्येक ब्लॉक 9 बिट्स, 9 का उपयोग करता है!",
  "n_reviews": 0,
  "start": 84.52,
  "end": 93.36
 },
 {
  "input": "to act as a kind of redundancy, and the other 247 bits are free to carry whatever meaningful message or data you want.",
  "translatedText": "एक प्रकार की अतिरेक के रूप में कार्य करने के लिए, और अन्य 247 बिट्स आपके इच्छित सार्थक संदेश या डेटा को ले जाने के लिए स्वतंत्र हैं।",
  "n_reviews": 0,
  "start": 93.76,
  "end": 100.3
 },
 {
  "input": "And it will still be the case that if any bit gets flipped here, just by looking at this block and nothing more, a machine will be able to identify that there was an error and precisely where it was so that it knows how to correct it.",
  "translatedText": "और यह अब भी होगा कि यदि यहां कोई भी बिट फ़्लिप हो जाता है, तो केवल इस ब्लॉक को देखकर और कुछ नहीं, एक मशीन यह पहचानने में सक्षम होगी कि कोई त्रुटि थी और सटीक रूप से यह कहां थी ताकि वह जान सके कि इसे कैसे ठीक किया जाए। .",
  "n_reviews": 0,
  "start": 100.9,
  "end": 112.66
 },
 {
  "input": "And honestly, that feels like magic.",
  "translatedText": "और ईमानदारी से कहूं तो यह जादू जैसा लगता है।",
  "n_reviews": 0,
  "start": 112.66,
  "end": 114.62
 },
 {
  "input": "And for this particular scheme, if two bits get flipped, the machine will at least be able to detect that there were two errors, though it won't know how to fix them.",
  "translatedText": "और इस विशेष योजना के लिए, यदि दो बिट फ़्लिप हो जाते हैं, तो मशीन कम से कम यह पता लगाने में सक्षम होगी कि दो त्रुटियाँ थीं, हालाँकि उसे यह नहीं पता होगा कि उन्हें कैसे ठीक किया जाए।",
  "n_reviews": 0,
  "start": 115.44,
  "end": 122.86
 },
 {
  "input": "We'll talk a little bit later about how this scales for blocks with different sizes.",
  "translatedText": "हम थोड़ी देर बाद इस बारे में बात करेंगे कि विभिन्न आकारों वाले ब्लॉकों के लिए यह पैमाना कैसा है।",
  "n_reviews": 0,
  "start": 123.52,
  "end": 126.9
 },
 {
  "input": "Methods that let you correct errors like this are known, reasonably enough, as error correction codes.",
  "translatedText": "वे विधियाँ जो आपको इस तरह की त्रुटियों को ठीक करने देती हैं, यथोचित रूप से त्रुटि सुधार कोड के रूप में जानी जाती हैं।",
  "n_reviews": 0,
  "start": 127.86,
  "end": 132.9
 },
 {
  "input": "For the better part of the last century, this field has been a really rich source of surprisingly deep math that gets incorporated into devices we use every day.",
  "translatedText": "पिछली शताब्दी के अधिकांश समय में, यह क्षेत्र आश्चर्यजनक रूप से गहन गणित का एक समृद्ध स्रोत रहा है जो हमारे द्वारा प्रतिदिन उपयोग किए जाने वाले उपकरणों में शामिल हो जाता है।",
  "n_reviews": 0,
  "start": 133.66,
  "end": 141.94
 },
 {
  "input": "The goal here is to give you a very thorough understanding of one of the earliest examples, known as a Hamming code.",
  "translatedText": "यहां लक्ष्य आपको शुरुआती उदाहरणों में से एक, जिसे हैमिंग कोड के नाम से जाना जाता है, की पूरी तरह से समझ प्रदान करना है।",
  "n_reviews": 0,
  "start": 142.84,
  "end": 148.66
 },
 {
  "input": "And by the way, the way I'm thinking about the structure of this video is less about explaining it as directly as possible, and more a matter of prompting you to invent it for yourself, with a little gentle guidance here and there.",
  "translatedText": "और वैसे, जिस तरह से मैं इस वीडियो की संरचना के बारे में सोच रहा हूं वह इसे यथासंभव सीधे समझाने के बारे में कम है, और यहां और वहां थोड़े से मार्गदर्शन के साथ आपको इसे अपने लिए आविष्कार करने के लिए प्रेरित करने का मामला अधिक है।",
  "n_reviews": 0,
  "start": 149.52,
  "end": 159.82
 },
 {
  "input": "So when you feel like you see where it's going at some point, take that moment to pause, actively predict what the scheme is going to be before I tell you.",
  "translatedText": "इसलिए जब आपको लगे कि किसी बिंदु पर आप देख रहे हैं कि यह कहां जा रहा है, तो उस क्षण रुकें, मेरे बताने से पहले सक्रिय रूप से अनुमान लगाएं कि योजना क्या होने वाली है।",
  "n_reviews": 0,
  "start": 160.12,
  "end": 166.72
 },
 {
  "input": "Also, if you want your understanding to get down to the hardware level, Ben Eater has made a video in conjunction with this one showing you how to actually implement Hamming codes on breadboards, which is extremely satisfying.",
  "translatedText": "साथ ही, यदि आप चाहते हैं कि आपकी समझ हार्डवेयर स्तर तक पहुंचे, तो बेन ईटर ने इसके साथ मिलकर एक वीडियो बनाया है जिसमें आपको दिखाया गया है कि वास्तव में ब्रेडबोर्ड पर हैमिंग कोड कैसे लागू किया जाए, जो बेहद संतोषजनक है।",
  "n_reviews": 0,
  "start": 167.24,
  "end": 178.24
 },
 {
  "input": "You should know, Hamming codes are not as widely used as more modern codes, like the Reed-Solomon algorithm, but there is a certain magic to the contrast between just how impossible this task feels at the start, and how utterly reasonable it seems once you learn about Hamming.",
  "translatedText": "आपको पता होना चाहिए, हैमिंग कोड रीड-सोलोमन एल्गोरिथ्म की तरह अधिक आधुनिक कोड के रूप में व्यापक रूप से उपयोग नहीं किए जाते हैं, लेकिन शुरुआत में यह कार्य कितना असंभव लगता है और एक बार यह कितना उचित लगता है, इसके बीच एक निश्चित जादू है। आप हैमिंग के बारे में जानें।",
  "n_reviews": 0,
  "start": 179.3,
  "end": 193.0
 },
 {
  "input": "The basic principle of error correction is that in a vast space of all possible messages, only some subset are going to be considered valid messages.",
  "translatedText": "त्रुटि सुधार का मूल सिद्धांत यह है कि सभी संभावित संदेशों के विशाल स्थान में, केवल कुछ उपसमूह को ही वैध संदेश माना जाएगा।",
  "n_reviews": 0,
  "start": 193.72,
  "end": 202.18
 },
 {
  "input": "As an analogy, think about correctly spelled words vs incorrectly spelled words.",
  "translatedText": "सादृश्य के रूप में, सही वर्तनी वाले शब्दों बनाम गलत वर्तनी वाले शब्दों के बारे में सोचें।",
  "n_reviews": 0,
  "start": 202.8,
  "end": 206.94
 },
 {
  "input": "Whenever a valid message gets altered, the receiver is responsible for correcting what they see back to the nearest valid neighbor, as you might do with a typo.",
  "translatedText": "जब भी कोई वैध संदेश बदल जाता है, तो प्राप्तकर्ता निकटतम वैध पड़ोसी को जो दिखाई देता है उसे ठीक करने के लिए जिम्मेदार होता है, जैसा कि आप टाइपो के मामले में कर सकते हैं।",
  "n_reviews": 0,
  "start": 208.9,
  "end": 217.34
 },
 {
  "input": "Coming up with a concrete algorithm to efficiently categorize messages like this, though, takes a certain cleverness.",
  "translatedText": "हालाँकि, इस तरह के संदेशों को कुशलतापूर्वक वर्गीकृत करने के लिए एक ठोस एल्गोरिदम के साथ आने के लिए एक निश्चित चतुराई की आवश्यकता होती है।",
  "n_reviews": 0,
  "start": 218.22,
  "end": 224.06
 },
 {
  "input": "The story begins in the 1940s, when a young Richard Hamming was working for Bell Labs, and some of his work involved using a very big expensive punch card computer that he had only limited access to.",
  "translatedText": "कहानी 1940 के दशक में शुरू होती है, जब एक युवा रिचर्ड हैमिंग बेल लैब्स के लिए काम कर रहे थे, और उनके कुछ काम में एक बहुत बड़े महंगे पंच कार्ड कंप्यूटर का उपयोग करना शामिल था, जिस तक उनकी सीमित पहुंच थी।",
  "n_reviews": 0,
  "start": 226.78,
  "end": 237.42
 },
 {
  "input": "And the programs he kept putting through it kept failing, because every now and then a bit would get misread.",
  "translatedText": "और जो प्रोग्राम वह इसके माध्यम से डालता रहा वह विफल होता रहा, क्योंकि कभी-कभी कुछ गलत पढ़ा जाता था।",
  "n_reviews": 0,
  "start": 237.8,
  "end": 242.4
 },
 {
  "input": "Frustration being the crucible of invention, he got so fed up that he invented the world's first error correction code.",
  "translatedText": "आविष्कार की भट्ठी निराशा से वह इतना तंग आ गया कि उसने दुनिया का पहला त्रुटि सुधार कोड का आविष्कार किया।",
  "n_reviews": 0,
  "start": 243.12,
  "end": 248.42
 },
 {
  "input": "There are many different ways to frame Hamming codes, but as a first pass we're going to go through it the way Hamming himself thought about them.",
  "translatedText": "हैमिंग कोड को फ्रेम करने के कई अलग-अलग तरीके हैं, लेकिन पहली बार हम इसके माध्यम से जाने वाले हैं जिस तरह से हैमिंग ने खुद उनके बारे में सोचा था।",
  "n_reviews": 0,
  "start": 249.06,
  "end": 255.38
 },
 {
  "input": "Let's use an example that's simple, but not too simple, a block of 16 bits.",
  "translatedText": "आइए एक उदाहरण का उपयोग करें जो सरल है, लेकिन बहुत सरल नहीं है, 16 बिट्स का एक ब्लॉक।",
  "n_reviews": 0,
  "start": 256.52,
  "end": 260.94
 },
 {
  "input": "We'll number the positions of these bits from 0 up to 15.",
  "translatedText": "हम इन बिट्स की स्थिति को 0 से 15 तक क्रमांकित करेंगे।",
  "n_reviews": 0,
  "start": 261.82,
  "end": 264.74
 },
 {
  "input": "The actual data we want to store is only going to make up 12 of these bits, while 4 of the positions are reserved as a kind of redundancy.",
  "translatedText": "जो वास्तविक डेटा हम संग्रहीत करना चाहते हैं, वह इनमें से केवल 12 बिट्स को बनाने वाला है, जबकि 4 स्थान एक प्रकार के अतिरेक के रूप में आरक्षित हैं।",
  "n_reviews": 0,
  "start": 265.62,
  "end": 273.0
 },
 {
  "input": "The word redundant here doesn't simply mean copy, after all, those 4 bits don't give us enough room to blindly copy the data.",
  "translatedText": "यहां निरर्थक शब्द का मतलब केवल कॉपी करना नहीं है, आखिरकार, वे 4 बिट्स हमें डेटा को आंख मूंदकर कॉपी करने के लिए पर्याप्त जगह नहीं देते हैं।",
  "n_reviews": 0,
  "start": 273.9,
  "end": 280.04
 },
 {
  "input": "Instead, they'll need to be a much more nuanced and clever kind of redundancy, not adding any new information, but adding resilience.",
  "translatedText": "इसके बजाय, उन्हें बहुत अधिक सूक्ष्म और चतुर प्रकार के अतिरेक की आवश्यकता होगी, कोई नई जानकारी नहीं जोड़नी होगी, बल्कि लचीलापन जोड़ना होगा।",
  "n_reviews": 0,
  "start": 280.72,
  "end": 287.28
 },
 {
  "input": "You might expect these 4 special bits to come nicely packaged together, maybe at the end or something like that, but as you'll see, having them sit in positions which are powers of 2 allows for something that's really elegant by the end.",
  "translatedText": "आप उम्मीद कर सकते हैं कि ये 4 विशेष बिट्स अच्छी तरह से एक साथ पैक किए जाएंगे, शायद अंत में या ऐसा कुछ, लेकिन जैसा कि आप देखेंगे, उन्हें उन स्थितियों में बैठाना जो 2 की शक्तियाँ हैं, अंत तक कुछ ऐसा करने की अनुमति देता है जो वास्तव में सुरुचिपूर्ण है।",
  "n_reviews": 0,
  "start": 288.6,
  "end": 299.62
 },
 {
  "input": "It also might give you a little hint about how this scales for larger blocks.",
  "translatedText": "यह आपको इस बारे में भी थोड़ा संकेत दे सकता है कि यह बड़े ब्लॉकों के लिए कैसा है।",
  "n_reviews": 0,
  "start": 300.2,
  "end": 303.54
 },
 {
  "input": "Also technically it ends up being only 11 bits of data, you'll find there's a mild nuance for what goes on at position 0, but don't worry about that for now.",
  "translatedText": "इसके अलावा तकनीकी रूप से यह केवल 11 बिट डेटा बनकर रह जाता है, आप पाएंगे कि स्थिति 0 पर जो होता है उसमें थोड़ी बारीकियां हैं, लेकिन अभी इसके बारे में चिंता न करें।",
  "n_reviews": 0,
  "start": 304.9,
  "end": 313.26
 },
 {
  "input": "Like any error correction algorithm, this will involve two players, a sender who's responsible for setting these 4 special bits, and a receiver who's responsible for performing some kind of check and correcting the errors.",
  "translatedText": "किसी भी त्रुटि सुधार एल्गोरिदम की तरह, इसमें दो खिलाड़ी शामिल होंगे, एक प्रेषक जो इन 4 विशेष बिट्स को सेट करने के लिए जिम्मेदार है, और एक रिसीवर जो किसी प्रकार की जांच करने और त्रुटियों को ठीक करने के लिए जिम्मेदार है।",
  "n_reviews": 0,
  "start": 314.14,
  "end": 325.54
 },
 {
  "input": "Of course, the words sender and receiver really refer to machines or software that's doing all the checks, and the idea of a message is meant really broadly, to include things like storage.",
  "translatedText": "बेशक, प्रेषक और रिसीवर शब्द वास्तव में उन मशीनों या सॉफ़्टवेयर को संदर्भित करते हैं जो सभी जांच कर रहे हैं, और संदेश का विचार वास्तव में मोटे तौर पर भंडारण जैसी चीजों को शामिल करने के लिए है।",
  "n_reviews": 0,
  "start": 326.3,
  "end": 334.74
 },
 {
  "input": "After all, storing data is the same thing as sending a message just from the past to the future instead of from one place to another.",
  "translatedText": "आख़िरकार, डेटा संग्रहीत करना एक संदेश को एक स्थान से दूसरे स्थान के बजाय अतीत से भविष्य में भेजने जैसा ही है।",
  "n_reviews": 0,
  "start": 335.34,
  "end": 341.68
 },
 {
  "input": "So that's the setup, but before we can dive in we need to talk about a related idea which was fresh on Hamming's mind in the time of his discovery, a method which lets you detect any single bit errors, but not to correct them, known in the business as a parity check.",
  "translatedText": "तो यह सेटअप है, लेकिन इससे पहले कि हम आगे बढ़ें हमें एक संबंधित विचार के बारे में बात करने की ज़रूरत है जो हैमिंग के दिमाग में उनकी खोज के समय ताजा था, एक ऐसी विधि जो आपको किसी भी बिट त्रुटि का पता लगाने देती है, लेकिन उन्हें ठीक करने की नहीं, ज्ञात है व्यवसाय में समता जाँच के रूप में।",
  "n_reviews": 0,
  "start": 342.56,
  "end": 356.3
 },
 {
  "input": "For a parity check, we separate out only one single bit that the sender is responsible for tuning, and the rest are free to carry a message.",
  "translatedText": "समता जांच के लिए, हम केवल एक बिट को अलग करते हैं जिसे ट्यूनिंग के लिए प्रेषक जिम्मेदार है, और बाकी संदेश ले जाने के लिए स्वतंत्र हैं।",
  "n_reviews": 0,
  "start": 356.88,
  "end": 363.82
 },
 {
  "input": "The only job of this special bit is to make sure that the total number of 1s in the message is an even number.",
  "translatedText": "इस विशेष बिट का एकमात्र काम यह सुनिश्चित करना है कि संदेश में 1 की कुल संख्या एक सम संख्या है।",
  "n_reviews": 0,
  "start": 364.88,
  "end": 371.28
 },
 {
  "input": "So for example right now, that total number of 1s is 7, that's odd, so the sender needs to flip that special bit to be a 1, making the count even.",
  "translatedText": "उदाहरण के लिए अभी, 1 की कुल संख्या 7 है, यह अजीब है, इसलिए प्रेषक को उस विशेष बिट को 1 करने के लिए फ़्लिप करना होगा, जिससे गिनती सम हो जाएगी।",
  "n_reviews": 0,
  "start": 372.08,
  "end": 379.96
 },
 {
  "input": "But if the block had already started off with an even number of 1s, then this special bit would have been kept at a 0.",
  "translatedText": "लेकिन यदि ब्लॉक पहले से ही 1 की सम संख्या के साथ शुरू हुआ होता, तो इस विशेष बिट को 0 पर रखा जाता।",
  "n_reviews": 0,
  "start": 380.8,
  "end": 386.42
 },
 {
  "input": "This is pretty simple, deceptively simple, but it's an incredibly elegant way to distill the idea of change anywhere in a message to be reflected in a single bit of information.",
  "translatedText": "यह बहुत ही सरल, भ्रामक रूप से सरल है, लेकिन यह किसी संदेश में कहीं भी परिवर्तन के विचार को जानकारी के एक टुकड़े में प्रतिबिंबित करने का एक अविश्वसनीय रूप से सुंदर तरीका है।",
  "n_reviews": 0,
  "start": 387.34,
  "end": 396.78
 },
 {
  "input": "Notice if any bit of this message gets flipped, either from 0 to 1 or 1 to 0, it changes the total count of 1s from being even to being odd.",
  "translatedText": "ध्यान दें कि यदि इस संदेश का कोई भी अंश 0 से 1 या 1 से 0 तक फ़्लिप हो जाता है, तो यह 1 की कुल गिनती को सम से विषम में बदल देता है।",
  "n_reviews": 0,
  "start": 397.5,
  "end": 406.54
 },
 {
  "input": "So if you're the receiver, you look at this message, and you see an odd number of 1s, you can know for sure that some error has occurred, even though you might have no idea where it was.",
  "translatedText": "इसलिए यदि आप रिसीवर हैं, आप इस संदेश को देखते हैं, और आपको 1 की एक विषम संख्या दिखाई देती है, तो आप निश्चित रूप से जान सकते हैं कि कुछ त्रुटि हुई है, भले ही आपको पता न हो कि यह कहां थी।",
  "n_reviews": 0,
  "start": 407.98,
  "end": 417.46
 },
 {
  "input": "In the jargon, whether a group of bits has an even or odd number of 1s is known as its parity.",
  "translatedText": "शब्दजाल में, चाहे बिट्स के समूह में 1s की सम या विषम संख्या हो, इसे इसकी समता के रूप में जाना जाता है।",
  "n_reviews": 0,
  "start": 418.5,
  "end": 423.34
 },
 {
  "input": "You could also use numbers and say the parity is 0 or 1, which is typically more helpful once you start doing math with the idea.",
  "translatedText": "आप संख्याओं का भी उपयोग कर सकते हैं और कह सकते हैं कि समता 0 या 1 है, जो आमतौर पर तब अधिक सहायक होती है जब आप इस विचार के साथ गणित करना शुरू करते हैं।",
  "n_reviews": 0,
  "start": 424.86,
  "end": 430.72
 },
 {
  "input": "And this special bit that the sender uses to control the parity is called the parity bit.",
  "translatedText": "और यह विशेष बिट जिसे प्रेषक समता को नियंत्रित करने के लिए उपयोग करता है, समता बिट कहलाता है।",
  "n_reviews": 0,
  "start": 431.22,
  "end": 435.52
 },
 {
  "input": "And actually, we should be clear, if the receiver sees an odd parity, it doesn't necessarily mean there was just one error, there might have been 3 errors, or 5, or any other odd number, but they can know for sure that it wasn't 0.",
  "translatedText": "और वास्तव में, हमें स्पष्ट होना चाहिए, यदि रिसीवर एक विषम समता देखता है, तो इसका मतलब यह नहीं है कि केवल एक त्रुटि थी, 3 त्रुटियां, या 5, या कोई अन्य विषम संख्या हो सकती है, लेकिन वे निश्चित रूप से जान सकते हैं कि यह 0 नहीं था.",
  "n_reviews": 0,
  "start": 437.56,
  "end": 449.26
 },
 {
  "input": "On the other hand, if there had been 2 errors, or any even number of errors, that final count of 1s would still be even, so the receiver can't have full confidence that an even count necessarily means the message is error-free.",
  "translatedText": "दूसरी ओर, यदि 2 त्रुटियाँ थीं, या कोई सम संख्या में त्रुटियाँ थीं, तो 1 की अंतिम गिनती अभी भी सम होगी, इसलिए प्राप्तकर्ता को पूरा विश्वास नहीं हो सकता है कि एक सम संख्या का मतलब यह है कि संदेश त्रुटि-मुक्त है। .",
  "n_reviews": 0,
  "start": 449.98,
  "end": 462.3
 },
 {
  "input": "You might complain that a message which gets messed up by only 2 bit flips is pretty weak, and you would be absolutely right.",
  "translatedText": "आप शिकायत कर सकते हैं कि जो संदेश केवल 2 बिट फ़्लिप से गड़बड़ हो जाता है वह बहुत कमज़ोर होता है, और आप बिल्कुल सही होंगे।",
  "n_reviews": 0,
  "start": 462.84,
  "end": 469.08
 },
 {
  "input": "Keep in mind, though, there is no method for error detection or correction that could give you 100% confidence that the message you receive is the one the sender intended.",
  "translatedText": "ध्यान रखें, हालाँकि, त्रुटि का पता लगाने या सुधार करने की कोई विधि नहीं है जो आपको 100% विश्वास दिला सके कि आपको प्राप्त संदेश वही है जो भेजने वाले ने चाहा है।",
  "n_reviews": 0,
  "start": 469.7,
  "end": 478.9
 },
 {
  "input": "After all, enough random noise could always change one valid message into another valid message just by pure chance.",
  "translatedText": "आख़िरकार, पर्याप्त यादृच्छिक शोर हमेशा शुद्ध संयोग से एक वैध संदेश को दूसरे वैध संदेश में बदल सकता है।",
  "n_reviews": 0,
  "start": 479.58,
  "end": 485.44
 },
 {
  "input": "Instead, the goal is to come up with a scheme that's robust up to a certain maximum number of errors, or maybe to reduce the probability of a false positive like this.",
  "translatedText": "इसके बजाय, लक्ष्य एक ऐसी योजना बनाना है जो त्रुटियों की एक निश्चित अधिकतम संख्या तक मजबूत हो, या शायद इस तरह की झूठी सकारात्मकता की संभावना को कम कर सके।",
  "n_reviews": 0,
  "start": 486.24,
  "end": 495.38
 },
 {
  "input": "Parity checks on their own are pretty weak, but by distilling the idea of change across a full message down to a single bit, what they give us is a powerful building block for more sophisticated schemes.",
  "translatedText": "समता जांच अपने आप में काफी कमजोर हैं, लेकिन एक पूर्ण संदेश में परिवर्तन के विचार को एक बिट तक सीमित करके, वे हमें जो देते हैं वह अधिक परिष्कृत योजनाओं के लिए एक शक्तिशाली बिल्डिंग ब्लॉक है।",
  "n_reviews": 0,
  "start": 496.26,
  "end": 507.16
 },
 {
  "input": "For example, as Hamming was searching for a way to identify where an error happened, not just that it happened, his key insight was that if you apply some parity checks not to the full message, but to certain carefully selected subsets, you can ask a more refined series of questions that pin down the location of any single bit error.",
  "translatedText": "उदाहरण के लिए, जब हैमिंग यह पहचानने का एक तरीका खोज रहा था कि त्रुटि कहाँ हुई है, न कि केवल यह कि यह घटित हुई है, तो उसकी मुख्य अंतर्दृष्टि यह थी कि यदि आप कुछ समता जाँचों को पूर्ण संदेश पर नहीं, बल्कि कुछ सावधानीपूर्वक चयनित उपसमूहों पर लागू करते हैं, तो आप पूछ सकते हैं प्रश्नों की एक अधिक परिष्कृत श्रृंखला जो किसी भी एक बिट त्रुटि के स्थान को इंगित करती है।",
  "n_reviews": 0,
  "start": 507.94,
  "end": 525.94
 },
 {
  "input": "The overall feeling is a bit like playing a game of 20 questions, asking yes or no queries that chop the space of possibilities in half.",
  "translatedText": "कुल मिलाकर भावना कुछ-कुछ 20 प्रश्नों का खेल खेलने जैसा है, जिसमें हां या ना में ऐसे प्रश्न पूछे जाते हैं जो संभावनाओं की जगह को आधा कर देते हैं।",
  "n_reviews": 0,
  "start": 526.68,
  "end": 533.38
 },
 {
  "input": "For example, let's say we do a parity check just on these 8 bits, all of the odd numbered positions.",
  "translatedText": "उदाहरण के लिए, मान लें कि हम केवल इन 8 बिट्स, सभी विषम संख्या वाली स्थितियों पर समता जांच करते हैं।",
  "n_reviews": 0,
  "start": 534.16,
  "end": 539.38
 },
 {
  "input": "Then if an error is detected, it gives the receiver a little more information about where specifically the error is, namely that it's in an odd position.",
  "translatedText": "फिर यदि कोई त्रुटि पाई जाती है, तो यह रिसीवर को इस बारे में थोड़ी अधिक जानकारी देता है कि विशेष रूप से त्रुटि कहाँ है, अर्थात् यह एक विषम स्थिति में है।",
  "n_reviews": 0,
  "start": 540.1,
  "end": 548.24
 },
 {
  "input": "If no error is detected among those 8 bits, it either means there's no error at all, or it sits somewhere in the even positions.",
  "translatedText": "यदि उन 8 बिट्स के बीच कोई त्रुटि नहीं पाई जाती है, तो इसका मतलब है कि कोई त्रुटि नहीं है, या यह कहीं सम स्थिति में बैठता है।",
  "n_reviews": 0,
  "start": 548.94,
  "end": 556.24
 },
 {
  "input": "You might think that limiting a parity check to half the bits makes it less effective, but when it's done in conjunction with other well-chosen checks, it counterintuitively gives us something a lot more powerful.",
  "translatedText": "आप सोच सकते हैं कि समता जांच को आधे बिट्स तक सीमित करने से यह कम प्रभावी हो जाता है, लेकिन जब इसे अन्य अच्छी तरह से चुनी गई जांचों के साथ संयोजन में किया जाता है, तो यह हमें कुछ अधिक शक्तिशाली प्रदान करता है।",
  "n_reviews": 0,
  "start": 557.18,
  "end": 567.2
 },
 {
  "input": "To actually set up that parity check, remember, it requires earmarking some special bit that has control for the parity of that full group.",
  "translatedText": "वास्तव में उस समता जाँच को स्थापित करने के लिए, याद रखें, इसमें कुछ विशेष बिट निर्धारित करने की आवश्यकता होती है जिसका उस पूर्ण समूह की समता के लिए नियंत्रण होता है।",
  "n_reviews": 0,
  "start": 569.24,
  "end": 576.62
 },
 {
  "input": "Here let's just choose position 1.",
  "translatedText": "आइए यहां केवल स्थिति 1 चुनें।",
  "n_reviews": 0,
  "start": 577.48,
  "end": 579.18
 },
 {
  "input": "For the example shown, the parity of these 8 bits is currently odd, so the sender is responsible for toggling that parity bit, and now it's even.",
  "translatedText": "दिखाए गए उदाहरण के लिए, इन 8 बिट्स की समता वर्तमान में विषम है, इसलिए प्रेषक उस समता बिट को टॉगल करने के लिए जिम्मेदार है, और अब यह सम है।",
  "n_reviews": 0,
  "start": 579.72,
  "end": 586.98
 },
 {
  "input": "This is only 1 out of 4 parity checks that we'll do.",
  "translatedText": "यह 4 समता जांचों में से केवल 1 है जो हम करेंगे।",
  "n_reviews": 0,
  "start": 587.94,
  "end": 590.68
 },
 {
  "input": "The second check is among the 8 bits on the right half of the grid, at least as we've drawn it here.",
  "translatedText": "दूसरा चेक ग्रिड के दाहिने आधे हिस्से पर 8 बिट्स में से एक है, कम से कम जैसा कि हमने इसे यहां खींचा है।",
  "n_reviews": 0,
  "start": 590.92,
  "end": 596.3
 },
 {
  "input": "This time we might use position 2 as a parity bit, so these 8 bits already have an even parity, and the sender can feel good leaving that bit number 2 unchanged.",
  "translatedText": "इस बार हम स्थिति 2 को समता बिट के रूप में उपयोग कर सकते हैं, इसलिए इन 8 बिट्स में पहले से ही एक सम समता है, और प्रेषक उस बिट संख्या 2 को अपरिवर्तित छोड़कर अच्छा महसूस कर सकता है।",
  "n_reviews": 0,
  "start": 596.68,
  "end": 606.06
 },
 {
  "input": "Then on the other end, if the receiver checks the parity of this group and they find that it's odd, they'll know that the error is somewhere among these 8 bits on the right.",
  "translatedText": "फिर दूसरे छोर पर, यदि रिसीवर इस समूह की समता की जांच करता है और उन्हें पता चलता है कि यह अजीब है, तो उन्हें पता चल जाएगा कि त्रुटि दाईं ओर इन 8 बिट्स में से कहीं है।",
  "n_reviews": 0,
  "start": 607.02,
  "end": 615.38
 },
 {
  "input": "Otherwise it means either there's no error, or the error is somewhere on the left half.",
  "translatedText": "अन्यथा इसका मतलब है कि या तो कोई त्रुटि नहीं है, या त्रुटि बाएं आधे हिस्से में कहीं है।",
  "n_reviews": 0,
  "start": 615.82,
  "end": 620.58
 },
 {
  "input": "Or I guess there could have been two errors, but for right now we're going to assume that there's at most one error in the entire block.",
  "translatedText": "या मुझे लगता है कि दो त्रुटियाँ हो सकती थीं, लेकिन अभी हम यह मानेंगे कि पूरे ब्लॉक में अधिकतम एक त्रुटि है।",
  "n_reviews": 0,
  "start": 621.12,
  "end": 626.5
 },
 {
  "input": "Things break down completely for more than that.",
  "translatedText": "इससे अधिक के लिए चीजें पूरी तरह से टूट जाती हैं।",
  "n_reviews": 0,
  "start": 626.94,
  "end": 628.74
 },
 {
  "input": "Here, before we look at the next two checks, take a moment to think about what these first two allow us to do when you consider them together.",
  "translatedText": "यहां, इससे पहले कि हम अगली दो जांचों पर गौर करें, एक पल के लिए यह सोचें कि जब आप उन पर एक साथ विचार करते हैं तो ये पहली दो जांचें हमें क्या करने की अनुमति देती हैं।",
  "n_reviews": 0,
  "start": 629.16,
  "end": 635.1
 },
 {
  "input": "Let's say you detect an error among the odd columns, and among the right half.",
  "translatedText": "मान लीजिए कि आपको विषम स्तंभों और दाएँ आधे भाग के बीच एक त्रुटि का पता चलता है।",
  "n_reviews": 0,
  "start": 635.8,
  "end": 639.66
 },
 {
  "input": "It necessarily means the error is somewhere in the last column.",
  "translatedText": "इसका आवश्यक अर्थ यह है कि त्रुटि अंतिम कॉलम में कहीं है।",
  "n_reviews": 0,
  "start": 640.2,
  "end": 643.04
 },
 {
  "input": "If there was no error in the odd column but there was one in the right half, that tells you it's in the second to last column.",
  "translatedText": "यदि विषम कॉलम में कोई त्रुटि नहीं थी, लेकिन दाहिने आधे हिस्से में एक त्रुटि थी, तो यह आपको बताता है कि यह दूसरे से अंतिम कॉलम में है।",
  "n_reviews": 0,
  "start": 643.82,
  "end": 649.7
 },
 {
  "input": "Likewise if there is an error in the odd columns but not in the right half, you know it's somewhere in the second column.",
  "translatedText": "इसी तरह यदि विषम कॉलम में कोई त्रुटि है, लेकिन दाहिने आधे हिस्से में नहीं, तो आप जानते हैं कि यह दूसरे कॉलम में कहीं है।",
  "n_reviews": 0,
  "start": 650.44,
  "end": 656.02
 },
 {
  "input": "And if neither of those two parity checks detects anything, it means the only place that an error could be is in that leftmost column.",
  "translatedText": "और यदि उन दोनों समता जांचों में से कोई भी कुछ भी पता नहीं लगाता है, तो इसका मतलब है कि एकमात्र स्थान जहां त्रुटि हो सकती है वह सबसे बाएं कॉलम में है।",
  "n_reviews": 0,
  "start": 656.02,
  "end": 663.12
 },
 {
  "input": "But it also might simply mean there's no error at all.",
  "translatedText": "लेकिन इसका सीधा मतलब यह भी हो सकता है कि कोई त्रुटि ही नहीं है।",
  "n_reviews": 0,
  "start": 663.34,
  "end": 666.12
 },
 {
  "input": "Which is all a rather belabored way to say that two parity checks let us pin down the column.",
  "translatedText": "यह कहने का एक विस्तृत तरीका है कि दो समता जांचों से हम कॉलम को पिन कर सकते हैं।",
  "n_reviews": 0,
  "start": 666.3,
  "end": 670.84
 },
 {
  "input": "From here, you can probably guess what follows.",
  "translatedText": "यहां से, आप शायद अनुमान लगा सकते हैं कि आगे क्या होगा।",
  "n_reviews": 0,
  "start": 671.48,
  "end": 673.64
 },
 {
  "input": "We do basically the same thing but for the rows.",
  "translatedText": "हम मूल रूप से वही काम करते हैं लेकिन पंक्तियों के लिए।",
  "n_reviews": 0,
  "start": 673.8,
  "end": 676.14
 },
 {
  "input": "There's going to be a parity check on the odd rows, using position 4 as a parity bit.",
  "translatedText": "समता बिट के रूप में स्थिति 4 का उपयोग करते हुए, विषम पंक्तियों पर समता जांच की जाएगी।",
  "n_reviews": 0,
  "start": 676.44,
  "end": 680.9
 },
 {
  "input": "So in this example that group already has an even parity, so bit 4 would be set to a 0.",
  "translatedText": "तो इस उदाहरण में उस समूह में पहले से ही सम समता है, इसलिए बिट 4 को 0 पर सेट किया जाएगा।",
  "n_reviews": 0,
  "start": 681.38,
  "end": 685.82
 },
 {
  "input": "And finally there's a parity check on the bottom two rows, using position 8 as a parity bit.",
  "translatedText": "और अंत में समता बिट के रूप में स्थिति 8 का उपयोग करते हुए नीचे की दो पंक्तियों पर एक समता जांच होती है।",
  "n_reviews": 0,
  "start": 686.56,
  "end": 691.58
 },
 {
  "input": "In this case, it looks like the sender needs to turn that bit 8 on in order to give the group even parity.",
  "translatedText": "इस मामले में, ऐसा लगता है कि समूह को समता प्रदान करने के लिए प्रेषक को उस बिट 8 को चालू करने की आवश्यकता है।",
  "n_reviews": 0,
  "start": 692.12,
  "end": 696.82
 },
 {
  "input": "Just as the first two checks let us pin down the column, these next two let you pin down the row.",
  "translatedText": "जैसे पहले दो चेक हमें कॉलम को पिन करने देते हैं, ये अगले दो आपको पंक्ति को पिन करने देते हैं।",
  "n_reviews": 0,
  "start": 697.7,
  "end": 701.84
 },
 {
  "input": "As an example, imagine that during the transmission there's an error at, say, position 3.",
  "translatedText": "उदाहरण के तौर पर, कल्पना करें कि ट्रांसमिशन के दौरान स्थिति 3 पर कोई त्रुटि है।",
  "n_reviews": 0,
  "start": 702.88,
  "end": 707.54
 },
 {
  "input": "Well this affects the first parity group, and it also affects the second parity group, so the receiver knows that there's an error somewhere in that right column.",
  "translatedText": "खैर, यह पहले समता समूह को प्रभावित करता है, और यह दूसरे समता समूह को भी प्रभावित करता है, इसलिए रिसीवर को पता चलता है कि उस सही कॉलम में कहीं कोई त्रुटि है।",
  "n_reviews": 0,
  "start": 708.18,
  "end": 715.56
 },
 {
  "input": "But it doesn't affect the third group, and it doesn't affect the fourth group.",
  "translatedText": "लेकिन तीसरे समूह पर इसका कोई प्रभाव नहीं पड़ता, और चौथे समूह पर इसका कोई प्रभाव नहीं पड़ता।",
  "n_reviews": 0,
  "start": 716.1,
  "end": 720.54
 },
 {
  "input": "And that lets the receiver pinpoint the error up to the first row, which necessarily means position 3, so they can fix the error.",
  "translatedText": "और यह रिसीवर को पहली पंक्ति तक त्रुटि को इंगित करने देता है, जिसका अर्थ आवश्यक रूप से स्थिति 3 है, ताकि वे त्रुटि को ठीक कर सकें।",
  "n_reviews": 0,
  "start": 721.24,
  "end": 727.52
 },
 {
  "input": "You might enjoy taking a moment to convince yourself that the answers to these four questions really will always let you pin down a specific location, no matter where they turn out to be.",
  "translatedText": "आप स्वयं को यह समझाने में कुछ समय का आनंद ले सकते हैं कि इन चार प्रश्नों के उत्तर वास्तव में आपको हमेशा एक विशिष्ट स्थान बताने देंगे, चाहे वे कहीं भी हों।",
  "n_reviews": 0,
  "start": 728.58,
  "end": 737.1
 },
 {
  "input": "In fact, the astute among you might even notice a connection between these questions and binary counting.",
  "translatedText": "वास्तव में, आपमें से जो चतुर लोग हैं वे इन प्रश्नों और बाइनरी काउंटिंग के बीच एक संबंध भी देख सकते हैं।",
  "n_reviews": 0,
  "start": 737.72,
  "end": 743.06
 },
 {
  "input": "And if you do, again let me emphasize, pause, try for yourself to draw the connection before I spoil it.",
  "translatedText": "और यदि आप ऐसा करते हैं, तो मुझे फिर से जोर देने दीजिए, रुकिए, इससे पहले कि मैं इसे खराब कर दूं, संबंध बनाने का स्वयं प्रयास करें।",
  "n_reviews": 0,
  "start": 743.5,
  "end": 748.92
 },
 {
  "input": "If you're wondering what happens if a parity bit itself gets affected, well, you can just try it.",
  "translatedText": "यदि आप सोच रहे हैं कि यदि समता बिट स्वयं प्रभावित हो जाए तो क्या होगा, तो आप इसे आज़मा सकते हैं।",
  "n_reviews": 0,
  "start": 750.5,
  "end": 756.06
 },
 {
  "input": "Take a moment to think about how any error among these four special bits is going to be tracked down just like any other, with the same group of four questions.",
  "translatedText": "इस बारे में सोचने के लिए एक क्षण लें कि इन चार विशेष बिट्स के बीच किसी भी त्रुटि को किसी भी अन्य की तरह, चार प्रश्नों के एक ही समूह के साथ कैसे ट्रैक किया जाएगा।",
  "n_reviews": 0,
  "start": 756.44,
  "end": 764.18
 },
 {
  "input": "It doesn't really matter, since at the end of the day what we want is to protect the message bits, the error correction bits are just riding along.",
  "translatedText": "यह वास्तव में कोई फर्क नहीं पड़ता, क्योंकि दिन के अंत में हम जो चाहते हैं वह संदेश बिट्स की सुरक्षा करना है, त्रुटि सुधार बिट्स बस साथ चल रहे हैं।",
  "n_reviews": 0,
  "start": 767.06,
  "end": 773.1
 },
 {
  "input": "But protecting those bits as well is something that naturally falls out of the scheme as a byproduct.",
  "translatedText": "लेकिन उन बिट्स की सुरक्षा भी एक ऐसी चीज है जो स्वाभाविक रूप से एक उपोत्पाद के रूप में योजना से बाहर हो जाती है।",
  "n_reviews": 0,
  "start": 773.6,
  "end": 777.82
 },
 {
  "input": "You might also enjoy anticipating how this scales.",
  "translatedText": "आपको यह अनुमान लगाने में भी आनंद आ सकता है कि इसका पैमाना कैसा होगा।",
  "n_reviews": 0,
  "start": 779.2,
  "end": 781.76
 },
 {
  "input": "If we used a block of size 256 bits, for example, in order to pin down a location, you need only eight yes or no questions to binary search your way down to some specific spot.",
  "translatedText": "यदि हमने 256 बिट आकार के ब्लॉक का उपयोग किया है, उदाहरण के लिए, किसी स्थान को पिन करने के लिए, तो आपको किसी विशिष्ट स्थान पर अपना रास्ता खोजने के लिए केवल आठ हाँ या नहीं के प्रश्नों की आवश्यकता है।",
  "n_reviews": 0,
  "start": 782.3,
  "end": 792.78
 },
 {
  "input": "And remember, each question requires giving up only a single bit to set the appropriate parity check.",
  "translatedText": "और याद रखें, प्रत्येक प्रश्न के लिए उचित समता जांच सेट करने के लिए केवल एक बिट छोड़ने की आवश्यकता होती है।",
  "n_reviews": 0,
  "start": 795.64,
  "end": 800.5
 },
 {
  "input": "Some of you may already see it, but we'll talk later about the systematic way to find what these questions are in just a minute or two.",
  "translatedText": "आप में से कुछ लोग इसे पहले से ही देख सकते हैं, लेकिन हम बाद में एक या दो मिनट में ये प्रश्न क्या हैं यह जानने के व्यवस्थित तरीके के बारे में बात करेंगे।",
  "n_reviews": 0,
  "start": 803.16,
  "end": 809.36
 },
 {
  "input": "Hopefully this sketch is enough to appreciate the efficiency of what we're developing here.",
  "translatedText": "उम्मीद है कि हम यहां जो विकसित कर रहे हैं उसकी दक्षता की सराहना करने के लिए यह स्केच पर्याप्त है।",
  "n_reviews": 0,
  "start": 809.88,
  "end": 813.66
 },
 {
  "input": "The first thing, except for those eight highlighted parity bits, can be whatever you want it to be, carrying whatever message or data you want.",
  "translatedText": "पहली चीज़, उन आठ हाइलाइट किए गए समता बिट्स को छोड़कर, वह हो सकती है जो आप चाहते हैं, जो भी संदेश या डेटा आप चाहते हैं।",
  "n_reviews": 0,
  "start": 813.66,
  "end": 821.0
 },
 {
  "input": "The 8 bits are redundant in the sense that they're completely determined by the rest of the message, but it's in a much smarter way than simply copying the message as a whole.",
  "translatedText": "8 बिट्स इस अर्थ में अनावश्यक हैं कि वे पूरी तरह से शेष संदेश द्वारा निर्धारित होते हैं, लेकिन यह संपूर्ण संदेश को कॉपी करने की तुलना में कहीं अधिक स्मार्ट तरीके से है।",
  "n_reviews": 0,
  "start": 821.72,
  "end": 830.02
 },
 {
  "input": "And still, for so little given up, you would be able to identify and fix any single bit error.",
  "translatedText": "और फिर भी, इतनी कम छूट के बावजूद, आप किसी भी एक बिट त्रुटि को पहचानने और उसे ठीक करने में सक्षम होंगे।",
  "n_reviews": 0,
  "start": 833.6,
  "end": 838.38
 },
 {
  "input": "Well, almost.",
  "translatedText": "हां तकरीबन।",
  "n_reviews": 0,
  "start": 839.2,
  "end": 840.4
 },
 {
  "input": "Okay, so the one problem here is that if none of the four parity checks detect an error, meaning that the specially selected subsets of 8 bits all have even parities, just like the sender intended, then it either means there was no error at all, or it narrows us down into position 0.",
  "translatedText": "ठीक है, तो यहां एक समस्या यह है कि यदि चार समता जांचों में से कोई भी त्रुटि का पता नहीं लगाता है, जिसका अर्थ है कि 8 बिट्स के विशेष रूप से चयनित उपसमुच्चय में सम समताएं हैं, जैसा कि प्रेषक ने चाहा था, तो इसका मतलब यह है कि कोई त्रुटि नहीं थी , या यह हमें स्थिति 0 तक सीमित कर देता है।",
  "n_reviews": 0,
  "start": 840.96,
  "end": 856.86
 },
 {
  "input": "You see, with four yes or no questions, we have 16 possible outcomes for our parity checks, and at first that feels perfect for pinpointing 1 out of 16 positions in the block, but you also need to communicate a 17th outcome, the no error condition.",
  "translatedText": "आप देखते हैं, चार हां या ना वाले प्रश्नों के साथ, हमारे पास समता जांच के लिए 16 संभावित परिणाम हैं, और सबसे पहले यह ब्लॉक में 16 पदों में से 1 को इंगित करने के लिए बिल्कुल सही लगता है, लेकिन आपको 17वां परिणाम भी बताना होगा, कोई त्रुटि नहीं स्थिति।",
  "n_reviews": 0,
  "start": 857.74,
  "end": 871.9
 },
 {
  "input": "The solution here is actually pretty simple, just forget about that 0th bit entirely.",
  "translatedText": "यहां समाधान वास्तव में बहुत सरल है, बस उस 0वें बिट के बारे में पूरी तरह से भूल जाएं।",
  "n_reviews": 0,
  "start": 873.02,
  "end": 877.3
 },
 {
  "input": "So when we do our four parity checks and we see that they're all even, it unambiguously means that there is no error.",
  "translatedText": "इसलिए जब हम अपनी चार समता जांच करते हैं और देखते हैं कि वे सभी सम हैं, तो इसका स्पष्ट अर्थ है कि कोई त्रुटि नहीं है।",
  "n_reviews": 0,
  "start": 877.84,
  "end": 883.46
 },
 {
  "input": "What that means is rather than working with a 16-bit block, we work with a 15-bit block, where 11 of the bits are free to carry a message and 4 of them are there for redundancy.",
  "translatedText": "इसका मतलब यह है कि 16-बिट ब्लॉक के साथ काम करने के बजाय, हम 15-बिट ब्लॉक के साथ काम करते हैं, जहां 11 बिट्स संदेश ले जाने के लिए स्वतंत्र हैं और उनमें से 4 बिट्स अतिरेक के लिए हैं।",
  "n_reviews": 0,
  "start": 884.24,
  "end": 893.22
 },
 {
  "input": "And with that, we now have what people in the business would refer to as a 15-11 Hamming code.",
  "translatedText": "और इसके साथ ही, अब हमारे पास वह है जिसे व्यवसाय के लोग 15-11 हैमिंग कोड के रूप में संदर्भित करेंगे।",
  "n_reviews": 0,
  "start": 893.78,
  "end": 898.8
 },
 {
  "input": "That said, it's nice to have a block size that's a clean power of 2, and there's a clever way we can keep that 0th bit around and get it to do a little extra work for us.",
  "translatedText": "जैसा कि कहा गया है, एक ब्लॉक का आकार 2 की साफ शक्ति वाला होना अच्छा है, और एक चतुर तरीका है कि हम उस 0 बिट को अपने पास रख सकते हैं और इसे हमारे लिए थोड़ा अतिरिक्त काम करने के लिए प्राप्त कर सकते हैं।",
  "n_reviews": 0,
  "start": 899.86,
  "end": 908.14
 },
 {
  "input": "If we use it as a parity bit across the whole block, it lets us actually detect, even though we can't correct, 2-bit errors.",
  "translatedText": "यदि हम इसे पूरे ब्लॉक में समता बिट के रूप में उपयोग करते हैं, तो यह हमें वास्तव में पता लगाने देता है, भले ही हम 2-बिट त्रुटियों को ठीक नहीं कर सकते।",
  "n_reviews": 0,
  "start": 908.7,
  "end": 915.54
 },
 {
  "input": "Here's how it works.",
  "translatedText": "यह ऐसे काम करता है।",
  "n_reviews": 0,
  "start": 916.16,
  "end": 916.82
 },
 {
  "input": "After setting those four special error-correcting bits, we set that 0th one so that the parity of the full block is even, just like a normal parity check.",
  "translatedText": "उन चार विशेष त्रुटि-सुधार बिट्स को सेट करने के बाद, हम उस 0 वें को सेट करते हैं ताकि पूर्ण ब्लॉक की समता सामान्य समता जांच की तरह समान हो।",
  "n_reviews": 0,
  "start": 917.18,
  "end": 924.94
 },
 {
  "input": "Now, if there's a single bit error, then the parity of the full block toggles to be odd, but we would catch that anyway thanks to the four error-correcting checks.",
  "translatedText": "अब, यदि एक भी बिट त्रुटि है, तो पूर्ण ब्लॉक की समता विषम होने के लिए टॉगल हो जाती है, लेकिन चार त्रुटि-सुधार जांचों के लिए धन्यवाद, हम इसे वैसे भी पकड़ लेंगे।",
  "n_reviews": 0,
  "start": 925.7,
  "end": 933.6
 },
 {
  "input": "However, if there's two errors, then the overall parity is going to toggle back to being even, but the receiver would still see that there's been at least some error because of what's going on with those four parity checks.",
  "translatedText": "हालाँकि, यदि दो त्रुटियाँ हैं, तो समग्र समता वापस सम होने पर टॉगल हो जाएगी, लेकिन रिसीवर अभी भी देखेगा कि उन चार समता जाँचों के साथ जो हो रहा है, उसके कारण कम से कम कुछ त्रुटि हुई है।",
  "n_reviews": 0,
  "start": 934.16,
  "end": 945.18
 },
 {
  "input": "So if they notice an even parity overall, but something non-zero happening with the other checks, it tells them there were at least two errors.",
  "translatedText": "इसलिए यदि वे समग्र रूप से एक समान समानता देखते हैं, लेकिन अन्य जांचों के साथ कुछ गैर-शून्य हो रहा है, तो यह उन्हें बताता है कि कम से कम दो त्रुटियां थीं।",
  "n_reviews": 0,
  "start": 945.18,
  "end": 952.7
 },
 {
  "input": "Isn't that clever?",
  "translatedText": "क्या वह चतुराई नहीं है?",
  "n_reviews": 0,
  "start": 953.52,
  "end": 954.0
 },
 {
  "input": "Even though we can't correct those 2-bit errors, just by putting that one little bothersome 0th bit back to work, it lets us detect them.",
  "translatedText": "भले ही हम उन 2-बिट त्रुटियों को ठीक नहीं कर सकते हैं, बस उस एक छोटे से परेशान करने वाले 0वें बिट को काम पर वापस रखकर, यह हमें उनका पता लगाने देता है।",
  "n_reviews": 0,
  "start": 954.3,
  "end": 961.26
 },
 {
  "input": "This is pretty standard, it's known as an extended Hamming code.",
  "translatedText": "यह काफी मानक है, इसे विस्तारित हैमिंग कोड के रूप में जाना जाता है।",
  "n_reviews": 0,
  "start": 962.26,
  "end": 965.22
 },
 {
  "input": "Technically speaking, you now have a full description of what a Hamming code does, at least for the example of a 16-bit block.",
  "translatedText": "तकनीकी रूप से कहें तो, अब आपके पास हैमिंग कोड क्या करता है इसका पूरा विवरण है, कम से कम 16-बिट ब्लॉक के उदाहरण के लिए।",
  "n_reviews": 0,
  "start": 966.54,
  "end": 972.88
 },
 {
  "input": "But I think you'll find it more satisfying to check your understanding and solidify everything up to this point by doing one full example from start to finish yourself.",
  "translatedText": "लेकिन मुझे लगता है कि आपको शुरू से अंत तक एक पूरा उदाहरण देकर अपनी समझ की जांच करना और इस बिंदु तक सब कुछ मजबूत करना अधिक संतोषजनक लगेगा।",
  "n_reviews": 0,
  "start": 972.88,
  "end": 981.32
 },
 {
  "input": "I'll step through it with you though so you can check yourself.",
  "translatedText": "हालाँकि, मैं आपके साथ इसमें कदम उठाऊंगा ताकि आप स्वयं जांच कर सकें।",
  "n_reviews": 0,
  "start": 982.08,
  "end": 984.3
 },
 {
  "input": "To set up a message, whether that's a literal message you're translating over space or some data you want to store over time, the first step is to divide it up into 11-bit chunks.",
  "translatedText": "एक संदेश सेट करने के लिए, चाहे वह एक शाब्दिक संदेश हो जिसे आप अंतरिक्ष में अनुवाद कर रहे हों या कुछ डेटा जिसे आप समय के साथ संग्रहीत करना चाहते हों, पहला कदम इसे 11-बिट खंडों में विभाजित करना है।",
  "n_reviews": 0,
  "start": 985.12,
  "end": 994.66
 },
 {
  "input": "Each chunk is going to get packaged into an error-resistant 16-bit block.",
  "translatedText": "प्रत्येक भाग को त्रुटि-प्रतिरोधी 16-बिट ब्लॉक में पैक किया जाएगा।",
  "n_reviews": 0,
  "start": 995.58,
  "end": 999.76
 },
 {
  "input": "So let's take this one as an example and actually work it out.",
  "translatedText": "तो आइए इसे एक उदाहरण के रूप में लें और वास्तव में इस पर काम करें।",
  "n_reviews": 0,
  "start": 999.76,
  "end": 1003.22
 },
 {
  "input": "Go ahead, actually do it!",
  "translatedText": "आगे बढ़ो, वास्तव में यह करो!",
  "n_reviews": 0,
  "start": 1003.74,
  "end": 1004.94
 },
 {
  "input": "Let's pause and try putting together this block.",
  "translatedText": "आइए रुकें और इस ब्लॉक को एक साथ रखने का प्रयास करें।",
  "n_reviews": 0,
  "start": 1005.22,
  "end": 1007.02
 },
 {
  "input": "Okay, you ready?",
  "translatedText": "ठीक है, आप तैयार हैं?",
  "n_reviews": 0,
  "start": 1012.72,
  "end": 1013.68
 },
 {
  "input": "Remember, position 0 along with the other powers of 2 are reserved for error correction duty, so you start by placing the message bits in all of the remaining spots, in order.",
  "translatedText": "याद रखें, 2 की अन्य शक्तियों के साथ स्थिति 0 त्रुटि सुधार कार्य के लिए आरक्षित है, इसलिए आप संदेश बिट्स को शेष सभी स्थानों पर क्रम से रखकर शुरू करें।",
  "n_reviews": 0,
  "start": 1014.24,
  "end": 1023.32
 },
 {
  "input": "You need this group to have an even parity, which it already does, so you should have set that parity bit in position 1 to be a 0.",
  "translatedText": "आपको इस समूह में एक सम समता की आवश्यकता है, जो कि पहले से ही है, इसलिए आपको उस समता बिट को स्थिति 1 में 0 पर सेट करना चाहिए।",
  "n_reviews": 0,
  "start": 1025.34,
  "end": 1032.34
 },
 {
  "input": "The next group starts off with an odd parity, so you should have set its parity bit to be 1.",
  "translatedText": "अगला समूह एक विषम समता के साथ शुरू होता है, इसलिए आपको इसका समता बिट 1 पर सेट करना चाहिए।",
  "n_reviews": 0,
  "start": 1033.02,
  "end": 1037.88
 },
 {
  "input": "The group after that starts with an odd parity, so again you should have set its parity bit to 1.",
  "translatedText": "उसके बाद समूह एक विषम समता के साथ शुरू होता है, इसलिए आपको फिर से इसका समता बिट 1 पर सेट करना चाहिए।",
  "n_reviews": 0,
  "start": 1039.16,
  "end": 1044.24
 },
 {
  "input": "And the final group also has an odd parity, meaning we set that bit in position 8 to be a 1.",
  "translatedText": "और अंतिम समूह में भी एक अजीब समानता है, जिसका अर्थ है कि हम उस बिट को स्थिति 8 में 1 के रूप में सेट करते हैं।",
  "n_reviews": 0,
  "start": 1044.78,
  "end": 1050.06
 },
 {
  "input": "And then as the final step, the full block now has an even parity, meaning you can set that bit number 0, the overarching parity bit, to be 0.",
  "translatedText": "और फिर अंतिम चरण के रूप में, पूर्ण ब्लॉक में अब एक सम समता है, जिसका अर्थ है कि आप उस बिट संख्या 0, व्यापक समता बिट को 0 पर सेट कर सकते हैं।",
  "n_reviews": 0,
  "start": 1051.3,
  "end": 1060.32
 },
 {
  "input": "So as this block is sent off, the parity of the four special subsets and the block as a whole will all be even, or 0.",
  "translatedText": "इसलिए जैसे ही यह ब्लॉक भेजा जाता है, चार विशेष उपसमुच्चय और संपूर्ण ब्लॉक की समता सम हो जाएगी, या 0.",
  "n_reviews": 0,
  "start": 1061.34,
  "end": 1068.14
 },
 {
  "input": "As the second part of the exercise, let's have you play the role of the receiver.",
  "translatedText": "अभ्यास के दूसरे भाग के रूप में, आइए आपसे प्राप्तकर्ता की भूमिका निभाएँ।",
  "n_reviews": 0,
  "start": 1068.82,
  "end": 1072.18
 },
 {
  "input": "Of course, that would mean you don't already know what this message is, maybe some of you memorized it, but let's assume that you haven't.",
  "translatedText": "बेशक, इसका मतलब यह होगा कि आप पहले से नहीं जानते कि यह संदेश क्या है, हो सकता है कि आप में से कुछ लोगों ने इसे याद कर लिया हो, लेकिन मान लीजिए कि आपने इसे याद नहीं किया है।",
  "n_reviews": 0,
  "start": 1073.48,
  "end": 1079.78
 },
 {
  "input": "What I'm going to do is change either 0, 1, or 2 of the bits in that block, and then ask you to figure out what it is that I did.",
  "translatedText": "मैं जो करने जा रहा हूं वह उस ब्लॉक में 0, 1, या 2 बिट्स को बदलना है, और फिर आपसे यह पता लगाने के लिए कहना है कि मैंने क्या किया है।",
  "n_reviews": 0,
  "start": 1080.02,
  "end": 1087.74
 },
 {
  "input": "So again, pause and try working it out.",
  "translatedText": "तो फिर, रुकें और इस पर काम करने का प्रयास करें।",
  "n_reviews": 0,
  "start": 1088.26,
  "end": 1090.81
 },
 {
  "input": "Okay, so you as the receiver now check the first parity group and you can see that it's even, so any error that exists would have to be in an even column.",
  "translatedText": "ठीक है, तो अब आप रिसीवर के रूप में पहले समता समूह की जांच करें और आप देख सकते हैं कि यह सम है, इसलिए जो भी त्रुटि मौजूद है वह सम कॉलम में होनी चाहिए।",
  "n_reviews": 0,
  "start": 1098.79,
  "end": 1107.91
 },
 {
  "input": "The next check gives us an odd number, telling us both that there's at least one error, and narrowing us down into this specific column.",
  "translatedText": "अगला चेक हमें एक विषम संख्या देता है, जो हम दोनों को बताता है कि कम से कम एक त्रुटि है, और हमें इस विशिष्ट कॉलम में सीमित कर देता है।",
  "n_reviews": 0,
  "start": 1109.69,
  "end": 1117.03
 },
 {
  "input": "The third check is even, chopping down the possibilities even further.",
  "translatedText": "तीसरी जाँच सम है, संभावनाओं को और भी कम कर देती है।",
  "n_reviews": 0,
  "start": 1118.55,
  "end": 1121.79
 },
 {
  "input": "And the last parity check is odd, telling us there's an error somewhere in the bottom, which by now we can see must be in position number 10.",
  "translatedText": "और अंतिम समता जांच अजीब है, जो हमें बताती है कि नीचे कहीं एक त्रुटि है, जिसे अब तक हम देख सकते हैं कि वह स्थिति संख्या 10 में होनी चाहिए।",
  "n_reviews": 0,
  "start": 1122.65,
  "end": 1129.65
 },
 {
  "input": "What's more, the parity of the whole block is odd, giving us confidence that there was one flip and not two.",
  "translatedText": "इसके अलावा, पूरे ब्लॉक की समता विषम है, जिससे हमें विश्वास हो गया कि एक फ्लिप था, दो नहीं।",
  "n_reviews": 0,
  "start": 1131.49,
  "end": 1137.53
 },
 {
  "input": "If it's three or more, all bets are off.",
  "translatedText": "यदि यह तीन या अधिक है, तो सभी दांव बंद हो जाएंगे।",
  "n_reviews": 0,
  "start": 1138.07,
  "end": 1139.97
 },
 {
  "input": "After correcting that bit number 10, pulling out the 11 bits that were not used for correction gives us the relevant segment of the original message, which if you rewind and compare is indeed exactly what we started the example with.",
  "translatedText": "उस बिट संख्या 10 को सही करने के बाद, सुधार के लिए उपयोग नहीं किए गए 11 बिट्स को बाहर निकालने से हमें मूल संदेश का प्रासंगिक खंड मिलता है, जिसे यदि आप रिवाइंड करते हैं और तुलना करते हैं तो वास्तव में वही होता है जिसके साथ हमने उदाहरण शुरू किया था।",
  "n_reviews": 0,
  "start": 1141.31,
  "end": 1154.39
 },
 {
  "input": "And now that you know how to do all this by hand, I'd like to show you how you can carry out the core part of all of this logic with a single line of Python code.",
  "translatedText": "और अब जब आप जानते हैं कि यह सब हाथ से कैसे करना है, तो मैं आपको दिखाना चाहूंगा कि आप पायथन कोड की एक पंक्ति के साथ इस सभी तर्क के मुख्य भाग को कैसे पूरा कर सकते हैं।",
  "n_reviews": 0,
  "start": 1155.71,
  "end": 1163.17
 },
 {
  "input": "You see, what I haven't told you yet is just how elegant this algorithm really is, how simple it is to get a machine to point to the position of an error, how to systematically scale it, and how we can frame all of this as one single operation rather than multiple separate parity checks.",
  "translatedText": "आप देखिए, जो मैंने आपको अभी तक नहीं बताया है वह यह है कि यह एल्गोरिदम वास्तव में कितना सुंदर है, किसी त्रुटि की स्थिति को इंगित करने के लिए मशीन प्राप्त करना कितना सरल है, इसे व्यवस्थित रूप से कैसे मापना है, और हम सभी को कैसे फ्रेम कर सकते हैं यह कई अलग-अलग समता जांचों के बजाय एक एकल ऑपरेशन के रूप में है।",
  "n_reviews": 0,
  "start": 1163.87,
  "end": 1178.75
 },
 {
  "input": "To see what I mean, come join me in part 2.",
  "translatedText": "यह देखने के लिए कि मेरा क्या मतलब है, भाग 2 में मेरे साथ आएँ।",
  "n_reviews": 0,
  "start": 1179.43,
  "end": 1181.31
 }
]