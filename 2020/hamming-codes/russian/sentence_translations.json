[
 {
  "input": "Have you ever wondered how it's possible to scratch a CD or a DVD and still have it play back whatever it's storing?",
  "translatedText": "Вы когда-нибудь задумывались, как можно поцарапать компакт-диск или DVD-диск и при этом воспроизвести все, что на нем хранится?",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 3.62,
  "end": 10.1
 },
 {
  "input": "The scratch really does affect the 1s and 0s on the disk, so it reads off different data from what was stored, but unless it's really scratched up, the bits it reads off are decoded into precisely the same file that was encoded onto it, a bit for bit copy, despite all those errors.",
  "translatedText": "Царапина действительно влияет на 1 и 0 на диске, поэтому он считывает данные, отличные от того, что было сохранено, но если он действительно не поцарапан, считанные биты декодируются точно в тот же файл, который был закодирован на нем. побитовая копия, несмотря на все эти ошибки.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 10.9,
  "end": 27.44
 },
 {
  "input": "There is a whole pile of mathematical cleverness that allows us to store data, and just as importantly to transmit data, in a way that's resilient to errors.",
  "translatedText": "Существует целый ряд математических хитростей, которые позволяют нам хранить данные и, что не менее важно, передавать их устойчивым к ошибкам способом.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 27.44,
  "end": 36.66
 },
 {
  "input": "Well, okay, actually it doesn't take that much cleverness to come up with a way to do this.",
  "translatedText": "Ну да ладно, на самом деле не нужно так уж много ума, чтобы придумать способ сделать это.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 37.52,
  "end": 41.6
 },
 {
  "input": "Any file, whether it's a video or sound or text, some code, an image, whatever, is ultimately some sequence of 1s and 0s.",
  "translatedText": "Любой файл, будь то видео, звук или текст, какой-то код, изображение, что угодно, в конечном итоге представляет собой некую последовательность единиц и нулей.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 42.06,
  "end": 50.38
 },
 {
  "input": "And a simple strategy to correct any bit that gets flipped would be to store three copies of each bit.",
  "translatedText": "А простой стратегией исправления любого перевернутого бита было бы сохранение трех копий каждого бита.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 50.68,
  "end": 56.0
 },
 {
  "input": "Then the machine reading this file could compare these three copies and always take the best 2 out of 3 whenever there's a discrepancy.",
  "translatedText": "Тогда машина, читающая этот файл, сможет сравнить эти три копии и всегда брать лучшие 2 из 3, если есть несоответствие.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 57.58,
  "end": 64.06
 },
 {
  "input": "But what that means is using two thirds of your space for redundancy.",
  "translatedText": "Но это означает использование двух третей вашего пространства для резервирования.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 67.16,
  "end": 70.86
 },
 {
  "input": "And even then, for all of that space given up, there's no strong guarantee about what happens if more than one bit gets flipped.",
  "translatedText": "И даже в этом случае, несмотря на все это отведенное пространство, нет надежной гарантии того, что произойдет, если будет перевернуто более одного бита.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 71.48,
  "end": 77.24
 },
 {
  "input": "The much more interesting question is how to make it so that errors can be corrected while giving up as little space as possible.",
  "translatedText": "Гораздо более интересный вопрос — как сделать так, чтобы можно было исправлять ошибки, занимая при этом как можно меньше места.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 77.98,
  "end": 84.02
 },
 {
  "input": "For example, using the method you'll learn about this video, you could store your data in 256-bit blocks, where each block uses 9 bits, 9!",
  "translatedText": "Например, используя метод, который вы узнаете из этого видео, вы можете хранить свои данные в 256-битных блоках, где каждый блок использует 9 бит, 9!",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 84.52,
  "end": 93.36
 },
 {
  "input": "to act as a kind of redundancy, and the other 247 bits are free to carry whatever meaningful message or data you want.",
  "translatedText": "действовать как своего рода избыточность, а остальные 247 бит могут свободно переносить любое значимое сообщение или данные, которые вы хотите.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 93.76,
  "end": 100.3
 },
 {
  "input": "And it will still be the case that if any bit gets flipped here, just by looking at this block and nothing more, a machine will be able to identify that there was an error and precisely where it was so that it knows how to correct it.",
  "translatedText": "И все равно будет так, что если какой-либо бит здесь будет перевернут, просто взглянув на этот блок и не более того, машина сможет определить, что произошла ошибка и точно где она была, чтобы она знала, как ее исправить.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 100.9,
  "end": 112.66
 },
 {
  "input": "And honestly, that feels like magic.",
  "translatedText": "И, честно говоря, это похоже на волшебство.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 112.66,
  "end": 114.62
 },
 {
  "input": "And for this particular scheme, if two bits get flipped, the machine will at least be able to detect that there were two errors, though it won't know how to fix them.",
  "translatedText": "И для этой конкретной схемы, если два бита будут перевернуты, машина, по крайней мере, сможет обнаружить две ошибки, хотя и не будет знать, как их исправить.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 115.44,
  "end": 122.86
 },
 {
  "input": "We'll talk a little bit later about how this scales for blocks with different sizes.",
  "translatedText": "Чуть позже мы поговорим о том, как это масштабируется для блоков разных размеров.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 123.52,
  "end": 126.9
 },
 {
  "input": "Methods that let you correct errors like this are known, reasonably enough, as error correction codes.",
  "translatedText": "Методы, позволяющие исправлять подобные ошибки, вполне обоснованно называются кодами исправления ошибок.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 127.86,
  "end": 132.9
 },
 {
  "input": "For the better part of the last century, this field has been a really rich source of surprisingly deep math that gets incorporated into devices we use every day.",
  "translatedText": "На протяжении большей части прошлого столетия эта область была действительно богатым источником удивительно глубокой математики, которая внедрялась в устройства, которые мы используем каждый день.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 133.66,
  "end": 141.94
 },
 {
  "input": "The goal here is to give you a very thorough understanding of one of the earliest examples, known as a Hamming code.",
  "translatedText": "Цель здесь — дать вам очень полное представление об одном из самых ранних примеров, известном как код Хэмминга.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 142.84,
  "end": 148.66
 },
 {
  "input": "And by the way, the way I'm thinking about the structure of this video is less about explaining it as directly as possible, and more a matter of prompting you to invent it for yourself, with a little gentle guidance here and there.",
  "translatedText": "И, кстати, я думаю о структуре этого видео не столько для того, чтобы объяснить его как можно более прямо, сколько для того, чтобы побудить вас изобрести его самостоятельно, с небольшими мягкими указаниями здесь и там.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 149.52,
  "end": 159.82
 },
 {
  "input": "So when you feel like you see where it's going at some point, take that moment to pause, actively predict what the scheme is going to be before I tell you.",
  "translatedText": "Поэтому, когда вы почувствуете, что видите, к чему все идет в какой-то момент, воспользуйтесь моментом, чтобы сделать паузу и активно спрогнозировать, какой будет схема, прежде чем я вам скажу.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 160.12,
  "end": 166.72
 },
 {
  "input": "Also, if you want your understanding to get down to the hardware level, Ben Eater has made a video in conjunction with this one showing you how to actually implement Hamming codes on breadboards, which is extremely satisfying.",
  "translatedText": "Кроме того, если вы хотите, чтобы ваше понимание достигло аппаратного уровня, Бен Итер вместе с этим снял видео, показывающее, как на самом деле реализовать коды Хэмминга на макетах, что очень приятно.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 167.24,
  "end": 178.24
 },
 {
  "input": "You should know, Hamming codes are not as widely used as more modern codes, like the Reed-Solomon algorithm, but there is a certain magic to the contrast between just how impossible this task feels at the start, and how utterly reasonable it seems once you learn about Hamming.",
  "translatedText": "Вы должны знать, что коды Хэмминга не так широко используются, как более современные коды, такие как алгоритм Рида-Соломона, но есть определенная магия в контрасте между тем, насколько невыполнимой кажется эта задача в начале, и тем, насколько совершенно разумной она кажется однажды. вы узнаете о Хэмминге.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 179.3,
  "end": 193.0
 },
 {
  "input": "The basic principle of error correction is that in a vast space of all possible messages, only some subset are going to be considered valid messages.",
  "translatedText": "Основной принцип исправления ошибок заключается в том, что в огромном пространстве всех возможных сообщений только некоторые подмножества будут считаться действительными сообщениями.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 193.72,
  "end": 202.18
 },
 {
  "input": "As an analogy, think about correctly spelled words vs incorrectly spelled words.",
  "translatedText": "В качестве аналогии подумайте о правильно написанных словах и неправильно написанных словах.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 202.8,
  "end": 206.94
 },
 {
  "input": "Whenever a valid message gets altered, the receiver is responsible for correcting what they see back to the nearest valid neighbor, as you might do with a typo.",
  "translatedText": "Всякий раз, когда допустимое сообщение изменяется, получатель несет ответственность за исправление увиденного до ближайшего допустимого соседа, как это можно сделать с опечаткой.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 208.9,
  "end": 217.34
 },
 {
  "input": "Coming up with a concrete algorithm to efficiently categorize messages like this, though, takes a certain cleverness.",
  "translatedText": "Однако создание конкретного алгоритма для эффективной классификации подобных сообщений требует определенной смекалки.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 218.22,
  "end": 224.06
 },
 {
  "input": "The story begins in the 1940s, when a young Richard Hamming was working for Bell Labs, and some of his work involved using a very big expensive punch card computer that he had only limited access to.",
  "translatedText": "История начинается в 1940-х годах, когда молодой Ричард Хэмминг работал в Bell Labs, и часть его работы заключалась в использовании очень большого дорогого компьютера с перфокартами, к которому у него был лишь ограниченный доступ.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 226.78,
  "end": 237.42
 },
 {
  "input": "And the programs he kept putting through it kept failing, because every now and then a bit would get misread.",
  "translatedText": "И программы, которые он продолжал реализовывать, продолжали давать сбой, потому что время от времени что-то считывалось неправильно.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 237.8,
  "end": 242.4
 },
 {
  "input": "Frustration being the crucible of invention, he got so fed up that he invented the world's first error correction code.",
  "translatedText": "Разочарование было горнилом изобретений, и ему это настолько надоело, что он изобрел первый в мире код исправления ошибок.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 243.12,
  "end": 248.42
 },
 {
  "input": "There are many different ways to frame Hamming codes, but as a first pass we're going to go through it the way Hamming himself thought about them.",
  "translatedText": "Существует множество различных способов создания кодов Хэмминга, но для начала мы рассмотрим их так, как о них думал сам Хэмминг.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 249.06,
  "end": 255.38
 },
 {
  "input": "Let's use an example that's simple, but not too simple, a block of 16 bits.",
  "translatedText": "Давайте возьмем простой, но не слишком простой пример: блок из 16 бит.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 256.52,
  "end": 260.94
 },
 {
  "input": "We'll number the positions of these bits from 0 up to 15.",
  "translatedText": "Пронумеруем позиции этих битов от 0 до 15.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 261.82,
  "end": 264.74
 },
 {
  "input": "The actual data we want to store is only going to make up 12 of these bits, while 4 of the positions are reserved as a kind of redundancy.",
  "translatedText": "Фактические данные, которые мы хотим сохранить, будут состоять только из 12 таких битов, а 4 позиции зарезервированы в качестве своего рода избыточности.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 265.62,
  "end": 273.0
 },
 {
  "input": "The word redundant here doesn't simply mean copy, after all, those 4 bits don't give us enough room to blindly copy the data.",
  "translatedText": "Слово «избыточный» здесь не означает просто копирование: в конце концов, эти 4 бита не дают нам достаточно места для слепого копирования данных.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 273.9,
  "end": 280.04
 },
 {
  "input": "Instead, they'll need to be a much more nuanced and clever kind of redundancy, not adding any new information, but adding resilience.",
  "translatedText": "Вместо этого они должны будут представлять собой гораздо более тонкую и умную избыточность, не добавляя никакой новой информации, но повышая устойчивость.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 280.72,
  "end": 287.28
 },
 {
  "input": "You might expect these 4 special bits to come nicely packaged together, maybe at the end or something like that, but as you'll see, having them sit in positions which are powers of 2 allows for something that's really elegant by the end.",
  "translatedText": "Вы могли бы ожидать, что эти 4 специальных бита будут красиво упакованы вместе, может быть, в конце или что-то в этом роде, но, как вы увидите, расположение их в положениях, которые являются степенями 2, к концу позволяет получить что-то действительно элегантное.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 288.6,
  "end": 299.62
 },
 {
  "input": "It also might give you a little hint about how this scales for larger blocks.",
  "translatedText": "Это также может дать вам небольшую подсказку о том, как это масштабируется для более крупных блоков.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 300.2,
  "end": 303.54
 },
 {
  "input": "Also technically it ends up being only 11 bits of data, you'll find there's a mild nuance for what goes on at position 0, but don't worry about that for now.",
  "translatedText": "Кроме того, технически это всего лишь 11 бит данных, вы обнаружите небольшой нюанс в том, что происходит в позиции 0, но пока не беспокойтесь об этом.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 304.9,
  "end": 313.26
 },
 {
  "input": "Like any error correction algorithm, this will involve two players, a sender who's responsible for setting these 4 special bits, and a receiver who's responsible for performing some kind of check and correcting the errors.",
  "translatedText": "Как и в любом алгоритме исправления ошибок, в нем участвуют два игрока: отправитель, который отвечает за установку этих 4 специальных битов, и получатель, который отвечает за выполнение некоторой проверки и исправление ошибок.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 314.14,
  "end": 325.54
 },
 {
  "input": "Of course, the words sender and receiver really refer to machines or software that's doing all the checks, and the idea of a message is meant really broadly, to include things like storage.",
  "translatedText": "Конечно, слова «отправитель» и «получатель» на самом деле относятся к машинам или программному обеспечению, выполняющим все проверки, а идея сообщения подразумевается очень широко, включая такие вещи, как хранилище.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 326.3,
  "end": 334.74
 },
 {
  "input": "After all, storing data is the same thing as sending a message just from the past to the future instead of from one place to another.",
  "translatedText": "В конце концов, хранение данных — это то же самое, что отправка сообщения только из прошлого в будущее, а не из одного места в другое.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 335.34,
  "end": 341.68
 },
 {
  "input": "So that's the setup, but before we can dive in we need to talk about a related idea which was fresh on Hamming's mind in the time of his discovery, a method which lets you detect any single bit errors, but not to correct them, known in the business as a parity check.",
  "translatedText": "Итак, установка такова, но прежде чем мы углубимся в нее, нам нужно поговорить о связанной идее, которая была свежа в голове Хэмминга во время его открытия, о методе, который позволяет обнаруживать любые однобитовые ошибки, но не исправлять их, известный в бизнесе как проверка паритета.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 342.56,
  "end": 356.3
 },
 {
  "input": "For a parity check, we separate out only one single bit that the sender is responsible for tuning, and the rest are free to carry a message.",
  "translatedText": "Для проверки четности мы выделяем только один бит, за настройку которого отвечает отправитель, а остальные могут свободно переносить сообщение.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 356.88,
  "end": 363.82
 },
 {
  "input": "The only job of this special bit is to make sure that the total number of 1s in the message is an even number.",
  "translatedText": "Единственная задача этого специального бита — убедиться, что общее количество единиц в сообщении является четным.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 364.88,
  "end": 371.28
 },
 {
  "input": "So for example right now, that total number of 1s is 7, that's odd, so the sender needs to flip that special bit to be a 1, making the count even.",
  "translatedText": "Например, сейчас общее количество единиц равно 7, это нечетно, поэтому отправителю необходимо перевернуть этот специальный бит на 1, чтобы сделать счет четным.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 372.08,
  "end": 379.96
 },
 {
  "input": "But if the block had already started off with an even number of 1s, then this special bit would have been kept at a 0.",
  "translatedText": "Но если бы блок уже начинался с четного числа единиц, тогда этот специальный бит остался бы равным 0.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 380.8,
  "end": 386.42
 },
 {
  "input": "This is pretty simple, deceptively simple, but it's an incredibly elegant way to distill the idea of change anywhere in a message to be reflected in a single bit of information.",
  "translatedText": "Это довольно просто, обманчиво просто, но это невероятно элегантный способ выразить идею изменения в любом месте сообщения и отразить ее в одном бите информации.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 387.34,
  "end": 396.78
 },
 {
  "input": "Notice if any bit of this message gets flipped, either from 0 to 1 or 1 to 0, it changes the total count of 1s from being even to being odd.",
  "translatedText": "Обратите внимание: если какой-либо бит этого сообщения переворачивается с 0 на 1 или с 1 на 0, общее количество единиц меняется с четного на нечетное.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 397.5,
  "end": 406.54
 },
 {
  "input": "So if you're the receiver, you look at this message, and you see an odd number of 1s, you can know for sure that some error has occurred, even though you might have no idea where it was.",
  "translatedText": "Итак, если вы получатель, посмотрите на это сообщение и увидите нечетное число единиц, вы можете точно знать, что произошла какая-то ошибка, даже если вы понятия не имеете, где она была.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 407.98,
  "end": 417.46
 },
 {
  "input": "In the jargon, whether a group of bits has an even or odd number of 1s is known as its parity.",
  "translatedText": "На жаргоне четное или нечетное количество единиц в группе битов называется ее четностью.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 418.5,
  "end": 423.34
 },
 {
  "input": "You could also use numbers and say the parity is 0 or 1, which is typically more helpful once you start doing math with the idea.",
  "translatedText": "Вы также можете использовать числа и сказать, что четность равна 0 или 1, что обычно более полезно, когда вы начинаете заниматься математикой с этой идеей.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 424.86,
  "end": 430.72
 },
 {
  "input": "And this special bit that the sender uses to control the parity is called the parity bit.",
  "translatedText": "И этот специальный бит, который отправитель использует для контроля четности, называется битом четности.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 431.22,
  "end": 435.52
 },
 {
  "input": "And actually, we should be clear, if the receiver sees an odd parity, it doesn't necessarily mean there was just one error, there might have been 3 errors, or 5, or any other odd number, but they can know for sure that it wasn't 0.",
  "translatedText": "И на самом деле, нам должно быть ясно: если получатель видит нечетную четность, это не обязательно означает, что была только одна ошибка, могло быть 3 ошибки, или 5, или любое другое нечетное число, но он может знать это наверняка. что это не 0.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 437.56,
  "end": 449.26
 },
 {
  "input": "On the other hand, if there had been 2 errors, or any even number of errors, that final count of 1s would still be even, so the receiver can't have full confidence that an even count necessarily means the message is error-free.",
  "translatedText": "С другой стороны, если бы было 2 ошибки или любое четное количество ошибок, итоговое количество единиц все равно было бы четным, поэтому получатель не может быть полностью уверен, что четное количество обязательно означает, что сообщение не содержит ошибок.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 449.98,
  "end": 462.3
 },
 {
  "input": "You might complain that a message which gets messed up by only 2 bit flips is pretty weak, and you would be absolutely right.",
  "translatedText": "Вы можете жаловаться, что сообщение, которое искажается всего лишь двумя битами, довольно слабое, и вы будете абсолютно правы.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 462.84,
  "end": 469.08
 },
 {
  "input": "Keep in mind, though, there is no method for error detection or correction that could give you 100% confidence that the message you receive is the one the sender intended.",
  "translatedText": "Однако имейте в виду, что не существует метода обнаружения или исправления ошибок, который мог бы дать вам 100% уверенность в том, что полученное вами сообщение является именно тем, которое намеревался отправитель.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 469.7,
  "end": 478.9
 },
 {
  "input": "After all, enough random noise could always change one valid message into another valid message just by pure chance.",
  "translatedText": "В конце концов, достаточное количество случайного шума всегда может превратить одно действительное сообщение в другое действительное сообщение по чистой случайности.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 479.58,
  "end": 485.44
 },
 {
  "input": "Instead, the goal is to come up with a scheme that's robust up to a certain maximum number of errors, or maybe to reduce the probability of a false positive like this.",
  "translatedText": "Вместо этого цель состоит в том, чтобы придумать схему, устойчивую к определенному максимальному количеству ошибок, или, возможно, снизить вероятность такого ложного срабатывания.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 486.24,
  "end": 495.38
 },
 {
  "input": "Parity checks on their own are pretty weak, but by distilling the idea of change across a full message down to a single bit, what they give us is a powerful building block for more sophisticated schemes.",
  "translatedText": "Сами по себе проверки четности довольно слабы, но, сведя идею изменения всего сообщения до одного бита, они дают нам мощный строительный блок для более сложных схем.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 496.26,
  "end": 507.16
 },
 {
  "input": "For example, as Hamming was searching for a way to identify where an error happened, not just that it happened, his key insight was that if you apply some parity checks not to the full message, but to certain carefully selected subsets, you can ask a more refined series of questions that pin down the location of any single bit error.",
  "translatedText": "Например, когда Хэмминг искал способ определить, где произошла ошибка, а не только то, что она произошла, его ключевой вывод заключался в том, что если вы примените некоторые проверки четности не ко всему сообщению, а к определенным тщательно выбранным подмножествам, вы можете спросить более уточненная серия вопросов, позволяющая определить местонахождение любой единичной ошибки.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 507.94,
  "end": 525.94
 },
 {
  "input": "The overall feeling is a bit like playing a game of 20 questions, asking yes or no queries that chop the space of possibilities in half.",
  "translatedText": "Общее ощущение немного похоже на игру из 20 вопросов, когда вы задаете вопросы «да» или «нет», которые делят пространство возможностей пополам.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 526.68,
  "end": 533.38
 },
 {
  "input": "For example, let's say we do a parity check just on these 8 bits, all of the odd numbered positions.",
  "translatedText": "Например, предположим, что мы выполняем проверку четности только для этих 8 бит, всех позиций с нечетными номерами.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 534.16,
  "end": 539.38
 },
 {
  "input": "Then if an error is detected, it gives the receiver a little more information about where specifically the error is, namely that it's in an odd position.",
  "translatedText": "Затем, если ошибка обнаружена, он дает приемнику немного больше информации о том, где именно находится ошибка, а именно, что она находится в нечетном положении.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 540.1,
  "end": 548.24
 },
 {
  "input": "If no error is detected among those 8 bits, it either means there's no error at all, or it sits somewhere in the even positions.",
  "translatedText": "Если среди этих 8 бит не обнаружено ошибок, это либо означает, что ошибки вообще нет, либо она находится где-то в четных позициях.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 548.94,
  "end": 556.24
 },
 {
  "input": "You might think that limiting a parity check to half the bits makes it less effective, but when it's done in conjunction with other well-chosen checks, it counterintuitively gives us something a lot more powerful.",
  "translatedText": "Вы можете подумать, что ограничение проверки четности половиной битов делает ее менее эффективной, но когда она выполняется в сочетании с другими правильно выбранными проверками, это, как ни странно, дает нам нечто гораздо более мощное.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 557.18,
  "end": 567.2
 },
 {
  "input": "To actually set up that parity check, remember, it requires earmarking some special bit that has control for the parity of that full group.",
  "translatedText": "Помните, что для фактической настройки проверки четности необходимо выделить какой-то специальный бит, который контролирует четность всей группы.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 569.24,
  "end": 576.62
 },
 {
  "input": "Here let's just choose position 1.",
  "translatedText": "Здесь давайте просто выберем позицию 1.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 577.48,
  "end": 579.18
 },
 {
  "input": "For the example shown, the parity of these 8 bits is currently odd, so the sender is responsible for toggling that parity bit, and now it's even.",
  "translatedText": "В показанном примере четность этих 8 бит в настоящее время нечетная, поэтому отправитель несет ответственность за переключение этого бита четности, и теперь он четный.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 579.72,
  "end": 586.98
 },
 {
  "input": "This is only 1 out of 4 parity checks that we'll do.",
  "translatedText": "Это только 1 из 4 проверок четности, которые мы проведем.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 587.94,
  "end": 590.68
 },
 {
  "input": "The second check is among the 8 bits on the right half of the grid, at least as we've drawn it here.",
  "translatedText": "Вторая проверка осуществляется среди 8 бит в правой половине сетки, по крайней мере, так, как мы ее нарисовали здесь.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 590.92,
  "end": 596.3
 },
 {
  "input": "This time we might use position 2 as a parity bit, so these 8 bits already have an even parity, and the sender can feel good leaving that bit number 2 unchanged.",
  "translatedText": "На этот раз мы могли бы использовать позицию 2 в качестве бита четности, так что эти 8 бит уже имеют четность, и отправитель может чувствовать себя хорошо, оставив этот бит номер 2 без изменений.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 596.68,
  "end": 606.06
 },
 {
  "input": "Then on the other end, if the receiver checks the parity of this group and they find that it's odd, they'll know that the error is somewhere among these 8 bits on the right.",
  "translatedText": "Затем, на другом конце, если получатель проверит четность этой группы и обнаружит, что она нечетная, он узнает, что ошибка находится где-то среди этих 8 бит справа.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 607.02,
  "end": 615.38
 },
 {
  "input": "Otherwise it means either there's no error, or the error is somewhere on the left half.",
  "translatedText": "В противном случае это означает, что либо ошибки нет, либо ошибка где-то в левой половине.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 615.82,
  "end": 620.58
 },
 {
  "input": "Or I guess there could have been two errors, but for right now we're going to assume that there's at most one error in the entire block.",
  "translatedText": "Или я предполагаю, что ошибок могло быть две, но сейчас мы будем предполагать, что во всем блоке есть не более одной ошибки.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 621.12,
  "end": 626.5
 },
 {
  "input": "Things break down completely for more than that.",
  "translatedText": "Более того, все полностью ломается.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 626.94,
  "end": 628.74
 },
 {
  "input": "Here, before we look at the next two checks, take a moment to think about what these first two allow us to do when you consider them together.",
  "translatedText": "Здесь, прежде чем мы рассмотрим следующие две проверки, подумайте, что позволяют нам делать первые две проверки, если рассматривать их вместе.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 629.16,
  "end": 635.1
 },
 {
  "input": "Let's say you detect an error among the odd columns, and among the right half.",
  "translatedText": "Допустим, вы обнаружили ошибку среди нечетных столбцов и среди правой половины.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 635.8,
  "end": 639.66
 },
 {
  "input": "It necessarily means the error is somewhere in the last column.",
  "translatedText": "Это обязательно означает, что ошибка находится где-то в последнем столбце.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 640.2,
  "end": 643.04
 },
 {
  "input": "If there was no error in the odd column but there was one in the right half, that tells you it's in the second to last column.",
  "translatedText": "Если в нечетном столбце не было ошибки, но она была в правой половине, это означает, что она находится в предпоследнем столбце.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 643.82,
  "end": 649.7
 },
 {
  "input": "Likewise if there is an error in the odd columns but not in the right half, you know it's somewhere in the second column.",
  "translatedText": "Аналогично, если ошибка есть в нечетных столбцах, но не в правой половине, вы знаете, что она где-то во втором столбце.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 650.44,
  "end": 656.02
 },
 {
  "input": "And if neither of those two parity checks detects anything, it means the only place that an error could be is in that leftmost column.",
  "translatedText": "И если ни одна из этих двух проверок четности ничего не обнаружит, это означает, что единственное место, где может быть ошибка, — это самый левый столбец.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 656.02,
  "end": 663.12
 },
 {
  "input": "But it also might simply mean there's no error at all.",
  "translatedText": "Но это также может означать, что ошибки вообще нет.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 663.34,
  "end": 666.12
 },
 {
  "input": "Which is all a rather belabored way to say that two parity checks let us pin down the column.",
  "translatedText": "Это довольно расплывчатый способ сказать, что две проверки четности позволяют нам зафиксировать столбец.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 666.3,
  "end": 670.84
 },
 {
  "input": "From here, you can probably guess what follows.",
  "translatedText": "Отсюда вы, вероятно, можете догадаться, что будет дальше.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 671.48,
  "end": 673.64
 },
 {
  "input": "We do basically the same thing but for the rows.",
  "translatedText": "Мы делаем в основном то же самое, но для строк.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 673.8,
  "end": 676.14
 },
 {
  "input": "There's going to be a parity check on the odd rows, using position 4 as a parity bit.",
  "translatedText": "Будет произведена проверка четности нечетных строк с использованием позиции 4 в качестве бита четности.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 676.44,
  "end": 680.9
 },
 {
  "input": "So in this example that group already has an even parity, so bit 4 would be set to a 0.",
  "translatedText": "Итак, в этом примере эта группа уже имеет четность, поэтому бит 4 будет установлен в 0.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 681.38,
  "end": 685.82
 },
 {
  "input": "And finally there's a parity check on the bottom two rows, using position 8 as a parity bit.",
  "translatedText": "И, наконец, в двух нижних строках выполняется проверка четности с использованием позиции 8 в качестве бита четности.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 686.56,
  "end": 691.58
 },
 {
  "input": "In this case, it looks like the sender needs to turn that bit 8 on in order to give the group even parity.",
  "translatedText": "В этом случае похоже, что отправителю необходимо включить бит 8, чтобы обеспечить четность группе.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 692.12,
  "end": 696.82
 },
 {
  "input": "Just as the first two checks let us pin down the column, these next two let you pin down the row.",
  "translatedText": "Так же, как первые две проверки позволяют нам закрепить столбец, следующие две позволяют закрепить строку.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 697.7,
  "end": 701.84
 },
 {
  "input": "As an example, imagine that during the transmission there's an error at, say, position 3.",
  "translatedText": "В качестве примера представьте, что во время передачи возникла ошибка, скажем, в позиции 3.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 702.88,
  "end": 707.54
 },
 {
  "input": "Well this affects the first parity group, and it also affects the second parity group, so the receiver knows that there's an error somewhere in that right column.",
  "translatedText": "Ну, это влияет на первую группу четности, а также влияет на вторую группу четности, поэтому получатель знает, что где-то в этом правом столбце есть ошибка.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 708.18,
  "end": 715.56
 },
 {
  "input": "But it doesn't affect the third group, and it doesn't affect the fourth group.",
  "translatedText": "Но это не влияет на третью группу и не влияет на четвертую группу.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 716.1,
  "end": 720.54
 },
 {
  "input": "And that lets the receiver pinpoint the error up to the first row, which necessarily means position 3, so they can fix the error.",
  "translatedText": "И это позволяет получателю точно определить ошибку до первой строки, что обязательно означает позицию 3, чтобы они могли исправить ошибку.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 721.24,
  "end": 727.52
 },
 {
  "input": "You might enjoy taking a moment to convince yourself that the answers to these four questions really will always let you pin down a specific location, no matter where they turn out to be.",
  "translatedText": "Возможно, вам понравится потратить время на то, чтобы убедить себя в том, что ответы на эти четыре вопроса действительно всегда позволят вам определить конкретное место, независимо от того, где оно окажется.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 728.58,
  "end": 737.1
 },
 {
  "input": "In fact, the astute among you might even notice a connection between these questions and binary counting.",
  "translatedText": "На самом деле, самые проницательные из вас могут даже заметить связь между этими вопросами и двоичным счетом.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 737.72,
  "end": 743.06
 },
 {
  "input": "And if you do, again let me emphasize, pause, try for yourself to draw the connection before I spoil it.",
  "translatedText": "А если да, то еще раз позвольте мне подчеркнуть, сделать паузу, попытаться самому уловить связь, прежде чем я ее испорчу.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 743.5,
  "end": 748.92
 },
 {
  "input": "If you're wondering what happens if a parity bit itself gets affected, well, you can just try it.",
  "translatedText": "Если вам интересно, что произойдет, если будет затронут сам бит четности, вы можете просто попробовать.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 750.5,
  "end": 756.06
 },
 {
  "input": "Take a moment to think about how any error among these four special bits is going to be tracked down just like any other, with the same group of four questions.",
  "translatedText": "Найдите минутку и подумайте, как можно отследить любую ошибку среди этих четырех специальных битов, как и любую другую, с помощью одной и той же группы из четырех вопросов.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 756.44,
  "end": 764.18
 },
 {
  "input": "It doesn't really matter, since at the end of the day what we want is to protect the message bits, the error correction bits are just riding along.",
  "translatedText": "На самом деле это не имеет значения, поскольку, в конце концов, мы хотим защитить биты сообщения, а биты исправления ошибок просто продолжаются.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 767.06,
  "end": 773.1
 },
 {
  "input": "But protecting those bits as well is something that naturally falls out of the scheme as a byproduct.",
  "translatedText": "Но защита и этих частей также является чем-то, что естественным образом выпадает из схемы как побочный продукт.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 773.6,
  "end": 777.82
 },
 {
  "input": "You might also enjoy anticipating how this scales.",
  "translatedText": "Вам также может понравиться предвидеть, как это масштабируется.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 779.2,
  "end": 781.76
 },
 {
  "input": "If we used a block of size 256 bits, for example, in order to pin down a location, you need only eight yes or no questions to binary search your way down to some specific spot.",
  "translatedText": "Если бы мы использовали блок размером 256 бит, например, чтобы определить местоположение, вам нужно всего восемь вопросов «да» или «нет» для двоичного поиска пути к определенному месту.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 782.3,
  "end": 792.78
 },
 {
  "input": "And remember, each question requires giving up only a single bit to set the appropriate parity check.",
  "translatedText": "И помните, каждый вопрос требует отказа только от одного бита, чтобы установить соответствующую проверку четности.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 795.64,
  "end": 800.5
 },
 {
  "input": "Some of you may already see it, but we'll talk later about the systematic way to find what these questions are in just a minute or two.",
  "translatedText": "Некоторые из вас, возможно, уже видели это, но позже мы поговорим о систематическом способе узнать, что это за вопросы, всего за минуту или две.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 803.16,
  "end": 809.36
 },
 {
  "input": "Hopefully this sketch is enough to appreciate the efficiency of what we're developing here.",
  "translatedText": "Надеюсь, этого эскиза будет достаточно, чтобы оценить эффективность того, что мы здесь разрабатываем.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 809.88,
  "end": 813.66
 },
 {
  "input": "The first thing, except for those eight highlighted parity bits, can be whatever you want it to be, carrying whatever message or data you want.",
  "translatedText": "Первое, за исключением этих восьми выделенных битов четности, может быть любым, каким вы хотите, неся любое сообщение или данные, которые вы хотите.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 813.66,
  "end": 821.0
 },
 {
  "input": "The 8 bits are redundant in the sense that they're completely determined by the rest of the message, but it's in a much smarter way than simply copying the message as a whole.",
  "translatedText": "8 бит избыточны в том смысле, что они полностью определяются остальной частью сообщения, но это гораздо более разумный способ, чем простое копирование сообщения целиком.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 821.72,
  "end": 830.02
 },
 {
  "input": "And still, for so little given up, you would be able to identify and fix any single bit error.",
  "translatedText": "И все же, приложив так мало усилий, вы сможете выявить и исправить любую ошибку в один бит.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 833.6,
  "end": 838.38
 },
 {
  "input": "Well, almost.",
  "translatedText": "Ну, почти.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 839.2,
  "end": 840.4
 },
 {
  "input": "Okay, so the one problem here is that if none of the four parity checks detect an error, meaning that the specially selected subsets of 8 bits all have even parities, just like the sender intended, then it either means there was no error at all, or it narrows us down into position 0.",
  "translatedText": "Итак, единственная проблема здесь заключается в том, что если ни одна из четырех проверок четности не обнаруживает ошибку, а это означает, что все специально выбранные подмножества 8 бит имеют четность, как и предполагал отправитель, то это либо означает, что ошибки вообще не было. , или это сузит нас до позиции 0.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 840.96,
  "end": 856.86
 },
 {
  "input": "You see, with four yes or no questions, we have 16 possible outcomes for our parity checks, and at first that feels perfect for pinpointing 1 out of 16 positions in the block, but you also need to communicate a 17th outcome, the no error condition.",
  "translatedText": "Видите ли, с четырьмя вопросами «да» или «нет» у нас есть 16 возможных результатов для наших проверок на четность, и поначалу это кажется идеальным для точного определения 1 из 16 позиций в блоке, но вам также необходимо сообщить 17-й результат, отсутствие ошибки. состояние.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 857.74,
  "end": 871.9
 },
 {
  "input": "The solution here is actually pretty simple, just forget about that 0th bit entirely.",
  "translatedText": "Решение здесь на самом деле довольно простое: просто забудьте полностью об этом 0-м бите.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 873.02,
  "end": 877.3
 },
 {
  "input": "So when we do our four parity checks and we see that they're all even, it unambiguously means that there is no error.",
  "translatedText": "Поэтому, когда мы выполняем четыре проверки четности и видим, что все они четные, это однозначно означает, что ошибки нет.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 877.84,
  "end": 883.46
 },
 {
  "input": "What that means is rather than working with a 16-bit block, we work with a 15-bit block, where 11 of the bits are free to carry a message and 4 of them are there for redundancy.",
  "translatedText": "Это означает, что вместо работы с 16-битным блоком мы работаем с 15-битным блоком, где 11 бит свободны для передачи сообщения, а 4 из них предназначены для избыточности.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 884.24,
  "end": 893.22
 },
 {
  "input": "And with that, we now have what people in the business would refer to as a 15-11 Hamming code.",
  "translatedText": "И теперь у нас есть то, что люди в бизнесе называют кодом Хэмминга 15-11.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 893.78,
  "end": 898.8
 },
 {
  "input": "That said, it's nice to have a block size that's a clean power of 2, and there's a clever way we can keep that 0th bit around and get it to do a little extra work for us.",
  "translatedText": "Тем не менее, приятно иметь размер блока, равный чистой степени 2, и есть умный способ сохранить этот 0-й бит и заставить его выполнять за нас небольшую дополнительную работу.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 899.86,
  "end": 908.14
 },
 {
  "input": "If we use it as a parity bit across the whole block, it lets us actually detect, even though we can't correct, 2-bit errors.",
  "translatedText": "Если мы используем его в качестве бита четности во всем блоке, это позволяет нам обнаруживать 2-битные ошибки, даже если мы не можем их исправить.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 908.7,
  "end": 915.54
 },
 {
  "input": "Here's how it works.",
  "translatedText": "Вот как это работает.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 916.16,
  "end": 916.82
 },
 {
  "input": "After setting those four special error-correcting bits, we set that 0th one so that the parity of the full block is even, just like a normal parity check.",
  "translatedText": "После установки этих четырех специальных битов, исправляющих ошибки, мы устанавливаем этот 0-й бит, чтобы четность всего блока была четной, как при обычной проверке четности.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 917.18,
  "end": 924.94
 },
 {
  "input": "Now, if there's a single bit error, then the parity of the full block toggles to be odd, but we would catch that anyway thanks to the four error-correcting checks.",
  "translatedText": "Теперь, если есть ошибка в один бит, то четность полного блока переключается на нечетную, но мы все равно уловим это благодаря четырем проверкам, исправляющим ошибки.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 925.7,
  "end": 933.6
 },
 {
  "input": "However, if there's two errors, then the overall parity is going to toggle back to being even, but the receiver would still see that there's been at least some error because of what's going on with those four parity checks.",
  "translatedText": "Однако, если есть две ошибки, то общая четность снова станет четной, но получатель все равно увидит, что произошла хотя бы какая-то ошибка из-за того, что происходит с этими четырьмя проверками четности.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 934.16,
  "end": 945.18
 },
 {
  "input": "So if they notice an even parity overall, but something non-zero happening with the other checks, it tells them there were at least two errors.",
  "translatedText": "Поэтому, если они заметят в целом четность, но с другими проверками происходит что-то ненулевое, это говорит им, что было как минимум две ошибки.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 945.18,
  "end": 952.7
 },
 {
  "input": "Isn't that clever?",
  "translatedText": "Разве это не умно?",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 953.52,
  "end": 954.0
 },
 {
  "input": "Even though we can't correct those 2-bit errors, just by putting that one little bothersome 0th bit back to work, it lets us detect them.",
  "translatedText": "Несмотря на то, что мы не можем исправить эти 2-битные ошибки, просто вернув в работу этот маленький надоедливый 0-й бит, мы сможем их обнаружить.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 954.3,
  "end": 961.26
 },
 {
  "input": "This is pretty standard, it's known as an extended Hamming code.",
  "translatedText": "Это довольно стандартный код, известный как расширенный код Хэмминга.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 962.26,
  "end": 965.22
 },
 {
  "input": "Technically speaking, you now have a full description of what a Hamming code does, at least for the example of a 16-bit block.",
  "translatedText": "Технически говоря, теперь у вас есть полное описание того, что делает код Хэмминга, по крайней мере, на примере 16-битного блока.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 966.54,
  "end": 972.88
 },
 {
  "input": "But I think you'll find it more satisfying to check your understanding and solidify everything up to this point by doing one full example from start to finish yourself.",
  "translatedText": "Но я думаю, вам будет приятнее проверить свое понимание и закрепить все до этого момента, выполнив один полный пример от начала до конца самостоятельно.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 972.88,
  "end": 981.32
 },
 {
  "input": "I'll step through it with you though so you can check yourself.",
  "translatedText": "Я пройду через это вместе с вами, чтобы вы могли проверить себя.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 982.08,
  "end": 984.3
 },
 {
  "input": "To set up a message, whether that's a literal message you're translating over space or some data you want to store over time, the first step is to divide it up into 11-bit chunks.",
  "translatedText": "Чтобы настроить сообщение, будь то буквальное сообщение, которое вы транслируете в пространстве, или какие-то данные, которые вы хотите сохранить во времени, первым шагом является разделение его на 11-битные фрагменты.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 985.12,
  "end": 994.66
 },
 {
  "input": "Each chunk is going to get packaged into an error-resistant 16-bit block.",
  "translatedText": "Каждый фрагмент будет упакован в устойчивый к ошибкам 16-битный блок.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 995.58,
  "end": 999.76
 },
 {
  "input": "So let's take this one as an example and actually work it out.",
  "translatedText": "Итак, давайте возьмем это в качестве примера и на самом деле разберемся.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 999.76,
  "end": 1003.22
 },
 {
  "input": "Go ahead, actually do it!",
  "translatedText": "Давай, действительно сделай это!",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1003.74,
  "end": 1004.94
 },
 {
  "input": "Let's pause and try putting together this block.",
  "translatedText": "Давайте остановимся и попробуем собрать этот блок.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1005.22,
  "end": 1007.02
 },
 {
  "input": "Okay, you ready?",
  "translatedText": "Хорошо, ты готов?",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1012.72,
  "end": 1013.68
 },
 {
  "input": "Remember, position 0 along with the other powers of 2 are reserved for error correction duty, so you start by placing the message bits in all of the remaining spots, in order.",
  "translatedText": "Помните, что позиция 0 вместе с другими степенями двойки зарезервирована для исправления ошибок, поэтому вы начинаете с размещения битов сообщения во всех оставшихся позициях по порядку.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1014.24,
  "end": 1023.32
 },
 {
  "input": "You need this group to have an even parity, which it already does, so you should have set that parity bit in position 1 to be a 0.",
  "translatedText": "Вам нужно, чтобы эта группа имела четную четность, которая уже есть, поэтому вам следует установить этот бит четности в позиции 1 равным 0.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1025.34,
  "end": 1032.34
 },
 {
  "input": "The next group starts off with an odd parity, so you should have set its parity bit to be 1.",
  "translatedText": "Следующая группа начинается с нечетной четности, поэтому вам следует установить ее бит четности равным 1.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1033.02,
  "end": 1037.88
 },
 {
  "input": "The group after that starts with an odd parity, so again you should have set its parity bit to 1.",
  "translatedText": "Следующая группа начинается с нечетной четности, поэтому вам снова следует установить ее бит четности на 1.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1039.16,
  "end": 1044.24
 },
 {
  "input": "And the final group also has an odd parity, meaning we set that bit in position 8 to be a 1.",
  "translatedText": "И последняя группа также имеет нечетную четность, то есть мы устанавливаем этот бит в позиции 8 равным 1.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1044.78,
  "end": 1050.06
 },
 {
  "input": "And then as the final step, the full block now has an even parity, meaning you can set that bit number 0, the overarching parity bit, to be 0.",
  "translatedText": "И затем, в качестве последнего шага, полный блок теперь имеет четность, что означает, что вы можете установить этот бит с номером 0, общий бит четности, равным 0.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1051.3,
  "end": 1060.32
 },
 {
  "input": "So as this block is sent off, the parity of the four special subsets and the block as a whole will all be even, or 0.",
  "translatedText": "Таким образом, при отправке этого блока четность четырех специальных подмножеств и блока в целом будет четной или равной 0.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1061.34,
  "end": 1068.14
 },
 {
  "input": "As the second part of the exercise, let's have you play the role of the receiver.",
  "translatedText": "Во второй части упражнения давайте попросим вас сыграть роль получателя.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1068.82,
  "end": 1072.18
 },
 {
  "input": "Of course, that would mean you don't already know what this message is, maybe some of you memorized it, but let's assume that you haven't.",
  "translatedText": "Конечно, это будет означать, что вы еще не знаете, что это за сообщение, возможно, некоторые из вас его запомнили, но давайте предположим, что вы этого не сделали.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1073.48,
  "end": 1079.78
 },
 {
  "input": "What I'm going to do is change either 0, 1, or 2 of the bits in that block, and then ask you to figure out what it is that I did.",
  "translatedText": "Что я собираюсь сделать, так это изменить 0, 1 или 2 бита в этом блоке, а затем попросить вас выяснить, что именно я сделал.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1080.02,
  "end": 1087.74
 },
 {
  "input": "So again, pause and try working it out.",
  "translatedText": "Итак, еще раз сделайте паузу и попробуйте разобраться.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1088.26,
  "end": 1090.81
 },
 {
  "input": "Okay, so you as the receiver now check the first parity group and you can see that it's even, so any error that exists would have to be in an even column.",
  "translatedText": "Хорошо, теперь вы, как получатель, проверяете первую группу четности и видите, что она четная, поэтому любая существующая ошибка должна быть в четном столбце.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1098.79,
  "end": 1107.91
 },
 {
  "input": "The next check gives us an odd number, telling us both that there's at least one error, and narrowing us down into this specific column.",
  "translatedText": "Следующая проверка дает нам нечетное число, сообщающее нам обоим, что есть по крайней мере одна ошибка, и сужающее нас до этого конкретного столбца.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1109.69,
  "end": 1117.03
 },
 {
  "input": "The third check is even, chopping down the possibilities even further.",
  "translatedText": "Третья проверка четная, еще больше сокращая возможности.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1118.55,
  "end": 1121.79
 },
 {
  "input": "And the last parity check is odd, telling us there's an error somewhere in the bottom, which by now we can see must be in position number 10.",
  "translatedText": "И последняя проверка четности является нечетной и говорит нам, что где-то внизу есть ошибка, которая, как мы теперь видим, должна быть на позиции номер 10.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1122.65,
  "end": 1129.65
 },
 {
  "input": "What's more, the parity of the whole block is odd, giving us confidence that there was one flip and not two.",
  "translatedText": "Более того, четность всего блока нечетная, что дает нам уверенность в том, что был один флип, а не два.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1131.49,
  "end": 1137.53
 },
 {
  "input": "If it's three or more, all bets are off.",
  "translatedText": "Если их три или больше, все ставки аннулируются.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1138.07,
  "end": 1139.97
 },
 {
  "input": "After correcting that bit number 10, pulling out the 11 bits that were not used for correction gives us the relevant segment of the original message, which if you rewind and compare is indeed exactly what we started the example with.",
  "translatedText": "После исправления этого бита номер 10 извлечение 11 бит, которые не использовались для исправления, дает нам соответствующий сегмент исходного сообщения, который, если перемотать назад и сравнить, действительно является именно тем, с чего мы начали пример.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1141.31,
  "end": 1154.39
 },
 {
  "input": "And now that you know how to do all this by hand, I'd like to show you how you can carry out the core part of all of this logic with a single line of Python code.",
  "translatedText": "И теперь, когда вы знаете, как делать все это вручную, я хотел бы показать вам, как можно реализовать основную часть всей этой логики с помощью одной строки кода Python.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1155.71,
  "end": 1163.17
 },
 {
  "input": "You see, what I haven't told you yet is just how elegant this algorithm really is, how simple it is to get a machine to point to the position of an error, how to systematically scale it, and how we can frame all of this as one single operation rather than multiple separate parity checks.",
  "translatedText": "Видите ли, я еще не рассказал вам, насколько на самом деле элегантен этот алгоритм, насколько просто заставить машину указывать на положение ошибки, как ее систематически масштабировать и как мы можем сформулировать все это как одна операция, а не несколько отдельных проверок четности.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1163.87,
  "end": 1178.75
 },
 {
  "input": "To see what I mean, come join me in part 2.",
  "translatedText": "Чтобы понять, что я имею в виду, присоединяйтесь ко мне во второй части.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1179.43,
  "end": 1181.31
 }
]