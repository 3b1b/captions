1
00:00:03,620 --> 00:00:10,100
האם אי פעם תהיתם איך אפשר לגרד תקליטור או DVD ועדיין להשמיע את כל מה שהוא מאחסן?

2
00:00:10,900 --> 00:00:17,144
השריטה באמת משפיעה על ה-1 וה-0 בדיסק, אז הוא קורא נתונים שונים ממה שנשמר, 

3
00:00:17,144 --> 00:00:23,980
אבל אלא אם כן הוא ממש שרוט, הביטים שהוא קורא מפוענחים בדיוק לאותו קובץ שקודד בו, 

4
00:00:23,980 --> 00:00:27,440
עותק ביט אחר סיבי, למרות כל השגיאות הללו.

5
00:00:27,440 --> 00:00:31,979
יש ערימה שלמה של פיקחות מתמטית שמאפשרת לנו לאחסן נתונים, 

6
00:00:31,979 --> 00:00:36,200
ולא פחות חשוב להעביר נתונים, בצורה עמידה בפני שגיאות.

7
00:00:36,200 --> 00:00:40,880
ובכן, בסדר, למעשה לא צריך כל כך הרבה פיקחות כדי למצוא דרך לעשות את זה.

8
00:00:40,880 --> 00:00:45,542
כל קובץ, בין אם זה וידאו או צליל או טקסט, קוד כלשהו, 

9
00:00:45,542 --> 00:00:50,380
תמונה, מה שלא יהיה, הוא בסופו של דבר איזה רצף של 1 ו-0.

10
00:00:50,680 --> 00:00:56,000
ואסטרטגיה פשוטה לתיקון כל סיביות שמתהפכת תהיה לאחסן שלושה עותקים של כל סיביות.

11
00:00:57,580 --> 00:01:00,869
לאחר מכן, המכונה שקוראת את הקובץ הזה תוכל להשוות את שלושת העותקים 

12
00:01:00,869 --> 00:01:04,060
האלה ותמיד לקחת את ה-2 הטובים ביותר מתוך 3 בכל פעם שיש אי התאמה.

13
00:01:07,160 --> 00:01:10,860
אבל המשמעות היא שימוש בשני שלישים מהשטח שלך לעודפות.

14
00:01:11,480 --> 00:01:17,240
וגם אז, למרות כל השטח שמוותר עליו, אין ערובה חזקה לגבי מה יקרה אם יותר מסיבית אחת תתהפך.

15
00:01:17,980 --> 00:01:20,822
השאלה המעניינת הרבה יותר היא איך לעשות את זה כך 

16
00:01:20,822 --> 00:01:24,020
שניתן יהיה לתקן שגיאות תוך ויתור על שטח קטן ככל האפשר.

17
00:01:24,520 --> 00:01:29,116
לדוגמה, באמצעות השיטה שתלמד על הסרטון הזה, תוכל לאחסן את הנתונים 

18
00:01:29,116 --> 00:01:33,360
שלך בבלוקים של 256 סיביות, כאשר כל בלוק משתמש ב-9 סיביות, 9!

19
00:01:33,760 --> 00:01:40,300
לפעול כסוג של יתירות, ושאר 247 הסיביות חופשיות לשאת כל מסר או נתונים משמעותיים שתרצו.

20
00:01:40,900 --> 00:01:47,042
וזה עדיין יהיה כך שאם ביט כלשהו יתהפך כאן, רק על ידי הסתכלות על הבלוק הזה ותו לא, 

21
00:01:47,042 --> 00:01:52,660
מכונה תוכל לזהות שהייתה שגיאה ובדיוק היכן היא הייתה כדי שהיא תדע לתקן אותה.

22
00:01:52,660 --> 00:01:54,620
ובכנות, זה מרגיש כמו קסם.

23
00:01:55,440 --> 00:02:00,795
ולסכמה הספציפית הזו, אם שני ביטים יתהפכו, המכונה לפחות תוכל לזהות שהיו שתי שגיאות, 

24
00:02:00,795 --> 00:02:02,860
אם כי היא לא תדע כיצד לתקן אותן.

25
00:02:03,520 --> 00:02:06,900
נדבר קצת מאוחר יותר על איך זה קנה מידה עבור בלוקים בגדלים שונים.

26
00:02:07,860 --> 00:02:12,900
שיטות המאפשרות לך לתקן שגיאות כמו זו ידועות, באופן סביר, בתור קודי תיקון שגיאות.

27
00:02:13,660 --> 00:02:17,631
בחלקה הטוב יותר של המאה הקודמת, תחום זה היה מקור עשיר באמת 

28
00:02:17,631 --> 00:02:21,940
למתמטיקה עמוקה להפתיע שמשולבת במכשירים שאנו משתמשים בהם מדי יום.

29
00:02:22,840 --> 00:02:28,660
המטרה כאן היא לתת לך הבנה מעמיקה מאוד של אחת הדוגמאות המוקדמות ביותר, המכונה קוד Hamming.

30
00:02:29,520 --> 00:02:35,126
ודרך אגב, איך שאני חושב על המבנה של הסרטון הזה הוא פחות עניין של הסבר ישיר ככל האפשר, 

31
00:02:35,126 --> 00:02:39,820
ויותר עניין של לדרבן אותך להמציא את זה לעצמך, עם קצת הדרכה עדינה פה ושם.

32
00:02:40,120 --> 00:02:43,809
אז כשאתה מרגיש שאתה רואה לאן זה הולך בשלב מסוים, קח את הרגע הזה לעצור, 

33
00:02:43,809 --> 00:02:46,720
חזה באופן פעיל מה התוכנית עומדת להיות לפני שאני אומר לך.

34
00:02:47,240 --> 00:02:50,713
כמו כן, אם אתה רוצה שההבנה שלך תרד לרמת החומרה, 

35
00:02:50,713 --> 00:02:57,154
בן איטר הכין סרטון יחד עם הסרטון הזה שמראה לך איך ליישם בפועל קודי Hamming על לוחות לחם, 

36
00:02:57,154 --> 00:02:58,240
וזה מספק ביותר.

37
00:02:59,300 --> 00:03:03,728
אתה צריך לדעת, קודי Hamming לא נמצאים בשימוש נרחב כמו קודים מודרניים יותר, 

38
00:03:03,728 --> 00:03:08,275
כמו אלגוריתם ריד-סולומון, אבל יש קסם מסוים בניגוד בין כמה בלתי אפשרית המשימה 

39
00:03:08,275 --> 00:03:13,000
הזו מרגישה בהתחלה, לבין כמה סבירה לחלוטין היא נראית פעם אחת. אתה לומד על האמינג.

40
00:03:13,720 --> 00:03:19,131
העיקרון הבסיסי של תיקון שגיאות הוא שבמרחב עצום של כל ההודעות האפשריות, 

41
00:03:19,131 --> 00:03:22,180
רק תת-קבוצה מסוימת תיחשב להודעות חוקיות.

42
00:03:22,800 --> 00:03:26,940
כאנלוגיה, חשבו על מילים מאויתות נכון לעומת מילים מאויתות לא נכון.

43
00:03:28,900 --> 00:03:34,976
בכל פעם שהודעה חוקית משתנה, המקלט אחראי לתקן את מה שהם רואים בחזרה לשכן התקף הקרוב ביותר, 

44
00:03:34,976 --> 00:03:37,340
כפי שאתה עשוי לעשות עם שגיאת הקלדה.

45
00:03:38,220 --> 00:03:44,060
עם זאת, להמציא אלגוריתם קונקרטי לסיווג יעיל של הודעות כמו זה, נדרשת פיקחות מסוימת.

46
00:03:46,780 --> 00:03:51,674
הסיפור מתחיל בשנות ה-40, כאשר ריצ'רד האמינג צעיר עבד במעבדות בל, 

47
00:03:51,674 --> 00:03:57,420
וחלק מעבודתו כללו שימוש במחשב כרטיס ניקוב יקר מאוד שהייתה לו רק גישה מוגבלת אליו.

48
00:03:57,800 --> 00:04:02,400
והתוכניות שהוא המשיך להעביר את זה לא הפסיקו להיכשל, כי מדי פעם קצת יקראו לא נכון.

49
00:04:03,120 --> 00:04:08,420
התסכול בהיותו כור ההמצאה, כל כך נמאס לו שהוא המציא את קוד תיקון השגיאות הראשון בעולם.

50
00:04:09,060 --> 00:04:12,419
ישנן דרכים רבות ושונות למסגר קודי האמינג, אבל כדרך ראשונה, 

51
00:04:12,419 --> 00:04:15,380
אנחנו הולכים לעבור את זה כמו שהאמינג עצמו חשב עליהם.

52
00:04:16,519 --> 00:04:20,940
בואו נשתמש בדוגמה פשוטה, אבל לא פשוטה מדי, בלוק של 16 סיביות.

53
00:04:21,820 --> 00:04:24,740
נמספר את המיקומים של סיביות אלה מ-0 עד 15.

54
00:04:25,620 --> 00:04:30,004
הנתונים האמיתיים שאנו רוצים לאחסן יהוו רק 12 מהסיביות הללו, 

55
00:04:30,004 --> 00:04:33,000
בעוד ש-4 מהמיקומים שמורים כסוג של יתירות.

56
00:04:33,900 --> 00:04:36,366
המילה מיותר כאן לא אומרת פשוט העתקה, אחרי הכל, 

57
00:04:36,366 --> 00:04:40,040
4 הביטים האלה לא נותנים לנו מספיק מקום להעתיק את הנתונים בצורה עיוורת.

58
00:04:40,720 --> 00:04:44,756
במקום זאת, הם יצטרכו להיות סוג הרבה יותר ניואנס וחכם של יתירות, 

59
00:04:44,756 --> 00:04:47,280
לא להוסיף שום מידע חדש, אלא להוסיף חוסן.

60
00:04:48,600 --> 00:04:54,205
אולי אתה מצפה שארבעת החלקים המיוחדים האלה יבואו ארוזים יפה ביחד, אולי בסוף או משהו כזה, 

61
00:04:54,205 --> 00:04:59,620
אבל כפי שתראה, כשהם יושבים בעמדות שהן עוצמה של 2 מאפשר משהו שהוא באמת אלגנטי עד הסוף.

62
00:05:00,200 --> 00:05:03,540
זה גם עשוי לתת לך רמז קטן לגבי איך זה מתאים לבלוקים גדולים יותר.

63
00:05:04,900 --> 00:05:08,615
גם מבחינה טכנית זה בסופו של דבר רק 11 סיביות של נתונים, 

64
00:05:08,615 --> 00:05:13,260
תגלה שיש ניואנס מתון למה שמתרחש בעמדה 0, אבל אל תדאג בקשר לזה לעת עתה.

65
00:05:14,140 --> 00:05:18,025
כמו כל אלגוריתם לתיקון שגיאות, זה יכלול שני שחקנים, 

66
00:05:18,025 --> 00:05:23,630
שולח שאחראי על הגדרת 4 הביטים המיוחדים הללו, ומקלט שאחראי על ביצוע איזושהי 

67
00:05:23,630 --> 00:05:25,200
בדיקה ותיקון השגיאות.

68
00:05:25,200 --> 00:05:30,583
כמובן, המילים שולח ומקבל באמת מתייחסות למכונות או תוכנות שעושות את כל הבדיקות, 

69
00:05:30,583 --> 00:05:34,740
והרעיון של הודעה נועד בצורה רחבה מאוד, לכלול דברים כמו אחסון.

70
00:05:35,340 --> 00:05:41,680
אחרי הכל, אחסון נתונים הוא אותו דבר כמו שליחת מסר רק מהעבר לעתיד במקום ממקום אחד לאחר.

71
00:05:42,560 --> 00:05:46,928
אז זה ההגדרה, אבל לפני שנוכל לצלול פנימה אנחנו צריכים לדבר על 

72
00:05:46,928 --> 00:05:50,381
רעיון קשור שהיה טרי בראשו של האמינג בזמן גילויו, 

73
00:05:50,381 --> 00:05:56,300
שיטה המאפשרת לך לזהות שגיאות סיביות בודדות, אך לא לתקן אותן, ידועה בעסק כמחאה זוגית.

74
00:05:56,880 --> 00:06:03,820
לבדיקת זוגיות, אנו מפרידים רק ביט בודד אחד שהשולח אחראי לכוונון, והשאר חופשיים לשאת הודעה.

75
00:06:04,880 --> 00:06:11,280
התפקיד היחיד של הביט המיוחד הזה הוא לוודא שהמספר הכולל של 1s בהודעה הוא מספר זוגי.

76
00:06:12,080 --> 00:06:15,087
אז לדוגמא כרגע, המספר הכולל של 1s הוא 7, זה מוזר, 

77
00:06:15,087 --> 00:06:19,960
אז השולח צריך להפוך את הסיביות המיוחדת הזו כדי להיות 1, מה שהופך את הספירה לשקול.

78
00:06:20,800 --> 00:06:26,420
אבל אם הבלוק כבר התחיל עם מספר זוגי של 1, אז הביט המיוחד הזה היה נשמר ב-0.

79
00:06:27,340 --> 00:06:32,016
זה די פשוט, פשוט מטעה, אבל זו דרך אלגנטית להפליא לזקק 

80
00:06:32,016 --> 00:06:36,780
את הרעיון של שינוי בכל מקום במסר שישתקף בפיסת מידע אחת.

81
00:06:37,500 --> 00:06:42,337
שימו לב שאם חלק כלשהו מההודעה הזו מתהפך, מ-0 ל-1 או מ-1 ל-0, 

82
00:06:42,337 --> 00:06:46,540
זה משנה את הספירה הכוללת של 1 שניות מזוגיות לא-זוגית.

83
00:06:47,980 --> 00:06:52,242
אז אם אתה המקלט, אתה מסתכל על ההודעה הזו, ותראה מספר אי זוגי של 1, 

84
00:06:52,242 --> 00:06:57,460
אתה יכול לדעת בוודאות שהתרחשה שגיאה כלשהי, למרות שאולי אין לך מושג היכן היא הייתה.

85
00:06:58,500 --> 00:07:03,340
בז'רגון, האם לקבוצת ביטים יש מספר זוגי או אי-זוגי של 1, ידוע בתור הזוגיות שלה.

86
00:07:04,860 --> 00:07:07,541
אתה יכול גם להשתמש במספרים ולומר שהשוויון הוא 0 או 1, 

87
00:07:07,541 --> 00:07:10,720
וזה בדרך כלל מועיל יותר ברגע שאתה מתחיל לעשות מתמטיקה עם הרעיון.

88
00:07:11,220 --> 00:07:15,520
והביט המיוחד הזה שהשולח משתמש בו כדי לשלוט בזוגיות נקרא סיבית הזוגיות.

89
00:07:17,560 --> 00:07:21,271
ולמעשה, עלינו להיות ברורים, אם המקלט רואה זוגיות אי זוגית, 

90
00:07:21,271 --> 00:07:25,234
זה לא בהכרח אומר שהייתה רק שגיאה אחת, אולי היו 3 שגיאות, או 5, 

91
00:07:25,234 --> 00:07:29,260
או כל מספר אי זוגי אחר, אבל הם יכולים לדעת בוודאות שזה לא היה 0.

92
00:07:29,980 --> 00:07:33,913
מצד שני, אם היו 2 שגיאות, או כל מספר זוגי של שגיאות, 

93
00:07:33,913 --> 00:07:39,850
הספירה הסופית של 1s עדיין תהיה זוגית, כך שהמקבל לא יכול להיות בטוח שספירה זוגית 

94
00:07:39,850 --> 00:07:42,300
אומרת בהכרח שההודעה נטולת שגיאות.

95
00:07:42,840 --> 00:07:47,885
אתה עלול להתלונן שהודעה שמתבלבלת רק על ידי סיבובים של 2 סיביות היא די חלשה, 

96
00:07:47,885 --> 00:07:49,080
ואתה צודק לחלוטין.

97
00:07:49,700 --> 00:07:54,220
זכור, עם זאת, אין שיטה לזיהוי או תיקון שגיאות שיכולה לתת 

98
00:07:54,220 --> 00:07:58,900
לך 100% ביטחון שההודעה שאתה מקבל היא זו שהשולח התכוון אליה.

99
00:07:59,580 --> 00:08:05,440
אחרי הכל, מספיק רעש אקראי תמיד יכול לשנות הודעה חוקית אחת להודעה חוקית אחרת רק במקרה.

100
00:08:06,240 --> 00:08:11,952
במקום זאת, המטרה היא להמציא סכמה שתהיה חזקה עד למספר מרבי מסוים של שגיאות, 

101
00:08:11,952 --> 00:08:15,380
או אולי להפחית את ההסתברות לחיוב שגוי כמו זה.

102
00:08:16,260 --> 00:08:21,778
בדיקות זוגיות כשלעצמן הן די חלשות, אבל על ידי זיקוק רעיון השינוי על פני מסר מלא 

103
00:08:21,778 --> 00:08:27,160
עד לחלק אחד, מה שהם נותנים לנו הוא אבן בניין רבת עוצמה לתוכניות מתוחכמות יותר.

104
00:08:27,940 --> 00:08:32,924
לדוגמה, מכיוון שהאמינג חיפש דרך לזהות היכן קרתה שגיאה, לא רק שהיא קרתה, 

105
00:08:32,924 --> 00:08:37,632
התובנה העיקרית שלו הייתה שאם תחיל בדיקות זוגיות לא על ההודעה המלאה, 

106
00:08:37,632 --> 00:08:43,516
אלא על תת-קבוצות מסוימות שנבחרו בקפידה, תוכל לשאול סדרה מעודנת יותר של שאלות המציינת 

107
00:08:43,516 --> 00:08:45,940
את המיקום של כל שגיאת סיביות בודדת.

108
00:08:46,680 --> 00:08:49,840
התחושה הכללית היא קצת כמו לשחק במשחק של 20 שאלות, 

109
00:08:49,840 --> 00:08:53,380
לשאול שאילתות כן או לא שחותכות את מרחב האפשרויות לשניים.

110
00:08:54,160 --> 00:08:59,380
לדוגמה, נניח שאנו עושים בדיקת זוגיות רק על 8 הסיביות הללו, כל המיקומים האי-זוגיים.

111
00:09:00,100 --> 00:09:06,168
לאחר מכן, אם מזוהה שגיאה, זה נותן למקלט קצת יותר מידע על היכן בדיוק נמצאת השגיאה, 

112
00:09:06,168 --> 00:09:08,240
כלומר שהוא נמצא במיקום מוזר.

113
00:09:08,940 --> 00:09:13,493
אם לא מזוהה שגיאה בין 8 הסיביות האלה, זה אומר שאין שגיאה בכלל, 

114
00:09:13,493 --> 00:09:16,240
או שהיא יושבת איפשהו במיקומים הזוגיים.

115
00:09:17,180 --> 00:09:21,655
אולי תחשוב שהגבלת בדיקת זוגיות לחצי מהביטים הופכת אותו לפחות יעיל, 

116
00:09:21,655 --> 00:09:27,200
אבל כשהיא נעשית בשילוב עם בדיקות אחרות שנבחרו היטב, זה נותן לנו משהו הרבה יותר חזק.

117
00:09:29,240 --> 00:09:33,057
כדי להגדיר בפועל את בדיקת הזוגיות הזו, זכור, זה מצריך ייעוד 

118
00:09:33,057 --> 00:09:36,620
של חלק מיוחד שיש לו שליטה על הזוגיות של אותה קבוצה מלאה.

119
00:09:37,480 --> 00:09:39,180
כאן בואו פשוט נבחר בעמדה 1.

120
00:09:39,720 --> 00:09:43,592
עבור הדוגמה המוצגת, השוויון של 8 הסיביות הללו הוא אי-זוגי כרגע, 

121
00:09:43,592 --> 00:09:46,980
כך שהשולח אחראי על החלפת סיביות השוויון, ועכשיו זה זוגי.

122
00:09:47,940 --> 00:09:50,680
זה רק 1 מתוך 4 בדיקות זוגיות שנבצע.

123
00:09:50,920 --> 00:09:56,300
הסימון השני הוא בין 8 הביטים בחצי הימני של הרשת, לפחות כפי שציירנו אותו כאן.

124
00:09:56,680 --> 00:10:02,345
הפעם אנו עשויים להשתמש במיקום 2 כסיביות זוגיות, כך של-8 הסיביות הללו כבר יש זוגיות זוגית, 

125
00:10:02,345 --> 00:10:06,060
והשולח יכול להרגיש טוב ולהשאיר את הסיביות מספר 2 ללא שינוי.

126
00:10:07,020 --> 00:10:11,714
ואז בצד השני, אם המקלט יבדוק את השוויון של הקבוצה הזו והם יגלו שזה מוזר, 

127
00:10:11,714 --> 00:10:15,380
הם יידעו שהשגיאה נמצאת איפשהו בין 8 הביטים האלה בצד ימין.

128
00:10:15,820 --> 00:10:20,580
אחרת זה אומר שאין שגיאה, או שהשגיאה נמצאת איפשהו בחצי השמאלי.

129
00:10:21,120 --> 00:10:23,676
או שאני מניח שיכולות להיות שתי שגיאות, אבל כרגע 

130
00:10:23,676 --> 00:10:26,500
אנחנו הולכים להניח שיש לכל היותר שגיאה אחת בכל הבלוק.

131
00:10:26,940 --> 00:10:28,740
דברים מתקלקלים לגמרי ליותר מזה.

132
00:10:29,160 --> 00:10:32,252
כאן, לפני שנסתכל על שני הבדיקות הבאות, קחו רגע לחשוב מה השניים 

133
00:10:32,252 --> 00:10:35,100
הראשונים הללו מאפשרים לנו לעשות כאשר אתם מחשיבים אותם יחד.

134
00:10:35,800 --> 00:10:39,660
נניח שאתה מזהה שגיאה בין העמודות האי זוגיות, ובמחצית הימנית.

135
00:10:40,200 --> 00:10:43,040
זה בהכרח אומר שהשגיאה נמצאת איפשהו בעמודה האחרונה.

136
00:10:43,820 --> 00:10:47,336
אם לא הייתה שגיאה בעמודה האי זוגית אבל הייתה אחת בחצי הימני, 

137
00:10:47,336 --> 00:10:49,700
זה אומר לך שהיא בעמודה השנייה עד האחרונה.

138
00:10:50,440 --> 00:10:54,256
כמו כן, אם יש שגיאה בעמודות האי זוגיות אבל לא בחצי הימני, 

139
00:10:54,256 --> 00:10:56,560
אתה יודע שהיא איפשהו בעמודה השנייה.

140
00:10:56,560 --> 00:10:59,437
ואם אף אחת משתי בדיקות הזוגיות האלה לא מזהה משהו, 

141
00:10:59,437 --> 00:11:03,120
זה אומר שהמקום היחיד שיכול להיות שגיאה הוא בעמודה השמאלית ביותר.

142
00:11:03,340 --> 00:11:06,120
אבל זה יכול גם פשוט אומר שאין שגיאה בכלל.

143
00:11:06,300 --> 00:11:10,840
וזו דרך די מטופשת לומר ששתי בדיקות זוגיות מאפשרות לנו להצמיד את העמודה.

144
00:11:11,480 --> 00:11:13,640
מכאן, אתם בוודאי יכולים לנחש מה בהמשך.

145
00:11:13,800 --> 00:11:16,140
אנחנו עושים את אותו הדבר חוץ מהשורות.

146
00:11:16,440 --> 00:11:20,900
תהיה בדיקת זוגיות בשורות האי זוגיות, תוך שימוש במיקום 4 בתור סיביות זוגיות.

147
00:11:21,380 --> 00:11:25,820
אז בדוגמה הזו לקבוצה כבר יש זוגיות זוגית, אז ביט 4 יוגדר ל-0.

148
00:11:26,560 --> 00:11:31,580
ולבסוף יש בדיקת זוגיות בשתי השורות התחתונות, תוך שימוש במיקום 8 בתור סיביות זוגיות.

149
00:11:32,120 --> 00:11:36,820
במקרה זה, נראה שהשולח צריך להפעיל את ה-bit 8 הזה כדי לתת לקבוצה זוגיות שווה.

150
00:11:37,700 --> 00:11:40,105
בדיוק כפי ששני הסימון הראשונים מאפשרים לנו להצמיד את העמודה, 

151
00:11:40,105 --> 00:11:41,840
שני הסימון הבאים מאפשרים לך להצמיד את השורה.

152
00:11:42,880 --> 00:11:47,540
כדוגמה, דמיינו שבמהלך השידור יש שגיאה, למשל, בעמדה 3.

153
00:11:48,180 --> 00:11:52,822
ובכן זה משפיע על קבוצת השוויון הראשונה, וזה משפיע גם על קבוצת השוויון השנייה, 

154
00:11:52,822 --> 00:11:55,560
כך שהמקלט יודע שיש שגיאה איפשהו בעמודה הימנית.

155
00:11:56,100 --> 00:12:00,540
אבל זה לא משפיע על הקבוצה השלישית, וזה לא משפיע על הקבוצה הרביעית.

156
00:12:01,240 --> 00:12:04,348
וזה מאפשר למקלט לאתר את השגיאה עד לשורה הראשונה, 

157
00:12:04,348 --> 00:12:07,520
שמשמעותה בהכרח מיקום 3, כדי שיוכלו לתקן את השגיאה.

158
00:12:08,580 --> 00:12:12,942
אולי תיהנו להקדיש רגע לשכנע את עצמכם שהתשובות לארבע השאלות הללו 

159
00:12:12,942 --> 00:12:17,100
באמת תמיד יאפשרו לכם לקבוע מיקום ספציפי, לא משנה היכן יתבררו.

160
00:12:17,720 --> 00:12:23,060
למעשה, הנבון שביניכם עשוי אפילו להבחין בקשר בין השאלות הללו לבין ספירה בינארית.

161
00:12:23,500 --> 00:12:28,920
ואם כן, שוב הרשו לי להדגיש, לעצור, לנסות בעצמכם לצייר את הקשר לפני שאקלקל אותו.

162
00:12:30,500 --> 00:12:36,060
אם אתה תוהה מה קורה אם סיבית זוגיות עצמה מושפעת, ובכן, אתה יכול פשוט לנסות את זה.

163
00:12:36,440 --> 00:12:42,245
קחו רגע לחשוב כיצד כל שגיאה בין ארבעת הסיביות המיוחדות הללו תתחקה בדיוק כמו כל אחר, 

164
00:12:42,245 --> 00:12:44,180
עם אותה קבוצה של ארבע שאלות.

165
00:12:47,060 --> 00:12:51,336
זה לא באמת משנה, מכיוון שבסופו של יום מה שאנחנו רוצים זה להגן על סיביות ההודעה, 

166
00:12:51,336 --> 00:12:53,100
סיביות תיקון השגיאות פשוט רוכבות.

167
00:12:53,600 --> 00:12:57,820
אבל הגנה גם על החלקים האלה היא משהו שנופל באופן טבעי מהתוכנית כתוצר לוואי.

168
00:12:59,200 --> 00:13:01,760
אולי תיהנו גם לצפות כיצד זה מתרחב.

169
00:13:02,300 --> 00:13:07,056
אם השתמשנו בבלוק בגודל 256 סיביות, למשל, כדי להצמיד מיקום, 

170
00:13:07,056 --> 00:13:12,780
אתה צריך רק שמונה שאלות כן או לא כדי לחפש בינארי בדרך למטה למקום מסוים.

171
00:13:15,640 --> 00:13:20,500
וזכור, כל שאלה דורשת לוותר על ביט בודד בלבד כדי לקבוע את בדיקת השוויון המתאימה.

172
00:13:23,160 --> 00:13:26,147
חלק מכם אולי כבר רואים את זה, אבל נדבר מאוחר יותר על 

173
00:13:26,147 --> 00:13:29,360
הדרך השיטתית למצוא מהן השאלות הללו תוך דקה או שתיים בלבד.

174
00:13:29,880 --> 00:13:33,260
אני מקווה שהסקיצה הזו מספיקה כדי להעריך את היעילות של מה שאנחנו מפתחים כאן.

175
00:13:33,260 --> 00:13:39,374
הדבר הראשון, למעט שמונה סיביות זוגיות מודגשת, יכול להיות מה שאתה רוצה שזה יהיה, 

176
00:13:39,374 --> 00:13:41,820
לשאת כל מסר או נתונים שאתה רוצה.

177
00:13:41,820 --> 00:13:46,230
8 הביטים מיותרים במובן זה שהם נקבעים לחלוטין על ידי שאר ההודעה, 

178
00:13:46,230 --> 00:13:50,020
אבל זה בצורה הרבה יותר חכמה מאשר להעתיק את ההודעה כולה.

179
00:13:53,600 --> 00:13:58,380
ועדיין, עבור כל כך מעט ויתור, תוכל לזהות ולתקן כל שגיאת סיביות בודדת.

180
00:13:59,200 --> 00:14:00,400
ובכן, כמעט.

181
00:14:00,960 --> 00:14:06,237
אוקיי, אז הבעיה האחת כאן היא שאם אף אחת מארבעת בדיקות השוויון לא מזהה שגיאה, 

182
00:14:06,237 --> 00:14:10,966
כלומר שלתת-הקבוצות שנבחרו במיוחד של 8 סיביות יש לכולם זוגיות זוגיות, 

183
00:14:10,966 --> 00:14:16,860
בדיוק כמו שהשולח התכוון, אז זה אומר שלא הייתה שגיאה בכלל , או שהוא מצמצם אותנו למצב 0.

184
00:14:17,740 --> 00:14:24,142
אתה מבין, עם ארבע שאלות כן או לא, יש לנו 16 תוצאות אפשריות עבור בדיקות השוויון שלנו, 

185
00:14:24,142 --> 00:14:28,284
ובהתחלה זה מרגיש מושלם לאיתור 1 מתוך 16 מיקומים בבלוק, 

186
00:14:28,284 --> 00:14:31,900
אבל אתה צריך גם לתקשר תוצאה 17, ללא שגיאה מַצָב.

187
00:14:33,020 --> 00:14:37,300
הפתרון כאן הוא למעשה די פשוט, פשוט תשכחו לגמרי מהביט ה-0 הזה.

188
00:14:37,840 --> 00:14:41,813
אז כשאנחנו עושים את ארבעת בדיקות השוויון שלנו ואנו רואים שכולם שווים, 

189
00:14:41,813 --> 00:14:43,460
זה אומר חד משמעית שאין שגיאה.

190
00:14:44,240 --> 00:14:49,468
מה שזה אומר הוא במקום לעבוד עם בלוק של 16 סיביות, אנחנו עובדים עם בלוק של 15 סיביות, 

191
00:14:49,468 --> 00:14:53,220
שבו 11 מהסיביות חופשיות לשאת הודעה ו-4 מהן נמצאות לשם יתירות.

192
00:14:53,780 --> 00:15:00,200
ועם זה, יש לנו עכשיו את מה שאנשים בעסק יתייחסו אליו כקוד 15-11 Hamming.

193
00:15:00,460 --> 00:15:03,310
עם זאת, זה נחמד שיש גודל בלוק שהוא כוח נקי של 2, 

194
00:15:03,310 --> 00:15:08,140
ויש דרך חכמה שנוכל לשמור על הסיביות ה-0 הזו ולגרום לה לעשות קצת עבודה נוספת עבורנו.

195
00:15:08,700 --> 00:15:11,648
אם אנו משתמשים בו כסיביות זוגיות על פני כל הבלוק, 

196
00:15:11,648 --> 00:15:15,540
הוא מאפשר לנו לזהות, למרות שאיננו יכולים לתקן, שגיאות של 2 סיביות.

197
00:15:16,160 --> 00:15:16,820
ככה זה עובד.

198
00:15:17,180 --> 00:15:19,980
לאחר הגדרת ארבעת הביטים המיוחדים לתיקון שגיאות, 

199
00:15:19,980 --> 00:15:24,940
אנו מגדירים את ה-0 כך שהשוויון של הבלוק המלא יהיה זוגי, בדיוק כמו בדיקת זוגיות רגילה.

200
00:15:25,700 --> 00:15:29,945
עכשיו, אם יש שגיאת סיביות בודדת, אז השוויון של הבלוק המלא משתנה להיות אי-זוגי, 

201
00:15:29,945 --> 00:15:33,600
אבל היינו תופסים את זה בכל מקרה הודות לארבעת הבדיקות לתיקון השגיאות.

202
00:15:34,160 --> 00:15:38,641
עם זאת, אם יש שתי שגיאות, אז השוויון הכולל יחזור להיות זוגי, 

203
00:15:38,641 --> 00:15:45,180
אבל המקלט עדיין יראה שהייתה לפחות שגיאה כלשהי בגלל מה שקורה עם ארבעת בדיקות השוויון האלה.

204
00:15:45,180 --> 00:15:50,437
אז אם הם מבחינים בשוויון שווה בסך הכל, אבל משהו לא אפס קורה עם הבדיקות האחרות, 

205
00:15:50,437 --> 00:15:52,700
זה אומר להם שהיו לפחות שתי שגיאות.

206
00:15:53,520 --> 00:15:54,000
זה לא חכם?

207
00:15:54,300 --> 00:15:57,073
למרות שאיננו יכולים לתקן את השגיאות של 2 סיביות אלה, 

208
00:15:57,073 --> 00:16:01,260
רק על ידי החזרת הסיבית ה-0 הקטנה והמטרידה הזו לעבודה, היא מאפשרת לנו לזהות אותן.

209
00:16:02,260 --> 00:16:05,220
זה די סטנדרטי, זה ידוע בתור קוד Hamming מורחב.

210
00:16:06,540 --> 00:16:10,562
מבחינה טכנית, יש לך כעת תיאור מלא של מה שקוד Hamming עושה, 

211
00:16:10,562 --> 00:16:12,880
לפחות לדוגמא של בלוק של 16 סיביות.

212
00:16:12,880 --> 00:16:17,100
אבל אני חושב שתמצא את זה יותר מספק לבדוק את ההבנה שלך ולגבש הכל 

213
00:16:17,100 --> 00:16:21,320
עד לנקודה זו על ידי ביצוע דוגמה אחת מלאה מההתחלה ועד הסוף בעצמך.

214
00:16:22,080 --> 00:16:24,300
אבל אני אעבור איתך על זה כדי שתוכל לבדוק את עצמך.

215
00:16:25,120 --> 00:16:29,720
כדי להגדיר הודעה, בין אם זו הודעה מילולית שאתה מתרגם בחלל או נתונים 

216
00:16:29,720 --> 00:16:34,660
שאתה רוצה לאחסן לאורך זמן, הצעד הראשון הוא לחלק אותו לנתחים של 11 סיביות.

217
00:16:35,580 --> 00:16:39,760
כל נתח הולך להיות ארוז לתוך בלוק 16 סיביות עמיד בפני שגיאות.

218
00:16:39,760 --> 00:16:43,220
אז בואו ניקח את זה כדוגמה ולמעשה נסתדר.

219
00:16:43,740 --> 00:16:44,740
קדימה, באמת תעשה את זה!

220
00:16:44,740 --> 00:16:47,020
בואו נעצור וננסה להרכיב את הבלוק הזה.

221
00:16:52,720 --> 00:16:53,680
בסדר, אתה מוכן?

222
00:16:54,240 --> 00:16:58,850
זכור, מיקום 0 יחד עם שאר החזקות של 2 שמורות לחובה לתיקון שגיאות, 

223
00:16:58,850 --> 00:17:03,320
אז אתה מתחיל בהצבת סיביות ההודעה בכל הנקודות הנותרות, לפי הסדר.

224
00:17:05,339 --> 00:17:08,810
אתה צריך שתהיה לקבוצה הזו זוגיות זוגית, מה שהיא כבר עושה, 

225
00:17:08,810 --> 00:17:12,339
אז היית צריך להגדיר את סיביות הזוגיות הזו במיקום 1 להיות 0.

226
00:17:13,020 --> 00:17:17,880
הקבוצה הבאה מתחילה עם זוגיות אי זוגית, אז היית צריך להגדיר את סיביות הזוגיות שלה להיות 1.

227
00:17:19,160 --> 00:17:21,839
הקבוצה שאחריה מתחילה עם זוגיות אי זוגית, אז שוב 

228
00:17:21,839 --> 00:17:24,240
היית צריך להגדיר את סיביות הזוגיות שלה ל-1.

229
00:17:24,780 --> 00:17:30,060
ולקבוצה הסופית יש גם זוגיות אי זוגית, כלומר הגדרנו את הביט הזה במיקום 8 להיות 1.

230
00:17:31,300 --> 00:17:34,938
ואז כשלב הסופי, לבלוק המלא כעת יש זוגיות זוגית, 

231
00:17:34,938 --> 00:17:40,320
כלומר אתה יכול להגדיר את מספר הסיביות 0, סיבית הזוגיות הכוללת, להיות 0.

232
00:17:41,340 --> 00:17:45,069
אז כאשר הבלוק הזה נשלח, השוויון של ארבע תת-הקבוצות 

233
00:17:45,069 --> 00:17:48,140
המיוחדות ושל הבלוק בכללותו יהיה זוגי או 0.

234
00:17:48,820 --> 00:17:52,180
כחלק השני של התרגיל, בואו נגיד לכם לשחק את תפקיד המקלט.

235
00:17:53,480 --> 00:17:56,694
כמובן, זה אומר שאתם כבר לא יודעים מהי ההודעה הזו, 

236
00:17:56,694 --> 00:17:59,780
אולי חלקכם שיננו אותה בעל פה, אבל בואו נניח שלא.

237
00:18:00,020 --> 00:18:05,083
מה שאני הולך לעשות זה לשנות או 0, 1 או 2 מהסיביות בבלוק הזה, 

238
00:18:05,083 --> 00:18:07,740
ואז לבקש ממך להבין מה זה שעשיתי.

239
00:18:08,260 --> 00:18:10,810
אז שוב, עצור ונסה לפתור את זה.

240
00:18:18,790 --> 00:18:24,775
אוקיי, אז אתה כמקלט עכשיו בודק את קבוצת הזוגיות הראשונה ואתה יכול לראות שהיא זוגית, 

241
00:18:24,775 --> 00:18:27,910
אז כל שגיאה שקיימת תצטרך להיות בעמודה זוגית.

242
00:18:29,690 --> 00:18:34,607
הסימון הבא נותן לנו מספר אי-זוגי, אומר לשנינו שיש לפחות שגיאה אחת, 

243
00:18:34,607 --> 00:18:37,030
ומצמצם אותנו לעמודה הספציפית הזו.

244
00:18:38,550 --> 00:18:41,790
הבדיקה השלישית שווה, ומצמצמת את האפשרויות עוד יותר.

245
00:18:42,650 --> 00:18:46,394
ובדיקת השוויון האחרונה היא מוזרה, ואומרת לנו שיש שגיאה אי שם בתחתית, 

246
00:18:46,394 --> 00:18:49,650
שעד עכשיו אנחנו יכולים לראות שהיא חייבת להיות בעמדה מספר 10.

247
00:18:51,490 --> 00:18:57,530
מה גם שהשוויון של כל הבלוק מוזר, נותן לנו ביטחון שהיה הפוך אחד ולא שניים.

248
00:18:58,070 --> 00:18:59,970
אם זה שלושה או יותר, כל ההימורים מושבתים.

249
00:19:01,310 --> 00:19:07,588
לאחר תיקון אותו סיביות מספר 10, שליפת 11 הסיביות שלא שימשו לתיקון נותנת לנו את הקטע 

250
00:19:07,588 --> 00:19:13,866
הרלוונטי של ההודעה המקורית, שאם תגלגל אחורה ותשווה הוא אכן בדיוק מה שהתחלנו איתו את 

251
00:19:13,866 --> 00:19:14,390
הדוגמה.

252
00:19:15,710 --> 00:19:19,328
ועכשיו כשאתה יודע לעשות את כל זה ביד, אני רוצה להראות לך איך אתה 

253
00:19:19,328 --> 00:19:23,170
יכול לבצע את החלק המרכזי של כל ההיגיון הזה עם שורה אחת של קוד Python.

254
00:19:23,870 --> 00:19:28,438
אתה מבין, מה שעדיין לא סיפרתי לך זה עד כמה האלגוריתם הזה באמת אלגנטי, 

255
00:19:28,438 --> 00:19:31,636
כמה פשוט לגרום למכונה להצביע על המיקום של שגיאה, 

256
00:19:31,636 --> 00:19:36,726
איך לשנות אותה באופן שיטתי ואיך אנחנו יכולים למסגר את כל זאת כפעולה אחת בודדת 

257
00:19:36,726 --> 00:19:38,750
ולא כמספר בדיקות זוגיות נפרדות.

258
00:19:39,430 --> 00:19:41,310
כדי להבין למה אני מתכוון, בוא הצטרף אליי בחלק 2.

