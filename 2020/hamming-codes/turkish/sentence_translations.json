[
 {
  "input": "Have you ever wondered how it's possible to scratch a CD or a DVD and still have it play back whatever it's storing?",
  "translatedText": "Bir CD'yi veya DVD'yi çizerken, içinde sakladığı şeyi oynatmanın nasıl mümkün olduğunu hiç merak ettiniz mi?",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 3.62,
  "end": 10.1
 },
 {
  "input": "The scratch really does affect the 1s and 0s on the disk, so it reads off different data from what was stored, but unless it's really scratched up, the bits it reads off are decoded into precisely the same file that was encoded onto it, a bit for bit copy, despite all those errors.",
  "translatedText": "Çizik gerçekten diskteki 1'leri ve 0'ları etkiler, bu nedenle depolanan verilerden farklı verileri okur, ancak gerçekten çizilmediği sürece okuduğu bitlerin kodu, üzerine kodlanmış olanla tam olarak aynı dosyaya dönüştürülür. tüm bu hatalara rağmen bit bit kopya.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 10.9,
  "end": 27.44
 },
 {
  "input": "There is a whole pile of mathematical cleverness that allows us to store data, and just as importantly to transmit data, in a way that's resilient to errors.",
  "translatedText": "Verileri depolamamıza ve aynı derecede önemlisi, hatalara karşı dirençli bir şekilde veri iletmemize olanak tanıyan bir sürü matematiksel zeka var.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 27.44,
  "end": 36.66
 },
 {
  "input": "Well, okay, actually it doesn't take that much cleverness to come up with a way to do this.",
  "translatedText": "Tamam, aslında bunu yapmanın bir yolunu bulmak o kadar da zeki olmayı gerektirmiyor.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 37.52,
  "end": 41.6
 },
 {
  "input": "Any file, whether it's a video or sound or text, some code, an image, whatever, is ultimately some sequence of 1s and 0s.",
  "translatedText": "Herhangi bir dosya, ister video, ister ses, ister metin, ister bir kod, ister bir görüntü olsun, sonuçta 1'ler ve 0'lardan oluşan bir dizidir.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 42.06,
  "end": 50.38
 },
 {
  "input": "And a simple strategy to correct any bit that gets flipped would be to store three copies of each bit.",
  "translatedText": "Ve ters çevrilen herhangi bir biti düzeltmek için basit bir strateji, her bitin üç kopyasını saklamak olacaktır.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 50.68,
  "end": 56.0
 },
 {
  "input": "Then the machine reading this file could compare these three copies and always take the best 2 out of 3 whenever there's a discrepancy.",
  "translatedText": "Daha sonra bu dosyayı okuyan makine bu üç kopyayı karşılaştırabilir ve bir tutarsızlık olduğunda her zaman 3 üzerinden en iyi 2'yi alabilir.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 57.58,
  "end": 64.06
 },
 {
  "input": "But what that means is using two thirds of your space for redundancy.",
  "translatedText": "Ancak bunun anlamı, alanınızın üçte ikisini yedeklilik için kullanmaktır.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 67.16,
  "end": 70.86
 },
 {
  "input": "And even then, for all of that space given up, there's no strong guarantee about what happens if more than one bit gets flipped.",
  "translatedText": "Ve o zaman bile, kaybedilen tüm bu alana rağmen, birden fazla bitin ters çevrilmesi durumunda ne olacağına dair güçlü bir garanti yoktur.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 71.48,
  "end": 77.24
 },
 {
  "input": "The much more interesting question is how to make it so that errors can be corrected while giving up as little space as possible.",
  "translatedText": "Çok daha ilginç olan soru, mümkün olduğunca az yer kaplarken hataların düzeltilebilmesi için bunun nasıl yapılacağıdır.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 77.98,
  "end": 84.02
 },
 {
  "input": "For example, using the method you'll learn about this video, you could store your data in 256-bit blocks, where each block uses 9 bits, 9!",
  "translatedText": "Örneğin, bu videoda öğreneceğiniz yöntemi kullanarak verilerinizi 256 bitlik bloklarda saklayabilirsiniz; burada her blok 9 bit, 9!",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 84.52,
  "end": 93.36
 },
 {
  "input": "to act as a kind of redundancy, and the other 247 bits are free to carry whatever meaningful message or data you want.",
  "translatedText": "bir tür artıklık görevi görür ve diğer 247 bit, istediğiniz anlamlı mesajı veya veriyi taşımakta özgürdür.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 93.76,
  "end": 100.3
 },
 {
  "input": "And it will still be the case that if any bit gets flipped here, just by looking at this block and nothing more, a machine will be able to identify that there was an error and precisely where it was so that it knows how to correct it.",
  "translatedText": "Ve yine de burada herhangi bir bit ters çevrilirse, sadece bu bloğa bakarak ve başka hiçbir şeye bakmadan, bir makine bir hata olduğunu ve tam olarak nerede olduğunu tespit edebilecek ve böylece onu nasıl düzelteceğini bilebilecektir.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 100.9,
  "end": 112.66
 },
 {
  "input": "And honestly, that feels like magic.",
  "translatedText": "Ve dürüst olmak gerekirse, bu sihir gibi geliyor.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 112.66,
  "end": 114.62
 },
 {
  "input": "And for this particular scheme, if two bits get flipped, the machine will at least be able to detect that there were two errors, though it won't know how to fix them.",
  "translatedText": "Ve bu özel şema için, eğer iki bit ters çevrilirse, makine en azından iki hata olduğunu tespit edebilecektir, ancak bunları nasıl düzelteceğini bilemeyecektir.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 115.44,
  "end": 122.86
 },
 {
  "input": "We'll talk a little bit later about how this scales for blocks with different sizes.",
  "translatedText": "Bunun farklı boyutlardaki bloklar için nasıl ölçeklendirileceği hakkında biraz sonra konuşacağız.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 123.52,
  "end": 126.9
 },
 {
  "input": "Methods that let you correct errors like this are known, reasonably enough, as error correction codes.",
  "translatedText": "Bunun gibi hataları düzeltmenize izin veren yöntemler, makul olarak, hata düzeltme kodları olarak bilinir.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 127.86,
  "end": 132.9
 },
 {
  "input": "For the better part of the last century, this field has been a really rich source of surprisingly deep math that gets incorporated into devices we use every day.",
  "translatedText": "Geçen yüzyılın büyük bir bölümünde bu alan, her gün kullandığımız cihazlara dahil edilen, şaşırtıcı derecede derin bir matematik açısından gerçekten zengin bir kaynak oldu.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 133.66,
  "end": 141.94
 },
 {
  "input": "The goal here is to give you a very thorough understanding of one of the earliest examples, known as a Hamming code.",
  "translatedText": "Buradaki amaç size Hamming kodu olarak bilinen en eski örneklerden biri hakkında kapsamlı bir anlayış kazandırmaktır.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 142.84,
  "end": 148.66
 },
 {
  "input": "And by the way, the way I'm thinking about the structure of this video is less about explaining it as directly as possible, and more a matter of prompting you to invent it for yourself, with a little gentle guidance here and there.",
  "translatedText": "Bu arada, bu videonun yapısı hakkında düşünme biçimim, onu mümkün olduğunca doğrudan açıklamaktan çok, ara sıra hafif bir rehberlikle sizi onu kendiniz icat etmeye teşvik etmekle ilgili.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 149.52,
  "end": 159.82
 },
 {
  "input": "So when you feel like you see where it's going at some point, take that moment to pause, actively predict what the scheme is going to be before I tell you.",
  "translatedText": "Yani bir noktada işlerin nereye gideceğini gördüğünüzü hissettiğinizde, o anı duraklatın ve ben size söylemeden önce planın ne olacağını aktif olarak tahmin edin.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 160.12,
  "end": 166.72
 },
 {
  "input": "Also, if you want your understanding to get down to the hardware level, Ben Eater has made a video in conjunction with this one showing you how to actually implement Hamming codes on breadboards, which is extremely satisfying.",
  "translatedText": "Ayrıca, anlayışınızın donanım düzeyine inmesini istiyorsanız, Ben Eater bununla bağlantılı olarak Hamming kodlarını devre tahtalarına nasıl uygulayacağınızı gösteren bir video hazırladı ki bu son derece tatmin edici.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 167.24,
  "end": 178.24
 },
 {
  "input": "You should know, Hamming codes are not as widely used as more modern codes, like the Reed-Solomon algorithm, but there is a certain magic to the contrast between just how impossible this task feels at the start, and how utterly reasonable it seems once you learn about Hamming.",
  "translatedText": "Hamming kodlarının, Reed-Solomon algoritması gibi daha modern kodlar kadar yaygın kullanılmadığını bilmelisiniz, ancak bu görevin başlangıçta ne kadar imkansız hissettirdiği ile bir kez ne kadar mantıklı göründüğü arasındaki karşıtlıkta belli bir sihir var. Hamming'i öğreniyorsun.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 179.3,
  "end": 193.0
 },
 {
  "input": "The basic principle of error correction is that in a vast space of all possible messages, only some subset are going to be considered valid messages.",
  "translatedText": "Hata düzeltmenin temel ilkesi, olası tüm mesajların geniş bir alanında yalnızca bazı alt kümelerin geçerli mesaj olarak kabul edilmesidir.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 193.72,
  "end": 202.18
 },
 {
  "input": "As an analogy, think about correctly spelled words vs incorrectly spelled words.",
  "translatedText": "Bir benzetme olarak, doğru yazılan sözcükler ile yanlış yazılan sözcükleri düşünün.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 202.8,
  "end": 206.94
 },
 {
  "input": "Whenever a valid message gets altered, the receiver is responsible for correcting what they see back to the nearest valid neighbor, as you might do with a typo.",
  "translatedText": "Geçerli bir mesaj değiştirildiğinde, tıpkı bir yazım hatasında yapabileceğiniz gibi, alıcı gördüklerini en yakın geçerli komşuya düzeltmekten sorumludur.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 208.9,
  "end": 217.34
 },
 {
  "input": "Coming up with a concrete algorithm to efficiently categorize messages like this, though, takes a certain cleverness.",
  "translatedText": "Ancak bunun gibi mesajları etkili bir şekilde kategorize etmek için somut bir algoritma bulmak belli bir zeka gerektirir.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 218.22,
  "end": 224.06
 },
 {
  "input": "The story begins in the 1940s, when a young Richard Hamming was working for Bell Labs, and some of his work involved using a very big expensive punch card computer that he had only limited access to.",
  "translatedText": "Hikaye 1940'larda, genç Richard Hamming'in Bell Laboratuvarları için çalıştığı ve bazı işlerinin sınırlı erişime sahip olduğu çok büyük, pahalı bir delikli kart bilgisayarını kullandığı zaman başlıyor.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 226.78,
  "end": 237.42
 },
 {
  "input": "And the programs he kept putting through it kept failing, because every now and then a bit would get misread.",
  "translatedText": "Ve uygulamaya koyduğu programlar sürekli başarısız oluyordu çünkü ara sıra bazı kısımlar yanlış okunuyordu.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 237.8,
  "end": 242.4
 },
 {
  "input": "Frustration being the crucible of invention, he got so fed up that he invented the world's first error correction code.",
  "translatedText": "Hayal kırıklığı buluşun potası olduğundan o kadar bıktı ki dünyanın ilk hata düzeltme kodunu icat etti.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 243.12,
  "end": 248.42
 },
 {
  "input": "There are many different ways to frame Hamming codes, but as a first pass we're going to go through it the way Hamming himself thought about them.",
  "translatedText": "Hamming kodlarını çerçevelemenin pek çok farklı yolu vardır, ancak ilk geçiş olarak biz bunu Hamming'in kendisinin onlar hakkında düşündüğü şekilde ele alacağız.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 249.06,
  "end": 255.38
 },
 {
  "input": "Let's use an example that's simple, but not too simple, a block of 16 bits.",
  "translatedText": "Basit ama çok da basit olmayan bir örnek, 16 bitlik bir blok kullanalım.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 256.52,
  "end": 260.94
 },
 {
  "input": "We'll number the positions of these bits from 0 up to 15.",
  "translatedText": "Bu bitlerin konumlarını 0'dan 15'e kadar numaralandıracağız.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 261.82,
  "end": 264.74
 },
 {
  "input": "The actual data we want to store is only going to make up 12 of these bits, while 4 of the positions are reserved as a kind of redundancy.",
  "translatedText": "Saklamak istediğimiz gerçek veriler bu bitlerden yalnızca 12'sini oluşturacak, konumların 4'ü ise bir tür artıklık olarak ayrılmış durumda.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 265.62,
  "end": 273.0
 },
 {
  "input": "The word redundant here doesn't simply mean copy, after all, those 4 bits don't give us enough room to blindly copy the data.",
  "translatedText": "Buradaki gereksiz kelimesi sadece kopyalama anlamına gelmiyor, sonuçta bu 4 bit bize verileri körü körüne kopyalamak için yeterli alan vermiyor.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 273.9,
  "end": 280.04
 },
 {
  "input": "Instead, they'll need to be a much more nuanced and clever kind of redundancy, not adding any new information, but adding resilience.",
  "translatedText": "Bunun yerine, bunların çok daha incelikli ve akıllı bir tür fazlalık olması, herhangi bir yeni bilgi eklemesi değil, esneklik sağlaması gerekecek.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 280.72,
  "end": 287.28
 },
 {
  "input": "You might expect these 4 special bits to come nicely packaged together, maybe at the end or something like that, but as you'll see, having them sit in positions which are powers of 2 allows for something that's really elegant by the end.",
  "translatedText": "Bu 4 özel parçanın, belki sonunda ya da buna benzer bir şekilde güzel bir şekilde bir araya gelmesini bekleyebilirsiniz, ancak göreceğiniz gibi, bunların 2'nin kuvvetleri olan konumlara yerleştirilmesi, sonunda gerçekten zarif bir şeye olanak tanır.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 288.6,
  "end": 299.62
 },
 {
  "input": "It also might give you a little hint about how this scales for larger blocks.",
  "translatedText": "Ayrıca, bunun daha büyük bloklar için nasıl ölçeklendiğine dair size küçük bir ipucu verebilir.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 300.2,
  "end": 303.54
 },
 {
  "input": "Also technically it ends up being only 11 bits of data, you'll find there's a mild nuance for what goes on at position 0, but don't worry about that for now.",
  "translatedText": "Ayrıca teknik olarak sadece 11 bitlik bir veriden ibarettir, 0 konumunda olup bitenlerle ilgili hafif bir nüans olduğunu göreceksiniz, ancak şimdilik bunun için endişelenmeyin.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 304.9,
  "end": 313.26
 },
 {
  "input": "Like any error correction algorithm, this will involve two players, a sender who's responsible for setting these 4 special bits, and a receiver who's responsible for performing some kind of check and correcting the errors.",
  "translatedText": "Herhangi bir hata düzeltme algoritması gibi, bu da iki oyuncuyu içerecektir; bu 4 özel bitin ayarlanmasından sorumlu olan bir gönderici ve bir tür kontrolün gerçekleştirilmesinden ve hataların düzeltilmesinden sorumlu olan bir alıcı.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 314.14,
  "end": 325.54
 },
 {
  "input": "Of course, the words sender and receiver really refer to machines or software that's doing all the checks, and the idea of a message is meant really broadly, to include things like storage.",
  "translatedText": "Elbette, gönderen ve alıcı kelimeleri aslında tüm kontrolleri yapan makinelere veya yazılımlara atıfta bulunur ve mesaj fikri, depolama gibi şeyleri de içerecek şekilde oldukça geniş bir anlama gelir.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 326.3,
  "end": 334.74
 },
 {
  "input": "After all, storing data is the same thing as sending a message just from the past to the future instead of from one place to another.",
  "translatedText": "Sonuçta veri depolamak, mesajın bir yerden başka bir yere değil, geçmişten geleceğe gönderilmesiyle aynı şeydir.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 335.34,
  "end": 341.68
 },
 {
  "input": "So that's the setup, but before we can dive in we need to talk about a related idea which was fresh on Hamming's mind in the time of his discovery, a method which lets you detect any single bit errors, but not to correct them, known in the business as a parity check.",
  "translatedText": "Kurulum bu, ancak konuya dalmadan önce, keşfi sırasında Hamming'in aklında yeni olan ilgili bir fikir hakkında konuşmamız gerekiyor; herhangi bir tek bit hatasını tespit etmenize izin veren ancak bunları düzeltmenize izin vermeyen bir yöntem, bilinen iş dünyasında parite kontrolü olarak.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 342.56,
  "end": 356.3
 },
 {
  "input": "For a parity check, we separate out only one single bit that the sender is responsible for tuning, and the rest are free to carry a message.",
  "translatedText": "Eşlik kontrolü için, gönderenin ayarlamadan sorumlu olduğu tek bir biti ayırıyoruz ve geri kalanı mesaj taşımakta özgür.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 356.88,
  "end": 363.82
 },
 {
  "input": "The only job of this special bit is to make sure that the total number of 1s in the message is an even number.",
  "translatedText": "Bu özel bitin tek görevi mesajdaki 1'lerin toplam sayısının çift sayı olmasını sağlamaktır.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 364.88,
  "end": 371.28
 },
 {
  "input": "So for example right now, that total number of 1s is 7, that's odd, so the sender needs to flip that special bit to be a 1, making the count even.",
  "translatedText": "Örneğin şu anda, 1'lerin toplam sayısı 7'dir, bu tek sayıdır, dolayısıyla gönderenin bu özel biti 1 olacak şekilde çevirmesi gerekir, böylece sayı çift olur.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 372.08,
  "end": 379.96
 },
 {
  "input": "But if the block had already started off with an even number of 1s, then this special bit would have been kept at a 0.",
  "translatedText": "Ancak blok zaten çift sayıda 1'lerle başlamış olsaydı, bu özel bit 0'da tutulurdu.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 380.8,
  "end": 386.42
 },
 {
  "input": "This is pretty simple, deceptively simple, but it's an incredibly elegant way to distill the idea of change anywhere in a message to be reflected in a single bit of information.",
  "translatedText": "Bu oldukça basit, yanıltıcı derecede basit, ancak bir mesajın herhangi bir yerindeki değişimin tek bir bilgi parçasına yansıtılacağı fikrini damıtmanın inanılmaz derecede zarif bir yolu.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 387.34,
  "end": 396.78
 },
 {
  "input": "Notice if any bit of this message gets flipped, either from 0 to 1 or 1 to 0, it changes the total count of 1s from being even to being odd.",
  "translatedText": "Bu mesajın herhangi bir bitinin 0'dan 1'e veya 1'den 0'a çevrilmesi durumunda, 1'lerin toplam sayısının çiftten teke değişmesine dikkat edin.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 397.5,
  "end": 406.54
 },
 {
  "input": "So if you're the receiver, you look at this message, and you see an odd number of 1s, you can know for sure that some error has occurred, even though you might have no idea where it was.",
  "translatedText": "Yani eğer alıcıysanız, bu mesaja baktığınızda ve tek sayıda 1'ler görüyorsanız, nerede olduğu hakkında hiçbir fikriniz olmasa bile bir hatanın meydana geldiğinden emin olabilirsiniz.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 407.98,
  "end": 417.46
 },
 {
  "input": "In the jargon, whether a group of bits has an even or odd number of 1s is known as its parity.",
  "translatedText": "Jargonda, bir bit grubunun çift veya tek sayıda 1'e sahip olup olmadığı, eşlik olarak bilinir.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 418.5,
  "end": 423.34
 },
 {
  "input": "You could also use numbers and say the parity is 0 or 1, which is typically more helpful once you start doing math with the idea.",
  "translatedText": "Ayrıca sayıları kullanabilir ve paritenin 0 veya 1 olduğunu söyleyebilirsiniz; bu fikirle matematik yapmaya başladığınızda genellikle daha yararlı olur.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 424.86,
  "end": 430.72
 },
 {
  "input": "And this special bit that the sender uses to control the parity is called the parity bit.",
  "translatedText": "Ve göndericinin pariteyi kontrol etmek için kullandığı bu özel bit, eşlik biti olarak adlandırılır.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 431.22,
  "end": 435.52
 },
 {
  "input": "And actually, we should be clear, if the receiver sees an odd parity, it doesn't necessarily mean there was just one error, there might have been 3 errors, or 5, or any other odd number, but they can know for sure that it wasn't 0.",
  "translatedText": "Ve aslında, açık olmalıyız ki, eğer alıcı tek bir parite görürse, bu sadece bir hata olduğu anlamına gelmez, 3 hata, 5 hata veya başka herhangi bir tek sayı olabilir, ancak kesin olarak bilebilir. 0 değildi.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 437.56,
  "end": 449.26
 },
 {
  "input": "On the other hand, if there had been 2 errors, or any even number of errors, that final count of 1s would still be even, so the receiver can't have full confidence that an even count necessarily means the message is error-free.",
  "translatedText": "Öte yandan, 2 hata veya herhangi bir çift sayıda hata olsaydı, son 1 sayısı hâlâ çift sayı olurdu, dolayısıyla alıcı, çift sayının mutlaka mesajın hatasız olduğu anlamına geldiğine tam olarak güvenemez.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 449.98,
  "end": 462.3
 },
 {
  "input": "You might complain that a message which gets messed up by only 2 bit flips is pretty weak, and you would be absolutely right.",
  "translatedText": "Yalnızca 2 bitlik geçişlerle bozulan bir mesajın oldukça zayıf olduğundan şikayet edebilirsiniz ve kesinlikle haklısınız.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 462.84,
  "end": 469.08
 },
 {
  "input": "Keep in mind, though, there is no method for error detection or correction that could give you 100% confidence that the message you receive is the one the sender intended.",
  "translatedText": "Ancak, aldığınız mesajın gönderenin amaçladığı mesaj olduğuna dair size %100 güven verecek bir hata tespiti veya düzeltme yöntemi olmadığını unutmayın.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 469.7,
  "end": 478.9
 },
 {
  "input": "After all, enough random noise could always change one valid message into another valid message just by pure chance.",
  "translatedText": "Sonuçta, yeterince rastgele gürültü her zaman geçerli bir mesajı tamamen şans eseri başka bir geçerli mesaja dönüştürebilir.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 479.58,
  "end": 485.44
 },
 {
  "input": "Instead, the goal is to come up with a scheme that's robust up to a certain maximum number of errors, or maybe to reduce the probability of a false positive like this.",
  "translatedText": "Bunun yerine amaç, belirli bir maksimum hata sayısına kadar dayanıklı bir şema bulmak veya bunun gibi yanlış pozitif olasılığını azaltmaktır.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 486.24,
  "end": 495.38
 },
 {
  "input": "Parity checks on their own are pretty weak, but by distilling the idea of change across a full message down to a single bit, what they give us is a powerful building block for more sophisticated schemes.",
  "translatedText": "Eşlik kontrolleri kendi başlarına oldukça zayıftır, ancak tüm mesajdaki değişim fikrini tek bir bit'e indirgeyerek bize verdikleri şey, daha karmaşık planlar için güçlü bir yapı taşıdır.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 496.26,
  "end": 507.16
 },
 {
  "input": "For example, as Hamming was searching for a way to identify where an error happened, not just that it happened, his key insight was that if you apply some parity checks not to the full message, but to certain carefully selected subsets, you can ask a more refined series of questions that pin down the location of any single bit error.",
  "translatedText": "Örneğin, Hamming bir hatanın sadece meydana geldiğini değil, nerede meydana geldiğini de belirlemenin bir yolunu ararken, onun temel görüşü şuydu: Eğer bazı eşitlik kontrollerini mesajın tamamına değil de dikkatle seçilmiş belirli alt kümelere uygularsanız, şu soruyu sorabilirsiniz: herhangi bir bit hatasının yerini belirleyen daha rafine bir dizi soru.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 507.94,
  "end": 525.94
 },
 {
  "input": "The overall feeling is a bit like playing a game of 20 questions, asking yes or no queries that chop the space of possibilities in half.",
  "translatedText": "Genel his biraz 20 soruluk bir oyun oynamaya, olasılıklar alanını yarıya indiren evet veya hayır soruları sormaya benziyor.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 526.68,
  "end": 533.38
 },
 {
  "input": "For example, let's say we do a parity check just on these 8 bits, all of the odd numbered positions.",
  "translatedText": "Örneğin, diyelim ki sadece bu 8 bit üzerinde, tek sayılı konumların tümü üzerinde bir eşlik kontrolü yaptığımızı varsayalım.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 534.16,
  "end": 539.38
 },
 {
  "input": "Then if an error is detected, it gives the receiver a little more information about where specifically the error is, namely that it's in an odd position.",
  "translatedText": "Daha sonra bir hata tespit edilirse, alıcıya hatanın tam olarak nerede olduğu, yani tek bir konumda olduğu hakkında biraz daha bilgi verilir.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 540.1,
  "end": 548.24
 },
 {
  "input": "If no error is detected among those 8 bits, it either means there's no error at all, or it sits somewhere in the even positions.",
  "translatedText": "Bu 8 bit arasında herhangi bir hata tespit edilmezse, bu ya hiç hata olmadığı anlamına gelir ya da çift konumlarda bir yerde bulunur.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 548.94,
  "end": 556.24
 },
 {
  "input": "You might think that limiting a parity check to half the bits makes it less effective, but when it's done in conjunction with other well-chosen checks, it counterintuitively gives us something a lot more powerful.",
  "translatedText": "Eşlik kontrolünü bitlerin yarısıyla sınırlandırmanın onu daha az etkili hale getirdiğini düşünebilirsiniz, ancak diğer iyi seçilmiş kontrollerle birlikte yapıldığında, mantıksız bir şekilde bize çok daha güçlü bir şey verir.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 557.18,
  "end": 567.2
 },
 {
  "input": "To actually set up that parity check, remember, it requires earmarking some special bit that has control for the parity of that full group.",
  "translatedText": "Eşlik kontrolünü gerçekten ayarlamak için, unutmayın, o tam grubun eşliğini kontrol eden bazı özel bitlerin tahsis edilmesi gerekir.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 569.24,
  "end": 576.62
 },
 {
  "input": "Here let's just choose position 1.",
  "translatedText": "Burada sadece konum 1'i seçelim.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 577.48,
  "end": 579.18
 },
 {
  "input": "For the example shown, the parity of these 8 bits is currently odd, so the sender is responsible for toggling that parity bit, and now it's even.",
  "translatedText": "Gösterilen örnekte, bu 8 bitin paritesi şu anda tektir, dolayısıyla gönderen bu eşlik bitinin değiştirilmesinden sorumludur ve artık çifttir.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 579.72,
  "end": 586.98
 },
 {
  "input": "This is only 1 out of 4 parity checks that we'll do.",
  "translatedText": "Bu, yapacağımız 4 eşlik kontrolünden yalnızca 1'idir.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 587.94,
  "end": 590.68
 },
 {
  "input": "The second check is among the 8 bits on the right half of the grid, at least as we've drawn it here.",
  "translatedText": "İkinci kontrol, en azından burada çizdiğimiz şekliyle, ızgaranın sağ yarısındaki 8 bit arasındadır.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 590.92,
  "end": 596.3
 },
 {
  "input": "This time we might use position 2 as a parity bit, so these 8 bits already have an even parity, and the sender can feel good leaving that bit number 2 unchanged.",
  "translatedText": "Bu kez konum 2'yi eşlik biti olarak kullanabiliriz, böylece bu 8 bit zaten eşit bir eşliğe sahiptir ve gönderen, bu 2 numaralı biti değiştirmeden bırakmanın kendisini iyi hissedebilir.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 596.68,
  "end": 606.06
 },
 {
  "input": "Then on the other end, if the receiver checks the parity of this group and they find that it's odd, they'll know that the error is somewhere among these 8 bits on the right.",
  "translatedText": "Diğer taraftan eğer alıcı bu grubun paritesini kontrol ederse ve bunun tuhaf olduğunu görürse, hatanın sağdaki bu 8 bit arasında bir yerde olduğunu anlayacaktır.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 607.02,
  "end": 615.38
 },
 {
  "input": "Otherwise it means either there's no error, or the error is somewhere on the left half.",
  "translatedText": "Aksi takdirde bu, ya hata olmadığı ya da hatanın sol yarıda bir yerde olduğu anlamına gelir.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 615.82,
  "end": 620.58
 },
 {
  "input": "Or I guess there could have been two errors, but for right now we're going to assume that there's at most one error in the entire block.",
  "translatedText": "Ya da sanırım iki hata olabilirdi ama şimdilik tüm blokta en fazla bir hata olduğunu varsayacağız.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 621.12,
  "end": 626.5
 },
 {
  "input": "Things break down completely for more than that.",
  "translatedText": "Bundan daha fazlası için işler tamamen bozulur.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 626.94,
  "end": 628.74
 },
 {
  "input": "Here, before we look at the next two checks, take a moment to think about what these first two allow us to do when you consider them together.",
  "translatedText": "Burada, sonraki iki kontrole bakmadan önce, bir dakika durup bu ilk ikisinin birlikte değerlendirildiğinde bize ne yapmamıza olanak sağladığını düşünün.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 629.16,
  "end": 635.1
 },
 {
  "input": "Let's say you detect an error among the odd columns, and among the right half.",
  "translatedText": "Diyelim ki tek sütunlar arasında ve sağ yarıda bir hata tespit ettiniz.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 635.8,
  "end": 639.66
 },
 {
  "input": "It necessarily means the error is somewhere in the last column.",
  "translatedText": "Bu mutlaka hatanın son sütunda bir yerde olduğu anlamına gelir.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 640.2,
  "end": 643.04
 },
 {
  "input": "If there was no error in the odd column but there was one in the right half, that tells you it's in the second to last column.",
  "translatedText": "Tek sütunda hata yoksa ancak sağ yarıda bir hata varsa, bu size sorunun sondan ikinci sütunda olduğunu gösterir.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 643.82,
  "end": 649.7
 },
 {
  "input": "Likewise if there is an error in the odd columns but not in the right half, you know it's somewhere in the second column.",
  "translatedText": "Benzer şekilde, tek sütunlarda bir hata varsa ancak sağ yarıda değilse, bunun ikinci sütunda bir yerde olduğunu bilirsiniz.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 650.44,
  "end": 656.02
 },
 {
  "input": "And if neither of those two parity checks detects anything, it means the only place that an error could be is in that leftmost column.",
  "translatedText": "Ve eğer bu iki eşlik kontrolünden hiçbiri bir şey tespit etmezse, bu, hatanın olabileceği tek yerin en soldaki sütun olduğu anlamına gelir.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 656.02,
  "end": 663.12
 },
 {
  "input": "But it also might simply mean there's no error at all.",
  "translatedText": "Ancak bu aynı zamanda hiçbir hatanın olmadığı anlamına da gelebilir.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 663.34,
  "end": 666.12
 },
 {
  "input": "Which is all a rather belabored way to say that two parity checks let us pin down the column.",
  "translatedText": "Bu, iki eşlik kontrolünün sütunu belirlememize izin verdiğini söylemenin oldukça ayrıntılı bir yolu.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 666.3,
  "end": 670.84
 },
 {
  "input": "From here, you can probably guess what follows.",
  "translatedText": "Buradan sonrasını muhtemelen tahmin edebilirsiniz.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 671.48,
  "end": 673.64
 },
 {
  "input": "We do basically the same thing but for the rows.",
  "translatedText": "Temelde aynı şeyi yapıyoruz ancak satırlar için.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 673.8,
  "end": 676.14
 },
 {
  "input": "There's going to be a parity check on the odd rows, using position 4 as a parity bit.",
  "translatedText": "Konum 4'ü eşlik biti olarak kullanarak tek satırlarda bir eşlik kontrolü yapılacak.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 676.44,
  "end": 680.9
 },
 {
  "input": "So in this example that group already has an even parity, so bit 4 would be set to a 0.",
  "translatedText": "Yani bu örnekte bu grup zaten çift eşlikli olduğundan bit 4, 0'a ayarlanacaktır.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 681.38,
  "end": 685.82
 },
 {
  "input": "And finally there's a parity check on the bottom two rows, using position 8 as a parity bit.",
  "translatedText": "Ve son olarak, alt iki satırda, konum 8'i eşlik biti olarak kullanan bir eşlik kontrolü var.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 686.56,
  "end": 691.58
 },
 {
  "input": "In this case, it looks like the sender needs to turn that bit 8 on in order to give the group even parity.",
  "translatedText": "Bu durumda, gruba eşit eşitlik sağlamak için gönderenin 8. biti açması gerekiyor gibi görünüyor.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 692.12,
  "end": 696.82
 },
 {
  "input": "Just as the first two checks let us pin down the column, these next two let you pin down the row.",
  "translatedText": "İlk iki kontrol sütunu belirlememize izin verdiği gibi, sonraki iki kontrol de satırı belirlemenize olanak sağlar.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 697.7,
  "end": 701.84
 },
 {
  "input": "As an example, imagine that during the transmission there's an error at, say, position 3.",
  "translatedText": "Örnek olarak, iletim sırasında örneğin 3. pozisyonda bir hata olduğunu hayal edin.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 702.88,
  "end": 707.54
 },
 {
  "input": "Well this affects the first parity group, and it also affects the second parity group, so the receiver knows that there's an error somewhere in that right column.",
  "translatedText": "Bu, birinci eşlik grubunu etkiler ve aynı zamanda ikinci eşlik grubunu da etkiler, böylece alıcı, sağ sütunda bir yerde bir hata olduğunu bilir.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 708.18,
  "end": 715.56
 },
 {
  "input": "But it doesn't affect the third group, and it doesn't affect the fourth group.",
  "translatedText": "Ama üçüncü grubu etkilemediği gibi dördüncü grubu da etkilemez.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 716.1,
  "end": 720.54
 },
 {
  "input": "And that lets the receiver pinpoint the error up to the first row, which necessarily means position 3, so they can fix the error.",
  "translatedText": "Ve bu, alıcının hatayı ilk satıra kadar tespit etmesini sağlar, bu da zorunlu olarak 3. konum anlamına gelir, böylece hatayı düzeltebilirler.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 721.24,
  "end": 727.52
 },
 {
  "input": "You might enjoy taking a moment to convince yourself that the answers to these four questions really will always let you pin down a specific location, no matter where they turn out to be.",
  "translatedText": "Bu dört sorunun yanıtlarının, nerede olursa olsun, belirli bir konumu belirlemenize gerçekten olanak sağlayacağına kendinizi ikna etmek için bir dakikanızı ayırmanın tadını çıkarabilirsiniz.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 728.58,
  "end": 737.1
 },
 {
  "input": "In fact, the astute among you might even notice a connection between these questions and binary counting.",
  "translatedText": "Hatta aranızdaki zeki biri bu sorularla ikili sayım arasında bir bağlantı bile fark edebilir.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 737.72,
  "end": 743.06
 },
 {
  "input": "And if you do, again let me emphasize, pause, try for yourself to draw the connection before I spoil it.",
  "translatedText": "Ve eğer yaparsanız, tekrar vurgulayayım, duraklatın, ben onu bozmadan bağlantıyı kendiniz kurmaya çalışın.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 743.5,
  "end": 748.92
 },
 {
  "input": "If you're wondering what happens if a parity bit itself gets affected, well, you can just try it.",
  "translatedText": "Bir eşlik bitinin kendisi etkilenirse ne olacağını merak ediyorsanız, bunu deneyebilirsiniz.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 750.5,
  "end": 756.06
 },
 {
  "input": "Take a moment to think about how any error among these four special bits is going to be tracked down just like any other, with the same group of four questions.",
  "translatedText": "Bir dakikanızı ayırıp bu dört özel parça arasındaki herhangi bir hatanın, tıpkı diğerleri gibi, dört sorudan oluşan aynı grupla nasıl bulunacağını düşünün.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 756.44,
  "end": 764.18
 },
 {
  "input": "It doesn't really matter, since at the end of the day what we want is to protect the message bits, the error correction bits are just riding along.",
  "translatedText": "Aslında bunun bir önemi yok, çünkü günün sonunda istediğimiz şey mesaj bitlerini korumaktır, hata düzeltme bitleri yoluna devam eder.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 767.06,
  "end": 773.1
 },
 {
  "input": "But protecting those bits as well is something that naturally falls out of the scheme as a byproduct.",
  "translatedText": "Ancak bu parçaların da korunması, doğal olarak bir yan ürün olarak planın dışında kalan bir şeydir.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 773.6,
  "end": 777.82
 },
 {
  "input": "You might also enjoy anticipating how this scales.",
  "translatedText": "Bunun nasıl ölçekleneceğini tahmin etmekten de keyif alabilirsiniz.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 779.2,
  "end": 781.76
 },
 {
  "input": "If we used a block of size 256 bits, for example, in order to pin down a location, you need only eight yes or no questions to binary search your way down to some specific spot.",
  "translatedText": "Örneğin, bir konumu belirlemek için 256 bit boyutunda bir blok kullansaydık, belirli bir noktaya giden yolu ikili olarak aramak için yalnızca sekiz evet veya hayır sorusuna ihtiyacınız olurdu.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 782.3,
  "end": 792.78
 },
 {
  "input": "And remember, each question requires giving up only a single bit to set the appropriate parity check.",
  "translatedText": "Ve unutmayın, her soru uygun eşlik kontrolünü ayarlamak için yalnızca tek bir bitten vazgeçmeyi gerektirir.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 795.64,
  "end": 800.5
 },
 {
  "input": "Some of you may already see it, but we'll talk later about the systematic way to find what these questions are in just a minute or two.",
  "translatedText": "Bazılarınız bunu zaten görmüş olabilir, ancak daha sonra bu soruların ne olduğunu bir veya iki dakika içinde bulmanın sistematik yolundan bahsedeceğiz.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 803.16,
  "end": 809.36
 },
 {
  "input": "Hopefully this sketch is enough to appreciate the efficiency of what we're developing here.",
  "translatedText": "Umarım bu taslak, burada geliştirdiğimiz şeyin verimliliğini takdir etmek için yeterlidir.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 809.88,
  "end": 813.66
 },
 {
  "input": "The first thing, except for those eight highlighted parity bits, can be whatever you want it to be, carrying whatever message or data you want.",
  "translatedText": "İlk şey, vurgulanan sekiz eşlik biti dışında, istediğiniz her şey olabilir, istediğiniz mesajı veya veriyi taşıyabilir.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 813.66,
  "end": 821.0
 },
 {
  "input": "The 8 bits are redundant in the sense that they're completely determined by the rest of the message, but it's in a much smarter way than simply copying the message as a whole.",
  "translatedText": "8 bit, tamamen mesajın geri kalanı tarafından belirlenmeleri anlamında gereksizdir, ancak bu, mesajın bir bütün olarak kopyalanmasından çok daha akıllı bir yoldur.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 821.72,
  "end": 830.02
 },
 {
  "input": "And still, for so little given up, you would be able to identify and fix any single bit error.",
  "translatedText": "Ve yine de, bu kadar az vazgeçmekle, herhangi bir tek bit hatasını tespit edip düzeltebileceksiniz.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 833.6,
  "end": 838.38
 },
 {
  "input": "Well, almost.",
  "translatedText": "Neredeyse.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 839.2,
  "end": 840.4
 },
 {
  "input": "Okay, so the one problem here is that if none of the four parity checks detect an error, meaning that the specially selected subsets of 8 bits all have even parities, just like the sender intended, then it either means there was no error at all, or it narrows us down into position 0.",
  "translatedText": "Tamam, buradaki sorun şu ki, eğer dört eşlik kontrolünden hiçbiri bir hata tespit etmezse, yani özel olarak seçilmiş 8 bitlik alt kümelerin tümü, gönderenin amaçladığı gibi eşit eşliklere sahipse, o zaman bu da hiçbir hata olmadığı anlamına gelir. veya bizi 0 pozisyonuna daraltır.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 840.96,
  "end": 856.86
 },
 {
  "input": "You see, with four yes or no questions, we have 16 possible outcomes for our parity checks, and at first that feels perfect for pinpointing 1 out of 16 positions in the block, but you also need to communicate a 17th outcome, the no error condition.",
  "translatedText": "Görüyorsunuz, dört evet veya hayır sorusuyla, eşitlik kontrollerimiz için 16 olası sonuç var ve ilk başta bu, bloktaki 16 konumdan 1'inin yerini belirlemek için mükemmel gibi geliyor, ancak aynı zamanda 17. sonucu da iletmeniz gerekiyor, yani hata yok durum.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 857.74,
  "end": 871.9
 },
 {
  "input": "The solution here is actually pretty simple, just forget about that 0th bit entirely.",
  "translatedText": "Buradaki çözüm aslında oldukça basit, sadece o 0'ıncı biti tamamen unutun.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 873.02,
  "end": 877.3
 },
 {
  "input": "So when we do our four parity checks and we see that they're all even, it unambiguously means that there is no error.",
  "translatedText": "Yani dört eşlik kontrolümüzü yaptığımızda ve hepsinin eşit olduğunu gördüğümüzde, bu açıkça hiçbir hata olmadığı anlamına gelir.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 877.84,
  "end": 883.46
 },
 {
  "input": "What that means is rather than working with a 16-bit block, we work with a 15-bit block, where 11 of the bits are free to carry a message and 4 of them are there for redundancy.",
  "translatedText": "Bunun anlamı, 16 bitlik bir blokla çalışmak yerine, 15 bitlik bir blokla çalışıyoruz; burada bitlerin 11'i mesaj taşımak için serbest ve 4'ü yedeklik için orada.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 884.24,
  "end": 893.22
 },
 {
  "input": "And with that, we now have what people in the business would refer to as a 15-11 Hamming code.",
  "translatedText": "Ve bununla birlikte, artık sektördeki insanların 15-11 Hamming kodu olarak adlandıracağı şeye sahibiz.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 893.78,
  "end": 898.8
 },
 {
  "input": "That said, it's nice to have a block size that's a clean power of 2, and there's a clever way we can keep that 0th bit around and get it to do a little extra work for us.",
  "translatedText": "Bununla birlikte, 2'nin temiz kuvveti olan bir blok boyutuna sahip olmak güzel ve bu 0'ıncı biti etrafta tutmanın ve bizim için biraz fazladan iş yapmasını sağlamanın akıllıca bir yolu var.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 899.86,
  "end": 908.14
 },
 {
  "input": "If we use it as a parity bit across the whole block, it lets us actually detect, even though we can't correct, 2-bit errors.",
  "translatedText": "Bunu tüm blok boyunca bir eşlik biti olarak kullanırsak, 2 bitlik hataları düzeltemesek bile aslında tespit etmemizi sağlar.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 908.7,
  "end": 915.54
 },
 {
  "input": "Here's how it works.",
  "translatedText": "İşte nasıl çalışıyor?",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 916.16,
  "end": 916.82
 },
 {
  "input": "After setting those four special error-correcting bits, we set that 0th one so that the parity of the full block is even, just like a normal parity check.",
  "translatedText": "Bu dört özel hata düzeltme bitini ayarladıktan sonra, tam bloğun paritesi normal bir eşlik kontrolü gibi çift olacak şekilde 0'ıncı biti ayarladık.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 917.18,
  "end": 924.94
 },
 {
  "input": "Now, if there's a single bit error, then the parity of the full block toggles to be odd, but we would catch that anyway thanks to the four error-correcting checks.",
  "translatedText": "Şimdi, eğer tek bir bit hatası varsa, o zaman tam bloğun paritesi tek olacak şekilde değişir, ancak dört hata düzeltme kontrolü sayesinde bunu yine de yakalarız.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 925.7,
  "end": 933.6
 },
 {
  "input": "However, if there's two errors, then the overall parity is going to toggle back to being even, but the receiver would still see that there's been at least some error because of what's going on with those four parity checks.",
  "translatedText": "Bununla birlikte, eğer iki hata varsa, o zaman genel parite tekrar eşit duruma dönecektir, ancak alıcı yine de bu dört eşlik kontrolünde olup bitenlerden dolayı en azından bir miktar hata olduğunu görecektir.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 934.16,
  "end": 945.18
 },
 {
  "input": "So if they notice an even parity overall, but something non-zero happening with the other checks, it tells them there were at least two errors.",
  "translatedText": "Yani genel olarak eşit bir eşitlik fark ederlerse ancak diğer kontrollerde sıfırdan farklı bir şey oluyorsa, bu onlara en az iki hata olduğunu söyler.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 945.18,
  "end": 952.7
 },
 {
  "input": "Isn't that clever?",
  "translatedText": "Bu çok akıllıca değil mi?",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 953.52,
  "end": 954.0
 },
 {
  "input": "Even though we can't correct those 2-bit errors, just by putting that one little bothersome 0th bit back to work, it lets us detect them.",
  "translatedText": "Her ne kadar bu 2 bitlik hataları düzeltemesek de, o küçük can sıkıcı 0'ıncı biti tekrar devreye sokarak, onları tespit etmemizi sağlıyor.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 954.3,
  "end": 961.26
 },
 {
  "input": "This is pretty standard, it's known as an extended Hamming code.",
  "translatedText": "Bu oldukça standarttır, genişletilmiş Hamming kodu olarak bilinir.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 962.26,
  "end": 965.22
 },
 {
  "input": "Technically speaking, you now have a full description of what a Hamming code does, at least for the example of a 16-bit block.",
  "translatedText": "Teknik açıdan konuşursak, artık en azından 16 bitlik bir blok örneği için Hamming kodunun ne yaptığının tam bir açıklamasına sahipsiniz.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 966.54,
  "end": 972.88
 },
 {
  "input": "But I think you'll find it more satisfying to check your understanding and solidify everything up to this point by doing one full example from start to finish yourself.",
  "translatedText": "Ancak, baştan sona kendi başınıza tam bir örnek yaparak anlayışınızı kontrol etmeyi ve bu noktaya kadar her şeyi sağlamlaştırmayı daha tatmin edici bulacağınızı düşünüyorum.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 972.88,
  "end": 981.32
 },
 {
  "input": "I'll step through it with you though so you can check yourself.",
  "translatedText": "Kendinizi kontrol edebilmeniz için ben de sizinle birlikte üzerinden geçeceğim.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 982.08,
  "end": 984.3
 },
 {
  "input": "To set up a message, whether that's a literal message you're translating over space or some data you want to store over time, the first step is to divide it up into 11-bit chunks.",
  "translatedText": "İster uzayda çevirdiğiniz gerçek bir mesaj, ister zaman içinde depolamak istediğiniz bazı veriler olsun, bir mesaj oluşturmak için ilk adım, onu 11 bitlik parçalara bölmektir.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 985.12,
  "end": 994.66
 },
 {
  "input": "Each chunk is going to get packaged into an error-resistant 16-bit block.",
  "translatedText": "Her parça, hataya dayanıklı 16 bitlik bir blok halinde paketlenecek.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 995.58,
  "end": 999.76
 },
 {
  "input": "So let's take this one as an example and actually work it out.",
  "translatedText": "Hadi bunu bir örnek olarak alalım ve gerçekten üzerinde çalışalım.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 999.76,
  "end": 1003.22
 },
 {
  "input": "Go ahead, actually do it!",
  "translatedText": "Devam edin, gerçekten yapın!",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1003.74,
  "end": 1004.94
 },
 {
  "input": "Let's pause and try putting together this block.",
  "translatedText": "Durup bu bloğu bir araya getirmeyi deneyelim.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1005.22,
  "end": 1007.02
 },
 {
  "input": "Okay, you ready?",
  "translatedText": "Tamam, hazır mısın?",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1012.72,
  "end": 1013.68
 },
 {
  "input": "Remember, position 0 along with the other powers of 2 are reserved for error correction duty, so you start by placing the message bits in all of the remaining spots, in order.",
  "translatedText": "Unutmayın, 0 konumu ve 2'nin diğer kuvvetleri hata düzeltme görevi için ayrılmıştır, bu nedenle mesaj bitlerini kalan tüm noktalara sırayla yerleştirerek başlarsınız.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1014.24,
  "end": 1023.32
 },
 {
  "input": "You need this group to have an even parity, which it already does, so you should have set that parity bit in position 1 to be a 0.",
  "translatedText": "Bu grubun çift eşlikli olması gerekir ki zaten öyledir, dolayısıyla 1 konumundaki eşlik bitini 0 olacak şekilde ayarlamanız gerekir.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1025.34,
  "end": 1032.34
 },
 {
  "input": "The next group starts off with an odd parity, so you should have set its parity bit to be 1.",
  "translatedText": "Bir sonraki grup tek bir eşlikle başlar, dolayısıyla eşlik bitini 1 olarak ayarlamanız gerekir.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1033.02,
  "end": 1037.88
 },
 {
  "input": "The group after that starts with an odd parity, so again you should have set its parity bit to 1.",
  "translatedText": "Bundan sonraki grup tek eşlikle başlar, dolayısıyla eşlik bitini yine 1'e ayarlamanız gerekir.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1039.16,
  "end": 1044.24
 },
 {
  "input": "And the final group also has an odd parity, meaning we set that bit in position 8 to be a 1.",
  "translatedText": "Ve son grubun da tek bir paritesi var, yani bu biti 8 pozisyonuna 1 olarak ayarladık.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1044.78,
  "end": 1050.06
 },
 {
  "input": "And then as the final step, the full block now has an even parity, meaning you can set that bit number 0, the overarching parity bit, to be 0.",
  "translatedText": "Ve son adım olarak, tam bloğun artık çift bir eşlik durumu var; bu, 0 numaralı bit sayısını, yani kapsayıcı eşlik bitini 0 olarak ayarlayabileceğiniz anlamına geliyor.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1051.3,
  "end": 1060.32
 },
 {
  "input": "So as this block is sent off, the parity of the four special subsets and the block as a whole will all be even, or 0.",
  "translatedText": "Yani bu blok gönderildiğinde, dört özel alt kümenin ve bir bütün olarak bloğun paritesi çift veya 0 olacaktır.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1061.34,
  "end": 1068.14
 },
 {
  "input": "As the second part of the exercise, let's have you play the role of the receiver.",
  "translatedText": "Alıştırmanın ikinci bölümünde alıcı rolünü oynamanızı sağlayalım.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1068.82,
  "end": 1072.18
 },
 {
  "input": "Of course, that would mean you don't already know what this message is, maybe some of you memorized it, but let's assume that you haven't.",
  "translatedText": "Tabii bu, bu mesajın ne olduğunu henüz bilmediğiniz anlamına gelir, belki bazılarınız ezberlemiştir, ama varsayalım ki ezberlemediniz.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1073.48,
  "end": 1079.78
 },
 {
  "input": "What I'm going to do is change either 0, 1, or 2 of the bits in that block, and then ask you to figure out what it is that I did.",
  "translatedText": "Yapacağım şey, o bloktaki bitlerden 0, 1 veya 2'sini değiştirmek ve sonra sizden ne yaptığımı bulmanızı istemek.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1080.02,
  "end": 1087.74
 },
 {
  "input": "So again, pause and try working it out.",
  "translatedText": "Tekrar duraklatın ve çözmeye çalışın.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1088.26,
  "end": 1090.81
 },
 {
  "input": "Okay, so you as the receiver now check the first parity group and you can see that it's even, so any error that exists would have to be in an even column.",
  "translatedText": "Tamam, şimdi alıcı olarak siz ilk eşlik grubunu kontrol ediyorsunuz ve bunun çift olduğunu görebiliyorsunuz, dolayısıyla mevcut herhangi bir hatanın çift sütunda olması gerekir.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1098.79,
  "end": 1107.91
 },
 {
  "input": "The next check gives us an odd number, telling us both that there's at least one error, and narrowing us down into this specific column.",
  "translatedText": "Bir sonraki kontrol bize tek bir sayı veriyor, ikimize de en az bir hata olduğunu söylüyor ve bizi bu spesifik sütuna daraltıyor.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1109.69,
  "end": 1117.03
 },
 {
  "input": "The third check is even, chopping down the possibilities even further.",
  "translatedText": "Üçüncü kontrol eşittir, olasılıkları daha da azaltır.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1118.55,
  "end": 1121.79
 },
 {
  "input": "And the last parity check is odd, telling us there's an error somewhere in the bottom, which by now we can see must be in position number 10.",
  "translatedText": "Ve son eşlik kontrolü tuhaf, bize altta bir yerde bir hata olduğunu söylüyor, şu anda bunun 10 numaralı konumda olması gerektiğini görebiliyoruz.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1122.65,
  "end": 1129.65
 },
 {
  "input": "What's more, the parity of the whole block is odd, giving us confidence that there was one flip and not two.",
  "translatedText": "Dahası, tüm bloğun paritesi tuhaftır ve bize iki değil, tek bir atış olduğu konusunda güven verir.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1131.49,
  "end": 1137.53
 },
 {
  "input": "If it's three or more, all bets are off.",
  "translatedText": "Üç veya daha fazla ise tüm bahisler kapalıdır.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1138.07,
  "end": 1139.97
 },
 {
  "input": "After correcting that bit number 10, pulling out the 11 bits that were not used for correction gives us the relevant segment of the original message, which if you rewind and compare is indeed exactly what we started the example with.",
  "translatedText": "10 numaralı biti düzelttikten sonra, düzeltme için kullanılmayan 11 biti çıkarmak bize orijinal mesajın ilgili bölümünü verir; geri sararsanız ve karşılaştırırsanız, bu gerçekten de örneğe başladığımız şeyin tam olarak aynısıdır.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1141.31,
  "end": 1154.39
 },
 {
  "input": "And now that you know how to do all this by hand, I'd like to show you how you can carry out the core part of all of this logic with a single line of Python code.",
  "translatedText": "Artık tüm bunları elle nasıl yapacağınızı bildiğinize göre, size tüm bu mantığın temel kısmını tek bir Python kodu satırıyla nasıl gerçekleştirebileceğinizi göstermek istiyorum.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1155.71,
  "end": 1163.17
 },
 {
  "input": "You see, what I haven't told you yet is just how elegant this algorithm really is, how simple it is to get a machine to point to the position of an error, how to systematically scale it, and how we can frame all of this as one single operation rather than multiple separate parity checks.",
  "translatedText": "Görüyorsunuz, size henüz söylemediğim şey, bu algoritmanın gerçekte ne kadar zarif olduğu, bir makinenin hatanın konumunu göstermesinin ne kadar basit olduğu, bunu sistematik olarak nasıl ölçeklendireceğimiz ve tüm bunları nasıl çerçeveleyebileceğimizdir. bu, birden fazla ayrı eşlik kontrolü yerine tek bir işlem olarak yapılır.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1163.87,
  "end": 1178.75
 },
 {
  "input": "To see what I mean, come join me in part 2.",
  "translatedText": "Ne demek istediğimi anlamak için 2. bölümde bana katılın.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 1179.43,
  "end": 1181.31
 }
]