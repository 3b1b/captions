[
 {
  "input": "Have you ever wondered how it's possible to scratch a CD or a DVD and still have it play back whatever it's storing?",
  "translatedText": "Elgondolkodtál már azon, hogyan lehetséges az, hogy ha egy CD vagy DVD megkarcolódik, még mindig le lehet játszani amit tárol?",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 3.62,
  "end": 10.1
 },
 {
  "input": "The scratch really does affect the 1s and 0s on the disk, so it reads off different data from what was stored, but unless it's really scratched up, the bits it reads off are decoded into precisely the same file that was encoded onto it, a bit for bit copy, despite all those errors.",
  "translatedText": "A karcolás valóban hatással van a lemezen lévő 1-ekre és 0-kra, tehát a tárolttól eltérő adatok olvasódnak ki. Viszont hacsak nem teljesen karcolódott össze, a kiolvasott bitek pontosan ugyanazon fájllá dekódolódnak, amelyik eredetileg rá volt égetve. Egy tökéletes másolat, mindezen hibák ellenére.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 10.9,
  "end": 27.44
 },
 {
  "input": "There is a whole pile of mathematical cleverness that allows us to store data, and just as importantly to transmit data, in a way that's resilient to errors.",
  "translatedText": "Számtalan ötletes matematikai trükk van, amely lehetővé teszi az adatok tárolását, és ami ugyanilyen fontos, az adatok továbbítását oly módon, amely ellenáll a hibáknak.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 27.44,
  "end": 36.66
 },
 {
  "input": "Well, actually it doesn't take that much cleverness to come up with a way to do this.",
  "translatedText": "Nos, oké, valójában nincs szükség akkora ötletre, hogy kitaláljunk erre egy módszert.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 37.52,
  "end": 41.6
 },
 {
  "input": "Any file, whether it's a video, sound, text, code, image, whatever, is ultimately some sequence of 1s and 0s.",
  "translatedText": "Bármely fájl, legyen szó videóról, hangról, szövegről, vagy valamilyen kódról, képről vagy bármi másról, végső soron 1-esek és 0-k sorozata.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 42.06,
  "end": 50.38
 },
 {
  "input": "And a simple strategy to correct any bit that gets flipped would be to store three copies of each bit.",
  "translatedText": "Az átbillent bitek kijavítására egy egyszerű stratégia az lenne, ha minden bitből három másolatot tárolnánk.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 50.68,
  "end": 56.0
 },
 {
  "input": "Then the machine reading this file could compare these three copies and always take the best 2 out of 3 whenever there's a discrepancy.",
  "translatedText": "Ekkor a fájlt olvasó gép össze tudja hasonlítani ezt a három másolatot, és eltérés esetén mindig azt az értéket tartja helyesnek, amely legalább 2-szer fordul elő.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 57.58,
  "end": 64.06
 },
 {
  "input": "But what that means is using two thirds of your space for redundancy.",
  "translatedText": "De ez azt jelenti, hogy a hely kétharmadát redundanciára használjuk.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 67.16,
  "end": 70.86
 },
 {
  "input": "And even then, for all of that space given up, there's no strong guarantee about what happens if more than one bit gets flipped.",
  "translatedText": "És még ennyi hely feladása sem garantálja a helyes működést akkor, ha egynél több bit billen át.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 71.48,
  "end": 77.24
 },
 {
  "input": "The much more interesting question is how to make it so that errors can be corrected while giving up as little space as possible.",
  "translatedText": "Sokkal érdekesebb kérdés, hogy hogyan lehet egy olyan módszert találni, amellyel a lehető legkevesebb hely felhasználása mellett ki lehet javítani a hibákat.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 77.98,
  "end": 84.02
 },
 {
  "input": "For example, using the method you'll learn about this video, you could store your data in 256-bit blocks, where each block uses 9 bits, 9!",
  "translatedText": "Például az a módszer, amit hamarosan bemutatok, 256 bites blokkokban tárolja az adatokat, ahol minden blokk csak kilenc bitet használ. 9-et!",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 84.52,
  "end": 93.36
 },
 {
  "input": "to act as a kind of redundancy, and the other 247 bits are free to carry whatever meaningful message or data you want.",
  "translatedText": "ezek egyfajta redundanciaként működnek, a többi 247 bit pedig szabadon hordozhat bármilyen értelmes üzenetet vagy adatot, amit csak akarunk.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 93.76,
  "end": 100.3
 },
 {
  "input": "And it will still be the case that if any bit gets flipped here, just by looking at this block and nothing more, a machine will be able to identify that there was an error and precisely where it was so that it knows how to correct it.",
  "translatedText": "Ez azt fogja eredményezni, hogy ha itt bármelyik bit megfordul, csak erre a blokkra nézve, és semmi másra, a gép képes lesz azonosítani, hogy hiba történt, és hogy pontosan hol volt, így tudja, hogyan kell kijavítani.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 100.9,
  "end": 112.66
 },
 {
  "input": "And honestly, that feels like magic.",
  "translatedText": "És őszintén szólva, ez olyan, mint egy varázslat.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 112.66,
  "end": 114.62
 },
 {
  "input": "And for this particular scheme, if two bits get flipped, the machine will at least be able to detect that there were two errors, though it won't know how to fix them.",
  "translatedText": "És ennél a konkrét sémánál, ha két bit billen át, a gép legalább észlelni fogja a két hibát, bár nem tudja, hogyan javítsa ki őket.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 115.44,
  "end": 122.86
 },
 {
  "input": "We'll talk a little bit later about how this scales for blocks with different sizes.",
  "translatedText": "Kicsit később még beszélünk arról, hogy ez hogyan skálázódik a különböző méretű blokkok esetében.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 123.52,
  "end": 126.9
 },
 {
  "input": "Methods that let you correct errors like this are known, reasonably enough, as error correction codes.",
  "translatedText": "Az ehhez hasonló hibák kijavítását lehetővé tevő módszereket - talán nem meglepő módon - hibajavító kódoknak nevezik.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 127.86,
  "end": 132.9
 },
 {
  "input": "For the better part of the last century, this field has been a really rich source of surprisingly deep math that gets incorporated into devices we use every day.",
  "translatedText": "Ez a terület meglepően komoly matematikai eredmények gazdag forrása volt a múlt század jelentős hányadában, és ezek nagy része beépült az általunk nap mint nap használt eszközökbe.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 133.66,
  "end": 141.94
 },
 {
  "input": "The goal here is to give you a very thorough understanding of one of the earliest examples, known as a Hamming code.",
  "translatedText": "A célom az, hogy segítsek alaposan megérteni az egyik legkorábbi, Hamming-kódként ismert módszert.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 142.84,
  "end": 148.66
 },
 {
  "input": "And by the way, the way I'm thinking about the structure of this video is less about explaining it as directly as possible, and more a matter of prompting you to invent it for yourself, with a little gentle guidance here and there.",
  "translatedText": "És mellesleg, ahogyan ennek a videónak a felépítésére gondolok, nem szájbarágósan szeretném elmagyarázni, ezért inkább arra foglak ösztönözni, hogy jöjj rá magadtól, itt-ott egy kis célzott segítséggel.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 149.52,
  "end": 159.82
 },
 {
  "input": "So when you feel like you see where it's going at some point, take that moment to pause, actively predict what the scheme is going to be before I tell you.",
  "translatedText": "Tehát amikor úgy érzed egy ponton, hogy látod mire akarok kilyukadni, nyugodtan állítsd meg a videót és próbálj te rájönni a megoldásra.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 160.12,
  "end": 166.72
 },
 {
  "input": "Also, if you want your understanding to get down to the hardware level, Ben Eater has made a video in conjunction with this one showing you how to actually implement Hamming codes on breadboards, which is extremely satisfying.",
  "translatedText": "Továbbá, ha meg szeretnéd érteni a hardver szintű működését , Ben Eater készített egy ehhez kapcsolódó videót, amely bemutatja, hogyan kell próbapanelen alkalmazni a Hamming-kódokat, ami rendkívül kielégítő.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 167.24,
  "end": 178.24
 },
 {
  "input": "You should know, Hamming codes are not as widely used as more modern codes, like the Reed-Solomon algorithm, but there is a certain magic to the contrast between just how impossible this task feels at the start, and how utterly reasonable it seems once you learn about Hamming.",
  "translatedText": "Érdemes tudni, hogy a Hamming-kódokat nem használják már olyan széles körben, mint a modernebb kódokat, például a Reed-Solomon algoritmust. Ennek ellenére mégis van egy bizonyos varázsa annak, hogy mennyire lehetetlennek tűnik ez a feladat az elején, és mennyire ésszerűnek miután megismered a Hamming-kódot.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 179.3,
  "end": 193.0
 },
 {
  "input": "The basic principle of error correction is that in a vast space of all possible messages, only some subset are going to be considered valid messages.",
  "translatedText": "A hibajavítás alapelve, hogy az összes lehetséges üzenetet tartalmazó hatalmas térnek csak egy részhalmazát fogunk érvényes üzenetnek tekinteni.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 193.72,
  "end": 202.18
 },
 {
  "input": "As an analogy, think about correctly spelled words versus incorrectly spelled words.",
  "translatedText": "Analógiaként gondolhatunk a helyesen és a helytelenül írt szavakra.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 202.8,
  "end": 206.94
 },
 {
  "input": "Whenever a valid message gets altered, the receiver is responsible for correcting what they see back to the nearest valid neighbor, as you might do with a typo.",
  "translatedText": "Amikor egy elküldött üzenet módosul, a fogadó felelős azért, hogy amit lát, a legközelebbi értelmes üzenetté alakítsa, pont ahogy azt mi az elírások esetén tesszük.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 208.9,
  "end": 217.34
 },
 {
  "input": "Coming up with a concrete algorithm to efficiently categorize messages like this, though, take a certain cleverness.",
  "translatedText": "Az ilyen üzenetek hatékony kategorizálására alkalmas konkrét algoritmus kidolgozásához azonban szükség van némi okosságra.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 218.22,
  "end": 224.06
 },
 {
  "input": "The story begins in the 1940s, when a young Richard Hamming was working for Bell Labs, and some of his work involved using a very big expensive punch card computer that he had only limited access to.",
  "translatedText": "A történet az 1940-es években kezdődik, amikor a fiatal Richard Hamming a Bell Labs-nál dolgozott, és néhány feladata egy nagyon nagy és drága lyukkártyás számítógép használatát igényelte, amelyhez csak korlátozott hozzáférése volt.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 226.78,
  "end": 237.42
 },
 {
  "input": "And the programs he kept putting through it kept failing, because every now and then a bit would get misread.",
  "translatedText": "Az általa készített programok futását folyamatos hibák akadályozták, mert a gép időnként félreolvasta a biteket.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 237.8,
  "end": 242.4
 },
 {
  "input": "Frustration being the crucible of invention, he got so fed up that he invented the world's first error correction code.",
  "translatedText": "Mivel a frusztráció a találékonyság bölcsője, annyira elege lett, hogy feltalálta a világ első hibajavító kódját.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 243.12,
  "end": 248.42
 },
 {
  "input": "There are many different ways to frame Hamming codes, but as a first pass we're going to go through it the way Hamming himself thought about them.",
  "translatedText": "A Hamming-kód értelmezésének sokféle módja van, de érdemes azt a gondolatmenetet követni, amellyel Hamming is rájött a nyitjára.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 249.06,
  "end": 255.38
 },
 {
  "input": "Let's use an example that's simple, but not too simple, a block of 16 bits.",
  "translatedText": "Használjunk egy egyszerű, de nem túl egyszerű példát, egy 16 bites blokkot.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 256.52,
  "end": 260.94
 },
 {
  "input": "We'll number the positions of these bits from 0 up to 15.",
  "translatedText": "Számozzuk meg a bitek pozícióit 0-tól 15-ig.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 261.82,
  "end": 264.74
 },
 {
  "input": "The actual data we want to store is only going to make up 12 of these bits, while 4 of the positions are going to be reserved as a kind of redundancy.",
  "translatedText": "A tényleges tárolni kívánt adatok ebből csak 12 bitet tesznek ki, míg a maradék 4 helyet egyfajta redundanciaként tartjuk fenn.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 265.62,
  "end": 273.0
 },
 {
  "input": "The word redundant here doesn't simply mean copy, after all, those 4 bits don't give us enough room to blindly copy the data.",
  "translatedText": "A redundáncia szó itt nem egyszerűen másolatot jelent, elvégre az a 4 bit nem elegendő az adatok gondolkodás nélküli többszörözésére.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 273.9,
  "end": 280.04
 },
 {
  "input": "Instead, they'll need to be a much more nuanced and clever kind of redundancy, not adding any new information, but adding resilience.",
  "translatedText": "Ehelyett sokkal árnyaltabb és okosabb redundanciát kell alkalmazni. Nem új információ hozzáadásával, hanem az ellenálló képesség növelésével.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 280.72,
  "end": 287.28
 },
 {
  "input": "You might expect these 4 special bits to come nicely packaged together, maybe at the end or something like that, but as you'll see, having them sit in positions which are powers of 2 allows for something that's really elegant by the end.",
  "translatedText": "Számíthatnál arra, hogy ez a 4 speciális bit szépen össze van csomagolva a blokk végén, vagy valami hasonló, de amint látni fogod, sokkal elegánsabb megoldás adódik, ha a 2 hatványainak helyén vannak.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 288.6,
  "end": 299.62
 },
 {
  "input": "It also might give you a little hint about how this scales for larger blocks.",
  "translatedText": "Ez egy kis támpontot adhat arra vonatkozóan is, hogy ez hogyan skálázódik nagyobb blokkok esetén.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 300.2,
  "end": 303.54
 },
 {
  "input": "Also, technically it ends up being only 11 bits of data, you'll find there's a mild nuance for what goes on at position 0, but don't worry about that for now.",
  "translatedText": "Mellékesen a gyakorlatban csak 11 bit hasznos adat lesz, mint ahogy később látni fogod van egy apróság ami a 0. pozíció tartalmát meghatározza, de még korai ezzel foglalkozni.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 304.9,
  "end": 313.26
 },
 {
  "input": "Like any error correction algorithm, this will involve two players, a sender, who's responsible for setting these 4 special bits, and then a receiver, who's responsible for performing some kind of check and then correcting the errors.",
  "translatedText": "Mint minden hibajavító algoritmusban, ebben is két szereplő vesz részt: egy feladó, aki a 4 speciális bit beállításáért felelős, és egy vevő, aki valamilyen ellenőrzés elvégzéséért, és a hibák kijavításáért felelős.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 314.14,
  "end": 325.54
 },
 {
  "input": "Of course, the words sender and receiver really refer to machines or software that's doing checks, and the idea of a message is meant really broadly, to include things like storage.",
  "translatedText": "Természetesen a feladó és a címzett szavak valójában az ellenőrzéseket végző gépekre vagy szoftverekre utalnak, és az üzenet fogalma nagyon tágan értendő, hogy olyan dolgokat is magában foglaljon, mint a tárolás.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 326.3,
  "end": 334.74
 },
 {
  "input": "After all, storing data is the same thing as sending a message, just from the past to the future, instead of from one place to another.",
  "translatedText": "Végül is az adatok tárolása ugyanaz, mint egy üzenet küldése, csak a múltból a jövőbe, nem pedig egyik helyről a másikra.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 335.34,
  "end": 341.68
 },
 {
  "input": "So that's the setup, but before we can dive in, we need to talk about a related idea which was fresh on Hamming's mind in the time of his discovery, a method which lets you detect any single bit errors, but not to correct them, known in the business as a parity check.",
  "translatedText": "Tehát ez a kiindulási pontunk. Mielőtt továbbmegyünk, beszélnünk kell egy kapcsolódó ötletről, amely komoly szerepet játszott Hamming felfedezésében. Ez a módszer lehetővé teszi, hogy bármilyen egy bites hibát észleljünk, ám a kijavításában nem segít. A szakmában ez paritásellenőrzésként ismeretes.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 342.56,
  "end": 356.3
 },
 {
  "input": "For a parity check, we separate out only one single bit that the sender is responsible for tuning, and the rest are free to carry a message.",
  "translatedText": "A paritásellenőrzéshez csak egyetlen bit szükséges, amely értékét a küldő állítja be a többi üzenetet hordozó bit alapján.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 356.88,
  "end": 363.82
 },
 {
  "input": "The only job of this special bit is to make sure that the total number of 1s in the message is an even number.",
  "translatedText": "Ennek a speciális bitnek az az egyetlen feladata, hogy vele együtt az üzenetben szereplő 1-ek száma páros szám legyen.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 364.88,
  "end": 371.28
 },
 {
  "input": "So for example right now, that total number of 1s is 7, that's odd, so the sender needs to flip that special bit to be a 1, making the count even.",
  "translatedText": "Ebben a példában jelenleg 7 darab 1-es van. Ez páratlan, tehát a küldőnek 0-ról 1-re kell állítania a speciális bitet, hogy az 1-esek száma páros legyen.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 372.08,
  "end": 379.96
 },
 {
  "input": "But if the block had already started off with an even number of 1s, then this special bit would have been kept at a 0.",
  "translatedText": "De ha a blokk már páros számú 1-essel indult volna, akkor ez a speciális bit 0 maradt volna.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 380.8,
  "end": 386.42
 },
 {
  "input": "This is pretty simple, deceptively simple, but it's an incredibly elegant way to distill the idea of change anywhere in a message to be reflected in a single bit of information.",
  "translatedText": "Ez roppant egyszerű, de hihetetlenül elegáns módja annak, hogy az üzenetben bárhol végbemenő változás eredménye, egyetlen bitnyi információban tükröződjön.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 387.34,
  "end": 396.78
 },
 {
  "input": "Notice if any bit of this message gets flipped, either from 0 to 1 or 1 to 0, it changes the total count of 1s from being even to being odd.",
  "translatedText": "Figyeljük meg, hogy ha az üzenet bármelyik bitje felcserélődik, akár 0-ról 1-re, akár 1-ről 0-ra, akkor az 1-ek száma párosról páratlanra változik.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 397.5,
  "end": 406.54
 },
 {
  "input": "So if you're the receiver, you look at this message, and you see an odd number of 1s, you can know for sure that some error has occurred, even though you might have no idea where it was.",
  "translatedText": "Tehát ha a címzettként megnézed ezt az üzenetet, és páratlan számú 1-est látsz, akkor biztosan tudhatod, hogy valamilyen hiba történt, még ha fogalmad sincs, hogy hol volt az.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 407.98,
  "end": 417.46
 },
 {
  "input": "In the jargon, whether a group of bits has an even or an odd number of 1s is known as its parity.",
  "translatedText": "A szakzsargonban a bitek páros vagy páratlan számú 1-est tartalmazó csoportját paritásnak nevezik.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 418.5,
  "end": 423.34
 },
 {
  "input": "You could also use numbers and say the parity is 0 or 1, which is typically more helpful once you start doing math with the idea, and this special bit that the sender uses to control the parity is called the parity bit.",
  "translatedText": "Számokkal is jelölhetjük, hogy a paritás 0 vagy 1, ami akkor lesz nagyon hasznos, amint elkezdünk ezzel matekosan foglalkozni. Ezt a speciális bitet pedig, amellyel a küldő beállítja a paritást, paritásbitnek nevezzük.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 424.86,
  "end": 435.52
 },
 {
  "input": "And actually, we should be clear, if the receiver sees an odd parity, it doesn't necessarily mean there was just one error, there might have been 3 errors or 5 or any other odd number, but they can know for sure that it wasn't 0.",
  "translatedText": "Azzal érdemes tisztában lenni, ha a vevő páratlan paritást lát, az nem feltétlenül azt jelenti, hogy csak egy hiba volt, lehet, hogy 3 hiba volt, vagy 5, vagy bármilyen más páratlan szám, de biztosan tudhatjuk hogy nem 0.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 437.56,
  "end": 449.26
 },
 {
  "input": "On the other hand, if there had been 2 errors, or any even number of errors, that final count of 1s would still be even, so the receiver can't have full confidence that an even count necessarily means the message is error-free.",
  "translatedText": "Másrészt, ha 2 vagy páros számú hiba történt, az 1-ek száma továbbra is páros marad, így a fogadó nem lehet teljesen biztos abban, hogy a páros szám szükségszerűen azt jelenti, hogy az üzenet hibamentes.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 449.98,
  "end": 462.3
 },
 {
  "input": "You might complain that a message which gets messed up by only 2 bit flips is pretty weak, and you would be absolutely right.",
  "translatedText": "Mondhatnád, hogy csekély annak az esélye, hogy az üzenet pontosan 2 bitje módosuljon egyszerre, és teljesen igazad lenne.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 462.84,
  "end": 469.08
 },
 {
  "input": "Keep in mind, though, there is no method for error detection or correction that could give you 100% confidence that the message you receive is the one the sender intended.",
  "translatedText": "De ne feledd azonban, hogy nincs olyan hibaészlelési vagy -javítási módszer, amellyel 100%-ban meggyőződhetnél afelől, hogy a kapott üzenet a küldő szándéka szerinti.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 469.7,
  "end": 478.9
 },
 {
  "input": "After all, enough random noise could always change one valid message into another valid message just by pure chance.",
  "translatedText": "Végtére is, a véletlenszerű zaj megváltoztathatja az egyik érvényes üzenetet akár épp egy másik érvényes üzenetté.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 479.58,
  "end": 485.44
 },
 {
  "input": "Instead, the goal is to come up with a scheme that's robust up to a certain maximum number of errors, or maybe to reduce the probability of a false positive like this.",
  "translatedText": "Ehelyett az a cél, hogy egy bizonyos maximális számú hibáig robusztus sémát dolgozzunk ki, vagy csökkentsük az ehhez hasonló téves pozitív eredmény valószínűségét.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 486.24,
  "end": 495.38
 },
 {
  "input": "Parity checks on their own are pretty weak, but by distilling the idea of change across a full message down to a single bit, what they give us is a powerful building block for more sophisticated schemes.",
  "translatedText": "A paritásellenőrzések önmagukban meglehetősen gyengék, ellenben kifejezetten hasznosak, ha ezt az üzeneten belül bekövetkezett változás érzékelésének gondolatát építőelemként tudjuk felhasználni.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 496.26,
  "end": 507.16
 },
 {
  "input": "For example, as Hamming was searching for a way to identify where an error happened, not just that it happened, his key insight was that if you apply some parity checks not to the full message, but to certain carefully selected subsets, you can ask a more refined series of questions that pin down the location of any single bit error.",
  "translatedText": "Hamming kulcsfontosságú meglátása az volt, hogy ha a paritásellenőrzést nem a teljes üzenetre, hanem bizonyos gondosan kiválasztott részhalmazokra alkalmazza, akkor a hiba létezésének detekcióján felül a hiba helyét is könnyebben azonosítani lehet. Egy kifinomult kérdéssort tehetünk fel, amely meghatározza bármely bithiba helyét.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 507.94,
  "end": 525.94
 },
 {
  "input": "The overall feeling is a bit like playing a game of 20 questions, asking yes or no queries that chop the space of possibilities in half.",
  "translatedText": "Úgy is fel lehet fogni, mintha egy 20 kérdésből álló játékot játszanánk, ahol eldöntendő kérdéseket teszünk fel, amelyek kettévágják a lehetőségek terét.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 526.68,
  "end": 533.38
 },
 {
  "input": "For example, let's say we do a parity check just on these 8 bits, all of the odd numbered positions.",
  "translatedText": "Tegyük fel, hogy például csak ezen a 8 biten végzünk paritásellenőrzést, vagyis az összes páratlanul számozott pozícióban.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 534.16,
  "end": 539.38
 },
 {
  "input": "Then, if an error is detected, it gives the receiver a little more information about where specifically the error is, namely that it's in an odd position.",
  "translatedText": "Ezután, ha a vevő hibát észlel, egy kicsit több információt kap arról, hogy pontosan hol van a hiba, nevezetesen, hogy egy páratlan pozícióban.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 540.1,
  "end": 548.24
 },
 {
  "input": "If no error is detected among those 8 bits, it either means there's no error at all, or it sits somewhere in the even positions.",
  "translatedText": "Ha a 8 bit között nem észlelünk hibát, az vagy azt jelenti, hogy egyáltalán nincs hiba, vagy valahol a páros pozíciók között van.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 548.94,
  "end": 556.24
 },
 {
  "input": "You might think that limiting a parity check to half the bits makes it less effective, but when it's done in conjunction with other well-chosen checks, it counter-intuitively gives us something a lot more powerful.",
  "translatedText": "Azt gondolhatnád, hogy a paritás-ellenőrzés hatásossága csökken, ha csak a bitek felére korlátozzuk, de más jól megválasztott ellenőrzésekkel együtt végezve, ellentmondásos módon sokkal hasznosabbá válik.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 557.18,
  "end": 567.2
 },
 {
  "input": "To actually set up that parity check, remember, it requires earmarking some special bit that has control for the parity of that full group.",
  "translatedText": "A paritásellenőrzés tényleges használatához, ne feledjük, hogy ehhez meg kell jelölni egy speciális bitet, amely az adott teljes csoport paritását vezérli.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 569.24,
  "end": 576.62
 },
 {
  "input": "Here let's just choose position 1.",
  "translatedText": "Itt most válasszuk az 1-es pozíciót.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 577.48,
  "end": 579.18
 },
 {
  "input": "For the example shown, the parity of these 8 bits is currently odd, so the sender is responsible for toggling that parity bit, and now it's even.",
  "translatedText": "A bemutatott példában a 8 bit paritása jelenleg páratlan, így a feladó feladata a paritásbit átkapcsolása. Így most már páros.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 579.72,
  "end": 586.98
 },
 {
  "input": "This is only 1 out of 4 parity checks that we'll do.",
  "translatedText": "Ez csak 1 a 4 paritás-ellenőrzésből, amelyet elvégzünk.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 587.94,
  "end": 590.68
 },
 {
  "input": "The second check is among the 8 bits on the right half of the grid, at least as we've drawn it here.",
  "translatedText": "A második ellenőrzés a rács jobb felén lévő 8 bitet nézi, legalábbis itt így rajzoltuk.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 590.92,
  "end": 596.3
 },
 {
  "input": "This time we might use position 2 as a parity bit.",
  "translatedText": "Ezúttal a 2. pozíciót használhatjuk paritásbitként.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 596.68,
  "end": 599.58
 },
 {
  "input": "So these 8 bits already have an even parity, and the sender can feel good leaving that bit number 2 unchanged.",
  "translatedText": "Tehát ez a 8 bit már páros paritású, és a feladó nyugodtan hagyhatja a 2. bitet változatlanul.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 600.02,
  "end": 606.06
 },
 {
  "input": "Then on the other end, if the receiver checks the parity of this group and they find that it's odd, they'll know that the error is somewhere among these 8 bits on the right.",
  "translatedText": "A másik oldalon, ha a vevő ellenőrzi ennek a csoportnak a paritását, és azt találja, hogy az páratlan, akkor tudni fogja, hogy a hiba valahol a jobb oldali 8 bit között van.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 607.02,
  "end": 615.38
 },
 {
  "input": "Otherwise, it means either there's no error, or the error is somewhere on the left half.",
  "translatedText": "Ellenkező esetben ez jelentheti azt, hogy nincs hiba, vagy a hibának a bal oldalon kell lennie.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 615.82,
  "end": 620.58
 },
 {
  "input": "Or I guess there could have been two errors, but for right now we're going to assume that there's at most one error in the entire block.",
  "translatedText": "Vagy persze, lehetett volna két hiba is, de egyelőre feltételezzük, hogy az egész blokkban legfeljebb egy hiba van.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 621.12,
  "end": 626.5
 },
 {
  "input": "Things break down completely for more than that.",
  "translatedText": "Ennél több hibánál teljesen összeomlanak a dolgok.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 626.94,
  "end": 628.74
 },
 {
  "input": "Here, before we look at the next two checks, take a moment to think about what these first two allow us to do when you consider them together.",
  "translatedText": "Mielőtt megnézzük a következő két ellenőrzést, szánjunk egy pillanatot arra, hogy átgondoljuk, mit tesz lehetővé számunkra ez az első kettő, ha együtt vesszük őket figyelembe.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 629.16,
  "end": 635.1
 },
 {
  "input": "Let's say you detect an error among the odd columns and among the right half.",
  "translatedText": "Tegyük fel, hogy a páratlan oszlopok között és a jobb oldali felénél észlelünk hibát.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 635.8,
  "end": 639.66
 },
 {
  "input": "It necessarily means the error is somewhere in the last column.",
  "translatedText": "Ez szükségszerűen azt jelenti, hogy a hiba valahol az utolsó oszlopban van.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 640.2,
  "end": 643.04
 },
 {
  "input": "If there was no error in the odd column but there was one in the right half, that tells you it's in the second to last column.",
  "translatedText": "Ha a páratlan oszlopban nem volt hiba, de a jobb felében volt, akkor az azt jelenti, hogy az utolsó előtti oszlopban van.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 643.82,
  "end": 649.7
 },
 {
  "input": "Likewise, if there is an error in the odd columns but not in the right half, you know that it's somewhere in the second column.",
  "translatedText": "Hasonlóképpen, ha a páratlan oszlopokban van hiba, de a jobb felében nincs, akkor tudjuk, hogy valahol a második oszlopban van a hiba.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 650.44,
  "end": 656.02
 },
 {
  "input": "And then if neither of those two parity checks detects anything, it means the only place that an error could be is in that leftmost column.",
  "translatedText": "És ha a két paritásellenőrzés egyike sem észlel semmit, akkor ez azt jelenti, hogy az egyetlen hely, ahol hiba lehet, az a bal szélső oszlop.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 656.02,
  "end": 663.12
 },
 {
  "input": "But it also might simply mean there's no error at all.",
  "translatedText": "De könnyen lehet, hogy egyáltalán nincs hiba.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 663.34,
  "end": 666.12
 },
 {
  "input": "Which is all a rather belabored way to say that two parity checks let us pin down the column.",
  "translatedText": "Mindez eléggé elnagyoltan azt jelenti, hogy két paritás-ellenőrzéssel be tudjuk lőni az oszlopot.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 666.3,
  "end": 670.84
 },
 {
  "input": "From here, you can probably guess what follows.",
  "translatedText": "Innen valószínűleg ki tudod találni, mi következik.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 671.48,
  "end": 673.64
 },
 {
  "input": "We do basically the same thing but for the rows.",
  "translatedText": "Alapvetően ugyanezt tesszük, csak a sorokra.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 673.8,
  "end": 676.14
 },
 {
  "input": "There's going to be a parity check on the odd rows, using position 4 as a parity bit.",
  "translatedText": "Lesz egy paritásellenőrzés a páratlan sorokra, a 4-es pozíciót használva paritásbitként.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 676.44,
  "end": 680.9
 },
 {
  "input": "So in this example, that group already has an even parity, so bit 4 would be set to a 0.",
  "translatedText": "Ebben a példában tehát a csoport már páros paritású, így a 4. bit 0-ra lesz állítva.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 681.38,
  "end": 685.82
 },
 {
  "input": "And finally, there's a parity check on the bottom two rows, using position 8 as a parity bit.",
  "translatedText": "Végül az alsó két sorra végzünk paritásellenőrzést, a 8-as pozíciót használva paritásbitként.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 686.56,
  "end": 691.58
 },
 {
  "input": "In this case, it looks like the sender needs to turn that bit 8 on in order to give the group even parity.",
  "translatedText": "Ebben az esetben úgy tűnik, hogy a küldőnek be kell kapcsolnia a 8-as bitet, hogy a csoportnak páros paritást adjon.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 692.12,
  "end": 696.82
 },
 {
  "input": "Just as the first two checks let us pin down the column, these next two let you pin down the row.",
  "translatedText": "Ahogy az első két ellenőrzéssel az oszlopot, úgy a másik kettővel a sort lehet meghatározni.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 697.7,
  "end": 701.84
 },
 {
  "input": "As an example, imagine that during the transmission there's an error at, say, position 3.",
  "translatedText": "Képzeljük el, hogy az átvitel során hiba lép fel, mondjuk a 3. pozícióban.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 702.88,
  "end": 707.54
 },
 {
  "input": "Well, this affects the first parity group, and it also affects the second parity group, so the receiver knows that there's an error somewhere in that right column.",
  "translatedText": "Nos, ez érinti az első paritáscsoportot, és érinti a második paritáscsoportot is, így a vevő tudja, hogy valahol a jobb oldali oszlopban van a hiba.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 708.18,
  "end": 715.56
 },
 {
  "input": "But it doesn't affect the third group, and it doesn't affect the fourth group.",
  "translatedText": "De nem érinti a harmadik csoportot, és nem érinti a negyedik csoportot.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 716.1,
  "end": 720.54
 },
 {
  "input": "And that lets the receiver pinpoint the error up to the first row, which necessarily means position 3, so they can fix the error.",
  "translatedText": "Ez lehetővé teszi a vevő számára, hogy a hibát az első sorig, azaz szükségszerűen a 3. pozícióig lokalizálja, és így kijavíthassa a hibát.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 721.24,
  "end": 727.52
 },
 {
  "input": "You might enjoy taking a moment to convince yourself that the answers to these four questions really will always let you pin down a specific location, no matter where they turn out to be.",
  "translatedText": "Magad számára is meggyőződhetsz arról, hogy erre a négy kérdésre adott válaszok valóban mindig lehetővé teszik egy konkrét helyszín meghatározását, bármelyikről is legyen szó.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 728.58,
  "end": 737.1
 },
 {
  "input": "In fact, the astute among you might even notice a connection between these questions and binary counting.",
  "translatedText": "Sőt, az éles eszűek talán még azt is észreveszik, hogy van kapcsolat e kérdések és a bináris számolás között.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 737.72,
  "end": 743.06
 },
 {
  "input": "And if you do, again let me emphasize, pause, try for yourself to draw the connection before I spoil it.",
  "translatedText": "És még egyszer hangsúlyozom. Nyugodtan tarts szünetet, próbáld meg felfedezni az összefüggést, mielőtt spoilerezem.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 743.5,
  "end": 748.92
 },
 {
  "input": "If you're wondering what happens if a parity bit itself gets affected, well, you can just try it.",
  "translatedText": "Ha kíváncsi vagy, mi történik, ha egy paritásbit maga is sérül, nos, csak próbáld ki.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 750.5,
  "end": 756.06
 },
 {
  "input": "Take a moment to think about how any error among these four special bits is going to be tracked down just like any other, with the same group of four questions.",
  "translatedText": "Szánj egy pillanatot arra, hogy végig gondold azt, hogy miért lehetséges e négy különleges bitnél bármilyen hibát ugyanúgy nyomon követni, mint a többi bitnél, ugyanannak a négy kérdésnek a segítségével.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 756.44,
  "end": 764.18
 },
 {
  "input": "It doesn't really matter, since at the end of the day what we want is to protect the message bits, the error correction bits are just riding along.",
  "translatedText": "De mindez nem is igazán számít, mivel végső soron az üzenet bitjeit akarjuk védeni, a hibajavító bitek csak kísérik a folyamatot.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 767.06,
  "end": 773.1
 },
 {
  "input": "But protecting those bits as well is something that naturally falls out of the scheme as a byproduct.",
  "translatedText": "Ezen bitek védelme csak természetesen melléktermékként esik ki a módszerből.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 773.6,
  "end": 777.82
 },
 {
  "input": "You might also enjoy anticipating how this scales.",
  "translatedText": "Azt is izgalmasnak találhatod, hogy mindez hogyan skálázódik.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 779.2,
  "end": 781.76
 },
 {
  "input": "If we used a block of size 256 bits, for example, in order to pin down a location, you need only eight yes or no questions to binary search your way down to some specific spot.",
  "translatedText": "Ha például egy 256 bit méretű blokkban akarjunk egy helyet meghatározni, akkor csak nyolc eldöntendő kérdésre lenne szükségünk ahhoz, hogy ezzel a bináris kereséssel célt érjünk.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 782.3,
  "end": 792.78
 },
 {
  "input": "And remember, each question requires giving up only a single bit to set the appropriate parity check.",
  "translatedText": "És ne feledjük, hogy minden kérdésnél csak egyetlen bitet kell feladni a megfelelő paritásellenőrzéshez.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 795.64,
  "end": 800.5
 },
 {
  "input": "Some of you may already see it, but we'll talk later about the systematic way to find what these questions are in just a minute or two.",
  "translatedText": "Néhányan talán már látják, de egy-két perc múlva beszélek majd arról is, hogy hogyan lehet szisztematikusan megtalálni, hogy mik ezek a kérdések.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 803.16,
  "end": 809.36
 },
 {
  "input": "Hopefully this sketch is enough to appreciate the efficiency of what we're developing here.",
  "translatedText": "Remélhetőleg ez a vázlat elég ahhoz, hogy értékelni tudd ennek az algoritmusnak a hatékonyságát, amit most fejlesztettünk ki közösen.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 809.88,
  "end": 813.66
 },
 {
  "input": "Everything except for those eight highlighted parity bits can be whatever you want it to be, carrying whatever message or data you want.",
  "translatedText": "Ezen nyolc kiemelt paritásbiten kívül az összes többit arra használhatod amire csak akarod. Bármilyen üzenetet vagy adatot tárolhatsz benne.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 813.66,
  "end": 821.0
 },
 {
  "input": "The eight bits are redundant in the sense that they're completely determined by the rest of the message, but it's in a much smarter way than simply copying the message as a whole.",
  "translatedText": "Ez a nyolc bit persze redundáns abban az értelemben, hogy az üzenet többi része határozza meg őket, de ez sokkal okosabb módszer, mint az egész üzenetet lemásolása.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 821.72,
  "end": 830.02
 },
 {
  "input": "And still, for so little given up, you would be able to identify and fix any single bit error.",
  "translatedText": "És még ilyen csekély áldozat ellenében is képes leszel megtalálni és kijavítani minden egyszeres bit hibát.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 833.6,
  "end": 838.38
 },
 {
  "input": "Well, almost.",
  "translatedText": "Nos, majdnem.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 839.2,
  "end": 840.4
 },
 {
  "input": "Okay, so the one problem here is that if none of the four parity checks detect an error, meaning that the specially selected subsets of eight bits all have even parities, just like the sender intended, then it either means there was no error at all, or it narrows us down into position zero.",
  "translatedText": "Oké, tehát az egyetlen probléma itt az, hogy ha a négy paritásellenőrzés egyike sem észlel hibát, ami azt jelenti, hogy a nyolc bit speciálisan kiválasztott részhalmazai mind páros paritásúak, ahogyan a feladó tervezte, akkor ez vagy azt jelenti, hogy egyáltalán nem volt hiba, vagy leszűkít minket a nulladik pozícióra.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 840.96,
  "end": 856.86
 },
 {
  "input": "You see, with four yes or no questions, we have 16 possible outcomes for our parity checks, and at first that feels perfect for pinpointing one out of 16 positions in the block, but you also need to communicate a 17th outcome, the no error condition.",
  "translatedText": "Négy eldöntendő kérdéssel 16 lehetséges kimenetelű paritásellenőrzésünk van, és ez elsőre tökéletesnek tűnhet ahhoz, hogy a blokk 16 pozíciójából mindegyikre mutathassunk, de sajnos egy 17. kimenet is kell, a hiba nélküli állapot jelzése.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 857.74,
  "end": 871.9
 },
 {
  "input": "The solution here is actually pretty simple.",
  "translatedText": "A megoldás itt valójában nagyon egyszerű.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 873.02,
  "end": 874.86
 },
 {
  "input": "Just forget about that zeroth bit entirely.",
  "translatedText": "Egyelőre ne foglalkozzunk a nulladik bittel.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 875.28,
  "end": 877.3
 },
 {
  "input": "So when we do our four parity checks and we see that they're all even, it unambiguously means that there is no error.",
  "translatedText": "Amikor tehát elvégezzük a négy paritásellenőrzést, és azt látjuk, hogy mindegyiket párosnak találjuk, az egyértelműen azt jelenti, hogy nincs hiba.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 877.84,
  "end": 883.46
 },
 {
  "input": "What that means is rather than working with a 16-bit block, we work with a 15-bit block, where 11 of the bits are free to carry a message and four of them are there for redundancy.",
  "translatedText": "Ehhez az kell, hogy 16 bites blokkok helyett, 15 bites blokkokkal dolgozzunk, ahol 11 bit szabadon hordozhatja az üzenetet, négy pedig a redundancia miatt van.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 884.24,
  "end": 893.22
 },
 {
  "input": "And with that, we now have what people in the business would refer to as a 15-11 Hamming code.",
  "translatedText": "És ezzel el is jutottunk ahhoz, amit a szakértők 15-11-es Hamming-kódnak neveznek.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 893.78,
  "end": 898.8
 },
 {
  "input": "That said, it is nice to have a block size that's a clean power of two, and there's a clever way that we can keep that zeroth bit around and get it to do a little extra work for us.",
  "translatedText": "Ennek ellenére jó, ha van egy olyan blokkméretünk, amely kettő hatványa, és van egy okos módja annak, hogy a nulladik bitet megtartsuk, és rávegyük, hogy egy kis extra munkát végezzen el nekünk.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 899.86,
  "end": 908.14
 },
 {
  "input": "If we use it as a parity bit across the whole block, it lets us actually detect, even though we can't correct, two-bit errors.",
  "translatedText": "Ha az egész blokkra vonatkozó paritásbitként használjuk, akkor lehetővé teszi számunkra a kétbites hibák felismerését, még ha nem is tudjuk kijavítani azokat.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 908.7,
  "end": 915.54
 },
 {
  "input": "Here's how it works.",
  "translatedText": "Így működik.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 916.16,
  "end": 916.82
 },
 {
  "input": "After setting those four special error correcting bits, we set that zeroth one so that the parity of the full block is even, just like a normal parity check.",
  "translatedText": "A négy speciális hibajavító bit beállítása után a nulladik bitet úgy állítjuk be, hogy a teljes blokk paritása páros legyen, akárcsak a többi esetben.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 917.18,
  "end": 924.94
 },
 {
  "input": "Now, if there's a single bit error, then the parity of the full block toggles to be odd, but we would catch that anyway, thanks to the four error correcting checks.",
  "translatedText": "Most, ha egyetlen bit hiba van, akkor a teljes blokk paritása páratlanná változik, de a négy hibajavító ellenőrzésnek köszönhetően ezt mindenképpen észrevennénk.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 925.7,
  "end": 933.6
 },
 {
  "input": "However, if there's two errors, then the overall parity is going to toggle back to being even, but the receiver would still see that there's been at least some error because of what's going on with those four usual parity checks.",
  "translatedText": "Ha azonban két hiba van, akkor a teljes paritás visszaváltozik párosra, de a vevő még mindig látja, hogy valami hiba történt abból, ami a négy másik paritásellenőrzéssel történik.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 934.16,
  "end": 945.18
 },
 {
  "input": "So if they notice an even parity overall, but something non-zero happening with the other checks, it tells them there were at least two errors.",
  "translatedText": "Ha tehát azt vesszük észre, hogy a paritás összességében páros, de a többi ellenőrzésnél valami nem nulla, akkor ez azt jelenti, hogy legalább két hiba történt.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 945.18,
  "end": 952.7
 },
 {
  "input": "Isn't that clever?",
  "translatedText": "Okos, nem?",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 953.52,
  "end": 954.0
 },
 {
  "input": "Even though we can't correct those two-bit errors, just by putting that one little bothersome zeroth bit back to work, it lets us detect them.",
  "translatedText": "Még ha nem is tudjuk kijavítani ezeket a kétbites hibákat, csak azáltal, hogy azt a kis zavaró nulladik bitet újra munkába állítjuk, lehetővé teszi számunkra, hogy felismerjük őket.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 954.3,
  "end": 961.26
 },
 {
  "input": "This is pretty standard, it's known as an extended Hamming code.",
  "translatedText": "Ez a szabványos, kiterjesztett Hamming-kódként ismert.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 962.26,
  "end": 965.22
 },
 {
  "input": "Technically speaking, you now have a full description of what a Hamming code does, at least for the example of a 16-bit block, but I think you'll find it more satisfying to check your understanding and solidify everything up to this point by doing one full example from start to finish yourself.",
  "translatedText": "Gyakorlatilag most már teljes rálátásod van arra, hogy mit csinál egy Hamming-kód, legalábbis a 16 bites blokk példájában. De azt hiszem, sokkal teljesebbnek fogod találni, ha ellenőrzöd a megértésedet és megszilárdítasz mindent, amit eddig a pontig megértettél, egy teljes példa megoldásával az elejétől a végéig.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 966.54,
  "end": 981.32
 },
 {
  "input": "I'll step through it with you though so you can check yourself.",
  "translatedText": "De azért végigkísérlek, hogy ellenőrizhesd magadat.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 982.08,
  "end": 984.3
 },
 {
  "input": "To set up a message, whether that's a literal message that you're translating over space, or some data that you want to store over time, the first step is to divide it up into 11-bit chunks.",
  "translatedText": "Egy üzenet létrehozásához, legyen szó akár szó szerinti üzenetről, amelyet küldéshez kell kódolni, vagy valamilyen adatról, amelyet tárolni akarunk, az első lépés az, hogy 11 bites darabokra osztjuk.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 985.12,
  "end": 994.66
 },
 {
  "input": "Each chunk is going to get packaged into an error-resistant 16-bit block.",
  "translatedText": "Minden egyes darabot egy hibaálló 16 bites blokkba csomagolunk.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 995.58,
  "end": 999.76
 },
 {
  "input": "So let's take this one as an example and actually work it out.",
  "translatedText": "Vegyük tehát ezt példaként, és dolgozzuk ki.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 999.76,
  "end": 1003.22
 },
 {
  "input": "Go ahead, actually do it!",
  "translatedText": "Gyerünk, csináld csak meg!",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 1003.74,
  "end": 1004.94
 },
 {
  "input": "Pause and try putting together this block.",
  "translatedText": "Állj meg, és próbáld meg összerakni ezt a blokkot.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 1005.22,
  "end": 1007.02
 },
 {
  "input": "Okay, you ready?",
  "translatedText": "Oké, készen állsz?",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 1012.72,
  "end": 1013.68
 },
 {
  "input": "Remember, position 0 along with the other powers of 2 are reserved for error correction duty, so you start by placing the message bits in all of the remaining spots, in order.",
  "translatedText": "Ne feledjük, hogy a 0. pozíció és a többi 2-es hatvány a hibajavítási feladatra van fenntartva, ezért az üzenetbiteket az összes többi helyre kell elhelyezni, sorrendben.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 1014.24,
  "end": 1023.32
 },
 {
  "input": "You need this group to have an even parity, which it already does, so you should have set that parity bit in position 1 to be a 0.",
  "translatedText": "Ennek a csoportnak páros paritásúnak kell lennie, ami már megvan, ezért az 1-es pozícióban lévő paritásbitet 0-ra kellett állítani.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 1025.34,
  "end": 1032.34
 },
 {
  "input": "The next group starts off with an odd parity, so you should have set its parity bit to be 1.",
  "translatedText": "A következő csoport páratlan paritással kezdődik, ezért a paritásbitjét 1-esre kell állítani.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 1033.02,
  "end": 1037.88
 },
 {
  "input": "The group after that starts with an odd parity, so again you should have set its parity bit to 1.",
  "translatedText": "Az ezt követő csoport páratlan paritással kezdődik, ezért a paritásbitet ismét 1-re kell állítani.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 1039.16,
  "end": 1044.24
 },
 {
  "input": "And the final group also has an odd parity, meaning we set that bit in position 8 to be a 1.",
  "translatedText": "És az utolsó csoport is páratlan paritású, ami azt jelenti, hogy a 8-as pozícióban lévő bitet 1-esre állítjuk.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 1044.78,
  "end": 1050.06
 },
 {
  "input": "And then as the final step, the full block now has an even parity, meaning that you can set that bit number 0, the overarching parity bit, to be 0.",
  "translatedText": "Az utolsó lépésként a teljes blokk most már páros paritású, ami azt jelenti, hogy a 0-s számú bitet, az átfogó paritásbitet 0-ra állíthatjuk.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 1051.3,
  "end": 1060.32
 },
 {
  "input": "So as this block is sent off, the parity of the four special subsets and the block as a whole will all be even, or 0.",
  "translatedText": "Így amikor ez a blokk elküldésre kerül, a négy speciális részhalmaz és a blokk egészének paritása mind páros, azaz 0 lesz.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 1061.34,
  "end": 1068.14
 },
 {
  "input": "As the second part of the exercise, let's have you play the role of the receiver.",
  "translatedText": "A gyakorlat második részeként játsszuk el a fogadó szerepét.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 1068.82,
  "end": 1072.18
 },
 {
  "input": "Of course, that would mean you don't already know what this message is.",
  "translatedText": "Ez persze azt jelenti, hogy nem tudod, mi volt az eredeti üzenet.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 1073.48,
  "end": 1076.82
 },
 {
  "input": "Maybe some of you memorized it, but let's assume that you haven't.",
  "translatedText": "Talán néhányan közületek megjegyezték, de tegyük fel, hogy nem.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 1077.08,
  "end": 1079.78
 },
 {
  "input": "What I'm going to do is change either 0, 1, or 2 of the bits in that block, and then ask you to figure out what it is that I did.",
  "translatedText": "Azt fogom tenni, hogy megváltoztatom a blokk 0, 1 vagy 2 bitjét, majd megkérlek, hogy találd ki, mit csináltam.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 1080.02,
  "end": 1087.74
 },
 {
  "input": "So again, pause and try working it out.",
  "translatedText": "Tehát ismét szünet, és próbáld meg kidolgozni.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 1088.26,
  "end": 1090.81
 },
 {
  "input": "Okay, so you as the receiver now check the first parity group, and you can see that it's even, so any error that exists would have to be in an even column.",
  "translatedText": "Oké, tehát a fogadóként most ellenőrizheted az első paritáscsoportot, és láthatod, hogy az páros, tehát bármilyen hibának a páros oszlopban kell lennie.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 1098.79,
  "end": 1107.91
 },
 {
  "input": "The next check gives us an odd number, telling us both that there's at least one error, and narrowing us down into this specific column.",
  "translatedText": "A következő ellenőrzés páratlan számot ad, ami egyrészt azt jelzi, hogy legalább egy hiba van, másrészt pedig leszűkíti a kört erre a konkrét oszlopra.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 1109.69,
  "end": 1117.03
 },
 {
  "input": "The third check is even, chopping down the possibilities even further.",
  "translatedText": "A harmadik csekkolás páros, ami még tovább csökkenti a lehetőségeket.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 1118.55,
  "end": 1121.79
 },
 {
  "input": "And the last parity check is odd, telling us there's an error somewhere in the bottom, which by now we can see must be in position number 10.",
  "translatedText": "Az utolsó ellenőrzés pedig páratlan, és azt mondja, hogy valahol az alján van a hiba, amit mostanra már tudjuk, hogy a 10-es pozícióban kell lennie.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 1122.65,
  "end": 1129.65
 },
 {
  "input": "What's more, the parity of the whole block is odd, giving us confidence that there was one flip and not two.",
  "translatedText": "Ráadásul az egész blokk paritása páratlan, így biztosak lehetünk benne, hogy csak egy bit hiba volt, nem kettő.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 1131.49,
  "end": 1137.53
 },
 {
  "input": "If it's three or more, all bets are off.",
  "translatedText": "Ha három vagy több volt, akkor fogalmunk sincs.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 1138.07,
  "end": 1139.97
 },
 {
  "input": "After correcting that bit number 10, pulling out the 11 bits that were not used for correction gives us the relevant segment of the original message, which if you rewind and compare is indeed exactly what we started the example with.",
  "translatedText": "Miután kijavítottuk a 10-es számú bitet, a korrekcióra nem használt 11 bit kihúzásával megkapjuk az eredeti üzenet megfelelő szegmensét, amely, ha visszatekerjük és összehasonlítjuk, valóban pontosan az, amivel a példát kezdtük.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 1141.31,
  "end": 1154.39
 },
 {
  "input": "And now that you know how to do all this by hand, I'd like to show you how you can carry out the core part of all of this logic with a single line of Python code.",
  "translatedText": "És most, hogy már tudod, hogyan kell mindezt kézzel csinálni, szeretném megmutatni, hogyan tudod egyetlen sor Python kóddal végrehajtani ennek a logikának a központi részét.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 1155.71,
  "end": 1163.17
 },
 {
  "input": "You see, what I haven't told you yet is just how elegant this algorithm really is, how simple it is to get a machine to point to the position of an error, how to systematically scale it, and how we can frame all of this as one single operation rather than multiple separate parity checks.",
  "translatedText": "Amit még nem mutattam meg neked, az az, hogy mennyire elegáns ez az algoritmus, milyen egyszerű rávenni egy gépet, hogy rámutasson a hiba helyére. Hogyan lehet szisztematikusan növelni az adatok mennyiségét, és hogyan tudjuk mindezt egyetlen műveletként kezelni, nem pedig több különálló paritás-ellenőrzésként.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 1163.87,
  "end": 1178.75
 },
 {
  "input": "To see what I mean, come join me in part two.",
  "translatedText": "Hogy teljes megértsd ennek az algoritmusnak a működését csatlakozz hozzám a következő videóban, ami ennek a folytatása lesz.",
  "model": "DeepL",
  "n_reviews": 1,
  "start": 1179.43,
  "end": 1181.31
 }
]