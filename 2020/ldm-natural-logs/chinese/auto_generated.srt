1
00:00:00,000 --> 00:00:06,360
今天让我们继续以一个看似与视频标题无关的问题来打开话题。

2
00:00:06,980 --> 00:00:08,880
所以如果你们去3b1b。

3
00:00:09,280 --> 00:00:11,080
公司 直播，链接在描述中。

4
00:00:11,320 --> 00:00:13,180
你们都看过一些热身动画。

5
00:00:14,160 --> 00:00:17,100
我希望您对以下问题做出估计。

6
00:00:17,700 --> 00:00:20,280
看来你们中的一些人已经开始在这里提供答案了。

7
00:00:21,420 --> 00:00:26,200
考虑一万亿到一万亿加一千之间的数字。

8
00:00:26,740 --> 00:00:29,180
好吧，这个一千个整数的范围 相当高了。

9
00:00:29,720 --> 00:00:35,060
您猜以下哪一个最接近这些素数的比例？

10
00:00:35,740 --> 00:00:39,322
因此，如果你要经历一个艰苦的过程，你知道，

11
00:00:39,322 --> 00:00:42,905
查看一万亿 到一万亿加一千之间的所有数字，

12
00:00:42,905 --> 00:00:47,000
考虑其中哪些是素数， 你猜那里的相关比例是多少？

13
00:00:47,000 --> 00:00:48,580
所以不用担心做对或做错。

14
00:00:48,640 --> 00:00:51,780
我主要好奇人们对此的直觉在哪里。

15
00:00:52,660 --> 00:00:55,655
因此，虽然我们不一定需要进行这些艰苦的计算，

16
00:00:55,655 --> 00:00:59,060
但 我已经编写了一个简单的程序来为我们做到这一点。

17
00:00:59,060 --> 00:01:01,971
因此，如果我们转向 Python，

18
00:01:01,971 --> 00:01:05,396
它并不是世界上获取素数的最复杂的程序 ，

19
00:01:05,396 --> 00:01:07,280
但它会为我们完成工作。

20
00:01:07,280 --> 00:01:09,670
因此，如果我输入诸如“获取 0 到 50 

21
00:01:09,670 --> 00:01:12,060
之间的素数”之类的 内容，我们就会看一下。

22
00:01:12,100 --> 00:01:14,664
好的，里面有 2、3、5、7，所有您最喜欢的 

23
00:01:14,664 --> 00:01:17,340
0 到 50 之间的素数，您 都可以在那里找到。

24
00:01:17,580 --> 00:01:18,800
但也许您不喜欢这个范围。

25
00:01:18,900 --> 00:01:21,860
也许你想看看一千到一千五十之间。

26
00:01:22,460 --> 00:01:23,660
就这样吧。

27
00:01:23,800 --> 00:01:26,120
一千到一千五十之间有质数。

28
00:01:26,400 --> 00:01:27,480
而且数量还比较少。

29
00:01:27,640 --> 00:01:31,230
一般来说，随着你变得越来越大，素数变得越来越稀疏，

30
00:01:31,230 --> 00:01:35,540
 本质上是因为每个素数都有更多的选择来考虑它可以分解的内容。

31
00:01:35,880 --> 00:01:39,773
您知道，如果 您只是进行猜测并检查类似 143 之类的数字，

32
00:01:39,773 --> 00:01:42,240
您只需检查直到其平方根附近的所有数字。

33
00:01:42,520 --> 00:01:46,575
然而，如果你要检查一万亿左右，你就必须检查一百万个数 

34
00:01:46,575 --> 00:01:50,480
字的顺序，所有素数最多一百万，无论它们是否包含在内。

35
00:01:51,160 --> 00:01:56,671
因此，您可能会认为，当我们定义要获取所有素 数的列表时，

36
00:01:56,671 --> 00:02:00,607
您知道，获取一万亿（即 10 到 12 

37
00:02:00,607 --> 00:02:03,560
次）和一万亿加一千之间的素数。

38
00:02:05,580 --> 00:02:08,340
这涉及大量的数字运算才能真正找到这些素数。

39
00:02:08,400 --> 00:02:10,680
你可以通过以下事实 看出，我编写

40
00:02:10,680 --> 00:02:12,960
的程序不会是世界上最高效的程序。

41
00:02:13,240 --> 00:02:15,540
到达那里之前需要一点时间。

42
00:02:15,940 --> 00:02:18,400
我们稍后就可以查看该列表。

43
00:02:18,400 --> 00:02:22,520
但在之前我想先看看大家的想法。

44
00:02:22,600 --> 00:02:23,940
我们有一个伟大的分裂！

45
00:02:24,420 --> 00:02:26,640
哦，我喜欢这样分裂观众的问题。

46
00:02:26,640 --> 00:02:27,420
这总是很有趣。

47
00:02:27,920 --> 00:02:28,900
所以你怎么看？

48
00:02:28,960 --> 00:02:31,540
你认为那里素数的实际密度是多少？

49
00:02:32,100 --> 00:02:34,180
哦，正确答案只有第三名。

50
00:02:34,400 --> 00:02:37,260
通常在锁定数学中，正确答案总是位于最上面。

51
00:02:37,260 --> 00:02:38,420
所以这对我来说很令人兴奋。

52
00:02:38,820 --> 00:02:42,873
似乎大多数人或最大 数量的人（250 

53
00:02:42,873 --> 00:02:48,420
人中就有一个）认 为 D 在该范围内只会有四个素数。

54
00:02:48,760 --> 00:02:51,795
在那之后，人们认为只有千分之一，在那里，

55
00:02:51,795 --> 00:02:54,680
你知道， 素数非常罕见，只有千分之一。

56
00:02:54,960 --> 00:02:58,860
正确答案 是二十五分之一。

57
00:02:58,960 --> 00:03:00,940
所以比人们想象的要频繁得多。

58
00:03:01,400 --> 00:03:04,736
有趣的是，实际上，如果你向数学家问这个问题，

59
00:03:04,736 --> 00:03:07,770
他们 将能够很快告诉你正确的答案是什么，

60
00:03:07,770 --> 00:03:10,500
而不是因为他们正在做所有的数字运算。

61
00:03:10,500 --> 00:03:14,208
事实上 ，如果你和一位数学家交谈，他们会考虑这个问题，

62
00:03:14,208 --> 00:03:16,817
他们会在脑子里做一 点计算，他们会说，

63
00:03:16,817 --> 00:03:20,525
最接近的是二十五分之一，但实际上它会更接近， 你知道，

64
00:03:20,525 --> 00:03:22,860
每 27 或 28 人中就有一个。

65
00:03:22,880 --> 00:03:24,040
这样会更准确一些。

66
00:03:24,840 --> 00:03:26,060
您可能想知道他们是如何做到这一点的。

67
00:03:26,300 --> 00:03:30,000
因为如果我们查看计算机必须执行的数字运算，

68
00:03:30,000 --> 00:03:34,405
它必须检查我们正在查看的所有数字 的所有潜在因子，

69
00:03:34,405 --> 00:03:39,340
并且它确实为我们提供了一万亿到一万亿以上的所有素数一千。

70
00:03:39,340 --> 00:03:43,820
所以你可以看到，它们比零到一千之间的数字要稀疏。

71
00:03:43,820 --> 00:03:45,460
但其中的数量相当可观。

72
00:03:45,720 --> 00:03:49,060
你知道，我们有 1 万亿个 751 、1 万亿个 787。

73
00:03:49,060 --> 00:03:52,680
波音工程师可能很高兴看到它在那里。

74
00:03:53,000 --> 00:03:56,560
该列表的实际长度是 37 。

75
00:03:56,720 --> 00:03:58,160
所以那里有 37 个素数。

76
00:03:58,200 --> 00:04:02,060
所以千人中所占比例为0。

77
00:04:02,540 --> 00:04:05,836
37.或者按照我们的措辞方式，它是某物中的一，

78
00:04:05,836 --> 00:04:09,420
所以我们可 以取其倒数，然后用一千除以其中的数字。

79
00:04:09,420 --> 00:04:11,640
大约每 27 人中就有一人 。

80
00:04:12,240 --> 00:04:18,406
但数学家会说，我知道关于素数的一个非常可爱的事实，

81
00:04:18,406 --> 00:04:24,820
 即接近给定值（例如一万亿）的素数密度约为自然对数。

82
00:04:25,000 --> 00:04:29,300
因此，我将在此处输入数学点日志，它采用该数字的自然对数。

83
00:04:29,660 --> 00:04:33,180
如果您愿 意，我们可以检查文档告诉我们什么。

84
00:04:33,400 --> 00:04:36,580
它表示这将返回 x 给定底数的对数。

85
00:04:36,580 --> 00:04:39,395
如果未指定底数，则返回 自然对数，

86
00:04:39,395 --> 00:04:41,880
即 x 的以 e 为底的对数。

87
00:04:42,500 --> 00:04:46,385
提醒一下，如果有人需要一点对数含义的提醒，

88
00:04:46,385 --> 00:04:50,640
我们在上一讲中讨论了这一切，所 以请随意过来。

89
00:04:51,020 --> 00:04:54,386
但是当你有像 l in x 这样的表达式时，

90
00:04:54,386 --> 00:04:57,906
它告诉我们 x 以 e 为底的对 数等于 y，

91
00:04:57,906 --> 00:05:01,120
这与 e 的 y 次方等于 x 是一样的。

92
00:05:01,200 --> 00:05:04,000
它询问 e 等于 x 的问题。

93
00:05:04,260 --> 00:05:09,240
例如，10 的自然 对数约为 2。3. 

94
00:05:09,240 --> 00:05:13,730
如果您想在用 e 编写的指数与用 10 编写的指数之间进行 

95
00:05:13,730 --> 00:05:18,220
转换，这是一种有用的值，但 10 的自然对数约为 2。3. 

96
00:05:19,140 --> 00:05:22,120
所以这与 e 对 2 的意思是一样的。

97
00:05:22,380 --> 00:05:25,774
3 等于 10。现在可爱的事实是，素数，

98
00:05:25,774 --> 00:05:29,000
 它们的密度实际上与这个自然对数有关。

99
00:05:29,080 --> 00:05:33,460
如果我们取一万亿 的自然对数（这是定义我们的范

100
00:05:33,460 --> 00:05:37,840
围在该范围下限的数字 ），您会看到它是 27。

101
00:05:37,840 --> 00:05:42,800
这就是我们之前看到 的比率，对吧？

102
00:05:42,880 --> 00:05:44,860
一千除以我们的素数列表的长度。

103
00:05:44,860 --> 00:05:47,500
我的意思是，那是非常接近的。

104
00:05:47,840 --> 00:05:50,623
事实上，这种情况确实发生了，我不会，

105
00:05:50,623 --> 00:05:53,561
我可能不会称其为 我最喜欢的数学部分，

106
00:05:53,561 --> 00:05:56,036
因为我经常使用这个术语，但它肯 

107
00:05:56,036 --> 00:05:58,820
定会跻身最喜欢的前五名数学部分之列。

108
00:05:59,100 --> 00:06:02,980
以 e 为底的对数与素数有关。

109
00:06:04,180 --> 00:06:09,583
所以我想向你展示另一种与自然对数和素数之间的关系相关的可 

110
00:06:09,583 --> 00:06:14,800
爱事实，因为你可能想知道为什么我们称这个东西为自然对数？

111
00:06:15,020 --> 00:06:16,880
有很多对数，很多不同的底数。

112
00:06:17,200 --> 00:06:18,440
是什么让这个更自然？

113
00:06:18,860 --> 00:06:22,341
我认为你在自然界中看到它出现的次数越多 ，

114
00:06:22,341 --> 00:06:24,000
这个名字就越有意义。

115
00:06:24,580 --> 00:06:28,340
所以我要玩一款暂时看起来很奇怪的游戏。

116
00:06:28,800 --> 00:06:32,237
我将采用一个无限级数，例如，您知道，

117
00:06:32,237 --> 00:06:34,720
很 多人最喜欢的一个级数。

118
00:06:34,860 --> 00:06:38,645
如果你取 1 除以 1 加 1 除 4 加 1 除 

119
00:06:38,645 --> 00:06:40,974
9 加 1 除 16，一般来说，

120
00:06:40,974 --> 00:06:45,050
你总是取 1 除以 n 的平方，然后将所有这些数字相加，

121
00:06:45,050 --> 00:06:49,127
如果你不断地添加和添加它们，它们会 保持在某个界限以下，

122
00:06:49,127 --> 00:06:51,020
并且实际上会接近某个数字。

123
00:06:51,520 --> 00:06:54,726
这是欧洲的一个悬而 未决的问题，

124
00:06:54,726 --> 00:06:58,934
我认为伯努利的一位在巴塞尔提出了一段时间，

125
00:06:58,934 --> 00:07:03,543
 就像这个数字等于多少，最终欧拉，当时的天才，

126
00:07:03,543 --> 00:07:08,553
能够证明它 等于pi 的平方除以 6，这非常漂亮，

127
00:07:08,553 --> 00:07:12,160
pi 的想法与 平方的倒数相加有关。

128
00:07:12,420 --> 00:07:14,120
但它变得比这更疯狂。

129
00:07:14,460 --> 00:07:20,534
我将玩这个奇怪 的游戏，它会剔除看起来不像素数的术语，

130
00:07:20,534 --> 00:07:26,160
保留素 数，然后缩小那些对我们来说足够相似的素数。

131
00:07:26,160 --> 00:07:27,120
我会告诉你我的意思。

132
00:07:27,540 --> 00:07:29,520
所以 1 根本不是素数。

133
00:07:29,600 --> 00:07:31,160
我们甚至不打算将其包括在内。

134
00:07:31,980 --> 00:07:35,420
2 是质数，所以我将保留 1 除以 2 的平方项。

135
00:07:35,820 --> 00:07:39,580
3 是质数 ，所以我将保留 3 平方项中的 1。

136
00:07:39,960 --> 00:07:41,300
4、它不是素数。

137
00:07:41,700 --> 00:07:44,960
但我不会把它踢出去，因为它是素数的力量。

138
00:07:45,140 --> 00:07:49,060
所以我想说，4 平方项中的 1 可以保留，

139
00:07:49,060 --> 00:07:52,700
但因为 你只是素数的平方，所以我要把你缩小一半。

140
00:07:53,220 --> 00:07:53,540
好的？

141
00:07:53,540 --> 00:07:57,077
这可以说是你看起来有点像素数，但因为你只是它 的一个幂，

142
00:07:57,077 --> 00:07:59,420
所以我会根据这个幂来缩小你的大小。

143
00:08:00,340 --> 00:08:02,300
5 是素数，所以我们保留第五项。

144
00:08:03,060 --> 00:08:05,420
6、不是素数，也不是素数的幂。

145
00:08:05,580 --> 00:08:06,400
我们一点也不喜欢它。

146
00:08:06,500 --> 00:08:07,300
它被踢出去了。

147
00:08:07,800 --> 00:08:08,840
7、我们保留它。

148
00:08:09,140 --> 00:08:12,687
你可以大概明白我要说什么，但我会再写 几个例子，

149
00:08:12,687 --> 00:08:15,200
因为这是操纵系列的一种奇怪的方式。

150
00:08:15,260 --> 00:08:17,700
你可能会认为这根本不会给我们带来任何好处。

151
00:08:18,380 --> 00:08:21,759
8，它是素数的幂，但因为它是立方体，

152
00:08:21,759 --> 00:08:24,200
所以我要把它缩小 3 倍。

153
00:08:24,520 --> 00:08:27,440
所以我将担任第八个任期的三分之一。

154
00:08:27,940 --> 00:08:32,500
9，它是素数的平方，所以我取第九项的 1 一半。

155
00:08:33,000 --> 00:08:34,880
10被踢出，我们完全忽略它。

156
00:08:35,299 --> 00:08:38,679
11 保持原样，一直持续下去。

157
00:08:38,940 --> 00:08:42,600
所以你的每一项看起来都像是素数的幂。

158
00:08:43,140 --> 00:08:45,183
1 比 pk 多，因为这个系列，

159
00:08:45,183 --> 00:08:48,120
我们将它们全部平方，它是 1 比素数平方的幂。

160
00:08:48,320 --> 00:08:50,860
但无论这种力量是什么，我们都会按比例缩小它。

161
00:08:50,860 --> 00:08:55,690
好吧，现在因为我们以一种相当混乱的方式操纵它，

162
00:08:55,690 --> 00:08:59,680
我的意思是素 数以相当随机的方式分布，

163
00:08:59,680 --> 00:09:03,040
你可能会认为这是完全不可计算的。

164
00:09:03,120 --> 00:09:05,700
这真是一个疯狂的情况。

165
00:09:05,700 --> 00:09:09,700
它会更小，你知道，肯定会比 6 的 pi 平方小，

166
00:09:09,700 --> 00:09:13,060
因为 我们省略了 1，我们省略了很多合数，

167
00:09:13,060 --> 00:09:17,220
以及大于 的质数 幂，大于 的幂1、我们缩小了规模。

168
00:09:17,260 --> 00:09:18,580
所以这绝对是一个较小的数字。

169
00:09:19,060 --> 00:09:21,920
你也许可以根据视频的标题猜出这是怎么回事。

170
00:09:22,500 --> 00:09:28,860
它最终等于之前的自然对数，即 pi 的平方超过 6。

171
00:09:29,800 --> 00:09:35,280
这不仅适用于这个特定的平方和序列。

172
00:09:35,280 --> 00:09:39,742
还有许多其他公式可以让我们得到与 pi 相关的东西，

173
00:09:39,742 --> 00:09:43,004
这显然与 素数相关，在某种程度上，嗯，

174
00:09:43,004 --> 00:09:47,981
我的意思是，你玩同一个游戏，你 有这种奇怪的取对数的方式，

175
00:09:47,981 --> 00:09:50,900
而不仅仅是任何对数，对数底 e. 

176
00:09:50,900 --> 00:09:53,822
所以，为了谈谈我在其他情况下的意思，

177
00:09:53,822 --> 00:09:56,906
如果你用 1 减去三分之一加上五分之 

178
00:09:56,906 --> 00:10:01,127
一减去七分之一加上九分之一，然后在奇数之间来回交替，

179
00:10:01,127 --> 00:10:03,400
你就会得到 pi 除以 4。

180
00:10:03,760 --> 00:10:04,940
我有一个关于这一切的视频。

181
00:10:05,040 --> 00:10:07,220
如果您好奇的话，数学家也有一个关于它的视频。

182
00:10:07,220 --> 00:10:09,020
非常美丽，为什么这是真的。

183
00:10:09,580 --> 00:10:14,540
但更奇怪的是，当我们玩这个保留素数并淘汰其他素数的游戏时。

184
00:10:14,900 --> 00:10:16,140
所以 1 我们要踢出去。

185
00:10:16,320 --> 00:10:18,620
如果我们保留第三项，则结果为负 3。

186
00:10:19,160 --> 00:10:20,860
然后我们保留 5。

187
00:10:21,060 --> 00:10:23,560
7，我猜是负1的7次方。

188
00:10:24,280 --> 00:10:28,200
9，我们保留它，但将其缩小，因为它是素数的平方。

189
00:10:29,100 --> 00:10:31,363
在这种情况下，因为我们只查看奇数，

190
00:10:31,363 --> 00:10:33,760
所以看起来我 们保留了相当多的数字。

191
00:10:33,800 --> 00:10:35,480
在把他们赶出去之前，我们必须先做大。

192
00:10:35,480 --> 00:10:37,300
所以像 15 一样，它被踢出了。

193
00:10:37,640 --> 00:10:40,640
17 是积极的，它可以保持原样。

194
00:10:40,920 --> 00:10:42,780
19 保持原样。

195
00:10:43,200 --> 00:10:44,460
21号被踢出局。

196
00:10:44,860 --> 00:10:46,040
23 可以留下来。

197
00:10:46,520 --> 00:10:47,560
这是一件非常奇怪的事情。

198
00:10:47,640 --> 00:10:50,080
我的意思是，现在的优点和缺点，它们不能很好地交替。

199
00:10:50,200 --> 00:10:54,080
就像减加，减加，减加，加，减，减。

200
00:10:54,540 --> 00:10:57,380
这是一个，嗯，它几乎看起来像是一个随机序列。

201
00:10:57,700 --> 00:11:00,940
25，我们可以缩小它，因为它是 5 的平方。

202
00:11:01,700 --> 00:11:02,480
1 超过 25。

203
00:11:03,160 --> 00:11:07,322
这不再等于 pi 四次方，但它确实等于 

204
00:11:07,322 --> 00:11:09,820
pi 四次方的自然对数。

205
00:11:09,820 --> 00:11:14,095
显然，以 e 为底的对数（也就是说 ，

206
00:11:14,095 --> 00:11:18,145
回答问题 e 等于某个值）与，嗯 ，

207
00:11:18,145 --> 00:11:21,520
这些素数模式之间存在这种关系。

208
00:11:22,100 --> 00:11:26,932
当你想到它时，它非常美丽，因为如果你看一下这里的整个序列 ，

209
00:11:26,932 --> 00:11:31,120
它将等于某个数字，使得该数字的 e 与 pi 相关。

210
00:11:31,120 --> 00:11:35,925
所以你有这个公式，它将所有素数及其幂 相关联，不包括合数，

211
00:11:35,925 --> 00:11:40,400
所以它仍然是一个 很酷的序列，它不只是像所有整数一样。

212
00:11:41,520 --> 00:11:44,123
我们取 e，计算 e 的总和次方，

213
00:11:44,123 --> 00:11:46,420
你会得到与 pi 相关的东西。

214
00:11:47,020 --> 00:11:48,640
我的意思是，显然比欧拉公式更好。

215
00:11:48,800 --> 00:11:49,720
我想你必须同意。

216
00:11:51,820 --> 00:11:54,760
因此，在本课结束时我们可能会明白为什么这是真的。

217
00:11:54,860 --> 00:11:57,895
这取决于有多少时间，但接下来我将向您展示两 个事实，

218
00:11:57,895 --> 00:11:59,880
我们一定会解释为什么它们是正确的。

219
00:12:00,360 --> 00:12:02,700
所以我们将在这里玩更多系列游戏。

220
00:12:02,840 --> 00:12:05,702
这些是比我展示的前两个更简单的事实，

221
00:12:05,702 --> 00:12:08,247
但是与素数的关系只是，哦天哪 ，

222
00:12:08,247 --> 00:12:12,860
如果这不能让你热爱数学，我不知道还有什么能让你热爱数学。。

223
00:12:14,040 --> 00:12:16,890
但如果我们玩一个交替游戏，它不会 遍历所有奇数，

224
00:12:16,890 --> 00:12:17,960
而是遍历所有数字。

225
00:12:17,960 --> 00:12:22,777
所以我要不断地取一减二分之一加上三分之一减四分之一，

226
00:12:22,777 --> 00:12:27,780
 你可以用一条数轴来想象它，我在这里在零和一之间移动。

227
00:12:27,780 --> 00:12:32,554
当我们取一减二分之一时，你会向后跳一半， 然后加上三分之一，

228
00:12:32,554 --> 00:12:35,738
你会向前跳一个较小的量 ，减去四分之一，

229
00:12:35,738 --> 00:12:39,239
你会向后跳一个更小的量 ，然后加上五分之一，

230
00:12:39,239 --> 00:12:43,696
然后向后可能会让你到 这里，然后向前可能会让你得到类似的

231
00:12:43,696 --> 00:12:47,038
东西 ，你来回交替，因为每个都比前一个小，

232
00:12:47,038 --> 00:12:50,540
你可 能会看到它必须在某些方面归零一种价值。

233
00:12:51,260 --> 00:12:52,560
事实上，确实如此。

234
00:12:52,860 --> 00:12:57,325
它归零于 0 左右的值。69 左 右，

235
00:12:57,325 --> 00:13:01,320
更准确地说，它是 2 的自然对数。

236
00:13:01,520 --> 00:13:05,760
问题 e 等于 2 的答案。

237
00:13:06,680 --> 00:13:08,220
有点奇怪，你不觉得吗？

238
00:13:08,680 --> 00:13:15,140
像 e 这样的东西会与像 这样来回振荡的奇数相关。

239
00:13:15,960 --> 00:13:20,580
自然对数与序列之间还有 另一种关系，如下所示。

240
00:13:20,760 --> 00:13:22,823
您可能会问，如果我们不来回交替，

241
00:13:22,823 --> 00:13:25,660
而是将 它们全部加在一起，会发生什么，对吧？

242
00:13:25,660 --> 00:13:27,360
这是什么方法？

243
00:13:27,960 --> 00:13:31,495
因为同样的，你知道，当我们将所有的平方相 加，

244
00:13:31,495 --> 00:13:34,878
即平方的倒数之和，这接近了一个美丽的 东西，

245
00:13:34,878 --> 00:13:37,645
它是 pi 的六的平方，你可能会认 

246
00:13:37,645 --> 00:13:40,720
为一个更自然的问题是根本不要将它们平方。

247
00:13:41,000 --> 00:13:44,380
取一加二分之一加三分之一加四分之一，以此类推。

248
00:13:44,560 --> 00:13:45,480
这是什么方法？

249
00:13:46,260 --> 00:13:49,120
现在，事实上，它并没有接近任何东西。

250
00:13:49,340 --> 00:13:54,760
无论您选择的数字有多小，这个 序列最终都会变得比它更大。

251
00:13:54,760 --> 00:13:58,640
所以我可以说继续添加项，最终会超过 100。

252
00:13:59,160 --> 00:14:02,540
如果您有耐心，继续添加项，最终您将超过一百万。

253
00:14:03,220 --> 00:14:07,180
这有点令人惊讶，因为这些数字都在变得越来越小。

254
00:14:07,280 --> 00:14:10,700
因此，当您进行添加时，您会认为速度会减慢。

255
00:14:10,740 --> 00:14:12,420
它不会让你超过100。

256
00:14:13,220 --> 00:14:14,940
但我可以向你解释为什么会发生这种情况。

257
00:14:15,120 --> 00:14:17,100
这实际上是一个非常漂亮的证明。

258
00:14:17,740 --> 00:14:20,148
如果我适当地对我的术语进行分组，

259
00:14:20,148 --> 00:14:23,008
那么我将把第三 个和第四个分组在一起，

260
00:14:23,008 --> 00:14:26,169
我将把第五个和第八个之间 的所有数字分组，

261
00:14:26,169 --> 00:14:28,728
第九个和第十六个之间的所有数字 ，

262
00:14:28,728 --> 00:14:32,040
所有17 分之一到 32 分之一之间的数字。

263
00:14:32,040 --> 00:14:37,400
因此，对于这些以二次方增长的群体， 我可以说的是，

264
00:14:37,400 --> 00:14:43,190
三分之一加第四，这两 个数字都大于第四，第三大于第四，

265
00:14:43,190 --> 00:14:47,478
 第四则不是。不是更大，但它完全等于 ，

266
00:14:47,478 --> 00:14:51,123
但这确实意味着它们的总和，是的 ，

267
00:14:51,123 --> 00:14:55,626
它们的总和肯定会大于四分之一乘四 分之一，

268
00:14:55,626 --> 00:14:58,200
这与四分之一的两倍相同。

269
00:14:58,200 --> 00:15:04,214
同样，这里的总和是五分之一加六分之一加七 分之一加八分之一，

270
00:15:04,214 --> 00:15:06,420
每一项都大于八分之一。

271
00:15:06,780 --> 00:15:10,440
所有这四个项都大于八分之一。

272
00:15:11,020 --> 00:15:13,720
所以他们加起来比八分之四还要大。

273
00:15:13,720 --> 00:15:19,485
同样，在这里，九分之一到十六分之一之间 的所有数字，

274
00:15:19,485 --> 00:15:23,033
所有八个数字都大于十六分 之一，

275
00:15:23,033 --> 00:15:26,360
因此总和大于十六分之一的八倍。

276
00:15:26,360 --> 00:15:31,564
你可能会明白我的意思，你知道，这里有 16 个数字，

277
00:15:31,564 --> 00:15:37,169
它们都大于 30 分之一 ，对不起，大于 32 分之一，

278
00:15:37,169 --> 00:15:42,373
一边写一 边说话，当然所有这些都只是等于二分之一 ，

279
00:15:42,373 --> 00:15:47,377
所以四分之二等于二分之一，八分之四等 于二分之一，

280
00:15:47,377 --> 00:15:49,780
十六分之八等于二分之一。

281
00:15:50,680 --> 00:15:54,902
换句话说，我能做的就是将所有项分组，

282
00:15:54,902 --> 00:16:01,940
这样总和看起 来就像永远取一加二分之一加二分之一加二分之一。

283
00:16:02,500 --> 00:16:05,749
你可以看到，好吧，如果我继续下去足够长的时间，

284
00:16:05,749 --> 00:16:06,880
它就会变得更大。

285
00:16:07,080 --> 00:16:11,515
它还让您有一点直觉，这实际上可能与对数有关 ，

286
00:16:11,515 --> 00:16:15,180
因为我们分组的大小根据 2 的幂增长。

287
00:16:15,180 --> 00:16:19,295
因此，如果您想知道在这个总和大于 10 之前我需要 

288
00:16:19,295 --> 00:16:23,885
花多长时间，您可能会本能地认为，嗯，我必须将其加 在一起，

289
00:16:23,885 --> 00:16:28,000
让我们看看，我有一个，然后是其余的其中一 半是一半，

290
00:16:28,000 --> 00:16:31,166
所以我必须将 18 个不同的组加在一起，

291
00:16:31,166 --> 00:16:35,281
 每个组看起来都像一半，所以我可能必须达到这样的程 

292
00:16:35,281 --> 00:16:39,080
度：我的组的大小就像 2 的 17 倍，类似那。

293
00:16:39,080 --> 00:16:44,653
你会发现它会增长，它不会呈指数增长， 它会呈对数增长，

294
00:16:44,653 --> 00:16:50,640
因为如果你问你需要走 多远才能达到这一点，它会呈对数增长。

295
00:16:50,980 --> 00:16:53,920
正如您可能猜到的，它实际上是自然对数。

296
00:16:54,240 --> 00:16:59,113
因此，如果我将所有项加起来约为 1 除 以 n，

297
00:16:59,113 --> 00:17:02,160
则最终大约为 n 的自然对数。

298
00:17:02,800 --> 00:17:07,740
如果你想变得更准确，它是 n 的自然对数加上 某个常数，

299
00:17:07,740 --> 00:17:10,740
这是我们稍后将在课程中讨论的常数。

300
00:17:10,740 --> 00:17:14,078
但仅仅为了近似的顺序，这让您知道 

301
00:17:14,078 --> 00:17:17,220
您需要达到 n 的自然对数附近。

302
00:17:17,800 --> 00:17:20,239
因此，我将继续进行测验并问您另一个问题，

303
00:17:20,239 --> 00:17:22,800
 只是为了看看您到目前为止是否一直在关注。

304
00:17:22,800 --> 00:17:29,124
所以我们的问题是，下面哪一个最接近 n 的最 小值，

305
00:17:29,124 --> 00:17:35,205
对于该值，1 加二分之一加上三分之一加 上第四个，

306
00:17:35,205 --> 00:17:39,340
不断相加，直到得到 1 除以 n。

307
00:17:39,920 --> 00:17:43,420
需要多长时间才能使这笔金额超过一百万？

308
00:17:44,780 --> 00:17:47,420
好吧，请记住，您的第一直觉可能是，

309
00:17:47,420 --> 00:17:51,457
整个总和会 收敛到某个值，就像您将平方的倒数相加时，

310
00:17:51,457 --> 00:17:55,340
它会 收敛到 pi 平方除以 6 一样，非常漂亮。

311
00:17:55,780 --> 00:17:58,060
你可能认为你继续这样做并且它会收敛。

312
00:17:58,460 --> 00:18:03,260
事实上，它总是会变得更 大，但你可以更加定量。

313
00:18:03,260 --> 00:18:07,680
你可能会问，需要多长时间才能超过一百万？

314
00:18:09,080 --> 00:18:14,100
所以我会给你一点时间来思考这个问题的答案是什么。

315
00:18:14,700 --> 00:18:19,997
我会说，因为我们在与 E 相关的事物和以 10 

316
00:18:19,997 --> 00:18:25,515
为底的相关事物 之间进行转换，如果您需要一点提醒，

317
00:18:25,515 --> 00:18:29,930
我可以指出自然对数约为 2 的事实。3，

318
00:18:29,930 --> 00:18:32,800
如果您想将其用于估计目的。

319
00:18:34,340 --> 00:18:38,837
所以，为了看看你是否注意到我刚才描述的这个像自 

320
00:18:38,837 --> 00:18:42,960
然对数一样增长的结果，让我们看看你如何回答。

321
00:18:43,260 --> 00:18:46,000
我将在这里再给予 20 秒左右的时间。

322
00:18:46,000 --> 00:18:58,953
好吧，即使你还没有完成，我会继 

323
00:18:58,953 --> 00:19:23,240
续看看人们在这个问题上的进展， 锁定答案，然后解释它的来源。

324
00:19:23,240 --> 00:19:27,981
所以正确的答案是大约 10 到 400,000 左右，

325
00:19:27,981 --> 00:19:30,440
这是一个非常非常大 的数字。

326
00:19:30,820 --> 00:19:34,120
宇宙中的原子数量估计约为 10 至 80 个。

327
00:19:34,280 --> 00:19:37,474
因此，就好像宇宙中的每个原子内部都有一个宇宙，

328
00:19:37,474 --> 00:19:39,836
这将使我们得到 10 的 160，

329
00:19:39,836 --> 00:19:43,169
然后每个原子内部都有一个宇宙，这只会让我们得到 

330
00:19:43,169 --> 00:19:44,420
10 的 240。

331
00:19:44,940 --> 00:19:47,540
你必须不断地重复这样的事情。

332
00:19:47,540 --> 00:19:52,780
即使是那种疯狂的想法，比如在心里思考如何才能达到一个大数字，

333
00:19:52,780 --> 00:19:58,020
 也需要很长时间才能达到 10 到 400,000 的大小。

334
00:19:58,880 --> 00:20:04,760
好吧，现在你思考这样的事情的方式就是看看我刚才所说 的。

335
00:20:04,920 --> 00:20:07,667
当我们将所有这些数字相加到 n 上的 1 时，

336
00:20:07,667 --> 00:20:09,220
它大约是 n 的自然对数。

337
00:20:09,720 --> 00:20:16,560
因此，您要寻找的是 n 的自然对数约为一百万时的值。

338
00:20:17,419 --> 00:20:21,000
这就是总和超过一百万之前需要花的时间。

339
00:20:21,560 --> 00:20:27,860
这与 n 约为 e 的百万次方的说法相同。

340
00:20:29,620 --> 00:20:32,980
好的，但是我们所有的答案都是用 10 的幂来表示的。

341
00:20:33,140 --> 00:20:38,740
所以为了进行转换，我会想，10 等于 e 吗？

342
00:20:38,940 --> 00:20:42,200
这样我就可以在这里用 10 的幂进行一点替换。

343
00:20:42,200 --> 00:20:48,020
嗯，这是在问我 e 的以 10 为底的对数是多少？

344
00:20:49,400 --> 00:20:53,312
从我们上次学到的对数的性质来看，

345
00:20:53,312 --> 00:21:00,160
这与要求以 10 为底的对数 e 相同，但我们取其倒数。

346
00:21:00,820 --> 00:21:04,575
好的，您可以考虑的另一种方式是，

347
00:21:04,575 --> 00:21:08,800
e 除以 1 除以 x 等于 10。

348
00:21:08,800 --> 00:21:12,342
这两个表达式是相同的，所以我们要寻找 10 的自然对数，

349
00:21:12,342 --> 00:21:13,860
但我们在 它上面取 1。

350
00:21:15,120 --> 00:21:16,790
现在我们对 10 的自然对数的估计，

351
00:21:16,790 --> 00:21:18,460
如果你碰巧知道的话，它大 约是 2。

352
00:21:18,460 --> 00:21:22,914
3.对于这个，你真正需要知道的就是它大约是 2，

353
00:21:22,914 --> 00:21:28,297
甚 至是 1 的量级，因为我们选项中的所有指数看起来都非 

354
00:21:28,297 --> 00:21:29,040
常不同。

355
00:21:29,660 --> 00:21:32,396
所以如果你问 1 除以 2 等于多少。

356
00:21:32,396 --> 00:21:35,420
3，我的意思是非常粗略地，就像一 半一样。

357
00:21:35,420 --> 00:21:40,245
所以我们可以把 n 想象成非常非常粗略的东西，

358
00:21:40,245 --> 00:21:44,232
比如 10 的 1 半到 100 万，

359
00:21:44,232 --> 00:21:46,960
只是为了让我们更接近一些。

360
00:21:47,100 --> 00:21:50,233
所以看起来是 10 的 500,000，

361
00:21:50,233 --> 00:21:54,776
我们知道二分之一确实应该小一点，因为我们用 1 除以 2。

362
00:21:54,776 --> 00:21:59,476
3，不是 1 除以 2，所以这个数字应该比 500,000 

363
00:21:59,476 --> 00:22:00,260
稍小一些。

364
00:22:00,260 --> 00:22:04,052
事实上，在这里的所有选项中，有一个比其他任何选项都更接近 

365
00:22:04,052 --> 00:22:06,798
1 0 到 500,000，所以我们的非常

366
00:22:06,798 --> 00:22:08,760
粗略的近似可以让我们到达那里。

367
00:22:09,220 --> 00:22:10,140
好吧，这很有趣。

368
00:22:11,679 --> 00:22:15,748
现在，为了开始解释其中一些东西到底从何 而来，

369
00:22:15,748 --> 00:22:19,109
比如为什么在这些情况下会出现自然对数，

370
00:22:19,109 --> 00:22:24,415
我想花点时间开 始讨论 e 以及 e 在数学中所扮演的角色，

371
00:22:24,415 --> 00:22:27,600
我认为我想有时 候可能会有点被误解。

372
00:22:27,840 --> 00:22:30,188
首先，我将从观众中挑选一个号码，

373
00:22:30,188 --> 00:22:33,564
所以您可以 在自己的时间里随意观看 3b1b。

374
00:22:33,564 --> 00:22:35,620
co 并输入您最喜欢的号码。

375
00:22:36,400 --> 00:22:42,560
但我想从这里开始谈论的是，有很多答案出现，这总是很有趣。

376
00:22:43,560 --> 00:22:48,824
当你看到一系列函数时，好吧，假设我们看到的东西看起来像，

377
00:22:48,824 --> 00:22:52,772
我会在这 里弹出，看起来像 e 乘以 r 

378
00:22:52,772 --> 00:22:55,780
乘以 x 的各种不同的 r 值。

379
00:22:56,320 --> 00:22:59,542
这是你在工程、数学和物理中经常看到的东西，

380
00:22:59,542 --> 00:23:03,992
我们用某种参数 来描述一堆不同的指数，比如 r 坐在那里，

381
00:23:03,992 --> 00:23:08,289
我们说根据 r 是什么，这可以给我们一个更浅的指数增长，

382
00:23:08,289 --> 00:23:12,740
一些与陡峭的 指数增长相比，它呈指数增长，但速度要慢一些。

383
00:23:12,740 --> 00:23:15,394
好吧，一旦你 用一个族来写东西，

384
00:23:15,394 --> 00:23:20,204
我想很多人都有这样的本能，就像这些是 e 产生的所有函数，

385
00:23:20,204 --> 00:23:24,020
就像 e 一样，数字产生了这个美丽的函数 族。

386
00:23:24,020 --> 00:23:27,905
但重要的是要认识到这与创建一系列函数的语句相同，

387
00:23:27,905 --> 00:23:32,114
这些函数看起来 像具有各种不同基数的 x 的 a ，

388
00:23:32,114 --> 00:23:36,808
其中它可以调整 a 的值，并说 你知道有时它看起来像 2 

389
00:23:36,808 --> 00:23:41,017
到x 次方，有时看起来像 3 的 x 次 方，好吧，

390
00:23:41,017 --> 00:23:42,960
或者 4 的 x 次方。

391
00:23:42,960 --> 00:23:46,176
调整这个基数可以得到各种不同的 指数，

392
00:23:46,176 --> 00:23:50,748
这实际上是在玩同一个游戏，就像你知道函数 3 的 x 

393
00:23:50,748 --> 00:23:52,780
函数一样，取 3 的幂。

394
00:23:53,140 --> 00:23:57,118
我可以选择一个 r ，使得 e 与 rx 相等，

395
00:23:57,118 --> 00:23:59,440
事实上 e 没有什么特别的。

396
00:23:59,600 --> 00:24:02,880
我可以选择像 pi 这样的东西作为这里的 基础。

397
00:24:03,280 --> 00:24:07,500
我可以说看看指数族，就像 pi 乘以 r 乘以 x。

398
00:24:07,820 --> 00:24:10,300
这并不是说 pi 产生了这些数字，

399
00:24:10,300 --> 00:24:13,801
也不是说 pi 以某种特定的方式 与这个族相关，

400
00:24:13,801 --> 00:24:15,260
而是我们选择这样写。

401
00:24:15,820 --> 00:24:24,060
我们在物理、工程和 数学领域几乎总是选择用 e 来写指数族。

402
00:24:24,860 --> 00:24:28,502
因此，正确的问题不是e与这样的家庭有什么关系，

403
00:24:28,502 --> 00:24:30,720
而是为什 么它是正确的选择？

404
00:24:31,720 --> 00:24:34,020
我将给你另一个例子来说明这种情况的发生。

405
00:24:34,500 --> 00:24:37,977
我的意思是它们无处不在，看起来像指数曲线，

406
00:24:37,977 --> 00:24:41,620
但对于 概率和统计来说非常重要的是钟形曲线。

407
00:24:41,620 --> 00:24:46,820
所以我们几乎 总是以 e 的形式写成负 x 的平方。

408
00:24:47,660 --> 00:24:50,676
顺便说一句，你可能会 想到这个问题，你知道，

409
00:24:50,676 --> 00:24:54,241
如果我们只将 e 代入 x，我们就会得到这个东 西，

410
00:24:54,241 --> 00:24:57,394
它会随着向左增长而衰减，如果我们将其设为负数，

411
00:24:57,394 --> 00:24:59,040
它会衰减为你往右边走 。

412
00:24:59,200 --> 00:25:03,200
因此，每当 e 对 x 的输入变得非常负时，它就会衰减。

413
00:25:03,820 --> 00:25:07,528
因此，要使 其在两侧衰减，您可以将 e 取负 x 平方，

414
00:25:07,528 --> 00:25:10,840
然后它在两侧衰减，您 就得到了这条漂亮的钟形曲线。

415
00:25:10,840 --> 00:25:15,311
由于这个平方，它有点平滑了事情，而如 果我们采用类似的东西，

416
00:25:15,311 --> 00:25:19,633
你知道 x 的绝对值，但可以否定它，那么它会 在两侧衰减，

417
00:25:19,633 --> 00:25:21,720
但我们会得到这个尴尬的尖点。

418
00:25:21,720 --> 00:25:27,024
这并不能解释为什么这 条非常具体的曲线出现在统计数据中，

419
00:25:27,024 --> 00:25:30,624
但如果你想记住钟形 曲线的公式是什么，

420
00:25:30,624 --> 00:25:35,740
你可以思考一下这样一个事实：这应该大 致是这样的形状。

421
00:25:36,440 --> 00:25:38,560
但它通常带有某种参数。

422
00:25:38,560 --> 00:25:43,947
例如，我可以输入一个值，我将在其中调用 s ，

423
00:25:43,947 --> 00:25:50,740
该值将 确定该钟形曲线的宽度和细度，类似于统计中的标准差。

424
00:25:50,740 --> 00:25:54,644
s 不会是标准差，我们必须将其倒数并平方并做一些事情，

425
00:25:54,644 --> 00:25:58,260
 但是当您调整该指数中的内容时，它会改变钟形曲线。

426
00:25:58,520 --> 00:26:00,160
这是我在 这里唯一想说的一点。

427
00:26:00,660 --> 00:26:05,150
你可以认为只要看看这个，钟形曲线是由数字 e 产生的，

428
00:26:05,150 --> 00:26:09,807
但这并不完全正确，因为我也可以将 a 写入负 x 平方，

429
00:26:09,807 --> 00:26:14,131
并且当我调整 a I 的值时，我会得到相同的曲线族。

430
00:26:14,131 --> 00:26:18,455
我还 改变了这个宽度，这样我就可以想出其他方法来用 

431
00:26:18,455 --> 00:26:21,948
a 来描述这个标 准差，它是同一个曲线族，

432
00:26:21,948 --> 00:26:25,940
不仅仅是它们看起来相似，它们实际上是同 一件事。

433
00:26:27,120 --> 00:26:31,198
用代数来证明这一点并不难，它几乎使它看起 

434
00:26:31,198 --> 00:26:33,140
来比实际情况更简单。

435
00:26:33,140 --> 01:01:28,104
对于人们想要输入的示例数字，我们 已经有了很多答案，

436
01:01:28,104 --> 01:14:53,860
所以让我们继续看看。

