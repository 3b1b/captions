1
00:00:00,000 --> 00:00:04,400
今日は、私が最も好きな数学の 1 つについて話します。

2
00:00:04,400 --> 00:00:09,680
それは工学、数学自体、量子力学にとって非常に基礎的なものですが、恐ろしい、恐ろしい名前が付けられたものです。

3
00:00:09,680 --> 00:00:14,480
私たちはそれらを複素数と呼びます。

4
00:00:14,480 --> 00:00:19,520
さらに悪いことに、複素数をもたらすものを虚数と呼びます。

5
00:00:19,520 --> 00:00:24,000
そして、本題に入る前に、私がやりたいのは、アンケートのようなものから始めたいと思います。視聴者に、皆さんが、まあ、本物だと考えることができるものについてアンケートを行うだけです。

6
00:00:24,000 --> 00:00:28,880
数字に関しては何が存在すると思いますか?

7
00:00:28,880 --> 00:00:33,760
ウォームアップ

8
00:00:33,760 --> 00:00:38,880
アニメーションですでにいくつかのアンケートを行っていますが、ある種の本格的なアンケートとして、ここでレッスンを始める前に、皆さんがどこから来たのかを実際に確認するのに役立ちます。とても簡単な質問をしますが、いいですか？

9
00:00:38,880 --> 00:00:43,600


10
00:00:43,600 --> 00:00:52,640
それでは、ここでアンケートを行ってみましょう。 上に引っ張ってください。 そして、ああ、何らかの理由で、これをポーリングするのに問題があるようです。

11
00:00:52,640 --> 00:00:59,440
ふーむ。 さて、それでは行きます。 そこで少し遅れました。

12
00:00:59,440 --> 00:01:07,040
あなたにとって実際に存在する意味が何であれ、値 2、2 の平方根、マイナス

13
00:01:07,040 --> 00:01:12,400
1 の平方根、無限大のうち、実際に存在すると個人的に考えるのはどれですか?

14
00:01:13,360 --> 00:01:19,040
つまり、理論的には、皆さんが 3b1b に行くとします。 colash live

15
00:01:19,040 --> 00:01:22,720
の場合、これに答えることができるはずです。そうすれば、回答に基づいた統計が画面に表示され始めます。

16
00:01:22,720 --> 00:01:27,040
それらの答えが何を指すのかはわかりません。 現時点で私たちが知っているのは、リードを持っている人がいて、その後ろにもう一人がかなり迫っているということだけです。あなたの回答が受信され、サーバーがそれらを消化するにつれて、ここで統計の一部が表示され始めるでしょう。

17
00:01:27,040 --> 00:01:32,240
。

18
00:01:32,240 --> 00:01:37,200
ちなみにそのページに行くと3b1b。

19
00:01:37,200 --> 00:01:44,080
co スラッシュ live。 itempool にリダイレクトされます。 com

20
00:01:44,160 --> 00:01:49,280
の一番上にあるのは、Twitter

21
00:01:49,280 --> 00:01:53,040
で質問できることです。基本的に、ハッシュタグが含まれるツイートを開くだけでロックダウン計算ができます。これが方法です。これに対して質疑を行うということです。

22
00:01:53,040 --> 00:01:56,880
ライブ

23
00:01:56,880 --> 00:02:00,880
チャットの代わりに、質問やコメントがあるときはいつでも、レッスンに挿入してディスカッションの一部にできます。それはここに表示されます。すでに用意されているようです。 1つ。

24
00:02:00,880 --> 00:02:05,600
これは、Yash

25
00:02:05,600 --> 00:02:11,440
Dave

26
00:02:11,440 --> 00:02:15,600
からの質問です。複素数といわゆる虚数の名前を、より直感的なもの、つまり現実世界で多数の用途があるという事実を伝える名前に変更できるとしたら、何と名付けますか?

27
00:02:15,600 --> 00:02:20,720
あなたが尋ねてくれて、これ以上嬉しいことはありません、ヤッシュ。 私の友人の一人は、これらを卑劣な番号と呼ぶべきであるという事実に非常に熱心に取り組んでいるように見えます。

28
00:02:20,720 --> 00:02:24,560


29
00:02:24,560 --> 00:02:29,040
個人的に、私は回転と回転を暗示するのがとても好きです。そしてこれが今日のレッスンで話すことの

30
00:02:29,040 --> 00:02:33,440
1

31
00:02:33,440 --> 00:02:39,600
つです。それは、私たちが複素数と呼ぶもの、虚数と呼ぶもの、主な用途は、物を回転させる方法についての非常にエレガントな説明から来ていることです。これを進めていくうちに、私の言いたいことがなんとなくわかってもらえると思います。

32
00:02:39,600 --> 00:02:43,840


33
00:02:44,400 --> 00:02:49,600
したがって、私たちの世論調査では、どの数字が実際に存在すると思うかを皆さんに尋ねますが、これはもちろん主観的な質問であり、ここには正しい答えも間違った答えもありません。

34
00:02:49,600 --> 00:02:53,920
実際のところ、これがどのように決着するのか、私は本当に興味があります。なぜなら、これは一方向での強いコンセンサスがまったく得られていないからです。

35
00:02:53,920 --> 00:02:58,800
上位の候補が

36
00:02:58,800 --> 00:03:06,400
3 つあり、その下にほぼ互角の 3

37
00:03:06,400 --> 00:03:12,080
つがあるようなので、先に進んで見てみましょう。 数字に関して、実際に存在すると考えられるものは何ですか?

38
00:03:13,200 --> 00:03:17,840
さて、どれが上位 2

39
00:03:17,840 --> 00:03:24,160
つであるかは想像できますが、3

40
00:03:24,160 --> 00:03:27,600
つがすべて一致しているという事実に非常に興味があり、その前に少し遅れているように見えます。そうすると、素敵なドラマチックな一時停止が生まれます。

41
00:03:28,720 --> 00:03:33,520
言っておきますが、私個人としては、全部ではない、あるいはどれでもない、のどちらかに答えるのは非常に愚かだと感じます。

42
00:03:33,520 --> 00:03:37,600
無限は定義が曖昧であるため、誰かが無限を別のものとして扱いたがるなら、私には理解できるかもしれません。

43
00:03:37,600 --> 00:03:41,360
それが意味するものはたくさんありますが、数字が存在する限り、数字が現実のものであると考えれば、それはそうなります。

44
00:03:41,360 --> 00:03:47,120


45
00:03:47,120 --> 00:03:54,080
。 。 ああ、これで行き詰まっているなんて信じられない。 ライブストリームでも修正しましたが、うまくいくときとうまくいかないときが変動するのではないかと思います。

46
00:03:54,080 --> 00:03:57,600


47
00:03:57,600 --> 00:04:04,400
しかし、私個人としては、基本的に、現実の世界で役立つ数値構造があるときはいつでも、それが現実であると考えます。

48
00:04:04,400 --> 00:04:08,320
実際にアプリケーションで役立つものであれば、それは言葉と同じくらいリアルだと思いますよね。

49
00:04:08,320 --> 00:04:13,760
世の中で幸福のような抽象的な言葉に出会うことは決してありませんが、それは私たちの心の中にある種の現実性を持っており、分数では表現できない

50
00:04:13,760 --> 00:04:18,160
2

51
00:04:18,160 --> 00:04:23,280
の平方根や、たとえ少し違うように見えても、実際の正規数には現れない負の

52
00:04:23,280 --> 00:04:27,360
1 の平方根です。

53
00:04:28,800 --> 00:04:33,360
ああ、これは本当に残念です。 あなたの答えが何なのか本当に知りたいのですが、私には表示されません。つまり、レッスンを進めなければならないことになると思いますが、これはおそらく最後までに機能し始め、おそらく物事を解決できるでしょうまた起きます。

54
00:04:33,360 --> 00:04:38,080


55
00:04:38,080 --> 00:04:43,200


56
00:04:43,200 --> 00:04:52,640
それでは、先に進んでそれを取り上げさせてください。 今日私が皆さんにやりたいことは、基本的に、虚数と複素数がどのような意味で役立つのかを示し、そこからそれらにもう少し現実味を吹き込んでみることです。

57
00:04:52,640 --> 00:04:57,120


58
00:04:57,120 --> 00:05:01,920
基本的な入門書を目的としているので、まだ内容を理解しているとは思いませんが、早速見ていきましょう。

59
00:05:01,920 --> 00:05:06,960


60
00:05:08,240 --> 00:05:13,600
最後に、ちなみに、ここで一番最後に、2 つの異なる三角関数について話したいと思います。これは、私たちが構築しようとしているもののようなもので、三角関数から

61
00:05:13,600 --> 00:05:18,160
2

62
00:05:19,040 --> 00:05:23,680
つのアイデンティティを構築します。多分、ああ、それは理解しています。

63
00:05:23,680 --> 00:05:27,120
、三角法からのこれらの複雑な恒等式は、一部の人々を誘惑して、そうそう、複素数、本当に便利です、あなたは本当にそれらを愛するでしょう、を理解させるための最良の方法ではありません。

64
00:05:27,120 --> 00:05:30,320
しかし、複素数やマイナス

65
00:05:30,320 --> 00:05:34,480
1

66
00:05:34,480 --> 00:05:38,320
の平方根とは何の関係もない事実を得ることができるのは興味深いと思います。それは単なる三角関数であり、前回話したすべてです。そして、かなり難しい事実を得ることができるのです。思い出すために。

67
00:05:38,320 --> 00:05:42,240
私が学校にいたとき、加算の公式を習ったことを覚えています。2

68
00:05:42,240 --> 00:05:46,320
つの異なる角度の和の余弦を知りたい場合、元の 2

69
00:05:46,320 --> 00:05:50,880
つの角度の余弦と正弦を計算すると、これほど長いものになります。常に人々をつまずかせるマイナス記号があります。この記号に対して同じことを行うと、見た目は似ていますが、プラス記号があり、cos-cos

70
00:05:50,880 --> 00:05:55,120
の代わりに

71
00:05:55,120 --> 00:06:00,080
cos-sin

72
00:06:00,080 --> 00:06:03,680
があり、非常に間違いが発生しやすいものです。そのまま覚えようとするなら。

73
00:06:03,680 --> 00:06:08,640
ただし、複素数を扱う場合、これは間違いがはるかに少ないだけでなく、非常に美しい意味を持ち、すぐに抜け落ちます。

74
00:06:08,640 --> 00:06:13,680
したがって、たとえマイナス

75
00:06:13,680 --> 00:06:18,000
1

76
00:06:18,000 --> 00:06:22,880
の平方根の現実を必ずしも信じていないとしても、少なくとも、それが他の数学の部分を役立つようにすることができるということは興味深いこと、他の数学の部分がもう少し役立つことを認めなければなりません。も理解できます。

77
00:06:22,880 --> 00:06:28,640
そして、三角法は氷山の一角にすぎません。 エンジニアリングに携わっている人や、本格的に数学を勉強しようとしている人と話すと、複素数は実数と同じように仕事や生活の一部であると言うでしょう。

78
00:06:28,640 --> 00:06:32,640


79
00:06:32,640 --> 00:06:39,120
しかし、出発点は非常に奇妙に見えますね?

80
00:06:39,120 --> 00:06:45,680
これを導入し始めるとき、最初に行うことは、数値 i があり、i の

81
00:06:45,680 --> 00:06:51,600
2 乗がマイナス 1 に等しいと仮定することです。 そして、多くの学生にとって、おそらくここで起こり得る反応は

82
00:06:51,600 --> 00:06:56,720
2 つのうち 1 つであると思います。 1つは、いいえ、ありませんよね？

83
00:06:56,720 --> 00:07:02,160
数値を 2 乗すると、それが負の場合でも、たとえばマイナス 5 を

84
00:07:02,160 --> 00:07:08,400
2 乗すると、負と負の積は正になるため、25 になります。 2

85
00:07:08,400 --> 00:07:13,680
乗した数値が正であれば、そのまま正のままです。 つまり、何があっても、数値を二乗すると常に正の数値が得られるようです。

86
00:07:13,680 --> 00:07:17,840
決してネガティブなことを受け取るつもりはありません。

87
00:07:18,400 --> 00:07:24,960
したがって、これは存在しません、そのような数字はありません。 しかし、数学者が来て、「いやいや、そんなものは存在しない」と言ったとしても、そうなるように私たちはそれを定義しました。

88
00:07:24,960 --> 00:07:30,080
誰かが抱く他の反応は、「ちょっと待ってください、あなたにはそれができますか？」というものだと思います。

89
00:07:30,080 --> 00:07:34,880
解決できない問題があるときは、「ああ、私は物事を定義したので、魔法のように解決策が得られました」と言うことができます。

90
00:07:34,880 --> 00:07:39,920
さて、次回宿題に困っていて、x

91
00:07:39,920 --> 00:07:43,440
の答えがわからないときは、x をこの質問の答えとして定義された値だとします。

92
00:07:43,440 --> 00:07:48,400
したがって、これに不快感を感じているのは、決してあなただけではありません。

93
00:07:48,400 --> 00:07:54,640
実際、ルネ・デカルトはこれらの数字を軽蔑する意味で「虚数」という用語を作りました。

94
00:07:54,640 --> 00:07:59,120
これは、明らかにそのような答えは存在せず、真剣な数学として受け取られるべきではないという事実をからかうことを目的としていました。

95
00:07:59,120 --> 00:08:03,040
そして私たちはそれを慣例として守り続け、今でもそれらを虚数と呼んでいますが、これは本当にばかげています。

96
00:08:03,040 --> 00:08:07,920
しかし、私たちが行う奇妙な仮定はそれだけではありません。

97
00:08:07,920 --> 00:08:12,640
複素数について話し始めるときに行う 2 番目の奇妙なことは、そのような数

98
00:08:12,640 --> 00:08:17,440
i だけが存在するわけではないが、それにホームを与えるつもりだということです。 実数直線の代わりに、これらの数値を二乗すればすべての数値がわかり、マイナスになることはありません。私たちがやっているのは、私が別の次元に住んでいるということです。

99
00:08:17,440 --> 00:08:22,000


100
00:08:22,000 --> 00:08:29,200
i は垂直に生きており、上に 1

101
00:08:29,200 --> 00:08:34,720
つ、下に 1 つあり、負の i、負の 2i を持つことができ、必要に応じてスケールします。

102
00:08:34,720 --> 00:08:40,080
本質的に、それは、数値が 2 次元であり、i が実数直線の上に垂直に

103
00:08:40,640 --> 00:08:49,440
1 単位という非常に具体的なホームを持っていることを提案しています。 それで、番号システムを拡張したいのなら、それはわかります。そこに何らかの番号を置くと便利かもしれませんが、なぜ私がそうするのでしょうか?

104
00:08:49,440 --> 00:08:55,520


105
00:08:55,520 --> 00:09:01,840
無限とは、ゼロより 1 単位大きい数値、または

106
00:09:01,840 --> 00:09:05,600
1 をゼロで割った数値、または以前に解決できずに答えを作成したその他の問題であると言わないのはなぜですか。なぜそこにそれが存在する必要があるのでしょうか。

107
00:09:05,600 --> 00:09:11,600
別の次元の実数直線より 1 単位上の点という考え方は、負の 1 への

108
00:09:11,600 --> 00:09:17,920
2 乗と一体何の関係があるのでしょうか? そこで、これにお答えできればと思います。 最初に、ベクトルに詳しい人向けに、このように

109
00:09:17,920 --> 00:09:22,880
2

110
00:09:22,880 --> 00:09:26,880
次元の数値を加算する場合、ルールは非常に単純で、基本的にベクトルと同じように動作する方法について説明しましょう。

111
00:09:26,880 --> 00:09:33,360
仮に、数字があるとします。わかりませんが、ここに 4 プラス

112
00:09:33,360 --> 00:09:40,240
i となる数字を描かせてください。 次に、2

113
00:09:40,240 --> 00:09:45,360
番目の数値を取得します。数値のゼロからの矢印のようなベクトルとして描画すると便利です。これは、最終的にはマイナス 2 プラス 2i

114
00:09:45,920 --> 00:09:52,560
になります。 つまり、私が言いたいのは、実数のマイナス

115
00:09:52,560 --> 00:09:57,040
2

116
00:09:57,040 --> 00:10:01,120
を計算して、その垂直方向に数値体系の拡張を行うということです。これもまた、生徒たちに多くの信念を求めるようなものです。ここでは、それをしても大丈夫であること、数字がこの方向に伸びているふりをするだけでよいことを示しています。

117
00:10:01,120 --> 00:10:05,200


118
00:10:05,200 --> 00:10:09,520
これを信じて従うのであれば、それが役立つという事実が、私たちがこのようなことをしている理由を正当化するのに役立つことを願っています。

119
00:10:09,520 --> 00:10:14,080
そこで私の質問は単純に、これら 2

120
00:10:14,080 --> 00:10:19,840
つの数字を足すと何が起こるでしょうか? さて、私たちの質問システムが壊れていないと仮定すると、これを適切な世論調査として行うことができるはずです。

121
00:10:19,920 --> 00:10:24,720
それで、先に進みましょう。まず前回のアンケートを確認してみます。問題はうまくいっているようです。それでは、レッスンに少し戻ってみましょう。純粋に興味があるのです。皆さんがどうやってるか知りたいのです。これについては答えました。

122
00:10:24,720 --> 00:10:28,640


123
00:10:28,640 --> 00:10:32,080


124
00:10:32,080 --> 00:10:39,040
ええと、a があるようですが、答え f と d

125
00:10:39,040 --> 00:10:43,520
の間で行ったり来たりしているので、f はすべてであり、これらはすべて本物であると考えるべきだと言っています。 そして興味深いのは、d は、2

126
00:10:43,520 --> 00:10:48,480
の 2 平方根とマイナス

127
00:10:48,480 --> 00:10:52,480
1 は考慮すべきであるが、無限大は考慮すべきではないということです。そのため、無限大を実数であるとみなして拒否するだけで、マイナス 1

128
00:10:52,480 --> 00:10:56,640
の平方根、すごいですね。 そしてその後は、c

129
00:10:56,640 --> 00:11:00,640
のように見えます。マイナス 1 の平方根を拒否する人々は魅力的です。実際、彼らの誰もそれを超えることはないだろうと私は思っていました。

130
00:11:00,640 --> 00:11:06,160
どれもこれよりはるかに低い値はありません。 さて、負の

131
00:11:06,160 --> 00:11:10,080
1

132
00:11:10,080 --> 00:11:14,720
に慣れている人々の集団がいるように見えますが、無限大に不快感を抱いている大規模な集団がいます。これについては別の日の話題です。心配しないでください。そして、次のような人々が多数いるようです。おそらく、負の 1

133
00:11:14,720 --> 00:11:18,640
が現実であるという考えにあまり満足していない、その中間点にいます。

134
00:11:18,640 --> 00:11:22,560
その違いを納得してもらえるか見てみましょう。

135
00:11:23,280 --> 00:11:28,560
そこで、ウォーミングアップのような意味で、より数学的な最初の質問として、これら 2 つを追加していただきたいと思います。

136
00:11:28,560 --> 00:11:34,160
足し算の方法を教える前に、それがどのように機能するかを推測してください。それが非常に簡単だと感じていただければ幸いです。足し算は実際にはこの中で最も興味のない部分ですが、それは事実です。あなたは複素数について学んでいます。

137
00:11:34,160 --> 00:11:39,520


138
00:11:39,520 --> 00:11:43,760


139
00:11:43,760 --> 00:11:46,400
それは間違いなく、知っておく必要がある操作の 1 つです。

140
00:11:47,520 --> 00:11:51,280
残念ながら、私が停滞しているという事実と、ここで私が言っていることからもわかるように、質問はまだ完全に正しく読み込まれていないようです。シーンは、あなたたちと私の間でこの種のやり取りを行うのに役立つ、とても美しいインターフェースを構築してくれました。

141
00:11:51,280 --> 00:11:55,440


142
00:11:55,440 --> 00:12:01,120


143
00:12:01,120 --> 00:12:07,200
陰で厳しいことを言いますが、それまではここでレッスンを進めていきましょう。

144
00:12:07,200 --> 00:12:10,960


145
00:12:10,960 --> 00:12:17,040
それで、紙の上にそれを取り出して、家でそれに従って、何が追加されるかを見てください。

146
00:12:17,040 --> 00:12:21,440
それは比較的簡単であることがわかります。

147
00:12:21,440 --> 00:12:26,880
4 ユニットを右に移動してから 1 ユニット上に移動し、2

148
00:12:26,880 --> 00:12:31,680
ユニットを左に移動してから 2 ユニット上に移動するというアイデアを追加したい場合は、それらを一度に 1 つずつ実行するだけです。

149
00:12:31,680 --> 00:12:37,120
ここで黒を取り出します。 実際の部分は、右側の 4 つと、左側の

150
00:12:37,120 --> 00:12:42,480
2 つを引いたものになります。 分かりました、簡単です。 そして、虚数部は、この 1 単位の増加と、これら

151
00:12:42,480 --> 00:12:49,520
2 つの単位の増加、1 プラス 2 の i 倍になります。 つまり、1 つの i に 2

152
00:12:49,520 --> 00:12:54,480
つの i を加えたものになります。 それを計算すると、4 マイナス 2 は 2、1 プラス 2 は 3 になります。

153
00:12:56,080 --> 00:13:00,480
ここで簡単な紹介をします。 加算には複雑な処理は何もなく、これは素晴らしいことです。

154
00:13:00,480 --> 00:13:05,520
つまり、心配することが 1 つ減ります。 結局のところ、複素数の何がそんなに複雑なのでしょうか?

155
00:13:05,520 --> 00:13:10,960
すべてが面白くなるのは、これらの数値を掛け合わせてみたときです。

156
00:13:10,960 --> 00:13:16,320
したがって、ベクトルに関しては、少なくとも 2D 平面にいる場合、それらを乗算して

157
00:13:16,320 --> 00:13:20,160
2 つのベクトルを戻すという概念は実際にはありません。 外積や内積など、3

158
00:13:20,160 --> 00:13:24,640
次元で同様の結果を得ることができる概念がいくつかあります。 しかし、そのルールは結局、番号体系とは大きく異なります。

159
00:13:24,640 --> 00:13:28,880
代数は本当にできません。 2

160
00:13:28,880 --> 00:13:33,360
つの数値を乗算してゼロになる場合、そのうちの 1 つがゼロになる必要があると仮定するようなことはできません。 しかし、複素数は最終的には実数とほぼ同じように動作するため、代数のルールが引き継がれる可能性があります。

161
00:13:33,360 --> 00:13:37,360


162
00:13:37,360 --> 00:13:47,120
しかし、その乗算ルールが何であるかを理解するために、簡単な質問をしたいと思います。

163
00:13:47,120 --> 00:13:54,480
これは基本的に、ポイント 3、2 があると仮定します。 それ自体を複素数として考えるつもりもありません。

164
00:13:54,480 --> 00:13:59,680
ある種の座標グリッドがあり、x 座標が 3、y 座標が

165
00:13:59,680 --> 00:14:06,960
2 の点に行く場合、これの 90 度の回転は何になるでしょうか? 90度回転させて反時計回りにしてみましょう。

166
00:14:06,960 --> 00:14:15,360
カウンター、カウンター、うーん、書くのは難しいと思います。

167
00:14:17,520 --> 00:14:19,280
反時計回り。

168
00:14:19,280 --> 00:14:30,240
わかった。 これの素晴らしい点は、基本的に紙をめくるだけでそれを理解できることです。

169
00:14:30,240 --> 00:14:34,720
3、2 から始めても大丈夫だと言うので、反時計回りに 90 度回転させます。平面全体をそのように回転させた場合、x 方向にマイナス

170
00:14:34,720 --> 00:14:41,680
2、次に y 方向にマイナス 3 になると読み取れます。

171
00:14:41,680 --> 00:14:47,040
。 ここで私たちが行ったことは、3、2 を取得し、それをマイナスの 2、3

172
00:14:48,000 --> 00:14:53,600
に変換することです。 おそらく私たちの元のシステムでは、このマイナス 2 とその後

173
00:14:56,080 --> 00:15:00,240
3 のように見えるものがあると思います。 つまり90度回転することになります。

174
00:15:00,240 --> 00:15:04,880
そして、ここで素晴らしいのは、そのルールが非常にシンプルで、どのペアにも適用されるということです。

175
00:15:04,880 --> 00:15:11,360
数値のペアをカンマ b として取り、それを 90

176
00:15:11,360 --> 00:15:17,120
度回転するとどこに回転するのかと言った場合、最終的には座標 ba を交換して、最初の座標を負にすることになります。

177
00:15:17,120 --> 00:15:22,480
これは 90 度の回転です。これを 2

178
00:15:22,480 --> 00:15:27,920
回実行すると何が起こるか、同じ機械的な操作をもう一度 2 回実行するとどうなるか、これを取りに行きます。得られた 2

179
00:15:27,920 --> 00:15:33,760
つの座標を交換します。 b は負ですが、最初の b

180
00:15:33,760 --> 00:15:39,680
は負になります。 つまり、さらに 90 度回転しました。 さて、ここで何が起こったかというと、両方の座標を負にしただけです。これで安心できます。ab に座っている点をとって、それを

181
00:15:40,240 --> 00:15:45,120
90 度回転すると、これが最初の 90

182
00:15:45,120 --> 00:15:52,960
度の回転となり、次にさらに 90 度回転すると、これが最初の

183
00:15:52,960 --> 00:15:58,000
90 度の回転になります。 180度回転と同じです。ああ、間違ってしまいました。

184
00:16:00,000 --> 00:16:06,000
これは 180

185
00:16:06,000 --> 00:16:10,720
度の回転と同じになり、次のようになります。両方の座標を取得してそれらを負の値、負の値、負の値にするだけの他のベクトルは無視してください。これで

186
00:16:11,280 --> 00:16:17,680
90 度の回転を行う操作が安心できます。実際には期待どおりに動作します。

187
00:16:18,240 --> 00:16:23,840
さて、なぜ私はあなたにこんなことを尋ねるのでしょうか？ そうですね、もう一度質問してもよいと言われているので、最初の複雑な製品を作ってもらうことにします。

188
00:16:23,840 --> 00:16:28,800


189
00:16:28,800 --> 00:16:34,880
ああ、たくさんの人がとても良い回答を提出してくれました。 わかりました。では、複雑な足し算を実際に採点してみましょう。それが私が期待していたほど簡単なプロセスであるかどうかを確認し、どの程度の説明が必要か見てみましょう。

190
00:16:34,880 --> 00:16:39,120


191
00:16:39,120 --> 00:16:44,400
さて、皆さんの大多数が 2 プラス

192
00:16:44,400 --> 00:16:51,120
3i という正しい答えを得たようです。 とても良いとても良い。 あなたのうち

193
00:16:51,120 --> 00:16:54,960
52 人は、単純に

194
00:16:54,960 --> 00:16:59,520
2 と答えました。これが答えの実数部分になるでしょう。だから、おそらく垂直方向の成分があり、それらの垂直方向の成分をさらに追加する必要があるという事実だけかもしれません。あるいは、2

195
00:16:59,520 --> 00:17:04,000
と答えた人は虚数の現実を拒否しているのかもしれません。垂直方向の要素さえ認識していないだけです。

196
00:17:04,000 --> 00:17:12,080
皆さんの中には、マイナス 2 3 と答えた人もいますが、これは 4 マイナス 2

197
00:17:12,080 --> 00:17:18,320
を取るか 2 マイナス 4 を取るかを入れ替えているだけだと思います。それは完全に理解できます。 2

198
00:17:18,320 --> 00:17:24,240
と 3 がありますが、これはおそらく

199
00:17:24,240 --> 00:17:28,160
i を落としているだけなので、おそらく単純なエラーや入力のようなものが多いと思います。特にテストでは、正しい答えが何かを知っているときは誰にでも起こりますが、その後はシンボルを 1

200
00:17:28,160 --> 00:17:33,440
つ忘れたり、2 つを交換したりしても、それはすべて非常に良いことです。 先に進んで、最初の製品を試してみましょう。ただし、ここで言ったように、質問の

201
00:17:33,440 --> 00:17:38,400
1 つについてはすでに説明したので、先に進んでスキップします。3

202
00:17:38,400 --> 00:17:42,240
コンマ 2

203
00:17:42,240 --> 00:17:51,680
のようなものを回転させる方法はわかっているので、それを行って適切に採点する時間さえ与えられません。 スタルスタルの言葉、彼らは私にそれがうまくいっていると言ってくれますが、それでも私が前に進むのは非常に遅いので、私が彼らに厳しい言葉を言うつもりがないなら、あなたたちもツイッターで彼らに同じように攻撃してください。私たちが質問して、「ねえ、カミネーター」と言う場所です。ライブの質問をもう少しうまく機能させてくれませんか?

204
00:17:51,680 --> 00:17:57,760


205
00:17:57,760 --> 00:18:01,520


206
00:18:02,080 --> 00:18:07,520


207
00:18:07,520 --> 00:18:14,960
さて、ついに到着したようです。 皆さん準備はできていますか？ ああ！

208
00:18:14,960 --> 00:18:22,240
素晴らしい！ 非常に単純な質問です。数値 i

209
00:18:22,240 --> 00:18:27,040
を取得して、それに 3

210
00:18:27,040 --> 00:18:31,200
プラス 2i

211
00:18:31,200 --> 00:18:35,920
を掛けてください。掛け算のルールについてはあまり話していませんが、私が言えるのは、それが次の場合と同じように動作するかのように装うことです。通常の数には、これを全体に分配できる分配特性のようなものがあります。そして、i の決定的な特徴は、i

212
00:18:35,920 --> 00:18:40,400
の

213
00:18:40,400 --> 00:18:45,760
2 乗が負であるという考えです。それが、それを扱うこと以外に知っておくべき唯一の特別なことです。通常の数値と同じなので、製品を進めてください。

214
00:18:45,760 --> 00:18:50,560
素晴らしい！ さて、かなりの数の皆さんが回答に来てくれているようですが、これは私にとっていつもとても嬉しいことで、ちなみにこのロックダウンの中で数学の基礎に戻りたいと熱意を持って参加してくれる人がどれだけいるかということです。知っておいてください、私たちは

215
00:18:50,560 --> 00:18:55,680


216
00:18:55,680 --> 00:19:00,080
1

217
00:19:00,080 --> 00:19:04,080
時間座って、複素数について学び、実際に参加するつもりです。これを受動的に座って見ているのではなく、実際に質問に答えていきます。私にとって本当に嬉しいことです。

218
00:19:04,080 --> 00:19:07,280


219
00:19:07,280 --> 00:19:13,840
さて、これは必ずしも聴衆を二分することを期待していた質問ではありませんが、当然のことながら、ある方向に非常に強い多数派がいるように見えますが、それが正しい方向であることを願っていますが、そうでない場合は、レッスンをどこに行うべきかについて大きな情報を与えることになりますそれは非常に役立つでしょうし、おそらく十分な時間だと思うので、先に進み、答えをこれに固定します。わかりました、そして、大多数がマイナスの

220
00:19:13,840 --> 00:19:19,680
2 プラス 3

221
00:19:19,680 --> 00:19:25,600
i と答えたようです。これは絶対に正しいです。絶対に正しいです。これについては

222
00:19:25,600 --> 00:19:29,200
2 つの考え方があります。そのうちの 1

223
00:19:30,160 --> 00:19:35,840
つは、代数を進めて、それを少しだけ機構的に実行することです。それでは、シートを引き上げて、i 掛ける

224
00:19:35,840 --> 00:19:42,160
3 プラス

225
00:19:42,160 --> 00:19:47,920
2 を計算すると、i 3

226
00:19:47,920 --> 00:19:54,480
プラス 2

227
00:19:54,560 --> 00:20:04,880
i it

228
00:20:04,880 --> 00:20:13,360
になります。 i に

229
00:20:13,360 --> 00:20:19,120
3 を掛けると

230
00:20:19,680 --> 00:20:26,480
3 になります。ii

231
00:20:26,480 --> 00:20:30,800
に 2 を掛けます。i

232
00:20:30,800 --> 00:20:35,840
は 2

233
00:20:35,840 --> 00:20:40,480
倍になります。定義上、i の 2

234
00:20:40,480 --> 00:20:45,600
乗は負の 1

235
00:20:45,600 --> 00:20:50,880
です。つまり、最終的な答えはマイナス 2

236
00:20:50,880 --> 00:20:56,480
プラス 3 のようになります。わかりました、私が言ったとおりです皆さんの大多数がその製品を正しく実行したように見えますが、それを機械的に説明することと、一歩下がって何が起こったのかを幾何学的に正しく言うことは別のことです。なぜなら、私たちが今話したのは、数字を

237
00:20:56,480 --> 00:21:02,160
90 回転させたい場合はという事実だからです。度

238
00:21:02,160 --> 00:21:08,880
ルールは 2

239
00:21:08,880 --> 00:21:15,680
つの座標を交換してから、最初の 1 つにマイナスの

240
00:21:15,680 --> 00:21:21,200
2 を掛けることです

241
00:21:21,200 --> 00:21:25,840
ここで何が起こったか見てください 3 つと

242
00:21:25,840 --> 00:21:30,720
2 つがあります

243
00:21:30,720 --> 00:21:37,440
これらの座標は交換されました 2

244
00:21:37,440 --> 00:21:44,160
つは実部になり、3 は虚数部になりますが、その 2負の値が乗算されたのは、二乗して負の値になるという定義的な機能があるためです。つまり、i

245
00:21:44,160 --> 00:21:50,720
を乗算すると、物体を 90

246
00:21:50,720 --> 00:21:55,840
度回転させるというアクションがあることがわかります。おそらく、それは、おかしなことではないことを意味します。 i

247
00:21:55,840 --> 00:22:01,280
を実数直線と 90 度の角度で幾何学的に配置します。それでは、なぜそれが役立つのかを実際に見てみましょう。このように動作する数値がある場合、すべての計算メカニズムが得られることがわかります。実行したい他の種類の回転のうち、必ずしも

248
00:22:01,280 --> 00:22:06,640
90 度である必要はないかもしれません。なぜこれが機能するのかを示すために、先に進んでアニメーションを表示します。この場合、任意の数値

249
00:22:06,640 --> 00:22:11,760
z があるとします。

250
00:22:11,760 --> 00:22:16,640
z は になる予定です

251
00:22:16,640 --> 00:22:22,160
どこにあるのか見てみましょう z

252
00:22:22,160 --> 00:22:29,680
は 2 になる予定です

253
00:22:29,680 --> 00:22:38,720
えー、それに加えて私は素晴らしいです、そして、考えられる他のすべての複素数によって z

254
00:22:38,720 --> 00:22:43,520
に何が乗算されるのかを理解したいとします。まあ、一つずつ見ていきましょう比較的単純な最初の方法は、z を

255
00:22:43,520 --> 00:22:49,280
1 倍すると何になるかと尋ねると、1 はどこに表示されますか。z

256
00:22:49,280 --> 00:22:54,480
を 1

257
00:22:54,480 --> 00:23:00,160
倍すると z

258
00:23:00,160 --> 00:23:06,720
になるので、小さな黄色の矢印で描いた 1 を取得します。そして、その矢印を回転させて、z

259
00:23:07,280 --> 00:23:12,080
が大きい点まで引き伸ばします。それは些細なことではありますが、ある種の些細な事実です。ああ、いや、いや、そうできるように、実際にそれを書き留めるつもりです。それは後のためです、それはランディです、皆さんは彼のことは心配しないでください、彼はすぐに到着します。だから私はただ、影響力を与えている 3

260
00:23:12,080 --> 00:23:20,480
つの重要な事実を書き留めておきたいのです 3

261
00:23:20,480 --> 00:23:24,240
つの事実、私はそれを 3 つと呼びます掛け算に関する事実

262
00:23:24,240 --> 00:23:29,520
最初の 2

263
00:23:29,520 --> 00:23:34,720
つは単純に見えるでしょう 3 番目は無害に見えるでしょうが、最終的には非常に制約的なものになるので、最初のものは、数値

264
00:23:34,720 --> 00:23:44,880
z があり、それに

265
00:23:44,880 --> 00:23:48,880
1 を掛けると、数値

266
00:23:48,880 --> 00:23:55,600
z が得られるということです。戻って大丈夫です。幾何学的に、つまり、そのベクトルを引き伸ばして回転させて、必要なものを取得します。2番目のベクトルは、先ほど話したことからz倍iを取ると、それが90度の回転です。私が書くことは次のようになります回転数値 z

267
00:23:55,600 --> 00:24:06,000
を 90

268
00:24:06,000 --> 00:24:10,960
度にします。よくあるアニメーションです。これはどのようなものですか。すでに 1

269
00:24:10,960 --> 00:24:15,040
を掛けています。i を取得すると、z の

270
00:24:15,920 --> 00:24:21,440
90 度の回転点自体は問題ないので、2

271
00:24:21,440 --> 00:24:25,680
つ下に無限に移動します。大丈夫です、それが 1

272
00:24:26,320 --> 00:24:31,280
に何をするかはわかります、それが 1 に何をするかはわかります。z

273
00:24:31,280 --> 00:24:35,760
が他の可能な数に何をするかを理解できるかどうか見てみましょう。分配関数がある場合、実際に扱う必要があるのはこれら 2

274
00:24:35,760 --> 00:24:43,200
つだけであることがわかりました。無害に見える 3 番目の事実は、この

275
00:24:43,200 --> 00:24:48,400
z を

276
00:24:48,400 --> 00:24:54,880
c と

277
00:24:54,880 --> 00:24:59,680
d 倍 i

278
00:24:59,680 --> 00:25:04,960
で乗算するとします。ここで、c と

279
00:25:04,960 --> 00:25:12,880
d は任意の

280
00:25:12,880 --> 00:25:18,720
2 つの数値です。これで、z 倍

281
00:25:19,440 --> 00:25:23,760
c i

282
00:25:23,760 --> 00:25:28,320
が分配されます。実はこれを少し違った書き方で書くつもりです。c 掛ける

283
00:25:28,320 --> 00:25:34,960
z プラス z

284
00:25:39,120 --> 00:25:43,360
掛ける di

285
00:25:43,360 --> 00:25:49,920
と書きます。これもまた面白い順序で書いて、d 掛ける zi

286
00:25:49,920 --> 00:25:53,200
と書きます。ここでアイデアをここに示します。そうですね、z がどこにあるのかはわかっていますし、z

287
00:25:53,200 --> 00:25:58,880
と i

288
00:25:58,880 --> 00:26:03,360
の掛け算がどこにあるのかもわかっています。したがって、どこに行く必要があるのかを完全に制限する他の定数によってそれらをスケールアップするだけであれば、先に進んで例を使ってこれを書き留めておきます。ここに戻って、私が言いたいことに対して z を掛けるとどうなるのか知りたいのですが、これらの線が平行に保たれるようにすべてのグリッドが回転し、等間隔に保たれ、垂直が保たれることを納得させたいのです。相互に、この非常に制約されたルールを平面全体に適用し、実際には、これについて特定の

289
00:26:03,360 --> 00:26:08,080
1 つの点について考えてみましょう。マイナスが

290
00:26:08,080 --> 00:26:12,240
2 回あるとします。わかりました。それで、2

291
00:26:12,240 --> 00:26:19,680
つのユニットを正の右方向に移動し、次にマイナスの 1 つのユニットを右に移動します。製品が着地する垂直方向は、z

292
00:26:19,680 --> 00:26:24,160
が着地する場所の 2

293
00:26:24,160 --> 00:26:30,800
倍に加え、私が着地する場所で負の 1

294
00:26:30,800 --> 00:26:36,800
倍でなければなりません。これで、この黄色のベクトルの 2 倍となり、緑色のベクトルの負の

295
00:26:36,800 --> 00:26:45,440
1 倍になることがわかります。実際に積を計算する前でも、z

296
00:26:45,440 --> 00:26:51,840
は 2 に

297
00:26:51,840 --> 00:26:55,600
i を掛けて

298
00:26:55,600 --> 00:27:00,960
2 を引いたものであるように見えるので、数字の

299
00:27:00,960 --> 00:27:06,800
5 に到達する必要があるという事実を読み取ることができます。それで、実際にこれを代数的に計算してもらいたいのです。なぜなら、この作業が実際に正しく行われているのを見るのは啓発されると思うからです。この幾何学的な規則があり、単に引き伸ばしたり回転させたりするだけで、これは合計を拡張する非常に機械的なプロセスに対応するという事実です。クイズに戻って、答えを明らかにしたので少しばかげていますが、ここで皆さんに実際にやってもらいたいのは、2 プラス

300
00:27:06,800 --> 00:27:11,440
i 掛ける

301
00:27:11,440 --> 00:27:16,560
2 マイナス

302
00:27:16,560 --> 00:27:20,880
i ともし今メモをお持ちでしたら、紙と鉛筆をお持ちでしたら、常に持って授業に来ることをお勧めします。最初の内側の外側の最後の分布プロパティを実行して、最終的にどの数字が飛び出すかを機械的に確認してください。これをやってから、それが幾何学的な直感とどのように一致するかを見ていきます。そうしている間に、うまくいけば鉛筆と紙でそれを解決している間、聴衆から質問があるようです。 i

303
00:27:20,880 --> 00:27:26,400
は i

304
00:27:26,400 --> 00:27:31,440
と j

305
00:27:31,440 --> 00:27:37,200
と同じです 物理学の素晴らしい質問です 実際、これはあなたが思っているよりもはるかに興味深い質問です

306
00:27:37,200 --> 00:27:42,480
簡単な答えはノーです 物理学では、正しい単語の方向を

307
00:27:42,480 --> 00:27:47,520
i と表現し、次に上と下を表現することがよくあります方向はああ、もう一つあります。先に質問に答えて終わりにさせてください。物理学では、xy 平面を説明する代わりに、正しいベクトルを

308
00:27:47,520 --> 00:27:52,480
i 時々

309
00:27:52,480 --> 00:27:56,880
i hat

310
00:27:56,880 --> 00:28:01,760
として説明し、垂直方向のベクトルを j hat

311
00:28:01,760 --> 00:28:06,320
として説明する状況がよくあります。それは別のことです 物理学者がベクトルの正しい方向をどのように説明するか

312
00:28:06,320 --> 00:28:11,840
彼らは必ずしも複素数を説明しているわけではありません まったく別のことです

313
00:28:11,840 --> 00:28:16,000
実はもっと興味深いのは その慣例が生まれた理由は ええと

314
00:28:16,000 --> 00:28:24,400
私は拡張する数体系と関係があると信じています複素数を超えても四元数と呼ばれるので、複素数では i

315
00:28:24,400 --> 00:28:28,640
というものを導入し、四元数では j

316
00:28:28,640 --> 00:28:34,320
と k を導入します。これらの

317
00:28:34,320 --> 00:28:42,640
2 つの数は両方ともマイナス

318
00:28:42,640 --> 00:28:48,560
1 になる平方根を持ちます。それらを発明した男はハミルトンです。彼は三次元空間を非常にエレガントに記述しようとしていて、純粋に想像上の方向 ij

319
00:28:48,560 --> 00:28:53,600
と k

320
00:28:53,600 --> 00:28:57,200
を使うのがそれを行うための良い方法になりました。それとそれを前進させようとする彼の試みのおかげで、慣習が普通の物理学の中に紛れ込んで記述されたのだと思います。もちろん、これらは i

321
00:28:57,200 --> 00:29:03,520
と j であり、これは深刻な混乱につながります。なぜなら、物理学者が物事をどのように考えるかを見ると、i

322
00:29:03,520 --> 00:29:10,240
が正しい方向にあることがわかるからです。j は垂直方向にありますが、複素数の場合、i

323
00:29:10,240 --> 00:29:16,560
は当然垂直方向にあるので、それは完全に混乱を引き起こす可能性があるだけです、えーっと、私たちの何だったのか、ああ、彼らはコメントを削除したようです、ああ、彼らに生意気なコメントがあった、そして彼らは恥ずかしくなったのでそれを取り除きました、それは画面上にあります、そこにあります将来のみんなが今見ることができるように、ここで少し代数を理解するのにおそらく十分な時間だったと思うので、先に進み、みんなが見ることができるように採点しましょう。そして、あなたたちの大多数は、私が答えを教えたように見えます。ですから、皆さんの大多数が正しい答えをしていると仮定します。ああ、興味深いですね。それで、どうやら 5

324
00:29:16,560 --> 00:29:23,520
5 が正解のようで、それが最も一般的な答えですが、間違っていたのは 3

325
00:29:23,520 --> 00:29:29,440
と 4

326
00:29:29,440 --> 00:29:35,120
で、もしかしたらできるかも知れません。なぜ 3

327
00:29:35,120 --> 00:29:42,000
と 4 が一般的だったのか理解してみてください、うーん、これについては誤解があります

328
00:29:42,000 --> 00:29:46,240
69 は近いです

329
00:29:46,240 --> 00:29:49,520
0 プラス 5

330
00:29:49,520 --> 00:29:55,040
は正しいですが、まあ、変な方法でフォーマットされていると思います、それでは、先に進んでこれを手動で処理しましょう、わかりました実際、あなたは複素数を掛ける楽しいプロセスを知っています、なぜならそれは非常に決定的だから、あなたは何をしなければならないか知っています、どこから始めるべきか、どこで終わるか知っています、そしてそれは本当にそれを通して練習するようなものです、ええと、それで2回これが最初に得られるもので、次に内側の部分 i

331
00:29:55,040 --> 00:29:58,560
に 2

332
00:29:58,560 --> 00:30:02,240
を掛けて 2i になり、次に外側の部分を負の

333
00:30:02,240 --> 00:30:06,800
i に

334
00:30:06,800 --> 00:30:11,520
2 を掛けて負の

335
00:30:11,520 --> 00:30:16,960
2i となり、最後の部分は i

336
00:30:16,960 --> 00:30:23,040
に負の i

337
00:30:23,040 --> 00:30:27,840
を掛けたものになります。つまり、i の

338
00:30:27,840 --> 00:30:33,120
2 乗は負の値になります。定義する特徴は、i の

339
00:30:33,120 --> 00:30:39,200
2 乗は負の

340
00:30:39,200 --> 00:30:43,920
1 と同じであることを覚えておいてください。つまり、答えの実数部分は 2

341
00:30:43,920 --> 00:30:50,880
掛ける 2

342
00:30:50,880 --> 00:30:56,240
または 4

343
00:30:56,240 --> 00:31:01,440
からマイナス 1 を引いて、プラス

344
00:31:01,440 --> 00:31:06,320
1 になります。

345
00:31:06,320 --> 00:31:11,840
「5になると、虚数部は互いに打ち消し合い、2iはマイナスの2iで打ち消し合います。それで、クイズに答えて、えー、5プラスゼロと答えた皆さん、あなたは余分な功績を知っています、なぜならそれは実際には100正解ですから、あなたはそうです」私たちはこれを複雑な文脈で行っているので、その点であなたが間違って採点されるべき理由はないことも強調していますが、えっと、ここで何が興味深いのですか、最初の講義を見ている人は二乗の差による類似点に気づくかもしれませんこれは事実上二乗差タイプの質問で、3 つまたは

346
00:31:11,840 --> 00:31:16,560
4 つと答えた人は、おそらく 3

347
00:31:16,560 --> 00:31:21,520
つと答えた場合、この 4

348
00:31:21,520 --> 00:31:27,840
つを取得して 1 を引いたのではなく、この

349
00:31:27,840 --> 00:31:32,960
4 つを引いたからではないかと推測します。マイナスの

350
00:31:33,680 --> 00:31:38,960
1 つの非常によくある間違いを引くことは問題ありません。そして、4

351
00:31:38,960 --> 00:31:44,240
つと答えた場合、それは i の

352
00:31:44,240 --> 00:31:48,720
2 乗は実数に単純化できるという事実を忘れているためです。つまり、それが最終的な答えの実数部分に非常に重要であることがわかります。興味深いのは、代数をただ歩いていくというプロセスが、z

353
00:31:48,720 --> 00:31:53,360
を掛けると物を回転させたり引き伸ばしたりする作用がある、という幾何学的な考え方とは大きく異なるように感じられることです。そして、それが物をどのように回転させ引き伸ばすかは、番号 1

354
00:31:53,360 --> 00:31:59,120
を番号 z に座らせるために必要で、実際、私には良い友人がいます、えーと、ベン・スパークスは頻繁に番号ファイルに参加する人で、ご存知の方もいるかもしれませんが、彼に少しジオグラを作成するように頼みましたなぜなら、彼は単なる地理の達人で、実際にここで遊べる計算尺に相当する複素数を作成したからです。そのため、これがどのように機能するかというと、数字の

355
00:31:59,120 --> 00:32:06,400
1 を取り出して、それをドラッグするだけです。私が行うと、グリッドの残りの部分が必要な方法で移動し、原点が所定の位置に固定されたままになり、ストレッチできることを除いて他のすべての種類は固定されたままになります。そのため、これを使用する方法は次のとおりです。つまり、w

356
00:32:10,400 --> 00:32:16,400
の z

357
00:32:16,400 --> 00:32:21,040
倍が何であるかを知りたいとしましょう。数値 1 を引き伸ばして回転させて

358
00:32:21,040 --> 00:32:27,920
z に着地させ、次に、w

359
00:32:27,920 --> 00:32:33,440
に何が起こるかを追跡します。これは、現在 として描画されています。オレンジ色のベクトルは w

360
00:32:33,440 --> 00:32:37,120
に何が起こるかを追跡し、そこに到達すると、最終的に 5

361
00:32:37,120 --> 00:32:45,520
になると読み上げることができます。たとえ実際の計算では、先ほど示したように代数を使って計算することになりますが、次のことを頭の片隅に置いておきます。これは、複素数と幾何学、さらには三角法の関係を描くのに役立ちます。これについては後ほど説明します。これは、予想よりもはるかに役立つ関係であることがわかりました。それでは、皆さんに質問させてください。 2番目の質問は、複素数がどのように機能するかについて私が今話した内容を踏まえた、役立つちょっとしたフレンドリーなクイズです。推測してもらいたいです。知らなくても大丈夫です。ここで推測したいだけなら大丈夫です。複素数

362
00:32:45,520 --> 00:32:52,400
z は何ですか。z を掛けると反時計回りに

363
00:32:52,400 --> 00:33:00,080
30 度、または

364
00:33:00,080 --> 00:33:06,080
pi 6

365
00:33:06,080 --> 00:33:10,400
ラジアン回転する効果があります。それでは、z に番号を付けて、それがアクションとして適用され、すべてに何をするかを言いたいとします。他の考えられる複素数 対応するアクションは、円周率

366
00:33:10,400 --> 00:33:16,720
6 ラジアンまたは

367
00:33:16,720 --> 00:33:21,200
30 ええと

368
00:33:21,200 --> 00:33:25,440
30 度回転することです。わかりました、素晴らしいです、そのうちの 1

369
00:33:25,440 --> 00:33:33,040
つに関して強力な合意に基づいて多くの答えが得られています。これは常に良い兆候です。では、その方法をお見せしましょう私はこれを描くかもしれません、もし私が何かをしているなら、私はある種の単位円を見てみましょう、そして幸いにも私はここに無限にある単位円を持っているので、私は大丈夫と言うでしょう、私が行っているアクションはわかっていますここにある数字 1

370
00:33:33,120 --> 00:33:40,400
を 30 度回転させたものを求めます。複素数

371
00:33:40,400 --> 00:33:45,760
z が何であれ、適切なアクションが実行されます。そこから、あなたとあなたが求める三角関数のすべてが得られます。私は前回取り組んでいたので、答えを見て、説明を説明する前に、答えを所定の位置に固定しましょう。この文脈での正しい答えは

372
00:33:45,760 --> 00:33:52,480
d です。これは、円周率

373
00:33:52,480 --> 00:33:59,200
6 の余弦に、円周率 6

374
00:33:59,200 --> 00:34:06,720
の正弦である i

375
00:34:06,720 --> 00:34:14,480
を加えたものです、おめでとうございます正確に答えた大多数の人たちにとって、私にとって非常に興味深いのは、2 番目に多かった答えが、1

376
00:34:14,480 --> 00:34:23,520
に pi 6

377
00:34:23,520 --> 00:34:29,920
を足したものであるということです。実際、それはまったく合理的な推測だと思います。なぜそうなのか見てみましょう。私たちは友好的な単位円に戻ります 私たちが目指していた数字は、私が言ったように、円周率6ラジアンの周りに座っていて、前回話したすべてのことから、そのx成分は円周率6の余弦であり、これは一種の余弦ですが定義されており、その

378
00:34:32,240 --> 00:34:37,200
y 成分は

379
00:34:40,640 --> 00:34:45,360
pi 6 のサインになります。つまり、扱っている数値

380
00:34:45,360 --> 00:34:50,960
z には、pi

381
00:34:50,960 --> 00:34:55,520
6 のコサインの x

382
00:34:55,520 --> 00:35:01,920
成分があり、次に虚数成分が含まれます。円周率 6

383
00:35:03,200 --> 00:35:08,880
の正弦の y

384
00:35:08,880 --> 00:35:12,960
方向です。私が言ったように 2 番目に一般的な答えは素晴らしいですね。それは非常に興味深いですね。えーっと、それを調べてみると、1

385
00:35:12,960 --> 00:35:18,640
に 1

386
00:35:18,640 --> 00:35:22,480
を加えた円周率 6

387
00:35:22,480 --> 00:35:27,280
が 1 であったので、それがどこにあるか見てみましょう。ここに2番目のクリーナーユニットサークルを持ってきてください、私が言ったように、私には無限の供給があると彼らはそれが1つであると推測し、その周りを円周率6を歩く代わりに、あなたはまっすぐに円周率6まで歩くのではなく、実際には特に小さなものにとっては非常に近いです角度は、まっすぐ上に歩いているだけであれば、円の周りを歩くのとあまり変わらないので、その数値を使用して

388
00:35:27,280 --> 00:35:32,080
30 度回転するアクションを実行しようとすると、わずかに小さい角度で回転するアクションになります。

389
00:35:32,080 --> 00:35:36,880
30度を超えると、彼らは1倍よりわずかに大きい値で物事を引き伸ばすでしょうが、実際にはそれに近いです、これは素晴らしいことです。通常、誤解は計算上非常に間違っている可能性があるためですが、ここでの誤解は計算上は完全に間違っているようなものであるという考えは、 close

390
00:35:36,880 --> 00:35:42,080
は、幾何学的推論が真実と一致している可能性があることを示しています。これは素晴らしいと思います。これが実際にどのように使用されるかを説明します。30 度回転するアクションを持つ数値があります。ええと、これを導入したいと思います。ええと、もちろん、私たち全員がブランデーについて考えるためのフレンドリーな円周率の生き物です。それで、私が円周率の生き物を持っているとしましょう。私はビデオをアニメーション化することがわかりませんが、ある時点で何らかの理由でその円周率の生き物を30回転させたいと思っています度はわかりました。回転させたいだけです。これを行う方法はたくさんあります。コンピューター グラフィックスで最も一般的な方法の

391
00:35:42,080 --> 00:35:47,200
1 つは行列を使用することです。これについてはまた別の機会に取り上げるかもしれませんが、使用できる戦術は複素数を使用することです。これがどのように機能するかというと、円周率の生き物を複素平面に住んでいると考えることです。その後、あらゆる種類のコンピューター

392
00:35:47,200 --> 00:35:50,880
グラフィックスでは、常にさまざまな点で定義されます。多くの場合、その周囲の制御点と、それらの制御点のそれぞれに複素座標を与えることになります。たとえば、ここの右下足、またはステージ左側だと思いますが、右側は約1マイナス3の座標を持っているように見えるので、1マイナス3という数字が与えられます。そして、あなたたちが今答えてくれたことからその点を取得し、原点を中心に 30 度回転したときの点を計算したい場合の質問です。それに何をかけるべきかは

393
00:35:52,560 --> 00:35:58,000
30 度のコサインと

394
00:35:58,000 --> 00:36:03,680
30 度のサインです。複素数は実数と同じくらい実数です

395
00:36:03,680 --> 00:36:08,480
考慮すべき要素の 1 つは、多くのプログラミング言語には複素数が組み込まれており、実数と同様に実数としてみなされるということだと思います。複素数で遊んでください。3

396
00:36:08,480 --> 00:36:14,000
つの負の 1

397
00:36:14,000 --> 00:36:19,440
のようなものを書くと、この場合は有効な型とみなされます。j を使用します。基本的に、プログラミング用語では

398
00:36:19,440 --> 00:36:24,160
i がインデックス変数としてよく使用されるため、実際に一致する代わりに j

399
00:36:24,160 --> 00:36:28,560
を使用するだけだと思います。電気工学の慣例でも、虚数に i

400
00:36:28,560 --> 00:36:36,400
を使用する代わりに j

401
00:36:36,400 --> 00:36:41,360
を使用します。これも i はすでに使用されているようなものなので、3

402
00:36:41,360 --> 00:36:46,400
から 1

403
00:36:46,400 --> 00:36:51,440
を引いた j は、3

404
00:36:51,440 --> 00:36:57,280
から 1

405
00:36:57,280 --> 00:37:02,320
を引いた i

406
00:37:02,320 --> 00:37:07,280
と同じであると読むことができ、これを解釈できます。数値と他の複素数値を掛け合わせることができます。5 4 2

407
00:37:07,280 --> 00:37:12,240
などはわかりませんが、掛け算すると複素乗算のルールが適用されますが、これは基本的にそれを無効にするだけです。これは実数部分であると考えることができます。 3

408
00:37:12,240 --> 00:37:18,240
かける 4

409
00:37:18,240 --> 00:37:25,280
または 12 マイナス

410
00:37:25,280 --> 00:37:30,240
1 かける

411
00:37:30,240 --> 00:37:35,120
2 です。覚えておいてください。i

412
00:37:35,120 --> 00:37:40,640
の 2 乗はマイナスになるので、そこから

413
00:37:40,640 --> 00:37:45,600
14 が来ます。すると、虚数部はマイナス

414
00:37:45,600 --> 00:37:52,720
1 かける 4、つまりマイナス

415
00:37:52,720 --> 00:37:58,080
4 プラス

416
00:37:58,080 --> 00:38:05,360
3 かける

417
00:38:05,360 --> 00:38:09,680
2 になります。これは 2

418
00:38:09,680 --> 00:38:17,200
になるので、とてもクールです。Python がすべてを私たちのためにやってくれているようです。これが何を意味するのか覚えておいてください。円周率のクリーチャーを回転させたいと考えて、次のような

419
00:38:17,200 --> 00:38:22,240
1 つの点に焦点を当てるとします。ここに座っている彼の足は

420
00:38:22,240 --> 00:38:26,320
1 マイナス 3

421
00:38:26,320 --> 00:38:30,160
の位置にあるので、足を実数部 1

422
00:38:31,360 --> 00:38:37,680
虚数部マイナス 3

423
00:38:38,320 --> 00:38:42,560
に座っていると定義しましょう。 えー、私が欲しい回転数 z

424
00:38:42,560 --> 00:38:47,760
は皆さんが私のために考えてくれたものです。これには少し計算が必要なので、常に数学をインポートしましょう。これから楽しいことをするつもりなので、実部がコサインである za

425
00:38:47,760 --> 00:38:53,680
複素数を呼び出します。まあ、30 度は書けません。これはすべてのことになるからです。ラジアンなので、円周率 6

426
00:38:53,680 --> 00:38:58,160
と書きます。これは 30

427
00:38:58,960 --> 00:39:07,120
度と同じです。そして、y は数学の正弦の正弦になります。6

428
00:39:07,120 --> 00:39:13,360
を超える円周率は素晴らしいので、その成分を見ると、ええと実数部になります。は約0です。 866 であり、虚数部は正確に

429
00:39:13,360 --> 00:39:17,600
2 分の

430
00:39:17,600 --> 00:39:21,200
1 である必要がありますが、コンピュータはすべての実数を完璧に取得することはできないため、小さな数値エラーが発生することがよくあります。宇宙には十分な情報がないため、少しの数値誤差が必要です。エラーです。最初の部分は 3

431
00:39:21,200 --> 00:39:26,880
の平方根を 2

432
00:39:26,880 --> 00:39:31,680
で割ったものです。これが前回の講義で円周率 6 の余弦などを計算するために取り組んでいたすべてです。これが私たちにとって何を意味するかというと、z

433
00:39:31,680 --> 00:39:37,520
をとった場合です。足を右に回するか、足を思い出してください。1 つのマイナス

434
00:39:37,520 --> 00:39:43,200
3 の z

435
00:39:43,200 --> 00:39:47,600
に足を掛ければ、複素乗算の機械的な操作を実行するだけで、どこに行くかがわかります。この点は、明らかに 2

436
00:39:47,600 --> 00:39:54,960
付近で着地するはずです。 実数部として 3 を入力し、次にマイナス 2 を入力します。

437
00:39:54,960 --> 00:39:59,680


438
00:40:00,400 --> 00:40:05,360


439
00:40:05,360 --> 00:40:09,760


440
00:40:09,760 --> 00:40:14,240


441
00:40:14,240 --> 00:40:18,880


442
00:40:18,880 --> 00:40:23,040


443
00:40:23,040 --> 00:40:29,440


444
00:40:29,440 --> 00:40:34,720


445
00:40:34,720 --> 00:40:39,840


446
00:40:39,840 --> 00:40:45,520


447
00:40:45,520 --> 00:40:49,600


448
00:40:49,600 --> 00:40:56,000


449
00:40:56,000 --> 00:41:00,800


450
00:41:00,800 --> 00:41:05,840


451
00:41:05,840 --> 00:41:09,440


452
00:41:09,440 --> 00:41:14,880


453
00:41:14,880 --> 00:41:20,160


454
00:41:20,160 --> 00:41:24,880


455
00:41:24,880 --> 00:41:30,320


456
00:41:30,320 --> 00:41:34,640


457
00:41:34,640 --> 00:41:38,480


458
00:41:38,480 --> 00:41:45,200


459
00:41:45,200 --> 00:41:49,680


460
00:41:49,680 --> 00:41:56,880


461
00:41:56,880 --> 00:42:01,680


462
00:42:01,680 --> 00:42:06,080


463
00:42:06,080 --> 00:42:11,120


464
00:42:11,120 --> 00:42:15,920


465
00:42:15,920 --> 00:42:24,800


466
00:42:24,800 --> 00:42:32,080


467
00:42:32,080 --> 00:42:38,240


468
00:42:38,240 --> 00:42:44,480


469
00:42:45,200 --> 00:42:51,280


470
00:42:51,280 --> 00:42:54,640


471
00:42:55,280 --> 00:43:03,440


472
00:43:03,440 --> 00:43:12,080


473
00:43:12,080 --> 00:43:17,600


474
00:43:17,600 --> 00:43:22,640


475
00:43:22,640 --> 00:43:29,920


476
00:43:29,920 --> 00:43:35,120


477
00:43:35,120 --> 00:43:38,400


478
00:43:38,400 --> 00:43:43,840


479
00:43:43,840 --> 00:43:48,160


480
00:43:49,040 --> 00:43:53,520


481
00:43:53,520 --> 00:43:58,560


482
00:43:58,560 --> 00:44:03,040


483
00:44:03,040 --> 00:44:07,520


484
00:44:07,520 --> 00:44:11,840


485
00:44:11,840 --> 00:44:20,720


486
00:44:30,720 --> 00:44:35,680


487
00:44:35,680 --> 00:44:39,840


488
00:44:41,840 --> 00:44:55,840


489
00:45:05,600 --> 00:45:11,760


490
00:45:12,400 --> 00:45:16,880


491
00:45:16,880 --> 00:45:20,320


492
00:45:21,200 --> 00:45:31,760


493
00:45:31,760 --> 00:45:38,960


494
00:45:39,680 --> 00:45:46,080


495
00:45:46,080 --> 00:45:55,760


496
00:46:02,640 --> 00:46:06,080


497
00:46:06,080 --> 00:46:11,680


498
00:46:11,680 --> 00:46:16,560


499
00:46:16,560 --> 00:46:21,920


500
00:46:21,920 --> 00:46:27,040


501
00:46:27,040 --> 00:46:36,320


502
00:46:41,040 --> 00:46:47,120


503
00:46:47,120 --> 00:46:50,720


504
00:46:50,720 --> 00:46:54,880


505
00:46:54,960 --> 00:46:59,280


506
00:46:59,280 --> 00:47:04,640


507
00:47:04,640 --> 00:47:09,520


508
00:47:09,520 --> 00:47:14,080


509
00:47:14,080 --> 00:47:18,320


510
00:47:18,320 --> 00:47:23,680


511
00:47:23,680 --> 00:47:30,000


512
00:47:30,000 --> 00:47:35,040


513
00:47:35,680 --> 00:47:41,920


514
00:47:41,920 --> 00:47:47,520


515
00:47:47,520 --> 00:47:51,920


516
00:47:51,920 --> 00:47:57,120


517
00:47:57,120 --> 00:48:07,680


518
00:48:08,640 --> 00:48:13,520


519
00:48:13,520 --> 00:48:20,960


520
00:48:20,960 --> 00:48:27,360


521
00:48:27,360 --> 00:48:34,320


522
00:48:34,320 --> 00:48:39,200


523
00:48:39,200 --> 00:48:45,040


524
00:48:45,040 --> 00:48:51,280


525
00:48:51,280 --> 00:48:55,840


526
00:48:55,840 --> 00:49:02,400


527
00:49:02,400 --> 00:49:09,120


528
00:49:09,120 --> 00:49:13,840


529
00:49:13,840 --> 00:49:24,240


530
00:49:24,240 --> 00:49:27,840


531
00:49:27,840 --> 00:49:32,880


532
00:49:32,880 --> 00:49:40,240


533
00:49:40,320 --> 00:49:45,440


534
00:49:47,200 --> 00:49:50,400


535
00:49:50,400 --> 00:49:55,280


536
00:49:55,280 --> 00:50:02,400


537
00:50:02,400 --> 00:50:08,000


538
00:50:08,000 --> 00:50:15,120


539
00:50:15,120 --> 00:50:19,760


540
00:50:19,760 --> 00:50:26,560


541
00:50:27,760 --> 00:50:35,200


542
00:50:35,200 --> 00:50:39,680


543
00:50:39,680 --> 00:50:47,360


544
00:50:47,360 --> 00:50:53,520


545
00:50:53,520 --> 00:50:59,520


546
00:51:00,080 --> 00:51:06,480


547
00:51:06,480 --> 00:51:11,840


548
00:51:11,840 --> 00:51:17,520


549
00:51:17,520 --> 00:51:21,120


550
00:51:21,120 --> 00:51:28,880


551
00:51:28,880 --> 00:51:35,840


552
00:51:36,400 --> 00:51:45,280


553
00:51:45,280 --> 00:51:50,960


554
00:51:50,960 --> 00:51:56,000


555
00:51:56,000 --> 00:52:02,480


556
00:52:02,480 --> 00:52:07,440


557
00:52:07,440 --> 00:52:12,400


558
00:52:12,400 --> 00:52:16,880


559
00:52:17,760 --> 00:52:22,800


560
00:52:22,800 --> 00:52:27,520


561
00:52:27,520 --> 00:52:32,880


562
00:52:32,880 --> 00:52:37,600


563
00:52:37,600 --> 00:52:42,000


564
00:52:42,000 --> 00:52:47,200


565
00:52:47,200 --> 00:52:54,160


566
00:52:55,680 --> 00:53:02,400


567
00:53:02,400 --> 00:53:08,640


568
00:53:08,640 --> 00:53:14,720


569
00:53:14,720 --> 00:53:19,600


570
00:53:19,600 --> 00:53:24,960


571
00:53:24,960 --> 00:53:31,680


572
00:53:31,680 --> 00:53:37,280


573
00:53:37,360 --> 00:53:38,480


574
00:53:42,560 --> 00:53:47,680


575
00:53:47,680 --> 00:53:52,320


576
00:53:52,320 --> 00:53:56,880


577
00:53:56,880 --> 00:54:02,240


578
00:54:02,240 --> 00:54:11,920


579
00:54:11,920 --> 00:54:18,480


580
00:54:18,480 --> 00:54:22,720


581
00:54:22,720 --> 00:54:27,440


582
00:54:27,440 --> 00:54:31,280


583
00:54:31,280 --> 00:54:36,720


584
00:54:36,720 --> 00:54:42,080


585
00:54:42,080 --> 00:54:50,160


586
00:54:50,160 --> 00:54:56,640


587
00:54:56,640 --> 00:55:01,360


588
00:55:04,160 --> 00:55:09,680


589
00:55:09,680 --> 00:55:14,480


590
00:55:14,480 --> 00:55:22,720


591
00:55:22,720 --> 00:55:26,560


592
00:55:27,040 --> 00:55:31,840


593
00:55:31,840 --> 00:55:37,440


594
00:55:37,440 --> 00:55:42,240


595
00:55:42,240 --> 00:55:47,120


596
00:55:47,760 --> 00:55:56,480


597
00:55:56,480 --> 00:56:04,720


598
00:56:05,520 --> 00:56:10,400


599
00:56:10,400 --> 00:56:15,600


600
00:56:15,600 --> 00:56:21,520


601
00:56:21,520 --> 00:56:27,040


602
00:56:27,040 --> 00:56:33,840


603
00:56:33,840 --> 00:56:45,600


604
00:56:45,600 --> 00:56:52,640


605
00:56:52,640 --> 00:56:58,000


606
00:56:58,000 --> 00:57:02,400


607
00:57:02,400 --> 00:57:06,720


608
00:57:06,720 --> 00:57:13,280


609
00:57:13,280 --> 00:57:22,480


610
00:57:23,120 --> 00:57:30,400


611
00:57:30,400 --> 00:57:34,400


612
00:57:43,520 --> 00:57:44,320


613
00:57:48,240 --> 00:57:51,840


614
00:57:52,560 --> 00:57:58,800


615
00:57:58,800 --> 00:58:03,600


616
00:58:03,600 --> 00:58:10,320


617
00:58:10,320 --> 00:58:17,040


618
00:58:17,040 --> 00:58:21,040


619
00:58:21,040 --> 00:58:25,840


620
00:58:25,840 --> 00:58:30,160


621
00:58:30,160 --> 00:58:34,240


622
00:58:34,240 --> 00:58:38,400


623
00:58:38,400 --> 00:58:42,480


624
00:58:42,480 --> 00:58:49,200


625
00:58:49,200 --> 00:58:54,080


626
00:58:54,080 --> 00:58:58,640


627
00:58:58,640 --> 00:59:05,200


628
00:59:05,280 --> 00:59:09,280


629
00:59:10,160 --> 00:59:14,080


630
00:59:14,080 --> 00:59:18,560


631
00:59:18,560 --> 00:59:24,080


632
00:59:24,080 --> 00:59:28,160


633
00:59:28,160 --> 00:59:34,160


634
00:59:34,160 --> 00:59:38,720


635
00:59:38,720 --> 00:59:43,520


636
00:59:43,520 --> 00:59:49,280


637
00:59:49,280 --> 00:59:56,640


638
00:59:56,640 --> 01:00:02,240


639
01:00:02,240 --> 01:00:07,040


640
01:00:08,880 --> 01:00:15,760


641
01:00:15,760 --> 01:00:21,440


642
01:00:21,440 --> 01:00:26,560


643
01:00:26,560 --> 01:00:30,880


644
01:00:30,880 --> 01:00:36,000


645
01:00:36,000 --> 01:00:39,760


646
01:00:39,760 --> 01:00:43,360


647
01:00:43,360 --> 01:00:47,920


648
01:00:47,920 --> 01:00:52,640


649
01:00:52,640 --> 01:00:56,800


650
01:00:56,800 --> 01:01:01,360


651
01:01:01,360 --> 01:01:05,600


652
01:01:05,600 --> 01:01:13,040


653
01:01:13,040 --> 01:01:19,360


654
01:01:19,360 --> 01:01:26,240


655
01:01:26,240 --> 01:01:33,280


656
01:01:33,280 --> 01:01:40,720


657
01:01:40,720 --> 01:01:45,120


658
01:01:46,000 --> 01:01:51,520


659
01:01:51,520 --> 01:01:57,040


660
01:01:57,040 --> 01:02:03,040


661
01:02:03,040 --> 01:02:07,520


662
01:02:08,880 --> 01:02:13,760


663
01:02:13,760 --> 01:02:18,480


664
01:02:18,480 --> 01:02:24,560


665
01:02:24,560 --> 01:02:29,680


666
01:02:29,680 --> 01:02:34,960


667
01:02:34,960 --> 01:02:40,160


668
01:02:40,160 --> 01:02:48,640


669
01:02:48,640 --> 01:02:52,160


670
01:02:52,160 --> 01:02:58,000


671
01:02:58,000 --> 01:03:03,200


672
01:03:03,200 --> 01:03:07,600


673
01:03:07,600 --> 01:03:12,000


674
01:03:12,000 --> 01:03:19,280


675
01:03:19,280 --> 01:03:24,320


676
01:03:24,320 --> 01:03:29,680


677
01:03:31,840 --> 01:03:37,360


678
01:03:37,360 --> 01:03:44,800


679
01:03:44,800 --> 01:03:49,200


680
01:03:49,200 --> 01:03:58,720


681
01:03:58,720 --> 01:04:04,320


682
01:04:04,320 --> 01:04:12,640


683
01:04:12,640 --> 01:04:17,360


684
01:04:17,360 --> 01:04:23,360


685
01:04:23,360 --> 01:04:31,280


686
01:04:31,280 --> 01:04:38,320


687
01:04:38,320 --> 01:04:47,040


688
01:04:47,040 --> 01:04:52,160


689
01:04:52,160 --> 01:04:58,240


690
01:04:58,880 --> 01:05:04,160


691
01:05:04,160 --> 01:05:10,400


692
01:05:10,400 --> 01:05:15,440


693
01:05:15,440 --> 01:05:20,160


694
01:05:20,960 --> 01:05:25,600


695
01:05:25,680 --> 01:05:30,240


696
01:05:30,240 --> 01:05:35,280


697
01:05:35,280 --> 01:05:45,200


698
01:05:45,200 --> 01:05:52,080


699
01:05:52,160 --> 01:05:57,600


700
01:05:57,600 --> 01:06:03,680


701
01:06:03,680 --> 01:06:08,720


702
01:06:11,360 --> 01:06:16,640


703
01:06:22,080 --> 01:06:32,880


704
01:06:32,880 --> 01:06:38,240


705
01:06:38,240 --> 01:06:43,360


706
01:06:44,080 --> 01:06:48,800


707
01:06:49,360 --> 01:06:54,560


708
01:06:54,560 --> 01:07:00,320


709
01:07:00,320 --> 01:07:04,880


710
01:07:04,880 --> 01:07:10,960


711
01:07:11,360 --> 01:07:19,840


712
01:07:19,840 --> 01:07:25,120


713
01:07:28,320 --> 01:07:33,200


714
01:07:33,200 --> 01:07:39,680


715
01:07:40,560 --> 01:07:49,280


716
01:07:49,280 --> 01:07:55,600


717
01:07:55,600 --> 01:08:03,920


718
01:08:03,920 --> 01:08:12,160


719
01:08:12,160 --> 01:08:16,720


720
01:08:16,720 --> 01:08:20,720


721
01:08:20,720 --> 01:08:24,240


722
01:08:24,240 --> 01:08:29,280


723
01:08:29,280 --> 01:08:35,360


724
01:08:35,360 --> 01:08:41,280


725
01:08:41,280 --> 01:08:48,000


726
01:08:48,000 --> 01:08:52,880


727
01:08:52,880 --> 01:08:57,680


728
01:08:57,680 --> 01:09:03,680


729
01:09:03,680 --> 01:09:10,000


730
01:09:10,000 --> 01:09:16,880


731
01:09:16,880 --> 01:09:24,160


732
01:09:24,160 --> 01:09:29,760


733
01:09:29,760 --> 01:09:34,480


734
01:09:34,480 --> 01:09:40,160


735
01:09:40,160 --> 01:09:45,200


736
01:09:45,200 --> 01:09:49,840


737
01:09:49,840 --> 01:09:55,360


738
01:09:55,360 --> 01:09:59,040


739
01:10:03,520 --> 01:10:10,800


740
01:10:10,800 --> 01:10:14,880


741
01:10:15,520 --> 01:10:18,720


742
01:10:22,400 --> 01:10:29,680


743
01:10:29,680 --> 01:10:34,720


744
01:10:34,720 --> 01:10:39,920


745
01:10:39,920 --> 01:10:48,320


746
01:10:48,320 --> 01:10:54,480


747
01:10:54,480 --> 01:10:59,520


748
01:10:59,520 --> 01:11:03,840


749
01:11:03,840 --> 01:11:07,520


750
01:11:07,520 --> 01:11:13,360


751
01:11:13,360 --> 01:11:18,480


752
01:11:18,480 --> 01:11:24,320


753
01:11:24,320 --> 01:11:29,280


754
01:11:29,280 --> 01:11:35,360


755
01:11:35,360 --> 01:11:40,800


756
01:11:40,800 --> 01:11:46,560


757
01:11:46,560 --> 01:11:53,760


758
01:11:53,760 --> 01:11:58,720


759
01:11:58,720 --> 01:12:04,800


760
01:12:04,800 --> 01:12:10,080


761
01:12:10,080 --> 01:12:15,120


762
01:12:15,120 --> 01:12:19,040


763
01:12:19,040 --> 01:12:24,480


764
01:12:24,480 --> 01:12:30,400


765
01:12:30,400 --> 01:12:36,400


766
01:12:37,680 --> 01:12:46,400


767
01:12:46,400 --> 01:12:56,560


768
01:12:56,560 --> 01:13:05,200


769
01:13:05,200 --> 01:13:07,360


770
01:13:11,200 --> 01:13:15,920


771
01:13:15,920 --> 01:13:24,000


772
01:13:24,000 --> 01:13:31,200


773
01:13:31,200 --> 01:13:39,440


774
01:13:40,160 --> 01:13:43,920


775
01:13:43,920 --> 01:13:49,600


776
01:13:49,600 --> 01:13:55,920


777
01:13:55,920 --> 01:14:02,800


778
01:14:05,200 --> 01:14:10,720


779
01:14:10,720 --> 01:14:16,640


780
01:14:16,640 --> 01:14:26,880


781
01:14:26,880 --> 01:14:37,760


782
01:14:37,760 --> 01:14:43,200


783
01:14:43,200 --> 01:14:48,000


784
01:14:48,000 --> 01:14:53,120


785
01:14:53,120 --> 01:14:59,440


786
01:14:59,440 --> 01:15:04,640


787
01:15:05,200 --> 01:15:11,840


788
01:15:11,840 --> 01:15:19,440


789
01:15:22,480 --> 01:15:27,600


790
01:15:29,440 --> 01:15:36,080


791
01:15:36,080 --> 01:15:41,600


792
01:15:41,840 --> 01:15:49,600


793
01:15:49,600 --> 01:15:58,240


794
01:15:58,240 --> 01:16:04,000


795
01:16:05,680 --> 01:16:11,600


796
01:16:11,600 --> 01:16:18,400


797
01:16:18,400 --> 01:16:24,640


798
01:16:24,640 --> 01:16:32,400


799
01:16:32,400 --> 01:16:39,040


800
01:16:39,040 --> 01:16:46,240


801
01:16:46,240 --> 01:16:50,960


802
01:16:50,960 --> 01:16:56,640


803
01:16:56,640 --> 01:17:00,240


804
01:17:00,240 --> 01:17:06,640


805
01:17:07,280 --> 01:17:11,920


806
01:17:11,920 --> 01:17:17,680


807
01:17:17,680 --> 01:17:21,040


808
01:17:22,480 --> 01:17:26,720


809
01:17:26,720 --> 01:17:30,720


810
01:17:31,520 --> 01:17:37,280


811
01:17:37,280 --> 01:17:44,640


812
01:17:44,640 --> 01:17:49,360


813
01:17:50,240 --> 01:17:55,360


814
01:17:55,360 --> 01:18:00,080


815
01:18:00,080 --> 01:18:04,400


816
01:18:04,400 --> 01:18:07,680


817
01:18:08,560 --> 01:18:15,040


818
01:18:15,040 --> 01:18:19,920


819
01:18:30,560 --> 01:18:38,160


820
01:18:38,160 --> 01:18:42,160


821
01:18:42,160 --> 01:18:46,400


822
01:18:46,400 --> 01:18:51,520


823
01:18:51,520 --> 01:18:55,040


824
01:18:55,040 --> 01:19:00,000


825
01:19:00,000 --> 01:19:04,560


826
01:19:04,560 --> 01:19:10,960


827
01:19:10,960 --> 01:19:16,960


828
01:19:16,960 --> 01:19:23,920


829
01:19:28,320 --> 01:19:33,920


830
01:19:33,920 --> 01:19:39,760


831
01:19:39,760 --> 01:19:44,960


832
01:19:44,960 --> 01:19:51,760


833
01:19:51,760 --> 01:19:57,520


834
01:19:58,480 --> 01:20:06,960


835
01:20:06,960 --> 01:20:11,440


836
01:20:11,440 --> 01:20:18,160


837
01:20:18,160 --> 01:20:24,000


838
01:20:24,000 --> 01:20:31,200


839
01:20:31,200 --> 01:20:41,360


840
01:20:41,360 --> 01:20:44,400


841
01:20:44,400 --> 01:20:48,960


842
01:20:48,960 --> 01:20:53,360


843
01:20:53,360 --> 01:21:00,800


844
01:21:00,800 --> 01:21:06,720


845
01:21:06,720 --> 01:21:11,120


846
01:21:11,120 --> 01:21:15,280


847
01:21:15,280 --> 01:21:20,800


848
01:21:20,800 --> 01:21:26,560


849
01:21:26,560 --> 01:21:33,040


850
01:21:33,040 --> 01:21:38,880


851
01:21:38,880 --> 01:21:42,240


852
01:21:42,240 --> 01:21:47,360


853
01:21:47,360 --> 01:21:52,240


854
01:21:52,240 --> 01:21:56,640


855
01:21:56,640 --> 01:22:01,360


856
01:22:01,360 --> 01:22:08,080


857
01:22:08,080 --> 01:22:10,240


