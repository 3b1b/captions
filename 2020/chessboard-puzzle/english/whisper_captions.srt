1
00:00:03,280 --> 00:00:06,600
You walk alone into a room and find a chessboard.

2
00:00:07,140 --> 00:00:10,280
Each of the 64 squares has a coin sitting on top of it.

3
00:00:10,940 --> 00:00:15,920
Taking a step back, this is one of those classic prisoner puzzles where a strangely math-obsessed

4
00:00:15,920 --> 00:00:21,320
warden offers you and a fellow inmate a chance for freedom, but only if the two of you solve

5
00:00:21,320 --> 00:00:23,300
some elaborate scheme they've laid out.

6
00:00:23,900 --> 00:00:28,020
In this case, what they've done is carefully turned over each of the coins to be heads

7
00:00:28,020 --> 00:00:32,240
or tails according to whatever pattern they want it to be, and then they show you a key.

8
00:00:32,940 --> 00:00:37,640
They put that key inside one of the chessboard squares, each square is a secret compartment

9
00:00:37,640 --> 00:00:40,200
or something like that, so you know where the key is.

10
00:00:40,840 --> 00:00:46,580
The goal is to get prisoner number 2 to also know where the key is, but the only thing

11
00:00:46,580 --> 00:00:50,820
that the warden allows you to do before you leave the room is to turn over one and only

12
00:00:50,820 --> 00:00:52,060
one of these coins.

13
00:00:53,600 --> 00:00:58,980
At that point, you walk out, your fellow prisoner walks in, and with no information other than

14
00:00:58,980 --> 00:01:03,600
the set of heads and tails they're looking at, which you've only barely tweaked, they're

15
00:01:03,600 --> 00:01:08,520
supposed to deduce where the key is hidden, potentially winning freedom for the both of you.

16
00:01:09,320 --> 00:01:12,580
As is typical with these puzzles, the two of you can strategize ahead of time if you

17
00:01:12,580 --> 00:01:17,280
want, but you won't know what the specific layout of heads and tails is, and moreover

18
00:01:17,280 --> 00:01:22,040
the warden can listen in on your strategy and do their absolute best to thwart it with

19
00:01:22,040 --> 00:01:24,560
some adversarial arrangement of the coins and the key.

20
00:01:25,920 --> 00:01:31,420
So, I first heard about this puzzle over dinner conversation at a wedding, and it totally

21
00:01:31,420 --> 00:01:32,180
sucked me in.

22
00:01:32,540 --> 00:01:37,680
I remember the drive home was maybe 3 hours, and I think my mind was glued to the topic

23
00:01:37,680 --> 00:01:40,560
of flipping coins and encoding state that whole time.

24
00:01:41,000 --> 00:01:42,960
But the puzzle sticks with you even after that.

25
00:01:43,320 --> 00:01:46,720
After I solved it, I fell into these two surprisingly interesting rabbit holes.

26
00:01:47,400 --> 00:01:51,880
One was to prove that the challenge is actually impossible if you vary the setup a little

27
00:01:51,880 --> 00:01:56,500
bit, maybe making it a 6x6 chessboard, or maybe removing one of the squares.

28
00:01:57,220 --> 00:02:00,980
And to give you a little sense for where that rabbit hole leads, this video is going to

29
00:02:00,980 --> 00:02:04,900
end with an especially pleasing way to paint the corners of a 4-dimensional cube.

30
00:02:05,740 --> 00:02:09,820
The other rabbit hole was to work out how closely you can connect the solution of this

31
00:02:09,820 --> 00:02:14,700
puzzle with error correction, which is a super important topic in computer science

32
00:02:14,700 --> 00:02:15,940
and information theory.

33
00:02:16,520 --> 00:02:21,660
The idea is that when computers send and store data, the messiness of the real world inevitably

34
00:02:21,660 --> 00:02:25,820
flips a bit now and then, and that can completely change how the data is read.

35
00:02:26,580 --> 00:02:30,800
So error correcting codes are a way to add a shockingly small amount of information to

36
00:02:30,800 --> 00:02:36,360
a message that makes it possible for the receiver to identify both when there is an error, and

37
00:02:36,360 --> 00:02:38,640
more impressively, precisely how to fix it.

38
00:02:39,080 --> 00:02:43,880
It turns out that the intuition for solving this puzzle is essentially the same as the

39
00:02:43,880 --> 00:02:47,900
intuition behind these things called Hamming codes, which are one of the earliest examples

40
00:02:47,900 --> 00:02:49,680
of highly efficient error correction.

41
00:02:50,480 --> 00:02:54,460
Which is all to say, time spent mulling over this problem is not as useless as you might

42
00:02:54,460 --> 00:02:55,380
think it is.

43
00:02:55,960 --> 00:02:58,520
Now you and I aren't actually going to go through the solution here.

44
00:02:58,920 --> 00:03:03,320
Instead, I filmed a video all about that on standup maths with Matt Parker, who I'm

45
00:03:03,320 --> 00:03:07,000
sure many of you recognize from his combined YouTube and standup and book fame.

46
00:03:07,600 --> 00:03:11,140
We each talk through our thought process in solving it, and it's good fun, because there

47
00:03:11,140 --> 00:03:12,680
are multiple ways of looking at it.

48
00:03:13,340 --> 00:03:18,200
Instead, what I want to do with you here is take a more global view of every possible

49
00:03:18,200 --> 00:03:22,400
strategy for this puzzle, and bring you with me down that first rabbit hole of proving

50
00:03:22,400 --> 00:03:27,560
why certain variations necessarily leave room for the warden to thwart you, no matter how

51
00:03:27,560 --> 00:03:28,500
clever you are.

52
00:03:29,080 --> 00:03:33,260
The proof itself is one of those satisfying moments where you shift perspective and it

53
00:03:33,260 --> 00:03:37,680
reveals the solution, and the whole context leading up to it is a nice chance to practice

54
00:03:37,680 --> 00:03:42,320
reasoning about higher dimensional objects as a way to draw conclusions about information

55
00:03:42,320 --> 00:03:43,260
and data.

56
00:03:44,160 --> 00:03:48,220
Plus, it does more to help you appreciate the solution to the original puzzle when you

57
00:03:48,220 --> 00:03:51,520
can see how it is, in a sense, almost impossible.

58
00:03:58,320 --> 00:03:59,140
Where to start?

59
00:03:59,580 --> 00:04:04,080
What we want is some kind of visualization for what it even means to solve this puzzle.

60
00:04:04,800 --> 00:04:08,500
And to build up to the general case, let's knock things down to the simplest case that

61
00:04:08,500 --> 00:04:10,860
we can that still has any kind of meaning to it.

62
00:04:11,260 --> 00:04:15,100
Two squares, two coins, and two possibilities for where the key is.

63
00:04:16,920 --> 00:04:20,800
One way that you could solve this is to simply let the second coin communicate where the

64
00:04:20,800 --> 00:04:21,260
key is.

65
00:04:21,480 --> 00:04:23,880
If it's tails, it means the key is in the left square.

66
00:04:24,160 --> 00:04:26,560
If it's heads, it means the key is in the right square.

67
00:04:27,040 --> 00:04:27,920
Not a big deal, right?

68
00:04:28,020 --> 00:04:31,700
It's one bit of information, so when you need to change that coin, you can flip it,

69
00:04:31,820 --> 00:04:34,660
but if you don't need to change it, you can just flip the other coin.

70
00:04:36,300 --> 00:04:39,880
First things first, let's stop thinking about these as heads and tails and start thinking

71
00:04:39,880 --> 00:04:41,280
of them as ones and zeros.

72
00:04:41,680 --> 00:04:43,360
That's much easier to do math with.

73
00:04:44,040 --> 00:04:48,560
Then you can think of these pairs of coins as a set of coordinates, where each of the

74
00:04:48,560 --> 00:04:53,460
four possible states that the board can be in sit at the corners of a unit square, like

75
00:04:53,460 --> 00:04:53,880
this.

76
00:04:54,380 --> 00:04:58,320
This might feel like a silly thing to do when we already know how to solve this case, but

77
00:04:58,320 --> 00:05:01,480
it's a good warmup for turning the larger cases into a kind of geometry.

78
00:05:02,100 --> 00:05:07,200
Notice, flipping one of the coins moves you along an edge of the square, since it's

79
00:05:07,200 --> 00:05:08,720
only changing one of the coordinates.

80
00:05:10,100 --> 00:05:15,380
Our strategy of letting that second coin encode the key location could be drawn by associating

81
00:05:15,380 --> 00:05:20,880
the bottom two corners, where the y-coordinate is 0, with the key is under square zero state,

82
00:05:22,400 --> 00:05:27,260
which means those top two corners are associated with the key is under square one state.

83
00:05:28,440 --> 00:05:31,080
So think about what it means for our solution to actually work.

84
00:05:31,900 --> 00:05:35,840
It means that no matter where you start, if you're forced to take a step along an edge,

85
00:05:36,200 --> 00:05:40,740
forced to flip one of the coins, you can always guarantee that you end up in whichever of

86
00:05:40,740 --> 00:05:42,440
these two regions you want to.

87
00:05:46,680 --> 00:05:49,540
Now the question is, what does it look like for a bigger chess board?

88
00:05:50,080 --> 00:05:54,860
The next simplest case would be three squares, three coins, and three possibilities for where

89
00:05:54,860 --> 00:05:55,600
the key is.

90
00:05:56,800 --> 00:05:59,720
This gives us eight possible states that the coin can be in.

91
00:06:00,240 --> 00:06:04,560
Playing the same game we did before, interpreting these states as coordinates, brings us up

92
00:06:04,560 --> 00:06:09,380
into three-dimensional space, with each state sitting at the corner of a unit cube.

93
00:06:10,460 --> 00:06:14,080
The usefulness in a picture like this is that it gives a very vivid meaning to the idea

94
00:06:14,080 --> 00:06:15,500
of turning over one of the coins.

95
00:06:15,500 --> 00:06:19,720
Every time you flip a coin, you're walking along the edge of a cube.

96
00:06:24,240 --> 00:06:28,720
Now, what would it mean for you and your fellow inmate to have a strategy for this puzzle?

97
00:06:29,880 --> 00:06:33,640
Whenever prisoner two walks into that room, they need to be able to associate the state

98
00:06:33,640 --> 00:06:38,300
that they're looking at, three bits basically, with one of three possible squares.

99
00:06:39,280 --> 00:06:43,080
We're already thinking very visually, so let's associate those squares with colors,

100
00:06:43,080 --> 00:06:47,640
maybe red for square zero, green for square one, and blue for square two.

101
00:06:48,660 --> 00:06:54,280
In this conception, coming up with a strategy, any possible strategy, is the same thing as

102
00:06:54,280 --> 00:06:58,120
coloring each of the eight corners of the cube, either red, green, or blue.

103
00:07:01,580 --> 00:07:04,860
So for example, let's say you colored the whole cube red.

104
00:07:05,560 --> 00:07:09,560
Well, I don't know if you'd call this a strategy exactly, but it would correspond with always

105
00:07:09,560 --> 00:07:11,440
guessing that the key is under square zero.

106
00:07:12,620 --> 00:07:17,260
Let's say instead your strategy was to add the first two coins together and use that

107
00:07:17,260 --> 00:07:21,020
as an encoding for the key location, well then the cube would look like this.

108
00:07:22,480 --> 00:07:25,860
What's kind of fun is we can count how many total strategies exist.

109
00:07:26,320 --> 00:07:31,280
With three choices for the color of each vertex and eight total vertices, we get 3 to the

110
00:07:31,280 --> 00:07:31,860
power 8.

111
00:07:32,520 --> 00:07:36,780
Or if you're comfortable letting your mind stray to the thought of painting a 64-dimensional

112
00:07:36,780 --> 00:07:41,980
cube, you can have fun thinking about the sense in which there are 64 to the 2 to the

113
00:07:41,980 --> 00:07:45,240
64 total possible strategies for the original puzzle.

114
00:07:45,960 --> 00:07:49,180
This is the size of the haystack when you're looking for the needle.

115
00:07:50,480 --> 00:07:55,920
Another attempt for the 3-square case might look like taking 0 times coin 0 plus 1 times

116
00:07:55,920 --> 00:08:01,320
coin 1 plus 2 times coin 2, and then reduce that some mod 3 if you need to.

117
00:08:01,880 --> 00:08:06,260
Over on Stand Up Maths, Matt and I both talk about trying a version of this for the 64-square

118
00:08:06,260 --> 00:08:10,440
case, and why it works decently well for a random arrangement of coins, but why it's

119
00:08:10,440 --> 00:08:11,300
ultimately doomed.

120
00:08:11,960 --> 00:08:16,700
From our view over here, it just looks like one more way to color the cube, but it's

121
00:08:16,700 --> 00:08:18,700
worth taking a moment to walk through some of those corners.

122
00:08:19,460 --> 00:08:24,160
Let's say you get into the room and all three coins are set to tails, so it's like

123
00:08:24,160 --> 00:08:26,400
you're starting at the corner 0,0,0.

124
00:08:27,240 --> 00:08:31,680
If you were to flip coin 0, that doesn't change the sum, so it takes you to another

125
00:08:31,680 --> 00:08:32,400
red corner.

126
00:08:32,980 --> 00:08:38,460
If you flipped coin 1, it increases the sum by 1, so it takes you to a green corner.

127
00:08:40,040 --> 00:08:44,000
And flipping coin 2 takes you up to 2, which looks like a blue corner.

128
00:08:44,880 --> 00:08:49,860
The fact that you always have access to whichever color you want is a reflection of the fact

129
00:08:49,860 --> 00:08:54,320
that this strategy will always win if this is the corner you're starting on.

130
00:08:55,020 --> 00:08:58,140
On the other hand, let's say you started at 0,1,0.

131
00:08:58,140 --> 00:09:03,520
In that case, flipping coin 0 takes you to another green corner, since it doesn't change

132
00:09:03,520 --> 00:09:09,760
the sum, but flipping either coin 1 or coin 2 take you to a red corner.

133
00:09:10,340 --> 00:09:12,480
There's simply no way to get to a blue corner.

134
00:09:14,440 --> 00:09:18,880
Basically, what's happening here is that you have the options to subtract 1 by turning

135
00:09:18,880 --> 00:09:25,120
off coin 1, or to add 2 by turning on coin 2, and if you're working mod 3, those are

136
00:09:25,120 --> 00:09:26,680
both actually the same operation.

137
00:09:27,340 --> 00:09:30,480
But that means there's no way to change the sum to be 2.

138
00:09:31,040 --> 00:09:35,920
An adversarial warden who knows your strategy could start with this configuration, put the

139
00:09:35,920 --> 00:09:38,040
key under square 2, and call it done.

140
00:09:39,980 --> 00:09:44,600
But even without thinking about sums mod 3 or anything like that, whatever the implementation

141
00:09:44,600 --> 00:09:49,500
details, you can see this in our picture, manifested as a corner that has two neighbors

142
00:09:49,500 --> 00:09:50,580
of the same color.

143
00:09:51,420 --> 00:09:55,580
If you don't have a bird's eye view of all possible strategies, when you find that

144
00:09:55,580 --> 00:09:59,920
any specific one of them just doesn't work, you're left to wonder, okay, maybe there's

145
00:09:59,920 --> 00:10:02,900
a sneaky clever strategy that I just haven't thought of yet.

146
00:10:03,300 --> 00:10:06,980
But when we're thinking about colors on the cube, you're naturally led to an interesting

147
00:10:06,980 --> 00:10:08,160
combinatorial question.

148
00:10:08,760 --> 00:10:14,860
Is there some way you can paint this so that the three neighbors of any given vertex always

149
00:10:14,860 --> 00:10:16,560
represent red, green, and blue?

150
00:10:19,240 --> 00:10:23,700
Maybe it seems bizarre, even convoluted, to go from a puzzle with chessboards and coins

151
00:10:23,700 --> 00:10:27,940
to talking about painting corners of a cube, but this is actually a much more natural step

152
00:10:27,940 --> 00:10:28,820
than you might expect.

153
00:10:29,280 --> 00:10:33,480
I've talked with a lot of people about this puzzle, and what I love is that many of the

154
00:10:33,480 --> 00:10:38,420
experienced problem solvers immediately jump, unprompted, to talking about coloring the

155
00:10:38,420 --> 00:10:42,560
corners of a cube, as if it's a kind of de facto language for this puzzle.

156
00:10:43,200 --> 00:10:44,040
And it really is.

157
00:10:44,340 --> 00:10:48,660
Thinking about binary strings as vertices of a high dimensional cube, with bit flips

158
00:10:48,660 --> 00:10:53,360
corresponding to edges, that actually comes up a lot, especially in coding theory, like

159
00:10:53,360 --> 00:10:55,480
the error correction stuff I referenced earlier.

160
00:10:56,160 --> 00:11:00,700
What's more, you often hear mathematicians talk about coloring things as a way to describe

161
00:11:00,700 --> 00:11:03,000
partitioning them into distinct sets.

162
00:11:03,920 --> 00:11:08,120
If you've ever heard of that hilariously enormous number grams constant, for example,

163
00:11:08,540 --> 00:11:13,620
the problem where that came up was also phrased in terms of assigning colors to a high dimensional

164
00:11:13,620 --> 00:11:18,800
cube, though in that case colors were given to pairs of vertices instead of individual ones.

165
00:11:18,800 --> 00:11:23,740
The point is, analyzing how to color a high dimensional cube is more of a transferable

166
00:11:23,740 --> 00:11:25,000
skill than you might expect.

167
00:11:26,040 --> 00:11:30,860
So to our question, can you make it so that every vertex has a red, a green, and a blue

168
00:11:30,860 --> 00:11:31,220
neighbor?

169
00:11:32,020 --> 00:11:37,100
Remember, this is the same thing as having an encoding for key locations so that you're

170
00:11:37,100 --> 00:11:40,920
always one flip away from communicating whichever location you want to.

171
00:11:41,900 --> 00:11:44,980
It would actually be enlightening if you paused the video and tried this now.

172
00:11:44,980 --> 00:11:47,960
It's like a weird three-dimensional variant of a sudoku.

173
00:11:48,800 --> 00:11:53,680
Very similar to sudoku's, in the sense that you want certain subsets to be filled with

174
00:11:53,680 --> 00:11:55,100
all three possible states.

175
00:11:55,900 --> 00:11:59,440
For example, you might start by painting one of the corners an arbitrary color, let's

176
00:11:59,440 --> 00:12:03,880
say red, so you know its three neighbors need to be red, green, and blue, doesn't really

177
00:12:03,880 --> 00:12:05,040
matter how you do it.

178
00:12:05,560 --> 00:12:09,420
And then maybe we move to the red neighbor and say that the other two adjacencies need

179
00:12:09,420 --> 00:12:12,340
to be green and blue, maybe we do it like this.

180
00:12:12,840 --> 00:12:17,140
But at least how I've drawn it here, you're stuck, you're unable to choose a correct

181
00:12:17,140 --> 00:12:18,180
color for the next two.

182
00:12:18,620 --> 00:12:19,280
Can you see why?

183
00:12:20,220 --> 00:12:24,400
What I'd like to share is a lovely little argument that explains not only why this will

184
00:12:24,400 --> 00:12:28,780
never work in three dimensions, but also why it can't work in any dimension that's

185
00:12:28,780 --> 00:12:29,700
not a power of two.

186
00:12:30,500 --> 00:12:34,900
The idea is that the symmetry in the property we're looking at will end up implying that

187
00:12:34,900 --> 00:12:40,140
there have to be an equal number of red, green, and blue vertices, but that would mean there's

188
00:12:40,140 --> 00:12:42,520
8 thirds of each, which is not possible.

189
00:12:43,440 --> 00:12:48,180
And before I go on, pause and see if you can think of a way to solidify that intuition.

190
00:12:48,800 --> 00:12:52,400
It's a fun exercise in turning a vague instinct into a solid proof.

191
00:12:56,080 --> 00:12:56,620
Alright, you ready?

192
00:12:57,440 --> 00:13:01,880
One way to do this is to imagine a process where you go through each corner and count

193
00:13:01,880 --> 00:13:05,440
how many of its neighbors are a particular color, say red.

194
00:13:06,620 --> 00:13:11,360
So, each step here, we're looking at the three neighbors of a given vertex, counting

195
00:13:11,360 --> 00:13:14,080
up the red ones, and adding that to a total tally.

196
00:13:17,160 --> 00:13:22,360
For this specific coloring, that count came out to be 12, but if we had the property we

197
00:13:22,360 --> 00:13:26,840
wanted, every corner would have exactly one red neighbor, so that count should be 8.

198
00:13:27,580 --> 00:13:33,640
On the other hand, every red corner is counted exactly three times, once for each instance

199
00:13:33,640 --> 00:13:38,400
where it's somebody's neighbor, so that final tally has to be three times the total

200
00:13:38,400 --> 00:13:39,380
number of red corners.

201
00:13:40,420 --> 00:13:43,780
So it's simple, find a coloring where 8 thirds of the corners are red.

202
00:13:44,940 --> 00:13:45,540
Isn't that nice?

203
00:13:46,000 --> 00:13:50,180
Counting how many times some corner has a red neighbor is the same as counting how many

204
00:13:50,180 --> 00:13:54,720
times a red corner has some neighbor, and that's enough to get us a contradiction.

205
00:13:56,260 --> 00:14:00,220
What's also nice is that this argument immediately generalizes to higher dimensions.

206
00:14:00,800 --> 00:14:04,040
Think about solving the chessboard puzzle with n squares.

207
00:14:04,880 --> 00:14:11,240
Again, the puzzle is to associate each arrangement of coins with some state, some possible location

208
00:14:11,240 --> 00:14:11,900
for the key.

209
00:14:12,600 --> 00:14:17,900
And the goal is to make it so that the arrangements you can get to with one flip of a coin represent

210
00:14:17,900 --> 00:14:22,180
all possible states, all possible places the warden might have hidden that key.

211
00:14:23,300 --> 00:14:27,200
Even if you can't visualize most higher dimensional cubes, we can still talk about

212
00:14:27,200 --> 00:14:31,740
things like vertices of such a cube and their neighbors, basically as a way to describe

213
00:14:31,740 --> 00:14:34,760
bitstrings and the ones which are one bitflip away.

214
00:14:35,720 --> 00:14:38,180
Really, there's just two relevant facts you need to know.

215
00:14:38,380 --> 00:14:44,160
If you're standing at one of these vertices, you have n distinct neighbors, and the total

216
00:14:44,160 --> 00:14:49,200
number of vertices is 2 to the n, one for each bitstring of length n.

217
00:14:50,340 --> 00:14:53,420
From here, you can play the same game we did in three dimensions.

218
00:14:53,420 --> 00:14:57,180
You can go through each corner and count how many red neighbors it has.

219
00:14:57,840 --> 00:15:02,980
If it's possible to do the coloring we want, this sum should be 2 to the n, one for each

220
00:15:02,980 --> 00:15:03,380
vertex.

221
00:15:04,220 --> 00:15:09,460
On the other hand, each red corner is counted once for each of its neighbors, so that means

222
00:15:09,460 --> 00:15:13,240
that we need to end up with n times the total number of red corners.

223
00:15:14,220 --> 00:15:18,920
Since that left hand side is a power of 2, the right hand side also has to be a power

224
00:15:18,920 --> 00:15:23,880
of 2, which could only ever happen if n itself is some smaller power of 2.

225
00:15:24,900 --> 00:15:30,600
So for example, if we were in 4 dimensions, or 64 dimensions, there is no contradiction.

226
00:15:31,060 --> 00:15:35,280
It's at the very least possible to evenly divide the vertices among the different colors.

227
00:15:36,000 --> 00:15:40,340
To be clear, that is not the same thing as saying there necessarily is a solution for

228
00:15:40,340 --> 00:15:43,640
the power of 2 case, it's just that it can't be ruled out yet.

229
00:15:45,580 --> 00:15:47,880
To me, this is completely delightful.

230
00:15:48,160 --> 00:15:52,400
Just by imagining coloring the corners of a cube, and then counting how many there are,

231
00:15:52,740 --> 00:15:57,280
you can conclude that no possible strategy, no matter how clever you are, can work in

232
00:15:57,280 --> 00:16:01,480
all of the cases for this chessboard puzzle, if the number of squares isn't a power of

233
00:16:01,480 --> 00:16:01,740
2.

234
00:16:02,640 --> 00:16:06,720
So even though it might seem to make it easier if you knock off a couple squares or reduce

235
00:16:06,720 --> 00:16:09,620
the size of the board, it actually makes the task hopeless.

236
00:16:10,120 --> 00:16:15,120
It also means that the solution to this puzzle, which I'll point you to in a moment, can

237
00:16:15,120 --> 00:16:19,140
be viewed as a particularly symmetric way to color the corners of a high dimensional

238
00:16:19,140 --> 00:16:22,280
cube in a way that's disallowed in most dimensions.

239
00:16:23,180 --> 00:16:26,980
And if you're curious, I just couldn't resist showing this explicitly for a 4-dimensional

240
00:16:26,980 --> 00:16:27,440
cube.

241
00:16:28,200 --> 00:16:32,620
So in the same way that you can take a 3d cube and kind of squish it down into 2 dimensions,

242
00:16:32,820 --> 00:16:36,420
maybe with a little perspective, and get the same graph structure for how the vertices

243
00:16:36,420 --> 00:16:41,260
and edges are all connected, we can do the same thing projecting a 4-dimensional cube

244
00:16:41,260 --> 00:16:46,100
into 3-dimensional space, and still get a complete view for how all of the vertices

245
00:16:46,100 --> 00:16:47,680
and edges are hooked together.

246
00:16:48,560 --> 00:16:52,300
If you wanted to try your hand at a weird sort of 4-dimensional cousin of a sudoku,

247
00:16:52,920 --> 00:16:57,780
you could pause right now and try to figure out how to color these vertices in such a

248
00:16:57,780 --> 00:17:03,140
way that each of the 4 neighbors of any one represent all 4 different colors.

249
00:17:05,880 --> 00:17:09,740
Using essentially the same computation that solves the chessboard puzzle for the 4-square

250
00:17:09,740 --> 00:17:14,100
case, I can get the computer to explicitly draw that out for us.

251
00:17:21,280 --> 00:17:24,940
And at this point, when you're hopefully burning to know what the actual solution is,

252
00:17:25,320 --> 00:17:28,800
I'd like you to hop on over to Stand Up Maths, where Matt and I show you how it works.

253
00:17:28,800 --> 00:17:33,420
If any of you are somehow not yet familiar with Stand Up Maths, it's one of my favorite

254
00:17:33,420 --> 00:17:37,680
channels run by one of my favorite people, so please do immediately subscribe once you

255
00:17:37,680 --> 00:17:38,380
land over there.

256
00:17:38,860 --> 00:17:42,000
I promise, you're in for quite a few delights with everything else he has to offer.

257
00:17:43,000 --> 00:17:46,900
Before explaining it, he and I simply walk through what it looks like for us to actually

258
00:17:46,900 --> 00:17:51,360
perform the solution, and as we do, I really want you to try thinking of the solution yourself,

259
00:17:51,760 --> 00:17:54,360
and to predict what it is we're doing before we tell you.

260
00:17:55,100 --> 00:17:59,220
And if you're curious about the connection with Hamming codes and error correction, I'm

261
00:17:59,220 --> 00:18:02,040
definitely game to make a video on that, just let me know in the comments.

262
00:18:02,440 --> 00:18:06,040
I've been told that as far as motivating puzzles go, not everyone is as interested

263
00:18:06,040 --> 00:18:09,780
in symmetrical ways to paint a 64-dimensional cube as I am.

264
00:18:09,980 --> 00:18:11,320
But reliable data transmission?

265
00:18:11,760 --> 00:18:14,340
Come on, I think we can all agree that's universally sexy.

