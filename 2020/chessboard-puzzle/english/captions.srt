1
00:00:03,280 --> 00:00:06,600
You walk alone into a room and find a chessboard.

2
00:00:07,140 --> 00:00:10,280
Each of the 64 squares has a coin sitting on top of it.

3
00:00:10,940 --> 00:00:14,916
Taking a step back, this is one of those classic prisoner puzzles where a 

4
00:00:14,916 --> 00:00:19,430
strangely math-obsessed warden offers you and a fellow inmate a chance for freedom, 

5
00:00:19,430 --> 00:00:23,300
but only if the two of you solve some elaborate scheme they've laid out.

6
00:00:23,900 --> 00:00:28,046
In this case, what they've done is carefully turned over each of the coins to be heads 

7
00:00:28,046 --> 00:00:32,240
or tails according to whatever pattern they want it to be, and then they show you a key.

8
00:00:32,940 --> 00:00:35,743
They put that key inside one of the chessboard squares, 

9
00:00:35,743 --> 00:00:40,200
each square is a secret compartment or something like that, so you know where the key is.

10
00:00:40,840 --> 00:00:44,772
The goal is to get prisoner number 2 to also know where the key is, 

11
00:00:44,772 --> 00:00:48,416
but the only thing that the warden allows you to do before you 

12
00:00:48,416 --> 00:00:52,060
leave the room is to turn over one and only one of these coins.

13
00:00:53,600 --> 00:00:56,843
At that point, you walk out, your fellow prisoner walks in, 

14
00:00:56,843 --> 00:01:01,276
and with no information other than the set of heads and tails they're looking at, 

15
00:01:01,276 --> 00:01:05,925
which you've only barely tweaked, they're supposed to deduce where the key is hidden, 

16
00:01:05,925 --> 00:01:08,520
potentially winning freedom for the both of you.

17
00:01:09,320 --> 00:01:13,130
As is typical with these puzzles, the two of you can strategize ahead of time 

18
00:01:13,130 --> 00:01:17,037
if you want, but you won't know what the specific layout of heads and tails is, 

19
00:01:17,037 --> 00:01:20,798
and moreover the warden can listen in on your strategy and do their absolute 

20
00:01:20,798 --> 00:01:24,560
best to thwart it with some adversarial arrangement of the coins and the key.

21
00:01:25,920 --> 00:01:30,478
So, I first heard about this puzzle over dinner conversation at a wedding, 

22
00:01:30,478 --> 00:01:32,180
and it totally sucked me in.

23
00:01:32,540 --> 00:01:36,464
I remember the drive home was maybe 3 hours, and I think my mind was 

24
00:01:36,464 --> 00:01:40,560
glued to the topic of flipping coins and encoding state that whole time.

25
00:01:41,000 --> 00:01:42,960
But the puzzle sticks with you even after that.

26
00:01:43,320 --> 00:01:46,720
After I solved it, I fell into these two surprisingly interesting rabbit holes.

27
00:01:47,400 --> 00:01:51,950
One was to prove that the challenge is actually impossible if you vary the setup a 

28
00:01:51,950 --> 00:01:56,500
little bit, maybe making it a 6x6 chessboard, or maybe removing one of the squares.

29
00:01:57,220 --> 00:02:00,173
And to give you a little sense for where that rabbit hole leads, 

30
00:02:00,173 --> 00:02:03,945
this video is going to end with an especially pleasing way to paint the corners of 

31
00:02:03,945 --> 00:02:04,900
a 4-dimensional cube.

32
00:02:05,740 --> 00:02:09,228
The other rabbit hole was to work out how closely you can connect 

33
00:02:09,228 --> 00:02:11,923
the solution of this puzzle with error correction, 

34
00:02:11,923 --> 00:02:15,940
which is a super important topic in computer science and information theory.

35
00:02:16,520 --> 00:02:19,352
The idea is that when computers send and store data, 

36
00:02:19,352 --> 00:02:23,040
the messiness of the real world inevitably flips a bit now and then, 

37
00:02:23,040 --> 00:02:25,820
and that can completely change how the data is read.

38
00:02:26,580 --> 00:02:30,439
So error correcting codes are a way to add a shockingly small amount of 

39
00:02:30,439 --> 00:02:34,566
information to a message that makes it possible for the receiver to identify 

40
00:02:34,566 --> 00:02:38,640
both when there is an error, and more impressively, precisely how to fix it.

41
00:02:39,080 --> 00:02:42,580
It turns out that the intuition for solving this puzzle is essentially 

42
00:02:42,580 --> 00:02:45,933
the same as the intuition behind these things called Hamming codes, 

43
00:02:45,933 --> 00:02:49,680
which are one of the earliest examples of highly efficient error correction.

44
00:02:50,480 --> 00:02:52,905
Which is all to say, time spent mulling over this 

45
00:02:52,905 --> 00:02:55,380
problem is not as useless as you might think it is.

46
00:02:55,960 --> 00:02:58,520
Now you and I aren't actually going to go through the solution here.

47
00:02:58,920 --> 00:03:02,687
Instead, I filmed a video all about that on standup maths with Matt Parker, 

48
00:03:02,687 --> 00:03:07,000
who I'm sure many of you recognize from his combined YouTube and standup and book fame.

49
00:03:07,600 --> 00:03:09,894
We each talk through our thought process in solving it, 

50
00:03:09,894 --> 00:03:12,680
and it's good fun, because there are multiple ways of looking at it.

51
00:03:13,340 --> 00:03:17,048
Instead, what I want to do with you here is take a more global view 

52
00:03:17,048 --> 00:03:20,920
of every possible strategy for this puzzle, and bring you with me down 

53
00:03:20,920 --> 00:03:24,682
that first rabbit hole of proving why certain variations necessarily 

54
00:03:24,682 --> 00:03:28,500
leave room for the warden to thwart you, no matter how clever you are.

55
00:03:29,080 --> 00:03:32,573
The proof itself is one of those satisfying moments where you shift 

56
00:03:32,573 --> 00:03:36,221
perspective and it reveals the solution, and the whole context leading 

57
00:03:36,221 --> 00:03:39,971
up to it is a nice chance to practice reasoning about higher dimensional 

58
00:03:39,971 --> 00:03:43,260
objects as a way to draw conclusions about information and data.

59
00:03:44,160 --> 00:03:48,002
Plus, it does more to help you appreciate the solution to the original 

60
00:03:48,002 --> 00:03:51,520
puzzle when you can see how it is, in a sense, almost impossible.

61
00:03:58,320 --> 00:03:59,140
Where to start?

62
00:03:59,580 --> 00:04:04,080
What we want is some kind of visualization for what it even means to solve this puzzle.

63
00:04:04,800 --> 00:04:07,852
And to build up to the general case, let's knock things down to the 

64
00:04:07,852 --> 00:04:10,860
simplest case that we can that still has any kind of meaning to it.

65
00:04:11,260 --> 00:04:15,100
Two squares, two coins, and two possibilities for where the key is.

66
00:04:16,920 --> 00:04:19,044
One way that you could solve this is to simply 

67
00:04:19,044 --> 00:04:21,260
let the second coin communicate where the key is.

68
00:04:21,480 --> 00:04:23,880
If it's tails, it means the key is in the left square.

69
00:04:24,160 --> 00:04:26,560
If it's heads, it means the key is in the right square.

70
00:04:27,040 --> 00:04:27,920
Not a big deal, right?

71
00:04:28,020 --> 00:04:31,665
It's one bit of information, so when you need to change that coin, you can flip it, 

72
00:04:31,665 --> 00:04:34,660
but if you don't need to change it, you can just flip the other coin.

73
00:04:36,300 --> 00:04:38,661
First things first, let's stop thinking about these as 

74
00:04:38,661 --> 00:04:41,280
heads and tails and start thinking of them as ones and zeros.

75
00:04:41,680 --> 00:04:43,360
That's much easier to do math with.

76
00:04:44,040 --> 00:04:47,778
Then you can think of these pairs of coins as a set of coordinates, 

77
00:04:47,778 --> 00:04:52,615
where each of the four possible states that the board can be in sit at the corners of a 

78
00:04:52,615 --> 00:04:53,880
unit square, like this.

79
00:04:54,380 --> 00:04:58,149
This might feel like a silly thing to do when we already know how to solve this case, 

80
00:04:58,149 --> 00:05:01,480
but it's a good warmup for turning the larger cases into a kind of geometry.

81
00:05:02,100 --> 00:05:06,093
Notice, flipping one of the coins moves you along an edge of the square, 

82
00:05:06,093 --> 00:05:08,720
since it's only changing one of the coordinates.

83
00:05:10,100 --> 00:05:14,498
Our strategy of letting that second coin encode the key location could 

84
00:05:14,498 --> 00:05:19,268
be drawn by associating the bottom two corners, where the y-coordinate is 0, 

85
00:05:19,268 --> 00:05:23,419
with the key is under square zero state, which means those top two 

86
00:05:23,419 --> 00:05:27,260
corners are associated with the key is under square one state.

87
00:05:28,440 --> 00:05:31,080
So think about what it means for our solution to actually work.

88
00:05:31,900 --> 00:05:36,359
It means that no matter where you start, if you're forced to take a step along an edge, 

89
00:05:36,359 --> 00:05:39,754
forced to flip one of the coins, you can always guarantee that you 

90
00:05:39,754 --> 00:05:42,440
end up in whichever of these two regions you want to.

91
00:05:46,680 --> 00:05:49,540
Now the question is, what does it look like for a bigger chess board?

92
00:05:50,080 --> 00:05:52,550
The next simplest case would be three squares, 

93
00:05:52,550 --> 00:05:55,600
three coins, and three possibilities for where the key is.

94
00:05:56,800 --> 00:05:59,720
This gives us eight possible states that the coin can be in.

95
00:06:00,240 --> 00:06:04,366
Playing the same game we did before, interpreting these states as coordinates, 

96
00:06:04,366 --> 00:06:08,857
brings us up into three-dimensional space, with each state sitting at the corner of a 

97
00:06:08,857 --> 00:06:09,380
unit cube.

98
00:06:10,460 --> 00:06:13,042
The usefulness in a picture like this is that it gives a very 

99
00:06:13,042 --> 00:06:15,500
vivid meaning to the idea of turning over one of the coins.

100
00:06:15,500 --> 00:06:19,720
Every time you flip a coin, you're walking along the edge of a cube.

101
00:06:24,240 --> 00:06:28,720
Now, what would it mean for you and your fellow inmate to have a strategy for this puzzle?

102
00:06:29,880 --> 00:06:33,941
Whenever prisoner two walks into that room, they need to be able to associate the 

103
00:06:33,941 --> 00:06:38,300
state that they're looking at, three bits basically, with one of three possible squares.

104
00:06:39,280 --> 00:06:43,752
We're already thinking very visually, so let's associate those squares with colors, 

105
00:06:43,752 --> 00:06:47,640
maybe red for square zero, green for square one, and blue for square two.

106
00:06:48,660 --> 00:06:52,649
In this conception, coming up with a strategy, any possible strategy, 

107
00:06:52,649 --> 00:06:57,265
is the same thing as coloring each of the eight corners of the cube, either red, 

108
00:06:57,265 --> 00:06:58,120
green, or blue.

109
00:07:01,580 --> 00:07:04,860
So for example, let's say you colored the whole cube red.

110
00:07:05,560 --> 00:07:08,049
Well, I don't know if you'd call this a strategy exactly, 

111
00:07:08,049 --> 00:07:11,440
but it would correspond with always guessing that the key is under square zero.

112
00:07:12,620 --> 00:07:16,768
Let's say instead your strategy was to add the first two coins together and use 

113
00:07:16,768 --> 00:07:21,020
that as an encoding for the key location, well then the cube would look like this.

114
00:07:22,480 --> 00:07:25,860
What's kind of fun is we can count how many total strategies exist.

115
00:07:26,320 --> 00:07:30,503
With three choices for the color of each vertex and eight total vertices, 

116
00:07:30,503 --> 00:07:31,860
we get 3 to the power 8.

117
00:07:32,520 --> 00:07:36,686
Or if you're comfortable letting your mind stray to the thought of painting 

118
00:07:36,686 --> 00:07:40,744
a 64-dimensional cube, you can have fun thinking about the sense in which 

119
00:07:40,744 --> 00:07:45,240
there are 64 to the 2 to the 64 total possible strategies for the original puzzle.

120
00:07:45,960 --> 00:07:49,180
This is the size of the haystack when you're looking for the needle.

121
00:07:50,480 --> 00:07:55,833
Another attempt for the 3-square case might look like taking 0 times coin 0 plus 

122
00:07:55,833 --> 00:08:01,320
1 times coin 1 plus 2 times coin 2, and then reduce that some mod 3 if you need to.

123
00:08:01,880 --> 00:08:05,131
Over on Stand Up Maths, Matt and I both talk about trying a version 

124
00:08:05,131 --> 00:08:08,144
of this for the 64-square case, and why it works decently well 

125
00:08:08,144 --> 00:08:11,300
for a random arrangement of coins, but why it's ultimately doomed.

126
00:08:11,960 --> 00:08:15,492
From our view over here, it just looks like one more way to color the cube, 

127
00:08:15,492 --> 00:08:18,700
but it's worth taking a moment to walk through some of those corners.

128
00:08:19,460 --> 00:08:23,542
Let's say you get into the room and all three coins are set to tails, 

129
00:08:23,542 --> 00:08:26,400
so it's like you're starting at the corner 0,0,0.

130
00:08:27,240 --> 00:08:30,336
If you were to flip coin 0, that doesn't change the sum, 

131
00:08:30,336 --> 00:08:32,400
so it takes you to another red corner.

132
00:08:32,980 --> 00:08:38,460
If you flipped coin 1, it increases the sum by 1, so it takes you to a green corner.

133
00:08:40,039 --> 00:08:44,000
And flipping coin 2 takes you up to 2, which looks like a blue corner.

134
00:08:44,880 --> 00:08:49,572
The fact that you always have access to whichever color you want is a reflection of 

135
00:08:49,572 --> 00:08:54,320
the fact that this strategy will always win if this is the corner you're starting on.

136
00:08:55,020 --> 00:08:58,140
On the other hand, let's say you started at 0,1,0.

137
00:08:58,140 --> 00:09:02,860
In that case, flipping coin 0 takes you to another green corner, 

138
00:09:02,860 --> 00:09:08,598
since it doesn't change the sum, but flipping either coin 1 or coin 2 take you 

139
00:09:08,598 --> 00:09:09,760
to a red corner.

140
00:09:10,340 --> 00:09:12,480
There's simply no way to get to a blue corner.

141
00:09:14,440 --> 00:09:18,320
Basically, what's happening here is that you have the options to 

142
00:09:18,320 --> 00:09:22,381
subtract 1 by turning off coin 1, or to add 2 by turning on coin 2, 

143
00:09:22,381 --> 00:09:26,680
and if you're working mod 3, those are both actually the same operation.

144
00:09:27,340 --> 00:09:30,480
But that means there's no way to change the sum to be 2.

145
00:09:31,040 --> 00:09:35,579
An adversarial warden who knows your strategy could start with this configuration, 

146
00:09:35,579 --> 00:09:38,040
put the key under square 2, and call it done.

147
00:09:39,980 --> 00:09:43,478
But even without thinking about sums mod 3 or anything like that, 

148
00:09:43,478 --> 00:09:47,188
whatever the implementation details, you can see this in our picture, 

149
00:09:47,188 --> 00:09:50,580
manifested as a corner that has two neighbors of the same color.

150
00:09:51,420 --> 00:09:54,614
If you don't have a bird's eye view of all possible strategies, 

151
00:09:54,614 --> 00:09:58,906
when you find that any specific one of them just doesn't work, you're left to wonder, 

152
00:09:58,906 --> 00:10:02,900
okay, maybe there's a sneaky clever strategy that I just haven't thought of yet.

153
00:10:03,300 --> 00:10:05,469
But when we're thinking about colors on the cube, 

154
00:10:05,469 --> 00:10:08,160
you're naturally led to an interesting combinatorial question.

155
00:10:08,760 --> 00:10:12,881
Is there some way you can paint this so that the three neighbors 

156
00:10:12,881 --> 00:10:16,560
of any given vertex always represent red, green, and blue?

157
00:10:19,240 --> 00:10:22,385
Maybe it seems bizarre, even convoluted, to go from a puzzle with 

158
00:10:22,385 --> 00:10:25,579
chessboards and coins to talking about painting corners of a cube, 

159
00:10:25,579 --> 00:10:28,820
but this is actually a much more natural step than you might expect.

160
00:10:29,280 --> 00:10:32,042
I've talked with a lot of people about this puzzle, 

161
00:10:32,042 --> 00:10:36,398
and what I love is that many of the experienced problem solvers immediately jump, 

162
00:10:36,398 --> 00:10:39,638
unprompted, to talking about coloring the corners of a cube, 

163
00:10:39,638 --> 00:10:42,560
as if it's a kind of de facto language for this puzzle.

164
00:10:43,200 --> 00:10:44,040
And it really is.

165
00:10:44,340 --> 00:10:47,868
Thinking about binary strings as vertices of a high dimensional cube, 

166
00:10:47,868 --> 00:10:51,346
with bit flips corresponding to edges, that actually comes up a lot, 

167
00:10:51,346 --> 00:10:55,480
especially in coding theory, like the error correction stuff I referenced earlier.

168
00:10:56,160 --> 00:10:59,526
What's more, you often hear mathematicians talk about coloring 

169
00:10:59,526 --> 00:11:03,000
things as a way to describe partitioning them into distinct sets.

170
00:11:03,920 --> 00:11:07,841
If you've ever heard of that hilariously enormous number grams constant, 

171
00:11:07,841 --> 00:11:11,601
for example, the problem where that came up was also phrased in terms 

172
00:11:11,601 --> 00:11:14,180
of assigning colors to a high dimensional cube, 

173
00:11:14,180 --> 00:11:18,800
though in that case colors were given to pairs of vertices instead of individual ones.

174
00:11:18,800 --> 00:11:21,819
The point is, analyzing how to color a high dimensional 

175
00:11:21,819 --> 00:11:25,000
cube is more of a transferable skill than you might expect.

176
00:11:26,040 --> 00:11:29,671
So to our question, can you make it so that every vertex has a red, 

177
00:11:29,671 --> 00:11:31,220
a green, and a blue neighbor?

178
00:11:32,020 --> 00:11:36,553
Remember, this is the same thing as having an encoding for key locations so that 

179
00:11:36,553 --> 00:11:40,920
you're always one flip away from communicating whichever location you want to.

180
00:11:41,900 --> 00:11:44,980
It would actually be enlightening if you paused the video and tried this now.

181
00:11:44,980 --> 00:11:47,960
It's like a weird three-dimensional variant of a sudoku.

182
00:11:48,800 --> 00:11:51,754
Very similar to sudoku's, in the sense that you want 

183
00:11:51,754 --> 00:11:55,100
certain subsets to be filled with all three possible states.

184
00:11:55,900 --> 00:11:59,630
For example, you might start by painting one of the corners an arbitrary color, 

185
00:11:59,630 --> 00:12:02,568
let's say red, so you know its three neighbors need to be red, 

186
00:12:02,568 --> 00:12:05,040
green, and blue, doesn't really matter how you do it.

187
00:12:05,560 --> 00:12:08,899
And then maybe we move to the red neighbor and say that the other 

188
00:12:08,899 --> 00:12:12,340
two adjacencies need to be green and blue, maybe we do it like this.

189
00:12:12,840 --> 00:12:15,361
But at least how I've drawn it here, you're stuck, 

190
00:12:15,361 --> 00:12:18,180
you're unable to choose a correct color for the next two.

191
00:12:18,620 --> 00:12:19,280
Can you see why?

192
00:12:20,220 --> 00:12:23,463
What I'd like to share is a lovely little argument that explains 

193
00:12:23,463 --> 00:12:26,207
not only why this will never work in three dimensions, 

194
00:12:26,207 --> 00:12:29,700
but also why it can't work in any dimension that's not a power of two.

195
00:12:30,500 --> 00:12:34,524
The idea is that the symmetry in the property we're looking at will end up 

196
00:12:34,524 --> 00:12:38,871
implying that there have to be an equal number of red, green, and blue vertices, 

197
00:12:38,871 --> 00:12:42,520
but that would mean there's 8 thirds of each, which is not possible.

198
00:12:43,440 --> 00:12:48,180
And before I go on, pause and see if you can think of a way to solidify that intuition.

199
00:12:48,800 --> 00:12:52,400
It's a fun exercise in turning a vague instinct into a solid proof.

200
00:12:56,080 --> 00:12:56,620
Alright, you ready?

201
00:12:57,440 --> 00:13:01,273
One way to do this is to imagine a process where you go through each 

202
00:13:01,273 --> 00:13:05,440
corner and count how many of its neighbors are a particular color, say red.

203
00:13:06,620 --> 00:13:10,819
So, each step here, we're looking at the three neighbors of a given vertex, 

204
00:13:10,819 --> 00:13:14,080
counting up the red ones, and adding that to a total tally.

205
00:13:17,160 --> 00:13:20,424
For this specific coloring, that count came out to be 12, 

206
00:13:20,424 --> 00:13:25,376
but if we had the property we wanted, every corner would have exactly one red neighbor, 

207
00:13:25,376 --> 00:13:26,840
so that count should be 8.

208
00:13:27,580 --> 00:13:31,653
On the other hand, every red corner is counted exactly three times, 

209
00:13:31,653 --> 00:13:34,947
once for each instance where it's somebody's neighbor, 

210
00:13:34,947 --> 00:13:39,380
so that final tally has to be three times the total number of red corners.

211
00:13:40,420 --> 00:13:43,780
So it's simple, find a coloring where 8 thirds of the corners are red.

212
00:13:44,940 --> 00:13:45,540
Isn't that nice?

213
00:13:46,000 --> 00:13:50,257
Counting how many times some corner has a red neighbor is the same as counting how 

214
00:13:50,257 --> 00:13:54,720
many times a red corner has some neighbor, and that's enough to get us a contradiction.

215
00:13:56,260 --> 00:14:00,220
What's also nice is that this argument immediately generalizes to higher dimensions.

216
00:14:00,800 --> 00:14:04,040
Think about solving the chessboard puzzle with n squares.

217
00:14:04,880 --> 00:14:09,706
Again, the puzzle is to associate each arrangement of coins with some state, 

218
00:14:09,706 --> 00:14:11,900
some possible location for the key.

219
00:14:12,600 --> 00:14:17,177
And the goal is to make it so that the arrangements you can get to with one flip of a 

220
00:14:17,177 --> 00:14:21,967
coin represent all possible states, all possible places the warden might have hidden that 

221
00:14:21,967 --> 00:14:22,180
key.

222
00:14:23,300 --> 00:14:26,345
Even if you can't visualize most higher dimensional cubes, 

223
00:14:26,345 --> 00:14:30,527
we can still talk about things like vertices of such a cube and their neighbors, 

224
00:14:30,527 --> 00:14:34,760
basically as a way to describe bitstrings and the ones which are one bitflip away.

225
00:14:35,720 --> 00:14:38,180
Really, there's just two relevant facts you need to know.

226
00:14:38,380 --> 00:14:43,551
If you're standing at one of these vertices, you have n distinct neighbors, 

227
00:14:43,551 --> 00:14:49,200
and the total number of vertices is 2 to the n, one for each bitstring of length n.

228
00:14:50,340 --> 00:14:53,420
From here, you can play the same game we did in three dimensions.

229
00:14:53,420 --> 00:14:57,180
You can go through each corner and count how many red neighbors it has.

230
00:14:57,840 --> 00:15:02,225
If it's possible to do the coloring we want, this sum should be 2 to the n, 

231
00:15:02,225 --> 00:15:03,380
one for each vertex.

232
00:15:04,220 --> 00:15:08,617
On the other hand, each red corner is counted once for each of its neighbors, 

233
00:15:08,617 --> 00:15:13,240
so that means that we need to end up with n times the total number of red corners.

234
00:15:14,220 --> 00:15:19,050
Since that left hand side is a power of 2, the right hand side also has to be a 

235
00:15:19,050 --> 00:15:23,880
power of 2, which could only ever happen if n itself is some smaller power of 2.

236
00:15:24,900 --> 00:15:30,600
So for example, if we were in 4 dimensions, or 64 dimensions, there is no contradiction.

237
00:15:31,060 --> 00:15:35,280
It's at the very least possible to evenly divide the vertices among the different colors.

238
00:15:36,000 --> 00:15:39,768
To be clear, that is not the same thing as saying there necessarily is a 

239
00:15:39,768 --> 00:15:43,640
solution for the power of 2 case, it's just that it can't be ruled out yet.

240
00:15:45,580 --> 00:15:47,880
To me, this is completely delightful.

241
00:15:48,160 --> 00:15:52,703
Just by imagining coloring the corners of a cube, and then counting how many there are, 

242
00:15:52,703 --> 00:15:56,524
you can conclude that no possible strategy, no matter how clever you are, 

243
00:15:56,524 --> 00:15:59,468
can work in all of the cases for this chessboard puzzle, 

244
00:15:59,468 --> 00:16:01,740
if the number of squares isn't a power of 2.

245
00:16:02,640 --> 00:16:06,036
So even though it might seem to make it easier if you knock off a couple 

246
00:16:06,036 --> 00:16:09,620
squares or reduce the size of the board, it actually makes the task hopeless.

247
00:16:10,120 --> 00:16:14,713
It also means that the solution to this puzzle, which I'll point you to in a moment, 

248
00:16:14,713 --> 00:16:18,875
can be viewed as a particularly symmetric way to color the corners of a high 

249
00:16:18,875 --> 00:16:22,280
dimensional cube in a way that's disallowed in most dimensions.

250
00:16:23,180 --> 00:16:25,242
And if you're curious, I just couldn't resist 

251
00:16:25,242 --> 00:16:27,440
showing this explicitly for a 4-dimensional cube.

252
00:16:28,200 --> 00:16:31,993
So in the same way that you can take a 3d cube and kind of squish it down 

253
00:16:31,993 --> 00:16:34,659
into 2 dimensions, maybe with a little perspective, 

254
00:16:34,659 --> 00:16:38,914
and get the same graph structure for how the vertices and edges are all connected, 

255
00:16:38,914 --> 00:16:43,168
we can do the same thing projecting a 4-dimensional cube into 3-dimensional space, 

256
00:16:43,168 --> 00:16:47,680
and still get a complete view for how all of the vertices and edges are hooked together.

257
00:16:48,560 --> 00:16:53,518
If you wanted to try your hand at a weird sort of 4-dimensional cousin of a sudoku, 

258
00:16:53,518 --> 00:16:58,476
you could pause right now and try to figure out how to color these vertices in such 

259
00:16:58,476 --> 00:17:03,140
a way that each of the 4 neighbors of any one represent all 4 different colors.

260
00:17:05,880 --> 00:17:09,990
Using essentially the same computation that solves the chessboard puzzle for 

261
00:17:09,990 --> 00:17:14,099
the 4-square case, I can get the computer to explicitly draw that out for us.

262
00:17:21,280 --> 00:17:25,040
And at this point, when you're hopefully burning to know what the actual solution is, 

263
00:17:25,040 --> 00:17:28,800
I'd like you to hop on over to Stand Up Maths, where Matt and I show you how it works.

264
00:17:28,800 --> 00:17:32,010
If any of you are somehow not yet familiar with Stand Up Maths, 

265
00:17:32,010 --> 00:17:35,370
it's one of my favorite channels run by one of my favorite people, 

266
00:17:35,370 --> 00:17:38,380
so please do immediately subscribe once you land over there.

267
00:17:38,860 --> 00:17:42,000
I promise, you're in for quite a few delights with everything else he has to offer.

268
00:17:43,000 --> 00:17:46,755
Before explaining it, he and I simply walk through what it looks like for us to 

269
00:17:46,755 --> 00:17:50,463
actually perform the solution, and as we do, I really want you to try thinking 

270
00:17:50,463 --> 00:17:54,360
of the solution yourself, and to predict what it is we're doing before we tell you.

271
00:17:55,100 --> 00:17:58,698
And if you're curious about the connection with Hamming codes and error correction, 

272
00:17:58,698 --> 00:18:02,040
I'm definitely game to make a video on that, just let me know in the comments.

273
00:18:02,440 --> 00:18:05,179
I've been told that as far as motivating puzzles go, 

274
00:18:05,179 --> 00:18:09,780
not everyone is as interested in symmetrical ways to paint a 64-dimensional cube as I am.

275
00:18:09,980 --> 00:18:11,320
But reliable data transmission?

276
00:18:11,760 --> 00:18:13,900
Come on, I think we can all agree that's universally sexy.

