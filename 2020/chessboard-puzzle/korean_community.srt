1
00:00:04,060 --> 00:00:07,060
당신은 혼자 어느 방에 들어가서 체스보드를 찾습니다.

2
00:00:07,060 --> 00:00:11,540
64의 정사각형 (칸) 각각 위에는 동전이 있습니다.

3
00:00:11,540 --> 00:00:15,200
이 퍼즐은 클래식한 '수감자 퍼즐'류의 퍼즐입 것입니다.

4
00:00:15,200 --> 00:00:21,320
수학에 빠진 교도관이 당신하고 당신의 파트너에게 자유를 기회를 주지만,

5
00:00:21,320 --> 00:00:23,510
그들이 설계해놓은 문제를 풀어야만 자유를 얻을 수 있는 양상의 문제입니다.

6
00:00:23,510 --> 00:00:31,000
이 문제에서는, 그 교도관이 그들 마음대로 앞면 또는 뒷면에 있게 동전을 던지고

7
00:00:31,000 --> 00:00:34,640
그들은 당신에게 열쇠를 보여주고 체스보드의 칸 중 하나 안에 그 열쇠를 넣습니다.

8
00:00:34,640 --> 00:00:39,040
(각 칸은 아마도 비밀 보관소 같은 것일겁니다)

9
00:00:39,040 --> 00:00:44,180
그래서 당신은 열쇠의 위치를 알 수 있습니다. 그리고 목표가 있는데요,

10
00:00:44,180 --> 00:00:49,560
당신의 파트너도 열쇠가 어디에 숨겨있는지 알게 해야됩니다. 그러나, 방을 떠나기 전에 허용된 유일한 행위는

11
00:00:49,560 --> 00:00:52,930
64개의 동전 중 1개, 단 1개만 뒤집는 것입니다.

12
00:00:52,930 --> 00:00:57,200
그리고 나서, 당신은 나가고 동료 죄수는 방에 들어갑니다.

13
00:00:57,400 --> 00:01:03,620
그가 전달받은 정보는 당신이 아주 살짝 조정한 앞면과 뒷면이 나와 있는 동전들의 배열 뿐입니다.

14
00:01:03,620 --> 00:01:10,980
그는 열쇠가 어디 있는지 알아야 하고, 맞춘다면 당신과 동료는 모두 자유를 얻게 됩니다.

15
00:01:10,980 --> 00:01:17,000
이 때, 동전의 위치를 맞추기 위한 전략을 세울 수는 있지만, 당신은 그 방에 들어가기 전에는 앞면, 뒷면의 배열을 알지 못 할 것입니다.

16
00:01:17,040 --> 00:01:21,960
또한, 교도관은 당신의 전략을 듣을 수 있습니다.

17
00:01:21,960 --> 00:01:26,179
그리고 이 전략을 듣고 나서 동전과 열쇠의 배열과 위치를 마음대로 바꿀 수 있습니다.

18
00:01:26,179 --> 00:01:30,460
사실 저는 이 문제를 결혼식 저녁 식사 때 대화 중 처음 들어봤습니다.

19
00:01:30,460 --> 00:01:32,430
그리고 저는 이 문제에 완전히 관심을 가지게 되었죠.

20
00:01:32,430 --> 00:01:38,579
운전을 3시간 정도 동안 했을 텐데, 저의 뇌는 이 문제에 대해 가득 차 있었고,

21
00:01:38,579 --> 00:01:41,180
그리고 이 문제 내에서의 상태를 인코딩도 해봤습니다.

22
00:01:41,180 --> 00:01:45,729
하지만 이 문제를 풀고 나서도,

23
00:01:45,729 --> 00:01:47,509
저는 두 개의 특이점에 관심을 가지게 되었습니다.

24
00:01:47,509 --> 00:01:53,180
그 중 하나는 이 문제를 6x6 크기의 체스보드에서 진행하는 것, 또는 칸 하나를 없애는 것 같이

25
00:01:53,180 --> 00:01:56,950
칸의 개수를 바꾸면 이 퍼즐은 불가능하다는 것을 증명하는 것이고

26
00:01:56,950 --> 00:02:01,829
이 특이점은 영상의 마지막 부분에

27
00:02:01,829 --> 00:02:05,869
4차원 큐브 (초입방체)를 칠하는 아름다운 방법을 볼 수 있게 합니다.

28
00:02:05,869 --> 00:02:09,539
또 다른 특이점은 이 해설을 컴퓨터 공학과 정보 이론에 메우 중요한 주제인

29
00:02:09,539 --> 00:02:16,000
오류 수정과 관련 지을 수 있다는 점입니다.

30
00:02:16,540 --> 00:02:21,650
컴퓨터가 데이터를 보내고 저장할 때, 현실 세계의 복잡하는 필연적으로 바뀌게 되며,

31
00:02:21,650 --> 00:02:27,239
이는 그 데이터가 읽혀지는 방법을 완전히 바꾸게 된다.

32
00:02:27,239 --> 00:02:31,930
고로 오류 수정은 아주 약간의 정보를 더하여서

33
00:02:31,930 --> 00:02:37,799
이 정보를 받은 사람이 오류가 있었다는 사실, 더 나아가서 고치는 방법도 알게 됩니다.

34
00:02:38,909 --> 00:02:44,290
사실 이 퍼즐을 푸는 데 쓰이는 직관적인 방법은 고효율 오류 수정을 하는 가장 이른 예시 중 하나인

35
00:02:44,290 --> 00:02:49,500
"Hamming Codes"랑 거의 일치하다고 볼 수 있습니다.

36
00:02:49,709 --> 00:02:55,400
이는 이 문제를 푸는 것이 당신이 생각하는 것처럼 쓸모가 없지는 않을 것이라고 말하는 것입니다.

37
00:02:55,659 --> 00:03:00,900
엄밀한 해설 과정은 여기에서 말하지는 않겠습니다.

38
00:03:00,900 --> 00:03:07,000
대신 매트 파커 분이랑 Stand-up Maths에서 같이 영상을 찍었습니다. (영상 해설란에 나와있음)

39
00:03:07,440 --> 00:03:13,500
그 영상에서 우리는 이 문제를 푸는 방법에 대한 생각을 애기하고, 이 문제를 볼 수 있는 방법이 많아서 재미있기도 합니다.

40
00:03:13,709 --> 00:03:18,830
이 영상에서 제가 실제로 할 것은 가능한 모든 경우에 대하여 더 포괄적인 관점에서 보고,

41
00:03:18,830 --> 00:03:23,790
또 전에 언급한 2개의 특이점 중 1번째, 즉 몇몇 경우 (변형 문제)는

42
00:03:23,790 --> 00:03:29,099
당신이 얼마나 영리하더라도 이 퍼즐을 풀 수 없다는 것을 알아보려고 합니다.

43
00:03:29,099 --> 00:03:33,569
이 증명은 다른 관점에서 볼 때 풀이가 드러나는 그런 만족스러운 느낌이 드는 점과

44
00:03:33,569 --> 00:03:38,090
이 문제를 풀게 됨으로써

45
00:03:38,090 --> 00:03:43,500
더 높은 차원에서의 물체에 대해서 생각해보고 이를 이용하여서 우리가 이 정보에 대하여서 결론을 내릴 수 있게 합니다.

46
00:03:43,709 --> 00:03:48,190
그리고, 거의 불가능하게 보이는 실제 풀이를

47
00:03:48,190 --> 00:03:59,840
더 잘 이해하게 도와 줄 수 있습니다.

48
00:03:59,840 --> 00:04:04,300
이 문제를 풀기 위해 일단 눈에 확실히 보일 수 있게 해야 합니다.

49
00:04:04,300 --> 00:04:08,480
일단 일반적인 경우를 알기 위하여, 실제로 푸는 의미가 있는 가장 간단한 경우

50
00:04:08,480 --> 00:04:16,700
즉 2개의 칸, 동전, 열쇠가 있을 수 있는 곳도 2가지인 경우를 생각해봅시다.

51
00:04:17,230 --> 00:04:20,680
풀 수 있는 방법 중 하나는 2번째 동전이 동전이 어딨는지 알려주는 역할을 하는 것입니다.

52
00:04:20,680 --> 00:04:25,500
뒷면(T)이면 왼쪽, 앞면(H)이면

53
00:04:25,500 --> 00:04:27,140
오른쪽 칸에 위치하는 것을 의미합니다.

54
00:04:27,140 --> 00:04:34,479
즉, 만약 2번째 칸을 뒤집어야 한다면 뒤집고, 뒤집지 말아야 하면 그냥 1번째 동전을 뒤집으면 됩니다.

55
00:04:36,419 --> 00:04:39,840
일단, 앞면 뒷면으로 동전의 상태를 쓰는 대신, 수학적으로 보기 더 쉽게

56
00:04:39,840 --> 00:04:44,169
1하고 0으로 변환합시다.

57
00:04:44,169 --> 00:04:49,290
그러면 이제 이 4가지의 경우는

58
00:04:49,290 --> 00:04:54,740
단위 정사각형의 꼭짓점 4개로 볼 수 있습니다.

59
00:04:54,740 --> 00:04:58,410
이 문제를 풀려고 할 때 엉뚱한 짓을 하는 것처럼 보이나,

60
00:04:58,410 --> 00:05:01,850
나중에 칸의 개수를 높일 때 이런 짓을 하는 것이 좋습니다.

61
00:05:01,850 --> 00:05:07,190
여기에서 알아야 될 것은 동전 하나를 뒤집을 때, 하나만의 좌표(x 혹은 y)를 바뀌므로 정사각형의 모서리를

62
00:05:07,190 --> 00:05:08,190
따라서 움직이게 된다는 것이다.

63
00:05:08,190 --> 00:05:15,340
그럼 우리의 전략은

64
00:05:15,340 --> 00:05:20,880
만약 y좌표가 0이면 (밑 꼭짓점 2개) 열쇠는 칸 0에 있고

65
00:05:20,880 --> 00:05:28,569
y좌표가 1이면 (위 꼭짓점 2개) 열쇠는 칸 1에 있다는 것으로 변환할 수 있다.

66
00:05:28,569 --> 00:05:34,190
일단 이 퍼즐을 풀 수 있기 위한 조건을 생각해봅시다. 어디에서 시작하든 간에

67
00:05:34,190 --> 00:05:39,569
모서리를 따라 한 번 움직이면 당신은 이 2가지의 상태에 항상 움직일 수 있다면

68
00:05:39,569 --> 00:05:47,039
이 퍼즐은 풀 수가 있습니다.

69
00:05:47,039 --> 00:05:50,380
이런 것이 더 많은 칸을 지닌 체스보드에도 성립할까요?

70
00:05:50,380 --> 00:05:54,850
일단 2개 칸 다음으로 가장 간단한 경우는 칸이 3개 일 때,

71
00:05:54,850 --> 00:05:56,870
즉슨 열쇠가 있을 수 있는 곳이 3가지 일 때 입니다.

72
00:05:56,870 --> 00:06:02,350
이는 동전의 가능한 배열 수가 8개가 되게 하고, 지난 경우랑 동일하게 이 8개의 경우를

73
00:06:02,350 --> 00:06:07,800
3차원 공간좌표 내에서의 점으로 생각하면,

74
00:06:07,800 --> 00:06:10,479
이들은 단위 정육면체의 8개의 꼭짓점에 해당한다.

75
00:06:10,479 --> 00:06:15,100
이 관점은 우리가 동전 하나를 뒤집는 것이 무엇을 뜻하는지 매우 확실하게 알 수 있게 한다.

76
00:06:15,690 --> 00:06:23,120
동전을 하나 뒤집을 때 마다 정육면체의 이웃한 꼭지점으로 건너 가는 것입니다.

77
00:06:23,120 --> 00:06:29,919
이제, 이 퍼즐을 당신하고 당신의 파트너가 풀기 위해서 어떤 전략을 만들어야 할까요?

78
00:06:29,919 --> 00:06:34,090
당신의 파트너가 방 안으로 들어갈 때, 그들은 '3비트', 즉 3개의 동전의 배열을

79
00:06:34,090 --> 00:06:38,810
열쇠가 있을 경우 3가지로 바꿔 생각해야 합니다.

80
00:06:38,810 --> 00:06:43,039
이미 우리는 매우 시각적으로 문제를 풀고 있으니, 이 3가지 경우를 색으로 생각합시다.

81
00:06:43,039 --> 00:06:48,720
칸 0이면 빨강, 칸 1이면 초록, 칸 2이면 파랑색으로 나타냅시다.

82
00:06:48,720 --> 00:06:54,730
이 상황에서, 모든 전략은 이 8개의 꼭짓점을

83
00:06:54,730 --> 00:07:02,320
빨강색, 초록색 혹은 파랑색으로 칠하는 것이랑 같은 이치라고 볼 수 있습니다.

84
00:07:02,320 --> 00:07:06,680
예컨데, 정육면체 전체를 빨강색이라고 하는 것 (사실 전략이라고는 보기 어렵지만)

85
00:07:06,680 --> 00:07:10,940
이는 당신의 파트너가 (동전의 배열이 어떻든 간에) 열쇠가 칸 0에 있다고 대답하는 것에 해당됩니다.

86
00:07:12,200 --> 00:07:21,000
만약 칸 0과 1의 두 동전의 합이 열쇠의 위치를 나타나게 하면, 정육면체는 이렇게 생겼습니다.

87
00:07:21,520 --> 00:07:26,500
재밌는 건 우리가 전략의 총 개수를 구할 수 있습니다.

88
00:07:26,500 --> 00:07:31,949
각각의 꼭짓점에 대해 3가지의 경우가 있으므로, 3^8가지의 경우가 있습니다.

89
00:07:31,949 --> 00:07:36,919
만약 64차원 정육면체에 대해서도 같은 짓을 하려면 (당신이 64차원에 대해서 생각 할 수 있을지는 모르겠지만)

90
00:07:36,919 --> 00:07:45,300
총 64^(2^64)가지의 가능한 전략이 있다고 볼 수 있습니다.

91
00:07:45,880 --> 00:07:50,710
이것이 우리가 풀이 (바늘)를 찾을 때 주어진 전략의 수 (커다란 건초 더미)입니다.

92
00:07:50,710 --> 00:08:00,330
또 다른 전략은 0*동전 0+1*동전 1+2*동전 2를 3으로 나눈 나머지를 구하는 것이고,

93
00:08:00,330 --> 00:08:05,599
이 방법을 Stand-up Maths에서 매트 파커 분이랑 실제로 애기한 적도 있습니다.

94
00:08:05,599 --> 00:08:10,009
64개의 칸에서 이 방법을 적용하는 방법, 왜 임의의 배열에 대해서는 은근 괜찮은 방법인지, 그리고 왜 이 방법이

95
00:08:10,009 --> 00:08:11,970
최종적인 풀이는 아닌지에 대해서 애기를 나눠봤습니다.

96
00:08:11,970 --> 00:08:17,400
우리 시점에는 정육면체의 꼭짓점에 색을 색칠하는 3^8가지의 방법 중 하나이지만, 지금은 정육면체의 모서리를

97
00:08:17,400 --> 00:08:19,099
따라서 걸어간다고 생각해봅시다.

98
00:08:19,099 --> 00:08:25,900
일단, (0,0,0)에 당신이 위치해있다고 생각해봅시다. 즉, 모든 동전이 뒷면이란 뜻이죠.

99
00:08:26,430 --> 00:08:32,640
동전 0을 뒤집으면 합이 바뀌지 않으므로 빨간색 꼭짓점으로 가게 됩니다.

100
00:08:32,640 --> 00:08:40,120
동전 1을 뒤집으면 합이 1만큼 늘기 때문에 초록색 꼭짓점으로 가게 되고,

101
00:08:40,120 --> 00:08:44,760
동전 2을 뒤집으면 합이 2만큼 늘기 때문에 파란색 꼭짓점으로 가게 됩니다.

102
00:08:44,760 --> 00:08:49,899
어느 꼭짓점에서 당신이 원하는 색깔을 모서리를 1번만 따라가 움직여서 항상 도달할 수 있다는 것은

103
00:08:49,899 --> 00:08:55,050
이 전략은 그 꼭짓점에 있다면 항상 통할 것이라는 것과 같은 의미입니다.

104
00:08:55,050 --> 00:08:59,940
반면 (0,1,0)에 시작할 때를 봅시다.

105
00:08:59,940 --> 00:09:07,470
동전 0을 뒤집으면 초록색 꼭짓점으로 가게 되나,

106
00:09:07,470 --> 00:09:14,850
동전 1 또는 2를 뒤집으면 빨강색 꼭짓점으로 가고, 파란색 꼭짓점에 도달하는 것은 불가능합니다.

107
00:09:14,850 --> 00:09:20,930
왜 이러한 상황이 일어나면은 -1 또는 +2를 하는 경우가 있는데, 둘 다 mod 3으로 따지면

108
00:09:20,930 --> 00:09:25,200
같은 것으로 볼 수 있습니다.

109
00:09:25,200 --> 00:09:37,000
그러므로, 이 경우에 교도관은 열쇠를 칸 2에 넣고 동전의 초기 배열을 으로 하면 맞출 수 없습니다.

110
00:09:40,260 --> 00:09:46,230
사실 mod 3으로 생각하지도 않아도 위 그림을 보면

111
00:09:46,230 --> 00:09:51,610
(0,1,0)이라는 꼭짓점이 같은 색깔의 꼭짓점 2개랑 연결이 되어 있다는 것을 알 수 있습니다.

112
00:09:51,610 --> 00:09:55,690
만약 모든 전략을 시각적으로 바라보기가 어렵다면, 당신이 시도해본 모든 전략이

113
00:09:55,690 --> 00:10:02,900
안 통한다는 것을 보고 나서, 당신이 아마도 잊어버린 전략이 있을 것이라고 생각 할 수도 있습니다.

114
00:10:03,470 --> 00:10:07,779
근데 이 정육면체의 색칠하는 방법을 생각하게 되면, 자연스럽게 이 질문에 도달하게 되죠:

115
00:10:07,779 --> 00:10:14,399
이 정육면체의 8개의 꼭짓점을 색칠하여서 모든 꼭짓점의 3개의 '이웃', 즉 모서리로 연결된 꼭짓점의 색이

116
00:10:14,399 --> 00:10:19,690
각각 빨간색, 초록색, 파란색 1개씩 있을 수 하게 있을까? 라는 문제에 부딫히게 됩니다.

117
00:10:19,690 --> 00:10:23,680
물론 이 체스보드하고 동전을 이용하는 문제에서 정육면체를 색칠하는 것이 이상 할 수도 있으나,

118
00:10:23,680 --> 00:10:28,600
사실 이게 생각보다 많이 자연스러운 것입니다.

119
00:10:29,110 --> 00:10:33,341
저는 많은 사람과 이 퍼즐에 대해 애기해보았고, 인상 깊었던 것이 숙련된 퍼즐 해결자들이

120
00:10:33,341 --> 00:10:38,620
곧바로 정육면체의 꼭짓점을 색칠하는 것에 대해 말하는 것입니다.

121
00:10:38,620 --> 00:10:43,260
이것이 이 퍼즐을 푸는데 매우 자연스러운 언어인 것처럼요.

122
00:10:43,260 --> 00:10:44,490
그리고 실제로 자연스럽습니다.

123
00:10:44,490 --> 00:10:48,620
이 이진법 수열을 높은 차원의 '정육면체', 비트 플립을 모서리에 해당시키는 것은

124
00:10:48,620 --> 00:10:55,500
사실 많이 나온다. 특히, 전에 언급하였던 오류 수정 (코딩 이론에서)에 많이 나온다.

125
00:10:55,790 --> 00:11:00,750
또, 자주 수학자들이 이러한 것을 색칠하는 것을

126
00:11:00,750 --> 00:11:04,060
서로 다른 집합으로 나누는 것에 대해 설명하는 것이라는 애기도 듣게 된다.

127
00:11:04,060 --> 00:11:08,550
만약 그레이엄의 수라는 천문학적인 수를 들어봤다면

128
00:11:08,550 --> 00:11:14,300
이 수는 고차원 큐브에 색을 칠하는 문제에 대한 해답을 찾을 때 나온 수이다.

129
00:11:14,820 --> 00:11:19,269
이 문제랑 다른 점은 색들이 개별적이 아닌 꼭짓점 한 짝에게 주어져 있는 점이다.

130
00:11:19,269 --> 00:11:24,900
어쨌든, 우리가 알아야 할 것은 이런 전략이 생각보다 많은 문제에 쓰일 수 있는 것이란 점이다.

131
00:11:25,389 --> 00:11:31,860
그래서 다시 우리가 알려고 했던 질문으로 돌아가보자. 실제로 모든 꼭짓점이 빨간, 초록, 파랑 이웃을 가지게 할 수 있는가?

132
00:11:31,860 --> 00:11:37,130
우리는 이 문제가 열쇠의 위치를 알려주기 위해 단 한 동전만 뒤집을 수 있는 상태랑 같은 것이라는 것을

133
00:11:37,130 --> 00:11:40,500
기억해야 한다.

134
00:11:41,180 --> 00:11:48,300
사실 한 번 영상을 멈추고 마치 3차원 스도쿠인 것 처럼 이 문제를 푸는 것도 재밌을 것이다.

135
00:11:48,870 --> 00:11:56,400
사실 어느 특정한 부분집합이 모든 가능한 경우로 채워야 한다는 점에서 스도쿠랑 거의 유사하다.

136
00:11:56,420 --> 00:12:04,700
예를 들어서, 하나의 꼭짓점을 아무 색깔로 칠하고 (빨간색처럼), 그리고 그의 이웃을 빨간, 초록, 파랑색 1개씩 칠하는 것으로 시작 할 수 있다.

137
00:12:04,730 --> 00:12:13,250
이제 빨간색 이웃은 초록색과 파란색 이웃이 필요하므로, 그것도 그려주면 된다.

138
00:12:13,250 --> 00:12:17,579
근데 이걸 다 하고 나서는 이제 남은 2개의 꼭짓점을 어떤 색깔로 하는지 못 풀게 된다.

139
00:12:17,579 --> 00:12:19,490
왜인지 알아맞출 수 있을까요?

140
00:12:19,490 --> 00:12:24,440
제가 알려주려고 하는 것은 이 증명을 통하여 왜 3차원 뿐만 아니라

141
00:12:24,440 --> 00:12:30,000
n차원, 여기서 n은 2의 거듭제곱이 아닐 때 왜 안 되는 지 설명해줍니다.

142
00:12:30,560 --> 00:12:38,000
이 특성의 대칭성 때문에 빨간색, 초록색, 파란색 꼭짓점의 개수가 같아야 합니다.

143
00:12:38,250 --> 00:12:43,720
그러나 이는 각각 8/3개 씩의 꼭짓점을 가져야 한다는 결론이 나오게 하고, 이는 불가능합니다.

144
00:12:43,720 --> 00:12:52,000
계속 진행하기 전에 영상을 다시 한 번 멈춰봐서 이 추측을 증명으로 엄밀하게 할 수 있는지에 대해 생각해봅시다.

145
00:12:57,730 --> 00:13:02,350
한 방법은 모든 꼭짓점를 지나가면서

146
00:13:02,350 --> 00:13:07,019
그 이웃 중 몇 개가 특정한 색 (예를 들어 빨간색)인지 세 보는 것입니다.

147
00:13:07,019 --> 00:13:11,560
그래서 우리는 모든 꼭짓점의 빨간색 이웃을 세고

148
00:13:11,560 --> 00:13:17,540
이들을 모두 더하는 것입니다.

149
00:13:17,540 --> 00:13:23,300
여기에서는 12개의 빨간 이웃이 나오나, 우리가 원하는 성질이 나오려면

150
00:13:23,300 --> 00:13:27,639
8개의 빨간 이웃이 필요합니다.

151
00:13:27,639 --> 00:13:33,829
반면, 어느 꼭짓점은 3개의 다른 꼭짓점의 이웃이기 때문에,

152
00:13:33,829 --> 00:13:40,000
총 빨간 이웃의 개수는 빨간 꼭짓점 개수의 정확히 3배가 된다.

153
00:13:40,400 --> 00:13:44,320
그러면 우리는 이제 8/3개의 꼭짓점이 빨간색인 배열을 찾아야 하는 것이다.

154
00:13:44,320 --> 00:13:46,240
매우 아름답지 않나요?

155
00:13:46,240 --> 00:13:50,100
어느 모서리가 가진 빨간 이웃의 수의 합이

156
00:13:50,100 --> 00:13:55,620
빨간 모서리가 가진 아무 이웃의 수의 합이랑 같다는 점과, 이를 이용해서 모순을 이끌어 내는 것을 말합니다.

157
00:13:55,620 --> 00:14:01,000
또 좋은 것이 이 추측은 더 높은 차원에서도 성립합니다.

158
00:14:01,060 --> 00:14:06,630
이제 n개의 칸에 대해서 생각해봅시다.
퍼즐의 목적은 동전의 모든 배열을 어느 상태에 대응시켜

159
00:14:06,630 --> 00:14:15,070
어느 배열이든지 한 개의 동전만 뒤집어서 모든 상태를 나타 낼 수 있는 것,

160
00:14:15,070 --> 00:14:23,459
즉 가능한 모든 열쇠의 위치를 나타내는 것입니다.

161
00:14:23,459 --> 00:14:28,470
우리는 고차원 큐브를 시각적으로 나타내지는 못하지만, 우리는 이의 꼭짓점에 대해서는 애기할 수 있습니다.

162
00:14:28,470 --> 00:14:34,700
그리고 이들의 이웃과 이에 대응되는 비트 스트링에 대해서도 알 수 있고요.

163
00:14:34,740 --> 00:14:41,160
일단 필요한 정보는 2가지 입니다:
첫 번째,  하나의 꼭짓점에 있다면 당신은

164
00:14:41,160 --> 00:14:50,900
n개의 서로 다른 이웃이 있고, 총 꼭짓점의 개수는 2^n개이며, 각각은 길이 n의 (0과 1로 이루어진) 비트 스트링이 있습니다.

165
00:14:50,990 --> 00:14:57,700
이제 3차원에서 했던 것을 더 높은 차원에서도 적용시킬 수 있습니다. 각각의 꼭짓점을 지나가면서 이들의 빨간 이웃을 세면 됩니다.

166
00:14:57,900 --> 00:15:03,710
만약 이 색칠이 가능하다면, 이 빨간 이웃의 개수의 합은 각 꼭짓점마다 하나, 즉 2^n이 될 것입니다.

167
00:15:03,710 --> 00:15:09,610
반면, 모든 빨간 꼭짓점은 n개의 꼭짓점의 이웃이므로

168
00:15:09,610 --> 00:15:13,570
이 2^n은 빨간 꼭짓점의 개수에다가 n을 곱한 것입니다.

169
00:15:13,570 --> 00:15:19,250
이 식에서 좌변은 2의 거듭제곱이므로, 우변도 마찬가지여야 합니다.

170
00:15:19,250 --> 00:15:25,540
즉, n도 2의 거듭제곱이 될 수 밖에 없습니다.

171
00:15:25,540 --> 00:15:31,800
예를 들어 4차원 또는 64차원에서는 모순이 없습니다.

172
00:15:31,800 --> 00:15:35,060
일단 이 꼭짓점의 개수를 맞출 수 있습니다.

173
00:15:35,060 --> 00:15:40,500
다만, 다 풀이가 있다는 것은 아니고, 모순이 없으므로 풀이가 있을 수 있다는 애기입니다.

174
00:15:40,500 --> 00:15:44,529
즉, 아직 n의 '후보 목록'에서 탈락 될 수 없는 것이죠.

175
00:15:44,529 --> 00:15:48,260
이것은 저에게 완전히 대단한 것입니다.

176
00:15:48,260 --> 00:15:52,720
큐브의 꼭짓점을 색칠하고 각 색깔이 몇 개 있는 지 아는 것 만으로도

177
00:15:52,720 --> 00:15:57,279
자신이 얼마나 영리하든 2의 거듭제곱이 아닌 수만큼의 칸일 때 그 어느 전략도

178
00:15:57,279 --> 00:16:03,040
통하지 않을 것이라 결론 지을 수 있습니다.

179
00:16:03,040 --> 00:16:10,560
그러므로 8x8에서 칸 1개를 없애거나 6x6인 체스보드였다면, 이 퍼즐을 풀 가망이 없다는 뜻이다.

180
00:16:10,560 --> 00:16:12,700
즉, 이 퍼즐의 풀이 (곧 알려드립니다)는 어느 특정한 대칭적인 염색 문제로,

181
00:16:12,700 --> 00:16:23,400
대부분의 차원에서는 허용되지 않은, 높은 차원의 큐브를 색칠 하는 방법으로 볼 수 있습니다.

182
00:16:23,420 --> 00:16:28,620
궁금할 것 같아서, 4차원 큐브 (초입방체)에 대해서 보여주고 싶었습니다.

183
00:16:28,620 --> 00:16:33,180
정육면체를 2차원에 나타내는 방법과 비슷한 방법으로 하면,

184
00:16:33,180 --> 00:16:44,600
초입방체를 나타낼 수 있습니다. (정육면체를 조금 평행이동하여서)

185
00:16:44,660 --> 00:16:48,639
그러면 어떻게 모든 꼭짓점과 모서리가 연결되어있는지 알 수 있습니다.

186
00:16:48,639 --> 00:16:53,089
만약 4차원 스도쿠 같은 것을 해보고 싶었다면, 이 영상을 멈추고

187
00:16:53,089 --> 00:16:59,279
어떻게 해야 모든 꼭짓점이 모든 4개의 색깔의

188
00:16:59,279 --> 00:17:05,860
이웃을 가지고 있는지 알아 보는 것도 좋습니다.

189
00:17:05,860 --> 00:17:10,000
같은 방법으로 시도해보면,

190
00:17:10,000 --> 00:17:17,510
컴퓨터가 우리 대신 색칠한 결과를 보여줄 수 있습니다.

191
00:17:17,510 --> 00:17:29,400
이 쯤에 Stand-up Maths에서 매트 파커 분하고 제가 이 풀이가 어떻게 작동하는 지 보는 것도 좋습니다.

192
00:17:29,450 --> 00:17:33,570
이 채널에 익숙하지 않으시다면, 제가 가장 좋아하는 사람 중 한 명이 운영하는 제가 가장 좋아하는 채널 중 하나입니다.

193
00:17:33,570 --> 00:17:42,500
만약 그 영상을 본다면 바로 구독해주시길 바랍니다.

194
00:17:43,220 --> 00:17:47,390
설명하기 전에 저하고 그는 이 풀이를 실제로 실행하는 방법을 실제로 보여주고

195
00:17:47,390 --> 00:17:55,460
우리는 우리가 당신에게 알려주기 전에 당신이 풀이를 스스로 생각해보기를 바랍니다.

196
00:17:55,460 --> 00:17:59,440
그리고 만약 당신이 Hamming codes랑 오류 수정이랑의 관계가 궁금하시다면

197
00:17:59,440 --> 00:18:02,070
저는 그것에 대한 영상도 만들 생각입니다. 그러면 저에게 댓글로 당신의 의견을 알려주세요.

198
00:18:02,070 --> 00:18:08,630
저는 64차원 큐브를 대칭적으로 칠하는 방법에 대해서 그렇게 관심을 가지는 사람을 별로 없을 것이라고 들었지만

199
00:18:08,630 --> 00:18:11,670
그렇지만 데이터를 신뢰성 있게 전달하는 방법이라고 하면 어떨까요?

200
00:18:11,670 --> 00:18:14,460
이는 우리 모두가 (펀쿨)섹시하다고 동의할 수 있을 것입니다.

201
00:18:14,460 --> 00:18:20,400
잘못된 번역은 수정해 주시면 감사하시겠습니다 ^^

