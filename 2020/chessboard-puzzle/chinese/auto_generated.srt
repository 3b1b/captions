1
00:00:03,280 --> 00:00:06,600
你独自走进一个房间，发现了一个棋盘。

2
00:00:07,140 --> 00:00:10,280
64 个方格中的每一个上方都有一枚硬币。

3
00:00:10,940 --> 00:00:14,073
退一步来说，这是经典的囚犯谜题之一，

4
00:00:14,073 --> 00:00:19,296
一位痴迷于 数学的典狱长为你和一名狱友提供了重获自由的机会 

5
00:00:19,296 --> 00:00:23,300
，但前提是你们两人必须解决他们精心设计的计划。

6
00:00:23,900 --> 00:00:28,224
在这种情况下，他们所做的就是根据他们想要的图案仔细地将 

7
00:00:28,224 --> 00:00:32,240
每枚硬币翻转为正面或反面，然后他们向您展示一把钥匙。

8
00:00:32,940 --> 00:00:36,735
他们把钥匙放在棋盘格子里，每个格子都是一个秘 

9
00:00:36,735 --> 00:00:40,200
密隔间或类似的东西，所以你知道钥匙在哪里。

10
00:00:40,840 --> 00:00:45,141
我们的目标是让 2 号囚犯也知道钥匙在哪 里，

11
00:00:45,141 --> 00:00:48,507
但在你离开房间之前，典狱长允许你做 

12
00:00:48,507 --> 00:00:52,060
的唯一一件事就是交出一枚且仅一枚硬币。

13
00:00:53,600 --> 00:00:56,915
那时，你走出去，你的同伴囚犯走进来，

14
00:00:56,915 --> 00:01:01,152
除了他们正在看的一 组头和尾之外没有任何信息，

15
00:01:01,152 --> 00:01:06,309
你只是稍微调整了一下，他们 应该推断出钥匙在哪里隐藏的，

16
00:01:06,309 --> 00:01:08,520
有可能为你们俩赢得自由。

17
00:01:09,320 --> 00:01:11,768
正如这些谜题的典型特征，如果愿意的话，

18
00:01:11,768 --> 00:01:15,248
你们两个可以提前 制定策略，但你们不会知道正面和反面的

19
00:01:15,248 --> 00:01:16,280
具体布局是什么。

20
00:01:16,740 --> 00:01:20,836
此外，典狱长可以监听你的策略，并尽最大努力 

21
00:01:20,836 --> 00:01:24,560
通过硬币和钥匙的一些对抗性安排来阻止它。

22
00:01:25,920 --> 00:01:30,749
所以，我第一次听说这个谜题是在一次 婚礼的晚餐谈话中，

23
00:01:30,749 --> 00:01:32,180
它完全吸引了我。

24
00:01:32,540 --> 00:01:35,820
我记得开车回家大约需要 3 个小时，

25
00:01:35,820 --> 00:01:40,560
我想我的 注意力一直集中在抛硬币和编码状态的主题上。

26
00:01:41,000 --> 00:01:42,960
但即使在那之后，这个谜题仍然困扰着你。

27
00:01:43,320 --> 00:01:46,720
解决之后，我掉进了这两个出奇有趣的兔子洞。

28
00:01:47,400 --> 00:01:50,318
其一是证明，如果稍微改变一下设置，

29
00:01:50,318 --> 00:01:54,783
比如将其变成 6x6 的棋盘，或者移除其中一个方格，

30
00:01:54,783 --> 00:01:56,500
那么挑战是不可能的。

31
00:01:57,220 --> 00:01:59,997
为了让您对兔子洞的通向有一点了解，

32
00:01:59,997 --> 00:02:04,900
该视频将以一 种特别令人愉快的方式来绘制 4 维立方体的角。

33
00:02:05,740 --> 00:02:11,428
另一个兔子洞是弄清楚这个难题的解决 方案与纠错的紧密程度，

34
00:02:11,428 --> 00:02:15,940
这是计算机科 学和信息论中一个非常重要的话题。

35
00:02:16,520 --> 00:02:19,514
这个想法是，当计算机发送和存储数据时，

36
00:02:19,514 --> 00:02:23,455
现实世界的混乱不可避 免地会时不时地发生一点变化，

37
00:02:23,455 --> 00:02:25,820
这可以完全改变数据的读取方式。

38
00:02:26,580 --> 00:02:31,218
因此，纠错码是一种在消息中添加极少量信息的 方法，

39
00:02:31,218 --> 00:02:36,042
使接收者能够识别何时出现错误，更令人 印象深刻的是，

40
00:02:36,042 --> 00:02:38,640
能够准确地识别如何修复错误。

41
00:02:39,079 --> 00:02:45,845
事实证明，解决这个难题的直觉本 质上与汉明码背后的直觉相同，

42
00:02:45,845 --> 00:02:49,680
汉 明码是高效纠错的最早例子之一。

43
00:02:50,480 --> 00:02:55,380
总而言之，花时间思考这个问 题并不像你想象的那么无用。

44
00:02:55,960 --> 00:02:58,520
现在你和我实际上并不打算在这里讨论解决方案。

45
00:02:58,920 --> 00:03:01,324
相反，我与马特·帕克 (Matt Parker) 

46
00:03:01,324 --> 00:03:02,959
一起拍摄了一个关于单口数学的视频，

47
00:03:02,959 --> 00:03:05,076
 我相信你们很多人都从他在 YouTube 

48
00:03:05,076 --> 00:03:07,000
上、单口喜剧和书籍方面的名气中认出了他。

49
00:03:07,600 --> 00:03:10,465
我们每个人都会讨论解决这个问题的思维过 程，

50
00:03:10,465 --> 00:03:12,680
这很有趣，因为有多种看待它的方式。

51
00:03:13,340 --> 00:03:17,173
相反，我想和你一起做的是对这个谜题的每一个 

52
00:03:17,173 --> 00:03:21,007
可能的策略采取更全面的看法，并带你和我一起 

53
00:03:21,007 --> 00:03:24,840
进入第一个兔子洞，证明为什么某些变化必然为 

54
00:03:24,840 --> 00:03:28,500
典狱长留下阻碍你的空间，不不管你有多聪明。

55
00:03:29,080 --> 00:03:33,584
证明本身就是那些令人满意的时刻之一，你可以 改变视角，

56
00:03:33,584 --> 00:03:38,255
它揭示了解决方案，而导致它的整 个背景是一个很好的机会，

57
00:03:38,255 --> 00:03:43,260
可以练习对高维对象 进行推理，以此得出有关信息和数据的结论。

58
00:03:44,160 --> 00:03:48,439
另外，当你看到它在某种意义上几乎是不可能的 时候，

59
00:03:48,439 --> 00:03:51,520
它更能帮助你理解原始谜题的解决方案。

60
00:03:58,320 --> 00:03:59,140
从哪儿开始？

61
00:03:59,580 --> 00:04:04,080
我们想要的是某种可视化的方式来说明解决这个难题的意义。

62
00:04:04,800 --> 00:04:09,176
为了构建一般情况，让我们将事情分解为 最简单的情况，

63
00:04:09,176 --> 00:04:10,860
但仍然具有某种意义。

64
00:04:11,260 --> 00:04:17,260
两个方块，两枚硬币，以及钥匙所在位置的两种可能性。

65
00:04:17,260 --> 00:04:21,260
解决这个问题的一种方法是简单地 让第二枚硬币传达钥匙的位置。

66
00:04:21,480 --> 00:04:23,954
如果是反面，则表示钥匙在左边的方格中，

67
00:04:23,954 --> 00:04:26,560
 如果是正面，则表示钥匙在右边的方格中。

68
00:04:27,040 --> 00:04:27,920
没什么大不了的，对吧？

69
00:04:28,020 --> 00:04:30,754
这是一点信息，所以当你需要改变那枚硬币时，

70
00:04:30,754 --> 00:04:34,660
你可以翻 转它，但如果你不需要改变它，你可以翻转另一枚硬币。

71
00:04:36,300 --> 00:04:39,145
首先，让我们停止将它们视为正面和反 面，

72
00:04:39,145 --> 00:04:41,280
而开始将它们视为 1 和 0。

73
00:04:41,680 --> 00:04:43,360
这样做数学就容易多了。

74
00:04:44,040 --> 00:04:47,263
然后，您可以将这些硬币对视为一组坐标，

75
00:04:47,263 --> 00:04:50,826
 其中棋盘可以处于的四种可能状态中的每一 

76
00:04:50,826 --> 00:04:53,880
种都位于单位正方形的角上，如下所示。

77
00:04:54,380 --> 00:04:56,295
当我们已经知道如何解决这个案例时，

78
00:04:56,295 --> 00:04:58,099
这可能感觉像是一件愚蠢的事情 ，

79
00:04:58,099 --> 00:05:01,480
但对于将较大的案例转化为某种几何体来说，这是一个很好的热身。

80
00:05:02,100 --> 00:05:06,455
请注意，翻转一枚硬币会使您沿着正方形的 边缘移动，

81
00:05:06,455 --> 00:05:08,720
因为它只改变其中一个坐标。

82
00:05:10,100 --> 00:05:15,888
我们让第二枚硬币对密钥位置进行编码的策略可以通过将底部 

83
00:05:15,888 --> 00:05:21,677
两个角（y 坐标为 0）与处于平方零状态的密钥相关联来 

84
00:05:21,677 --> 00:05:27,260
绘制，这意味着顶部两个角与密钥相关联是在第一方状态下。

85
00:05:28,440 --> 00:05:31,080
因此，请考虑一下我们的解决方案真正发挥作用意味着什么。

86
00:05:31,900 --> 00:05:36,584
这意味着无论你从哪里开始，如果你被迫沿着边 缘迈出一步，

87
00:05:36,584 --> 00:05:40,097
被迫翻转一枚硬币，你总是可以 保证你最终会

88
00:05:40,097 --> 00:05:42,440
进入这两个区域中的任何一个。

89
00:05:46,680 --> 00:05:49,540
现在的问题是，更大的棋盘会是什么样子？

90
00:05:50,080 --> 00:05:52,704
下一个最简单的情况是三个方块、三 

91
00:05:52,704 --> 00:05:55,020
个硬币和钥匙所在的三种可能性。

92
00:05:55,020 --> 00:05:58,901
这给了我们硬币可能处于的八种可能的状态，

93
00:05:58,901 --> 00:06:04,140
并且玩我 们之前做过的相同游戏，将这些状态解释为坐标，

94
00:06:04,140 --> 00:06:09,380
将我 们带入三维空间，每个状态都位于单位立方体的角上。

95
00:06:10,460 --> 00:06:13,048
像这样的图片的有用之处在于，它为翻转 

96
00:06:13,048 --> 00:06:15,500
一枚硬币的想法赋予了非常生动的含义。

97
00:06:15,500 --> 00:06:19,720
每次抛硬币时，您都是沿着立方体的边缘行走。

98
00:06:24,240 --> 00:06:26,407
现在，对于你和你的狱友来说，制

99
00:06:26,407 --> 00:06:28,720
定解决这个难题的策略意味着什么？

100
00:06:29,880 --> 00:06:34,166
每当囚犯 2 走进那个房间时，他们需要能够将他们所看到 

101
00:06:34,166 --> 00:06:38,300
的状态（基本上是三个位）与三个可能的方块之一联系起来。

102
00:06:39,280 --> 00:06:43,533
我们已经非常形象地思考了，所以让我们将这些方块与颜色相关 

103
00:06:43,533 --> 00:06:47,640
联，也许红色代表方块零，绿色代表方块一，蓝色代表方块二。

104
00:06:48,660 --> 00:06:52,662
在这个概念中，提出一个策略，任何可能的策略，

105
00:06:52,662 --> 00:06:58,120
都与给立 方体的八个角分别着色（红色、绿色或蓝色）是一样的。

106
00:07:01,580 --> 00:07:04,860
举例来说，假设您将整个立方体染成红色。

107
00:07:05,560 --> 00:07:08,500
好吧，我不知道你是否会准确地称其为策略，

108
00:07:08,500 --> 00:07:11,440
 但它与总是猜测密钥位于零方格下相对应。

109
00:07:12,620 --> 00:07:16,247
假设您的策略是将前两个硬币添加在一起，

110
00:07:16,247 --> 00:07:21,020
并将其 用作关键位置的编码，那么立方体将如下所示。

111
00:07:22,480 --> 00:07:25,830
有趣的是我们可以计算总共存在多少种策略，

112
00:07:25,830 --> 00:07:29,515
每个顶点的颜色有 三种选择，总共有八个顶点，

113
00:07:29,515 --> 00:07:31,860
我们得到 3 的 8 次方。

114
00:07:32,520 --> 00:07:36,952
或者，如果您愿意让自己的思绪游离在绘制 64 

115
00:07:36,952 --> 00:07:41,192
维立方体的想法上，您可以有趣地思考原始谜题 

116
00:07:41,192 --> 00:07:45,240
有 64 到 2 到 64 种可能的策略。

117
00:07:45,960 --> 00:07:49,180
当你寻找针时，这就是大海捞针的大小。

118
00:07:50,480 --> 00:07:54,970
3 方形情况的另一种尝试可能看起来像是取 0 倍硬币 0，

119
00:07:54,970 --> 00:07:58,687
加上 1 倍 硬币 1，再加上 2 倍硬币 2，

120
00:07:58,687 --> 00:08:01,320
然后根据需要减少一些 mod 3。

121
00:08:01,880 --> 00:08:04,036
在 Stand Up Maths 上，

122
00:08:04,036 --> 00:08:07,441
Matt 和我都 谈到了在 64 平方的情况下尝试这个版本，

123
00:08:07,441 --> 00:08:09,824
以及为什么它 对于随机排列的硬币效果很好，

124
00:08:09,824 --> 00:08:11,300
但为什么它最终注定会失败。

125
00:08:11,960 --> 00:08:15,470
从我们这里的角度来看，它看起来只是给立方体着色的 

126
00:08:15,470 --> 00:08:18,700
另一种方式，但值得花点时间走过其中的一些角落。

127
00:08:19,460 --> 00:08:22,845
假设您进入房间，所有三枚硬币都反面朝上，

128
00:08:22,845 --> 00:08:26,400
 所以就好像您从 0, 0, 0 角开始。

129
00:08:27,240 --> 00:08:29,898
如果你抛硬币 0，这不会改变总和，

130
00:08:29,898 --> 00:08:32,400
所以它会把你带到另一个红色角落。

131
00:08:32,980 --> 00:08:36,576
如果您抛掷 1 枚硬币，总和就会增加 1，

132
00:08:36,576 --> 00:08:38,460
因此您将到达绿色角落。

133
00:08:40,039 --> 00:08:44,000
抛硬币 2 会让你得到 2，它看起来像一个蓝色的角落。

134
00:08:44,880 --> 00:08:48,135
事实上，你总是可以使用你想要的任何颜色，

135
00:08:48,135 --> 00:08:52,366
这一事实反映了这样 一个事实：如果这是你开始的角落，

136
00:08:52,366 --> 00:08:54,320
那么这个策略将永远获胜。

137
00:08:55,020 --> 00:08:58,140
另一方面，假设您从 0, 1, 0 开始。

138
00:08:58,140 --> 00:09:03,200
在这种情况下，翻转硬币 0 会将您带到另一个绿色角落，

139
00:09:03,200 --> 00:09:06,761
因为它不 会改变总和，但翻转硬币 1 

140
00:09:06,761 --> 00:09:09,760
或硬币 2 会将您带到红色角落。

141
00:09:10,340 --> 00:09:12,480
根本没有办法到达蓝色角落。

142
00:09:14,440 --> 00:09:18,363
基本上，这里发生的情况是，您可以选择通过关闭硬币 

143
00:09:18,363 --> 00:09:22,129
1 来减 1，或者通过打开硬 币 2 来加 2，

144
00:09:22,129 --> 00:09:26,680
如果您正在使用 mod 3，那么这些实际上都是相同的操作。

145
00:09:27,340 --> 00:09:30,480
但这意味着无法将总和更改为 2。

146
00:09:31,040 --> 00:09:34,796
知道你策略的敌方典狱长可以从这个配置开始 ，

147
00:09:34,796 --> 00:09:38,040
将密钥放在方格 2 下，然后就完成了。

148
00:09:39,980 --> 00:09:43,721
但即使不考虑 sum mod 3 或类似的东西，

149
00:09:43,721 --> 00:09:47,930
无论实现细节如何，您 都可以在我们的图片中看到这一点，

150
00:09:47,930 --> 00:09:50,580
表现为一个角有两个相同颜色的邻居。

151
00:09:51,420 --> 00:09:54,481
如果你没有对所有可能的策略有一个鸟瞰图，

152
00:09:54,481 --> 00:09:58,614
当你发现其中任何一个特定的策略不起 作用时，你就会想，

153
00:09:58,614 --> 00:10:02,900
好吧，也许有一个我刚刚没有的狡猾的聪明策略。 还没想到。

154
00:10:03,300 --> 00:10:05,730
但是当我们考虑立方体上的颜色时，

155
00:10:05,730 --> 00:10:08,160
你自然会想到一个有趣的组合问题。

156
00:10:08,760 --> 00:10:12,771
有没有什么方法可以让任何给定顶点的 

157
00:10:12,771 --> 00:10:16,560
三个邻居始终代表红色、绿色和蓝色？

158
00:10:19,240 --> 00:10:23,942
也许从棋盘和硬币的谜题到谈论绘制立方体的角似乎很奇怪，

159
00:10:23,942 --> 00:10:28,820
 甚至令人费解，但这实际上是一个比您想象的更自然的步骤。

160
00:10:29,280 --> 00:10:32,736
我和很多人讨论过这个难题，我喜欢的是，

161
00:10:32,736 --> 00:10:37,102
许多经验丰富的问题解 决者立即跳到无提示的情况下

162
00:10:37,102 --> 00:10:42,560
谈论为立方体的角着色，就好像这 是一种事实上的语言这个谜题。

163
00:10:43,200 --> 00:10:44,040
确实如此。

164
00:10:44,340 --> 00:10:47,546
将二进制字符串视为 高维立方体的顶点，

165
00:10:47,546 --> 00:10:51,260
其中位翻转对应于边缘，这实际上出现了很 多，

166
00:10:51,260 --> 00:10:55,480
特别是在编码理论中，就像我之前提到的纠错内容一样。

167
00:10:56,160 --> 00:10:59,496
更重要的是，你经常听到数学家谈论给事物着

168
00:10:59,496 --> 00:11:03,000
色作为描述将它们划分为不同集合的一种方式。

169
00:11:03,920 --> 00:11:08,816
例如，如果您听说过那个令人捧腹的巨大数字克常数，

170
00:11:08,816 --> 00:11:14,120
那 么出现的问题也可以用为高维立方体分配颜色来表达。

171
00:11:14,840 --> 00:11:18,800
但在这种情况下，颜色被赋予给成对的顶点而不是单个的顶点。

172
00:11:18,800 --> 00:11:21,900
关键是，分析如何为高维立方体着色

173
00:11:21,900 --> 00:11:25,000
是一种比您想象的更可转移的技能。

174
00:11:26,040 --> 00:11:28,560
那么对于我们的问题，你能让每个顶点都

175
00:11:28,560 --> 00:11:31,220
有一个红色、一个绿色和一个蓝色邻居吗？

176
00:11:32,020 --> 00:11:35,975
请记住，这与对关键位置进行编码是一样的，

177
00:11:35,975 --> 00:11:40,920
因此 您始终可以轻松地与您想要的任何位置进行通信。

178
00:11:41,900 --> 00:11:44,980
如果您现在暂停视频并尝试一下，实际上会很有启发。

179
00:11:44,980 --> 00:11:47,540
它就像数独的奇怪的三维变体。

180
00:11:47,540 --> 00:11:51,246
事实上，与数独非常相似 ，从某种意义上说，

181
00:11:51,246 --> 00:11:54,600
您希望某些子集充满所有三种可能的状态。

182
00:11:54,600 --> 00:11:59,096
例如，您可能首先将其中一个角涂成任意颜色，比如说红色，

183
00:11:59,096 --> 00:12:03,260
这样您就 知道它的三个邻居必须是红色、绿色和蓝色。

184
00:12:03,440 --> 00:12:05,040
你怎么做并不重要。

185
00:12:05,560 --> 00:12:10,480
然后也许我们移动到红色邻居并说其他两个邻接需要是绿色和蓝色。

186
00:12:10,900 --> 00:12:12,340
也许我们会这样做。

187
00:12:12,839 --> 00:12:15,400
但至少我在这里画的方式，你被困住了。

188
00:12:15,820 --> 00:12:18,180
您无法为接下来的两个选择正确的颜色。

189
00:12:18,620 --> 00:12:19,280
你能明白为什么吗？

190
00:12:20,220 --> 00:12:23,209
我想分享的是一个可爱的小论点，它不仅解释了为

191
00:12:23,209 --> 00:12:25,383
什么这在三维空间中永远行 不通，

192
00:12:25,383 --> 00:12:29,460
而且还解释了为什么它不能在任何不是 2 的幂的维度上行得通。

193
00:12:29,460 --> 00:12:33,450
这个想法是，我们所看到的属性的对称性最终意

194
00:12:33,450 --> 00:12:37,440
味着必须有相同数量的红色、绿色和蓝色顶点。

195
00:12:37,440 --> 00:12:42,520
但这意味着每种都有三分之八，这是不可能的。

196
00:12:43,440 --> 00:12:45,810
在我继续之前，暂停一下，看看你是

197
00:12:45,810 --> 00:12:48,180
否能想出一种方法来巩固这种直觉。

198
00:12:48,800 --> 00:12:52,400
将模糊的直觉转化为可靠的证据是一个有趣的练习。

199
00:12:56,080 --> 00:12:56,620
好吧，你准备好了吗？

200
00:12:57,440 --> 00:13:01,132
实现此目的的一种方法是想象一个过程，在该过程中，

201
00:13:01,132 --> 00:13:05,440
您遍历每个角并计算有多少个相邻角是特定颜色（例如红色）。

202
00:13:06,620 --> 00:13:10,525
因此，这里的每一步，我们都会查看给定顶点的三个邻居，

203
00:13:10,525 --> 00:13:13,680
计算红色顶点的数量，并将其添加到总计数中。

204
00:13:13,680 --> 00:13:17,910
对于这种特定的颜色，该计数为 12，

205
00:13:17,910 --> 00:13:24,490
但如果我们拥有所需的属性，则每个角都恰好有一个红色邻居，

206
00:13:24,490 --> 00:13:26,840
因此该计数应为 8。

207
00:13:27,580 --> 00:13:31,702
另一方面，每个红色角都被精确地计算三次，

208
00:13:31,702 --> 00:13:35,000
每次它是某人的邻居时就计算一次。

209
00:13:35,840 --> 00:13:38,820
因此，最终的计数必须是红角总数的三倍。

210
00:13:38,820 --> 00:13:41,360
所以，你知道，这很简单。

211
00:13:41,480 --> 00:13:43,780
找到一种颜色，其中三分之八的角是红色的。

212
00:13:44,940 --> 00:13:45,280
这不是很好吗？

213
00:13:45,280 --> 00:13:51,716
计算某个角有红色邻居的次数与计算红色角有某个邻居的次数相同，

214
00:13:51,716 --> 00:13:54,720
这实际上足以让我们产生矛盾。

215
00:13:56,260 --> 00:14:00,220
同样好的一点是，这个论点立即推广到更高的维度。

216
00:14:00,800 --> 00:14:04,040
考虑解决包含 n 个方格的棋盘难题。

217
00:14:04,880 --> 00:14:08,153
同样，这个难题是将硬币的每种排列与

218
00:14:08,153 --> 00:14:11,620
某种状态、密钥的某个可能位置相关联。

219
00:14:11,620 --> 00:14:17,831
我们的目标是让你通过抛硬币就能得到的安排代表所有可能的状态，

220
00:14:17,831 --> 00:14:22,180
以及典狱长可能隐藏该钥匙的所有可能的位置。

221
00:14:23,300 --> 00:14:26,207
即使您无法可视化大多数高维立方体，

222
00:14:26,207 --> 00:14:30,997
我们仍然可以讨论诸如此类立方体的顶点及其邻居之类的内容，

223
00:14:30,997 --> 00:14:34,760
基本上作为描述位串和一位翻转的串的一种方式。

224
00:14:35,720 --> 00:14:38,180
实际上，您只需要了解两个相关事实。

225
00:14:38,380 --> 00:14:42,512
如果您站在这些顶点之一，则有 n 个不同的邻居，

226
00:14:42,512 --> 00:14:45,440
并且顶点总数为 2 的 n 次方，

227
00:14:45,440 --> 00:14:48,540
每个长度为 n 的位串对应一个顶点。

228
00:14:48,540 --> 00:14:53,420
从这里，您可以玩我们在三维空间中玩的相同游戏。

229
00:14:53,420 --> 00:14:57,180
您可以遍历每个角并计算它有多少个红色邻居。

230
00:14:57,840 --> 00:15:02,331
如果可以进行我们想要的着色，则该总和应为 2 的 n 次方，

231
00:15:02,331 --> 00:15:03,380
每个顶点一个。

232
00:15:04,220 --> 00:15:08,369
另一方面，每个红色角点对其每个邻居都计数一次，

233
00:15:08,369 --> 00:15:13,240
因此 这意味着我们最终需要得到红色角点总数的 n 倍。

234
00:15:14,220 --> 00:15:18,610
由于左边是 2 的幂，所以右边也必须是 2 的幂，

235
00:15:18,610 --> 00:15:23,880
只有当 n 本身是 2 的某个较小的幂时，这种情况才会发生。

236
00:15:24,900 --> 00:15:30,600
例如，如果我们处于 4 维或 64 维，就不存在矛盾。

237
00:15:31,060 --> 00:15:35,280
至少可以将顶点平均分配给不同的颜色。

238
00:15:36,000 --> 00:15:39,638
需要明确的是，这并不是说 2 case 

239
00:15:39,638 --> 00:15:43,640
的 幂一定有一个解决方案，只是还不能排除它。

240
00:15:45,579 --> 00:15:47,880
对我来说，这完全是令人愉快的。

241
00:15:48,160 --> 00:15:55,078
只要想象一下给立方体的角上色，然后 数一下有多少个角，

242
00:15:55,078 --> 00:16:01,740
你就可以得出结论 ：如果方格的数量是不是 2 的幂。

243
00:16:02,640 --> 00:16:05,850
因此，尽管如果你去掉几个方块或缩小棋盘的大小，

244
00:16:05,850 --> 00:16:09,620
看起 来可能会更容易，但实际上这会让任务变得毫无希望。

245
00:16:10,119 --> 00:16:14,232
这也意味着这个难题的解决方案（我稍后会向您指 

246
00:16:14,232 --> 00:16:17,272
出）可以被视为一种特别对称的方式，

247
00:16:17,272 --> 00:16:22,280
以一种在大 多数维度中不允许的方式为高维立方体的角着色。

248
00:16:23,180 --> 00:16:25,975
如果你好奇的话，我就是忍不住要明确地展示 

249
00:16:25,975 --> 00:16:27,440
4 维立方体的这一点。

250
00:16:28,200 --> 00:16:33,031
因此，就像你可以将 3D 立方体压缩成二维（也许需要一 

251
00:16:33,031 --> 00:16:37,344
点透视），并获得相同的顶点和边连接方式的图形结构，

252
00:16:37,344 --> 00:16:41,831
我们 也可以做同样的事情将 4 维立方体投影到 3 

253
00:16:41,831 --> 00:16:46,489
维空间中 ，仍然可以获得所有顶点和边如何连接在一起的完

254
00:16:46,489 --> 00:16:47,180
整视图。

255
00:16:47,180 --> 00:16:51,589
如果您想尝试数独的一种奇怪的 4 维表亲，

256
00:16:51,589 --> 00:16:56,420
您现在可 以暂停并尝试找出如何为这些顶点着色，

257
00:16:56,420 --> 00:17:01,670
以便任何一个的 四个邻居中的每一个都代表所有顶点四

258
00:17:01,670 --> 00:17:03,140
种不同的颜色。

259
00:17:05,879 --> 00:17:10,659
使用与解决四方形情况下的棋盘难题基本相同的 计算，

260
00:17:10,659 --> 00:17:14,099
我可以让计算机为我们显式地绘制出来。

261
00:17:21,280 --> 00:17:24,588
此时，当您迫切想知道实际的解决方案是什么时，

262
00:17:24,588 --> 00:17:28,800
我希望 您跳到站立数学，马特和我向您展示它是如何工作的。

263
00:17:28,800 --> 00:17:31,722
如果你们中的任何人还不熟悉站立数学，

264
00:17:31,722 --> 00:17:35,782
它是我最喜欢的频道之一 ，由我最喜欢的人之一运营，

265
00:17:35,782 --> 00:17:38,380
所以一旦您到达那里，请立即订阅。

266
00:17:38,860 --> 00:17:42,000
我保证，他所提供的其他一切都会让您感到非常高兴。

267
00:17:43,000 --> 00:17:47,860
在解释之前，他和我简单介绍了我们实际执行该解决方案的情况。

268
00:17:48,380 --> 00:17:51,835
当我们这样做时，我真的希望您尝试自己思考解决 方案，

269
00:17:51,835 --> 00:17:54,360
并在我们告诉您之前预测我们正在做什么。

270
00:17:55,100 --> 00:17:58,074
如果您对汉明码和纠错的联系感到好奇，

271
00:17:58,074 --> 00:18:02,040
我绝对 愿意为此制作一个视频，请在评论中告诉我。

272
00:18:02,440 --> 00:18:07,170
有人告诉我，就激励谜题而言，并不是每个人都像我一样对绘制 

273
00:18:07,170 --> 00:18:09,780
64 维立方体的对称方式感兴趣。

274
00:18:09,980 --> 00:18:11,320
但数据传输可靠吗？

275
00:18:11,760 --> 00:18:13,380
拜托， 我想我们都同意这很性感。

276
00:18:13,380 --> 00:18:13,900
拜托，我想我们都同意这很性感。

