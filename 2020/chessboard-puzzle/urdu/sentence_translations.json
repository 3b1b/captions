[
 {
  "input": "You walk alone into a room and find a chessboard.",
  "model": "nmt",
  "translatedText": "آپ اکیلے ایک کمرے میں چلتے ہیں اور ایک بساط تلاش کرتے ہیں.",
  "time_range": [
   0.0,
   7.2
  ]
 },
 {
  "input": "Each of the 64 squares has a coin sitting on top of it.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   7.2,
   11.2
  ]
 },
 {
  "input": "Taking a step back, this is one of those classic prisoner puzzles where a strangely math-obsessed warden offers you and a fellow inmate a chance for freedom, but only if the two of you solve some elaborate scheme they've laid out.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   11.2,
   23.98
  ]
 },
 {
  "input": "In this case, what they've done is carefully turned over each of the coins to be heads or tails according to whatever pattern they want it to be, and then they show you a key.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   23.98,
   32.92
  ]
 },
 {
  "input": "They put that key inside one of the chessboard squares, each square is a secret compartment or something like that, so you know where the key is.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   32.92,
   41.06
  ]
 },
 {
  "input": "The goal is to get prisoner number 2 to also know where the key is, but the only thing that the warden allows you to do before you leave the room is to turn over one and only one of these coins.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   41.06,
   53.6
  ]
 },
 {
  "input": "At that point, you walk out, your fellow prisoner walks in, and with no information other than the set of heads and tails they're looking at, which you've only barely tweaked, they're supposed to deduce where the key is hidden, potentially winning freedom for the both of you.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   53.6,
   69.4
  ]
 },
 {
  "input": "As is typical with these puzzles, the two of you can strategize ahead of time if you want, but you won't know what the specific layout of heads and tails is.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   69.4,
   76.82
  ]
 },
 {
  "input": "And moreover, the warden can listen in on your strategy and do their absolute best to thwart it with some adversarial arrangement of the coins and the key.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   76.82,
   85.12
  ]
 },
 {
  "input": "So, I first heard about this puzzle over dinner conversation at a wedding, and it totally sucked me in.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   85.12,
   92.4
  ]
 },
 {
  "input": "I remember the drive home was maybe 3 hours, and I think my mind was glued to the topic of flipping coins and encoding state that whole time.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   92.4,
   101.16
  ]
 },
 {
  "input": "But the puzzle sticks with you even after that.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   101.16,
   103.48
  ]
 },
 {
  "input": "After I solved it, I fell into these two surprisingly interesting rabbit holes.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   103.48,
   107.52
  ]
 },
 {
  "input": "One was to prove that the challenge is impossible if you vary the setup a little bit, maybe making it a 6x6 chessboard, or removing one of the squares.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   107.52,
   117.24
  ]
 },
 {
  "input": "And to give you a little sense for where that rabbit hole leads, this video is going to end with an especially pleasing way to paint the corners of a 4-dimensional cube.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   117.24,
   125.86
  ]
 },
 {
  "input": "The other rabbit hole was to work out how closely you can connect the solution of this puzzle with error correction, which is a super important topic in computer science and information theory.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   125.86,
   136.76
  ]
 },
 {
  "input": "The idea is that when computers send and store data, the messiness of the real world inevitably flips a bit now and then, and that can completely change how the data is read.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   136.76,
   146.56
  ]
 },
 {
  "input": "So error correcting codes are a way to add a shockingly small amount of information to a message that makes it possible for the receiver to identify both when there is an error, and more impressively, precisely how to fix it.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   146.56,
   159.24
  ]
 },
 {
  "input": "It turns out that the intuition for solving this puzzle is essentially the same as the intuition behind these things called Hamming codes, which are one of the earliest examples of highly efficient error correction.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   159.24,
   170.52
  ]
 },
 {
  "input": "Which is all to say, time spent mulling over this problem is not as useless as you might think it is.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   170.52,
   175.4
  ]
 },
 {
  "input": "Now you and I aren't actually going to go through the solution here.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   175.4,
   178.72
  ]
 },
 {
  "input": "Instead, I filmed a video all about that on stand-up maths with Matt Parker, who I'm sure many of you recognize from his combined YouTube and stand-up and book fame.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   178.72,
   187.78
  ]
 },
 {
  "input": "We each talk through our thought process in solving it, and it's good fun, because there are multiple ways of looking at it.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   187.78,
   193.24
  ]
 },
 {
  "input": "Instead, what I want to do with you here is take a more global view of every possible strategy for this puzzle, and bring you with me down that first rabbit hole of proving why certain variations necessarily leave room for the warden to thwart you, no matter how clever you are.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   193.24,
   209.16
  ]
 },
 {
  "input": "The proof itself is one of those satisfying moments where you shift perspective and it reveals the solution, and the whole context leading up to it is a nice chance to practice reasoning about higher dimensional objects as a way to draw conclusions about information and data.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   209.16,
   223.52
  ]
 },
 {
  "input": "Plus, it does more to help you appreciate the solution to the original puzzle when you can see how it is, in a sense, almost impossible.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   223.52,
   238.8
  ]
 },
 {
  "input": "Where to start?",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   238.8,
   239.8
  ]
 },
 {
  "input": "What we want is some kind of visualization for what it even means to solve this puzzle.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   239.8,
   244.84
  ]
 },
 {
  "input": "And to build up to the general case, let's knock things down to the simplest case we can that still has any kind of meaning to it.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   244.84,
   251.3
  ]
 },
 {
  "input": "Two squares, two coins, and two possibilities for where the key is.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   251.3,
   257.26
  ]
 },
 {
  "input": "One way you could solve this is to simply let the second coin communicate where the key is.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   257.26,
   261.72
  ]
 },
 {
  "input": "If it's tails, it means the key is in the left square, if it's heads, it means the key is in the right square.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   261.72,
   267.24
  ]
 },
 {
  "input": "Not a big deal, right?",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   267.24,
   268.24
  ]
 },
 {
  "input": "It's one bit of information, so when you need to change that coin you can flip it, but if you don't need to change it, you can just flip the other coin.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   268.24,
   276.46
  ]
 },
 {
  "input": "First things first, let's stop thinking about these as heads and tails and start thinking of them as ones and zeros.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   276.46,
   281.5
  ]
 },
 {
  "input": "That's much easier to do math with.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   281.5,
   284.18
  ]
 },
 {
  "input": "Then you can think of these pairs of coins as a set of coordinates, where each of the four possible states that the board can be in sit at the corners of a unit square, like this.",
  "model": "nmt",
  "translatedText": "64 چوکوں میں سے ہر ایک کے اوپر ایک سکہ بیٹھا ہے۔ ایک قدم پیچھے ہٹتے ہوئے، یہ ان کلاسک قیدیوں کی پہیلیوں میں سے ایک ہے جہاں ایک عجیب و غریب ریاضی کا جنون والا وارڈن آپ کو اور ایک ساتھی قیدی کو آزادی کا موقع فراہم کرتا ہے، لیکن صرف اس صورت میں جب آپ دونوں کوئی وسیع اسکیم حل کریں جو انہوں نے وضع کی ہے۔ اس صورت میں، انہوں نے جو کچھ کیا ہے اسے احتیاط سے ہر ایک سکے کو سر یا دم کے طور پر تبدیل کر دیا جاتا ہے جو وہ چاہتے ہیں کہ اس کے پیٹرن کے مطابق ہو، اور پھر وہ آپ کو ایک چابی دکھاتے ہیں۔ انہوں نے اس چابی کو بساط کے چوکوں میں سے ایک کے اندر رکھ دیا، ہر مربع ایک خفیہ ٹوکری یا اس طرح کی کوئی چیز ہے، تاکہ آپ کو معلوم ہو کہ چابی کہاں ہے۔ مقصد یہ ہے کہ قیدی نمبر 2 کو یہ بھی معلوم ہو سکے کہ چابی کہاں ہے، لیکن صرف ایک چیز جو وارڈن آپ کو کمرے سے باہر جانے سے پہلے کرنے کی اجازت دیتا ہے وہ ہے ان سکوں میں سے صرف ایک کو پلٹنا۔ اس وقت، آپ باہر نکلتے ہیں، آپ کا ساتھی قیدی اندر آتا ہے، اور اس کے سروں اور دموں کے سیٹ کے علاوہ کوئی اور معلومات نہیں ہوتی جو وہ دیکھ رہے ہوتے ہیں، جسے آپ نے بمشکل ہی ٹوئیک کیا ہو، وہ اندازہ لگا لیں گے کہ کلید کہاں ہے۔ آپ دونوں کے لیے پوشیدہ، ممکنہ طور پر جیتنے والی آزادی۔ جیسا کہ ان پہیلیاں کے ساتھ عام ہے، اگر آپ چاہیں تو آپ دونوں وقت سے پہلے حکمت عملی بنا سکتے ہیں، لیکن آپ کو معلوم نہیں ہوگا کہ سروں اور دموں کی مخصوص ترتیب کیا ہے۔ اور مزید یہ کہ وارڈن آپ کی حکمت عملی کو سن سکتا ہے اور سکوں اور کلید کے کچھ مخالفانہ انتظامات کے ساتھ اسے ناکام بنانے کی پوری کوشش کر سکتا ہے۔ لہذا، میں نے پہلی بار اس پہیلی کے بارے میں ایک شادی میں رات کے کھانے کی گفتگو کے بارے میں سنا، اور اس نے مجھے پوری طرح سے چوس لیا۔ مجھے یاد ہے کہ ڈرائیو ہوم شاید 3 گھنٹے کا تھا، اور مجھے لگتا ہے کہ میرا دماغ اس پورے وقت سکے پلٹنے اور انکوڈنگ کی حالت کے موضوع پر چپکا ہوا تھا۔ لیکن اس کے بعد بھی پہیلی آپ کے ساتھ چپکی ہوئی ہے۔ میں نے اسے حل کرنے کے بعد، میں ان دو حیرت انگیز طور پر دلچسپ خرگوش کے سوراخوں میں گر گیا۔ ایک یہ ثابت کرنا تھا کہ چیلنج ناممکن ہے اگر آپ سیٹ اپ میں تھوڑا سا فرق کرتے ہیں، ہو سکتا ہے اسے 6x6 کی بساط بنائیں، یا کسی ایک چوک کو ہٹا دیں۔ اور آپ کو تھوڑا سا احساس دلانے کے لیے کہ خرگوش کا سوراخ کہاں جاتا ہے، یہ ویڈیو 4 جہتی کیوب کے کونوں کو پینٹ کرنے کے خاص طور پر خوشگوار طریقے کے ساتھ ختم ہونے والی ہے۔ دوسرا خرگوش سوراخ یہ بتانا تھا کہ آپ اس پہیلی کے حل کو غلطی کی اصلاح کے ساتھ کس قدر قریب سے جوڑ سکتے ہیں، جو کمپیوٹر سائنس اور انفارمیشن تھیوری میں ایک انتہائی اہم موضوع ہے۔ خیال یہ ہے کہ جب کمپیوٹر ڈیٹا بھیجتے اور اسٹور کرتے ہیں، تو حقیقی دنیا کی گندگی ناگزیر طور پر تھوڑی دیر اور پھر پلٹ جاتی ہے، اور یہ ڈیٹا کو پڑھنے کے طریقے کو مکمل طور پر تبدیل کر سکتا ہے۔ لہذا غلطی کو درست کرنے والے کوڈز ایک پیغام میں حیران کن حد تک چھوٹی سی معلومات شامل کرنے کا ایک طریقہ ہے جو وصول کنندہ کے لیے یہ ممکن بناتا ہے کہ غلطی ہونے پر دونوں کی شناخت کر سکے، اور زیادہ متاثر کن طور پر، بالکل درست طریقے سے اسے کیسے ٹھیک کیا جائے۔ اس سے پتہ چلتا ہے کہ اس پہیلی کو حل کرنے کا وجدان بنیادی طور پر وہی ہے جو ان چیزوں کے پیچھے ہوتا ہے جسے ہیمنگ کوڈز کہتے ہیں، جو کہ انتہائی موثر غلطی کی اصلاح کی ابتدائی مثالوں میں سے ایک ہیں۔ صرف اتنا کہنا ہے کہ اس مسئلے پر غور کرنے میں صرف کیا گیا وقت اتنا بیکار نہیں جتنا آپ سوچ سکتے ہیں۔ اب آپ اور میں اصل میں یہاں کے حل کے ذریعے نہیں جا رہے ہیں۔ اس کے بجائے، میں نے Matt Parker کے ساتھ اسٹینڈ اپ میتھس پر اس کے بارے میں ایک ویڈیو بنائی، جسے مجھے یقین ہے کہ آپ میں سے بہت سے لوگ اس کے مشترکہ YouTube اور اسٹینڈ اپ اور کتاب کی شہرت سے پہچانتے ہیں۔ ہم ہر ایک اسے حل کرنے میں اپنے سوچنے کے عمل کے ذریعے بات کرتے ہیں، اور یہ اچھا مزہ ہے، کیونکہ اسے دیکھنے کے متعدد طریقے ہیں۔ اس کے بجائے، میں یہاں آپ کے ساتھ جو کرنا چاہتا ہوں وہ یہ ہے کہ اس پہیلی کے لیے ہر ممکنہ حکمت عملی کا ایک زیادہ عالمی نقطہ نظر لیں، اور آپ کو اپنے ساتھ یہ ثابت کرنے کے لیے خرگوش کے پہلے سوراخ کو نیچے لاؤں گا کہ کیوں کچھ تغیرات وارڈن کے لیے ضروری طور پر آپ کو ناکام کرنے کے لیے جگہ چھوڑ دیتے ہیں، نہیں اس سے کوئی فرق نہیں پڑتا ہے کہ آپ کتنے ہی ہوشیار ہیں۔ ثبوت خود ان اطمینان بخش لمحات میں سے ایک ہے جہاں آپ نقطہ نظر کو تبدیل کرتے ہیں اور یہ حل کو ظاہر کرتا ہے، اور اس کی طرف لے جانے والا پورا سیاق و سباق معلومات اور ڈیٹا کے بارے میں نتیجہ اخذ کرنے کے طریقے کے طور پر اعلی جہتی اشیاء کے بارے میں استدلال کی مشق کرنے کا ایک اچھا موقع ہے۔ اس کے علاوہ، یہ آپ کو اصل پہیلی کے حل کی تعریف کرنے میں مدد کرنے کے لیے بہت کچھ کرتا ہے جب آپ دیکھ سکتے ہیں کہ یہ کس طرح، ایک لحاظ سے، تقریباً ناممکن ہے۔ کہاں سے شروع کریں؟ ہم کیا چاہتے ہیں کہ اس پہیلی کو حل کرنے کا کیا مطلب ہے اس کے لئے کچھ قسم کا تصور۔ اور عام کیس کو بنانے کے لیے، آئیے چیزوں کو سب سے آسان کیس کی طرف کھٹکتے ہیں جو ہم کر سکتے ہیں کہ اب بھی اس کا کوئی مطلب ہے۔ دو چوکور، دو سکے، اور کلید کہاں ہے اس کے لیے دو امکانات۔ اس کو حل کرنے کا ایک طریقہ یہ ہے کہ دوسرے سکے کو صرف یہ بتانے دیں کہ کلید کہاں ہے۔ اگر اس کی دم ہے، تو اس کا مطلب ہے کہ کلید بائیں مربع میں ہے، اگر یہ سر ہے، تو اس کا مطلب ہے کہ کلید دائیں مربع میں ہے۔ کوئی بڑی بات نہیں، ٹھیک ہے؟ یہ معلومات کا ایک حصہ ہے، لہذا جب آپ کو اس سکے کو تبدیل کرنے کی ضرورت ہو تو آپ اسے پلٹ سکتے ہیں، لیکن اگر آپ کو اسے تبدیل کرنے کی ضرورت نہیں ہے، تو آپ دوسرے سکے کو پلٹ سکتے ہیں۔ سب سے پہلے چیزیں، آئیے ان کے بارے میں سر اور دم کے طور پر سوچنا چھوڑ دیں اور انہیں ایک اور صفر کے طور پر سوچنا شروع کریں۔ اس کے ساتھ ریاضی کرنا بہت آسان ہے۔ پھر آپ سکے کے ان جوڑوں کو کوآرڈینیٹ کے ایک سیٹ کے طور پر سوچ سکتے ہیں، جہاں چار میں سے ہر ایک ممکنہ طور پر یہ بتاتا ہے کہ بورڈ اس طرح یونٹ مربع کے کونوں میں بیٹھ سکتا ہے۔ یہ ایک احمقانہ چیز کی طرح محسوس ہو سکتا ہے جب ہم پہلے سے ہی جانتے ہوں کہ اس کیس کو کیسے حل کرنا ہے، لیکن بڑے کیسز کو ایک قسم کی جیومیٹری میں تبدیل کرنے کے لیے یہ ایک اچھا وارم اپ ہے۔ نوٹ کریں، سکوں میں سے ایک کو پلٹنا آپ کو مربع کے ایک کنارے پر لے جاتا ہے، کیونکہ یہ صرف ایک کوآرڈینیٹ کو تبدیل کر رہا ہے۔ اس دوسرے سکے کو کلیدی مقام کو انکوڈ کرنے دینے کی ہماری حکمت عملی نیچے کے دو کونوں کو جوڑ کر تیار کی جا سکتی ہے، جہاں y- کوآرڈینیٹ 0 ہے، کلید مربع صفر حالت کے نیچے ہے، جس کا مطلب ہے کہ وہ اوپر والے دو کونے کلید کے ساتھ منسلک ہیں۔ مربع ایک ریاست کے نیچے۔ لہذا اس کے بارے میں سوچیں کہ ہمارے حل کے حقیقت میں کام کرنے کا کیا مطلب ہے۔ اس کا مطلب یہ ہے کہ اس سے کوئی فرق نہیں پڑتا ہے کہ آپ کہاں سے شروع کرتے ہیں، اگر آپ کو ایک کنارے کے ساتھ قدم اٹھانے پر مجبور کیا جاتا ہے، سکوں میں سے ایک کو پلٹانے پر مجبور کیا جاتا ہے، تو آپ ہمیشہ اس بات کی ضمانت دے سکتے ہیں کہ آپ ان دونوں خطوں میں سے جس میں بھی آپ چاہتے ہیں ختم ہوجائیں گے۔ اب سوال یہ ہے کہ شطرنج کی بڑی بساط کیسا لگتا ہے؟ اگلا آسان ترین کیس تین مربع، تین سکے، اور تین امکانات ہوں گے جہاں کلید ہے۔ اس سے ہمیں آٹھ ممکنہ حالتیں ملتی ہیں جن میں سکہ ہو سکتا ہے، اور وہی کھیل کھیلنا جو ہم نے پہلے کیا تھا، ان ریاستوں کو کوآرڈینیٹس سے تعبیر کرتے ہوئے، ہمیں تین جہتی خلا میں لے آتا ہے، جس میں ہر ریاست ایک یونٹ کیوب کے کونے میں بیٹھی ہوتی ہے۔ اس طرح کی تصویر میں افادیت یہ ہے کہ یہ سکوں میں سے کسی ایک کو الٹنے کے خیال کو بہت واضح معنی دیتا ہے۔ جب بھی آپ سکے کو پلٹتے ہیں، آپ مکعب کے کنارے پر چل رہے ہوتے ہیں۔ اب، آپ اور آپ کے ساتھی قیدی کے لیے اس پہیلی کے لیے حکمت عملی کا کیا مطلب ہوگا؟ جب بھی قیدی 2 اس کمرے میں داخل ہوتا ہے، تو انہیں اس ریاست کو منسلک کرنے کے قابل ہونے کی ضرورت ہوتی ہے جسے وہ دیکھ رہے ہیں، بنیادی طور پر تین بٹس، تین ممکنہ چوکوں میں سے ایک کے ساتھ۔ ہم پہلے ہی بہت بصری طور پر سوچ رہے ہیں، تو آئیے ان چوکوں کو رنگوں کے ساتھ جوڑتے ہیں، شاید مربع صفر کے لیے سرخ، مربع ایک کے لیے سبز اور مربع دو کے لیے نیلا ہو۔ اس تصور میں، ایک حکمت عملی کے ساتھ آنا، کوئی بھی ممکنہ حکمت عملی، مکعب کے آٹھوں کونوں میں سے ہر ایک کو سرخ، سبز یا نیلے رنگ میں رنگنے کے مترادف ہے۔ تو مثال کے طور پر، ہم کہتے ہیں کہ آپ نے پورے مکعب کو سرخ رنگ دیا ہے۔ ٹھیک ہے، میں نہیں جانتا کہ کیا آپ اسے ایک حکمت عملی کہتے ہیں، لیکن یہ ہمیشہ یہ اندازہ لگانے کے ساتھ مطابقت رکھتا ہے کہ کلید مربع صفر کے نیچے ہے۔ اس کے بجائے آپ کی حکمت عملی یہ تھی کہ پہلے دو سکے ایک ساتھ جوڑیں، اور اسے کلیدی مقام کے لیے ایک انکوڈنگ کے طور پر استعمال کریں، ٹھیک ہے تو کیوب اس طرح نظر آئے گا۔ مزے کی بات یہ ہے کہ ہم شمار کر سکتے ہیں کہ کل کتنی حکمت عملی موجود ہے، ہر ایک چوٹی کے رنگ اور آٹھ کل عمودی کے لیے تین انتخاب کے ساتھ، ہمیں 3 کی طاقت 8 ملتی ہے۔ یا اگر آپ اپنے دماغ کو 64 جہتی مکعب پینٹ کرنے کے خیال سے بھٹکنے میں راحت محسوس کرتے ہیں، تو آپ اس معنی کے بارے میں سوچنے میں مزہ لے سکتے ہیں جس میں اصل پہیلی کے لیے 64 سے 2 سے 64 تک ممکنہ حکمت عملییں ہیں۔ جب آپ سوئی تلاش کر رہے ہوں تو یہ گھاس کے ڈھیر کا سائز ہے۔ 3 مربع کیس کے لیے ایک اور کوشش 0 گنا سکہ 0، جمع 1 گنا سکے 1، جمع 2 گنا سکے 2 لینے، اور پھر اگر آپ کو ضرورت ہو تو کچھ موڈ 3 کو کم کر دیں۔ اسٹینڈ اپ میتھس پر، میٹ اور میں دونوں 64 اسکوائر کیس کے لیے اس کا ایک ورژن آزمانے کے بارے میں بات کرتے ہیں، اور یہ سککوں کے بے ترتیب ترتیب کے لیے اچھی طرح سے کیوں کام کرتا ہے، لیکن آخر یہ کیوں برباد ہے۔ یہاں پر ہمارے نقطہ نظر سے، یہ مکعب کو رنگنے کا ایک اور طریقہ لگتا ہے، لیکن ان میں سے کچھ کونوں سے گزرنے کے لیے ایک لمحہ لگانے کے قابل ہے۔ فرض کریں کہ آپ کمرے میں داخل ہو جائیں اور تینوں سکے ٹیل پر سیٹ ہو جائیں، تو ایسا لگتا ہے کہ آپ کونے 0، 0، 0 سے شروع ہو رہے ہیں۔ اگر آپ سکے 0 کو پلٹائیں گے، تو اس سے رقم نہیں بدلے گی، لہذا یہ آپ کو دوسرے سرخ کونے پر لے جائے گا۔ اگر آپ سکے 1 کو پلٹتے ہیں، تو یہ رقم کو 1 تک بڑھاتا ہے، لہذا یہ آپ کو ایک سبز کونے میں لے جاتا ہے۔ اور سکے 2 کو پلٹنا آپ کو 2 تک لے جاتا ہے، جو نیلے کونے کی طرح لگتا ہے۔ حقیقت یہ ہے کہ آپ کو ہمیشہ جس رنگ کی آپ چاہیں رسائی حاصل ہے اس حقیقت کا عکاس ہے کہ یہ حکمت عملی ہمیشہ جیت جائے گی اگر یہ وہ کونا ہے جس سے آپ شروع کر رہے ہیں۔ دوسری طرف، فرض کریں کہ آپ نے 0، 1، 0 سے آغاز کیا۔ اس صورت میں، سکے 0 کو پلٹنا آپ کو ایک اور سبز کونے پر لے جاتا ہے، کیونکہ یہ رقم کو تبدیل نہیں کرتا ہے، لیکن سکے 1 یا سکے 2 کو پلٹانے سے آپ کو سرخ کونے میں لے جاتا ہے۔ نیلے کونے تک جانے کا کوئی راستہ نہیں ہے۔ بنیادی طور پر، یہاں جو کچھ ہو رہا ہے وہ یہ ہے کہ آپ کے پاس سکے 1 کو آف کر کے 1 کو گھٹانے کے لیے، یا سکے 2 کو آن کر کے 2 کو شامل کرنے کے اختیارات ہیں، اور اگر آپ موڈ 3 پر کام کر رہے ہیں، تو یہ دونوں دراصل ایک ہی آپریشن ہیں۔ لیکن اس کا مطلب ہے کہ رقم کو 2 میں تبدیل کرنے کا کوئی طریقہ نہیں ہے۔ ایک مخالف وارڈن جو آپ کی حکمت عملی کو جانتا ہے وہ اس ترتیب کے ساتھ شروع کر سکتا ہے، کلید کو مربع 2 کے نیچے رکھ سکتا ہے، اور اسے مکمل کہہ سکتا ہے۔ لیکن سمس موڈ 3 یا اس جیسی کسی بھی چیز کے بارے میں سوچے بغیر بھی، نفاذ کی تفصیلات جو بھی ہوں، آپ اسے ہماری تصویر میں دیکھ سکتے ہیں، جو ایک کونے کے طور پر ظاہر ہوتا ہے جس میں ایک ہی رنگ کے دو پڑوسی ہیں۔ اگر آپ کے پاس تمام ممکنہ حکمت عملیوں کے بارے میں پرندوں کا نظریہ نہیں ہے، جب آپ کو معلوم ہوتا ہے کہ ان میں سے کوئی بھی خاص کام نہیں کرتا ہے، تو آپ حیران رہ جائیں گے، ٹھیک ہے، شاید کوئی ڈرپوک چالاک حکمت عملی ہے جو میرے پاس ہے' ابھی تک نہیں سوچا لیکن جب ہم کیوب پر رنگوں کے بارے میں سوچ رہے ہوتے ہیں، تو آپ قدرتی طور پر ایک دلچسپ امتزاج سوال کی طرف لے جاتے ہیں۔ کیا کوئی ایسا طریقہ ہے جس سے آپ اسے پینٹ کر سکتے ہیں تاکہ کسی بھی عمودی حصے کے تین پڑوسی ہمیشہ سرخ، سبز اور نیلے رنگ کی نمائندگی کریں؟ ہو سکتا ہے کہ بساط اور سکوں والی پہیلی سے لے کر مکعب کے کونوں کو پینٹ کرنے کے بارے میں بات کرنا عجیب، حتیٰ کہ الجھا ہوا معلوم ہو، لیکن یہ درحقیقت آپ کی توقع سے کہیں زیادہ قدرتی قدم ہے۔ میں نے اس پہیلی کے بارے میں بہت سے لوگوں سے بات کی ہے، اور جو مجھے پسند ہے وہ یہ ہے کہ بہت سے تجربہ کار مسئلہ حل کرنے والے فوری طور پر چھلانگ لگا کر، بغیر کسی اشارے کے، مکعب کے کونوں کو رنگنے کے بارے میں بات کرنے کے لیے، گویا یہ ایک طرح کی ڈی فیکٹو زبان ہے۔ یہ پہیلی.",
  "time_range": [
   284.18,
   294.78
  ]
 },
 {
  "input": "This might feel like a silly thing to do when we already know how to solve this case, but it's a good warmup for turning the larger cases into a kind of geometry.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   294.78,
   302.02
  ]
 },
 {
  "input": "Notice, flipping one of the coins moves you along an edge of the square, since it's only changing one of the coordinates.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   302.02,
   310.18
  ]
 },
 {
  "input": "Our strategy of letting that second coin encode the key location could be drawn by associating the bottom two corners, where the y-coordinate is 0, with the key is under square zero state, which means those top two corners are associated with the key is under square one state.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   310.18,
   328.38
  ]
 },
 {
  "input": "So think about what it means for our solution to actually work.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   328.38,
   331.34
  ]
 },
 {
  "input": "It means that no matter where you start, if you're forced to take a step along an edge, forced to flip one of the coins, you can always guarantee that you end up in whichever of these two regions you want to.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   331.34,
   347.02
  ]
 },
 {
  "input": "Now the question is, what does it look like for a bigger chess board?",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   347.02,
   350.44
  ]
 },
 {
  "input": "The next simplest case would be three squares, three coins, and three possibilities for where the key is.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   350.44,
   356.86
  ]
 },
 {
  "input": "This gives us eight possible states that the coin can be in, and playing the same game that we did before, interpreting these states as coordinates, brings us up into three-dimensional space, with each state sitting at the corner of a unit cube.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   356.86,
   370.46
  ]
 },
 {
  "input": "The usefulness in a picture like this is that it gives a very vivid meaning to the idea of turning over one of the coins.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   370.46,
   376.24
  ]
 },
 {
  "input": "Every time you flip a coin, you're walking along the edge of a cube.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   376.24,
   381.02
  ]
 },
 {
  "input": "Now, what would it mean for you and your fellow inmate to have a strategy for this puzzle?",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   381.02,
   390.08
  ]
 },
 {
  "input": "Whenever prisoner 2 walks into that room, they need to be able to associate the state that they're looking at, three bits basically, with one of three possible squares.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   390.08,
   399.36
  ]
 },
 {
  "input": "We're already thinking very visually, so let's associate those squares with colors, maybe red for square zero, green for square one, and blue for square two.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   399.36,
   408.72
  ]
 },
 {
  "input": "In this conception, coming up with a strategy, any possible strategy, is the same thing as coloring each of the eight corners of the cube, either red, green, or blue.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   408.72,
   421.98
  ]
 },
 {
  "input": "So for example, let's say you colored the whole cube red.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   421.98,
   424.78
  ]
 },
 {
  "input": "Well, I don't know if you'd call this a strategy exactly, but it would correspond with always guessing that the key is under square zero.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   424.78,
   433.04
  ]
 },
 {
  "input": "Let's say instead your strategy was to add the first two coins together, and use that as an encoding for the key location, well then the cube would look like this.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   433.04,
   442.66
  ]
 },
 {
  "input": "What's kind of fun is we can count how many total strategies exist, with three choices for the color of each vertex and eight total vertices, we get 3 to the power 8.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   442.66,
   452.82
  ]
 },
 {
  "input": "Or if you're comfortable letting your mind stray to the thought of painting a 64-dimensional cube, you can have fun thinking about the sense in which there are 64 to the 2 to the 64 total possible strategies for the original puzzle.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   452.82,
   466.1
  ]
 },
 {
  "input": "This is the size of the haystack when you're looking for the needle.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   466.1,
   470.74
  ]
 },
 {
  "input": "Another attempt for the 3 square case might look like taking 0 times coin 0, plus 1 times coin 1, plus 2 times coin 2, and then reduce that some mod 3 if you need to.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   470.74,
   482.02
  ]
 },
 {
  "input": "Over on Stand Up Maths, Matt and I both talk about trying a version of this for the 64 square case, and why it works decently well for a random arrangement of coins, but why it's ultimately doomed.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   482.02,
   492.1
  ]
 },
 {
  "input": "From our view over here, it just looks like one more way to color the cube, but it's worth taking a moment to walk through some of those corners.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   492.1,
   499.66
  ]
 },
 {
  "input": "Let's say you get into the room and all three coins are set to tails, so it's like you're starting at the corner 0, 0, 0.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   499.66,
   507.42
  ]
 },
 {
  "input": "If you were to flip coin 0, that doesn't change the sum, so it takes you to another red corner.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   507.42,
   513.18
  ]
 },
 {
  "input": "If you flipped coin 1, it increases the sum by 1, so it takes you to a green corner.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   513.18,
   520.1
  ]
 },
 {
  "input": "And flipping coin 2 takes you up to 2, which looks like a blue corner.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   520.1,
   524.86
  ]
 },
 {
  "input": "The fact that you always have access to whichever color you want is a reflection of the fact that this strategy will always win if this is the corner you're starting on.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   524.86,
   535.06
  ]
 },
 {
  "input": "On the other hand, let's say you started at 0, 1, 0.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   535.06,
   538.46
  ]
 },
 {
  "input": "In that case, flipping coin 0 takes you to another green corner, since it doesn't change the sum, but flipping either coin 1 or coin 2 take you to a red corner.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   538.46,
   550.38
  ]
 },
 {
  "input": "There's simply no way to get to a blue corner.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   550.38,
   554.38
  ]
 },
 {
  "input": "Basically, what's happening here is that you have the options to subtract 1 by turning off coin 1, or to add 2 by turning on coin 2, and if you're working mod 3, those are both actually the same operation.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   554.38,
   567.66
  ]
 },
 {
  "input": "But that means that there's no way to change the sum to be 2.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   567.66,
   571.02
  ]
 },
 {
  "input": "An adversarial warden who knows your strategy could start with this configuration, put the key under square 2, and call it done.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   571.02,
   580.14
  ]
 },
 {
  "input": "But even without thinking about sums mod 3 or anything like that, whatever the implementation details, you can see this in our picture, manifested as a corner that has two neighbors of the same color.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   580.14,
   591.5
  ]
 },
 {
  "input": "If you don't have a bird's eye view of all possible strategies, when you find that any specific one of them just doesn't work, you're left to wonder, okay, maybe there's a sneaky clever strategy that I just haven't thought of yet.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   591.5,
   603.34
  ]
 },
 {
  "input": "But when we're thinking about colors on the cube, you're naturally led to an interesting combinatorial question.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   603.34,
   608.78
  ]
 },
 {
  "input": "Is there some way that you can paint this so that the three neighbors of any given vertex always represent red, green, and blue?",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   608.78,
   619.34
  ]
 },
 {
  "input": "Maybe it seems bizarre, even convoluted, to go from a puzzle with chessboards and coins to talking about painting corners of a cube, but this is actually a much more natural step than you might expect.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   619.34,
   629.1
  ]
 },
 {
  "input": "I've talked with a lot of people about this puzzle, and what I love is that many of the experienced problem solvers immediately jump, unprompted, to talking about coloring the corners of a cube, as if it's a kind of de facto language for this puzzle.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   629.1,
   642.750693069307
  ]
 },
 {
  "input": "And it really is.",
  "model": "nmt",
  "translatedText": "اور یہ واقعی ہے.",
  "time_range": [
   642.750693069307,
   643.7740594059406
  ]
 },
 {
  "input": "Thinking about binary strings as vertices of a high-dimensional cube with bit flips corresponding to edges, that actually comes up a lot, especially in coding theory, like the error correction stuff I referenced earlier.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   643.7740594059406,
   655.98
  ]
 },
 {
  "input": "What's more, you often hear mathematicians talk about coloring things as a way to describe partitioning them into distinct sets.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   655.98,
   663.82
  ]
 },
 {
  "input": "If you've ever heard of that hilariously enormous number grams constant, for example, the problem where that came up was also phrased in terms of assigning colors to a high-dimensional cube.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   663.82,
   674.54
  ]
 },
 {
  "input": "Though in that case colors were given to pairs of vertices instead of individual ones.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   674.54,
   679.02
  ]
 },
 {
  "input": "The point is, analyzing how to color a high-dimensional cube is more of a transferable skill than you might expect.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   679.02,
   685.82
  ]
 },
 {
  "input": "So to our question, can you make it so that every vertex has a red, a green, and a blue neighbor?",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   685.82,
   691.82
  ]
 },
 {
  "input": "Remember, this is the same thing as having an encoding for key locations, so that you're always one flip away from communicating whichever location you want to.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   691.82,
   701.66
  ]
 },
 {
  "input": "It would actually be enlightening if you paused the video and tried this now.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   701.66,
   705.1
  ]
 },
 {
  "input": "It's like a weird three-dimensional variant of a sudoku.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   705.1,
   708.5711111111111
  ]
 },
 {
  "input": "Very similar to sudoku's, in fact, in the sense that you want certain subsets to be filled with all three possible states.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   708.5711111111111,
   715.66
  ]
 },
 {
  "input": "For example, you might start by painting one of the corners an arbitrary color, let's say red, and so you know that its three neighbors need to be red, green, and blue.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   715.66,
   723.74
  ]
 },
 {
  "input": "Doesn't really matter how you do it.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   723.74,
   725.34
  ]
 },
 {
  "input": "And then maybe we move to the red neighbor and say that the other two adjacencies need to be green and blue.",
  "model": "nmt",
  "translatedText": "بائنری سٹرنگز کے بارے میں سوچتے ہوئے ایک اعلی جہتی مکعب کی چوٹی کے طور پر کناروں سے مماثل بٹ پلٹتے ہیں، یہ حقیقت میں بہت کچھ سامنے آتا ہے، خاص طور پر کوڈنگ تھیوری میں، جیسا کہ میں نے پہلے حوالہ دیا تھا غلطی کی اصلاح کی چیزیں۔ مزید یہ کہ آپ اکثر ریاضی دانوں کو چیزوں کو رنگنے کے بارے میں بات کرتے ہوئے سنتے ہیں کہ انہیں الگ الگ سیٹوں میں تقسیم کرنے کا طریقہ بیان کیا جائے۔ اگر آپ نے کبھی اس مزاحیہ طور پر بہت زیادہ نمبر گرام مستقل کے بارے میں سنا ہے، مثال کے طور پر، یہ مسئلہ جہاں سامنے آیا اسے بھی ایک اعلیٰ جہتی کیوب کو رنگ تفویض کرنے کے حوالے سے بیان کیا گیا تھا۔ اگرچہ اس معاملے میں رنگ انفرادی کی بجائے عمودی کے جوڑے کو دیئے گئے تھے۔ نقطہ یہ ہے کہ اعلی جہتی کیوب کو رنگنے کے طریقے کا تجزیہ کرنا آپ کی توقع سے کہیں زیادہ قابل منتقلی مہارت ہے۔ تو ہمارے سوال کے مطابق، کیا آپ اسے بنا سکتے ہیں کہ ہر چوٹی کا ایک سرخ، ایک سبز اور ایک نیلا پڑوسی ہو؟ یاد رکھیں، یہ وہی چیز ہے جو کلیدی مقامات کے لیے ایک انکوڈنگ کا ہے، تاکہ آپ جس مقام پر بھی رابطہ کرنا چاہتے ہیں اس سے ہمیشہ ایک پلٹ جائیں۔ اگر آپ ویڈیو کو روکتے ہیں اور اسے ابھی آزماتے ہیں تو یہ حقیقت میں روشن خیال ہوگا۔ یہ سوڈوکو کے ایک عجیب تین جہتی قسم کی طرح ہے۔ سوڈوکو سے بہت ملتا جلتا ہے، درحقیقت، اس لحاظ سے کہ آپ چاہتے ہیں کہ کچھ ذیلی سیٹیں تینوں ممکنہ حالتوں سے پُر ہوں۔ مثال کے طور پر، آپ کسی ایک کونے کو صوابدیدی رنگ سے پینٹ کر کے شروع کر سکتے ہیں، آئیے سرخ کہتے ہیں، اور اس لیے آپ کو معلوم ہو گا کہ اس کے تین پڑوسیوں کو سرخ، سبز اور نیلا ہونا چاہیے۔ اس سے کوئی فرق نہیں پڑتا کہ آپ اسے کیسے کرتے ہیں۔ اور پھر شاید ہم سرخ پڑوسی کی طرف بڑھیں اور کہیں کہ باقی دو ملحقہ سبز اور نیلے ہونے کی ضرورت ہے۔ شاید ہم اس طرح کرتے ہیں۔ لیکن کم از کم میں نے اسے یہاں کیسے کھینچا ہے، آپ پھنس گئے ہیں۔ آپ اگلے دو کے لیے صحیح رنگ منتخب کرنے سے قاصر ہیں۔ کیا آپ دیکھ سکتے ہیں کیوں؟ میں جو شئیر کرنا چاہوں گا وہ ایک خوبصورت چھوٹی دلیل ہے جو نہ صرف یہ بتاتی ہے کہ یہ تین جہتوں میں کیوں کام نہیں کرے گا، بلکہ یہ بھی کہ یہ کسی بھی جہت میں کیوں کام نہیں کر سکتا جو دو کی طاقت نہیں ہے۔ خیال یہ ہے کہ ہم جس پراپرٹی کو دیکھ رہے ہیں اس میں ہم آہنگی ختم ہو جائے گی اس کا مطلب یہ ہے کہ سرخ، سبز اور نیلے رنگ کے عمودی مساوی تعداد میں ہونا ضروری ہے۔ لیکن اس کا مطلب یہ ہوگا کہ ہر ایک کا آٹھ تہائی حصہ ہے، جو ممکن نہیں ہے۔ اور اس سے پہلے کہ میں آگے بڑھوں، توقف کریں، دیکھیں کہ کیا آپ اس وجدان کو مضبوط کرنے کا کوئی طریقہ سوچ سکتے ہیں۔ یہ ایک مبہم جبلت کو ٹھوس ثبوت میں تبدیل کرنے کی ایک تفریحی مشق ہے۔ ٹھیک ہے، آپ تیار ہیں؟ ایسا کرنے کا ایک طریقہ یہ ہے کہ ایک ایسے عمل کا تصور کریں جہاں آپ ہر کونے سے گزرتے ہیں اور گنتے ہیں کہ اس کے کتنے پڑوسی ایک خاص رنگ کے ہیں، سرخ کہتے ہیں۔ تو یہاں ہر قدم پر، ہم ایک دیے ہوئے چوٹی کے تین پڑوسیوں کو دیکھ رہے ہیں، سرخ پڑوسیوں کو گن رہے ہیں، اور اسے کل تعداد میں شامل کر رہے ہیں۔ اس مخصوص رنگ کے لیے، وہ گنتی 12 نکلی، لیکن اگر ہمارے پاس وہ پراپرٹی ہے جو ہم چاہتے ہیں، تو ہر کونے میں بالکل ایک سرخ پڑوسی ہوگا، اس لیے یہ گنتی 8 ہونی چاہیے۔ دوسری طرف، ہر سرخ کونے کو بالکل تین بار شمار کیا جاتا ہے، ایک بار ہر مثال کے لیے جہاں یہ کسی کا پڑوسی ہو۔ اس لیے حتمی تعداد ریڈ کارنر کی کل تعداد سے تین گنا ہونی چاہیے۔ تو، آپ جانتے ہیں، یہ آسان ہے.",
  "time_range": [
   725.34,
   730.86
  ]
 },
 {
  "input": "Maybe we do it like this.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   730.86,
   732.3648648648649
  ]
 },
 {
  "input": "But at least how I've drawn it here, you're stuck.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   732.3648648648649,
   735.5
  ]
 },
 {
  "input": "You are unable to choose a correct color for the next two.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   735.5,
   739.1854794520549
  ]
 },
 {
  "input": "Can you see why?",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   739.1854794520549,
   740.22
  ]
 },
 {
  "input": "What I'd like to share is a lovely little argument that explains not only why this will never work in three dimensions, but also why it can't work in any dimension that's not a power of two.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   740.22,
   750.38
  ]
 },
 {
  "input": "The idea is that the symmetry in the property that we're looking at will end up implying that there have to be an equal number of red, green, and blue vertices.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   750.38,
   758.54
  ]
 },
 {
  "input": "But that would mean that there's eight-thirds of each, which is not possible.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   758.54,
   763.26
  ]
 },
 {
  "input": "And before I go on, pause, see if you can think of a way to solidify that intuition.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   763.26,
   768.7
  ]
 },
 {
  "input": "It's a fun exercise in turning a vague instinct into a solid proof.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   768.7,
   772.7
  ]
 },
 {
  "input": "Alright, you ready?",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   772.7,
   777.74
  ]
 },
 {
  "input": "One way to do this is to imagine a process where you go through each corner and count how many of its neighbors are a particular color, say red.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   777.74,
   785.82
  ]
 },
 {
  "input": "So each step here, we're looking at the three neighbors of a given vertex, counting up the red ones, and adding that to a total tally.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   785.82,
   794.38
  ]
 },
 {
  "input": "For this specific coloring, that count came out to be 12, but if we had the property that we wanted, every corner would have exactly one red neighbor, so that count should be 8.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   794.38,
   807.18
  ]
 },
 {
  "input": "On the other hand, every red corner is counted exactly three times, once for each instance where it's somebody's neighbor.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   807.18,
   815.34
  ]
 },
 {
  "input": "So that final tally has to be three times the total number of red corners.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   815.34,
   819.82
  ]
 },
 {
  "input": "So, you know, it's simple.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   819.82,
   821.1212048192772
  ]
 },
 {
  "input": "Find a coloring where eight-thirds of the corners are red.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   821.1212048192772,
   824.78
  ]
 },
 {
  "input": "Isn't that nice?",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   824.78,
   825.6521649484536
  ]
 },
 {
  "input": "Counting how many times some corner has a red neighbor is the same as counting how many times a red corner has some neighbor, and that's actually enough to get us a contradiction.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   825.6521649484536,
   836.06
  ]
 },
 {
  "input": "What's also nice is that this argument immediately generalizes to higher dimensions.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   836.06,
   840.78
  ]
 },
 {
  "input": "Think about solving the chessboard puzzle with n squares.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   840.78,
   844.54
  ]
 },
 {
  "input": "Again, the puzzle is to associate each arrangement of coins with some state, some possible location for the key.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   844.54,
   852.46
  ]
 },
 {
  "input": "And the goal is to make it so that the arrangements that you can get to with one flip of a coin represent all possible states, all possible places the warden might have hidden that key.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   852.46,
   863.18
  ]
 },
 {
  "input": "Even if you can't visualize most higher dimensional cubes, we can still talk about things like vertices of such a cube and their neighbors, basically as a way to describe bit strings and the ones which are one bit flip away.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   863.18,
   875.58
  ]
 },
 {
  "input": "Really, there's just two relevant facts you need to know.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   875.58,
   878.54
  ]
 },
 {
  "input": "If you're standing at one of these vertices, you have n distinct neighbors, and the total number of vertices is 2 to the n, one for each bit string of length n.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   878.54,
   890.22
  ]
 },
 {
  "input": "And from here, you can play the same game that we did in three dimensions.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   890.22,
   893.82
  ]
 },
 {
  "input": "You can go through each corner and count how many red neighbors it has.",
  "model": "nmt",
  "translatedText": "ایک رنگ تلاش کریں جہاں آٹھ تہائی کونے سرخ ہوں۔ کیا یہ اچھا نہیں ہے؟ یہ گننا کہ کسی کونے میں کتنی بار سرخ پڑوسی ہے، یہ شمار کرنے کے مترادف ہے کہ سرخ کونے میں کتنی بار کوئی پڑوسی ہے، اور یہ حقیقت میں ہمارے لیے تضاد پیدا کرنے کے لیے کافی ہے۔ یہ بھی اچھی بات ہے کہ یہ دلیل فوری طور پر اعلیٰ جہتوں کو عام کرتی ہے۔ n مربعوں کے ساتھ شطرنج کی تختی کی پہیلی کو حل کرنے کے بارے میں سوچئے۔ ایک بار پھر، پہیلی یہ ہے کہ سکوں کے ہر انتظام کو کسی نہ کسی حالت، کلید کے لیے کچھ ممکنہ مقام کے ساتھ جوڑا جائے۔ اور مقصد اسے بنانا ہے تاکہ وہ انتظامات جو آپ سکے کے ایک پلٹنے سے حاصل کر سکیں وہ تمام ممکنہ ریاستوں کی نمائندگی کرتے ہیں، تمام ممکنہ جگہوں پر وارڈن نے اس چابی کو چھپا رکھا ہو۔ یہاں تک کہ اگر آپ اعلیٰ جہتی کیوبز کا تصور نہیں کر سکتے ہیں، تب بھی ہم ایسے کیوب کے عمودی خطوط اور ان کے پڑوسیوں کے بارے میں بات کر سکتے ہیں، بنیادی طور پر بٹ تاروں کو بیان کرنے کے طریقے کے طور پر اور جو تھوڑا سا دور ہوتے ہیں۔ واقعی، صرف دو متعلقہ حقائق ہیں جن کے بارے میں آپ کو جاننے کی ضرورت ہے۔ اگر آپ ان چوٹیوں میں سے کسی ایک پر کھڑے ہیں، تو آپ کے الگ الگ پڑوسی ہیں، اور چوٹیوں کی کل تعداد 2 سے n تک ہے، لمبائی n کے ہر بٹ سٹرنگ کے لیے ایک۔ اور یہاں سے، آپ وہی کھیل کھیل سکتے ہیں جو ہم نے تین جہتوں میں کیا تھا۔ آپ ہر کونے سے گزر سکتے ہیں اور گن سکتے ہیں کہ اس کے کتنے سرخ پڑوسی ہیں۔ اگر ہم چاہتے ہیں کہ رنگ کرنا ممکن ہو تو، یہ رقم 2 سے n، ہر ایک چوٹی کے لیے ایک ہونی چاہیے۔ دوسری طرف، ہر سرخ کونے کو اس کے ہر پڑوسی کے لیے ایک بار شمار کیا جاتا ہے، اس کا مطلب یہ ہے کہ ہمیں سرخ کونوں کی کل تعداد کے n گنا کے ساتھ ختم کرنے کی ضرورت ہے۔ چونکہ بائیں ہاتھ کی طرف 2 کی طاقت ہے، اس لیے دائیں ہاتھ کی طرف بھی 2 کی طاقت ہونی چاہیے، جو صرف اس صورت میں ہو سکتی ہے جب n خود 2 کی کچھ چھوٹی طاقت ہو۔ تو مثال کے طور پر، اگر ہم 4 جہتوں یا 64 جہتوں میں تھے، تو کوئی تضاد نہیں ہے۔ مختلف رنگوں میں چوٹیوں کو یکساں طور پر تقسیم کرنا کم از کم ممکن ہے۔ واضح ہونے کے لئے، یہ وہی چیز نہیں ہے جو یہ کہہ رہی ہے کہ ضروری طور پر 2 کیس کی طاقت کا حل موجود ہے، یہ صرف اتنا ہے کہ اسے ابھی تک مسترد نہیں کیا جاسکتا۔ میرے لئے، یہ مکمل طور پر خوشگوار ہے.",
  "time_range": [
   893.82,
   897.66
  ]
 },
 {
  "input": "If it's possible to do the coloring we want, this sum should be 2 to the n, one for each vertex.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   897.66,
   904.06
  ]
 },
 {
  "input": "On the other hand, each red corner is counted once for each of its neighbors, so that means that we need to end up with n times the total number of red corners.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   904.06,
   914.14
  ]
 },
 {
  "input": "Since that left hand side is a power of 2, the right hand side also has to be a power of 2, which could only ever happen if n itself is some smaller power of 2.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   914.14,
   924.86
  ]
 },
 {
  "input": "So for example, if we were in 4 dimensions or 64 dimensions, there is no contradiction.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   924.86,
   930.86
  ]
 },
 {
  "input": "It's at the very least possible to evenly divide the vertices among the different colors.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   930.86,
   935.98
  ]
 },
 {
  "input": "To be clear, that is not the same thing as saying there necessarily is a solution for the power of 2 case, it's just that it can't be ruled out yet.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   935.98,
   945.74
  ]
 },
 {
  "input": "To me, this is completely delightful.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   945.74,
   947.98
  ]
 },
 {
  "input": "Just by imagining coloring the corners of a cube and then counting how many there are, you can conclude that no possible strategy, no matter how clever you are, can work in all of the cases for this chessboard puzzle, if the number of squares isn't a power of 2.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   947.98,
   962.46
  ]
 },
 {
  "input": "So even though it might seem to make it easier if you knock off a couple squares or reduce the size of the board, it actually makes the task hopeless.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   962.46,
   970.38
  ]
 },
 {
  "input": "It also means that the solution to this puzzle, which I'll point you to in a moment, can be viewed as a particularly symmetric way to color the corners of a high dimensional cube in a way that's disallowed in most dimensions.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   970.38,
   983.02
  ]
 },
 {
  "input": "And if you're curious, I just couldn't resist showing this explicitly for a 4-dimensional cube.",
  "model": "nmt",
  "translatedText": "صرف ایک مکعب کے کونوں کو رنگنے کا تصور کرنے اور پھر گننے سے کہ کتنے ہیں، آپ یہ نتیجہ اخذ کر سکتے ہیں کہ کوئی بھی ممکنہ حکمت عملی، چاہے آپ کتنے ہی ہوشیار کیوں نہ ہوں، اس شطرنج کے تمام معاملات میں کام کر سکتے ہیں، اگر مربعوں کی تعداد نہ ہو۔ 2 کی طاقت نہیں ہے۔ لہٰذا اگرچہ ایسا لگتا ہے کہ یہ آسان ہو جائے گا اگر آپ ایک دو چوکوں کو دستک دیتے ہیں یا بورڈ کا سائز کم کرتے ہیں، یہ درحقیقت کام کو ناامید بنا دیتا ہے۔ اس کا مطلب یہ بھی ہے کہ اس پہیلی کا حل، جس کی طرف میں آپ کو ایک لمحے میں بتاؤں گا، کو ایک اعلیٰ جہتی کیوب کے کونوں کو اس طرح سے رنگنے کے خاص طور پر ہم آہنگ طریقے کے طور پر دیکھا جا سکتا ہے جس کی زیادہ تر جہتوں میں اجازت نہیں ہے۔ اور اگر آپ متجسس ہیں تو، میں صرف 4 جہتی کیوب کے لیے اسے واضح طور پر دکھانے کی مزاحمت نہیں کر سکتا۔ تو اسی طرح جس طرح آپ ایک 3D مکعب لے سکتے ہیں اور اسے دو جہتوں میں اسکویش کر سکتے ہیں، شاید تھوڑا سا نقطہ نظر کے ساتھ، اور اسی طرح گراف کا ڈھانچہ حاصل کریں کہ کس طرح عمودی اور کنارے سب آپس میں جڑے ہوئے ہیں، ہم بھی ایسا ہی کر سکتے ہیں۔ ایک 4 جہتی مکعب کو 3 جہتی جگہ میں پیش کرنا اور پھر بھی ایک مکمل نظارہ حاصل کرنا کہ کس طرح تمام عمودی اور کناروں کو ایک ساتھ جوڑا گیا ہے۔ اگر آپ سوڈوکو کے 4 جہتی کزن کی ایک عجیب قسم پر ہاتھ آزمانا چاہتے ہیں، تو آپ ابھی رک سکتے ہیں اور یہ جاننے کی کوشش کر سکتے ہیں کہ ان چوٹیوں کو اس طرح رنگین کیسے کیا جائے کہ کسی ایک کے چار پڑوسیوں میں سے ہر ایک کی نمائندگی کرے۔ چار مختلف رنگ.",
  "time_range": [
   983.02,
   988.06
  ]
 },
 {
  "input": "So in the same way that you can take a 3D cube and kind of squish it down into two dimensions, maybe with a little perspective, and get the same graph structure for how the vertices and edges are all connected, we can do the same thing projecting a 4-dimensional cube into 3-dimensional space and still get a complete view for how all of the vertices and edges are hooked together.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   988.06,
   1008.38
  ]
 },
 {
  "input": "If you wanted to try your hand at a weird sort of 4-dimensional cousin of a Sudoku, you could pause right now and try to figure out how to color these vertices in such a way that each of the four neighbors of any one represent all four different colors.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   1008.38,
   1025.66
  ]
 },
 {
  "input": "Using essentially the same computation that solves the chessboard puzzle for the four-square case, I can get the computer to explicitly draw that out for us.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   1025.66,
   1038.54
  ]
 },
 {
  "input": "And at this point, when you're hopefully burning to know what the actual solution is, I'd like you to hop on over to Stand Up Maths, where Matt and I show you how it works.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   1038.54,
   1046.14
  ]
 },
 {
  "input": "If any of you are somehow not yet familiar with Stand Up Maths, it is one of my favorite channels, run by one of my favorite people, so please do immediately subscribe once you land over there.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   1046.14,
   1055.74
  ]
 },
 {
  "input": "I promise, you're in for quite a few delights with everything else he has to offer.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   1055.74,
   1059.9
  ]
 },
 {
  "input": "Before explaining it, he and I simply walk through what it looks like for us to actually perform the solution.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   1059.9,
   1065.02
  ]
 },
 {
  "input": "And as we do, I really want you to try thinking of the solution yourself, and to predict what it is that we're doing before we tell you.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   1065.02,
   1072.3
  ]
 },
 {
  "input": "And if you're curious about the connection with Hamming codes and error correction, I'm definitely game to make a video on that, just let me know in the comments.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   1072.3,
   1079.34
  ]
 },
 {
  "input": "I've been told that as far as motivating puzzles go, not everyone is as interested in symmetrical ways to paint a 64-dimensional cube as I am.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   1079.34,
   1086.331489361702
  ]
 },
 {
  "input": "But reliable data transmission?",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   1086.331489361702,
   1088.2574468085106
  ]
 },
 {
  "input": "Come on, I think we can all agree that that's universally sexy.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   1088.2574468085106,
   1091.5
  ]
 },
 {
  "input": "Come on, I think we can all agree that that's universally sexy.",
  "model": "nmt",
  "translatedText": "",
  "time_range": [
   1091.5,
   1121.5
  ]
 }
]