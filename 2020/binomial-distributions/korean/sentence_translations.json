[
 {
  "input": "You're buying a product online, and you see three different sellers.",
  "translatedText": "온라인에서 제품을 구매하고 있는데 세 명의 판매자가 표시됩니다.",
  "model": "DeepL",
  "from_community_srt": "어떤 제품을 온라인 쇼핑몰에서 사려 하는데,",
  "n_reviews": 0,
  "start": 0.0,
  "end": 2.9
 },
 {
  "input": "They're all offering that same product at essentially the same price.",
  "translatedText": "모두 동일한 제품을 본질적으로 동일한 가격에 제공하고 있습니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 3.46,
  "end": 6.2
 },
 {
  "input": "One of them has a 100% positive rating, but with only 10 reviews.",
  "translatedText": "그중 하나는 100% 긍정적인 평가를 받았지만 리뷰가 10개에 불과합니다.",
  "model": "DeepL",
  "from_community_srt": "판매처가 세 곳이 있네요 똑같은 제품을 같은 가격에 팔고 있군요 첫 판매처는 고작 10건의 리뷰가 100% 만족을 나타내고 2번째 판매처는 50건의 리뷰가 96% 만족을",
  "n_reviews": 0,
  "start": 6.72,
  "end": 10.64
 },
 {
  "input": "Another has a 96% positive rating, with 50 total reviews.",
  "translatedText": "또 다른 리뷰는 96%의 긍정적인 평가와 총 50개의 리뷰를 받았습니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 11.18,
  "end": 14.74
 },
 {
  "input": "And yet another has a 93% positive rating, but with 200 total reviews.",
  "translatedText": "또 다른 리뷰는 93%의 긍정적인 평가를 받았지만 총 리뷰 수가 200개에 달했습니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 15.22,
  "end": 19.56
 },
 {
  "input": "Which one should you buy from?",
  "translatedText": "어느 쪽에서 구매해야 하나요?",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 20.3,
  "end": 21.36
 },
 {
  "input": "I think we all have this instinct that the more data we see, it gives us more confidence in a given rating.",
  "translatedText": "우리 모두는 더 많은 데이터를 볼수록 주어진 평가에 대한 신뢰도가 높아진다는 본능을 가지고 있다고 생각합니다.",
  "model": "DeepL",
  "from_community_srt": "3번째 판매처는 200건의 리뷰가 93% 만족을 나타내네요 어디서 사는 게 좋을까요? 아마 다들 리뷰가 더 많으면 많을수록",
  "n_reviews": 0,
  "start": 28.12,
  "end": 33.24
 },
 {
  "input": "We're a little suspicious of seeing 100% ratings, since more often than not they come from a tiny number of reviews, which makes it feel more plausible that things could have gone another way and given a lower rating.",
  "translatedText": "100% 평점은 소수의 리뷰에서 나온 경우가 많기 때문에 다른 방식으로 진행되어 더 낮은 평점을 받았을 가능성이 더 그럴듯하게 느껴지기 때문에 100% 평점을 보는 것은 약간 의심스럽습니다.",
  "model": "DeepL",
  "from_community_srt": "더 신뢰할 수 있다고 생각하실 겁니다 아무래도 100% 만족은 좀 의심스럽죠 보통 리뷰의 수가 너무 적으면 몇 건만 달라져도 더 낮은 만족도를 보일 수 있으니까요 하지만 이처럼 더 많은 리뷰 건수와 더 높은 만족도 중에",
  "n_reviews": 0,
  "start": 33.76,
  "end": 43.44
 },
 {
  "input": "But how do you make that intuition quantitative?",
  "translatedText": "그렇다면 이러한 직관을 어떻게 정량화할 수 있을까요?",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 43.92,
  "end": 45.84
 },
 {
  "input": "What's the rational way to reason about the trade-off here between the confidence gained from more data versus the lower absolute percentage?",
  "translatedText": "더 많은 데이터에서 얻은 신뢰도와 낮은 절대 비율 사이의 절충점을 합리적으로 추론하는 방법은 무엇일까요?",
  "model": "DeepL",
  "from_community_srt": "무엇이 더 유용한 지표인지에 대해 어떻게 합리적인 판단을 하시겠습니까? 이 구체적인 사례는 John Cook 씨가 쓴 훌륭한 게시글",
  "n_reviews": 0,
  "start": 46.42,
  "end": 53.26
 },
 {
  "input": "This particular example is a slight modification from one that John Cook gave in his excellent blog post, A Bayesian Review of Amazon Resellers.",
  "translatedText": "이 특정 예는 John Cook의 훌륭한 블로그 게시물인 Amazon 리셀러에 대한 베이지안 검토에서 제공한 예에서 약간 수정한 것입니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 54.54,
  "end": 62.16
 },
 {
  "input": "For you and me, it's a wonderful excuse to dig into a few core topics in probability and statistics.",
  "translatedText": "여러분과 저에게는 확률과 통계의 몇 가지 핵심 주제를 파헤칠 수 있는 좋은 핑계가 될 수 있습니다.",
  "model": "DeepL",
  "from_community_srt": "에 나오는 사례를 약간 수정한 것인데 우리로서는 확률론과 통계학의 가장 핵심적인 개념들을 알아 볼 좋은 핑계가 되겠군요 이런 개념들을 정말 진지하게 알아보려면 시간이 걸려서",
  "n_reviews": 0,
  "start": 62.62,
  "end": 67.6
 },
 {
  "input": "And to really cover these topics properly, it takes time.",
  "translatedText": "그리고 이러한 주제를 제대로 다루려면 시간이 걸립니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 68.32,
  "end": 71.0
 },
 {
  "input": "So what I'm going to do is break this down into three videos, where in this first one we'll set up a model for the situation, and start by talking about the binomial distribution.",
  "translatedText": "그래서 저는 이를 세 개의 동영상으로 나누어 설명할 것이며, 첫 번째 동영상에서는 상황에 대한 모델을 설정하고 이항 분포에 대해 이야기하는 것부터 시작하겠습니다.",
  "model": "DeepL",
  "from_community_srt": "3개의 동영상에 걸쳐서 알아보고자 합니다 이 동영상에서는 앞서 본 상황을 위한 모델을 만든 다음 이항 분포에 관한 이야기를 하겠습니다 두 번째 시간에는 베이즈 개념과 연속적 변수에 따른 확률 개념을 도입하고요",
  "n_reviews": 0,
  "start": 71.56,
  "end": 79.86
 },
 {
  "input": "The second is going to bring in ideas of Bayesian updating, and how to work with probabilities over continuous values.",
  "translatedText": "두 번째는 베이지안 업데이트에 대한 아이디어와 연속형 값에 대한 확률로 작업하는 방법을 소개합니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 79.98,
  "end": 86.38
 },
 {
  "input": "And in the third, we'll look at something known as a beta distribution, and pull up a little python to analyze the data we have, and come to various different answers depending on what it is you want to optimize.",
  "translatedText": "세 번째 단계에서는 베타 배포라는 것을 살펴보고, 파이썬을 사용하여 가지고 있는 데이터를 분석하고 최적화하려는 대상에 따라 다양한 답을 찾아보겠습니다.",
  "model": "DeepL",
  "from_community_srt": "세 번째 시간에는 베타 분포라는 걸 알아보고 우리가 가진 데이터를 분석하기 위해 파이썬을 좀 이용해 무엇을 원하는가에 따라 정답이 달라지는 걸 보겠습니다 본격적으로 들어가기 전에",
  "n_reviews": 0,
  "start": 87.04,
  "end": 96.98
 },
 {
  "input": "Now, to throw you a bone before we dive into all the math, let me just show you what one of the answers turns out to be, since it's delightfully simple.",
  "translatedText": "이제 본격적인 계산에 들어가기 전에 그 답이 무엇인지는 매우 간단하기 때문에 간단히 보여드리겠습니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 99.66,
  "end": 106.24
 },
 {
  "input": "When you see an online rating, something like this 10 out of 10, you pretend that there were two more reviews, one that was positive and one that's negative.",
  "translatedText": "10점 만점에 10점 같은 온라인 평점을 보면 긍정적인 리뷰와 부정적인 리뷰가 각각 2개씩 더 있는 것으로 간주합니다.",
  "model": "DeepL",
  "from_community_srt": "답 중 하나가 어떻게 되는지 보여드릴게요 굉장히 쉽거든요 10명 중 10명 만족 같은 이런 온라인 리뷰를 보게 되면 마치 두 리뷰가 더 있는 듯양 생각하십시오 하나는 만족,",
  "n_reviews": 0,
  "start": 106.88,
  "end": 115.2
 },
 {
  "input": "In this case, that means you pretend that it's 11 out of 12, which would give 91.7%.",
  "translatedText": "이 경우 12개 중 11개라고 가정하면 91.7%가 됩니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 115.86,
  "end": 120.48
 },
 {
  "input": "This number is your probability of having a good experience with that seller.",
  "translatedText": "이 숫자는 해당 판매자와 좋은 경험을 할 확률을 나타냅니다.",
  "model": "DeepL",
  "from_community_srt": "하나는 불만족 이 경우에는 11/12 만족 즉 91.7% 만족이라고 보는 거죠 이 수치가 바로 당신이 이 판매처에서 제품을 살 때 만족할 확률입니다 50건의 리뷰 중 48건 만족,",
  "n_reviews": 0,
  "start": 121.5,
  "end": 126.08
 },
 {
  "input": "So in the case of 50 reviews, where you have 48 positive and 2 negative, you pretend that it's 49 positive and 3 negative, which would give you 49 out of 52, or 94.2%.",
  "translatedText": "따라서 긍정적인 리뷰가 48개, 부정적인 리뷰가 2개인 50개의 경우, 긍정적인 리뷰가 49개, 부정적인 리뷰가 3개인 것처럼 가정하면 52개 중 49개, 즉 94.2%가 됩니다.",
  "model": "DeepL",
  "from_community_srt": "2건 불만족인 경우 52건의 리뷰 중 49건 만족,",
  "n_reviews": 0,
  "start": 128.14,
  "end": 139.36
 },
 {
  "input": "That's your probability of having a good experience with the second seller.",
  "translatedText": "두 번째 판매자와 좋은 경험을 할 확률이 높습니다.",
  "model": "DeepL",
  "from_community_srt": "3건 불만족이라 치세요 그러면 49/52 즉 94.2% 만족이라는 이야깁니다 이게 바로 두 번째 판매처에서 샀을 때 만족할 확률이죠 200건의 리뷰가 있는 3번째 판매처에서도 똑같이 하면",
  "n_reviews": 0,
  "start": 140.5,
  "end": 143.84
 },
 {
  "input": "Playing the same game with our third seller who had 200 reviews, you get 187 out of 202, or 92.6%.",
  "translatedText": "리뷰가 200개인 세 번째 판매자와 같은 게임을 플레이하면 202개 중 187개(92.6%)의 리뷰를 얻을 수 있습니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 145.32,
  "end": 153.44
 },
 {
  "input": "So according to this rule, it would mean your best bet is to go with seller number 2.",
  "translatedText": "따라서 이 규칙에 따르면 가장 좋은 방법은 2번 판매자를 선택하는 것입니다.",
  "model": "DeepL",
  "from_community_srt": "187/202점을 얻습니다 92.6%라고 하셔도 되고요 이 규칙대로면 2번째 판매처에 가서 사시는 게 좋겠네요 이 규칙은 라플라스의 성공 법칙이라고 하는데 18세기에 나온 겁니다",
  "n_reviews": 0,
  "start": 154.64,
  "end": 158.66
 },
 {
  "input": "This is something known as Laplace's rule of succession, and to understand what assumptions are underlying this, and how changing either those assumptions or your underlying goal can change the choice you make, we really do need to go through all the math.",
  "translatedText": "이를 라플라스 승계의 법칙이라고 하는데, 그 기저에 어떤 가정이 있는지, 그리고 그러한 가정이나 기본 목표를 변경하면 선택이 어떻게 달라지는지 이해하려면 실제로 모든 수학을 살펴볼 필요가 있습니다.",
  "model": "DeepL",
  "from_community_srt": "무슨 가정이 내재되어 있는지 또 그 가정이 바뀌거나 궁극적 목적이 바뀌면 당신의 결정도 달라진다는 것을 이해하려면 수학을 빼놓을 수 없습니다 그럼 이제 본격적으로 시작할까요!",
  "n_reviews": 0,
  "start": 159.3,
  "end": 174.14
 },
 {
  "input": "So without further ado, let's dive in.",
  "translatedText": "더 이상 고민할 필요 없이 바로 시작하겠습니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 174.66,
  "end": 176.36
 },
 {
  "input": "Step 1, how exactly are we modeling the situation, and what exactly is it that you want to optimize?",
  "translatedText": "1단계, 상황을 정확히 어떻게 모델링하고 있으며 최적화하고자 하는 것이 정확히 무엇인가요?",
  "model": "DeepL",
  "from_community_srt": "1단계. 우리가 얼마나 정확하게 상황을 모델링하고 있고 당신이 생각하는 '최적의 결과'란 무엇인가요? 가능한 한 가지 모델은 판매처는 구매자에게 무작위로",
  "n_reviews": 0,
  "start": 180.84,
  "end": 186.08
 },
 {
  "input": "One option is to think of each seller as producing random experiences that are either positive or negative, and that each seller has some kind of constant underlying probability of giving a good experience, what we're going to call the success rate, or S for short.",
  "translatedText": "한 가지 옵션은 각 판매자가 긍정적이거나 부정적인 경험을 무작위로 생성한다고 생각하고, 각 판매자가 좋은 경험을 제공할 수 있는 일종의 일정한 기본 확률, 즉 성공률(줄여서 S라고 부릅니다)을 가지고 있다고 생각하는 것입니다.",
  "model": "DeepL",
  "from_community_srt": "긍정적이거나 부정적인 경험을 제공한다고 보는 겁니다 그리고 각 판매처는 일정 확률로 긍정적 경험을 선사하죠 이걸 성공 확률,",
  "n_reviews": 0,
  "start": 186.7,
  "end": 201.48
 },
 {
  "input": "The whole challenge is that we don't know S.",
  "translatedText": "문제는 우리가 S를 모른다는 것입니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 201.9,
  "end": 204.1
 },
 {
  "input": "When you see that first rating of 100% with 10 reviews, that doesn't mean the underlying success rate is 100%.",
  "translatedText": "첫 번째 평가가 100%이고 리뷰가 10개라고 해서 기본 성공률이 100%라는 의미는 아닙니다.",
  "model": "DeepL",
  "from_community_srt": "줄여서 's'라고 쓰겠습니다 문제는 우린 s 값을 모릅니다 10/10의 첫 번째 리뷰가 s 값이 100%란 말은 아닙니다 어쩌면 95%가 될 수도 있잖습니까? 설명을 위해서 잠깐 가정해 보겠습니다",
  "n_reviews": 0,
  "start": 205.64,
  "end": 211.12
 },
 {
  "input": "It could very well be something like 95%.",
  "translatedText": "95% 정도일 수도 있습니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 211.64,
  "end": 213.92
 },
 {
  "input": "And just to illustrate, let me run a little simulation, where I choose a random number between 0 and 1, and if it's less than 0.95, I'll record it as a positive review, otherwise record it as a negative review.",
  "translatedText": "설명을 위해 0과 1 사이의 임의의 숫자를 선택하고 0.95보다 작으면 긍정적인 리뷰로, 그렇지 않으면 부정적인 리뷰로 기록하는 간단한 시뮬레이션을 실행해 보겠습니다.",
  "model": "DeepL",
  "from_community_srt": "0과 1 사이에서 고른 임의의 수가 0.95보다 작다면 '만족' 리뷰를 그렇지 않으면 '불만족' 리뷰를 남긴다고 합시다 이걸 10번 반복하고 10번 더 하고 10번 또 하고",
  "n_reviews": 0,
  "start": 213.92,
  "end": 227.66
 },
 {
  "input": "Now do this 10 times in a row, and then make 10 more, and 10 more, and 10 more, and so on, to get a sense of what sequences of 10 reviews for a seller with this success rate, would tend to look like.",
  "translatedText": "이제 이 작업을 10번 연속으로 수행한 다음 10번, 10번, 10번, 10번, 이런 식으로 10개의 리뷰를 작성하여 이 성공률을 가진 판매자에 대한 10개의 리뷰가 어떤 순서로 나타나는지 파악합니다.",
  "model": "DeepL",
  "from_community_srt": "10번 또 하고 계속하면 이 성공률 95%의 판매처의 이용자들이 남긴 각 10건의 리뷰 결과는 대체로 어떤가요? 60% 정도는 10/10을 기록했군요",
  "n_reviews": 0,
  "start": 228.76,
  "end": 245.22
 },
 {
  "input": "Quite a few of those, around 60% actually, give 10 out of 10.",
  "translatedText": "실제로 이들 중 약 60%가 10점 만점에 10점을 주었습니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 245.74,
  "end": 249.52
 },
 {
  "input": "So the data we see seems perfectly plausible if the seller's true success rate was 95%.",
  "translatedText": "따라서 판매자의 실제 성공률이 95%였다면 우리가 보는 데이터는 완벽하게 그럴듯해 보입니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 250.02,
  "end": 254.46
 },
 {
  "input": "Or maybe it's really 90%, or 99%.",
  "translatedText": "아니면 정말 90%, 혹은 99%일 수도 있습니다.",
  "model": "DeepL",
  "from_community_srt": "그러면 이 데이터가 나타내는 판매처의 성공률은 95%쯤 된다는 건 그럴듯해 보이네요 어쩌면 90%나 99%일지도 모르겠지만 결국 문제는 우리가 성공 확률을 모른다는 데 있습니다",
  "n_reviews": 0,
  "start": 255.58,
  "end": 258.04
 },
 {
  "input": "The whole challenge is that we just don't know.",
  "translatedText": "문제는 우리가 아직 모른다는 것입니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 258.7,
  "end": 260.68
 },
 {
  "input": "As to the goal, let's say you simply want to maximize your probability of having a positive experience, despite not being sure of this success rate.",
  "translatedText": "목표와 관련하여, 성공률을 확신할 수는 없지만 긍정적인 경험을 할 확률을 극대화하고 싶다고 가정해 보겠습니다.",
  "model": "DeepL",
  "from_community_srt": "당신의 목표는 단순히 성공 확률을 최대화하는 거라 하죠 물론 성공 확률을 정확히 알 순 없지만요 생각해 보세요 각 판매처에 대해 가능한 성공률은 많습니다 0부터 1 사이면 다 돼죠",
  "n_reviews": 0,
  "start": 261.6,
  "end": 268.96
 },
 {
  "input": "So think about this here, we've got many different possible success rates for each seller, any number from 0 up to 1, and we need to say something about how likely each one of these success rates is, a kind of probability of probabilities.",
  "translatedText": "각 셀러에 대해 0에서 1까지 다양한 성공률이 존재하며, 각 성공률의 가능성에 대해 일종의 확률인 확률의 확률에 대해 설명할 필요가 있습니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 269.86,
  "end": 283.92
 },
 {
  "input": "Unlike the more gamified examples like coin flips and die tosses and the sort of things you see in an intro probability class, where you go in assuming a long run frequency, like 1.5 or 1.6, what we have here is uncertainty about the long run frequency itself, which is a much more potent kind of doubt.",
  "translatedText": "동전 던지기나 주사위 던지기와 같은 게임화된 예시나 확률 수업에서 볼 수 있는 1.5 또는 1.6과 같은 장기적인 빈도를 가정하고 들어가는 것과 달리, 여기서는 장기적인 빈도 자체에 대한 불확실성이 훨씬 더 강력한 의심의 종류입니다.",
  "model": "DeepL",
  "from_community_srt": "우리는 각 성공률이 얼마나 가능성 있는지 알아야 하죠 확률의 확률 말입니다 동전 던지기라든지 주사위 굴리기라든지 확률 수업에서 나올 법한 사례들에서는 보통 장기적 빈도(확률)로 1/2이나 1/6 따위를 얻지만 지금 우리가 다루는 건 확률 그 자체의 불확실성입니다 좀 더 그럴싸한 의구심이네요 또 짚고 넘어가야 할 것은 이런 설정은 현실의 아주 아주 많은 상황과 관련 있지만",
  "n_reviews": 0,
  "start": 285.12,
  "end": 302.04
 },
 {
  "input": "I should also emphasize that this kind of setup is relevant to many many situations in the real world where you need to make a judgment about a random process from limited data.",
  "translatedText": "또한 이러한 설정은 제한된 데이터에서 무작위 프로세스에 대한 판단을 내려야 하는 현실 세계의 많은 상황과 관련이 있다는 점을 강조하고 싶습니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 303.16,
  "end": 311.72
 },
 {
  "input": "For example, let's say that you're setting up a factory producing cars, and in an initial test of 100 cars, two of them come out with some kind of problem.",
  "translatedText": "예를 들어 자동차를 생산하는 공장을 설립하고 100대의 자동차를 초기 테스트하는 과정에서 두 대에 문제가 발생했다고 가정해 보겠습니다.",
  "model": "DeepL",
  "from_community_srt": "현실에선 무작위 사건에 대해 한정된 시행으로 판단해야 하죠 예를 들어 당신이 자동차 공장을 운영한다고 합시다 첫 품질 검수에서 100대 중 2대에서 결함이 나왔습니다",
  "n_reviews": 0,
  "start": 312.86,
  "end": 320.84
 },
 {
  "input": "If you plan to spin things up to produce a million cars, what are you willing to confidently say about how many total cars will have problems that need addressing?",
  "translatedText": "백만 대의 자동차를 생산할 계획이라면, 총 몇 대의 자동차에 해결해야 할 문제가 있을 것이라고 자신 있게 말할 수 있나요?",
  "model": "DeepL",
  "from_community_srt": "공장을 계속 돌려서 100만 대를 생산한다면 문제가 있는 자동차는 얼마나 나올지 어떻게 확언하시겠습니까? 이건 불량률이 2%라고 주어진 시험 문제가 아닙니다",
  "n_reviews": 0,
  "start": 321.4,
  "end": 330.46
 },
 {
  "input": "It's not like the test guarantees that the true error rate is 2%, but what exactly does it say?",
  "translatedText": "테스트에서 실제 오류율이 2%라고 보장하는 것은 아니지만, 정확히 무엇을 말하는 건가요?",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 331.24,
  "end": 336.66
 },
 {
  "input": "As your first challenge, let me ask you this.",
  "translatedText": "첫 번째 도전 과제로 이걸 물어보겠습니다.",
  "model": "DeepL",
  "from_community_srt": "그럼 무슨 뜻일까요? 1번째 질문을 드리죠",
  "n_reviews": 0,
  "start": 338.62,
  "end": 340.56
 },
 {
  "input": "If you did magically know the true success rate for a given seller, say it was 95%, how would you compute the probability of seeing 10 positive reviews and 0 negative reviews, or 48 and 2, or 186 and 14?",
  "translatedText": "특정 판매자의 실제 성공률을 마술처럼 알 수 있다면(예: 95%), 긍정적인 리뷰 10개와 부정적인 리뷰 0개, 48개와 2개, 186개와 14개가 나올 확률을 어떻게 계산할 수 있을까요?",
  "model": "DeepL",
  "from_community_srt": "만약 무슨 일이 생겨서 진짜 성공률 값이 95%라고 알게 된다면 10/10의 리뷰 결과가 나올 확률은 얼마가 될까요? 48/50은요?",
  "n_reviews": 0,
  "start": 340.84,
  "end": 356.2
 },
 {
  "input": "In other words, what's the probability of seeing the data given an assumed success rate?",
  "translatedText": "다시 말해, 가정된 성공률이 주어졌을 때 데이터를 볼 확률은 얼마인가요?",
  "model": "DeepL",
  "from_community_srt": "186/200은요? 다시 말해 s 값이 주어졌을 때 어떤 리뷰 결과가 나올 확률은 얼마가 됩니까?",
  "n_reviews": 0,
  "start": 357.12,
  "end": 362.16
 },
 {
  "input": "A moment ago I showed you something like this with a simulation, generating 10 random reviews, and with a little programming you could just do that many times, building up a histogram to get some sense of what this distribution looks like.",
  "translatedText": "조금 전에 10개의 무작위 리뷰를 생성하는 시뮬레이션을 통해 이와 같은 것을 보여드렸는데, 약간의 프로그래밍을 통해 이 분포를 파악할 수 있는 히스토그램을 작성하여 이 시뮬레이션을 여러 번 반복할 수 있습니다.",
  "model": "DeepL",
  "from_community_srt": "조금 전에 10건의 무작위 리뷰를 만드는 시뮬레이션을 보여드렸지요 조금만 프로그래밍 하면 그걸 반복할 수 있습니다 분포가 어찌될지 감을 잡기 위해 히스토그램을 쌓아 보죠",
  "n_reviews": 0,
  "start": 363.06,
  "end": 375.08
 },
 {
  "input": "Likewise, you could simulate sets of 50 reviews, and get some sense for how probable it would be to see 48 positive and 2 negative.",
  "translatedText": "마찬가지로 50개의 리뷰 세트를 시뮬레이션하여 48개의 긍정적인 리뷰와 2개의 부정적인 리뷰가 표시될 확률을 어느 정도 파악할 수 있습니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 381.66,
  "end": 389.08
 },
 {
  "input": "You see, this is the nice thing about probability.",
  "translatedText": "이것이 바로 확률의 좋은 점입니다.",
  "model": "DeepL",
  "from_community_srt": "같은 방식으로 48/50은 어찌 되는지 보기 위해 50건씩도 돌려 보죠 조금만 프로그래밍해서 어차피 시간 싸움인 확률을 계산하다니 좋은데요 보시듯 수십만 회의 시행 끝에",
  "n_reviews": 0,
  "start": 389.9,
  "end": 391.58
 },
 {
  "input": "A little programming can almost always let you cheat a little and see what the answer is ahead of time by simulating it.",
  "translatedText": "약간의 프로그래밍을 통해 약간의 속임수를 쓰거나 시뮬레이션을 통해 정답을 미리 확인할 수 있는 경우가 대부분입니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 391.96,
  "end": 397.48
 },
 {
  "input": "For example, after a few hundred thousand samples of 50 reviews, assuming the success rate is 95%, it looks like about 26.1% of them would give us this 48 out of 50 review.",
  "translatedText": "예를 들어, 성공률이 95%라고 가정하고 50개의 리뷰 샘플을 수십만 개 생성한 후, 그 중 약 26.1%가 50개 중 48개의 리뷰를 생성할 것으로 보입니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 397.84,
  "end": 408.16
 },
 {
  "input": "Luckily, in this case, an exact formula is not bad at all.",
  "translatedText": "다행히도 이 경우 정확한 공식은 전혀 나쁘지 않습니다.",
  "model": "DeepL",
  "from_community_srt": "성공률이 95%이면 48/50이 나올 확률은 대강 26.1%쯤인 것 같네요 다행히도 이 경우 정확한 공식은 맞아떨어지는 것 같네요 48/50이 나올 정확한 확률은 이렇습니다",
  "n_reviews": 0,
  "start": 409.2,
  "end": 412.44
 },
 {
  "input": "The probability of seeing exactly 48 out of 50 looks like this.",
  "translatedText": "50개 중 정확히 48개를 볼 확률은 다음과 같습니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 412.98,
  "end": 416.82
 },
 {
  "input": "This first term is pronounced 50 choose 48, and it represents the total number of ways that you could take 50 slots and fill out 48 of them.",
  "translatedText": "이 첫 번째 용어는 50 선택 48로 발음되며, 50개의 슬롯을 가져와 그 중 48개를 채울 수 있는 방법의 총 개수를 나타냅니다.",
  "model": "DeepL",
  "from_community_srt": "이 앞부분은 \"50 중 48 택\"이라 읽습니다 (역주: 위 기호는 한국에서 50C48이라 흔히 쓰는 조합입니다) 50개의 칸을 48개로 채우는 모든 경우의 수를 말하죠 예를 들어 '만족'을 처음부터 쭉 쓰고 '불만족'을 맨 끝에",
  "n_reviews": 0,
  "start": 417.74,
  "end": 428.04
 },
 {
  "input": "For example, maybe you start with 48 good reviews and end with 2 bad reviews, or maybe you start with 47 good reviews and then it goes bad good bad, and so on.",
  "translatedText": "예를 들어, 48개의 좋은 리뷰로 시작해서 2개의 나쁜 리뷰로 끝날 수도 있고, 47개의 좋은 리뷰로 시작해서 나쁜 리뷰로 끝날 수도 있고, 좋은 리뷰로 시작해서 나쁜 리뷰로 끝날 수도 있습니다.",
  "model": "DeepL",
  "from_community_srt": "아니면 불만족 - 만족 - 불만족으로 끝내거나...",
  "n_reviews": 0,
  "start": 429.1,
  "end": 438.66
 },
 {
  "input": "In principle, if you were to enumerate every possible way of filling 48 out of 50 slots like this, the total number of these patterns is 50 choose 48, which in this case works out to be 1225.",
  "translatedText": "원칙적으로 50개의 슬롯 중 48개를 채울 수 있는 모든 가능한 방법을 이렇게 열거한다면 이러한 패턴의 총 개수는 50개 선택 48개이며, 이 경우 1225개가 됩니다.",
  "model": "DeepL",
  "from_community_srt": "등등 이렇게 50개의 빈칸을 48개로 채우는 경우의 수는 50 중 48 택으로 이 경우 1225가지입니다 그 뒤에 각각의 리뷰가 남겨질 확률을 곱합니다 '만족' 리뷰를 남길 확률의 48제곱 곱하기",
  "n_reviews": 0,
  "start": 439.1,
  "end": 451.86
 },
 {
  "input": "What do we multiply by this count?",
  "translatedText": "이 수에 무엇을 곱하면 될까요?",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 452.68,
  "end": 454.0
 },
 {
  "input": "Well, it's the probability of any one of these patterns, which is the probability of a single positive review raised to the 48th times the probability of a single negative review squared.",
  "translatedText": "이러한 패턴 중 하나가 발생할 확률로, 긍정적인 리뷰 1개가 나올 확률을 부정적인 리뷰 1개가 나올 확률을 제곱한 값의 48배로 높인 값입니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 454.0,
  "end": 464.82
 },
 {
  "input": "Crucial is that we assume each review is independent of the last, so we can multiply all the probabilities together like this, and with the numbers we have, when you evaluate it, it works out to be 0.261, which matches what we just saw empirically with the simulation.",
  "translatedText": "중요한 것은 각 리뷰가 마지막 리뷰와 독립적이라고 가정하고 모든 확률을 이렇게 곱할 수 있으며, 우리가 가진 숫자로 평가하면 0.261로 계산되어 방금 시뮬레이션을 통해 경험적으로 본 것과 일치한다는 것입니다.",
  "model": "DeepL",
  "from_community_srt": "'불만족' 리뷰를 남길 확률의 제곱이죠 각각의 리뷰가 그 전 리뷰와 독립적이라고 했을 때 이렇게 곱할 수 있다는 건 중요합니다 이걸 계산하면 0.261쯤 되네요 시뮬레이션 결과와 잘 맞아떨어지는군요",
  "n_reviews": 0,
  "start": 465.64,
  "end": 480.22
 },
 {
  "input": "You could also replace this 48 with some other value, and compute the probability of seeing any other number of positive reviews, again assuming a given success rate.",
  "translatedText": "이 48을 다른 값으로 대체하고 다시 주어진 성공률을 가정하여 다른 수의 긍정적인 리뷰가 표시될 확률을 계산할 수도 있습니다.",
  "model": "DeepL",
  "from_community_srt": "48 대신에 다른 값을 넣어도 무방합니다 성공률이 주어져 있다면 어떤 x 값에 대해서도 x/50이 나올 확률을 구할 수 있습니다 그건 그렇고 지금 보고 계시는 게 바로",
  "n_reviews": 0,
  "start": 481.38,
  "end": 491.5
 },
 {
  "input": "What you're looking at right now, by the way, is known in the business as a binomial distribution, one of the most fundamental distributions in probability.",
  "translatedText": "그런데 지금 여러분이 보고 있는 것은 확률의 가장 기본적인 분포 중 하나인 이항 분포로 비즈니스에서 알려져 있습니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 494.76,
  "end": 503.16
 },
 {
  "input": "It comes up whenever you have something like a coin flip, a random event that can go one of two ways, and you repeat it some number of times, and what you want to know is the probability of getting various different totals.",
  "translatedText": "동전 던지기와 같이 두 가지 중 하나로 갈 수 있는 무작위 이벤트가 있을 때마다 나타나며, 이를 몇 번 반복하면 다양한 합계를 얻을 확률을 알 수 있습니다.",
  "model": "DeepL",
  "from_community_srt": "이항 분포의 사례입니다 확률론에서 가장 기본적인 분포 중 하나지요 동전 던지기처럼 두 가지 결과가 있는 확률적 사건을 몇 번 반복했을 때 어떤 결과를 얻을 확률을 구하기 위해 이항 분포가 쓰입니다",
  "n_reviews": 0,
  "start": 503.86,
  "end": 515.2
 },
 {
  "input": "For our purposes, this formula gives us the probability of seeing the data given an assumed success rate, which ultimately we want to somehow use to make judgments about the opposite, the probability of a success rate given the fixed data we see.",
  "translatedText": "우리의 목적을 위해 이 공식은 가정된 성공률이 주어졌을 때 데이터를 볼 확률을 제공하며, 궁극적으로 우리는 그 반대인 고정된 데이터가 주어졌을 때 성공률을 판단하는 데 어떻게든 사용하고자 합니다.",
  "model": "DeepL",
  "from_community_srt": "우리의 경우 성공 확률이 주어졌을 때 특정 리뷰 데이터가 나올 확률을 구하는 데 쓰였죠 하지만 궁극적으로 우리가 알고자 하는 건 반대로 어떤 리뷰 데이터가 있을 때 각 성공 확률의 확률이죠.",
  "n_reviews": 0,
  "start": 516.72,
  "end": 530.86
 },
 {
  "input": "These are related, but definitely distinct.",
  "translatedText": "이들은 서로 연관되어 있지만 확실히 구별됩니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 531.32,
  "end": 533.44
 },
 {
  "input": "To get more in that direction, let's play around with this value of s and see what happens as we change it to different numbers between 0 and 1.",
  "translatedText": "그 방향으로 더 나아가기 위해 이 값을 0과 1 사이의 다른 숫자로 변경하면서 어떤 일이 일어나는지 살펴봅시다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 534.06,
  "end": 542.58
 },
 {
  "input": "The binomial distribution that it produces kind of looks like this pile that's centered around whatever s times 50 is.",
  "translatedText": "이항 분포는 50을 곱한 값을 중심으로 한 더미처럼 보입니다.",
  "model": "DeepL",
  "from_community_srt": "관계는 있지만 분명히 다르죠 감을 좀 더 잡기 위해 이 s 값을 0과 1 사이 값으로 변화시켜 가며 변화를 관찰합시다 이항 분포는 이런 더미 모양을 나타내고 그 가운데에 48/50의 결과가 나올 확률을 나타내는 녹색 막대를 표시했습니다",
  "n_reviews": 0,
  "start": 544.56,
  "end": 550.86
 },
 {
  "input": "The value we care about, the probability of seeing 48 out of 50 reviews, is represented by this highlighted 48th bar.",
  "translatedText": "우리가 중요하게 생각하는 가치, 즉 50개의 리뷰 중 48개의 리뷰가 표시될 확률은 이 강조 표시된 48번째 막대로 표시됩니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 551.46,
  "end": 558.68
 },
 {
  "input": "Let's draw a second plot on the bottom, representing how that value depends on s.",
  "translatedText": "이 값이 s에 따라 어떻게 달라지는지를 나타내는 두 번째 플롯을 하단에 그려 보겠습니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 559.4,
  "end": 564.6
 },
 {
  "input": "When s is equal to 0.96, that value is as high as it's ever going to get.",
  "translatedText": "s가 0.96이면 이 값이 가장 높다는 뜻입니다.",
  "model": "DeepL",
  "from_community_srt": "그럼 아래 쪽 그림에 이 확률이 s 값에 따라 어떻게 변하는지 표시해 보겠습니다 s 값이 0.96일 때 확률이 가장 높군요 이건 우리가 96% 긍정(48/50)이라는 리뷰를 볼 때",
  "n_reviews": 0,
  "start": 565.48,
  "end": 570.32
 },
 {
  "input": "And this should kind of make sense, because when you look at that review of 96%, it should be most likely if the true underlying success rate was 96%.",
  "translatedText": "96%라는 리뷰를 보면 실제 기본 성공률이 96%일 가능성이 가장 높기 때문에 이것은 어느 정도 이해가 될 것입니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 570.84,
  "end": 579.32
 },
 {
  "input": "As s increases, it kind of peters out, going to 0 as s approaches 1, since someone with a perfect success rate would never have those two negative reviews.",
  "translatedText": "성공률이 완벽한 사람은 이 두 개의 부정적인 리뷰를 절대 받지 않을 것이므로, s가 증가함에 따라 s가 1에 가까워지면 0이 되어 점점 작아집니다.",
  "model": "DeepL",
  "from_community_srt": "성공 확률이 96%쯤 되겠거니라고 생각하는 걸 보면 납득이 갑니다 s가 0.96을 넘어서 증가하면 s가 1로 접근함에 따라 확률은 0이 됩니다 성공률이 100%면 불만족을 남기는 이는 없을 테니까요",
  "n_reviews": 0,
  "start": 581.0,
  "end": 590.48
 },
 {
  "input": "Also, as you move to the left, it approaches 0 pretty quickly.",
  "translatedText": "또한 왼쪽으로 이동하면 0에 매우 빠르게 가까워집니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 591.42,
  "end": 594.56
 },
 {
  "input": "By the time you get to s equals 0.8, getting 48 out of 50 reviews by chance is exceedingly rare, it would happen 1 in 1000 times.",
  "translatedText": "S가 0.8이 되면 50개의 리뷰 중 48개를 우연히 얻는다는 것은 1000번 중 1번의 확률로 극히 드문 일입니다.",
  "model": "DeepL",
  "from_community_srt": "또 s가 0로 가면 확률은 0으로 매우 빠르게 떨어집니다 s가 0.8이 될 때쯤 48/50의 확률은 1000번에 1번꼴로 매우 드물어집니다 아래 그래프는 우리가 어떤 s가 얼마나 가능성 있는지를 설명하는 데 괜찮은 출발인 것 같네요",
  "n_reviews": 0,
  "start": 596.9,
  "end": 605.2
 },
 {
  "input": "This plot we have on the bottom is a great start to getting a more quantitative description for which values of s feel more or less plausible.",
  "translatedText": "하단에 있는 이 도표는 어느 정도 그럴듯하게 느껴지는 s 값에 대해 보다 정량적으로 설명할 수 있는 좋은 출발점입니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 606.24,
  "end": 613.38
 },
 {
  "input": "Written down as a formula, what I want you to remember is that as a function of the success rate s, the curve looks like some constant times s to the number of positive reviews times 1 minus s to the number of negative reviews.",
  "translatedText": "수식으로 적어두면, 성공률 s의 함수로서 곡선은 긍정적인 리뷰 수에 상수 곱하기 s와 부정적인 리뷰 수에 마이너스 1을 곱한 값처럼 보인다는 점을 기억하시기 바랍니다.",
  "model": "DeepL",
  "from_community_srt": "기억하셨으면 할 게 성공률이 s라면 그래프는 어떤 상수 × s^(만족 건수) × (1-s)^(불만족 건수)를 나타낸다는 겁니다 이 공식에 따르면 우리에게 480/500처럼 더 많은 리뷰가 주어질수록",
  "n_reviews": 0,
  "start": 614.2,
  "end": 628.08
 },
 {
  "input": "In principle, if we had more data, like 480 positive reviews and 20 negative reviews, the resulting plot would still be centered around 0.96, but it would be smaller and more concentrated.",
  "translatedText": "원칙적으로 480개의 긍정적인 리뷰와 20개의 부정적인 리뷰처럼 더 많은 데이터가 있다면 결과 그래프의 중심은 여전히 0.96이지만, 더 작고 더 집중되어 있을 것입니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 629.1,
  "end": 639.48
 },
 {
  "input": "A good exercise right now would be to see if you could explain why that's the case.",
  "translatedText": "지금 당장 좋은 연습은 왜 그런지 설명할 수 있는지 알아보는 것입니다.",
  "model": "DeepL",
  "from_community_srt": "s 값은 여전히 0.96 안팎이지만 훨씬 더 정확해집니다 여기서 왜 이렇게 되는지 설명해 보시는 건 여러분께 좋은 도움이 될 것 같습니다 그런데 결국 이 그래프 갖고 뭘 하겠다는 걸까요?",
  "n_reviews": 0,
  "start": 639.93,
  "end": 644.22
 },
 {
  "input": "There is a lingering question, though, of what to actually do with these curves.",
  "translatedText": "하지만 이러한 곡선으로 실제로 무엇을 할 수 있을지에 대한 의문이 남아있습니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 645.48,
  "end": 649.48
 },
 {
  "input": "I mean, our goal is to compute the probability that you have a good experience with this seller, so what do you do?",
  "translatedText": "이 판매자에게 좋은 경험이 있을 확률을 계산하는 것이 목표인데, 어떻게 해야 하나요?",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 650.22,
  "end": 656.02
 },
 {
  "input": "Naively, you might think that probability is 96%, since that's where the peak of the graph is, which in a sense is the most likely success rate.",
  "translatedText": "순진하게도 그래프의 정점이 가장 성공 가능성이 높은 곳이기 때문에 확률이 96%라고 생각할 수 있습니다.",
  "model": "DeepL",
  "from_community_srt": "원래 목표는 이 판매처에서 구매하면 좋은 경험을 할 확률이 얼마나 될까를 구하는 거였죠 그래서 어떻게 하실래요? 분명 당신은 96%가 그래프의 꼭대기에 있으니까 확률은 96%라고 생각하실 겁니다",
  "n_reviews": 0,
  "start": 657.0,
  "end": 665.16
 },
 {
  "input": "But think of the example with 10 out of 10 positives.",
  "translatedText": "하지만 10점 만점에 10점이 긍정적인 예시를 생각해 보세요.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 665.62,
  "end": 667.86
 },
 {
  "input": "In that case, the whole binomial formula simplifies to be s to the power 10.",
  "translatedText": "이 경우 전체 이항 공식은 s의 거듭제곱 10으로 단순화됩니다.",
  "model": "DeepL",
  "from_community_srt": "어떻게 보면 96%가 가장 가능성 있긴 합니다 그렇지만 10/10 경우를 떠올려 보세요 이 경우 분포 모두가 s가 1이라고 단순화하는 셈입니다 이 경우의 확률은 s의 10제곱인데",
  "n_reviews": 0,
  "start": 667.86,
  "end": 673.26
 },
 {
  "input": "The probability of seeing 10 consecutive good reviews is the probability of seeing one of them raised to the 10th.",
  "translatedText": "10개의 좋은 리뷰를 연속으로 볼 수 있는 확률은 그 중 하나가 10번째로 올라갈 확률입니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 675.08,
  "end": 680.65
 },
 {
  "input": "The closer the true success rate is to 1, the higher the probability of seeing a 10 out of 10.",
  "translatedText": "실제 성공률이 1에 가까울수록 10점 만점에 10점이 나올 확률이 높아집니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 681.32,
  "end": 686.66
 },
 {
  "input": "Our plot on the bottom only ever increases as s approaches 1.",
  "translatedText": "하단의 플롯은 s가 1에 가까워질수록 증가합니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 687.22,
  "end": 690.98
 },
 {
  "input": "But even if s equals 1 is the value that maximizes this probability, surely you wouldn't feel comfortable saying that you personally have a 100% probability of a good experience with this seller.",
  "translatedText": "하지만 이 확률을 최대화하는 값이 1이라고 해도 개인적으로 이 판매자와 좋은 경험을 할 확률이 100%라고 말하기는 쉽지 않을 것입니다.",
  "model": "DeepL",
  "from_community_srt": "그러면 s가 1에 가까울수록 그 s가 옳을 확률도 커집니다 아래 그래프는 s가 1에 가까워질수록 증가만 하고 있죠 하지만 s=1일 확률이 가장 크긴 하지만 아무리 그래도 이 판매처에서 사기만 하면 100% 만족할 거라는 얘기는 영 찝찝합니다",
  "n_reviews": 0,
  "start": 692.4,
  "end": 702.52
 },
 {
  "input": "Maybe you think that instead we should look for some kind of center of mass of this graph, and that would absolutely be on the right track.",
  "translatedText": "이 그래프에서 어떤 종류의 질량 중심을 찾아야 한다고 생각할 수도 있고, 그것이 옳은 방향이라고 생각할 수도 있습니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 703.46,
  "end": 710.4
 },
 {
  "input": "First, though, we need to explain how to take this expression for the probability of the data we're seeing given a value of s, and get the probability for a value of s, the thing we actually don't know, given the data, the thing we actually know.",
  "translatedText": "하지만 먼저 이 식을 통해 우리가 보고 있는 데이터의 확률인 s값이 주어졌을 때, 우리가 실제로 알지 못하는 데이터인 s값에 대한 확률을 구하는 방법을 설명해야 합니다.",
  "model": "DeepL",
  "from_community_srt": "이러면 당신은 아마 그래프의 무게중심 같은 쪽으로 눈을 돌리겠죠 아주 잘하고 계시네요 그렇지만 우선 우리는 s가 주어졌을 때 어떤 데이터를 얻을 확률을 어떤 데이터가 주어졌을 때 어느 s가 참일 확률로 고쳐야 합니다",
  "n_reviews": 0,
  "start": 711.3,
  "end": 724.88
 },
 {
  "input": "And that requires us to talk about Bayes' rule, and also probability density functions.",
  "translatedText": "이를 위해서는 베이즈 법칙과 확률 밀도 함수에 대해 이야기해야 합니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 725.38,
  "end": 729.98
 },
 {
  "input": "For those, I'll see you in part 2.",
  "translatedText": "이에 대해서는 2부에서 다시 찾아뵙겠습니다.",
  "model": "DeepL",
  "n_reviews": 0,
  "start": 730.62,
  "end": 732.06
 }
]