[
 {
  "input": "I'm assuming that everybody here is coming from part 1.",
  "translatedText": "Saya berasumsi bahwa semua orang di sini berasal dari bagian 1.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 0.0,
  "end": 2.56
 },
 {
  "input": "We were talking about Hamming codes, a way to create a block of data where most of the bits carry a meaningful message, while a few others act as a kind of redundancy, in such a way that if any bit gets flipped, either a message bit or a redundancy bit, anything in this block, a receiver is going to be able to identify that there was an error, and how to fix it.",
  "translatedText": "Kita berbicara tentang kode Hamming, suatu cara untuk membuat blok data yang sebagian besar bitnya membawa pesan yang bermakna, sementara beberapa bit lainnya bertindak sebagai semacam redundansi, sedemikian rupa sehingga jika ada bit yang dibalik, maka akan muncul pesan. bit atau bit redundansi, apa pun di blok ini, penerima akan dapat mengidentifikasi kesalahan yang terjadi, dan cara memperbaikinya.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 3.06,
  "end": 21.24
 },
 {
  "input": "The basic idea presented there was how to use multiple parity checks to binary search your way down to the error.",
  "translatedText": "Ide dasar yang disajikan di sana adalah bagaimana menggunakan beberapa pemeriksaan paritas untuk mencari biner hingga menemukan kesalahan.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 21.88,
  "end": 27.16
 },
 {
  "input": "In that video the goal was to make Hamming codes feel as hands-on and rediscoverable as possible.",
  "translatedText": "Dalam video tersebut, tujuannya adalah untuk membuat kode Hamming terasa mudah dan mudah ditemukan kembali.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 28.98,
  "end": 34.6
 },
 {
  "input": "But as you start to think about actually implementing this, either in software or hardware, that framing may actually undersell how elegant these codes really are.",
  "translatedText": "Namun saat Anda mulai berpikir untuk mengimplementasikannya, baik dalam perangkat lunak maupun perangkat keras, pembingkaian tersebut mungkin meremehkan betapa elegannya kode-kode ini.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 35.18,
  "end": 43.46
 },
 {
  "input": "You might think that you need to write an algorithm that keeps track of all the possible error locations and cuts that group in half with each check, but it's actually way, way simpler than that.",
  "translatedText": "Anda mungkin berpikir bahwa Anda perlu menulis algoritma yang melacak semua kemungkinan lokasi kesalahan dan memotong kelompok itu menjadi dua dengan setiap pemeriksaan, tetapi sebenarnya jauh lebih sederhana dari itu.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 43.92,
  "end": 53.48
 },
 {
  "input": "If you read out the answers to the four parity checks we did in the last video, all as 1s and 0s instead of yeses and nos, it literally spells out the position of the error in binary.",
  "translatedText": "Jika Anda membacakan jawaban atas empat pemeriksaan paritas yang kami lakukan di video terakhir, semuanya dalam angka 1 dan 0, bukan ya dan tidak, maka secara harfiah posisi kesalahan akan dijabarkan dalam biner.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 53.94,
  "end": 64.08
 },
 {
  "input": "For example, the number 7 in binary looks like 0111, essentially saying that it's 4 plus 2 plus 1.",
  "translatedText": "Misalnya, angka 7 dalam biner terlihat seperti 0111, yang pada dasarnya berarti 4 ditambah 2 ditambah 1.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 64.78,
  "end": 71.26
 },
 {
  "input": "And notice where the position 7 sits, it does affect the first of our parity groups, and the second, and the third, but not the last.",
  "translatedText": "Dan perhatikan di mana posisi 7 berada, itu memang mempengaruhi kelompok paritas pertama kita, dan kelompok paritas kedua, dan ketiga, tapi bukan yang terakhir.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 72.54,
  "end": 81.74
 },
 {
  "input": "So reading the results of those four checks from bottom to top indeed does spell out the position of the error.",
  "translatedText": "Jadi membaca hasil keempat pemeriksaan tersebut dari bawah ke atas memang menunjukkan posisi kesalahannya.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 82.22,
  "end": 87.54
 },
 {
  "input": "There's nothing special about the example 7, this works in general, and this makes the logic for implementing the whole scheme in hardware shockingly simple.",
  "translatedText": "Tidak ada yang istimewa dari contoh 7, ini berfungsi secara umum, dan ini membuat logika untuk mengimplementasikan keseluruhan skema pada perangkat keras menjadi sangat sederhana.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 88.32,
  "end": 95.82
 },
 {
  "input": "Now if you want to see why this magic happens, take these 16 index labels for our positions, but instead of writing them in base 10, let's write them all in binary, running from 0000 up to 1111.",
  "translatedText": "Sekarang jika Anda ingin melihat mengapa keajaiban ini terjadi, ambil 16 label indeks ini untuk posisi kita, tapi daripada menuliskannya dalam basis 10, mari kita tulis semuanya dalam biner, mulai dari 0000 hingga 1111.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 97.24,
  "end": 109.88
 },
 {
  "input": "As we put these binary labels back into their boxes, let me emphasize that they are distinct from the data that's actually being sent.",
  "translatedText": "Saat kita mengembalikan label biner ini ke dalam kotaknya, izinkan saya menekankan bahwa label tersebut berbeda dari data yang sebenarnya dikirim.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 110.56,
  "end": 117.8
 },
 {
  "input": "They're nothing more than a conceptual label to help you and me understand where the four parity groups came from.",
  "translatedText": "Itu tidak lebih dari sebuah label konseptual untuk membantu Anda dan saya memahami dari mana empat kelompok paritas itu berasal.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 118.32,
  "end": 123.5
 },
 {
  "input": "The elegance of having everything we're looking at be described in binary is maybe undercut by the confusion of having everything we're looking at being described in binary.",
  "translatedText": "Keanggunan dalam mendeskripsikan segala sesuatu yang kita lihat dalam biner mungkin dilemahkan oleh kebingungan karena segala sesuatu yang kita lihat dijelaskan dalam biner.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 124.14,
  "end": 132.36
 },
 {
  "input": "It's worth it, though.",
  "translatedText": "Tapi itu sepadan.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 133.02,
  "end": 134.12
 },
 {
  "input": "Focus your attention just on that last bit of all of these labels, and then highlight the positions where that final bit is a 1.",
  "translatedText": "Fokuskan perhatian Anda hanya pada bagian terakhir dari semua label ini, lalu sorot posisi di mana bagian terakhir tersebut adalah 1.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 134.8,
  "end": 143.22
 },
 {
  "input": "What we get is the first of our four parity groups, which means you can interpret that first check as asking, hey, if there's an error, is the final bit in the position of that error a 1?",
  "translatedText": "Apa yang kita dapatkan adalah yang pertama dari empat kelompok paritas, yang berarti Anda dapat menafsirkan pemeriksaan pertama itu sebagai pertanyaan, hei, jika ada kesalahan, apakah bit terakhir pada posisi kesalahan itu adalah 1?",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 144.24,
  "end": 155.74
 },
 {
  "input": "Similarly, if you focus on the second to last bit, and highlight all the positions where that's a 1, you get the second parity group from our scheme.",
  "translatedText": "Demikian pula, jika Anda fokus pada bit kedua hingga terakhir, dan menyorot semua posisi yang bernilai 1, Anda mendapatkan grup paritas kedua dari skema kami.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 158.2,
  "end": 166.16
 },
 {
  "input": "In other words, that second check is asking, hey, me again, if there's an error, is the second to last bit of that position a 1?",
  "translatedText": "Dengan kata lain, pengecekan kedua itu menanyakan, hai, sekali lagi, jika ada kesalahan, apakah bit kedua dari posisi terakhir itu adalah 1?",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 166.74,
  "end": 174.5
 },
 {
  "input": "And so on.",
  "translatedText": "Dan seterusnya.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 175.76,
  "end": 176.9
 },
 {
  "input": "The third parity check covers every position whose third to last bit is turned on, and the last one covers the last eight positions, those ones whose highest order bit is a 1.",
  "translatedText": "Pemeriksaan paritas ketiga mencakup setiap posisi yang bit ketiga hingga terakhirnya diaktifkan, dan yang terakhir mencakup delapan posisi terakhir, yaitu posisi yang bit urutan tertingginya adalah 1.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 177.22,
  "end": 188.74
 },
 {
  "input": "Everything we did earlier is the same as answering these four questions, which in turn is the same as spelling out a position in binary.",
  "translatedText": "Semua yang kita lakukan sebelumnya sama dengan menjawab keempat pertanyaan tersebut, yang pada gilirannya sama dengan mengeja posisi dalam biner.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 189.74,
  "end": 197.74
 },
 {
  "input": "I hope this makes two things clearer.",
  "translatedText": "Saya harap ini membuat dua hal menjadi lebih jelas.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 199.62,
  "end": 201.48
 },
 {
  "input": "The first is how to systematically generalize to block sizes that are bigger powers of two.",
  "translatedText": "Yang pertama adalah bagaimana menggeneralisasi secara sistematis ke ukuran blok yang merupakan pangkat dua yang lebih besar.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 202.04,
  "end": 206.46
 },
 {
  "input": "If it takes more bits to describe each position, like six bits to describe 64 spots, then each of those bits gives you one of the parity groups that we need to check.",
  "translatedText": "Jika diperlukan lebih banyak bit untuk mendeskripsikan setiap posisi, seperti enam bit untuk mendeskripsikan 64 titik, maka setiap bit tersebut memberi Anda salah satu grup paritas yang perlu kita periksa.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 206.96,
  "end": 216.68
 },
 {
  "input": "Those of you who watched the chessboard puzzle I did with Matt Parker might find all this exceedingly familiar.",
  "translatedText": "Bagi Anda yang menonton teka-teki papan catur yang saya buat bersama Matt Parker mungkin menganggap semua ini sangat familiar.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 218.4,
  "end": 223.18
 },
 {
  "input": "It's the same core logic, but solving a different problem, and applied to a 64-squared chessboard.",
  "translatedText": "Logika intinya sama, tetapi memecahkan masalah yang berbeda, dan diterapkan pada papan catur berukuran 64 kotak.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 223.66,
  "end": 228.78
 },
 {
  "input": "The second thing I hope this makes clear is why our parity bits are sitting in the positions that are powers of two, for example 1, 2, 4, and 8.",
  "translatedText": "Hal kedua yang saya harap dapat dijelaskan adalah mengapa bit paritas kita berada pada posisi pangkat dua, misalnya 1, 2, 4, dan 8.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 229.88,
  "end": 237.32
 },
 {
  "input": "These are the positions whose binary representation has just a single bit turned on.",
  "translatedText": "Ini adalah posisi yang representasi binernya hanya diaktifkan satu bit.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 238.0,
  "end": 243.0
 },
 {
  "input": "What that means is each of those parity bits sits inside one and only one of the four parity groups.",
  "translatedText": "Artinya, masing-masing bit paritas tersebut berada di dalam satu dan hanya satu dari empat grup paritas.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 243.6,
  "end": 249.46
 },
 {
  "input": "You can also see this in larger examples, where no matter how big you get, each parity bit conveniently touches only one of the groups.",
  "translatedText": "Anda juga dapat melihat ini dalam contoh yang lebih besar, di mana tidak peduli seberapa besar yang Anda dapatkan, setiap bit paritas hanya menyentuh salah satu grup.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 252.04,
  "end": 259.34
 },
 {
  "input": "Once you understand that these parity checks that we've focused so much of our time on are nothing more than a clever way to spell out the position of an error in binary, then we can draw a connection with a different way to think about hamming codes, one that is arguably a lot simpler and more elegant, and which can basically be written down with a single line of code.",
  "translatedText": "Setelah Anda memahami bahwa pemeriksaan paritas yang telah kita fokuskan sebagian besar waktu kita tidak lebih dari cara cerdas untuk menguraikan posisi kesalahan dalam biner, maka kita dapat menghubungkannya dengan cara berpikir yang berbeda tentang hamming. kode, yang bisa dibilang jauh lebih sederhana dan elegan, dan pada dasarnya dapat ditulis dengan satu baris kode.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 265.6,
  "end": 283.24
 },
 {
  "input": "It's based on the XOR function.",
  "translatedText": "Ini didasarkan pada fungsi XOR.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 283.66,
  "end": 285.5
 },
 {
  "input": "XOR, for those of you who don't know, stands for exclusive or.",
  "translatedText": "XOR bagi anda yang belum tahu, singkatan dari Exclusive or.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 286.94,
  "end": 290.22
 },
 {
  "input": "When you take the XOR of two bits, it's going to return a 1 if either one of those bits is turned on, but not if both are turned on or off.",
  "translatedText": "Saat Anda mengambil XOR dari dua bit, itu akan mengembalikan 1 jika salah satu dari bit tersebut diaktifkan, tetapi tidak jika keduanya diaktifkan atau dinonaktifkan.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 290.78,
  "end": 299.36
 },
 {
  "input": "Phrased differently, it's the parity of these two bits.",
  "translatedText": "Dengan kata lain, ini adalah paritas dari dua bit ini.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 300.1,
  "end": 302.98
 },
 {
  "input": "As a math person, I prefer to think about it as addition mod 2.",
  "translatedText": "Sebagai orang matematika, saya lebih suka menganggapnya sebagai mod penjumlahan 2.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 303.54,
  "end": 306.76
 },
 {
  "input": "We also commonly talk about the XOR of two different bit strings, which basically does this component by component.",
  "translatedText": "Kita juga biasa berbicara tentang XOR dari dua string bit yang berbeda, yang pada dasarnya melakukan komponen demi komponen.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 307.36,
  "end": 313.44
 },
 {
  "input": "It's like addition, but where you never carry.",
  "translatedText": "Ini seperti tambahan, tetapi Anda tidak pernah membawanya.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 313.68,
  "end": 315.72
 },
 {
  "input": "Again, the more mathematically inclined might prefer to think of this as adding two vectors and reducing mod 2.",
  "translatedText": "Sekali lagi, mereka yang lebih cenderung matematis mungkin lebih suka menganggap ini sebagai penjumlahan dua vektor dan pengurangan mod 2.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 316.5,
  "end": 322.48
 },
 {
  "input": "If you open up some Python right now and apply the caret operation between two integers, this is what it's doing but to the bit representations of those numbers under the hood.",
  "translatedText": "Jika Anda membuka beberapa Python sekarang dan menerapkan operasi tanda sisipan antara dua bilangan bulat, inilah yang dilakukannya kecuali representasi bit dari angka-angka tersebut.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 323.5,
  "end": 332.94
 },
 {
  "input": "The key point for you and me is that taking the XOR of many different bit strings is effectively a way to compute the parodies of a bunch of separate groups, like so with the columns, all in one fell swoop.",
  "translatedText": "Poin kuncinya bagi Anda dan saya adalah bahwa mengambil XOR dari banyak string bit yang berbeda secara efektif merupakan cara untuk menghitung parodi dari sekelompok grup terpisah, seperti halnya dengan kolom, semuanya dalam satu gerakan.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 334.96,
  "end": 347.14
 },
 {
  "input": "This gives us a rather snazzy way to think about the multiple parity checks from our Hamming code algorithm as all being packaged together into one single operation.",
  "translatedText": "Ini memberi kita cara yang agak menarik untuk memikirkan tentang beberapa pemeriksaan paritas dari algoritma kode Hamming karena semuanya dikemas bersama menjadi satu operasi tunggal.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 351.26,
  "end": 358.78
 },
 {
  "input": "Though at first glance it does look very different.",
  "translatedText": "Meski sekilas memang terlihat sangat berbeda.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 359.48,
  "end": 362.18
 },
 {
  "input": "Specifically write down the 16 positions in binary, like we had before, and now highlight the positions where the message bit is turned on to a 1, and then collect these positions into one big column and take the XOR.",
  "translatedText": "Secara khusus tuliskan 16 posisi dalam biner, seperti yang kita lakukan sebelumnya, dan sekarang sorot posisi di mana bit pesan diubah menjadi 1, lalu kumpulkan posisi-posisi ini ke dalam satu kolom besar dan ambil XOR.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 362.82,
  "end": 377.1
 },
 {
  "input": "You can probably guess that the 4 bits sitting at the bottom as a result are the same as the 4 parity checks we've come to know and love, but take a moment to actually think about why exactly.",
  "translatedText": "Anda mungkin dapat menebak bahwa 4 bit yang berada di bagian bawah sebagai hasilnya sama dengan 4 pemeriksaan paritas yang telah kita kenal dan sukai, tetapi luangkan waktu sejenak untuk memikirkan alasan sebenarnya.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 379.26,
  "end": 389.2
 },
 {
  "input": "This last column, for example, is counting all of the positions whose last bit is a 1, but we're already limited only to the highlighted positions, so it's effectively counting how many highlighted positions came from the first parity group.",
  "translatedText": "Kolom terakhir ini, misalnya, menghitung semua posisi yang bit terakhirnya adalah 1, namun kita sudah dibatasi hanya pada posisi yang disorot, sehingga secara efektif menghitung berapa banyak posisi yang disorot yang berasal dari grup paritas pertama.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 392.22,
  "end": 405.76
 },
 {
  "input": "Does that make sense?",
  "translatedText": "Apakah itu masuk akal?",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 406.24,
  "end": 406.8
 },
 {
  "input": "Likewise, the next column counts how many positions are in the second parity group, the positions whose second to last bit is a 1, and which are also highlighted, and so on.",
  "translatedText": "Demikian pula, kolom berikutnya menghitung berapa banyak posisi dalam grup paritas kedua, posisi yang bit kedua hingga terakhirnya adalah 1, dan yang juga disorot, dan seterusnya.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 409.08,
  "end": 420.0
 },
 {
  "input": "It's really just a small shift in perspective on the same thing we've been doing.",
  "translatedText": "Ini hanyalah perubahan kecil dalam perspektif terhadap hal yang sama yang telah kita lakukan.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 420.26,
  "end": 423.96
 },
 {
  "input": "And so you know where it goes from here.",
  "translatedText": "Jadi Anda tahu ke mana perginya setelah ini.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 427.76,
  "end": 429.6
 },
 {
  "input": "The sender is responsible for toggling some of the special parity bits to make sure the sum works out to be 0000.",
  "translatedText": "Pengirim bertanggung jawab untuk mengubah beberapa bit paritas khusus untuk memastikan jumlahnya menjadi 0000.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 430.0,
  "end": 436.56
 },
 {
  "input": "Now once we have it like this, this gives us a really nice way to think about why these four resulting bits at the bottom directly spell out the position of an error.",
  "translatedText": "Sekarang setelah kita memilikinya seperti ini, ini memberi kita cara yang sangat bagus untuk memikirkan mengapa keempat bit yang dihasilkan di bawah ini secara langsung menguraikan posisi kesalahan.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 439.04,
  "end": 447.58
 },
 {
  "input": "Let's say some bit in this block gets toggled from a 0 to a 1.",
  "translatedText": "Katakanlah beberapa bit di blok ini diubah dari 0 menjadi 1.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 448.46,
  "end": 451.86
 },
 {
  "input": "What that means is that the position of that bit is now going to be included in the total XOR, which changes the sum from being 0 to instead being this newly included value, the position of the error.",
  "translatedText": "Artinya adalah posisi bit tersebut sekarang akan dimasukkan dalam total XOR, yang mengubah jumlah dari 0 menjadi nilai yang baru dimasukkan, posisi kesalahan.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 452.6,
  "end": 463.82
 },
 {
  "input": "Slightly less obviously, the same is true if there's an error that changes a 1 to a 0.",
  "translatedText": "Sedikit kurang jelas, hal yang sama juga berlaku jika ada kesalahan yang mengubah 1 menjadi 0.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 464.46,
  "end": 469.36
 },
 {
  "input": "You see, if you add a bit string together twice, it's the same as not having it there at all, basically because in this world 1 plus 1 equals 0.",
  "translatedText": "Soalnya, jika Anda menambahkan sedikit string dua kali, itu sama saja dengan tidak memilikinya sama sekali, pada dasarnya karena di dunia ini 1 tambah 1 sama dengan 0.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 470.18,
  "end": 477.94
 },
 {
  "input": "So adding a copy of this position to the total sum has the same effect as we're moving it.",
  "translatedText": "Jadi menambahkan salinan posisi ini ke jumlah total memiliki efek yang sama seperti kita memindahkannya.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 478.92,
  "end": 484.3
 },
 {
  "input": "And that effect, again, is that the total result at the bottom here spells out the position of the error.",
  "translatedText": "Dan efeknya, sekali lagi, adalah hasil total di bawah ini menjelaskan posisi kesalahannya.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 485.16,
  "end": 490.7
 },
 {
  "input": "To illustrate how elegant this is, let me show that one line of Python code I referenced before, which will capture almost all of the logic on the receiver's end.",
  "translatedText": "Untuk mengilustrasikan betapa elegannya hal ini, izinkan saya menunjukkan satu baris kode Python yang saya referensikan sebelumnya, yang akan menangkap hampir semua logika di pihak penerima.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 493.04,
  "end": 501.44
 },
 {
  "input": "We'll start by creating a random array of 16 1s and 0s to simulate the data block, and I'll give it the name bits, but of course in practice this would be something we're receiving from a sender, and instead of being random it would be carrying 11 data bits together with 5 parity bits.",
  "translatedText": "Kita akan mulai dengan membuat array acak 16 1 dan 0 untuk mensimulasikan blok data, dan saya akan memberinya nama bit, tapi tentu saja dalam praktiknya ini akan menjadi sesuatu yang kita terima dari pengirim, dan bukannya karena acak, ia akan membawa 11 bit data bersama dengan 5 bit paritas.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 502.08,
  "end": 517.4
 },
 {
  "input": "If I call the function enumerateBits, what it does is pair together each of those bits with a corresponding index, in this case running from 0 up to 15.",
  "translatedText": "Jika saya memanggil fungsi enumerateBits, yang dilakukannya adalah memasangkan masing-masing bit tersebut dengan indeks yang sesuai, dalam hal ini berjalan dari 0 hingga 15.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 518.12,
  "end": 527.0
 },
 {
  "input": "So if we then create a list that loops over all of these pairs, pairs that look like i, and then we pull out just the i value, just the index, well it's not that exciting, we just get back those indices 0 through 15.",
  "translatedText": "Jadi jika kita kemudian membuat daftar yang mengulang semua pasangan ini, pasangan yang terlihat seperti i, dan kemudian kita hanya mengeluarkan nilai i, hanya indeksnya, itu tidak terlalu menarik, kita hanya mendapatkan kembali indeks tersebut 0 sampai 15.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 528.18,
  "end": 541.34
 },
 {
  "input": "But if we add on the condition to only do this if bit, meaning if that bit is a 1 and not a 0, well then it pulls out only the positions where the corresponding bit is turned on.",
  "translatedText": "Tetapi jika kita menambahkan kondisi untuk hanya melakukan ini jika bit, yang berarti jika bit tersebut adalah 1 dan bukan 0, maka bit tersebut hanya akan menarik keluar posisi di mana bit terkait diaktifkan.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 541.68,
  "end": 552.66
 },
 {
  "input": "In this case it looks like those positions are 0, 4, 6, 9, etc.",
  "translatedText": "Dalam hal ini sepertinya posisi tersebut adalah 0, 4, 6, 9, dst.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 553.38,
  "end": 557.96
 },
 {
  "input": "What we want is to collect together all of those positions, the positions of the bits that are turned on, and then XOR them together.",
  "translatedText": "Apa yang kita inginkan adalah mengumpulkan semua posisi tersebut, posisi bit-bit yang diaktifkan, dan kemudian melakukan XOR bersama-sama.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 559.98,
  "end": 567.24
 },
 {
  "input": "To do this in Python, let me first import a couple helpful functions.",
  "translatedText": "Untuk melakukan ini dengan Python, izinkan saya mengimpor beberapa fungsi bermanfaat terlebih dahulu.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 569.18,
  "end": 573.22
 },
 {
  "input": "That way we can call reduce() on this list, and use the XOR function to reduce it.",
  "translatedText": "Dengan begitu kita bisa memanggil pengurangan() pada daftar ini, dan menggunakan fungsi XOR untuk menguranginya.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 573.9,
  "end": 578.7
 },
 {
  "input": "This basically eats its way through the list, taking XORs along the way.",
  "translatedText": "Ini pada dasarnya memakan seluruh daftar, mengambil XOR di sepanjang jalan.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 579.1,
  "end": 582.68
 },
 {
  "input": "If you prefer, you can explicitly write out that XOR function without having to import it from anywhere.",
  "translatedText": "Jika mau, Anda dapat menulis fungsi XOR tersebut secara eksplisit tanpa harus mengimpornya dari mana pun.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 584.8,
  "end": 589.44
 },
 {
  "input": "So at the moment it looks like if we do this on our random block of 16 bits, it returns 9, which has the binary representation 1001.",
  "translatedText": "Jadi saat ini sepertinya jika kita melakukan ini pada blok acak 16 bit, ia akan mengembalikan 9, yang memiliki representasi biner 1001.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 591.94,
  "end": 601.28
 },
 {
  "input": "We won't do it here, but you could write a function where the sender uses that binary representation to set the four parity bits as needed, ultimately getting this block to a state where running this line of code on the full list of bits returns a 0.",
  "translatedText": "Kami tidak akan melakukannya di sini, tetapi Anda dapat menulis fungsi di mana pengirim menggunakan representasi biner tersebut untuk mengatur empat bit paritas sesuai kebutuhan, yang pada akhirnya membuat blok ini ke keadaan di mana menjalankan baris kode ini pada daftar bit lengkap akan kembali sebuah 0.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 601.98,
  "end": 615.46
 },
 {
  "input": "This would be considered a well-prepared block.",
  "translatedText": "Ini akan dianggap sebagai blok yang dipersiapkan dengan baik.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 616.08,
  "end": 618.2
 },
 {
  "input": "What's cool is that if we toggle any one of the bits in this list, simulating a random error from noise, then if you run this same line of code, it prints out that error.",
  "translatedText": "Yang keren adalah jika kita mengganti salah satu bit dalam daftar ini, menyimulasikan kesalahan acak dari noise, lalu jika Anda menjalankan baris kode yang sama, kesalahan tersebut akan dicetak.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 619.88,
  "end": 630.22
 },
 {
  "input": "Isn't that neat?",
  "translatedText": "Bukankah itu rapi?",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 630.96,
  "end": 631.52
 },
 {
  "input": "You could get this block from out of the blue, run this single line on it, and it'll automatically spit out the position of an error, or a 0 if there wasn't any.",
  "translatedText": "Anda bisa mendapatkan blok ini secara tiba-tiba, menjalankan satu baris ini di atasnya, dan secara otomatis akan memunculkan posisi kesalahan, atau 0 jika tidak ada.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 631.82,
  "end": 641.06
 },
 {
  "input": "And there's nothing special about the size 16 here.",
  "translatedText": "Dan tidak ada yang istimewa dari ukuran 16 di sini.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 642.5,
  "end": 645.2
 },
 {
  "input": "The same line of code would work if you had a list of, say, 256 bits.",
  "translatedText": "Baris kode yang sama akan berfungsi jika Anda memiliki daftar, katakanlah, 256 bit.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 645.4,
  "end": 649.86
 },
 {
  "input": "Needless to say, there is more code to write here, like doing the meta parity check to detect 2-bit errors, but the idea is that almost all of the core logic from our scheme comes down to a single XOR reduction.",
  "translatedText": "Tak perlu dikatakan, ada lebih banyak kode untuk ditulis di sini, seperti melakukan pemeriksaan meta paritas untuk mendeteksi kesalahan 2-bit, namun idenya adalah bahwa hampir semua logika inti dari skema kita turun ke pengurangan XOR tunggal.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 651.88,
  "end": 663.76
 },
 {
  "input": "Now, depending on your comfort with binary and XORs and software in general, you may either find this perspective a little bit confusing, or so much more elegant and simple that you're wondering why we didn't just start with it from the get-go.",
  "translatedText": "Sekarang, tergantung pada kenyamanan Anda dengan biner dan XOR serta perangkat lunak secara umum, Anda mungkin menganggap perspektif ini sedikit membingungkan, atau jauh lebih elegan dan sederhana sehingga Anda bertanya-tanya mengapa kami tidak memulainya dari awal. -pergi.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 666.12,
  "end": 678.42
 },
 {
  "input": "Loosely speaking, the multiple parity check perspective is easier to think about when implementing Hamming codes in hardware very directly, and the XOR perspective is easiest to think about when doing it in software, from kind of a higher level.",
  "translatedText": "Secara longgar, perspektif pemeriksaan paritas berganda lebih mudah untuk dipikirkan ketika mengimplementasikan kode Hamming pada perangkat keras secara langsung, dan perspektif XOR paling mudah untuk dipikirkan ketika melakukannya dalam perangkat lunak, dari tingkat yang lebih tinggi.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 679.14,
  "end": 690.5
 },
 {
  "input": "The first one is easiest to actually do by hand, and I think it does a better job instilling the core intuition underlying all of this, which is that the information required to locate a single error is related to the log of the size of the block, or in other words, it grows one bit at a time as the block size doubles.",
  "translatedText": "Yang pertama paling mudah dilakukan dengan tangan, dan menurut saya ini lebih baik dalam menanamkan intuisi inti yang mendasari semua ini, yaitu bahwa informasi yang diperlukan untuk menemukan satu kesalahan terkait dengan log ukuran blok. , atau dengan kata lain, ia bertambah sedikit demi sedikit seiring dengan bertambahnya ukuran blok.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 691.36,
  "end": 710.0
 },
 {
  "input": "The relevant fact here is that that information directly corresponds to how much redundancy we need.",
  "translatedText": "Fakta yang relevan di sini adalah bahwa informasi tersebut secara langsung berhubungan dengan seberapa banyak redundansi yang kita butuhkan.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 711.02,
  "end": 716.06
 },
 {
  "input": "That's really what runs against most people's knee-jerk reaction when they first think about making a message resilient to errors, where usually copying the whole message is the first instinct that comes to mind.",
  "translatedText": "Hal itulah yang bertentangan dengan reaksi spontan kebanyakan orang ketika mereka pertama kali berpikir untuk membuat sebuah pesan tahan terhadap kesalahan, di mana biasanya menyalin seluruh pesan adalah naluri pertama yang terlintas dalam pikiran.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 716.66,
  "end": 726.54
 },
 {
  "input": "And then, by the way, there is this whole other way that you sometimes see Hamming codes presented, where you multiply the message by one big matrix.",
  "translatedText": "Lalu, ada cara lain yang terkadang Anda lihat menampilkan kode Hamming, yaitu mengalikan pesan dengan satu matriks besar.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 727.5,
  "end": 734.0
 },
 {
  "input": "It's kind of nice because it relates it to the broader family of linear codes, but I think that gives almost no intuition for where it comes from or how it scales.",
  "translatedText": "Agak bagus karena menghubungkannya dengan kelompok kode linier yang lebih luas, tapi menurut saya hal itu hampir tidak memberikan intuisi tentang dari mana asalnya atau bagaimana skalanya.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 734.67,
  "end": 743.06
 },
 {
  "input": "And speaking of scaling, you might notice that the efficiency of this scheme only gets better as we increase the block size.",
  "translatedText": "Dan berbicara tentang penskalaan, Anda mungkin memperhatikan bahwa efisiensi skema ini semakin baik seiring dengan peningkatan ukuran blok.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 745.2,
  "end": 751.16
 },
 {
  "input": "For example, we saw that with 256 bits, you're using only 3% of that space for redundancy, and it just keeps getting better from there.",
  "translatedText": "Misalnya, kita melihat bahwa dengan 256 bit, Anda hanya menggunakan 3% dari ruang tersebut untuk redundansi, dan hal tersebut terus menjadi lebih baik dari sana.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 755.0,
  "end": 762.66
 },
 {
  "input": "As the number of parity bits grows one by one, the block size keeps doubling.",
  "translatedText": "Ketika jumlah bit paritas bertambah satu per satu, ukuran blok terus berlipat ganda.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 763.3,
  "end": 767.34
 },
 {
  "input": "And if you take that to an extreme, you could have a block with, say, a million bits, where you would quite literally be playing 20 questions with your parity checks, and it uses only 21 parity bits.",
  "translatedText": "Dan jika Anda menganggapnya ekstrem, Anda bisa memiliki blok dengan, katakanlah, satu juta bit, di mana Anda benar-benar akan memainkan 20 pertanyaan dengan pemeriksaan paritas Anda, dan blok tersebut hanya menggunakan 21 bit paritas.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 769.0,
  "end": 780.02
 },
 {
  "input": "And if you step back to think about looking at a million bits and locating a single error, that genuinely feels crazy.",
  "translatedText": "Dan jika Anda mundur sejenak untuk berpikir tentang melihat sejuta bit dan menemukan satu kesalahan, itu benar-benar terasa gila.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 780.74,
  "end": 787.06
 },
 {
  "input": "The problem, of course, is that with a larger block, the probability of seeing more than one or two bit errors goes up, and Hamming codes do not handle anything beyond that.",
  "translatedText": "Masalahnya, tentu saja, dengan blok yang lebih besar, kemungkinan melihat lebih dari satu atau dua kesalahan bit akan meningkat, dan kode Hamming tidak dapat menangani apa pun selain itu.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 788.2,
  "end": 797.66
 },
 {
  "input": "So in practice, what you'd want is to find the right size so that the probability of too many bit flips isn't too high.",
  "translatedText": "Jadi dalam praktiknya, yang Anda inginkan adalah menemukan ukuran yang tepat sehingga kemungkinan terjadinya terlalu banyak bit flips tidak terlalu tinggi.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 798.32,
  "end": 804.3
 },
 {
  "input": "Also, in practice, errors tend to come in little bursts, which would totally ruin a single block, so one common tactic to help spread out a burst of errors across many different blocks is to interlace those blocks, like this, before they're sent out or stored.",
  "translatedText": "Selain itu, dalam praktiknya, kesalahan cenderung terjadi dalam beberapa saat, yang akan merusak total satu blok, jadi salah satu taktik umum untuk membantu menyebarkan ledakan kesalahan ke banyak blok yang berbeda adalah dengan menjalin blok-blok tersebut, seperti ini, sebelum mereka terjadi. dikirim atau disimpan.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 806.6,
  "end": 820.98
 },
 {
  "input": "Then again, a lot of this is rendered completely moot by more modern codes, like the much more commonly used Reed-Solomon algorithm, which handles burst errors particularly well, and it can be tuned to be resilient to a larger number of errors per block.",
  "translatedText": "Selain itu, banyak dari hal ini yang dianggap sepenuhnya diperdebatkan oleh kode-kode yang lebih modern, seperti algoritma Reed-Solomon yang jauh lebih umum digunakan, yang menangani error burst dengan sangat baik, dan dapat disesuaikan agar tahan terhadap jumlah error yang lebih besar per blok.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 825.58,
  "end": 838.82
 },
 {
  "input": "But that's a topic for another time.",
  "translatedText": "Tapi itu topik untuk lain waktu.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 839.36,
  "end": 841.34
 },
 {
  "input": "In his book The Art of Doing Science and Engineering, Hamming is wonderfully candid about just how meandering his discovery of this code was.",
  "translatedText": "Dalam bukunya The Art of Doing Science and Engineering, Hamming sangat berterus terang tentang betapa berliku-liku penemuan kode ini.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 842.5,
  "end": 849.94
 },
 {
  "input": "He first tried all sorts of different schemes involving organizing the bits into parts of a higher dimensional lattice and strange things like this.",
  "translatedText": "Dia pertama kali mencoba segala macam skema berbeda yang melibatkan pengorganisasian bit-bit menjadi bagian-bagian kisi dimensi yang lebih tinggi dan hal-hal aneh seperti ini.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 850.62,
  "end": 857.78
 },
 {
  "input": "The idea that it might be possible to get parity checks to conspire in a way that spells out the position of an error only came to Hamming when he stepped back after a bunch of other analysis and asked, okay, what is the most efficient I could conceivably be about this?",
  "translatedText": "Gagasan bahwa mungkin saja pemeriksaan paritas berkonspirasi sedemikian rupa sehingga menjelaskan posisi kesalahan hanya muncul di benak Hamming ketika dia mundur setelah serangkaian analisis lain dan bertanya, oke, apa cara paling efisien yang bisa saya lakukan? mungkin tentang ini?",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 858.3,
  "end": 871.52
 },
 {
  "input": "He was also candid about how important it was that parity checks were already on his mind, which would have been way less common back in the 1940s than it is today.",
  "translatedText": "Dia juga berterus terang tentang betapa pentingnya pemeriksaan paritas yang sudah ada dalam pikirannya, yang mana hal ini jauh lebih jarang dilakukan pada tahun 1940an dibandingkan saat ini.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 872.62,
  "end": 881.22
 },
 {
  "input": "There are like half a dozen times throughout this book that he references the Louis Pasteur quote, luck favors a prepared mind.",
  "translatedText": "Ada setengah lusin kali dalam buku ini dia merujuk pada kutipan Louis Pasteur, keberuntungan berpihak pada pikiran yang siap.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 881.92,
  "end": 888.22
 },
 {
  "input": "Clever ideas often look deceptively simple in hindsight, which makes them easy to underappreciate.",
  "translatedText": "Ide-ide cerdas sering kali terlihat sederhana jika dipikir-pikir, sehingga mudah untuk kurang dihargai.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 889.32,
  "end": 894.3
 },
 {
  "input": "Right now my honest hope is that Hamming codes, or at least the possibility of such codes, feels almost obvious to you.",
  "translatedText": "Saat ini harapan jujur saya adalah bahwa kode Hamming, atau setidaknya kemungkinan kode tersebut, terasa hampir jelas bagi Anda.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 894.96,
  "end": 901.3
 },
 {
  "input": "But you shouldn't fool yourself into thinking that they actually are obvious, because they definitely aren't.",
  "translatedText": "Namun Anda tidak boleh membodohi diri sendiri dengan berpikir bahwa hal tersebut sebenarnya sudah jelas, karena sebenarnya tidak.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 901.66,
  "end": 906.82
 },
 {
  "input": "Part of the reason that clever ideas look deceptively easy is that we only ever see the final result, cleaning up what was messy, never mentioning all of the wrong turns, underselling just how vast the space of explorable possibilities is at the start of a problem solving process, all of that.",
  "translatedText": "Salah satu alasan mengapa ide-ide cerdas terlihat mudah adalah karena kita hanya melihat hasil akhirnya, membereskan apa yang berantakan, tidak pernah menyebutkan semua hal yang salah, meremehkan betapa luasnya ruang kemungkinan yang dapat dieksplorasi pada awal sebuah masalah. proses penyelesaian, semua itu.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 907.88,
  "end": 922.86
 },
 {
  "input": "But this is true in general.",
  "translatedText": "Namun hal ini berlaku secara umum.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 923.82,
  "end": 924.9
 },
 {
  "input": "I think for some special inventions, there's a second, deeper reason that we underappreciate them.",
  "translatedText": "Saya pikir untuk beberapa penemuan khusus, ada alasan kedua yang lebih dalam sehingga kita kurang menghargainya.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 924.9,
  "end": 930.04
 },
 {
  "input": "Thinking of information in terms of bits had only really coalesced into a full theory by 1948, with Claude Shannon's seminal paper on information theory.",
  "translatedText": "Memikirkan informasi dalam bentuk potongan-potongan baru benar-benar menyatu menjadi teori penuh pada tahun 1948, dengan makalah penting Claude Shannon tentang teori informasi.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 930.84,
  "end": 938.64
 },
 {
  "input": "This was essentially concurrent with when Hamming developed his algorithm.",
  "translatedText": "Hal ini pada dasarnya bersamaan dengan ketika Hamming mengembangkan algoritmanya.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 939.28,
  "end": 942.54
 },
 {
  "input": "This was the same foundational paper that showed, in a certain sense, that efficient error correction is always possible, no matter how high the probability of bit flips, at least in theory.",
  "translatedText": "Ini adalah makalah dasar yang sama yang menunjukkan, dalam arti tertentu, bahwa koreksi kesalahan yang efisien selalu mungkin dilakukan, tidak peduli seberapa tinggi kemungkinan pembalikan bit, setidaknya secara teori.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 943.3,
  "end": 952.9
 },
 {
  "input": "Shannon and Hamming, by the way, shared an office in Bell Labs, despite working on very different things, which hardly seems coincidental here.",
  "translatedText": "Omong-omong, Shannon dan Hamming berbagi kantor di Bell Labs, meskipun mengerjakan hal-hal yang sangat berbeda, yang sepertinya bukan suatu kebetulan di sini.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 953.7,
  "end": 961.16
 },
 {
  "input": "Fast forward several decades, and these days, many of us are so immersed in thinking about bits and information that it's easy to overlook just how distinct this way of thinking was.",
  "translatedText": "Beberapa dekade kemudian, dan saat ini, banyak dari kita yang begitu tenggelam dalam pemikiran tentang hal-hal kecil dan informasi sehingga mudah untuk mengabaikan betapa berbedanya cara berpikir ini.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 962.38,
  "end": 972.34
 },
 {
  "input": "Ironically, the ideas that most profoundly shape the ways that a future generation thinks will end up looking to that future generation simpler than they really are.",
  "translatedText": "Ironisnya, ide-ide yang secara mendalam membentuk cara berpikir generasi masa depan akan membuat generasi masa depan terlihat lebih sederhana daripada yang sebenarnya.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 973.1,
  "end": 982.26
 }
]