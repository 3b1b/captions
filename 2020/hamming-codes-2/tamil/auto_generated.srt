1
00:00:00,000 --> 00:00:08,620
ஒரு சிடி அல்லது டிவிடியை கீறுவது எப்படி

2
00:00:08,620 --> 00:00:10,900
சாத்தியம் என்று நீங்கள் எப்போதாவது யோசித்திருக்கிறீர்களா?

3
00:00:10,900 --> 00:00:15,280
கீறல் உண்மையில் வட்டில் உள்ள 1s மற்றும் 0s ஐ பாதிக்கிறது,

4
00:00:15,280 --> 00:00:20,500
எனவே அது சேமிக்கப்பட்டவற்றிலிருந்து வேறுபட்ட தரவைப் படிக்கிறது, ஆனால் அது உண்மையில்

5
00:00:20,500 --> 00:00:26,540
கீறப்படாவிட்டால், அது படிக்கும் பிட்கள் துல்லியமாக குறியிடப்பட்ட அதே கோப்பில் டிகோட்

6
00:00:26,540 --> 00:00:28,400
செய்யப்படும், a பிட் நகலுக்கான பிட், அந்த பிழைகள் இருந்தபோதிலும்.

7
00:00:28,400 --> 00:00:32,800
கணித புத்திசாலித்தனத்தின் முழு குவியலும் உள்ளது, இது தரவுகளை சேமிக்க

8
00:00:32,800 --> 00:00:36,840
அனுமதிக்கிறது, மேலும் முக்கியமாக தரவை அனுப்புகிறது, பிழைகளை எதிர்க்கும் வகையில்.

9
00:00:36,840 --> 00:00:41,480
சரி, சரி, உண்மையில் இதைச் செய்வதற்கான வழியைக்

10
00:00:41,480 --> 00:00:42,480
கொண்டு வருவதற்கு அவ்வளவு புத்திசாலித்தனம் தேவையில்லை.

11
00:00:42,480 --> 00:00:47,660
வீடியோ அல்லது ஒலி அல்லது உரை, சில குறியீடு, ஒரு படம், எதுவாக இருந்தாலும்,

12
00:00:47,660 --> 00:00:50,960
எந்தக் கோப்பும் இறுதியில் 1 வி மற்றும் 0 விகளின் சில வரிசையாகும்.

13
00:00:50,960 --> 00:00:55,340
புரட்டப்படும் எந்த பிட்டையும் சரிசெய்வதற்கான எளிய உத்தி,

14
00:00:55,340 --> 00:00:57,780
ஒவ்வொரு பிட்டின் மூன்று பிரதிகளை சேமிப்பதாகும்.

15
00:00:57,780 --> 00:01:02,240
இந்தக் கோப்பைப் படிக்கும் இயந்திரம், இந்த மூன்று நகல்களையும்

16
00:01:02,240 --> 00:01:07,440
ஒப்பிட்டு, முரண்பாடுகள் ஏற்படும் போதெல்லாம், 3ல் 2ஐப் பெறலாம்.

17
00:01:07,440 --> 00:01:11,560
ஆனால் இதன் பொருள் என்னவென்றால், பணிநீக்கத்திற்கு உங்கள் மூன்றில் இரண்டு பங்கு இடத்தைப் பயன்படுத்துகிறது.

18
00:01:11,560 --> 00:01:15,360
அப்படியிருந்தும், அந்த இடங்கள் அனைத்திற்கும், ஒன்றுக்கு மேற்பட்ட பிட்கள்

19
00:01:15,360 --> 00:01:18,120
புரட்டப்பட்டால் என்ன நடக்கும் என்பதற்கு வலுவான உத்தரவாதம் இல்லை.

20
00:01:18,120 --> 00:01:21,960
மிகவும் சுவாரஸ்யமான கேள்வி என்னவென்றால், அதை எவ்வாறு உருவாக்குவது என்பது,

21
00:01:21,960 --> 00:01:24,740
முடிந்தவரை சிறிய இடத்தை விட்டுவிட்டு பிழைகளை சரிசெய்ய முடியும்.

22
00:01:24,740 --> 00:01:28,500
எடுத்துக்காட்டாக, இந்த வீடியோவைப் பற்றி நீங்கள் அறியும் முறையைப் பயன்படுத்தி, உங்கள் தரவை 256-பிட் தொகுதிகளில்

23
00:01:28,500 --> 00:01:35,840
சேமிக்கலாம், அங்கு ஒவ்வொரு தொகுதியும் 9 பிட்கள், 9! ஒரு வகையான பணிநீக்கமாக செயல்பட, மற்ற

24
00:01:35,840 --> 00:01:41,000
247 பிட்கள் நீங்கள் விரும்பும் அர்த்தமுள்ள செய்தி அல்லது தரவை எடுத்துச் செல்ல இலவசம்.

25
00:01:41,000 --> 00:01:44,740
இங்கு ஏதேனும் பிட் புரட்டப்பட்டால், இந்த பிளாக்கைப் பார்ப்பதன் மூலம், அதற்கு மேல்

26
00:01:44,740 --> 00:01:49,640
எதுவும் இல்லை, ஒரு இயந்திரம் பிழை இருப்பதையும், துல்லியமாக அது எங்குள்ளது என்பதையும்

27
00:01:49,640 --> 00:01:53,120
அடையாளம் காண முடியும், அதை எவ்வாறு சரிசெய்வது என்பது அவருக்குத் தெரியும். .

28
00:01:53,140 --> 00:01:55,540
நேர்மையாக, அது மந்திரம் போல் உணர்கிறது.

29
00:01:55,540 --> 00:01:59,400
இந்த குறிப்பிட்ட திட்டத்திற்கு, இரண்டு பிட்கள் புரட்டப்பட்டால், இயந்திரம் குறைந்தபட்சம் இரண்டு பிழைகள்

30
00:01:59,400 --> 00:02:03,180
இருப்பதைக் கண்டறிய முடியும், இருப்பினும் அவற்றை எவ்வாறு சரிசெய்வது என்று தெரியவில்லை.

31
00:02:03,180 --> 00:02:08,140
வெவ்வேறு அளவுகள் கொண்ட தொகுதிகளுக்கு இது எவ்வாறு அளவிடப்படுகிறது என்பதைப் பற்றி சிறிது நேரம் கழித்து பேசுவோம்.

32
00:02:08,140 --> 00:02:12,620
இது போன்ற பிழைகளை சரிசெய்ய உங்களை அனுமதிக்கும் முறைகள்,

33
00:02:12,620 --> 00:02:13,880
போதுமான அளவு, பிழை திருத்தக் குறியீடுகளாக அறியப்படுகின்றன.

34
00:02:13,880 --> 00:02:18,220
கடந்த நூற்றாண்டின் சிறந்த பகுதிக்கு, இந்தத் துறையானது வியக்கத்தக்க ஆழமான கணிதத்தின் மிகவும்

35
00:02:18,220 --> 00:02:23,000
வளமான ஆதாரமாக இருந்து வருகிறது, இது நாம் தினமும் பயன்படுத்தும் சாதனங்களில் இணைக்கப்பட்டுள்ளது.

36
00:02:23,000 --> 00:02:27,740
ஹேமிங் குறியீடு எனப்படும் ஆரம்பகால உதாரணங்களில் ஒன்றைப் பற்றிய

37
00:02:27,740 --> 00:02:29,660
முழுமையான புரிதலை உங்களுக்கு வழங்குவதே இங்குள்ள குறிக்கோள்.

38
00:02:29,660 --> 00:02:32,620
மேலும், இந்த வீடியோவின் கட்டமைப்பைப் பற்றி நான் சிந்திக்கும் விதம் அதை

39
00:02:32,620 --> 00:02:37,060
முடிந்தவரை நேரடியாக விளக்குவது குறைவாக உள்ளது, மேலும் இங்கும் இங்கும்

40
00:02:37,060 --> 00:02:40,220
கொஞ்சம் மென்மையான வழிகாட்டுதலுடன் அதை நீங்களே கண்டுபிடிக்கும்படி உங்களைத் தூண்டுகிறது.

41
00:02:40,220 --> 00:02:44,100
எனவே, ஒரு கட்டத்தில் அது எங்கே போகிறது என்று நீங்கள் உணரும்போது, அந்தத் தருணத்தை

42
00:02:44,100 --> 00:02:47,180
இடைநிறுத்தி, நான் உங்களுக்குச் சொல்லும் முன் திட்டம் என்னவாக இருக்கும் என்பதைத் தீவிரமாகக் கணிக்கவும்.

43
00:02:47,180 --> 00:02:51,500
மேலும், உங்கள் புரிதல் வன்பொருள் நிலைக்கு வர வேண்டுமெனில், Ben Eater

44
00:02:51,500 --> 00:02:55,160
இதனுடன் இணைந்து ஒரு காணொளியை உருவாக்கியுள்ளது, இது ப்ரெட்போர்டுகளில் Hamming குறியீடுகளை

45
00:02:55,160 --> 00:02:59,520
உண்மையில் எவ்வாறு செயல்படுத்துவது என்பதைக் காட்டுகிறது, இது மிகவும் திருப்திகரமாக உள்ளது.

46
00:02:59,520 --> 00:03:03,120
ரீட்-சாலமன் அல்காரிதம் போன்ற நவீன குறியீடுகளைப் போல ஹேமிங் குறியீடுகள் பரவலாகப் பயன்படுத்தப்படவில்லை என்பதை நீங்கள் அறிந்திருக்க

47
00:03:03,120 --> 00:03:08,040
வேண்டும், ஆனால் தொடக்கத்தில் இந்த பணி எவ்வளவு சாத்தியமற்றது என்று உணருவதற்கும், ஒருமுறை அது எவ்வளவு

48
00:03:08,040 --> 00:03:14,240
நியாயமானதாக தோன்றுகிறது என்பதற்கும் இடையே ஒரு குறிப்பிட்ட மந்திரம் உள்ளது. ஹேமிங் பற்றி நீங்கள் கற்றுக்கொள்கிறீர்கள்.

49
00:03:14,240 --> 00:03:19,080
பிழை திருத்தத்தின் அடிப்படைக் கொள்கை என்னவென்றால், சாத்தியமான அனைத்து செய்திகளின்

50
00:03:19,300 --> 00:03:22,860
பரந்த இடத்திலும், சில துணைக்குழுக்கள் மட்டுமே சரியான செய்திகளாகக் கருதப்படும்.

51
00:03:22,860 --> 00:03:29,100
ஒரு ஒப்புமையாக, சரியாக உச்சரிக்கப்பட்ட வார்த்தைகள் மற்றும் தவறாக எழுதப்பட்ட வார்த்தைகள் பற்றி சிந்தியுங்கள்.

52
00:03:29,100 --> 00:03:33,340
சரியான செய்தி மாற்றப்படும்போதெல்லாம், நீங்கள் எழுத்துப்பிழையால் செய்யக்கூடியதைப் போல, அருகிலுள்ள

53
00:03:33,340 --> 00:03:38,380
செல்லுபடியாகும் அண்டை வீட்டாரிடம் அவர்கள் பார்ப்பதைத் திருத்துவதற்கு ரிசீவர் பொறுப்பு.

54
00:03:38,380 --> 00:03:43,100
இது போன்ற செய்திகளை திறம்பட வகைப்படுத்த ஒரு உறுதியான

55
00:03:43,100 --> 00:03:47,160
அல்காரிதம் கொண்டு வருவது, ஒரு குறிப்பிட்ட புத்திசாலித்தனத்தை எடுக்கும்.

56
00:03:47,160 --> 00:03:52,060
கதை 1940 களில் தொடங்குகிறது, ஒரு இளம் ரிச்சர்ட் ஹாமிங் பெல்

57
00:03:52,060 --> 00:03:55,900
லேப்ஸில் பணிபுரிந்தார், மேலும் அவரது சில வேலைகளில் அவர் குறைந்த அணுகல்

58
00:03:55,900 --> 00:03:57,420
மட்டுமே இருந்த மிகப் பெரிய விலையுயர்ந்த பஞ்ச் கார்டு கணினியைப் பயன்படுத்தினார்.

59
00:03:57,420 --> 00:04:01,200
அவர் தொடர்ந்து போடும் ப்ரோக்ராம்கள் தோல்வியடைந்து கொண்டே

60
00:04:01,200 --> 00:04:03,140
இருந்தது, ஏனென்றால் அவ்வப்போது கொஞ்சம் தவறாகப் படிக்கப்படும்.

61
00:04:03,140 --> 00:04:07,140
விரக்தியே கண்டுபிடிப்பின் முக்கிய அம்சமாக இருப்பதால், அவர் மிகவும் சோர்வடைந்தார்,

62
00:04:07,140 --> 00:04:09,280
அவர் உலகின் முதல் பிழை திருத்தக் குறியீட்டைக் கண்டுபிடித்தார்.

63
00:04:09,280 --> 00:04:13,020
ஹேமிங் குறியீடுகளை வடிவமைக்க பல்வேறு வழிகள் உள்ளன, ஆனால் முதல் பாஸ்

64
00:04:13,020 --> 00:04:16,620
என, ஹாமிங் தானே அவற்றைப் பற்றி யோசித்த விதத்தில் செல்லப் போகிறோம்.

65
00:04:16,620 --> 00:04:21,400
எளிமையான ஒரு உதாரணத்தைப் பயன்படுத்துவோம், ஆனால் மிகவும் எளிமையானது அல்ல, 16 பிட்களின் தொகுதி.

66
00:04:21,400 --> 00:04:25,700
இந்த பிட்களின் நிலைகளை 0 முதல் 15 வரை எண்ணுவோம்.

67
00:04:25,700 --> 00:04:30,520
நாம் சேமிக்க விரும்பும் உண்மையான தரவு இந்த பிட்களில் 12 பிட்களை மட்டுமே

68
00:04:30,520 --> 00:04:33,920
உருவாக்கும், அதே நேரத்தில் 4 நிலைகள் ஒரு வகையான பணிநீக்கமாக ஒதுக்கப்பட்டுள்ளன.

69
00:04:33,920 --> 00:04:38,120
இங்கே தேவையற்ற வார்த்தையானது நகலெடுப்பதைக் குறிக்கவில்லை, எல்லாவற்றிற்கும் மேலாக, அந்த

70
00:04:38,120 --> 00:04:40,200
4 பிட்கள் தரவுகளை கண்மூடித்தனமாக நகலெடுக்க போதுமான இடத்தைக் கொடுக்கவில்லை.

71
00:04:40,200 --> 00:04:44,880
அதற்கு பதிலாக, அவை மிகவும் நுணுக்கமான மற்றும் புத்திசாலித்தனமான பணிநீக்கமாக

72
00:04:44,880 --> 00:04:48,740
இருக்க வேண்டும், எந்த புதிய தகவலையும் சேர்க்காமல், பின்னடைவைச் சேர்க்கும்.

73
00:04:48,740 --> 00:04:52,620
இந்த 4 ஸ்பெஷல் பிட்கள் நன்றாக தொகுக்கப்படும் என்று நீங்கள் எதிர்பார்க்கலாம், ஒருவேளை இறுதியில்

74
00:04:52,620 --> 00:04:56,400
அல்லது அது போன்ற ஏதாவது இருக்கலாம், ஆனால் நீங்கள் பார்ப்பது போல், 2 இன்

75
00:04:56,400 --> 00:05:00,320
அதிகாரங்கள் கொண்ட நிலைகளில் அவர்களை உட்கார வைப்பது இறுதியில் நேர்த்தியான ஒன்றை அனுமதிக்கிறது.

76
00:05:00,320 --> 00:05:05,420
பெரிய தொகுதிகளுக்கு இது எவ்வாறு அளவிடப்படுகிறது என்பது பற்றிய சிறிய குறிப்பை இது உங்களுக்கு வழங்கக்கூடும்.

77
00:05:05,420 --> 00:05:09,220
மேலும் தொழில்நுட்ப ரீதியாக இது 11 பிட் டேட்டாவாக மட்டுமே முடிவடைகிறது, நிலை 0 இல் என்ன

78
00:05:09,220 --> 00:05:14,260
நடக்கிறது என்பதற்கு லேசான நுணுக்கம் இருப்பதை நீங்கள் காண்பீர்கள், ஆனால் இப்போது அதைப் பற்றி கவலைப்பட வேண்டாம்.

79
00:05:14,280 --> 00:05:18,640
எந்தவொரு பிழை திருத்தும் அல்காரிதம் போலவே, இது இரண்டு பிளேயர்களை உள்ளடக்கும்,

80
00:05:18,640 --> 00:05:23,200
இந்த 4 சிறப்பு பிட்களை அமைப்பதற்கு பொறுப்பான அனுப்புநர் மற்றும் சில

81
00:05:23,200 --> 00:05:26,360
வகையான சரிபார்ப்பு மற்றும் பிழைகளை சரிசெய்வதற்கு பொறுப்பான ஒரு பெறுநர்.

82
00:05:26,360 --> 00:05:30,040
நிச்சயமாக, அனுப்புநர் மற்றும் பெறுநர் என்ற வார்த்தைகள் உண்மையில் அனைத்து

83
00:05:30,040 --> 00:05:34,040
சோதனைகளையும் செய்யும் இயந்திரங்கள் அல்லது மென்பொருளைக் குறிக்கின்றன, மேலும் ஒரு

84
00:05:34,040 --> 00:05:35,480
செய்தியின் யோசனை உண்மையில் பரந்த அளவில், சேமிப்பகம் போன்றவற்றை உள்ளடக்கியது.

85
00:05:35,480 --> 00:05:39,320
எல்லாவற்றிற்கும் மேலாக, தரவை சேமிப்பது என்பது ஒரு இடத்திலிருந்து இன்னொரு இடத்திற்கு

86
00:05:39,320 --> 00:05:42,640
அனுப்புவதற்குப் பதிலாக கடந்த காலத்திலிருந்து எதிர்காலத்திற்கு ஒரு செய்தியை அனுப்புவது போன்றது.

87
00:05:42,640 --> 00:05:46,700
அதுதான் அமைப்பு, ஆனால் நாம் உள்ளே நுழைவதற்கு முன், ஹேமிங்கின் கண்டுபிடிப்பின்

88
00:05:46,700 --> 00:05:51,080
போது அவரது மனதில் புதியதாக இருந்த ஒரு தொடர்புடைய யோசனையைப் பற்றி

89
00:05:51,080 --> 00:05:55,520
பேச வேண்டும், இது எந்த ஒரு பிட் பிழைகளையும் கண்டறிய உங்களை

90
00:05:55,520 --> 00:05:57,300
அனுமதிக்கிறது, ஆனால் அவற்றை சரிசெய்ய முடியாது. வணிகத்தில் சமநிலை சரிபார்ப்பு.

91
00:05:57,300 --> 00:06:01,300
சமநிலைச் சரிபார்ப்பிற்கு, அனுப்புநரே ட்யூனிங்கிற்குப் பொறுப்பானவர் என்று ஒரே ஒரு

92
00:06:01,300 --> 00:06:04,940
பிட் மட்டுமே பிரித்தெடுக்கிறோம், மீதமுள்ளவர்கள் செய்தியை எடுத்துச் செல்ல இலவசம்.

93
00:06:04,940 --> 00:06:10,380
இந்த ஸ்பெஷல் பிட்டின் ஒரே வேலை, செய்தியில் உள்ள 1களின்

94
00:06:10,380 --> 00:06:12,100
மொத்த எண்ணிக்கையும் இரட்டை எண்ணாக இருப்பதை உறுதி செய்வதுதான்.

95
00:06:12,100 --> 00:06:16,920
எடுத்துக்காட்டாக இப்போது, 1களின் மொத்த எண்ணிக்கை 7, அது ஒற்றைப்படை, எனவே அனுப்புநர்

96
00:06:16,920 --> 00:06:20,960
அந்த சிறப்பு பிட்டை 1 ஆக மாற்ற வேண்டும், இது எண்ணிக்கையை சமமாக்குகிறது.

97
00:06:20,960 --> 00:06:25,320
ஆனால் பிளாக் ஏற்கனவே 1களின் இரட்டை எண்ணுடன் தொடங்கியிருந்தால்,

98
00:06:25,320 --> 00:06:27,480
இந்த சிறப்பு பிட் 0 இல் வைக்கப்பட்டிருக்கும்.

99
00:06:27,480 --> 00:06:31,640
இது மிகவும் எளிமையானது, ஏமாற்றும் வகையில் எளிமையானது, ஆனால் ஒரு செய்தியில் எந்த இடத்திலும் மாற்றம்

100
00:06:31,640 --> 00:06:37,760
குறித்த யோசனையை ஒரு பிட் தகவலில் பிரதிபலிக்கும் வகையில் இது ஒரு நம்பமுடியாத நேர்த்தியான வழியாகும்.

101
00:06:37,760 --> 00:06:43,680
இந்தச் செய்தியின் ஏதேனும் பிட் 0 முதல் 1 அல்லது 1 முதல் 0

102
00:06:43,680 --> 00:06:48,140
வரை புரட்டப்பட்டால், அது 1 வினாடிகளின் மொத்த எண்ணிக்கையை இரட்டைப்படையாக மாற்றுகிறது என்பதைக் கவனியுங்கள்.

103
00:06:48,140 --> 00:06:52,000
நீங்கள் பெறுபவராக இருந்தால், நீங்கள் இந்த செய்தியைப் பார்க்கிறீர்கள், நீங்கள்

104
00:06:52,000 --> 00:06:56,580
ஒற்றைப்படை எண் 1ஐக் கண்டால், அது எங்கே என்று உங்களுக்குத்

105
00:06:56,580 --> 00:06:58,700
தெரியாவிட்டாலும், சில பிழை ஏற்பட்டிருப்பதை நீங்கள் உறுதியாக அறிந்து கொள்ளலாம்.

106
00:06:58,700 --> 00:07:02,820
வாசகங்களில், பிட்களின் குழுவானது 1களின் இரட்டை அல்லது ஒற்றைப்படை

107
00:07:02,820 --> 00:07:04,940
எண்ணைக் கொண்டதா என்பது அதன் சமநிலை என அறியப்படுகிறது.

108
00:07:04,940 --> 00:07:09,140
நீங்கள் எண்களைப் பயன்படுத்தலாம் மற்றும் சமநிலை 0 அல்லது 1 என்று கூறலாம்,

109
00:07:09,140 --> 00:07:11,320
இது பொதுவாக நீங்கள் யோசனையுடன் கணிதத்தை செய்யத் தொடங்கியவுடன் மிகவும் உதவியாக இருக்கும்.

110
00:07:11,320 --> 00:07:15,200
மேலும் இந்த ஸ்பெஷல் பிட் பாரிட்டியைக் கட்டுப்படுத்த

111
00:07:15,200 --> 00:07:18,020
அனுப்புபவர் பயன்படுத்தும் பாரிட்டி பிட் என்று அழைக்கப்படுகிறது.

112
00:07:18,020 --> 00:07:22,460
உண்மையில், நாம் தெளிவாக இருக்க வேண்டும், ரிசீவர் ஒரு ஒற்றைப்படை சமநிலையைக் கண்டால், அது ஒரே

113
00:07:22,460 --> 00:07:26,920
ஒரு பிழை என்று அர்த்தமல்ல, 3 பிழைகள், அல்லது 5 அல்லது வேறு ஏதேனும் ஒற்றைப்படை

114
00:07:26,920 --> 00:07:29,560
எண் இருந்திருக்கலாம், ஆனால் அவர்கள் நிச்சயமாக அறிந்து கொள்ள முடியும். அது 0 இல்லை என்று.

115
00:07:29,560 --> 00:07:34,880
மறுபுறம், 2 பிழைகள் அல்லது ஏதேனும் சம எண்ணிக்கையிலான பிழைகள் இருந்திருந்தால், அந்த இறுதி

116
00:07:34,880 --> 00:07:39,560
எண்ணிக்கை 1 வினாடிகள் இன்னும் சமமாக இருக்கும், எனவே பெறுநரால் சம எண்ணிக்கையானது

117
00:07:39,560 --> 00:07:43,360
செய்தி பிழையில்லாதது என்று அர்த்தம் என்று முழு நம்பிக்கையுடன் இருக்க முடியாது. .

118
00:07:43,360 --> 00:07:47,860
2 பிட் ஃபிளிப்புகளால் குழப்பமடையும் செய்தி மிகவும் பலவீனமானது என்று

119
00:07:47,860 --> 00:07:49,760
நீங்கள் புகார் செய்யலாம், நீங்கள் சொல்வது முற்றிலும் சரி.

120
00:07:49,760 --> 00:07:54,480
இருப்பினும், பிழை கண்டறிதல் அல்லது திருத்தம் செய்வதற்கான எந்த முறையும் இல்லை என்பதை நினைவில் கொள்ளுங்கள்,

121
00:07:54,480 --> 00:07:59,720
நீங்கள் பெறும் செய்தி அனுப்புநரின் நோக்கம்தான் என்பதில் 100% நம்பிக்கையை உங்களுக்கு வழங்க முடியும்.

122
00:07:59,720 --> 00:08:03,760
எல்லாவற்றிற்கும் மேலாக, போதுமான சீரற்ற சத்தம் எப்போதும் ஒரு

123
00:08:03,760 --> 00:08:05,920
சரியான செய்தியை மற்றொரு சரியான செய்தியாக மாற்றும்.

124
00:08:05,920 --> 00:08:10,520
அதற்குப் பதிலாக, ஒரு குறிப்பிட்ட அதிகபட்ச எண்ணிக்கையிலான பிழைகள் வரை வலுவான திட்டத்தைக்

125
00:08:10,520 --> 00:08:16,480
கொண்டு வருவதே குறிக்கோள் அல்லது இது போன்ற தவறான நேர்மறையின் நிகழ்தகவைக் குறைக்கலாம்.

126
00:08:16,480 --> 00:08:20,940
சமநிலை சரிபார்ப்புகள் மிகவும் பலவீனமாக உள்ளன, ஆனால் ஒரு முழுச் செய்தியில்

127
00:08:20,940 --> 00:08:25,640
மாற்றத்தின் யோசனையை ஒரு பிட் வரை வடிகட்டுவதன் மூலம், அவை

128
00:08:25,640 --> 00:08:28,000
நமக்குத் தருவது மிகவும் அதிநவீன திட்டங்களுக்கான சக்திவாய்ந்த கட்டுமானத் தொகுதியாகும்.

129
00:08:28,000 --> 00:08:32,880
எடுத்துக்காட்டாக, ஹேமிங் ஒரு பிழை எங்கே நடந்தது என்பதைக் கண்டறியும் வழியைத் தேடிக்கொண்டிருந்தபோது, அது

130
00:08:32,880 --> 00:08:37,160
நிகழ்ந்தது மட்டுமல்ல, அவருடைய முக்கிய நுண்ணறிவு என்னவென்றால், நீங்கள் சில சமத்துவச் சரிபார்ப்புகளை

131
00:08:37,160 --> 00:08:42,040
முழுச் செய்திக்கு அல்ல, ஆனால் கவனமாகத் தேர்ந்தெடுக்கப்பட்ட சில துணைக்குழுக்களுக்குப் பயன்படுத்தினால், நீங்கள் கேட்கலாம்.

132
00:08:42,040 --> 00:08:46,840
எந்த ஒரு பிட் பிழையின் இருப்பிடத்தைக் குறிக்கும் மேலும் சுத்திகரிக்கப்பட்ட தொடர் கேள்விகள்.

133
00:08:46,840 --> 00:08:51,280
ஒட்டுமொத்த உணர்வு 20 கேள்விகள் கொண்ட விளையாட்டை விளையாடுவது போன்றது, ஆம்

134
00:08:51,280 --> 00:08:54,300
அல்லது இல்லை என்று கேள்விகளைக் கேட்பது சாத்தியக்கூறுகளின் இடத்தை பாதியாக வெட்டுகிறது.

135
00:08:54,300 --> 00:08:58,840
எடுத்துக்காட்டாக, இந்த 8 பிட்கள், ஒற்றைப்படை எண்கள் உள்ள

136
00:08:58,840 --> 00:08:59,840
எல்லா நிலைகளிலும் சரிபார்ப்பைச் செய்கிறோம் என்று வைத்துக் கொள்வோம்.

137
00:09:00,400 --> 00:09:04,560
ஒரு பிழை கண்டறியப்பட்டால், அது குறிப்பாக பிழை எங்குள்ளது, அதாவது அது

138
00:09:04,560 --> 00:09:09,160
ஒற்றைப்படை நிலையில் உள்ளது என்பது பற்றிய கூடுதல் தகவலை பெறுநருக்கு வழங்குகிறது.

139
00:09:09,160 --> 00:09:14,360
அந்த 8 பிட்களில் எந்தப் பிழையும் கண்டறியப்படவில்லை என்றால், அது எந்தப் பிழையும்

140
00:09:14,360 --> 00:09:17,240
இல்லை என்று அர்த்தம், அல்லது அது சம நிலையில் எங்காவது அமர்ந்திருக்கும்.

141
00:09:17,240 --> 00:09:21,560
சமநிலைச் சரிபார்ப்பை பாதி பிட்களுக்குக் கட்டுப்படுத்துவது குறைவான பலனைத் தரும் என்று

142
00:09:21,560 --> 00:09:25,460
நீங்கள் நினைக்கலாம், ஆனால் மற்ற நன்கு தேர்ந்தெடுக்கப்பட்ட சரிபார்ப்புகளுடன் இணைந்து அதைச்

143
00:09:25,460 --> 00:09:29,720
செய்யும்போது, அது எதிர்நோக்கும் வகையில் நமக்கு மிகவும் சக்திவாய்ந்த ஒன்றைத் தருகிறது.

144
00:09:29,720 --> 00:09:34,440
அந்த சமநிலை சரிபார்ப்பை உண்மையில் அமைக்க, நினைவில் கொள்ளுங்கள், அந்த முழுக்

145
00:09:34,440 --> 00:09:37,600
குழுவின் சமநிலையைக் கட்டுப்படுத்தும் சில சிறப்புப் பிட்களை அது ஒதுக்க வேண்டும்.

146
00:09:37,600 --> 00:09:39,920
இங்கே நிலை 1 ஐத் தேர்வு செய்வோம்.

147
00:09:39,920 --> 00:09:43,960
காட்டப்பட்டுள்ள எடுத்துக்காட்டில், இந்த 8 பிட்களின் சமநிலை தற்போது ஒற்றைப்படையாக உள்ளது, எனவே

148
00:09:43,960 --> 00:09:48,220
அந்த பாரிட்டி பிட்டை மாற்றுவதற்கு அனுப்புநரே பொறுப்பு, இப்போது அது சமமாக உள்ளது.

149
00:09:48,220 --> 00:09:51,040
நாங்கள் செய்வோம் 4 சமநிலை சரிபார்ப்புகளில் இது 1 மட்டுமே.

150
00:09:51,040 --> 00:09:55,560
இரண்டாவது சரிபார்ப்பு கட்டத்தின் வலது பாதியில் உள்ள 8

151
00:09:55,560 --> 00:09:56,880
பிட்களில் உள்ளது, குறைந்தபட்சம் நாங்கள் அதை இங்கே வரைந்துள்ளோம்.

152
00:09:56,880 --> 00:10:02,520
இந்த நேரத்தில் நாம் நிலை 2 ஐ ஒரு சமநிலை பிட்டாகப் பயன்படுத்தலாம், எனவே இந்த 8 பிட்கள் ஏற்கனவே

153
00:10:02,520 --> 00:10:07,160
சம சமநிலையைக் கொண்டுள்ளன, மேலும் அந்த பிட் எண் 2 ஐ மாற்றாமல் விட்டுவிட்டு அனுப்புபவர் நன்றாக உணர முடியும்.

154
00:10:07,160 --> 00:10:11,040
மறுமுனையில், ரிசீவர் இந்தக் குழுவின் சமநிலையைச் சரிபார்த்து, அது ஒற்றைப்படையாக இருப்பதைக் கண்டறிந்தால்,

155
00:10:11,040 --> 00:10:15,960
வலதுபுறத்தில் உள்ள இந்த 8 பிட்களில் எங்காவது பிழை இருப்பதை அவர்கள் அறிவார்கள்.

156
00:10:15,960 --> 00:10:21,260
இல்லையெனில் பிழை இல்லை அல்லது பிழை இடது பாதியில் எங்கோ உள்ளது என்று அர்த்தம்.

157
00:10:21,260 --> 00:10:24,040
அல்லது இரண்டு பிழைகள் இருந்திருக்கலாம் என்று நினைக்கிறேன், ஆனால் இப்போதைக்கு

158
00:10:24,040 --> 00:10:27,080
முழுத் தொகுதியிலும் அதிகபட்சம் ஒரு பிழை இருப்பதாகக் கருதுவோம்.

159
00:10:27,080 --> 00:10:29,160
அதை விட விஷயங்கள் முற்றிலும் உடைந்து போகின்றன.

160
00:10:29,160 --> 00:10:32,920
இங்கே, அடுத்த இரண்டு காசோலைகளைப் பார்ப்பதற்கு முன், இந்த முதல் இரண்டையும் நீங்கள் ஒன்றாகக்

161
00:10:32,920 --> 00:10:35,880
கருத்தில் கொள்ளும்போது நாம் என்ன செய்ய அனுமதிக்கிறது என்பதைப் பற்றி சிறிது சிந்தித்துப் பாருங்கள்.

162
00:10:35,880 --> 00:10:40,240
ஒற்றைப்படை நெடுவரிசைகள் மற்றும் வலது பாதியில் ஒரு பிழையை நீங்கள் கண்டறிந்ததாக வைத்துக்கொள்வோம்.

163
00:10:40,240 --> 00:10:43,940
கடைசி நெடுவரிசையில் எங்கோ பிழை உள்ளது என்று அர்த்தம்.

164
00:10:43,940 --> 00:10:48,280
ஒற்றைப்படை நெடுவரிசையில் பிழை இல்லை, ஆனால் வலது பாதியில் ஒன்று இருந்தால்,

165
00:10:48,280 --> 00:10:50,520
அது இரண்டாவது முதல் கடைசி நெடுவரிசையில் உள்ளது என்று உங்களுக்குச் சொல்லும்.

166
00:10:50,520 --> 00:10:54,640
அதேபோல ஒற்றைப்படை நெடுவரிசைகளில் பிழை இருந்தால், வலது பாதியில்

167
00:10:54,640 --> 00:10:56,560
இல்லை என்றால், அது இரண்டாவது நெடுவரிசையில் எங்காவது தெரியும்.

168
00:10:56,560 --> 00:11:00,560
அந்த இரண்டு சமநிலை சரிபார்ப்புகளில் எதுவுமே எதையும் கண்டறியவில்லை என்றால், அந்த

169
00:11:00,560 --> 00:11:03,760
இடதுபுற நெடுவரிசையில் மட்டுமே பிழை இருக்க முடியும் என்று அர்த்தம்.

170
00:11:03,760 --> 00:11:06,480
ஆனால் அது எந்த பிழையும் இல்லை என்று அர்த்தம்.

171
00:11:06,480 --> 00:11:10,800
இரண்டு சமநிலை சரிபார்ப்புகள் நெடுவரிசையை பின் செய்ய அனுமதிக்கும்

172
00:11:10,800 --> 00:11:11,800
என்று கூறுவதற்கு இது மிகவும் கடினமான வழியாகும்.

173
00:11:11,800 --> 00:11:14,000
இங்கிருந்து, பின்வருவனவற்றை நீங்கள் யூகிக்க முடியும்.

174
00:11:14,000 --> 00:11:16,240
நாங்கள் அடிப்படையில் அதையே செய்கிறோம் ஆனால் வரிசைகளுக்கு.

175
00:11:16,240 --> 00:11:21,040
நிலை 4ஐ சமநிலை பிட்டாகப் பயன்படுத்தி ஒற்றைப்படை வரிசைகளில் சமநிலைச் சரிபார்ப்பு இருக்கப் போகிறது.

176
00:11:21,040 --> 00:11:25,480
எனவே இந்த எடுத்துக்காட்டில் அந்தக் குழு ஏற்கனவே சம சமநிலையைக்

177
00:11:25,480 --> 00:11:26,480
கொண்டுள்ளது, எனவே பிட் 4 0 ஆக அமைக்கப்படும்.

178
00:11:26,480 --> 00:11:31,280
இறுதியாக, கீழே உள்ள இரண்டு வரிசைகளில் சமநிலைச் சரிபார்ப்பு

179
00:11:31,280 --> 00:11:32,280
உள்ளது, நிலை 8 ஐ சமநிலை பிட்டாகப் பயன்படுத்துகிறது.

180
00:11:32,280 --> 00:11:35,840
இந்த நிலையில், குழுவிற்கு சமமான சமநிலையை வழங்க, அனுப்புநர் அந்த

181
00:11:35,840 --> 00:11:37,840
பிட் 8 ஐ இயக்க வேண்டும் போல் தெரிகிறது.

182
00:11:37,840 --> 00:11:41,360
முதல் இரண்டு காசோலைகள் நெடுவரிசையைக் கீழே பின்னுவதைப் போலவே, இந்த

183
00:11:41,360 --> 00:11:43,000
அடுத்த இரண்டும் உங்களை வரிசையைப் பின் செய்ய அனுமதிக்கும்.

184
00:11:43,000 --> 00:11:48,400
எடுத்துக்காட்டாக, பரிமாற்றத்தின் போது, நிலை 3 இல் பிழை இருப்பதாக கற்பனை செய்து பாருங்கள்.

185
00:11:48,400 --> 00:11:52,620
சரி, இது முதல் சமநிலைக் குழுவைப் பாதிக்கிறது, மேலும் இது இரண்டாவது சமநிலைக் குழுவையும்

186
00:11:52,620 --> 00:11:56,340
பாதிக்கிறது, எனவே அந்த வலது நெடுவரிசையில் எங்காவது பிழை இருப்பதைப் பெறுபவருக்குத் தெரியும்.

187
00:11:56,340 --> 00:12:01,380
ஆனால் இது மூன்றாவது குழுவை பாதிக்காது, நான்காவது குழுவை பாதிக்காது.

188
00:12:01,380 --> 00:12:05,460
மேலும் இது முதல் வரிசை வரை பிழையைக் குறிப்பிடுவதற்கு ரிசீவரை அனுமதிக்கிறது, அதாவது

189
00:12:05,460 --> 00:12:08,660
நிலை 3 என்று அர்த்தம், அதனால் அவர்கள் பிழையை சரிசெய்ய முடியும்.

190
00:12:08,660 --> 00:12:12,640
இந்த நான்கு கேள்விகளுக்கான பதில்கள் உண்மையில் ஒரு குறிப்பிட்ட இடத்தைப் பின்தொடர

191
00:12:12,680 --> 00:12:17,320
உங்களை அனுமதிக்கும் என்பதை நீங்கள் நம்புவதற்கு சிறிது நேரம் ஒதுக்கி மகிழலாம்.

192
00:12:17,320 --> 00:12:22,640
உண்மையில், உங்களில் உள்ள புத்திசாலிகள் இந்தக் கேள்விகளுக்கும் பைனரி

193
00:12:22,640 --> 00:12:23,640
எண்ணிக்கைக்கும் இடையே உள்ள தொடர்பைக் கூட கவனிக்கலாம்.

194
00:12:23,640 --> 00:12:27,840
நீங்கள் செய்தால், மீண்டும் வலியுறுத்துகிறேன், இடைநிறுத்துகிறேன், நான் அதை

195
00:12:27,840 --> 00:12:30,880
கெடுக்கும் முன் இணைப்பை வரைய நீங்களே முயற்சி செய்யுங்கள்.

196
00:12:30,880 --> 00:12:35,560
ஒரு சமநிலை பிட் தானே பாதிக்கப்பட்டால் என்ன ஆகும் என்று

197
00:12:35,560 --> 00:12:36,560
நீங்கள் யோசிக்கிறீர்கள் என்றால், நீங்கள் அதை முயற்சி செய்யலாம்.

198
00:12:36,560 --> 00:12:40,720
இந்த நான்கு ஸ்பெஷல் பிட்களில் எந்தப் பிழையும் ஒரே மாதிரியான நான்கு கேள்விகளைக் கொண்ட

199
00:12:40,720 --> 00:12:47,440
பிறவற்றைப் போலவே எப்படிக் கண்காணிக்கப் போகிறது என்பதைப் பற்றி சிறிது சிந்தித்துப் பாருங்கள்.

200
00:12:47,440 --> 00:12:50,500
இது உண்மையில் ஒரு பொருட்டல்ல, ஏனெனில் நாளின் முடிவில் நாம் விரும்புவது

201
00:12:50,500 --> 00:12:53,640
செய்தி பிட்களைப் பாதுகாக்க வேண்டும், பிழை திருத்தம் பிட்கள் சவாரி செய்கின்றன.

202
00:12:53,640 --> 00:12:57,120
ஆனால் அந்த பிட்களையும் பாதுகாப்பது இயற்கையாகவே ஒரு

203
00:12:57,120 --> 00:12:59,260
துணை தயாரிப்பாக திட்டத்திலிருந்து வெளியேறும் ஒன்று.

204
00:12:59,260 --> 00:13:02,380
இது எப்படி இருக்கும் என்பதை நீங்கள் எதிர்பார்த்து மகிழலாம்.

205
00:13:02,380 --> 00:13:08,040
எடுத்துக்காட்டாக, 256 பிட் அளவு கொண்ட ஒரு தொகுதியை நாங்கள் பயன்படுத்தினால், எடுத்துக்காட்டாக, ஒரு இடத்தைப் பின் செய்ய,

206
00:13:08,040 --> 00:13:15,680
குறிப்பிட்ட இடத்திற்குச் சென்று பைனரி தேடுவதற்கு உங்களுக்கு எட்டு ஆம் அல்லது இல்லை கேள்விகள் மட்டுமே தேவை.

207
00:13:15,680 --> 00:13:19,680
மேலும் நினைவில் கொள்ளுங்கள், ஒவ்வொரு கேள்விக்கும் பொருத்தமான சமநிலை

208
00:13:19,680 --> 00:13:23,340
சரிபார்ப்பை அமைக்க ஒரு பிட் மட்டுமே கொடுக்க வேண்டும்.

209
00:13:23,340 --> 00:13:26,960
உங்களில் சிலர் ஏற்கனவே இதைப் பார்த்திருக்கலாம், ஆனால் இந்தக் கேள்விகள் என்ன

210
00:13:26,960 --> 00:13:29,960
என்பதை ஓரிரு நிமிடங்களில் கண்டுபிடிப்பதற்கான முறையான வழியைப் பற்றி பின்னர் பேசுவோம்.

211
00:13:29,960 --> 00:13:33,440
நாங்கள் இங்கு உருவாக்கி வருவதன் செயல்திறனைப் பாராட்ட

212
00:13:33,440 --> 00:13:34,440
இந்த ஓவியம் போதுமானது என நம்புகிறோம்.

213
00:13:34,440 --> 00:13:38,440
முதல் விஷயம், அந்த எட்டு ஹைலைட் செய்யப்பட்ட பாரிட்டி பிட்களைத்

214
00:13:38,440 --> 00:13:41,720
தவிர, நீங்கள் விரும்பும் செய்தி அல்லது தரவைச் சுமந்து செல்லும்.

215
00:13:41,720 --> 00:13:45,480
8 பிட்கள் தேவையற்றவை, அதாவது அவை முழுவதுமாக மீதமுள்ள செய்தியால் தீர்மானிக்கப்படுகின்றன,

216
00:13:45,480 --> 00:13:53,640
ஆனால் இது செய்தியை முழுவதுமாக நகலெடுப்பதை விட மிகவும் புத்திசாலித்தனமானது.

217
00:13:53,640 --> 00:13:58,000
இன்னும், மிகக் குறைவாகக் கொடுக்கப்பட்டால், நீங்கள் எந்த

218
00:13:58,000 --> 00:13:59,000
ஒரு பிட் பிழையையும் கண்டறிந்து சரிசெய்ய முடியும்.

219
00:13:59,000 --> 00:14:00,400
சரி, கிட்டத்தட்ட.

220
00:14:00,400 --> 00:14:05,920
சரி, இங்கு உள்ள ஒரு பிரச்சனை என்னவென்றால், நான்கு சமநிலை சரிபார்ப்புகளில்

221
00:14:05,920 --> 00:14:10,240
எதுவுமே பிழையைக் கண்டறியவில்லை என்றால், அதாவது 8 பிட்களின் சிறப்பாகத் தேர்ந்தெடுக்கப்பட்ட

222
00:14:10,240 --> 00:14:15,520
துணைக்குழுக்கள் அனைத்தும், அனுப்புநரின் நோக்கத்தைப் போலவே சமமான சமநிலைகளைக் கொண்டிருக்கின்றன என்று

223
00:14:15,520 --> 00:14:17,760
அர்த்தம். , அல்லது அது நம்மை நிலை 0 ஆகக் குறைக்கிறது.

224
00:14:17,760 --> 00:14:23,040
நான்கு ஆம் அல்லது இல்லை

225
00:14:23,040 --> 00:14:28,000
என்ற கேள்விகளுடன், எங்களிடம் 16

226
00:14:28,000 --> 00:14:33,000
சாத்தியமான முடிவுகள் உள்ளன. நிலை.

227
00:14:33,000 --> 00:14:37,860
இங்கே தீர்வு உண்மையில் மிகவும் எளிமையானது, அந்த 0வது பிட்டை முழுவதுமாக மறந்துவிடுங்கள்.

228
00:14:37,860 --> 00:14:41,920
எனவே, நாங்கள் எங்கள் நான்கு சமநிலை சரிபார்ப்புகளைச் செய்யும்போது, அவை அனைத்தும் சமமாக

229
00:14:41,920 --> 00:14:44,320
இருப்பதைக் காணும்போது, எந்தப் பிழையும் இல்லை என்று சந்தேகத்திற்கு இடமின்றி அர்த்தம்.

230
00:14:44,320 --> 00:14:49,240
இதன் பொருள் என்னவென்றால், 16-பிட் தொகுதியுடன் வேலை செய்வதை விட, நாங்கள் 15-பிட் தொகுதியுடன் வேலை செய்கிறோம்,

231
00:14:49,240 --> 00:14:54,040
அங்கு 11 பிட்கள் ஒரு செய்தியை எடுத்துச் செல்ல இலவசம் மற்றும் அவற்றில் 4 பணிநீக்கத்திற்காக உள்ளன.

232
00:14:54,080 --> 00:14:58,400
அதனுடன், வணிகத்தில் உள்ளவர்கள் 15-11 ஹேமிங் குறியீடு

233
00:14:58,400 --> 00:14:59,400
என்று குறிப்பிடுவது இப்போது எங்களிடம் உள்ளது.

234
00:14:59,400 --> 00:15:03,920
அதாவது, பிளாக் அளவு 2 இன் சுத்தமான சக்தியைக் கொண்டிருப்பது மகிழ்ச்சி அளிக்கிறது, மேலும் ஒரு புத்திசாலித்தனமான

235
00:15:03,920 --> 00:15:08,880
வழி இருக்கிறது, அந்த 0வது பிட்டைச் சுற்றி வைத்துக்கொண்டு, நமக்காக கொஞ்சம் கூடுதல் வேலைகளைச் செய்ய முடியும்.

236
00:15:08,880 --> 00:15:13,600
முழு பிளாக் முழுவதும் பாரிட்டி பிட்டாகப் பயன்படுத்தினால், 2-பிட் பிழைகளைச்

237
00:15:13,600 --> 00:15:16,320
சரி செய்ய முடியாவிட்டாலும், அது உண்மையில் கண்டறிய உதவுகிறது.

238
00:15:16,320 --> 00:15:17,440
இது எவ்வாறு செயல்படுகிறது என்பது இங்கே.

239
00:15:17,440 --> 00:15:21,740
அந்த நான்கு சிறப்புப் பிழை-திருத்தும் பிட்களை அமைத்த பிறகு, ஒரு சாதாரண சமநிலை

240
00:15:21,740 --> 00:15:25,540
சரிபார்ப்பைப் போலவே முழுத் தொகுதியின் சமநிலை சமமாக இருக்கும்படி 0வது ஒன்றை அமைத்தோம்.

241
00:15:25,540 --> 00:15:29,780
இப்போது, ஒரு பிட் பிழை இருந்தால், முழுத் தொகுதியின் சமநிலை

242
00:15:29,780 --> 00:15:33,940
ஒற்றைப்படையாக மாறுகிறது, ஆனால் நான்கு பிழை-திருத்தும் சரிபார்ப்புகளுக்கு நன்றி.

243
00:15:33,940 --> 00:15:38,100
இருப்பினும், இரண்டு பிழைகள் இருந்தால், ஒட்டுமொத்த சமநிலை மீண்டும் சமமாக மாறப்

244
00:15:38,100 --> 00:15:42,660
போகிறது, ஆனால் அந்த நான்கு சமநிலை சரிபார்ப்புகளில் என்ன நடக்கிறது என்பதன்

245
00:15:42,660 --> 00:15:45,820
காரணமாக குறைந்தபட்சம் சில பிழைகள் இருப்பதை ரிசீவர் இன்னும் பார்ப்பார்.

246
00:15:45,820 --> 00:15:49,780
எனவே அவர்கள் ஒட்டுமொத்தமாக சமமான சமநிலையைக் கவனித்தால், ஆனால் மற்ற காசோலைகளில் பூஜ்ஜியமில்லாத

247
00:15:49,820 --> 00:15:52,980
ஏதாவது நடந்தால், குறைந்தது இரண்டு பிழைகள் இருந்ததாக அது அவர்களுக்குச் சொல்கிறது.

248
00:15:52,980 --> 00:15:54,420
அது புத்திசாலி இல்லையா?

249
00:15:54,420 --> 00:15:58,500
அந்த 2-பிட் பிழைகளை நம்மால் சரிசெய்ய முடியாவிட்டாலும், அந்த ஒரு சிறிய தொந்தரவான 0வது

250
00:15:58,500 --> 00:16:02,340
பிட்டை மீண்டும் வேலை செய்ய வைப்பதன் மூலம், அது அவற்றைக் கண்டறிய உதவுகிறது.

251
00:16:02,340 --> 00:16:06,540
இது மிகவும் நிலையானது, இது நீட்டிக்கப்பட்ட ஹேமிங் குறியீடு என்று அழைக்கப்படுகிறது.

252
00:16:06,540 --> 00:16:10,860
தொழில்நுட்ப ரீதியாகப் பார்த்தால், ஹேமிங் குறியீடு என்ன செய்கிறது என்பது பற்றிய

253
00:16:10,860 --> 00:16:13,580
முழு விளக்கமும் உங்களிடம் உள்ளது, குறைந்தபட்சம் 16-பிட் பிளாக்கின் உதாரணத்திற்கு.

254
00:16:13,580 --> 00:16:17,300
ஆனால், உங்கள் புரிதலைச் சரிபார்த்து, தொடக்கத்தில் இருந்து உங்களை முடிக்கும் வரை ஒரு முழு உதாரணத்தைச்

255
00:16:17,300 --> 00:16:21,980
செய்வதன் மூலம் இது வரை அனைத்தையும் உறுதிப்படுத்துவது உங்களுக்கு மிகவும் திருப்திகரமாக இருக்கும் என்று நினைக்கிறேன்.

256
00:16:21,980 --> 00:16:25,100
நான் அதை உங்களுடன் எடுத்துச் செல்கிறேன், எனவே நீங்களே சரிபார்க்கலாம்.

257
00:16:25,100 --> 00:16:29,180
ஒரு செய்தியை அமைக்க, அது நீங்கள் விண்வெளியில் மொழிபெயர்க்கும் நேரடிச்

258
00:16:29,180 --> 00:16:34,100
செய்தியாக இருந்தாலும் அல்லது காலப்போக்கில் நீங்கள் சேமிக்க விரும்பும் சில

259
00:16:34,100 --> 00:16:35,700
தரவாக இருந்தாலும், அதை 11-பிட் துண்டுகளாகப் பிரிப்பதே முதல் படி.

260
00:16:35,700 --> 00:16:40,340
ஒவ்வொரு துண்டையும் ஒரு பிழை-எதிர்ப்பு 16-பிட் தொகுதிக்குள் தொகுக்கப் போகிறது.

261
00:16:40,340 --> 00:16:43,740
எனவே இதை ஒரு உதாரணமாக எடுத்துக்கொள்வோம், உண்மையில் அதைச் செயல்படுத்துவோம்.

262
00:16:43,740 --> 00:16:45,340
மேலே செல்லுங்கள், உண்மையில் அதைச் செய்யுங்கள்!

263
00:16:45,380 --> 00:16:47,380
இடைநிறுத்தப்பட்டு இந்த தொகுதியை ஒன்றாக இணைக்க முயற்சிப்போம்.

264
00:16:52,980 --> 00:16:53,980
சரி, நீங்கள் தயாரா?

265
00:16:53,980 --> 00:16:58,500
நினைவில் கொள்ளுங்கள், 2 இன் மற்ற அதிகாரங்களுடன் நிலை 0 என்பது பிழை திருத்தும் கடமைக்காக

266
00:16:58,500 --> 00:17:05,700
ஒதுக்கப்பட்டுள்ளது, எனவே மீதமுள்ள எல்லா இடங்களிலும் செய்தி பிட்களை வரிசையாக வைப்பதன் மூலம் தொடங்கவும்.

267
00:17:05,700 --> 00:17:09,700
இந்தக் குழுவில் சம சமநிலை இருக்க வேண்டும், அது ஏற்கனவே உள்ளது, எனவே நீங்கள்

268
00:17:09,700 --> 00:17:13,140
அந்த சமநிலை பிட்டை நிலை 1 இல் 0 ஆக அமைத்திருக்க வேண்டும்.

269
00:17:13,140 --> 00:17:17,700
அடுத்த குழு ஒற்றைப்படை சமநிலையுடன் தொடங்குகிறது, எனவே நீங்கள்

270
00:17:17,700 --> 00:17:19,260
அதன் சமநிலை பிட்டை 1 ஆக அமைத்திருக்க வேண்டும்.

271
00:17:19,260 --> 00:17:23,740
அதன் பிறகு குழு ஒற்றைப்படை சமநிலையுடன் தொடங்குகிறது, எனவே மீண்டும்

272
00:17:23,740 --> 00:17:24,740
அதன் சமநிலை பிட்டை 1 ஆக அமைத்திருக்க வேண்டும்.

273
00:17:24,740 --> 00:17:29,500
இறுதிக் குழுவும் ஒற்றைப்படை சமநிலையைக் கொண்டுள்ளது, அதாவது அந்த

274
00:17:29,500 --> 00:17:31,500
பிட்டை 8 ஆம் நிலையில் 1 ஆக அமைக்கிறோம்.

275
00:17:31,500 --> 00:17:36,460
பின்னர் இறுதிப் படியாக, முழுத் தொகுதியானது இப்போது சமமான சமநிலையைக் கொண்டுள்ளது, அதாவது

276
00:17:36,460 --> 00:17:41,500
அந்த பிட் எண் 0, மிகையான சமநிலை பிட், 0 ஆக அமைக்கலாம்.

277
00:17:41,500 --> 00:17:45,660
எனவே இந்தத் தொகுதி அனுப்பப்பட்டதால், நான்கு சிறப்பு துணைக்குழுக்களின் சமநிலை மற்றும்

278
00:17:45,660 --> 00:17:48,980
ஒட்டுமொத்த தொகுதி அனைத்தும் சமமாக அல்லது 0 ஆக இருக்கும்.

279
00:17:48,980 --> 00:17:53,620
பயிற்சியின் இரண்டாம் பாகமாக, நீங்கள் பெறுநரின் பாத்திரத்தை வகிக்க வேண்டும்.

280
00:17:53,620 --> 00:17:57,580
நிச்சயமாக, இந்த செய்தி என்னவென்று உங்களுக்கு ஏற்கனவே தெரியாது என்று அர்த்தம், ஒருவேளை உங்களில்

281
00:17:57,580 --> 00:18:00,180
சிலர் அதை மனப்பாடம் செய்திருக்கலாம், ஆனால் நீங்கள் அதை நினைவில் வைத்திருக்கவில்லை என்று வைத்துக்கொள்வோம்.

282
00:18:00,180 --> 00:18:05,820
நான் என்ன செய்யப் போகிறேன், அந்த பிளாக்கில் உள்ள பிட்களில் 0, 1 அல்லது

283
00:18:05,820 --> 00:18:08,340
2 ஐ மாற்ற வேண்டும், பின்னர் நான் என்ன செய்தேன் என்பதைக் கண்டுபிடிக்கும்படி கேட்கவும்.

284
00:18:08,340 --> 00:18:13,460
எனவே மீண்டும், இடைநிறுத்தி அதைச் செயல்படுத்த முயற்சிக்கவும்.

285
00:18:13,460 --> 00:18:23,960
சரி, நீங்கள் பெறுநராக இப்போது முதல் பாரிட்டி குழுவைச் சரிபார்த்து, அது சமமாக

286
00:18:23,960 --> 00:18:29,820
இருப்பதைக் காணலாம், எனவே இருக்கும் எந்தப் பிழையும் சம நெடுவரிசையில் இருக்க வேண்டும்.

287
00:18:29,820 --> 00:18:34,620
அடுத்தச் சரிபார்ப்பு ஒற்றைப்படை எண்ணைத் தருகிறது, இரண்டுக்கும் குறைந்தபட்சம் ஒரு

288
00:18:34,620 --> 00:18:38,760
பிழை இருப்பதாகச் சொல்லி, இந்தக் குறிப்பிட்ட நெடுவரிசையில் எங்களைக் குறைக்கிறது.

289
00:18:38,760 --> 00:18:42,900
மூன்றாவது சரிபார்ப்பு சமமானது, மேலும் சாத்தியக்கூறுகளை வெட்டுகிறது.

290
00:18:42,900 --> 00:18:46,780
கடைசி சமச்சீர் சரிபார்ப்பு ஒற்றைப்படையானது, கீழே எங்கோ ஒரு பிழை இருப்பதாகக் கூறுகிறது,

291
00:18:46,780 --> 00:18:51,700
அது இப்போது நிலை எண் 10 இல் இருக்க வேண்டும் என்பதைக் காணலாம்.

292
00:18:51,700 --> 00:18:56,140
மேலும் என்னவென்றால், முழுத் தொகுதியின் சமநிலையும் ஒற்றைப்படையாக உள்ளது, இது

293
00:18:56,140 --> 00:18:58,220
இரண்டு அல்ல, ஒன்று புரட்டப்பட்டது என்ற நம்பிக்கையை அளிக்கிறது.

294
00:18:58,220 --> 00:19:01,600
இது மூன்று அல்லது அதற்கு மேற்பட்டதாக இருந்தால், அனைத்து சவால்களும் நிறுத்தப்படும்.

295
00:19:01,600 --> 00:19:06,520
அந்த பிட் எண் 10 ஐச் சரிசெய்த பிறகு, திருத்தம் செய்யப் பயன்படுத்தப்படாத

296
00:19:06,520 --> 00:19:11,620
11 பிட்களை வெளியே இழுத்தால், அசல் செய்தியின் தொடர்புடைய பகுதியை எங்களுக்குத் தருகிறது,

297
00:19:11,620 --> 00:19:16,160
அதை நீங்கள் ரிவைண்ட் செய்து ஒப்பிட்டுப் பார்த்தால், உண்மையில் நாம் எடுத்துக்காட்டைத் தொடங்கினோம்.

298
00:19:16,160 --> 00:19:19,260
இப்போது இதையெல்லாம் கையால் செய்வது எப்படி என்று உங்களுக்குத் தெரியும், பைதான் குறியீட்டின் ஒற்றை வரியில்

299
00:19:19,260 --> 00:19:23,940
இந்த தர்க்கத்தின் முக்கிய பகுதியை நீங்கள் எவ்வாறு செயல்படுத்தலாம் என்பதை நான் உங்களுக்குக் காட்ட விரும்புகிறேன்.

300
00:19:23,940 --> 00:19:28,400
இந்த அல்காரிதம் உண்மையில் எவ்வளவு நேர்த்தியானது, பிழையின் நிலையைச் சுட்டிக்காட்ட இயந்திரத்தைப்

301
00:19:28,400 --> 00:19:32,380
பெறுவது எவ்வளவு எளிது, அதை எவ்வாறு முறையாக அளவிடுவது, மற்றும் அனைத்தையும்

302
00:19:32,380 --> 00:19:37,680
நாம் எவ்வாறு வடிவமைக்கலாம் என்பதைப் பற்றி நான் இதுவரை உங்களுக்குச் சொல்லவில்லை.

303
00:19:37,680 --> 00:19:39,580
இது பல தனித்தனி சமநிலை சரிபார்ப்புகளை விட ஒரே செயல்பாடாக உள்ளது.

304
00:19:39,580 --> 00:19:41,680
நான் என்ன சொல்கிறேன் என்பதைப் பார்க்க, பாகம் 2 இல் என்னுடன் வாருங்கள்.

