1
00:00:00,000 --> 00:00:05,618
ஒரு சிடி அல்லது டிவிடியை கீறுவது எப்படி சாத்தியம்

2
00:00:05,618 --> 00:00:10,900
என்று நீங்கள் எப்போதாவது யோசித்திருக்கிறீர்களா?

3
00:00:10,900 --> 00:00:14,376
கீறல் உண்மையில் வட்டில் உள்ள 1s மற்றும் 0s ஐ பாதிக்கிறது,

4
00:00:14,376 --> 00:00:18,211
எனவே அது சேமிக்கப்பட்டவற்றிலிருந்து வேறுபட்ட தரவைப் படிக்கிறது,

5
00:00:18,211 --> 00:00:22,466
ஆனால் அது உண்மையில் கீறப்படாவிட்டால், அது படிக்கும் பிட்கள் துல்லியமாக

6
00:00:22,466 --> 00:00:26,721
குறியிடப்பட்ட அதே கோப்பில் டிகோட் செய்யப்படும், a பிட் நகலுக்கான பிட்,

7
00:00:26,721 --> 00:00:28,400
அந்த பிழைகள் இருந்தபோதிலும்.

8
00:00:28,400 --> 00:00:33,158
கணித புத்திசாலித்தனத்தின் முழு குவியலும் உள்ளது, இது தரவுகளை சேமிக்க அனுமதிக்கிறது,

9
00:00:33,158 --> 00:00:36,840
மேலும் முக்கியமாக தரவை அனுப்புகிறது, பிழைகளை எதிர்க்கும் வகையில்.

10
00:00:36,840 --> 00:00:39,460
சரி, சரி, உண்மையில் இதைச் செய்வதற்கான வழியைக்

11
00:00:39,460 --> 00:00:42,480
கொண்டு வருவதற்கு அவ்வளவு புத்திசாலித்தனம் தேவையில்லை.

12
00:00:42,480 --> 00:00:46,994
வீடியோ அல்லது ஒலி அல்லது உரை, சில குறியீடு, ஒரு படம், எதுவாக இருந்தாலும்,

13
00:00:46,994 --> 00:00:50,960
எந்தக் கோப்பும் இறுதியில் 1 வி மற்றும் 0 விகளின் சில வரிசையாகும்.

14
00:00:50,960 --> 00:00:54,697
புரட்டப்படும் எந்த பிட்டையும் சரிசெய்வதற்கான எளிய உத்தி,

15
00:00:54,697 --> 00:00:57,780
ஒவ்வொரு பிட்டின் மூன்று பிரதிகளை சேமிப்பதாகும்.

16
00:00:57,780 --> 00:01:03,434
இந்தக் கோப்பைப் படிக்கும் இயந்திரம், இந்த மூன்று நகல்களையும் ஒப்பிட்டு,

17
00:01:03,434 --> 00:01:07,440
முரண்பாடுகள் ஏற்படும் போதெல்லாம், 3ல் 2ஐப் பெறலாம்.

18
00:01:07,440 --> 00:01:09,381
ஆனால் இதன் பொருள் என்னவென்றால், பணிநீக்கத்திற்கு

19
00:01:09,381 --> 00:01:11,560
உங்கள் மூன்றில் இரண்டு பங்கு இடத்தைப் பயன்படுத்துகிறது.

20
00:01:11,560 --> 00:01:14,672
அப்படியிருந்தும், அந்த இடங்கள் அனைத்திற்கும், ஒன்றுக்கு மேற்பட்ட

21
00:01:14,672 --> 00:01:18,120
பிட்கள் புரட்டப்பட்டால் என்ன நடக்கும் என்பதற்கு வலுவான உத்தரவாதம் இல்லை.

22
00:01:18,120 --> 00:01:21,695
மிகவும் சுவாரஸ்யமான கேள்வி என்னவென்றால், அதை எவ்வாறு உருவாக்குவது என்பது,

23
00:01:21,695 --> 00:01:24,740
முடிந்தவரை சிறிய இடத்தை விட்டுவிட்டு பிழைகளை சரிசெய்ய முடியும்.

24
00:01:24,740 --> 00:01:28,705
எடுத்துக்காட்டாக, இந்த வீடியோவைப் பற்றி நீங்கள் அறியும் முறையைப் பயன்படுத்தி,

25
00:01:28,705 --> 00:01:32,975
உங்கள் தரவை 256-பிட் தொகுதிகளில் சேமிக்கலாம், அங்கு ஒவ்வொரு தொகுதியும் 9 பிட்கள், 9!

26
00:01:32,975 --> 00:01:36,724
ஒரு வகையான பணிநீக்கமாக செயல்பட, மற்ற 247 பிட்கள் நீங்கள்

27
00:01:36,724 --> 00:01:41,000
விரும்பும் அர்த்தமுள்ள செய்தி அல்லது தரவை எடுத்துச் செல்ல இலவசம்.

28
00:01:41,000 --> 00:01:44,540
இங்கு ஏதேனும் பிட் புரட்டப்பட்டால், இந்த பிளாக்கைப் பார்ப்பதன் மூலம்,

29
00:01:44,540 --> 00:01:47,575
அதற்கு மேல் எதுவும் இல்லை, ஒரு இயந்திரம் பிழை இருப்பதையும்,

30
00:01:47,575 --> 00:01:50,610
துல்லியமாக அது எங்குள்ளது என்பதையும் அடையாளம் காண முடியும்,

31
00:01:50,610 --> 00:01:53,140
அதை எவ்வாறு சரிசெய்வது என்பது அவருக்குத் தெரியும்.

32
00:01:53,140 --> 00:01:55,540
நேர்மையாக, அது மந்திரம் போல் உணர்கிறது.

33
00:01:55,540 --> 00:01:58,140
இந்த குறிப்பிட்ட திட்டத்திற்கு, இரண்டு பிட்கள் புரட்டப்பட்டால்,

34
00:01:58,140 --> 00:02:00,904
இயந்திரம் குறைந்தபட்சம் இரண்டு பிழைகள் இருப்பதைக் கண்டறிய முடியும்,

35
00:02:00,904 --> 00:02:03,180
இருப்பினும் அவற்றை எவ்வாறு சரிசெய்வது என்று தெரியவில்லை.

36
00:02:03,180 --> 00:02:05,389
வெவ்வேறு அளவுகள் கொண்ட தொகுதிகளுக்கு இது எவ்வாறு

37
00:02:05,389 --> 00:02:08,140
அளவிடப்படுகிறது என்பதைப் பற்றி சிறிது நேரம் கழித்து பேசுவோம்.

38
00:02:08,140 --> 00:02:10,959
இது போன்ற பிழைகளை சரிசெய்ய உங்களை அனுமதிக்கும் முறைகள்,

39
00:02:10,959 --> 00:02:13,880
போதுமான அளவு, பிழை திருத்தக் குறியீடுகளாக அறியப்படுகின்றன.

40
00:02:13,880 --> 00:02:17,165
கடந்த நூற்றாண்டின் சிறந்த பகுதிக்கு, இந்தத் துறையானது வியக்கத்தக்க

41
00:02:17,165 --> 00:02:19,960
ஆழமான கணிதத்தின் மிகவும் வளமான ஆதாரமாக இருந்து வருகிறது,

42
00:02:19,960 --> 00:02:23,000
இது நாம் தினமும் பயன்படுத்தும் சாதனங்களில் இணைக்கப்பட்டுள்ளது.

43
00:02:23,000 --> 00:02:26,439
ஹேமிங் குறியீடு எனப்படும் ஆரம்பகால உதாரணங்களில் ஒன்றைப் பற்றிய

44
00:02:26,439 --> 00:02:29,660
முழுமையான புரிதலை உங்களுக்கு வழங்குவதே இங்குள்ள குறிக்கோள்.

45
00:02:29,660 --> 00:02:32,962
மேலும், இந்த வீடியோவின் கட்டமைப்பைப் பற்றி நான் சிந்திக்கும் விதம் அதை

46
00:02:32,962 --> 00:02:35,149
முடிந்தவரை நேரடியாக விளக்குவது குறைவாக உள்ளது,

47
00:02:35,149 --> 00:02:38,359
மேலும் இங்கும் இங்கும் கொஞ்சம் மென்மையான வழிகாட்டுதலுடன் அதை நீங்களே

48
00:02:38,359 --> 00:02:40,220
கண்டுபிடிக்கும்படி உங்களைத் தூண்டுகிறது.

49
00:02:40,220 --> 00:02:42,692
எனவே, ஒரு கட்டத்தில் அது எங்கே போகிறது என்று நீங்கள் உணரும்போது,

50
00:02:42,692 --> 00:02:45,012
அந்தத் தருணத்தை இடைநிறுத்தி, நான் உங்களுக்குச் சொல்லும் முன்

51
00:02:45,012 --> 00:02:47,180
திட்டம் என்னவாக இருக்கும் என்பதைத் தீவிரமாகக் கணிக்கவும்.

52
00:02:47,180 --> 00:02:50,127
மேலும், உங்கள் புரிதல் வன்பொருள் நிலைக்கு வர வேண்டுமெனில்,

53
00:02:50,127 --> 00:02:52,975
Ben Eater இதனுடன் இணைந்து ஒரு காணொளியை உருவாக்கியுள்ளது,

54
00:02:52,975 --> 00:02:57,221
இது ப்ரெட்போர்டுகளில் Hamming குறியீடுகளை உண்மையில் எவ்வாறு செயல்படுத்துவது என்பதைக்

55
00:02:57,221 --> 00:02:59,520
காட்டுகிறது, இது மிகவும் திருப்திகரமாக உள்ளது.

56
00:02:59,520 --> 00:03:02,923
ரீட்-சாலமன் அல்காரிதம் போன்ற நவீன குறியீடுகளைப் போல ஹேமிங் குறியீடுகள் பரவலாகப்

57
00:03:02,923 --> 00:03:05,433
பயன்படுத்தப்படவில்லை என்பதை நீங்கள் அறிந்திருக்க வேண்டும்,

58
00:03:05,433 --> 00:03:08,411
ஆனால் தொடக்கத்தில் இந்த பணி எவ்வளவு சாத்தியமற்றது என்று உணருவதற்கும்,

59
00:03:08,411 --> 00:03:12,112
ஒருமுறை அது எவ்வளவு நியாயமானதாக தோன்றுகிறது என்பதற்கும் இடையே ஒரு குறிப்பிட்ட மந்திரம்

60
00:03:12,112 --> 00:03:14,240
உள்ளது. ஹேமிங் பற்றி நீங்கள் கற்றுக்கொள்கிறீர்கள்.

61
00:03:14,240 --> 00:03:16,987
பிழை திருத்தத்தின் அடிப்படைக் கொள்கை என்னவென்றால்,

62
00:03:16,987 --> 00:03:19,627
சாத்தியமான அனைத்து செய்திகளின் பரந்த இடத்திலும்,

63
00:03:19,627 --> 00:03:22,860
சில துணைக்குழுக்கள் மட்டுமே சரியான செய்திகளாகக் கருதப்படும்.

64
00:03:22,860 --> 00:03:25,806
ஒரு ஒப்புமையாக, சரியாக உச்சரிக்கப்பட்ட வார்த்தைகள்

65
00:03:25,806 --> 00:03:29,100
மற்றும் தவறாக எழுதப்பட்ட வார்த்தைகள் பற்றி சிந்தியுங்கள்.

66
00:03:29,100 --> 00:03:33,461
சரியான செய்தி மாற்றப்படும்போதெல்லாம், நீங்கள் எழுத்துப்பிழையால் செய்யக்கூடியதைப் போல,

67
00:03:33,461 --> 00:03:36,757
அருகிலுள்ள செல்லுபடியாகும் அண்டை வீட்டாரிடம் அவர்கள் பார்ப்பதைத்

68
00:03:36,757 --> 00:03:38,380
திருத்துவதற்கு ரிசீவர் பொறுப்பு.

69
00:03:38,380 --> 00:03:43,973
இது போன்ற செய்திகளை திறம்பட வகைப்படுத்த ஒரு உறுதியான அல்காரிதம் கொண்டு வருவது,

70
00:03:43,973 --> 00:03:47,160
ஒரு குறிப்பிட்ட புத்திசாலித்தனத்தை எடுக்கும்.

71
00:03:47,160 --> 00:03:51,264
கதை 1940 களில் தொடங்குகிறது, ஒரு இளம் ரிச்சர்ட் ஹாமிங் பெல் லேப்ஸில் பணிபுரிந்தார்,

72
00:03:51,264 --> 00:03:54,586
மேலும் அவரது சில வேலைகளில் அவர் குறைந்த அணுகல் மட்டுமே இருந்த மிகப்

73
00:03:54,586 --> 00:03:57,420
பெரிய விலையுயர்ந்த பஞ்ச் கார்டு கணினியைப் பயன்படுத்தினார்.

74
00:03:57,420 --> 00:04:00,667
அவர் தொடர்ந்து போடும் ப்ரோக்ராம்கள் தோல்வியடைந்து கொண்டே இருந்தது,

75
00:04:00,667 --> 00:04:03,140
ஏனென்றால் அவ்வப்போது கொஞ்சம் தவறாகப் படிக்கப்படும்.

76
00:04:03,140 --> 00:04:06,636
விரக்தியே கண்டுபிடிப்பின் முக்கிய அம்சமாக இருப்பதால், அவர் மிகவும் சோர்வடைந்தார்,

77
00:04:06,636 --> 00:04:09,280
அவர் உலகின் முதல் பிழை திருத்தக் குறியீட்டைக் கண்டுபிடித்தார்.

78
00:04:09,280 --> 00:04:13,223
ஹேமிங் குறியீடுகளை வடிவமைக்க பல்வேறு வழிகள் உள்ளன, ஆனால் முதல் பாஸ் என,

79
00:04:13,223 --> 00:04:16,620
ஹாமிங் தானே அவற்றைப் பற்றி யோசித்த விதத்தில் செல்லப் போகிறோம்.

80
00:04:16,620 --> 00:04:20,372
எளிமையான ஒரு உதாரணத்தைப் பயன்படுத்துவோம், ஆனால் மிகவும் எளிமையானது அல்ல,

81
00:04:20,372 --> 00:04:21,400
16 பிட்களின் தொகுதி.

82
00:04:21,400 --> 00:04:25,700
இந்த பிட்களின் நிலைகளை 0 முதல் 15 வரை எண்ணுவோம்.

83
00:04:25,700 --> 00:04:30,358
நாம் சேமிக்க விரும்பும் உண்மையான தரவு இந்த பிட்களில் 12 பிட்களை மட்டுமே உருவாக்கும்,

84
00:04:30,358 --> 00:04:33,920
அதே நேரத்தில் 4 நிலைகள் ஒரு வகையான பணிநீக்கமாக ஒதுக்கப்பட்டுள்ளன.

85
00:04:33,920 --> 00:04:37,118
இங்கே தேவையற்ற வார்த்தையானது நகலெடுப்பதைக் குறிக்கவில்லை, எல்லாவற்றிற்கும் மேலாக,

86
00:04:37,118 --> 00:04:40,200
அந்த 4 பிட்கள் தரவுகளை கண்மூடித்தனமாக நகலெடுக்க போதுமான இடத்தைக் கொடுக்கவில்லை.

87
00:04:40,200 --> 00:04:44,526
அதற்கு பதிலாக, அவை மிகவும் நுணுக்கமான மற்றும் புத்திசாலித்தனமான பணிநீக்கமாக

88
00:04:44,526 --> 00:04:48,740
இருக்க வேண்டும், எந்த புதிய தகவலையும் சேர்க்காமல், பின்னடைவைச் சேர்க்கும்.

89
00:04:48,740 --> 00:04:52,169
இந்த 4 ஸ்பெஷல் பிட்கள் நன்றாக தொகுக்கப்படும் என்று நீங்கள் எதிர்பார்க்கலாம்,

90
00:04:52,169 --> 00:04:55,910
ஒருவேளை இறுதியில் அல்லது அது போன்ற ஏதாவது இருக்கலாம், ஆனால் நீங்கள் பார்ப்பது போல்,

91
00:04:55,910 --> 00:04:59,696
2 இன் அதிகாரங்கள் கொண்ட நிலைகளில் அவர்களை உட்கார வைப்பது இறுதியில் நேர்த்தியான ஒன்றை

92
00:04:59,696 --> 00:05:00,320
அனுமதிக்கிறது.

93
00:05:00,320 --> 00:05:02,966
பெரிய தொகுதிகளுக்கு இது எவ்வாறு அளவிடப்படுகிறது என்பது

94
00:05:02,966 --> 00:05:05,420
பற்றிய சிறிய குறிப்பை இது உங்களுக்கு வழங்கக்கூடும்.

95
00:05:05,420 --> 00:05:08,613
மேலும் தொழில்நுட்ப ரீதியாக இது 11 பிட் டேட்டாவாக மட்டுமே முடிவடைகிறது,

96
00:05:08,613 --> 00:05:12,301
நிலை 0 இல் என்ன நடக்கிறது என்பதற்கு லேசான நுணுக்கம் இருப்பதை நீங்கள் காண்பீர்கள்,

97
00:05:12,301 --> 00:05:14,280
ஆனால் இப்போது அதைப் பற்றி கவலைப்பட வேண்டாம்.

98
00:05:14,280 --> 00:05:18,622
எந்தவொரு பிழை திருத்தும் அல்காரிதம் போலவே, இது இரண்டு பிளேயர்களை உள்ளடக்கும்,

99
00:05:18,622 --> 00:05:22,797
இந்த 4 சிறப்பு பிட்களை அமைப்பதற்கு பொறுப்பான அனுப்புநர் மற்றும் சில வகையான

100
00:05:22,797 --> 00:05:26,360
சரிபார்ப்பு மற்றும் பிழைகளை சரிசெய்வதற்கு பொறுப்பான ஒரு பெறுநர்.

101
00:05:26,360 --> 00:05:29,267
நிச்சயமாக, அனுப்புநர் மற்றும் பெறுநர் என்ற வார்த்தைகள் உண்மையில் அனைத்து

102
00:05:29,267 --> 00:05:32,015
சோதனைகளையும் செய்யும் இயந்திரங்கள் அல்லது மென்பொருளைக் குறிக்கின்றன,

103
00:05:32,015 --> 00:05:35,480
மேலும் ஒரு செய்தியின் யோசனை உண்மையில் பரந்த அளவில், சேமிப்பகம் போன்றவற்றை உள்ளடக்கியது.

104
00:05:35,480 --> 00:05:38,858
எல்லாவற்றிற்கும் மேலாக, தரவை சேமிப்பது என்பது ஒரு இடத்திலிருந்து இன்னொரு இடத்திற்கு

105
00:05:38,858 --> 00:05:42,318
அனுப்புவதற்குப் பதிலாக கடந்த காலத்திலிருந்து எதிர்காலத்திற்கு ஒரு செய்தியை அனுப்புவது

106
00:05:42,318 --> 00:05:42,640
போன்றது.

107
00:05:42,640 --> 00:05:45,319
அதுதான் அமைப்பு, ஆனால் நாம் உள்ளே நுழைவதற்கு முன்,

108
00:05:45,319 --> 00:05:48,735
ஹேமிங்கின் கண்டுபிடிப்பின் போது அவரது மனதில் புதியதாக இருந்த ஒரு

109
00:05:48,735 --> 00:05:52,465
தொடர்புடைய யோசனையைப் பற்றி பேச வேண்டும், இது எந்த ஒரு பிட் பிழைகளையும்

110
00:05:52,465 --> 00:05:55,723
கண்டறிய உங்களை அனுமதிக்கிறது, ஆனால் அவற்றை சரிசெய்ய முடியாது.

111
00:05:55,723 --> 00:05:57,300
வணிகத்தில் சமநிலை சரிபார்ப்பு.

112
00:05:57,300 --> 00:06:01,143
சமநிலைச் சரிபார்ப்பிற்கு, அனுப்புநரே ட்யூனிங்கிற்குப் பொறுப்பானவர் என்று ஒரே ஒரு

113
00:06:01,143 --> 00:06:04,940
பிட் மட்டுமே பிரித்தெடுக்கிறோம், மீதமுள்ளவர்கள் செய்தியை எடுத்துச் செல்ல இலவசம்.

114
00:06:04,940 --> 00:06:08,334
இந்த ஸ்பெஷல் பிட்டின் ஒரே வேலை, செய்தியில் உள்ள 1களின்

115
00:06:08,334 --> 00:06:12,100
மொத்த எண்ணிக்கையும் இரட்டை எண்ணாக இருப்பதை உறுதி செய்வதுதான்.

116
00:06:12,100 --> 00:06:15,986
எடுத்துக்காட்டாக இப்போது, 1களின் மொத்த எண்ணிக்கை 7, அது ஒற்றைப்படை,

117
00:06:15,986 --> 00:06:20,960
எனவே அனுப்புநர் அந்த சிறப்பு பிட்டை 1 ஆக மாற்ற வேண்டும், இது எண்ணிக்கையை சமமாக்குகிறது.

118
00:06:20,960 --> 00:06:24,763
ஆனால் பிளாக் ஏற்கனவே 1களின் இரட்டை எண்ணுடன் தொடங்கியிருந்தால்,

119
00:06:24,763 --> 00:06:27,480
இந்த சிறப்பு பிட் 0 இல் வைக்கப்பட்டிருக்கும்.

120
00:06:27,480 --> 00:06:30,297
இது மிகவும் எளிமையானது, ஏமாற்றும் வகையில் எளிமையானது,

121
00:06:30,297 --> 00:06:33,689
ஆனால் ஒரு செய்தியில் எந்த இடத்திலும் மாற்றம் குறித்த யோசனையை ஒரு

122
00:06:33,689 --> 00:06:37,760
பிட் தகவலில் பிரதிபலிக்கும் வகையில் இது ஒரு நம்பமுடியாத நேர்த்தியான வழியாகும்.

123
00:06:37,760 --> 00:06:42,790
இந்தச் செய்தியின் ஏதேனும் பிட் 0 முதல் 1 அல்லது 1 முதல் 0 வரை புரட்டப்பட்டால்,

124
00:06:42,790 --> 00:06:48,140
அது 1 வினாடிகளின் மொத்த எண்ணிக்கையை இரட்டைப்படையாக மாற்றுகிறது என்பதைக் கவனியுங்கள்.

125
00:06:48,140 --> 00:06:51,594
நீங்கள் பெறுபவராக இருந்தால், நீங்கள் இந்த செய்தியைப் பார்க்கிறீர்கள்,

126
00:06:51,594 --> 00:06:55,739
நீங்கள் ஒற்றைப்படை எண் 1ஐக் கண்டால், அது எங்கே என்று உங்களுக்குத் தெரியாவிட்டாலும்,

127
00:06:55,739 --> 00:06:58,700
சில பிழை ஏற்பட்டிருப்பதை நீங்கள் உறுதியாக அறிந்து கொள்ளலாம்.

128
00:06:58,700 --> 00:07:01,555
வாசகங்களில், பிட்களின் குழுவானது 1களின் இரட்டை அல்லது

129
00:07:01,555 --> 00:07:04,940
ஒற்றைப்படை எண்ணைக் கொண்டதா என்பது அதன் சமநிலை என அறியப்படுகிறது.

130
00:07:04,940 --> 00:07:07,832
நீங்கள் எண்களைப் பயன்படுத்தலாம் மற்றும் சமநிலை 0 அல்லது 1 என்று கூறலாம்,

131
00:07:07,832 --> 00:07:11,320
இது பொதுவாக நீங்கள் யோசனையுடன் கணிதத்தை செய்யத் தொடங்கியவுடன் மிகவும் உதவியாக இருக்கும்.

132
00:07:11,320 --> 00:07:14,349
மேலும் இந்த ஸ்பெஷல் பிட் பாரிட்டியைக் கட்டுப்படுத்த

133
00:07:14,349 --> 00:07:18,020
அனுப்புபவர் பயன்படுத்தும் பாரிட்டி பிட் என்று அழைக்கப்படுகிறது.

134
00:07:18,020 --> 00:07:21,777
உண்மையில், நாம் தெளிவாக இருக்க வேண்டும், ரிசீவர் ஒரு ஒற்றைப்படை சமநிலையைக் கண்டால்,

135
00:07:21,777 --> 00:07:25,623
அது ஒரே ஒரு பிழை என்று அர்த்தமல்ல, 3 பிழைகள், அல்லது 5 அல்லது வேறு ஏதேனும் ஒற்றைப்படை

136
00:07:25,623 --> 00:07:29,560
எண் இருந்திருக்கலாம், ஆனால் அவர்கள் நிச்சயமாக அறிந்து கொள்ள முடியும். அது 0 இல்லை என்று.

137
00:07:29,560 --> 00:07:33,917
மறுபுறம், 2 பிழைகள் அல்லது ஏதேனும் சம எண்ணிக்கையிலான பிழைகள் இருந்திருந்தால்,

138
00:07:33,917 --> 00:07:37,158
அந்த இறுதி எண்ணிக்கை 1 வினாடிகள் இன்னும் சமமாக இருக்கும்,

139
00:07:37,158 --> 00:07:41,628
எனவே பெறுநரால் சம எண்ணிக்கையானது செய்தி பிழையில்லாதது என்று அர்த்தம் என்று முழு

140
00:07:41,628 --> 00:07:43,360
நம்பிக்கையுடன் இருக்க முடியாது.

141
00:07:43,360 --> 00:07:46,534
2 பிட் ஃபிளிப்புகளால் குழப்பமடையும் செய்தி மிகவும் பலவீனமானது

142
00:07:46,534 --> 00:07:49,760
என்று நீங்கள் புகார் செய்யலாம், நீங்கள் சொல்வது முற்றிலும் சரி.

143
00:07:49,760 --> 00:07:53,209
இருப்பினும், பிழை கண்டறிதல் அல்லது திருத்தம் செய்வதற்கான எந்த முறையும்

144
00:07:53,209 --> 00:07:56,610
இல்லை என்பதை நினைவில் கொள்ளுங்கள், நீங்கள் பெறும் செய்தி அனுப்புநரின்

145
00:07:56,610 --> 00:07:59,720
நோக்கம்தான் என்பதில் 100% நம்பிக்கையை உங்களுக்கு வழங்க முடியும்.

146
00:07:59,720 --> 00:08:02,876
எல்லாவற்றிற்கும் மேலாக, போதுமான சீரற்ற சத்தம் எப்போதும்

147
00:08:02,876 --> 00:08:05,920
ஒரு சரியான செய்தியை மற்றொரு சரியான செய்தியாக மாற்றும்.

148
00:08:05,920 --> 00:08:11,322
அதற்குப் பதிலாக, ஒரு குறிப்பிட்ட அதிகபட்ச எண்ணிக்கையிலான பிழைகள் வரை வலுவான திட்டத்தைக்

149
00:08:11,322 --> 00:08:16,480
கொண்டு வருவதே குறிக்கோள் அல்லது இது போன்ற தவறான நேர்மறையின் நிகழ்தகவைக் குறைக்கலாம்.

150
00:08:16,480 --> 00:08:20,426
சமநிலை சரிபார்ப்புகள் மிகவும் பலவீனமாக உள்ளன, ஆனால் ஒரு முழுச் செய்தியில்

151
00:08:20,426 --> 00:08:23,253
மாற்றத்தின் யோசனையை ஒரு பிட் வரை வடிகட்டுவதன் மூலம்,

152
00:08:23,253 --> 00:08:28,000
அவை நமக்குத் தருவது மிகவும் அதிநவீன திட்டங்களுக்கான சக்திவாய்ந்த கட்டுமானத் தொகுதியாகும்.

153
00:08:28,000 --> 00:08:31,458
எடுத்துக்காட்டாக, ஹேமிங் ஒரு பிழை எங்கே நடந்தது என்பதைக் கண்டறியும் வழியைத்

154
00:08:31,458 --> 00:08:35,508
தேடிக்கொண்டிருந்தபோது, அது நிகழ்ந்தது மட்டுமல்ல, அவருடைய முக்கிய நுண்ணறிவு என்னவென்றால்,

155
00:08:35,508 --> 00:08:38,284
நீங்கள் சில சமத்துவச் சரிபார்ப்புகளை முழுச் செய்திக்கு அல்ல,

156
00:08:38,284 --> 00:08:41,834
ஆனால் கவனமாகத் தேர்ந்தெடுக்கப்பட்ட சில துணைக்குழுக்களுக்குப் பயன்படுத்தினால்,

157
00:08:41,834 --> 00:08:45,247
நீங்கள் கேட்கலாம். எந்த ஒரு பிட் பிழையின் இருப்பிடத்தைக் குறிக்கும் மேலும்

158
00:08:45,247 --> 00:08:46,840
சுத்திகரிக்கப்பட்ட தொடர் கேள்விகள்.

159
00:08:46,840 --> 00:08:50,097
ஒட்டுமொத்த உணர்வு 20 கேள்விகள் கொண்ட விளையாட்டை விளையாடுவது போன்றது,

160
00:08:50,097 --> 00:08:54,300
ஆம் அல்லது இல்லை என்று கேள்விகளைக் கேட்பது சாத்தியக்கூறுகளின் இடத்தை பாதியாக வெட்டுகிறது.

161
00:08:54,300 --> 00:08:57,399
எடுத்துக்காட்டாக, இந்த 8 பிட்கள், ஒற்றைப்படை எண்கள் உள்ள எல்லா

162
00:08:57,399 --> 00:09:00,400
நிலைகளிலும் சரிபார்ப்பைச் செய்கிறோம் என்று வைத்துக் கொள்வோம்.

163
00:09:00,400 --> 00:09:03,832
ஒரு பிழை கண்டறியப்பட்டால், அது குறிப்பாக பிழை எங்குள்ளது,

164
00:09:03,832 --> 00:09:09,160
அதாவது அது ஒற்றைப்படை நிலையில் உள்ளது என்பது பற்றிய கூடுதல் தகவலை பெறுநருக்கு வழங்குகிறது.

165
00:09:09,160 --> 00:09:12,370
அந்த 8 பிட்களில் எந்தப் பிழையும் கண்டறியப்படவில்லை என்றால்,

166
00:09:12,370 --> 00:09:16,330
அது எந்தப் பிழையும் இல்லை என்று அர்த்தம், அல்லது அது சம நிலையில் எங்காவது

167
00:09:16,330 --> 00:09:17,240
அமர்ந்திருக்கும்.

168
00:09:17,240 --> 00:09:21,320
சமநிலைச் சரிபார்ப்பை பாதி பிட்களுக்குக் கட்டுப்படுத்துவது குறைவான பலனைத் தரும் என்று

169
00:09:21,320 --> 00:09:25,352
நீங்கள் நினைக்கலாம், ஆனால் மற்ற நன்கு தேர்ந்தெடுக்கப்பட்ட சரிபார்ப்புகளுடன் இணைந்து

170
00:09:25,352 --> 00:09:29,288
அதைச் செய்யும்போது, அது எதிர்நோக்கும் வகையில் நமக்கு மிகவும் சக்திவாய்ந்த ஒன்றைத்

171
00:09:29,288 --> 00:09:29,720
தருகிறது.

172
00:09:29,720 --> 00:09:32,973
அந்த சமநிலை சரிபார்ப்பை உண்மையில் அமைக்க, நினைவில் கொள்ளுங்கள்,

173
00:09:32,973 --> 00:09:36,786
அந்த முழுக் குழுவின் சமநிலையைக் கட்டுப்படுத்தும் சில சிறப்புப் பிட்களை அது

174
00:09:36,786 --> 00:09:37,600
ஒதுக்க வேண்டும்.

175
00:09:37,600 --> 00:09:39,920
இங்கே நிலை 1 ஐத் தேர்வு செய்வோம்.

176
00:09:39,920 --> 00:09:44,165
காட்டப்பட்டுள்ள எடுத்துக்காட்டில், இந்த 8 பிட்களின் சமநிலை தற்போது ஒற்றைப்படையாக உள்ளது,

177
00:09:44,165 --> 00:09:48,220
எனவே அந்த பாரிட்டி பிட்டை மாற்றுவதற்கு அனுப்புநரே பொறுப்பு, இப்போது அது சமமாக உள்ளது.

178
00:09:48,220 --> 00:09:51,040
நாங்கள் செய்வோம் 4 சமநிலை சரிபார்ப்புகளில் இது 1 மட்டுமே.

179
00:09:51,040 --> 00:09:54,603
இரண்டாவது சரிபார்ப்பு கட்டத்தின் வலது பாதியில் உள்ள 8 பிட்களில் உள்ளது,

180
00:09:54,603 --> 00:09:56,880
குறைந்தபட்சம் நாங்கள் அதை இங்கே வரைந்துள்ளோம்.

181
00:09:56,880 --> 00:10:00,272
இந்த நேரத்தில் நாம் நிலை 2 ஐ ஒரு சமநிலை பிட்டாகப் பயன்படுத்தலாம்,

182
00:10:00,272 --> 00:10:03,048
எனவே இந்த 8 பிட்கள் ஏற்கனவே சம சமநிலையைக் கொண்டுள்ளன,

183
00:10:03,048 --> 00:10:07,160
மேலும் அந்த பிட் எண் 2 ஐ மாற்றாமல் விட்டுவிட்டு அனுப்புபவர் நன்றாக உணர முடியும்.

184
00:10:07,160 --> 00:10:10,109
மறுமுனையில், ரிசீவர் இந்தக் குழுவின் சமநிலையைச் சரிபார்த்து,

185
00:10:10,109 --> 00:10:13,107
அது ஒற்றைப்படையாக இருப்பதைக் கண்டறிந்தால், வலதுபுறத்தில் உள்ள

186
00:10:13,107 --> 00:10:15,960
இந்த 8 பிட்களில் எங்காவது பிழை இருப்பதை அவர்கள் அறிவார்கள்.

187
00:10:15,960 --> 00:10:21,260
இல்லையெனில் பிழை இல்லை அல்லது பிழை இடது பாதியில் எங்கோ உள்ளது என்று அர்த்தம்.

188
00:10:21,260 --> 00:10:23,730
அல்லது இரண்டு பிழைகள் இருந்திருக்கலாம் என்று நினைக்கிறேன்,

189
00:10:23,730 --> 00:10:27,080
ஆனால் இப்போதைக்கு முழுத் தொகுதியிலும் அதிகபட்சம் ஒரு பிழை இருப்பதாகக் கருதுவோம்.

190
00:10:27,080 --> 00:10:29,160
அதை விட விஷயங்கள் முற்றிலும் உடைந்து போகின்றன.

191
00:10:29,160 --> 00:10:31,008
இங்கே, அடுத்த இரண்டு காசோலைகளைப் பார்ப்பதற்கு முன்,

192
00:10:31,008 --> 00:10:33,213
இந்த முதல் இரண்டையும் நீங்கள் ஒன்றாகக் கருத்தில் கொள்ளும்போது

193
00:10:33,213 --> 00:10:35,880
நாம் என்ன செய்ய அனுமதிக்கிறது என்பதைப் பற்றி சிறிது சிந்தித்துப் பாருங்கள்.

194
00:10:35,880 --> 00:10:37,991
ஒற்றைப்படை நெடுவரிசைகள் மற்றும் வலது பாதியில்

195
00:10:37,991 --> 00:10:40,240
ஒரு பிழையை நீங்கள் கண்டறிந்ததாக வைத்துக்கொள்வோம்.

196
00:10:40,240 --> 00:10:43,940
கடைசி நெடுவரிசையில் எங்கோ பிழை உள்ளது என்று அர்த்தம்.

197
00:10:43,940 --> 00:10:47,207
ஒற்றைப்படை நெடுவரிசையில் பிழை இல்லை, ஆனால் வலது பாதியில் ஒன்று இருந்தால்,

198
00:10:47,207 --> 00:10:50,520
அது இரண்டாவது முதல் கடைசி நெடுவரிசையில் உள்ளது என்று உங்களுக்குச் சொல்லும்.

199
00:10:50,520 --> 00:10:52,906
அதேபோல ஒற்றைப்படை நெடுவரிசைகளில் பிழை இருந்தால்,

200
00:10:52,906 --> 00:10:56,560
வலது பாதியில் இல்லை என்றால், அது இரண்டாவது நெடுவரிசையில் எங்காவது தெரியும்.

201
00:10:56,560 --> 00:11:00,258
அந்த இரண்டு சமநிலை சரிபார்ப்புகளில் எதுவுமே எதையும் கண்டறியவில்லை என்றால்,

202
00:11:00,258 --> 00:11:03,760
அந்த இடதுபுற நெடுவரிசையில் மட்டுமே பிழை இருக்க முடியும் என்று அர்த்தம்.

203
00:11:03,760 --> 00:11:06,480
ஆனால் அது எந்த பிழையும் இல்லை என்று அர்த்தம்.

204
00:11:06,480 --> 00:11:08,950
இரண்டு சமநிலை சரிபார்ப்புகள் நெடுவரிசையை பின் செய்ய

205
00:11:08,950 --> 00:11:11,800
அனுமதிக்கும் என்று கூறுவதற்கு இது மிகவும் கடினமான வழியாகும்.

206
00:11:11,800 --> 00:11:14,000
இங்கிருந்து, பின்வருவனவற்றை நீங்கள் யூகிக்க முடியும்.

207
00:11:14,000 --> 00:11:16,240
நாங்கள் அடிப்படையில் அதையே செய்கிறோம் ஆனால் வரிசைகளுக்கு.

208
00:11:16,240 --> 00:11:18,615
நிலை 4ஐ சமநிலை பிட்டாகப் பயன்படுத்தி ஒற்றைப்படை

209
00:11:18,615 --> 00:11:21,040
வரிசைகளில் சமநிலைச் சரிபார்ப்பு இருக்கப் போகிறது.

210
00:11:21,040 --> 00:11:24,889
எனவே இந்த எடுத்துக்காட்டில் அந்தக் குழு ஏற்கனவே சம சமநிலையைக் கொண்டுள்ளது,

211
00:11:24,889 --> 00:11:26,480
எனவே பிட் 4 0 ஆக அமைக்கப்படும்.

212
00:11:26,480 --> 00:11:30,012
இறுதியாக, கீழே உள்ள இரண்டு வரிசைகளில் சமநிலைச் சரிபார்ப்பு உள்ளது,

213
00:11:30,012 --> 00:11:32,280
நிலை 8 ஐ சமநிலை பிட்டாகப் பயன்படுத்துகிறது.

214
00:11:32,280 --> 00:11:34,871
இந்த நிலையில், குழுவிற்கு சமமான சமநிலையை வழங்க,

215
00:11:34,871 --> 00:11:37,840
அனுப்புநர் அந்த பிட் 8 ஐ இயக்க வேண்டும் போல் தெரிகிறது.

216
00:11:37,840 --> 00:11:40,399
முதல் இரண்டு காசோலைகள் நெடுவரிசையைக் கீழே பின்னுவதைப் போலவே,

217
00:11:40,399 --> 00:11:43,000
இந்த அடுத்த இரண்டும் உங்களை வரிசையைப் பின் செய்ய அனுமதிக்கும்.

218
00:11:43,000 --> 00:11:48,400
எடுத்துக்காட்டாக, பரிமாற்றத்தின் போது, நிலை 3 இல் பிழை இருப்பதாக கற்பனை செய்து பாருங்கள்.

219
00:11:48,400 --> 00:11:52,280
சரி, இது முதல் சமநிலைக் குழுவைப் பாதிக்கிறது, மேலும் இது இரண்டாவது சமநிலைக் குழுவையும்

220
00:11:52,280 --> 00:11:55,938
பாதிக்கிறது, எனவே அந்த வலது நெடுவரிசையில் எங்காவது பிழை இருப்பதைப் பெறுபவருக்குத்

221
00:11:55,938 --> 00:11:56,340
தெரியும்.

222
00:11:56,340 --> 00:12:01,380
ஆனால் இது மூன்றாவது குழுவை பாதிக்காது, நான்காவது குழுவை பாதிக்காது.

223
00:12:01,380 --> 00:12:05,169
மேலும் இது முதல் வரிசை வரை பிழையைக் குறிப்பிடுவதற்கு ரிசீவரை அனுமதிக்கிறது,

224
00:12:05,169 --> 00:12:08,660
அதாவது நிலை 3 என்று அர்த்தம், அதனால் அவர்கள் பிழையை சரிசெய்ய முடியும்.

225
00:12:08,660 --> 00:12:13,072
இந்த நான்கு கேள்விகளுக்கான பதில்கள் உண்மையில் ஒரு குறிப்பிட்ட இடத்தைப் பின்தொடர

226
00:12:13,072 --> 00:12:17,320
உங்களை அனுமதிக்கும் என்பதை நீங்கள் நம்புவதற்கு சிறிது நேரம் ஒதுக்கி மகிழலாம்.

227
00:12:17,320 --> 00:12:20,558
உண்மையில், உங்களில் உள்ள புத்திசாலிகள் இந்தக் கேள்விகளுக்கும்

228
00:12:20,558 --> 00:12:23,640
பைனரி எண்ணிக்கைக்கும் இடையே உள்ள தொடர்பைக் கூட கவனிக்கலாம்.

229
00:12:23,640 --> 00:12:27,232
நீங்கள் செய்தால், மீண்டும் வலியுறுத்துகிறேன், இடைநிறுத்துகிறேன்,

230
00:12:27,232 --> 00:12:30,880
நான் அதை கெடுக்கும் முன் இணைப்பை வரைய நீங்களே முயற்சி செய்யுங்கள்.

231
00:12:30,880 --> 00:12:35,115
ஒரு சமநிலை பிட் தானே பாதிக்கப்பட்டால் என்ன ஆகும் என்று நீங்கள் யோசிக்கிறீர்கள் என்றால்,

232
00:12:35,115 --> 00:12:36,560
நீங்கள் அதை முயற்சி செய்யலாம்.

233
00:12:36,560 --> 00:12:41,784
இந்த நான்கு ஸ்பெஷல் பிட்களில் எந்தப் பிழையும் ஒரே மாதிரியான நான்கு கேள்விகளைக் கொண்ட

234
00:12:41,784 --> 00:12:46,825
பிறவற்றைப் போலவே எப்படிக் கண்காணிக்கப் போகிறது என்பதைப் பற்றி சிறிது சிந்தித்துப்

235
00:12:46,825 --> 00:12:47,440
பாருங்கள்.

236
00:12:47,440 --> 00:12:50,414
இது உண்மையில் ஒரு பொருட்டல்ல, ஏனெனில் நாளின் முடிவில் நாம் விரும்புவது

237
00:12:50,414 --> 00:12:53,640
செய்தி பிட்களைப் பாதுகாக்க வேண்டும், பிழை திருத்தம் பிட்கள் சவாரி செய்கின்றன.

238
00:12:53,640 --> 00:12:56,450
ஆனால் அந்த பிட்களையும் பாதுகாப்பது இயற்கையாகவே ஒரு

239
00:12:56,450 --> 00:12:59,260
துணை தயாரிப்பாக திட்டத்திலிருந்து வெளியேறும் ஒன்று.

240
00:12:59,260 --> 00:13:02,380
இது எப்படி இருக்கும் என்பதை நீங்கள் எதிர்பார்த்து மகிழலாம்.

241
00:13:02,380 --> 00:13:06,872
எடுத்துக்காட்டாக, 256 பிட் அளவு கொண்ட ஒரு தொகுதியை நாங்கள் பயன்படுத்தினால்,

242
00:13:06,872 --> 00:13:11,305
எடுத்துக்காட்டாக, ஒரு இடத்தைப் பின் செய்ய, குறிப்பிட்ட இடத்திற்குச் சென்று

243
00:13:11,305 --> 00:13:15,680
பைனரி தேடுவதற்கு உங்களுக்கு எட்டு ஆம் அல்லது இல்லை கேள்விகள் மட்டுமே தேவை.

244
00:13:15,680 --> 00:13:19,541
மேலும் நினைவில் கொள்ளுங்கள், ஒவ்வொரு கேள்விக்கும் பொருத்தமான

245
00:13:19,541 --> 00:13:23,340
சமநிலை சரிபார்ப்பை அமைக்க ஒரு பிட் மட்டுமே கொடுக்க வேண்டும்.

246
00:13:23,340 --> 00:13:25,326
உங்களில் சிலர் ஏற்கனவே இதைப் பார்த்திருக்கலாம்,

247
00:13:25,326 --> 00:13:28,677
ஆனால் இந்தக் கேள்விகள் என்ன என்பதை ஓரிரு நிமிடங்களில் கண்டுபிடிப்பதற்கான முறையான

248
00:13:28,677 --> 00:13:29,960
வழியைப் பற்றி பின்னர் பேசுவோம்.

249
00:13:29,960 --> 00:13:34,440
நாங்கள் இங்கு உருவாக்கி வருவதன் செயல்திறனைப் பாராட்ட இந்த ஓவியம் போதுமானது என நம்புகிறோம்.

250
00:13:34,440 --> 00:13:38,426
முதல் விஷயம், அந்த எட்டு ஹைலைட் செய்யப்பட்ட பாரிட்டி பிட்களைத் தவிர,

251
00:13:38,426 --> 00:13:41,720
நீங்கள் விரும்பும் செய்தி அல்லது தரவைச் சுமந்து செல்லும்.

252
00:13:41,720 --> 00:13:48,195
8 பிட்கள் தேவையற்றவை, அதாவது அவை முழுவதுமாக மீதமுள்ள செய்தியால் தீர்மானிக்கப்படுகின்றன,

253
00:13:48,195 --> 00:13:53,640
ஆனால் இது செய்தியை முழுவதுமாக நகலெடுப்பதை விட மிகவும் புத்திசாலித்தனமானது.

254
00:13:53,640 --> 00:13:56,243
இன்னும், மிகக் குறைவாகக் கொடுக்கப்பட்டால், நீங்கள்

255
00:13:56,243 --> 00:13:59,000
எந்த ஒரு பிட் பிழையையும் கண்டறிந்து சரிசெய்ய முடியும்.

256
00:13:59,000 --> 00:14:00,400
சரி, கிட்டத்தட்ட.

257
00:14:00,400 --> 00:14:04,904
சரி, இங்கு உள்ள ஒரு பிரச்சனை என்னவென்றால், நான்கு சமநிலை சரிபார்ப்புகளில் எதுவுமே

258
00:14:04,904 --> 00:14:09,409
பிழையைக் கண்டறியவில்லை என்றால், அதாவது 8 பிட்களின் சிறப்பாகத் தேர்ந்தெடுக்கப்பட்ட

259
00:14:09,409 --> 00:14:13,584
துணைக்குழுக்கள் அனைத்தும், அனுப்புநரின் நோக்கத்தைப் போலவே சமமான சமநிலைகளைக்

260
00:14:13,584 --> 00:14:17,760
கொண்டிருக்கின்றன என்று அர்த்தம். , அல்லது அது நம்மை நிலை 0 ஆகக் குறைக்கிறது.

261
00:14:17,760 --> 00:14:33,000
நான்கு ஆம் அல்லது இல்லை என்ற கேள்விகளுடன், எங்களிடம் 16 சாத்தியமான முடிவுகள் உள்ளன. நிலை.

262
00:14:33,000 --> 00:14:37,860
இங்கே தீர்வு உண்மையில் மிகவும் எளிமையானது, அந்த 0வது பிட்டை முழுவதுமாக மறந்துவிடுங்கள்.

263
00:14:37,860 --> 00:14:40,368
எனவே, நாங்கள் எங்கள் நான்கு சமநிலை சரிபார்ப்புகளைச் செய்யும்போது,

264
00:14:40,368 --> 00:14:43,636
அவை அனைத்தும் சமமாக இருப்பதைக் காணும்போது, எந்தப் பிழையும் இல்லை என்று சந்தேகத்திற்கு

265
00:14:43,636 --> 00:14:44,320
இடமின்றி அர்த்தம்.

266
00:14:44,320 --> 00:14:47,367
இதன் பொருள் என்னவென்றால், 16-பிட் தொகுதியுடன் வேலை செய்வதை விட,

267
00:14:47,367 --> 00:14:50,509
நாங்கள் 15-பிட் தொகுதியுடன் வேலை செய்கிறோம், அங்கு 11 பிட்கள் ஒரு

268
00:14:50,509 --> 00:14:54,080
செய்தியை எடுத்துச் செல்ல இலவசம் மற்றும் அவற்றில் 4 பணிநீக்கத்திற்காக உள்ளன.

269
00:14:54,080 --> 00:14:56,957
அதனுடன், வணிகத்தில் உள்ளவர்கள் 15-11 ஹேமிங் குறியீடு

270
00:14:56,957 --> 00:14:59,400
என்று குறிப்பிடுவது இப்போது எங்களிடம் உள்ளது.

271
00:14:59,400 --> 00:15:02,938
அதாவது, பிளாக் அளவு 2 இன் சுத்தமான சக்தியைக் கொண்டிருப்பது மகிழ்ச்சி அளிக்கிறது,

272
00:15:02,938 --> 00:15:06,739
மேலும் ஒரு புத்திசாலித்தனமான வழி இருக்கிறது, அந்த 0வது பிட்டைச் சுற்றி வைத்துக்கொண்டு,

273
00:15:06,739 --> 00:15:08,880
நமக்காக கொஞ்சம் கூடுதல் வேலைகளைச் செய்ய முடியும்.

274
00:15:08,880 --> 00:15:12,076
முழு பிளாக் முழுவதும் பாரிட்டி பிட்டாகப் பயன்படுத்தினால்,

275
00:15:12,076 --> 00:15:16,320
2-பிட் பிழைகளைச் சரி செய்ய முடியாவிட்டாலும், அது உண்மையில் கண்டறிய உதவுகிறது.

276
00:15:16,320 --> 00:15:17,440
இது எவ்வாறு செயல்படுகிறது என்பது இங்கே.

277
00:15:17,440 --> 00:15:20,421
அந்த நான்கு சிறப்புப் பிழை-திருத்தும் பிட்களை அமைத்த பிறகு,

278
00:15:20,421 --> 00:15:24,496
ஒரு சாதாரண சமநிலை சரிபார்ப்பைப் போலவே முழுத் தொகுதியின் சமநிலை சமமாக இருக்கும்படி

279
00:15:24,496 --> 00:15:25,540
0வது ஒன்றை அமைத்தோம்.

280
00:15:25,540 --> 00:15:30,653
இப்போது, ஒரு பிட் பிழை இருந்தால், முழுத் தொகுதியின் சமநிலை ஒற்றைப்படையாக மாறுகிறது,

281
00:15:30,653 --> 00:15:33,940
ஆனால் நான்கு பிழை-திருத்தும் சரிபார்ப்புகளுக்கு நன்றி.

282
00:15:33,940 --> 00:15:38,595
இருப்பினும், இரண்டு பிழைகள் இருந்தால், ஒட்டுமொத்த சமநிலை மீண்டும் சமமாக மாறப் போகிறது,

283
00:15:38,595 --> 00:15:42,502
ஆனால் அந்த நான்கு சமநிலை சரிபார்ப்புகளில் என்ன நடக்கிறது என்பதன் காரணமாக

284
00:15:42,502 --> 00:15:45,820
குறைந்தபட்சம் சில பிழைகள் இருப்பதை ரிசீவர் இன்னும் பார்ப்பார்.

285
00:15:45,820 --> 00:15:48,124
எனவே அவர்கள் ஒட்டுமொத்தமாக சமமான சமநிலையைக் கவனித்தால்,

286
00:15:48,124 --> 00:15:50,387
ஆனால் மற்ற காசோலைகளில் பூஜ்ஜியமில்லாத ஏதாவது நடந்தால்,

287
00:15:50,387 --> 00:15:52,980
குறைந்தது இரண்டு பிழைகள் இருந்ததாக அது அவர்களுக்குச் சொல்கிறது.

288
00:15:52,980 --> 00:15:54,420
அது புத்திசாலி இல்லையா?

289
00:15:54,420 --> 00:15:57,159
அந்த 2-பிட் பிழைகளை நம்மால் சரிசெய்ய முடியாவிட்டாலும்,

290
00:15:57,159 --> 00:16:00,795
அந்த ஒரு சிறிய தொந்தரவான 0வது பிட்டை மீண்டும் வேலை செய்ய வைப்பதன் மூலம்,

291
00:16:00,795 --> 00:16:02,340
அது அவற்றைக் கண்டறிய உதவுகிறது.

292
00:16:02,340 --> 00:16:06,540
இது மிகவும் நிலையானது, இது நீட்டிக்கப்பட்ட ஹேமிங் குறியீடு என்று அழைக்கப்படுகிறது.

293
00:16:06,540 --> 00:16:10,016
தொழில்நுட்ப ரீதியாகப் பார்த்தால், ஹேமிங் குறியீடு என்ன செய்கிறது என்பது பற்றிய

294
00:16:10,016 --> 00:16:13,580
முழு விளக்கமும் உங்களிடம் உள்ளது, குறைந்தபட்சம் 16-பிட் பிளாக்கின் உதாரணத்திற்கு.

295
00:16:13,580 --> 00:16:16,535
ஆனால், உங்கள் புரிதலைச் சரிபார்த்து, தொடக்கத்தில் இருந்து உங்களை முடிக்கும்

296
00:16:16,535 --> 00:16:19,568
வரை ஒரு முழு உதாரணத்தைச் செய்வதன் மூலம் இது வரை அனைத்தையும் உறுதிப்படுத்துவது

297
00:16:19,568 --> 00:16:21,980
உங்களுக்கு மிகவும் திருப்திகரமாக இருக்கும் என்று நினைக்கிறேன்.

298
00:16:21,980 --> 00:16:25,100
நான் அதை உங்களுடன் எடுத்துச் செல்கிறேன், எனவே நீங்களே சரிபார்க்கலாம்.

299
00:16:25,100 --> 00:16:28,667
ஒரு செய்தியை அமைக்க, அது நீங்கள் விண்வெளியில் மொழிபெயர்க்கும் நேரடிச்

300
00:16:28,667 --> 00:16:32,234
செய்தியாக இருந்தாலும் அல்லது காலப்போக்கில் நீங்கள் சேமிக்க விரும்பும்

301
00:16:32,234 --> 00:16:35,700
சில தரவாக இருந்தாலும், அதை 11-பிட் துண்டுகளாகப் பிரிப்பதே முதல் படி.

302
00:16:35,700 --> 00:16:40,340
ஒவ்வொரு துண்டையும் ஒரு பிழை-எதிர்ப்பு 16-பிட் தொகுதிக்குள் தொகுக்கப் போகிறது.

303
00:16:40,340 --> 00:16:43,740
எனவே இதை ஒரு உதாரணமாக எடுத்துக்கொள்வோம், உண்மையில் அதைச் செயல்படுத்துவோம்.

304
00:16:43,740 --> 00:16:45,380
மேலே செல்லுங்கள், உண்மையில் அதைச் செய்யுங்கள்!

305
00:16:45,380 --> 00:16:52,980
இடைநிறுத்தப்பட்டு இந்த தொகுதியை ஒன்றாக இணைக்க முயற்சிப்போம்.

306
00:16:52,980 --> 00:16:53,980
சரி, நீங்கள் தயாரா?

307
00:16:53,980 --> 00:16:57,804
நினைவில் கொள்ளுங்கள், 2 இன் மற்ற அதிகாரங்களுடன் நிலை 0 என்பது

308
00:16:57,804 --> 00:17:01,505
பிழை திருத்தும் கடமைக்காக ஒதுக்கப்பட்டுள்ளது, எனவே மீதமுள்ள

309
00:17:01,505 --> 00:17:05,700
எல்லா இடங்களிலும் செய்தி பிட்களை வரிசையாக வைப்பதன் மூலம் தொடங்கவும்.

310
00:17:05,700 --> 00:17:09,224
இந்தக் குழுவில் சம சமநிலை இருக்க வேண்டும், அது ஏற்கனவே உள்ளது,

311
00:17:09,224 --> 00:17:13,140
எனவே நீங்கள் அந்த சமநிலை பிட்டை நிலை 1 இல் 0 ஆக அமைத்திருக்க வேண்டும்.

312
00:17:13,140 --> 00:17:15,916
அடுத்த குழு ஒற்றைப்படை சமநிலையுடன் தொடங்குகிறது,

313
00:17:15,916 --> 00:17:19,260
எனவே நீங்கள் அதன் சமநிலை பிட்டை 1 ஆக அமைத்திருக்க வேண்டும்.

314
00:17:19,260 --> 00:17:21,830
அதன் பிறகு குழு ஒற்றைப்படை சமநிலையுடன் தொடங்குகிறது,

315
00:17:21,830 --> 00:17:24,740
எனவே மீண்டும் அதன் சமநிலை பிட்டை 1 ஆக அமைத்திருக்க வேண்டும்.

316
00:17:24,740 --> 00:17:28,152
இறுதிக் குழுவும் ஒற்றைப்படை சமநிலையைக் கொண்டுள்ளது,

317
00:17:28,152 --> 00:17:31,500
அதாவது அந்த பிட்டை 8 ஆம் நிலையில் 1 ஆக அமைக்கிறோம்.

318
00:17:31,500 --> 00:17:37,204
பின்னர் இறுதிப் படியாக, முழுத் தொகுதியானது இப்போது சமமான சமநிலையைக் கொண்டுள்ளது,

319
00:17:37,204 --> 00:17:41,500
அதாவது அந்த பிட் எண் 0, மிகையான சமநிலை பிட், 0 ஆக அமைக்கலாம்.

320
00:17:41,500 --> 00:17:45,213
எனவே இந்தத் தொகுதி அனுப்பப்பட்டதால், நான்கு சிறப்பு துணைக்குழுக்களின்

321
00:17:45,213 --> 00:17:48,980
சமநிலை மற்றும் ஒட்டுமொத்த தொகுதி அனைத்தும் சமமாக அல்லது 0 ஆக இருக்கும்.

322
00:17:48,980 --> 00:17:53,620
பயிற்சியின் இரண்டாம் பாகமாக, நீங்கள் பெறுநரின் பாத்திரத்தை வகிக்க வேண்டும்.

323
00:17:53,620 --> 00:17:56,178
நிச்சயமாக, இந்த செய்தி என்னவென்று உங்களுக்கு ஏற்கனவே தெரியாது என்று அர்த்தம்,

324
00:17:56,178 --> 00:17:57,949
ஒருவேளை உங்களில் சிலர் அதை மனப்பாடம் செய்திருக்கலாம்,

325
00:17:57,949 --> 00:18:00,180
ஆனால் நீங்கள் அதை நினைவில் வைத்திருக்கவில்லை என்று வைத்துக்கொள்வோம்.

326
00:18:00,180 --> 00:18:03,423
நான் என்ன செய்யப் போகிறேன், அந்த பிளாக்கில் உள்ள பிட்களில் 0,

327
00:18:03,423 --> 00:18:07,816
1 அல்லது 2 ஐ மாற்ற வேண்டும், பின்னர் நான் என்ன செய்தேன் என்பதைக் கண்டுபிடிக்கும்படி

328
00:18:07,816 --> 00:18:08,340
கேட்கவும்.

329
00:18:08,340 --> 00:18:13,460
எனவே மீண்டும், இடைநிறுத்தி அதைச் செயல்படுத்த முயற்சிக்கவும்.

330
00:18:13,460 --> 00:18:20,268
சரி, நீங்கள் பெறுநராக இப்போது முதல் பாரிட்டி குழுவைச் சரிபார்த்து,

331
00:18:20,268 --> 00:18:28,194
அது சமமாக இருப்பதைக் காணலாம், எனவே இருக்கும் எந்தப் பிழையும் சம நெடுவரிசையில்

332
00:18:28,194 --> 00:18:29,820
இருக்க வேண்டும்.

333
00:18:29,820 --> 00:18:32,613
அடுத்தச் சரிபார்ப்பு ஒற்றைப்படை எண்ணைத் தருகிறது,

334
00:18:32,613 --> 00:18:35,742
இரண்டுக்கும் குறைந்தபட்சம் ஒரு பிழை இருப்பதாகச் சொல்லி,

335
00:18:35,742 --> 00:18:38,760
இந்தக் குறிப்பிட்ட நெடுவரிசையில் எங்களைக் குறைக்கிறது.

336
00:18:38,760 --> 00:18:42,900
மூன்றாவது சரிபார்ப்பு சமமானது, மேலும் சாத்தியக்கூறுகளை வெட்டுகிறது.

337
00:18:42,900 --> 00:18:48,072
கடைசி சமச்சீர் சரிபார்ப்பு ஒற்றைப்படையானது, கீழே எங்கோ ஒரு பிழை இருப்பதாகக் கூறுகிறது,

338
00:18:48,072 --> 00:18:51,700
அது இப்போது நிலை எண் 10 இல் இருக்க வேண்டும் என்பதைக் காணலாம்.

339
00:18:51,700 --> 00:18:55,101
மேலும் என்னவென்றால், முழுத் தொகுதியின் சமநிலையும் ஒற்றைப்படையாக உள்ளது,

340
00:18:55,101 --> 00:18:58,220
இது இரண்டு அல்ல, ஒன்று புரட்டப்பட்டது என்ற நம்பிக்கையை அளிக்கிறது.

341
00:18:58,220 --> 00:19:01,600
இது மூன்று அல்லது அதற்கு மேற்பட்டதாக இருந்தால், அனைத்து சவால்களும் நிறுத்தப்படும்.

342
00:19:01,600 --> 00:19:06,320
அந்த பிட் எண் 10 ஐச் சரிசெய்த பிறகு, திருத்தம் செய்யப் பயன்படுத்தப்படாத 11 பிட்களை

343
00:19:06,320 --> 00:19:10,643
வெளியே இழுத்தால், அசல் செய்தியின் தொடர்புடைய பகுதியை எங்களுக்குத் தருகிறது,

344
00:19:10,643 --> 00:19:13,600
அதை நீங்கள் ரிவைண்ட் செய்து ஒப்பிட்டுப் பார்த்தால்,

345
00:19:13,600 --> 00:19:16,160
உண்மையில் நாம் எடுத்துக்காட்டைத் தொடங்கினோம்.

346
00:19:16,160 --> 00:19:18,705
இப்போது இதையெல்லாம் கையால் செய்வது எப்படி என்று உங்களுக்குத் தெரியும்,

347
00:19:18,705 --> 00:19:21,143
பைதான் குறியீட்டின் ஒற்றை வரியில் இந்த தர்க்கத்தின் முக்கிய பகுதியை

348
00:19:21,143 --> 00:19:23,940
நீங்கள் எவ்வாறு செயல்படுத்தலாம் என்பதை நான் உங்களுக்குக் காட்ட விரும்புகிறேன்.

349
00:19:23,940 --> 00:19:26,388
இந்த அல்காரிதம் உண்மையில் எவ்வளவு நேர்த்தியானது,

350
00:19:26,388 --> 00:19:29,836
பிழையின் நிலையைச் சுட்டிக்காட்ட இயந்திரத்தைப் பெறுவது எவ்வளவு எளிது,

351
00:19:29,836 --> 00:19:33,733
அதை எவ்வாறு முறையாக அளவிடுவது, மற்றும் அனைத்தையும் நாம் எவ்வாறு வடிவமைக்கலாம்

352
00:19:33,733 --> 00:19:36,382
என்பதைப் பற்றி நான் இதுவரை உங்களுக்குச் சொல்லவில்லை.

353
00:19:36,382 --> 00:19:39,580
இது பல தனித்தனி சமநிலை சரிபார்ப்புகளை விட ஒரே செயல்பாடாக உள்ளது.

354
00:19:39,580 --> 00:19:39,580
நான் என்ன சொல்கிறேன் என்பதைப் பார்க்க, பாகம் 2 இல் என்னுடன் வாருங்கள்.

