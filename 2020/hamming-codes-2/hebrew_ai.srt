1
00:00:00,000 --> 00:00:08,620
האם אי פעם תהיתם איך אפשר לגרד תקליטור או

2
00:00:08,620 --> 00:00:10,900
DVD ועדיין להשמיע את כל מה שהוא מאחסן?

3
00:00:10,900 --> 00:00:15,280
השריטה באמת משפיעה על ה-1 וה-0 בדיסק, אז הוא קורא

4
00:00:15,280 --> 00:00:20,500
נתונים שונים ממה שנשמר, אבל אלא אם כן הוא

5
00:00:20,500 --> 00:00:26,540
ממש שרוט, הביטים שהוא קורא מפוענחים בדיוק לאותו קובץ שקודד

6
00:00:26,540 --> 00:00:28,400
בו, עותק ביט אחר סיבי, למרות כל השגיאות הללו.

7
00:00:28,400 --> 00:00:32,800
יש ערימה שלמה של פיקחות מתמטית שמאפשרת לנו לאחסן נתונים,

8
00:00:32,800 --> 00:00:36,840
ולא פחות חשוב להעביר נתונים, בצורה עמידה בפני שגיאות.

9
00:00:36,840 --> 00:00:41,480
ובכן, בסדר, למעשה לא צריך כל כך הרבה

10
00:00:41,480 --> 00:00:42,480
פיקחות כדי למצוא דרך לעשות את זה.

11
00:00:42,480 --> 00:00:47,660
כל קובץ, בין אם זה וידאו או צליל או טקסט, קוד כלשהו, תמונה,

12
00:00:47,660 --> 00:00:50,960
מה שלא יהיה, הוא בסופו של דבר איזה רצף של 1 ו-0.

13
00:00:50,960 --> 00:00:55,340
ואסטרטגיה פשוטה לתיקון כל סיביות שמתהפכת תהיה

14
00:00:55,340 --> 00:00:57,780
לאחסן שלושה עותקים של כל סיביות.

15
00:00:57,780 --> 00:01:02,240
לאחר מכן, המכונה שקוראת את הקובץ הזה תוכל להשוות את שלושת העותקים האלה

16
00:01:02,240 --> 00:01:07,440
ותמיד לקחת את ה-2 הטובים ביותר מתוך 3 בכל פעם שיש אי התאמה.

17
00:01:07,440 --> 00:01:11,560
אבל המשמעות היא שימוש בשני שלישים מהשטח שלך לעודפות.

18
00:01:11,560 --> 00:01:15,360
וגם אז, למרות כל השטח שמוותר עליו, אין ערובה

19
00:01:15,360 --> 00:01:18,120
חזקה לגבי מה יקרה אם יותר מסיבית אחת תתהפך.

20
00:01:18,120 --> 00:01:21,960
השאלה המעניינת הרבה יותר היא איך לעשות את זה כך שניתן

21
00:01:21,960 --> 00:01:24,740
יהיה לתקן שגיאות תוך ויתור על שטח קטן ככל האפשר.

22
00:01:24,740 --> 00:01:28,500
לדוגמה, באמצעות השיטה שתלמד על הסרטון הזה, תוכל לאחסן את הנתונים שלך בבלוקים של 256

23
00:01:28,500 --> 00:01:35,840
סיביות, כאשר כל בלוק משתמש ב-9 סיביות, 9! לפעול כסוג של יתירות, ושאר

24
00:01:35,840 --> 00:01:41,000
247 הסיביות חופשיות לשאת כל מסר או נתונים משמעותיים שתרצו.

25
00:01:41,000 --> 00:01:44,740
וזה עדיין יהיה כך שאם ביט כלשהו יתהפך כאן, רק על

26
00:01:44,740 --> 00:01:49,640
ידי הסתכלות על הבלוק הזה ותו לא, מכונה תוכל לזהות שהייתה

27
00:01:49,640 --> 00:01:53,120
שגיאה ובדיוק היכן היא הייתה כדי שהיא תדע לתקן אותה .

28
00:01:53,140 --> 00:01:55,540
ובכנות, זה מרגיש כמו קסם.

29
00:01:55,540 --> 00:01:59,400
ולסכמה הספציפית הזו, אם שני ביטים יתהפכו, המכונה לפחות תוכל לזהות

30
00:01:59,400 --> 00:02:03,180
שהיו שתי שגיאות, אם כי היא לא תדע כיצד לתקן אותן.

31
00:02:03,180 --> 00:02:08,140
נדבר קצת מאוחר יותר על איך זה קנה מידה עבור בלוקים בגדלים שונים.

32
00:02:08,140 --> 00:02:12,620
שיטות המאפשרות לך לתקן שגיאות כמו זו

33
00:02:12,620 --> 00:02:13,880
ידועות, באופן סביר, בתור קודי תיקון שגיאות.

34
00:02:13,880 --> 00:02:18,220
בחלקה הטוב יותר של המאה הקודמת, תחום זה היה מקור עשיר

35
00:02:18,220 --> 00:02:23,000
באמת למתמטיקה עמוקה להפתיע שמשולבת במכשירים שאנו משתמשים בהם מדי יום.

36
00:02:23,000 --> 00:02:27,740
המטרה כאן היא לתת לך הבנה מעמיקה מאוד

37
00:02:27,740 --> 00:02:29,660
של אחת הדוגמאות המוקדמות ביותר, המכונה קוד Hamming.

38
00:02:29,660 --> 00:02:32,620
ודרך אגב, איך שאני חושב על המבנה של הסרטון הזה הוא

39
00:02:32,620 --> 00:02:37,060
פחות עניין של הסבר ישיר ככל האפשר, ויותר עניין של לדרבן

40
00:02:37,060 --> 00:02:40,220
אותך להמציא את זה לעצמך, עם קצת הדרכה עדינה פה ושם.

41
00:02:40,220 --> 00:02:44,100
אז כשאתה מרגיש שאתה רואה לאן זה הולך בשלב מסוים, קח את הרגע

42
00:02:44,100 --> 00:02:47,180
הזה לעצור, חזה באופן פעיל מה התוכנית עומדת להיות לפני שאני אומר לך.

43
00:02:47,180 --> 00:02:51,500
כמו כן, אם אתה רוצה שההבנה שלך תרד לרמת החומרה, בן

44
00:02:51,500 --> 00:02:55,160
איטר הכין סרטון יחד עם הסרטון הזה שמראה לך איך

45
00:02:55,160 --> 00:02:59,520
ליישם בפועל קודי Hamming על לוחות לחם, וזה מספק ביותר.

46
00:02:59,520 --> 00:03:03,120
אתה צריך לדעת, קודי Hamming לא נמצאים בשימוש נרחב כמו קודים מודרניים יותר, כמו

47
00:03:03,120 --> 00:03:08,040
אלגוריתם ריד-סולומון, אבל יש קסם מסוים בניגוד בין כמה בלתי אפשרית המשימה הזו מרגישה

48
00:03:08,040 --> 00:03:14,240
בהתחלה, לבין כמה סבירה לחלוטין היא נראית פעם אחת. אתה לומד על האמינג.

49
00:03:14,240 --> 00:03:19,080
העיקרון הבסיסי של תיקון שגיאות הוא שבמרחב עצום של

50
00:03:19,300 --> 00:03:22,860
כל ההודעות האפשריות, רק תת-קבוצה מסוימת תיחשב להודעות חוקיות.

51
00:03:22,860 --> 00:03:29,100
כאנלוגיה, חשבו על מילים מאויתות נכון לעומת מילים מאויתות לא נכון.

52
00:03:29,100 --> 00:03:33,340
בכל פעם שהודעה חוקית משתנה, המקלט אחראי לתקן את מה שהם רואים

53
00:03:33,340 --> 00:03:38,380
בחזרה לשכן התקף הקרוב ביותר, כפי שאתה עשוי לעשות עם שגיאת הקלדה.

54
00:03:38,380 --> 00:03:43,100
עם זאת, להמציא אלגוריתם קונקרטי לסיווג יעיל

55
00:03:43,100 --> 00:03:47,160
של הודעות כמו זה, נדרשת פיקחות מסוימת.

56
00:03:47,160 --> 00:03:52,060
הסיפור מתחיל בשנות ה-40, כאשר ריצ&#39;רד האמינג צעיר עבד

57
00:03:52,060 --> 00:03:55,900
במעבדות בל, וחלק מעבודתו כללו שימוש במחשב כרטיס ניקוב

58
00:03:55,900 --> 00:03:57,420
יקר מאוד שהייתה לו רק גישה מוגבלת אליו.

59
00:03:57,420 --> 00:04:01,200
והתוכניות שהוא המשיך להעביר את זה לא הפסיקו

60
00:04:01,200 --> 00:04:03,140
להיכשל, כי מדי פעם קצת יקראו לא נכון.

61
00:04:03,140 --> 00:04:07,140
התסכול בהיותו כור ההמצאה, כל כך נמאס לו

62
00:04:07,140 --> 00:04:09,280
שהוא המציא את קוד תיקון השגיאות הראשון בעולם.

63
00:04:09,280 --> 00:04:13,020
ישנן דרכים רבות ושונות למסגר קודי האמינג, אבל כדרך ראשונה,

64
00:04:13,020 --> 00:04:16,620
אנחנו הולכים לעבור את זה כמו שהאמינג עצמו חשב עליהם.

65
00:04:16,620 --> 00:04:21,400
בואו נשתמש בדוגמה פשוטה, אבל לא פשוטה מדי, בלוק של 16 סיביות.

66
00:04:21,400 --> 00:04:25,700
נמספר את המיקומים של סיביות אלה מ-0 עד 15.

67
00:04:25,700 --> 00:04:30,520
הנתונים האמיתיים שאנו רוצים לאחסן יהוו רק 12 מהסיביות

68
00:04:30,520 --> 00:04:33,920
הללו, בעוד ש-4 מהמיקומים שמורים כסוג של יתירות.

69
00:04:33,920 --> 00:04:38,120
המילה מיותר כאן לא אומרת פשוט העתקה, אחרי הכל, 4 הביטים

70
00:04:38,120 --> 00:04:40,200
האלה לא נותנים לנו מספיק מקום להעתיק את הנתונים בצורה עיוורת.

71
00:04:40,200 --> 00:04:44,880
במקום זאת, הם יצטרכו להיות סוג הרבה יותר ניואנס וחכם

72
00:04:44,880 --> 00:04:48,740
של יתירות, לא להוסיף שום מידע חדש, אלא להוסיף חוסן.

73
00:04:48,740 --> 00:04:52,620
אולי אתה מצפה שארבעת החלקים המיוחדים האלה יבואו ארוזים יפה ביחד,

74
00:04:52,620 --> 00:04:56,400
אולי בסוף או משהו כזה, אבל כפי שתראה, כשהם יושבים בעמדות

75
00:04:56,400 --> 00:05:00,320
שהן עוצמה של 2 מאפשר משהו שהוא באמת אלגנטי עד הסוף.

76
00:05:00,320 --> 00:05:05,420
זה גם עשוי לתת לך רמז קטן לגבי איך זה מתאים לבלוקים גדולים יותר.

77
00:05:05,420 --> 00:05:09,220
גם מבחינה טכנית זה בסופו של דבר רק 11 סיביות של נתונים, תגלה שיש

78
00:05:09,220 --> 00:05:14,260
ניואנס מתון למה שמתרחש בעמדה 0, אבל אל תדאג בקשר לזה לעת עתה.

79
00:05:14,280 --> 00:05:18,640
כמו כל אלגוריתם לתיקון שגיאות, זה יכלול שני שחקנים,

80
00:05:18,640 --> 00:05:23,200
שולח שאחראי על הגדרת 4 הביטים המיוחדים הללו,

81
00:05:23,200 --> 00:05:26,360
ומקלט שאחראי על ביצוע איזושהי בדיקה ותיקון השגיאות.

82
00:05:26,360 --> 00:05:30,040
כמובן, המילים שולח ומקבל באמת מתייחסות למכונות או

83
00:05:30,040 --> 00:05:34,040
תוכנות שעושות את כל הבדיקות, והרעיון של הודעה

84
00:05:34,040 --> 00:05:35,480
נועד בצורה רחבה מאוד, לכלול דברים כמו אחסון.

85
00:05:35,480 --> 00:05:39,320
אחרי הכל, אחסון נתונים הוא אותו דבר כמו שליחת

86
00:05:39,320 --> 00:05:42,640
מסר רק מהעבר לעתיד במקום ממקום אחד לאחר.

87
00:05:42,640 --> 00:05:46,700
אז זה ההגדרה, אבל לפני שנוכל לצלול פנימה אנחנו

88
00:05:46,700 --> 00:05:51,080
צריכים לדבר על רעיון קשור שהיה טרי בראשו של

89
00:05:51,080 --> 00:05:55,520
האמינג בזמן גילויו, שיטה המאפשרת לך לזהות שגיאות סיביות

90
00:05:55,520 --> 00:05:57,300
בודדות, אך לא לתקן אותן, ידועה בעסק כמחאה זוגית.

91
00:05:57,300 --> 00:06:01,300
לבדיקת זוגיות, אנו מפרידים רק ביט בודד אחד

92
00:06:01,300 --> 00:06:04,940
שהשולח אחראי לכוונון, והשאר חופשיים לשאת הודעה.

93
00:06:04,940 --> 00:06:10,380
התפקיד היחיד של הביט המיוחד הזה הוא לוודא

94
00:06:10,380 --> 00:06:12,100
שהמספר הכולל של 1s בהודעה הוא מספר זוגי.

95
00:06:12,100 --> 00:06:16,920
אז לדוגמא כרגע, המספר הכולל של 1s הוא 7, זה מוזר, אז השולח צריך

96
00:06:16,920 --> 00:06:20,960
להפוך את הסיביות המיוחדת הזו כדי להיות 1, מה שהופך את הספירה לשקול.

97
00:06:20,960 --> 00:06:25,320
אבל אם הבלוק כבר התחיל עם מספר זוגי של

98
00:06:25,320 --> 00:06:27,480
1, אז הביט המיוחד הזה היה נשמר ב-0.

99
00:06:27,480 --> 00:06:31,640
זה די פשוט, פשוט מטעה, אבל זו דרך אלגנטית להפליא לזקק

100
00:06:31,640 --> 00:06:37,760
את הרעיון של שינוי בכל מקום במסר שישתקף בפיסת מידע אחת.

101
00:06:37,760 --> 00:06:43,680
שימו לב שאם חלק כלשהו מההודעה הזו מתהפך, מ-0 ל-1 או מ-1

102
00:06:43,680 --> 00:06:48,140
ל-0, זה משנה את הספירה הכוללת של 1 שניות מזוגיות לא-זוגית.

103
00:06:48,140 --> 00:06:52,000
אז אם אתה המקלט, אתה מסתכל על ההודעה הזו, ותראה

104
00:06:52,000 --> 00:06:56,580
מספר אי זוגי של 1, אתה יכול לדעת בוודאות שהתרחשה

105
00:06:56,580 --> 00:06:58,700
שגיאה כלשהי, למרות שאולי אין לך מושג היכן היא הייתה.

106
00:06:58,700 --> 00:07:02,820
בז&#39;רגון, האם לקבוצת ביטים יש מספר זוגי או

107
00:07:02,820 --> 00:07:04,940
אי-זוגי של 1, ידוע בתור הזוגיות שלה.

108
00:07:04,940 --> 00:07:09,140
אתה יכול גם להשתמש במספרים ולומר שהשוויון הוא 0 או 1, וזה

109
00:07:09,140 --> 00:07:11,320
בדרך כלל מועיל יותר ברגע שאתה מתחיל לעשות מתמטיקה עם הרעיון.

110
00:07:11,320 --> 00:07:15,200
והביט המיוחד הזה שהשולח משתמש בו

111
00:07:15,200 --> 00:07:18,020
כדי לשלוט בזוגיות נקרא סיבית הזוגיות.

112
00:07:18,020 --> 00:07:22,460
ולמעשה, עלינו להיות ברורים, אם המקלט רואה זוגיות אי זוגית, זה לא בהכרח

113
00:07:22,460 --> 00:07:26,920
אומר שהייתה רק שגיאה אחת, אולי היו 3 שגיאות, או 5, או כל

114
00:07:26,920 --> 00:07:29,560
מספר אי זוגי אחר, אבל הם יכולים לדעת בוודאות שזה לא היה 0.

115
00:07:29,560 --> 00:07:34,880
מצד שני, אם היו 2 שגיאות, או כל מספר זוגי של

116
00:07:34,880 --> 00:07:39,560
שגיאות, הספירה הסופית של 1s עדיין תהיה זוגית, כך שהמקבל לא

117
00:07:39,560 --> 00:07:43,360
יכול להיות בטוח שספירה זוגית אומרת בהכרח שההודעה נטולת שגיאות .

118
00:07:43,360 --> 00:07:47,860
אתה עלול להתלונן שהודעה שמתבלבלת רק על ידי סיבובים

119
00:07:47,860 --> 00:07:49,760
של 2 סיביות היא די חלשה, ואתה צודק לחלוטין.

120
00:07:49,760 --> 00:07:54,480
זכור, עם זאת, אין שיטה לזיהוי או תיקון שגיאות שיכולה לתת

121
00:07:54,480 --> 00:07:59,720
לך 100% ביטחון שההודעה שאתה מקבל היא זו שהשולח התכוון אליה.

122
00:07:59,720 --> 00:08:03,760
אחרי הכל, מספיק רעש אקראי תמיד יכול לשנות

123
00:08:03,760 --> 00:08:05,920
הודעה חוקית אחת להודעה חוקית אחרת רק במקרה.

124
00:08:05,920 --> 00:08:10,520
במקום זאת, המטרה היא להמציא סכמה שתהיה חזקה עד למספר מרבי מסוים

125
00:08:10,520 --> 00:08:16,480
של שגיאות, או אולי להפחית את ההסתברות לחיוב שגוי כמו זה.

126
00:08:16,480 --> 00:08:20,940
בדיקות זוגיות כשלעצמן הן די חלשות, אבל על ידי זיקוק רעיון

127
00:08:20,940 --> 00:08:25,640
השינוי על פני מסר מלא עד לחלק אחד, מה שהם

128
00:08:25,640 --> 00:08:28,000
נותנים לנו הוא אבן בניין רבת עוצמה לתוכניות מתוחכמות יותר.

129
00:08:28,000 --> 00:08:32,880
לדוגמה, מכיוון שהאמינג חיפש דרך לזהות היכן קרתה שגיאה, לא רק שהיא

130
00:08:32,880 --> 00:08:37,160
קרתה, התובנה העיקרית שלו הייתה שאם תחיל בדיקות זוגיות לא על

131
00:08:37,160 --> 00:08:42,040
ההודעה המלאה, אלא על תת-קבוצות מסוימות שנבחרו בקפידה, תוכל לשאול סדרה מעודנת

132
00:08:42,040 --> 00:08:46,840
יותר של שאלות המציינת את המיקום של כל שגיאת סיביות בודדת.

133
00:08:46,840 --> 00:08:51,280
התחושה הכללית היא קצת כמו לשחק במשחק של 20 שאלות,

134
00:08:51,280 --> 00:08:54,300
לשאול שאילתות כן או לא שחותכות את מרחב האפשרויות לשניים.

135
00:08:54,300 --> 00:08:58,840
לדוגמה, נניח שאנו עושים בדיקת זוגיות רק

136
00:08:58,840 --> 00:08:59,840
על 8 הסיביות הללו, כל המיקומים האי-זוגיים.

137
00:09:00,400 --> 00:09:04,560
לאחר מכן, אם מזוהה שגיאה, זה נותן למקלט קצת יותר מידע

138
00:09:04,560 --> 00:09:09,160
על היכן בדיוק נמצאת השגיאה, כלומר שהוא נמצא במיקום מוזר.

139
00:09:09,160 --> 00:09:14,360
אם לא מזוהה שגיאה בין 8 הסיביות האלה, זה אומר

140
00:09:14,360 --> 00:09:17,240
שאין שגיאה בכלל, או שהיא יושבת איפשהו במיקומים הזוגיים.

141
00:09:17,240 --> 00:09:21,560
אולי תחשוב שהגבלת בדיקת זוגיות לחצי מהביטים הופכת אותו

142
00:09:21,560 --> 00:09:25,460
לפחות יעיל, אבל כשהיא נעשית בשילוב עם בדיקות אחרות

143
00:09:25,460 --> 00:09:29,720
שנבחרו היטב, זה נותן לנו משהו הרבה יותר חזק.

144
00:09:29,720 --> 00:09:34,440
כדי להגדיר בפועל את בדיקת הזוגיות הזו, זכור, זה מצריך ייעוד של

145
00:09:34,440 --> 00:09:37,600
חלק מיוחד שיש לו שליטה על הזוגיות של אותה קבוצה מלאה.

146
00:09:37,600 --> 00:09:39,920
כאן בואו פשוט נבחר בעמדה 1.

147
00:09:39,920 --> 00:09:43,960
עבור הדוגמה המוצגת, השוויון של 8 הסיביות הללו הוא אי-זוגי כרגע,

148
00:09:43,960 --> 00:09:48,220
כך שהשולח אחראי על החלפת סיביות השוויון, ועכשיו זה זוגי.

149
00:09:48,220 --> 00:09:51,040
זה רק 1 מתוך 4 בדיקות זוגיות שנבצע.

150
00:09:51,040 --> 00:09:55,560
הסימון השני הוא בין 8 הביטים בחצי הימני

151
00:09:55,560 --> 00:09:56,880
של הרשת, לפחות כפי שציירנו אותו כאן.

152
00:09:56,880 --> 00:10:02,520
הפעם אנו עשויים להשתמש במיקום 2 כסיביות זוגיות, כך של-8 הסיביות הללו כבר יש

153
00:10:02,520 --> 00:10:07,160
זוגיות זוגית, והשולח יכול להרגיש טוב ולהשאיר את הסיביות מספר 2 ללא שינוי.

154
00:10:07,160 --> 00:10:11,040
ואז בצד השני, אם המקלט יבדוק את השוויון של הקבוצה הזו והם יגלו

155
00:10:11,040 --> 00:10:15,960
שזה מוזר, הם יידעו שהשגיאה נמצאת איפשהו בין 8 הביטים האלה בצד ימין.

156
00:10:15,960 --> 00:10:21,260
אחרת זה אומר שאין שגיאה, או שהשגיאה נמצאת איפשהו בחצי השמאלי.

157
00:10:21,260 --> 00:10:24,040
או שאני מניח שיכולות להיות שתי שגיאות, אבל כרגע אנחנו

158
00:10:24,040 --> 00:10:27,080
הולכים להניח שיש לכל היותר שגיאה אחת בכל הבלוק.

159
00:10:27,080 --> 00:10:29,160
דברים מתקלקלים לגמרי ליותר מזה.

160
00:10:29,160 --> 00:10:32,920
כאן, לפני שנסתכל על שני הבדיקות הבאות, קחו רגע לחשוב מה

161
00:10:32,920 --> 00:10:35,880
השניים הראשונים הללו מאפשרים לנו לעשות כאשר אתם מחשיבים אותם יחד.

162
00:10:35,880 --> 00:10:40,240
נניח שאתה מזהה שגיאה בין העמודות האי זוגיות, ובמחצית הימנית.

163
00:10:40,240 --> 00:10:43,940
זה בהכרח אומר שהשגיאה נמצאת איפשהו בעמודה האחרונה.

164
00:10:43,940 --> 00:10:48,280
אם לא הייתה שגיאה בעמודה האי זוגית אבל הייתה אחת

165
00:10:48,280 --> 00:10:50,520
בחצי הימני, זה אומר לך שהיא בעמודה השנייה עד האחרונה.

166
00:10:50,520 --> 00:10:54,640
כמו כן, אם יש שגיאה בעמודות האי זוגיות אבל

167
00:10:54,640 --> 00:10:56,560
לא בחצי הימני, אתה יודע שהיא איפשהו בעמודה השנייה.

168
00:10:56,560 --> 00:11:00,560
ואם אף אחת משתי בדיקות הזוגיות האלה לא מזהה משהו, זה

169
00:11:00,560 --> 00:11:03,760
אומר שהמקום היחיד שיכול להיות שגיאה הוא בעמודה השמאלית ביותר.

170
00:11:03,760 --> 00:11:06,480
אבל זה יכול גם פשוט אומר שאין שגיאה בכלל.

171
00:11:06,480 --> 00:11:10,800
וזו דרך די מטופשת לומר ששתי בדיקות

172
00:11:10,800 --> 00:11:11,800
זוגיות מאפשרות לנו להצמיד את העמודה.

173
00:11:11,800 --> 00:11:14,000
מכאן, אתם בוודאי יכולים לנחש מה בהמשך.

174
00:11:14,000 --> 00:11:16,240
אנחנו עושים את אותו הדבר חוץ מהשורות.

175
00:11:16,240 --> 00:11:21,040
תהיה בדיקת זוגיות בשורות האי זוגיות, תוך שימוש במיקום 4 בתור סיביות זוגיות.

176
00:11:21,040 --> 00:11:25,480
אז בדוגמה הזו לקבוצה כבר יש זוגיות

177
00:11:25,480 --> 00:11:26,480
זוגית, אז ביט 4 יוגדר ל-0.

178
00:11:26,480 --> 00:11:31,280
ולבסוף יש בדיקת זוגיות בשתי השורות התחתונות,

179
00:11:31,280 --> 00:11:32,280
תוך שימוש במיקום 8 בתור סיביות זוגיות.

180
00:11:32,280 --> 00:11:35,840
במקרה זה, נראה שהשולח צריך להפעיל את ה-bit

181
00:11:35,840 --> 00:11:37,840
8 הזה כדי לתת לקבוצה זוגיות שווה.

182
00:11:37,840 --> 00:11:41,360
בדיוק כפי ששני הסימון הראשונים מאפשרים לנו להצמיד את

183
00:11:41,360 --> 00:11:43,000
העמודה, שני הסימון הבאים מאפשרים לך להצמיד את השורה.

184
00:11:43,000 --> 00:11:48,400
כדוגמה, דמיינו שבמהלך השידור יש שגיאה, למשל, בעמדה 3.

185
00:11:48,400 --> 00:11:52,620
ובכן זה משפיע על קבוצת השוויון הראשונה, וזה משפיע גם על

186
00:11:52,620 --> 00:11:56,340
קבוצת השוויון השנייה, כך שהמקלט יודע שיש שגיאה איפשהו בעמודה הימנית.

187
00:11:56,340 --> 00:12:01,380
אבל זה לא משפיע על הקבוצה השלישית, וזה לא משפיע על הקבוצה הרביעית.

188
00:12:01,380 --> 00:12:05,460
וזה מאפשר למקלט לאתר את השגיאה עד לשורה הראשונה,

189
00:12:05,460 --> 00:12:08,660
שמשמעותה בהכרח מיקום 3, כדי שיוכלו לתקן את השגיאה.

190
00:12:08,660 --> 00:12:12,640
אולי תיהנו להקדיש רגע לשכנע את עצמכם שהתשובות לארבע השאלות הללו

191
00:12:12,680 --> 00:12:17,320
באמת תמיד יאפשרו לכם לקבוע מיקום ספציפי, לא משנה היכן יתבררו.

192
00:12:17,320 --> 00:12:22,640
למעשה, הנבון שביניכם עשוי אפילו להבחין בקשר

193
00:12:22,640 --> 00:12:23,640
בין השאלות הללו לבין ספירה בינארית.

194
00:12:23,640 --> 00:12:27,840
ואם כן, שוב הרשו לי להדגיש, לעצור, לנסות

195
00:12:27,840 --> 00:12:30,880
בעצמכם לצייר את הקשר לפני שאקלקל אותו.

196
00:12:30,880 --> 00:12:35,560
אם אתה תוהה מה קורה אם סיבית זוגיות עצמה

197
00:12:35,560 --> 00:12:36,560
מושפעת, ובכן, אתה יכול פשוט לנסות את זה.

198
00:12:36,560 --> 00:12:40,720
קחו רגע לחשוב כיצד כל שגיאה בין ארבעת הסיביות המיוחדות הללו

199
00:12:40,720 --> 00:12:47,440
תתחקה בדיוק כמו כל אחר, עם אותה קבוצה של ארבע שאלות.

200
00:12:47,440 --> 00:12:50,500
זה לא באמת משנה, מכיוון שבסופו של יום מה שאנחנו רוצים

201
00:12:50,500 --> 00:12:53,640
זה להגן על סיביות ההודעה, סיביות תיקון השגיאות פשוט רוכבות.

202
00:12:53,640 --> 00:12:57,120
אבל הגנה גם על החלקים האלה היא

203
00:12:57,120 --> 00:12:59,260
משהו שנופל באופן טבעי מהתוכנית כתוצר לוואי.

204
00:12:59,260 --> 00:13:02,380
אולי תיהנו גם לצפות כיצד זה מתרחב.

205
00:13:02,380 --> 00:13:08,040
אם השתמשנו בבלוק בגודל 256 סיביות, למשל, כדי להצמיד מיקום, אתה צריך רק

206
00:13:08,040 --> 00:13:15,680
שמונה שאלות כן או לא כדי לחפש בינארי בדרך למטה למקום מסוים.

207
00:13:15,680 --> 00:13:19,680
וזכור, כל שאלה דורשת לוותר על ביט בודד

208
00:13:19,680 --> 00:13:23,340
בלבד כדי לקבוע את בדיקת השוויון המתאימה.

209
00:13:23,340 --> 00:13:26,960
חלק מכם אולי כבר רואים את זה, אבל נדבר מאוחר יותר על

210
00:13:26,960 --> 00:13:29,960
הדרך השיטתית למצוא מהן השאלות הללו תוך דקה או שתיים בלבד.

211
00:13:29,960 --> 00:13:33,440
אני מקווה שהסקיצה הזו מספיקה כדי להעריך

212
00:13:33,440 --> 00:13:34,440
את היעילות של מה שאנחנו מפתחים כאן.

213
00:13:34,440 --> 00:13:38,440
הדבר הראשון, למעט שמונה סיביות זוגיות מודגשת, יכול להיות מה שאתה

214
00:13:38,440 --> 00:13:41,720
רוצה שזה יהיה, לשאת כל מסר או נתונים שאתה רוצה.

215
00:13:41,720 --> 00:13:45,480
8 הביטים מיותרים במובן זה שהם נקבעים לחלוטין על ידי שאר ההודעה,

216
00:13:45,480 --> 00:13:53,640
אבל זה בצורה הרבה יותר חכמה מאשר להעתיק את ההודעה כולה.

217
00:13:53,640 --> 00:13:58,000
ועדיין, עבור כל כך מעט ויתור, תוכל

218
00:13:58,000 --> 00:13:59,000
לזהות ולתקן כל שגיאת סיביות בודדת.

219
00:13:59,000 --> 00:14:00,400
ובכן, כמעט.

220
00:14:00,400 --> 00:14:05,920
אוקיי, אז הבעיה האחת כאן היא שאם אף אחת מארבעת בדיקות

221
00:14:05,920 --> 00:14:10,240
השוויון לא מזהה שגיאה, כלומר שלתת-הקבוצות שנבחרו במיוחד של 8 סיביות

222
00:14:10,240 --> 00:14:15,520
יש לכולם זוגיות זוגיות, בדיוק כמו שהשולח התכוון, אז זה אומר

223
00:14:15,520 --> 00:14:17,760
שלא הייתה שגיאה בכלל , או שהוא מצמצם אותנו למצב 0.

224
00:14:17,760 --> 00:14:23,040
אתה מבין, עם ארבע שאלות כן או לא, יש לנו 16 תוצאות אפשריות

225
00:14:23,040 --> 00:14:28,000
עבור בדיקות השוויון שלנו, ובהתחלה זה מרגיש מושלם לאיתור 1 מתוך 16

226
00:14:28,000 --> 00:14:33,000
מיקומים בבלוק, אבל אתה צריך גם לתקשר תוצאה 17, ללא שגיאה מַצָב.

227
00:14:33,000 --> 00:14:37,860
הפתרון כאן הוא למעשה די פשוט, פשוט תשכחו לגמרי מהביט ה-0 הזה.

228
00:14:37,860 --> 00:14:41,920
אז כשאנחנו עושים את ארבעת בדיקות השוויון שלנו ואנו

229
00:14:41,920 --> 00:14:44,320
רואים שכולם שווים, זה אומר חד משמעית שאין שגיאה.

230
00:14:44,320 --> 00:14:49,240
מה שזה אומר הוא במקום לעבוד עם בלוק של 16 סיביות, אנחנו עובדים עם בלוק

231
00:14:49,240 --> 00:14:54,040
של 15 סיביות, שבו 11 מהסיביות חופשיות לשאת הודעה ו-4 מהן נמצאות לשם יתירות.

232
00:14:54,080 --> 00:14:58,400
ועם זה, יש לנו עכשיו את מה

233
00:14:58,400 --> 00:14:59,400
שאנשים בעסק יתייחסו אליו כקוד 15-11 Hamming.

234
00:14:59,400 --> 00:15:03,920
עם זאת, זה נחמד שיש גודל בלוק שהוא כוח נקי של 2, ויש דרך

235
00:15:03,920 --> 00:15:08,880
חכמה שנוכל לשמור על הסיביות ה-0 הזו ולגרום לה לעשות קצת עבודה נוספת עבורנו.

236
00:15:08,880 --> 00:15:13,600
אם אנו משתמשים בו כסיביות זוגיות על פני כל הבלוק, הוא

237
00:15:13,600 --> 00:15:16,320
מאפשר לנו לזהות, למרות שאיננו יכולים לתקן, שגיאות של 2 סיביות.

238
00:15:16,320 --> 00:15:17,440
ככה זה עובד.

239
00:15:17,440 --> 00:15:21,740
לאחר הגדרת ארבעת הביטים המיוחדים לתיקון שגיאות, אנו מגדירים את ה-0 כך

240
00:15:21,740 --> 00:15:25,540
שהשוויון של הבלוק המלא יהיה זוגי, בדיוק כמו בדיקת זוגיות רגילה.

241
00:15:25,540 --> 00:15:29,780
עכשיו, אם יש שגיאת סיביות בודדת, אז השוויון של הבלוק המלא משתנה להיות

242
00:15:29,780 --> 00:15:33,940
אי-זוגי, אבל היינו תופסים את זה בכל מקרה הודות לארבעת הבדיקות לתיקון השגיאות.

243
00:15:33,940 --> 00:15:38,100
עם זאת, אם יש שתי שגיאות, אז השוויון הכולל יחזור

244
00:15:38,100 --> 00:15:42,660
להיות זוגי, אבל המקלט עדיין יראה שהייתה לפחות שגיאה

245
00:15:42,660 --> 00:15:45,820
כלשהי בגלל מה שקורה עם ארבעת בדיקות השוויון האלה.

246
00:15:45,820 --> 00:15:49,780
אז אם הם מבחינים בשוויון שווה בסך הכל, אבל משהו לא אפס

247
00:15:49,820 --> 00:15:52,980
קורה עם הבדיקות האחרות, זה אומר להם שהיו לפחות שתי שגיאות.

248
00:15:52,980 --> 00:15:54,420
זה לא חכם?

249
00:15:54,420 --> 00:15:58,500
למרות שאיננו יכולים לתקן את השגיאות של 2 סיביות אלה, רק על ידי

250
00:15:58,500 --> 00:16:02,340
החזרת הסיבית ה-0 הקטנה והמטרידה הזו לעבודה, היא מאפשרת לנו לזהות אותן.

251
00:16:02,340 --> 00:16:06,540
זה די סטנדרטי, זה ידוע בתור קוד Hamming מורחב.

252
00:16:06,540 --> 00:16:10,860
מבחינה טכנית, יש לך כעת תיאור מלא של מה שקוד

253
00:16:10,860 --> 00:16:13,580
Hamming עושה, לפחות לדוגמא של בלוק של 16 סיביות.

254
00:16:13,580 --> 00:16:17,300
אבל אני חושב שתמצא את זה יותר מספק לבדוק את ההבנה שלך ולגבש הכל

255
00:16:17,300 --> 00:16:21,980
עד לנקודה זו על ידי ביצוע דוגמה אחת מלאה מההתחלה ועד הסוף בעצמך.

256
00:16:21,980 --> 00:16:25,100
אבל אני אעבור איתך על זה כדי שתוכל לבדוק את עצמך.

257
00:16:25,100 --> 00:16:29,180
כדי להגדיר הודעה, בין אם זו הודעה מילולית שאתה

258
00:16:29,180 --> 00:16:34,100
מתרגם בחלל או נתונים שאתה רוצה לאחסן לאורך זמן,

259
00:16:34,100 --> 00:16:35,700
הצעד הראשון הוא לחלק אותו לנתחים של 11 סיביות.

260
00:16:35,700 --> 00:16:40,340
כל נתח הולך להיות ארוז לתוך בלוק 16 סיביות עמיד בפני שגיאות.

261
00:16:40,340 --> 00:16:43,740
אז בואו ניקח את זה כדוגמה ולמעשה נסתדר.

262
00:16:43,740 --> 00:16:45,340
קדימה, באמת תעשה את זה!

263
00:16:45,380 --> 00:16:47,380
בואו נעצור וננסה להרכיב את הבלוק הזה.

264
00:16:52,980 --> 00:16:53,980
בסדר, אתה מוכן?

265
00:16:53,980 --> 00:16:58,500
זכור, מיקום 0 יחד עם שאר החזקות של 2 שמורות לחובה לתיקון

266
00:16:58,500 --> 00:17:05,700
שגיאות, אז אתה מתחיל בהצבת סיביות ההודעה בכל הנקודות הנותרות, לפי הסדר.

267
00:17:05,700 --> 00:17:09,700
אתה צריך שתהיה לקבוצה הזו זוגיות זוגית, מה שהיא כבר עושה, אז

268
00:17:09,700 --> 00:17:13,140
היית צריך להגדיר את סיביות הזוגיות הזו במיקום 1 להיות 0.

269
00:17:13,140 --> 00:17:17,700
הקבוצה הבאה מתחילה עם זוגיות אי זוגית, אז היית

270
00:17:17,700 --> 00:17:19,260
צריך להגדיר את סיביות הזוגיות שלה להיות 1.

271
00:17:19,260 --> 00:17:23,740
הקבוצה שאחריה מתחילה עם זוגיות אי זוגית, אז שוב

272
00:17:23,740 --> 00:17:24,740
היית צריך להגדיר את סיביות הזוגיות שלה ל-1.

273
00:17:24,740 --> 00:17:29,500
ולקבוצה הסופית יש גם זוגיות אי זוגית, כלומר

274
00:17:29,500 --> 00:17:31,500
הגדרנו את הביט הזה במיקום 8 להיות 1.

275
00:17:31,500 --> 00:17:36,460
ואז כשלב הסופי, לבלוק המלא כעת יש זוגיות זוגית, כלומר אתה

276
00:17:36,460 --> 00:17:41,500
יכול להגדיר את מספר הסיביות 0, סיבית הזוגיות הכוללת, להיות 0.

277
00:17:41,500 --> 00:17:45,660
אז כאשר הבלוק הזה נשלח, השוויון של ארבע תת-הקבוצות

278
00:17:45,660 --> 00:17:48,980
המיוחדות ושל הבלוק בכללותו יהיה זוגי או 0.

279
00:17:48,980 --> 00:17:53,620
כחלק השני של התרגיל, בואו נגיד לכם לשחק את תפקיד המקלט.

280
00:17:53,620 --> 00:17:57,580
כמובן, זה אומר שאתם כבר לא יודעים מהי ההודעה הזו,

281
00:17:57,580 --> 00:18:00,180
אולי חלקכם שיננו אותה בעל פה, אבל בואו נניח שלא.

282
00:18:00,180 --> 00:18:05,820
מה שאני הולך לעשות זה לשנות או 0, 1 או 2

283
00:18:05,820 --> 00:18:08,340
מהסיביות בבלוק הזה, ואז לבקש ממך להבין מה זה שעשיתי.

284
00:18:08,340 --> 00:18:13,460
אז שוב, עצור ונסה לפתור את זה.

285
00:18:13,460 --> 00:18:23,960
אוקיי, אז אתה כמקלט עכשיו בודק את קבוצת הזוגיות הראשונה ואתה יכול

286
00:18:23,960 --> 00:18:29,820
לראות שהיא זוגית, אז כל שגיאה שקיימת תצטרך להיות בעמודה זוגית.

287
00:18:29,820 --> 00:18:34,620
הסימון הבא נותן לנו מספר אי-זוגי, אומר לשנינו שיש

288
00:18:34,620 --> 00:18:38,760
לפחות שגיאה אחת, ומצמצם אותנו לעמודה הספציפית הזו.

289
00:18:38,760 --> 00:18:42,900
הבדיקה השלישית שווה, ומצמצמת את האפשרויות עוד יותר.

290
00:18:42,900 --> 00:18:46,780
ובדיקת השוויון האחרונה היא מוזרה, ואומרת לנו שיש שגיאה אי שם בתחתית,

291
00:18:46,780 --> 00:18:51,700
שעד עכשיו אנחנו יכולים לראות שהיא חייבת להיות בעמדה מספר 10.

292
00:18:51,700 --> 00:18:56,140
מה גם שהשוויון של כל הבלוק מוזר, נותן

293
00:18:56,140 --> 00:18:58,220
לנו ביטחון שהיה הפוך אחד ולא שניים.

294
00:18:58,220 --> 00:19:01,600
אם זה שלושה או יותר, כל ההימורים מושבתים.

295
00:19:01,600 --> 00:19:06,520
לאחר תיקון אותו סיביות מספר 10, שליפת 11 הסיביות שלא שימשו

296
00:19:06,520 --> 00:19:11,620
לתיקון נותנת לנו את הקטע הרלוונטי של ההודעה המקורית, שאם תגלגל

297
00:19:11,620 --> 00:19:16,160
אחורה ותשווה הוא אכן בדיוק מה שהתחלנו איתו את הדוגמה.

298
00:19:16,160 --> 00:19:19,260
ועכשיו כשאתה יודע לעשות את כל זה ביד, אני רוצה להראות לך איך אתה יכול

299
00:19:19,260 --> 00:19:23,940
לבצע את החלק המרכזי של כל ההיגיון הזה עם שורה אחת של קוד Python.

300
00:19:23,940 --> 00:19:28,400
אתה מבין, מה שעדיין לא סיפרתי לך זה עד כמה האלגוריתם

301
00:19:28,400 --> 00:19:32,380
הזה באמת אלגנטי, כמה פשוט לגרום למכונה להצביע על המיקום של

302
00:19:32,380 --> 00:19:37,680
שגיאה, איך לשנות אותה באופן שיטתי ואיך אנחנו יכולים למסגר את

303
00:19:37,680 --> 00:19:39,580
כל זאת כפעולה אחת בודדת ולא כמספר בדיקות זוגיות נפרדות.

304
00:19:39,580 --> 00:19:41,680
כדי להבין למה אני מתכוון, בוא הצטרף אליי בחלק 2.

