[
 {
  "input": "I'm assuming that everybody here is coming from part 1.",
  "translatedText": "Supongo que todos aquí vienen de la parte 1.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 0.0,
  "end": 2.56
 },
 {
  "input": "We were talking about Hamming codes, a way to create a block of data where most of the bits carry a meaningful message, while a few others act as a kind of redundancy, in such a way that if any bit gets flipped, either a message bit or a redundancy bit, anything in this block, a receiver is going to be able to identify that there was an error, and how to fix it.",
  "translatedText": "Estábamos hablando de códigos Hamming, una forma de crear un bloque de datos donde la mayoría de los bits llevan un mensaje significativo, mientras que algunos otros actúan como una especie de redundancia, de tal manera que si se voltea algún bit, ya sea un mensaje bit o un bit de redundancia, cualquier cosa en este bloque, un receptor podrá identificar que hubo un error y cómo solucionarlo.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 3.06,
  "end": 21.24
 },
 {
  "input": "The basic idea presented there was how to use multiple parity checks to binary search your way down to the error.",
  "translatedText": "La idea básica presentada allí fue cómo utilizar múltiples comprobaciones de paridad para realizar una búsqueda binaria hasta llegar al error.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 21.88,
  "end": 27.16
 },
 {
  "input": "In that video the goal was to make Hamming codes feel as hands-on and rediscoverable as possible.",
  "translatedText": "En ese vídeo, el objetivo era hacer que los códigos Hamming se sintieran lo más prácticos y redescubribles posible.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 28.98,
  "end": 34.6
 },
 {
  "input": "But as you start to think about actually implementing this, either in software or hardware, that framing may actually undersell how elegant these codes really are.",
  "translatedText": "Pero cuando empiezas a pensar en implementar esto, ya sea en software o hardware, ese marco puede subestimar lo elegantes que son realmente estos códigos.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 35.18,
  "end": 43.46
 },
 {
  "input": "You might think that you need to write an algorithm that keeps track of all the possible error locations and cuts that group in half with each check, but it's actually way, way simpler than that.",
  "translatedText": "Podría pensar que necesita escribir un algoritmo que realice un seguimiento de todas las posibles ubicaciones de error y corte ese grupo a la mitad con cada verificación, pero en realidad es mucho, mucho más simple que eso.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 43.92,
  "end": 53.48
 },
 {
  "input": "If you read out the answers to the four parity checks we did in the last video, all as 1s and 0s instead of yeses and nos, it literally spells out the position of the error in binary.",
  "translatedText": "Si lees las respuestas a las cuatro comprobaciones de paridad que hicimos en el último vídeo, todas como 1 y 0 en lugar de sí y no, literalmente se detalla la posición del error en binario.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 53.94,
  "end": 64.08
 },
 {
  "input": "For example, the number 7 in binary looks like 0111, essentially saying that it's 4 plus 2 plus 1.",
  "translatedText": "Por ejemplo, el número 7 en binario se parece a 0111, lo que básicamente dice que es 4 más 2 más 1.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 64.78,
  "end": 71.26
 },
 {
  "input": "And notice where the position 7 sits, it does affect the first of our parity groups, and the second, and the third, but not the last.",
  "translatedText": "Y observen dónde se ubica la posición 7, afecta al primero de nuestros grupos de paridad, al segundo y al tercero, pero no al último.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 72.54,
  "end": 81.74
 },
 {
  "input": "So reading the results of those four checks from bottom to top indeed does spell out the position of the error.",
  "translatedText": "Entonces, leer los resultados de esas cuatro comprobaciones de abajo hacia arriba sí explica la posición del error.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 82.22,
  "end": 87.54
 },
 {
  "input": "There's nothing special about the example 7, this works in general, and this makes the logic for implementing the whole scheme in hardware shockingly simple.",
  "translatedText": "No hay nada especial en el ejemplo 7, funciona en general y hace que la lógica para implementar todo el esquema en hardware sea sorprendentemente simple.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 88.32,
  "end": 95.82
 },
 {
  "input": "Now if you want to see why this magic happens, take these 16 index labels for our positions, but instead of writing them in base 10, let's write them all in binary, running from 0000 up to 1111.",
  "translatedText": "Ahora, si quieres ver por qué ocurre esta magia, toma estas 16 etiquetas de índice para nuestras posiciones, pero en lugar de escribirlas en base 10, escribámoslas todas en binario, desde 0000 hasta 1111.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 97.24,
  "end": 109.88
 },
 {
  "input": "As we put these binary labels back into their boxes, let me emphasize that they are distinct from the data that's actually being sent.",
  "translatedText": "Mientras volvemos a colocar estas etiquetas binarias en sus cajas, permítanme enfatizar que son distintas de los datos que realmente se envían.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 110.56,
  "end": 117.8
 },
 {
  "input": "They're nothing more than a conceptual label to help you and me understand where the four parity groups came from.",
  "translatedText": "No son más que una etiqueta conceptual para ayudarnos a usted y a mí a comprender de dónde provienen los cuatro grupos de paridad.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 118.32,
  "end": 123.5
 },
 {
  "input": "The elegance of having everything we're looking at be described in binary is maybe undercut by the confusion of having everything we're looking at being described in binary.",
  "translatedText": "La elegancia de que todo lo que estamos viendo se describa en binario tal vez se vea socavada por la confusión de que todo lo que estamos viendo se describa en binario.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 124.14,
  "end": 132.36
 },
 {
  "input": "It's worth it, though.",
  "translatedText": "Pero vale la pena.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 133.02,
  "end": 134.12
 },
 {
  "input": "Focus your attention just on that last bit of all of these labels, and then highlight the positions where that final bit is a 1.",
  "translatedText": "Concentre su atención solo en la última parte de todas estas etiquetas y luego resalte las posiciones donde esa última parte es un 1.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 134.8,
  "end": 143.22
 },
 {
  "input": "What we get is the first of our four parity groups, which means you can interpret that first check as asking, hey, if there's an error, is the final bit in the position of that error a 1?",
  "translatedText": "Lo que obtenemos es el primero de nuestros cuatro grupos de paridad, lo que significa que puedes interpretar esa primera verificación como si preguntaras, oye, si hay un error, ¿el último bit en la posición de ese error es 1?",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 144.24,
  "end": 155.74
 },
 {
  "input": "Similarly, if you focus on the second to last bit, and highlight all the positions where that's a 1, you get the second parity group from our scheme.",
  "translatedText": "De manera similar, si se concentra en el penúltimo bit y resalta todas las posiciones donde es un 1, obtendrá el segundo grupo de paridad de nuestro esquema.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 158.2,
  "end": 166.16
 },
 {
  "input": "In other words, that second check is asking, hey, me again, if there's an error, is the second to last bit of that position a 1?",
  "translatedText": "En otras palabras, esa segunda verificación pregunta, oye, otra vez, si hay un error, ¿el penúltimo bit de esa posición es 1?",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 166.74,
  "end": 174.5
 },
 {
  "input": "And so on.",
  "translatedText": "Etcétera.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 175.76,
  "end": 176.9
 },
 {
  "input": "The third parity check covers every position whose third to last bit is turned on, and the last one covers the last eight positions, those ones whose highest order bit is a 1.",
  "translatedText": "La tercera verificación de paridad cubre todas las posiciones cuyo penúltimo bit está activado, y la última cubre las últimas ocho posiciones, aquellas cuyo bit de mayor orden es 1.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 177.22,
  "end": 188.74
 },
 {
  "input": "Everything we did earlier is the same as answering these four questions, which in turn is the same as spelling out a position in binary.",
  "translatedText": "Todo lo que hicimos antes es lo mismo que responder estas cuatro preguntas, lo que a su vez es lo mismo que deletrear una posición en binario.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 189.74,
  "end": 197.74
 },
 {
  "input": "I hope this makes two things clearer.",
  "translatedText": "Espero que esto aclare dos cosas.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 199.62,
  "end": 201.48
 },
 {
  "input": "The first is how to systematically generalize to block sizes that are bigger powers of two.",
  "translatedText": "La primera es cómo generalizar sistemáticamente a tamaños de bloques que son potencias de dos mayores.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 202.04,
  "end": 206.46
 },
 {
  "input": "If it takes more bits to describe each position, like six bits to describe 64 spots, then each of those bits gives you one of the parity groups that we need to check.",
  "translatedText": "Si se necesitan más bits para describir cada posición, como seis bits para describir 64 puntos, entonces cada uno de esos bits le dará uno de los grupos de paridad que necesitamos verificar.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 206.96,
  "end": 216.68
 },
 {
  "input": "Those of you who watched the chessboard puzzle I did with Matt Parker might find all this exceedingly familiar.",
  "translatedText": "Aquellos de ustedes que vieron el rompecabezas de tablero de ajedrez que hice con Matt Parker pueden encontrar todo esto sumamente familiar.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 218.4,
  "end": 223.18
 },
 {
  "input": "It's the same core logic, but solving a different problem, and applied to a 64-squared chessboard.",
  "translatedText": "Es la misma lógica central, pero resolviendo un problema diferente y aplicada a un tablero de ajedrez de 64 casillas.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 223.66,
  "end": 228.78
 },
 {
  "input": "The second thing I hope this makes clear is why our parity bits are sitting in the positions that are powers of two, for example 1, 2, 4, and 8.",
  "translatedText": "Lo segundo que espero que esto aclare es por qué nuestros bits de paridad están en posiciones que son potencias de dos, por ejemplo 1, 2, 4 y 8.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 229.88,
  "end": 237.32
 },
 {
  "input": "These are the positions whose binary representation has just a single bit turned on.",
  "translatedText": "Estas son las posiciones cuya representación binaria tiene un solo bit activado.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 238.0,
  "end": 243.0
 },
 {
  "input": "What that means is each of those parity bits sits inside one and only one of the four parity groups.",
  "translatedText": "Lo que eso significa es que cada uno de esos bits de paridad se encuentra dentro de uno y sólo uno de los cuatro grupos de paridad.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 243.6,
  "end": 249.46
 },
 {
  "input": "You can also see this in larger examples, where no matter how big you get, each parity bit conveniently touches only one of the groups.",
  "translatedText": "También puede ver esto en ejemplos más grandes, donde no importa cuán grande sea, cada bit de paridad toca convenientemente solo uno de los grupos.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 252.04,
  "end": 259.34
 },
 {
  "input": "Once you understand that these parity checks that we've focused so much of our time on are nothing more than a clever way to spell out the position of an error in binary, then we can draw a connection with a different way to think about hamming codes, one that is arguably a lot simpler and more elegant, and which can basically be written down with a single line of code.",
  "translatedText": "Una vez que comprenda que estas comprobaciones de paridad en las que hemos centrado gran parte de nuestro tiempo no son más que una forma inteligente de explicar la posición de un error en binario, entonces podremos establecer una conexión con una forma diferente de pensar sobre el hamming. códigos, uno que posiblemente sea mucho más simple y elegante, y que básicamente se puede escribir con una sola línea de código.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 265.6,
  "end": 283.24
 },
 {
  "input": "It's based on the XOR function.",
  "translatedText": "Se basa en la función XOR.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 283.66,
  "end": 285.5
 },
 {
  "input": "XOR, for those of you who don't know, stands for exclusive or.",
  "translatedText": "XOR, para aquellos que no lo saben, significa exclusivo o.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 286.94,
  "end": 290.22
 },
 {
  "input": "When you take the XOR of two bits, it's going to return a 1 if either one of those bits is turned on, but not if both are turned on or off.",
  "translatedText": "Cuando tomas el XOR de dos bits, devolverá un 1 si cualquiera de esos bits está activado, pero no si ambos están activados o desactivados.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 290.78,
  "end": 299.36
 },
 {
  "input": "Phrased differently, it's the parity of these two bits.",
  "translatedText": "Dicho de otra manera, es la paridad de estos dos bits.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 300.1,
  "end": 302.98
 },
 {
  "input": "As a math person, I prefer to think about it as addition mod 2.",
  "translatedText": "Como persona de matemáticas, prefiero pensar en ello como la suma mod 2.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 303.54,
  "end": 306.76
 },
 {
  "input": "We also commonly talk about the XOR of two different bit strings, which basically does this component by component.",
  "translatedText": "También hablamos comúnmente del XOR de dos cadenas de bits diferentes, que básicamente hace esto componente por componente.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 307.36,
  "end": 313.44
 },
 {
  "input": "It's like addition, but where you never carry.",
  "translatedText": "Es como una suma, pero donde nunca se lleva.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 313.68,
  "end": 315.72
 },
 {
  "input": "Again, the more mathematically inclined might prefer to think of this as adding two vectors and reducing mod 2.",
  "translatedText": "Nuevamente, los más inclinados a las matemáticas podrían preferir pensar en esto como sumar dos vectores y reducir mod 2.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 316.5,
  "end": 322.48
 },
 {
  "input": "If you open up some Python right now and apply the caret operation between two integers, this is what it's doing but to the bit representations of those numbers under the hood.",
  "translatedText": "Si abre algo de Python ahora mismo y aplica la operación de intercalación entre dos números enteros, esto es lo que está haciendo, pero en las representaciones de bits de esos números bajo el capó.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 323.5,
  "end": 332.94
 },
 {
  "input": "The key point for you and me is that taking the XOR of many different bit strings is effectively a way to compute the parodies of a bunch of separate groups, like so with the columns, all in one fell swoop.",
  "translatedText": "El punto clave para usted y para mí es que tomar el XOR de muchas cadenas de bits diferentes es efectivamente una forma de calcular las parodias de un grupo de grupos separados, como ocurre con las columnas, todo de una sola vez.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 334.96,
  "end": 347.14
 },
 {
  "input": "This gives us a rather snazzy way to think about the multiple parity checks from our Hamming code algorithm as all being packaged together into one single operation.",
  "translatedText": "Esto nos da una forma bastante elegante de pensar en las múltiples comprobaciones de paridad de nuestro algoritmo de código Hamming como si estuvieran todas empaquetadas en una sola operación.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 351.26,
  "end": 358.78
 },
 {
  "input": "Though at first glance it does look very different.",
  "translatedText": "Aunque a primera vista parece muy diferente.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 359.48,
  "end": 362.18
 },
 {
  "input": "Specifically write down the 16 positions in binary, like we had before, and now highlight the positions where the message bit is turned on to a 1, and then collect these positions into one big column and take the XOR.",
  "translatedText": "Escriba específicamente las 16 posiciones en binario, como lo hicimos antes, y ahora resalte las posiciones donde el bit del mensaje se activa en 1, y luego recopile estas posiciones en una columna grande y tome el XOR.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 362.82,
  "end": 377.1
 },
 {
  "input": "You can probably guess that the 4 bits sitting at the bottom as a result are the same as the 4 parity checks we've come to know and love, but take a moment to actually think about why exactly.",
  "translatedText": "Probablemente puedas adivinar que, como resultado, los 4 bits que se encuentran en la parte inferior son los mismos que los 4 controles de paridad que conocemos y amamos, pero tómate un momento para pensar realmente por qué.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 379.26,
  "end": 389.2
 },
 {
  "input": "This last column, for example, is counting all of the positions whose last bit is a 1, but we're already limited only to the highlighted positions, so it's effectively counting how many highlighted positions came from the first parity group.",
  "translatedText": "Esta última columna, por ejemplo, cuenta todas las posiciones cuyo último bit es 1, pero ya estamos limitados solo a las posiciones resaltadas, por lo que efectivamente cuenta cuántas posiciones resaltadas provienen del primer grupo de paridad.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 392.22,
  "end": 405.76
 },
 {
  "input": "Does that make sense?",
  "translatedText": "¿Tiene sentido?",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 406.24,
  "end": 406.8
 },
 {
  "input": "Likewise, the next column counts how many positions are in the second parity group, the positions whose second to last bit is a 1, and which are also highlighted, and so on.",
  "translatedText": "Asimismo, la siguiente columna cuenta cuántas posiciones hay en el segundo grupo de paridad, las posiciones cuyo penúltimo bit es un 1, y cuáles también están resaltadas, y así sucesivamente.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 409.08,
  "end": 420.0
 },
 {
  "input": "It's really just a small shift in perspective on the same thing we've been doing.",
  "translatedText": "En realidad, es solo un pequeño cambio de perspectiva sobre lo mismo que hemos estado haciendo.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 420.26,
  "end": 423.96
 },
 {
  "input": "And so you know where it goes from here.",
  "translatedText": "Y entonces sabes a dónde va desde aquí.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 427.76,
  "end": 429.6
 },
 {
  "input": "The sender is responsible for toggling some of the special parity bits to make sure the sum works out to be 0000.",
  "translatedText": "El remitente es responsable de alternar algunos de los bits de paridad especiales para asegurarse de que la suma resulte 0000.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 430.0,
  "end": 436.56
 },
 {
  "input": "Now once we have it like this, this gives us a really nice way to think about why these four resulting bits at the bottom directly spell out the position of an error.",
  "translatedText": "Ahora, una vez que lo tenemos así, nos da una muy buena manera de pensar por qué estos cuatro bits resultantes en la parte inferior explican directamente la posición de un error.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 439.04,
  "end": 447.58
 },
 {
  "input": "Let's say some bit in this block gets toggled from a 0 to a 1.",
  "translatedText": "Digamos que una parte de este bloque se cambia de 0 a 1.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 448.46,
  "end": 451.86
 },
 {
  "input": "What that means is that the position of that bit is now going to be included in the total XOR, which changes the sum from being 0 to instead being this newly included value, the position of the error.",
  "translatedText": "Lo que eso significa es que la posición de ese bit ahora se incluirá en el XOR total, lo que cambia la suma de 0 a ser este valor recién incluido, la posición del error.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 452.6,
  "end": 463.82
 },
 {
  "input": "Slightly less obviously, the same is true if there's an error that changes a 1 to a 0.",
  "translatedText": "Un poco menos obvio, lo mismo ocurre si hay un error que cambia un 1 por un 0.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 464.46,
  "end": 469.36
 },
 {
  "input": "You see, if you add a bit string together twice, it's the same as not having it there at all, basically because in this world 1 plus 1 equals 0.",
  "translatedText": "Verás, si sumas una cadena de bits dos veces, es lo mismo que no tenerla ahí, básicamente porque en este mundo 1 más 1 es igual a 0.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 470.18,
  "end": 477.94
 },
 {
  "input": "So adding a copy of this position to the total sum has the same effect as we're moving it.",
  "translatedText": "Entonces, agregar una copia de esta posición a la suma total tiene el mismo efecto que moverla.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 478.92,
  "end": 484.3
 },
 {
  "input": "And that effect, again, is that the total result at the bottom here spells out the position of the error.",
  "translatedText": "Y ese efecto, nuevamente, es que el resultado total en la parte inferior aquí explica la posición del error.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 485.16,
  "end": 490.7
 },
 {
  "input": "To illustrate how elegant this is, let me show that one line of Python code I referenced before, which will capture almost all of the logic on the receiver's end.",
  "translatedText": "Para ilustrar lo elegante que es esto, permítanme mostrarles una línea de código Python a la que hice referencia antes, que capturará casi toda la lógica del lado del receptor.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 493.04,
  "end": 501.44
 },
 {
  "input": "We'll start by creating a random array of 16 1s and 0s to simulate the data block, and I'll give it the name bits, but of course in practice this would be something we're receiving from a sender, and instead of being random it would be carrying 11 data bits together with 5 parity bits.",
  "translatedText": "Comenzaremos creando una matriz aleatoria de 16 1 y 0 para simular el bloque de datos, y le daré el nombre de bits, pero, por supuesto, en la práctica esto sería algo que recibiríamos de un remitente, y en lugar de al ser aleatorio, transportaría 11 bits de datos junto con 5 bits de paridad.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 502.08,
  "end": 517.4
 },
 {
  "input": "If I call the function enumerateBits, what it does is pair together each of those bits with a corresponding index, in this case running from 0 up to 15.",
  "translatedText": "Si llamo a la función enumerateBits, lo que hace es emparejar cada uno de esos bits con un índice correspondiente, en este caso yendo desde 0 hasta 15.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 518.12,
  "end": 527.0
 },
 {
  "input": "So if we then create a list that loops over all of these pairs, pairs that look like i, and then we pull out just the i value, just the index, well it's not that exciting, we just get back those indices 0 through 15.",
  "translatedText": "Entonces, si luego creamos una lista que recorre todos estos pares, pares que se parecen a i, y luego extraemos solo el valor de i, solo el índice, bueno, no es tan emocionante, simplemente recuperamos esos índices del 0 al 15.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 528.18,
  "end": 541.34
 },
 {
  "input": "But if we add on the condition to only do this if bit, meaning if that bit is a 1 and not a 0, well then it pulls out only the positions where the corresponding bit is turned on.",
  "translatedText": "Pero si agregamos la condición de hacer esto solo si el bit, es decir, si ese bit es un 1 y no un 0, entonces extrae solo las posiciones donde el bit correspondiente está activado.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 541.68,
  "end": 552.66
 },
 {
  "input": "In this case it looks like those positions are 0, 4, 6, 9, etc.",
  "translatedText": "En este caso parece que esas posiciones son 0, 4, 6, 9, etc.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 553.38,
  "end": 557.96
 },
 {
  "input": "What we want is to collect together all of those positions, the positions of the bits that are turned on, and then XOR them together.",
  "translatedText": "Lo que queremos es reunir todas esas posiciones, las posiciones de los bits que están activados, y luego realizar XOR juntas.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 559.98,
  "end": 567.24
 },
 {
  "input": "To do this in Python, let me first import a couple helpful functions.",
  "translatedText": "Para hacer esto en Python, permítanme primero importar un par de funciones útiles.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 569.18,
  "end": 573.22
 },
 {
  "input": "That way we can call reduce() on this list, and use the XOR function to reduce it.",
  "translatedText": "De esa manera podemos llamar a reduce() en esta lista y usar la función XOR para reducirla.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 573.9,
  "end": 578.7
 },
 {
  "input": "This basically eats its way through the list, taking XORs along the way.",
  "translatedText": "Básicamente, esto se abre camino a través de la lista, llevando XOR a lo largo del camino.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 579.1,
  "end": 582.68
 },
 {
  "input": "If you prefer, you can explicitly write out that XOR function without having to import it from anywhere.",
  "translatedText": "Si lo prefiere, puede escribir explícitamente esa función XOR sin tener que importarla desde ningún lugar.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 584.8,
  "end": 589.44
 },
 {
  "input": "So at the moment it looks like if we do this on our random block of 16 bits, it returns 9, which has the binary representation 1001.",
  "translatedText": "Entonces, por el momento parece que si hacemos esto en nuestro bloque aleatorio de 16 bits, devuelve 9, que tiene la representación binaria 1001.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 591.94,
  "end": 601.28
 },
 {
  "input": "We won't do it here, but you could write a function where the sender uses that binary representation to set the four parity bits as needed, ultimately getting this block to a state where running this line of code on the full list of bits returns a 0.",
  "translatedText": "No lo haremos aquí, pero podría escribir una función en la que el remitente use esa representación binaria para establecer los cuatro bits de paridad según sea necesario y, en última instancia, llevar este bloque a un estado en el que la ejecución de esta línea de código en la lista completa de bits devuelva un 0.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 601.98,
  "end": 615.46
 },
 {
  "input": "This would be considered a well-prepared block.",
  "translatedText": "Esto se consideraría un bloque bien preparado.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 616.08,
  "end": 618.2
 },
 {
  "input": "What's cool is that if we toggle any one of the bits in this list, simulating a random error from noise, then if you run this same line of code, it prints out that error.",
  "translatedText": "Lo bueno es que si alternamos cualquiera de los bits en esta lista, simulando un error aleatorio debido al ruido, si ejecuta esta misma línea de código, imprimirá ese error.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 619.88,
  "end": 630.22
 },
 {
  "input": "Isn't that neat?",
  "translatedText": "¿No es genial?",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 630.96,
  "end": 631.52
 },
 {
  "input": "You could get this block from out of the blue, run this single line on it, and it'll automatically spit out the position of an error, or a 0 if there wasn't any.",
  "translatedText": "Podrías obtener este bloque de la nada, ejecutar esta única línea en él y automáticamente mostrará la posición de un error, o un 0 si no hubo ninguno.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 631.82,
  "end": 641.06
 },
 {
  "input": "And there's nothing special about the size 16 here.",
  "translatedText": "Y aquí la talla 16 no tiene nada de especial.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 642.5,
  "end": 645.2
 },
 {
  "input": "The same line of code would work if you had a list of, say, 256 bits.",
  "translatedText": "La misma línea de código funcionaría si tuviera una lista de, digamos, 256 bits.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 645.4,
  "end": 649.86
 },
 {
  "input": "Needless to say, there is more code to write here, like doing the meta parity check to detect 2-bit errors, but the idea is that almost all of the core logic from our scheme comes down to a single XOR reduction.",
  "translatedText": "No hace falta decir que hay más código para escribir aquí, como hacer la verificación de metaparidad para detectar errores de 2 bits, pero la idea es que casi toda la lógica central de nuestro esquema se reduzca a una única reducción de XOR.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 651.88,
  "end": 663.76
 },
 {
  "input": "Now, depending on your comfort with binary and XORs and software in general, you may either find this perspective a little bit confusing, or so much more elegant and simple that you're wondering why we didn't just start with it from the get-go.",
  "translatedText": "Ahora, dependiendo de su comodidad con los binarios, los XOR y el software en general, puede encontrar esta perspectiva un poco confusa o mucho más elegante y simple que se pregunte por qué no comenzamos con ella desde el principio. -ir.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 666.12,
  "end": 678.42
 },
 {
  "input": "Loosely speaking, the multiple parity check perspective is easier to think about when implementing Hamming codes in hardware very directly, and the XOR perspective is easiest to think about when doing it in software, from kind of a higher level.",
  "translatedText": "En términos generales, es más fácil pensar en la perspectiva de verificación de paridad múltiple cuando se implementan códigos Hamming en hardware de manera muy directa, y es más fácil pensar en la perspectiva XOR cuando se hace en software, desde un nivel superior.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 679.14,
  "end": 690.5
 },
 {
  "input": "The first one is easiest to actually do by hand, and I think it does a better job instilling the core intuition underlying all of this, which is that the information required to locate a single error is related to the log of the size of the block, or in other words, it grows one bit at a time as the block size doubles.",
  "translatedText": "El primero es más fácil de hacer a mano, y creo que hace un mejor trabajo al inculcar la intuición central subyacente a todo esto, que es que la información requerida para localizar un solo error está relacionada con el registro del tamaño del bloque. , o en otras palabras, crece poco a poco a medida que se duplica el tamaño del bloque.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 691.36,
  "end": 710.0
 },
 {
  "input": "The relevant fact here is that that information directly corresponds to how much redundancy we need.",
  "translatedText": "El hecho relevante aquí es que esa información corresponde directamente a cuánta redundancia necesitamos.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 711.02,
  "end": 716.06
 },
 {
  "input": "That's really what runs against most people's knee-jerk reaction when they first think about making a message resilient to errors, where usually copying the whole message is the first instinct that comes to mind.",
  "translatedText": "Eso es realmente lo que va en contra de la reacción instintiva de la mayoría de las personas cuando piensan por primera vez en hacer que un mensaje sea resistente a los errores, donde normalmente copiar el mensaje completo es el primer instinto que les viene a la mente.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 716.66,
  "end": 726.54
 },
 {
  "input": "And then, by the way, there is this whole other way that you sometimes see Hamming codes presented, where you multiply the message by one big matrix.",
  "translatedText": "Y luego, por cierto, existe otra forma completamente distinta en la que a veces se presentan los códigos Hamming, donde se multiplica el mensaje por una gran matriz.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 727.5,
  "end": 734.0
 },
 {
  "input": "It's kind of nice because it relates it to the broader family of linear codes, but I think that gives almost no intuition for where it comes from or how it scales.",
  "translatedText": "Es algo bueno porque lo relaciona con la familia más amplia de códigos lineales, pero creo que eso casi no da ninguna intuición sobre de dónde viene o cómo escala.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 734.67,
  "end": 743.06
 },
 {
  "input": "And speaking of scaling, you might notice that the efficiency of this scheme only gets better as we increase the block size.",
  "translatedText": "Y hablando de escalamiento, es posible que notes que la eficiencia de este esquema solo mejora a medida que aumentamos el tamaño del bloque.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 745.2,
  "end": 751.16
 },
 {
  "input": "For example, we saw that with 256 bits, you're using only 3% of that space for redundancy, and it just keeps getting better from there.",
  "translatedText": "Por ejemplo, vimos que con 256 bits, se utiliza solo el 3% de ese espacio para redundancia, y a partir de ahí sigue mejorando.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 755.0,
  "end": 762.66
 },
 {
  "input": "As the number of parity bits grows one by one, the block size keeps doubling.",
  "translatedText": "A medida que el número de bits de paridad crece uno por uno, el tamaño del bloque se sigue duplicando.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 763.3,
  "end": 767.34
 },
 {
  "input": "And if you take that to an extreme, you could have a block with, say, a million bits, where you would quite literally be playing 20 questions with your parity checks, and it uses only 21 parity bits.",
  "translatedText": "Y si lleva eso al extremo, podría tener un bloque con, digamos, un millón de bits, donde literalmente estaría jugando 20 preguntas con sus comprobaciones de paridad, y utiliza sólo 21 bits de paridad.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 769.0,
  "end": 780.02
 },
 {
  "input": "And if you step back to think about looking at a million bits and locating a single error, that genuinely feels crazy.",
  "translatedText": "Y si das un paso atrás y piensas en mirar un millón de bits y localizar un solo error, eso realmente parece una locura.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 780.74,
  "end": 787.06
 },
 {
  "input": "The problem, of course, is that with a larger block, the probability of seeing more than one or two bit errors goes up, and Hamming codes do not handle anything beyond that.",
  "translatedText": "El problema, por supuesto, es que con un bloque más grande, la probabilidad de ver más de uno o dos errores de bit aumenta, y los códigos Hamming no manejan nada más allá de eso.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 788.2,
  "end": 797.66
 },
 {
  "input": "So in practice, what you'd want is to find the right size so that the probability of too many bit flips isn't too high.",
  "translatedText": "Entonces, en la práctica, lo que querrás es encontrar el tamaño correcto para que la probabilidad de que se produzcan demasiados cambios de bits no sea demasiado alta.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 798.32,
  "end": 804.3
 },
 {
  "input": "Also, in practice, errors tend to come in little bursts, which would totally ruin a single block, so one common tactic to help spread out a burst of errors across many different blocks is to interlace those blocks, like this, before they're sent out or stored.",
  "translatedText": "Además, en la práctica, los errores tienden a ocurrir en pequeñas ráfagas, lo que arruinaría totalmente un solo bloque, por lo que una táctica común para ayudar a distribuir una ráfaga de errores entre muchos bloques diferentes es entrelazar esos bloques, así, antes de que se enviado o almacenado.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 806.6,
  "end": 820.98
 },
 {
  "input": "Then again, a lot of this is rendered completely moot by more modern codes, like the much more commonly used Reed-Solomon algorithm, which handles burst errors particularly well, and it can be tuned to be resilient to a larger number of errors per block.",
  "translatedText": "Por otra parte, mucho de esto se vuelve completamente discutible con códigos más modernos, como el algoritmo Reed-Solomon, mucho más comúnmente utilizado, que maneja particularmente bien los errores de ráfaga y se puede ajustar para que sea resistente a una mayor cantidad de errores por bloque.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 825.58,
  "end": 838.82
 },
 {
  "input": "But that's a topic for another time.",
  "translatedText": "Pero ese es un tema para otro momento.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 839.36,
  "end": 841.34
 },
 {
  "input": "In his book The Art of Doing Science and Engineering, Hamming is wonderfully candid about just how meandering his discovery of this code was.",
  "translatedText": "En su libro El arte de hacer ciencia e ingeniería, Hamming es maravillosamente sincero acerca de cuán sinuoso fue su descubrimiento de este código.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 842.5,
  "end": 849.94
 },
 {
  "input": "He first tried all sorts of different schemes involving organizing the bits into parts of a higher dimensional lattice and strange things like this.",
  "translatedText": "Primero probó todo tipo de esquemas diferentes que implicaban organizar los bits en partes de una red de dimensiones superiores y cosas extrañas como esta.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 850.62,
  "end": 857.78
 },
 {
  "input": "The idea that it might be possible to get parity checks to conspire in a way that spells out the position of an error only came to Hamming when he stepped back after a bunch of other analysis and asked, okay, what is the most efficient I could conceivably be about this?",
  "translatedText": "La idea de que podría ser posible lograr que los controles de paridad conspiraran de una manera que detallara la posición de un error solo se le ocurrió a Hamming cuando dio un paso atrás después de muchos otros análisis y preguntó, bueno, ¿qué es lo más eficiente que puedo? posiblemente se trate de esto?",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 858.3,
  "end": 871.52
 },
 {
  "input": "He was also candid about how important it was that parity checks were already on his mind, which would have been way less common back in the 1940s than it is today.",
  "translatedText": "También fue sincero acerca de lo importante que era que ya tuviera en mente los controles de paridad, que habrían sido mucho menos comunes en la década de 1940 de lo que lo son hoy.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 872.62,
  "end": 881.22
 },
 {
  "input": "There are like half a dozen times throughout this book that he references the Louis Pasteur quote, luck favors a prepared mind.",
  "translatedText": "Hay como media docena de veces a lo largo de este libro en las que hace referencia a la cita de Louis Pasteur: La suerte favorece a una mente preparada.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 881.92,
  "end": 888.22
 },
 {
  "input": "Clever ideas often look deceptively simple in hindsight, which makes them easy to underappreciate.",
  "translatedText": "Las ideas inteligentes a menudo parecen engañosamente simples en retrospectiva, lo que hace que sea fácil subestimarlas.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 889.32,
  "end": 894.3
 },
 {
  "input": "Right now my honest hope is that Hamming codes, or at least the possibility of such codes, feels almost obvious to you.",
  "translatedText": "En este momento mi sincera esperanza es que los códigos de Hamming, o al menos la posibilidad de tales códigos, les parezca casi obvio.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 894.96,
  "end": 901.3
 },
 {
  "input": "But you shouldn't fool yourself into thinking that they actually are obvious, because they definitely aren't.",
  "translatedText": "Pero no deberías engañarte pensando que en realidad son obvios, porque definitivamente no lo son.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 901.66,
  "end": 906.82
 },
 {
  "input": "Part of the reason that clever ideas look deceptively easy is that we only ever see the final result, cleaning up what was messy, never mentioning all of the wrong turns, underselling just how vast the space of explorable possibilities is at the start of a problem solving process, all of that.",
  "translatedText": "Parte de la razón por la que las ideas inteligentes parecen engañosamente fáciles es que sólo vemos el resultado final, limpiando lo que estaba desordenado, sin mencionar nunca todos los giros equivocados, subestimando cuán vasto es el espacio de posibilidades explorables al comienzo de un problema. proceso de resolución, todo eso.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 907.88,
  "end": 922.86
 },
 {
  "input": "But this is true in general.",
  "translatedText": "Pero esto es cierto en general.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 923.82,
  "end": 924.9
 },
 {
  "input": "I think for some special inventions, there's a second, deeper reason that we underappreciate them.",
  "translatedText": "Creo que para algunos inventos especiales, hay una segunda razón más profunda por la que los subestimamos.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 924.9,
  "end": 930.04
 },
 {
  "input": "Thinking of information in terms of bits had only really coalesced into a full theory by 1948, with Claude Shannon's seminal paper on information theory.",
  "translatedText": "Pensar en la información en términos de bits no se había convertido realmente en una teoría completa hasta 1948, con el artículo fundamental de Claude Shannon sobre la teoría de la información.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 930.84,
  "end": 938.64
 },
 {
  "input": "This was essentially concurrent with when Hamming developed his algorithm.",
  "translatedText": "Esto fue esencialmente coincidente con el momento en que Hamming desarrolló su algoritmo.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 939.28,
  "end": 942.54
 },
 {
  "input": "This was the same foundational paper that showed, in a certain sense, that efficient error correction is always possible, no matter how high the probability of bit flips, at least in theory.",
  "translatedText": "Este fue el mismo artículo fundamental que demostró, en cierto sentido, que siempre es posible una corrección de errores eficiente, sin importar cuán alta sea la probabilidad de que se produzcan cambios de bit, al menos en teoría.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 943.3,
  "end": 952.9
 },
 {
  "input": "Shannon and Hamming, by the way, shared an office in Bell Labs, despite working on very different things, which hardly seems coincidental here.",
  "translatedText": "Shannon y Hamming, por cierto, compartían oficina en Bell Labs, a pesar de trabajar en cosas muy diferentes, lo que aquí no parece coincidencia.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 953.7,
  "end": 961.16
 },
 {
  "input": "Fast forward several decades, and these days, many of us are so immersed in thinking about bits and information that it's easy to overlook just how distinct this way of thinking was.",
  "translatedText": "Varias décadas después, hoy en día muchos de nosotros estamos tan inmersos en pensar en bits e información que es fácil pasar por alto cuán distinta era esta forma de pensar.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 962.38,
  "end": 972.34
 },
 {
  "input": "Ironically, the ideas that most profoundly shape the ways that a future generation thinks will end up looking to that future generation simpler than they really are.",
  "translatedText": "Irónicamente, las ideas que moldean más profundamente la forma en que piensa una generación futura terminarán pareciéndole más simples de lo que realmente son.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 973.1,
  "end": 982.26
 }
]