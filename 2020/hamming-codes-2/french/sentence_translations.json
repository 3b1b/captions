[
 {
  "input": "I'm assuming that everybody here is coming from part 1.",
  "translatedText": "Je suppose que tout le monde ici vient de la partie 1.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 0.0,
  "end": 2.56
 },
 {
  "input": "We were talking about Hamming codes, a way to create a block of data where most of the bits carry a meaningful message, while a few others act as a kind of redundancy, in such a way that if any bit gets flipped, either a message bit or a redundancy bit, anything in this block, a receiver is going to be able to identify that there was an error, and how to fix it.",
  "translatedText": "Nous parlions des codes de Hamming, une façon de créer un bloc de données dont la plupart des bits portent un message significatif, tandis que quelques autres agissent comme une sorte de redondance, de telle sorte que si un bit est inversé, soit un message bit ou un bit de redondance, n'importe quoi dans ce bloc, un récepteur sera capable d'identifier qu'il y a eu une erreur et comment la corriger.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 3.06,
  "end": 21.24
 },
 {
  "input": "The basic idea presented there was how to use multiple parity checks to binary search your way down to the error.",
  "translatedText": "L'idée de base présentée ici était de savoir comment utiliser plusieurs contrôles de parité pour effectuer une recherche binaire jusqu'à l'erreur.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 21.88,
  "end": 27.16
 },
 {
  "input": "In that video the goal was to make Hamming codes feel as hands-on and rediscoverable as possible.",
  "translatedText": "Dans cette vidéo, l'objectif était de rendre les codes de Hamming aussi pratiques et redécouvrables que possible.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 28.98,
  "end": 34.6
 },
 {
  "input": "But as you start to think about actually implementing this, either in software or hardware, that framing may actually undersell how elegant these codes really are.",
  "translatedText": "Mais lorsque vous commencez à réfléchir à la mise en œuvre réelle de cela, que ce soit au niveau logiciel ou matériel, ce cadrage peut en fait sous-estimer l'élégance réelle de ces codes.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 35.18,
  "end": 43.46
 },
 {
  "input": "You might think that you need to write an algorithm that keeps track of all the possible error locations and cuts that group in half with each check, but it's actually way, way simpler than that.",
  "translatedText": "Vous pensez peut-être que vous devez écrire un algorithme qui garde une trace de tous les emplacements d'erreur possibles et coupe ce groupe de moitié à chaque vérification, mais c'est en réalité bien plus simple que cela.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 43.92,
  "end": 53.48
 },
 {
  "input": "If you read out the answers to the four parity checks we did in the last video, all as 1s and 0s instead of yeses and nos, it literally spells out the position of the error in binary.",
  "translatedText": "Si vous lisez les réponses aux quatre contrôles de parité que nous avons effectués dans la dernière vidéo, toutes sous forme de 1 et de 0 au lieu de oui et de non, cela indique littéralement la position de l'erreur en binaire.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 53.94,
  "end": 64.08
 },
 {
  "input": "For example, the number 7 in binary looks like 0111, essentially saying that it's 4 plus 2 plus 1.",
  "translatedText": "Par exemple, le nombre 7 en binaire ressemble à 0111, ce qui signifie essentiellement que c'est 4 plus 2 plus 1.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 64.78,
  "end": 71.26
 },
 {
  "input": "And notice where the position 7 sits, it does affect the first of our parity groups, and the second, and the third, but not the last.",
  "translatedText": "Et remarquez où se situe la position 7, elle affecte le premier de nos groupes paritaires, ainsi que le deuxième et le troisième, mais pas le dernier.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 72.54,
  "end": 81.74
 },
 {
  "input": "So reading the results of those four checks from bottom to top indeed does spell out the position of the error.",
  "translatedText": "Ainsi, la lecture des résultats de ces quatre contrôles de bas en haut précise bien la position de l’erreur.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 82.22,
  "end": 87.54
 },
 {
  "input": "There's nothing special about the example 7, this works in general, and this makes the logic for implementing the whole scheme in hardware shockingly simple.",
  "translatedText": "Il n'y a rien de spécial dans l'exemple 7, cela fonctionne en général, et cela rend la logique d'implémentation de l'ensemble du schéma matériellement d'une simplicité choquante.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 88.32,
  "end": 95.82
 },
 {
  "input": "Now if you want to see why this magic happens, take these 16 index labels for our positions, but instead of writing them in base 10, let's write them all in binary, running from 0000 up to 1111.",
  "translatedText": "Maintenant, si vous voulez voir pourquoi cette magie se produit, prenez ces 16 étiquettes d'index pour nos positions, mais au lieu de les écrire en base 10, écrivons-les toutes en binaire, allant de 0000 à 1111.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 97.24,
  "end": 109.88
 },
 {
  "input": "As we put these binary labels back into their boxes, let me emphasize that they are distinct from the data that's actually being sent.",
  "translatedText": "Alors que nous remettons ces étiquettes binaires dans leurs boîtes, permettez-moi de souligner qu'elles sont distinctes des données réellement envoyées.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 110.56,
  "end": 117.8
 },
 {
  "input": "They're nothing more than a conceptual label to help you and me understand where the four parity groups came from.",
  "translatedText": "Ce n'est rien de plus qu'une étiquette conceptuelle pour nous aider, vous et moi, à comprendre d'où viennent les quatre groupes paritaires.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 118.32,
  "end": 123.5
 },
 {
  "input": "The elegance of having everything we're looking at be described in binary is maybe undercut by the confusion of having everything we're looking at being described in binary.",
  "translatedText": "L'élégance d'avoir tout ce que nous regardons soit décrit en binaire est peut-être sapée par la confusion d'avoir tout ce que nous regardons étant décrit en binaire.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 124.14,
  "end": 132.36
 },
 {
  "input": "It's worth it, though.",
  "translatedText": "Mais ça vaut le coup.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 133.02,
  "end": 134.12
 },
 {
  "input": "Focus your attention just on that last bit of all of these labels, and then highlight the positions where that final bit is a 1.",
  "translatedText": "Concentrez votre attention uniquement sur le dernier bit de toutes ces étiquettes, puis mettez en surbrillance les positions où ce dernier bit est un 1.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 134.8,
  "end": 143.22
 },
 {
  "input": "What we get is the first of our four parity groups, which means you can interpret that first check as asking, hey, if there's an error, is the final bit in the position of that error a 1?",
  "translatedText": "Ce que nous obtenons est le premier de nos quatre groupes de parité, ce qui signifie que vous pouvez interpréter cette première vérification comme demandant : hé, s’il y a une erreur, le dernier bit à la position de cette erreur est-il un 1?",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 144.24,
  "end": 155.74
 },
 {
  "input": "Similarly, if you focus on the second to last bit, and highlight all the positions where that's a 1, you get the second parity group from our scheme.",
  "translatedText": "De même, si vous vous concentrez sur l'avant-dernier bit et mettez en surbrillance toutes les positions où il s'agit d'un 1, vous obtenez le deuxième groupe de parité de notre schéma.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 158.2,
  "end": 166.16
 },
 {
  "input": "In other words, that second check is asking, hey, me again, if there's an error, is the second to last bit of that position a 1?",
  "translatedText": "En d’autres termes, cette deuxième vérification demande : hé, encore une fois, s’il y a une erreur, l’avant-dernier bit de cette position est-il un 1?",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 166.74,
  "end": 174.5
 },
 {
  "input": "And so on.",
  "translatedText": "Et ainsi de suite.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 175.76,
  "end": 176.9
 },
 {
  "input": "The third parity check covers every position whose third to last bit is turned on, and the last one covers the last eight positions, those ones whose highest order bit is a 1.",
  "translatedText": "Le troisième contrôle de parité couvre chaque position dont l'avant-dernier bit est activé, et le dernier couvre les huit dernières positions, celles dont le bit de poids le plus élevé est un 1.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 177.22,
  "end": 188.74
 },
 {
  "input": "Everything we did earlier is the same as answering these four questions, which in turn is the same as spelling out a position in binary.",
  "translatedText": "Tout ce que nous avons fait plus tôt revient à répondre à ces quatre questions, ce qui revient à épeler une position en binaire.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 189.74,
  "end": 197.74
 },
 {
  "input": "I hope this makes two things clearer.",
  "translatedText": "J'espère que cela rend deux choses plus claires.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 199.62,
  "end": 201.48
 },
 {
  "input": "The first is how to systematically generalize to block sizes that are bigger powers of two.",
  "translatedText": "La première est de savoir comment généraliser systématiquement à des tailles de blocs qui sont des puissances de deux plus grandes.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 202.04,
  "end": 206.46
 },
 {
  "input": "If it takes more bits to describe each position, like six bits to describe 64 spots, then each of those bits gives you one of the parity groups that we need to check.",
  "translatedText": "S'il faut plus de bits pour décrire chaque position, comme six bits pour décrire 64 points, alors chacun de ces bits vous donne l'un des groupes de parité que nous devons vérifier.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 206.96,
  "end": 216.68
 },
 {
  "input": "Those of you who watched the chessboard puzzle I did with Matt Parker might find all this exceedingly familiar.",
  "translatedText": "Ceux d’entre vous qui ont regardé le puzzle d’échiquier que j’ai réalisé avec Matt Parker trouveront peut-être tout cela extrêmement familier.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 218.4,
  "end": 223.18
 },
 {
  "input": "It's the same core logic, but solving a different problem, and applied to a 64-squared chessboard.",
  "translatedText": "C'est la même logique de base, mais résolvant un problème différent, et appliquée à un échiquier de 64 cases.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 223.66,
  "end": 228.78
 },
 {
  "input": "The second thing I hope this makes clear is why our parity bits are sitting in the positions that are powers of two, for example 1, 2, 4, and 8.",
  "translatedText": "La deuxième chose que j'espère que cela clarifie est la raison pour laquelle nos bits de parité se trouvent dans des positions qui sont des puissances de deux, par exemple 1, 2, 4 et 8.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 229.88,
  "end": 237.32
 },
 {
  "input": "These are the positions whose binary representation has just a single bit turned on.",
  "translatedText": "Ce sont les positions dont la représentation binaire n'a qu'un seul bit activé.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 238.0,
  "end": 243.0
 },
 {
  "input": "What that means is each of those parity bits sits inside one and only one of the four parity groups.",
  "translatedText": "Cela signifie que chacun de ces bits de parité se trouve dans un et un seul des quatre groupes de parité.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 243.6,
  "end": 249.46
 },
 {
  "input": "You can also see this in larger examples, where no matter how big you get, each parity bit conveniently touches only one of the groups.",
  "translatedText": "Vous pouvez également le constater dans des exemples plus grands, où quelle que soit votre taille, chaque bit de parité ne touche qu'un seul des groupes.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 252.04,
  "end": 259.34
 },
 {
  "input": "Once you understand that these parity checks that we've focused so much of our time on are nothing more than a clever way to spell out the position of an error in binary, then we can draw a connection with a different way to think about hamming codes, one that is arguably a lot simpler and more elegant, and which can basically be written down with a single line of code.",
  "translatedText": "Une fois que vous comprenez que ces contrôles de parité sur lesquels nous avons consacré une grande partie de notre temps ne sont rien de plus qu'une manière intelligente d'épeler la position d'une erreur en binaire, nous pouvons alors établir un lien avec une manière différente de penser au hamming. des codes, qui sont sans doute beaucoup plus simples et plus élégants, et qui peuvent essentiellement être écrits avec une seule ligne de code.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 265.6,
  "end": 283.24
 },
 {
  "input": "It's based on the XOR function.",
  "translatedText": "Il est basé sur la fonction XOR.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 283.66,
  "end": 285.5
 },
 {
  "input": "XOR, for those of you who don't know, stands for exclusive or.",
  "translatedText": "XOR, pour ceux d'entre vous qui ne le savent pas, signifie exclusif ou.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 286.94,
  "end": 290.22
 },
 {
  "input": "When you take the XOR of two bits, it's going to return a 1 if either one of those bits is turned on, but not if both are turned on or off.",
  "translatedText": "Lorsque vous effectuez le XOR de deux bits, il renvoie un 1 si l'un de ces bits est activé, mais pas si les deux sont activés ou désactivés.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 290.78,
  "end": 299.36
 },
 {
  "input": "Phrased differently, it's the parity of these two bits.",
  "translatedText": "Exprimé différemment, c'est la parité de ces deux bits.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 300.1,
  "end": 302.98
 },
 {
  "input": "As a math person, I prefer to think about it as addition mod 2.",
  "translatedText": "En tant que mathématicien, je préfère y penser comme un mod d'addition 2.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 303.54,
  "end": 306.76
 },
 {
  "input": "We also commonly talk about the XOR of two different bit strings, which basically does this component by component.",
  "translatedText": "Nous parlons aussi couramment du XOR de deux chaînes de bits différentes, qui effectue essentiellement cela composant par composant.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 307.36,
  "end": 313.44
 },
 {
  "input": "It's like addition, but where you never carry.",
  "translatedText": "C'est comme une addition, mais où l'on ne porte jamais.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 313.68,
  "end": 315.72
 },
 {
  "input": "Again, the more mathematically inclined might prefer to think of this as adding two vectors and reducing mod 2.",
  "translatedText": "Encore une fois, les plus enclins aux mathématiques préféreront peut-être considérer cela comme l'ajout de deux vecteurs et la réduction du mod 2.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 316.5,
  "end": 322.48
 },
 {
  "input": "If you open up some Python right now and apply the caret operation between two integers, this is what it's doing but to the bit representations of those numbers under the hood.",
  "translatedText": "Si vous ouvrez Python dès maintenant et appliquez l'opération caret entre deux entiers, c'est ce qu'il fait, mais aux représentations binaires de ces nombres sous le capot.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 323.5,
  "end": 332.94
 },
 {
  "input": "The key point for you and me is that taking the XOR of many different bit strings is effectively a way to compute the parodies of a bunch of separate groups, like so with the columns, all in one fell swoop.",
  "translatedText": "Le point clé pour vous et moi est que prendre le XOR de nombreuses chaînes de bits différentes est effectivement un moyen de calculer les parodies d'un groupe de groupes séparés, comme c'est le cas avec les colonnes, d'un seul coup.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 334.96,
  "end": 347.14
 },
 {
  "input": "This gives us a rather snazzy way to think about the multiple parity checks from our Hamming code algorithm as all being packaged together into one single operation.",
  "translatedText": "Cela nous donne une façon plutôt élégante de considérer les multiples contrôles de parité de notre algorithme de code de Hamming comme étant tous regroupés en une seule opération.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 351.26,
  "end": 358.78
 },
 {
  "input": "Though at first glance it does look very different.",
  "translatedText": "Même si à première vue, cela semble très différent.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 359.48,
  "end": 362.18
 },
 {
  "input": "Specifically write down the 16 positions in binary, like we had before, and now highlight the positions where the message bit is turned on to a 1, and then collect these positions into one big column and take the XOR.",
  "translatedText": "Notez spécifiquement les 16 positions en binaire, comme nous l'avions fait auparavant, et mettez maintenant en surbrillance les positions où le bit de message est activé sur 1, puis rassemblez ces positions dans une grande colonne et prenez le XOR.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 362.82,
  "end": 377.1
 },
 {
  "input": "You can probably guess that the 4 bits sitting at the bottom as a result are the same as the 4 parity checks we've come to know and love, but take a moment to actually think about why exactly.",
  "translatedText": "Vous pouvez probablement deviner que les 4 bits situés en bas sont les mêmes que les 4 contrôles de parité que nous connaissons et aimons, mais prenez un moment pour réfléchir à pourquoi exactement.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 379.26,
  "end": 389.2
 },
 {
  "input": "This last column, for example, is counting all of the positions whose last bit is a 1, but we're already limited only to the highlighted positions, so it's effectively counting how many highlighted positions came from the first parity group.",
  "translatedText": "Cette dernière colonne, par exemple, compte toutes les positions dont le dernier bit est un 1, mais nous sommes déjà limités uniquement aux positions en surbrillance, elle compte donc effectivement le nombre de positions en surbrillance provenant du premier groupe de parité.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 392.22,
  "end": 405.76
 },
 {
  "input": "Does that make sense?",
  "translatedText": "Cela a-t-il du sens?",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 406.24,
  "end": 406.8
 },
 {
  "input": "Likewise, the next column counts how many positions are in the second parity group, the positions whose second to last bit is a 1, and which are also highlighted, and so on.",
  "translatedText": "De même, la colonne suivante compte le nombre de positions dans le deuxième groupe de parité, les positions dont l'avant-dernier bit est un 1 et qui sont également mises en surbrillance, et ainsi de suite.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 409.08,
  "end": 420.0
 },
 {
  "input": "It's really just a small shift in perspective on the same thing we've been doing.",
  "translatedText": "Il s'agit en réalité d'un petit changement de perspective par rapport à la même chose que nous faisons.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 420.26,
  "end": 423.96
 },
 {
  "input": "And so you know where it goes from here.",
  "translatedText": "Et donc vous savez où cela va à partir de maintenant.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 427.76,
  "end": 429.6
 },
 {
  "input": "The sender is responsible for toggling some of the special parity bits to make sure the sum works out to be 0000.",
  "translatedText": "L'expéditeur est responsable d'activer certains bits de parité spéciaux pour s'assurer que la somme est égale à 0000.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 430.0,
  "end": 436.56
 },
 {
  "input": "Now once we have it like this, this gives us a really nice way to think about why these four resulting bits at the bottom directly spell out the position of an error.",
  "translatedText": "Maintenant, une fois que nous avons cela, cela nous donne une très bonne façon de réfléchir à la raison pour laquelle ces quatre bits résultants en bas indiquent directement la position d'une erreur.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 439.04,
  "end": 447.58
 },
 {
  "input": "Let's say some bit in this block gets toggled from a 0 to a 1.",
  "translatedText": "Disons qu'un élément de ce bloc passe de 0 à 1.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 448.46,
  "end": 451.86
 },
 {
  "input": "What that means is that the position of that bit is now going to be included in the total XOR, which changes the sum from being 0 to instead being this newly included value, the position of the error.",
  "translatedText": "Cela signifie que la position de ce bit va maintenant être incluse dans le XOR total, ce qui fait passer la somme de 0 à cette valeur nouvellement incluse, la position de l'erreur.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 452.6,
  "end": 463.82
 },
 {
  "input": "Slightly less obviously, the same is true if there's an error that changes a 1 to a 0.",
  "translatedText": "De manière un peu moins évidente, il en va de même s'il y a une erreur qui change un 1 en un 0.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 464.46,
  "end": 469.36
 },
 {
  "input": "You see, if you add a bit string together twice, it's the same as not having it there at all, basically because in this world 1 plus 1 equals 0.",
  "translatedText": "Vous voyez, si vous ajoutez deux fois une petite chaîne, cela revient à ne pas l'avoir du tout, essentiellement parce que dans ce monde, 1 plus 1 est égal à 0.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 470.18,
  "end": 477.94
 },
 {
  "input": "So adding a copy of this position to the total sum has the same effect as we're moving it.",
  "translatedText": "Ainsi, ajouter une copie de cette position à la somme totale a le même effet que de la déplacer.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 478.92,
  "end": 484.3
 },
 {
  "input": "And that effect, again, is that the total result at the bottom here spells out the position of the error.",
  "translatedText": "Et cet effet, encore une fois, est que le résultat total en bas indique ici la position de l’erreur.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 485.16,
  "end": 490.7
 },
 {
  "input": "To illustrate how elegant this is, let me show that one line of Python code I referenced before, which will capture almost all of the logic on the receiver's end.",
  "translatedText": "Pour illustrer à quel point cela est élégant, permettez-moi de montrer cette ligne de code Python que j'ai référencée précédemment, qui capturera presque toute la logique du côté du récepteur.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 493.04,
  "end": 501.44
 },
 {
  "input": "We'll start by creating a random array of 16 1s and 0s to simulate the data block, and I'll give it the name bits, but of course in practice this would be something we're receiving from a sender, and instead of being random it would be carrying 11 data bits together with 5 parity bits.",
  "translatedText": "Nous allons commencer par créer un tableau aléatoire de 16 1 et 0 pour simuler le bloc de données, et je lui donnerai le nom des bits, mais bien sûr, en pratique, ce serait quelque chose que nous recevons d'un expéditeur, et au lieu de étant aléatoire, il transporterait 11 bits de données ainsi que 5 bits de parité.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 502.08,
  "end": 517.4
 },
 {
  "input": "If I call the function enumerateBits, what it does is pair together each of those bits with a corresponding index, in this case running from 0 up to 15.",
  "translatedText": "Si j'appelle la fonction enumerateBits, elle associe chacun de ces bits à un index correspondant, dans ce cas allant de 0 à 15.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 518.12,
  "end": 527.0
 },
 {
  "input": "So if we then create a list that loops over all of these pairs, pairs that look like i, and then we pull out just the i value, just the index, well it's not that exciting, we just get back those indices 0 through 15.",
  "translatedText": "Donc, si nous créons ensuite une liste qui boucle sur toutes ces paires, des paires qui ressemblent à i, et que nous extrayons ensuite uniquement la valeur i, juste l'index, eh bien, ce n'est pas si excitant, nous récupérons simplement ces indices de 0 à 15.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 528.18,
  "end": 541.34
 },
 {
  "input": "But if we add on the condition to only do this if bit, meaning if that bit is a 1 and not a 0, well then it pulls out only the positions where the corresponding bit is turned on.",
  "translatedText": "Mais si nous ajoutons la condition de ne faire cela que si bit, c'est-à-dire si ce bit est un 1 et non un 0, alors il extrait uniquement les positions où le bit correspondant est activé.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 541.68,
  "end": 552.66
 },
 {
  "input": "In this case it looks like those positions are 0, 4, 6, 9, etc.",
  "translatedText": "Dans ce cas, il semble que ces positions soient 0, 4, 6, 9, etc.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 553.38,
  "end": 557.96
 },
 {
  "input": "What we want is to collect together all of those positions, the positions of the bits that are turned on, and then XOR them together.",
  "translatedText": "Ce que nous voulons, c'est rassembler toutes ces positions, les positions des bits qui sont activés, puis les XOR ensemble.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 559.98,
  "end": 567.24
 },
 {
  "input": "To do this in Python, let me first import a couple helpful functions.",
  "translatedText": "Pour ce faire en Python, permettez-moi d'abord d'importer quelques fonctions utiles.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 569.18,
  "end": 573.22
 },
 {
  "input": "That way we can call reduce() on this list, and use the XOR function to reduce it.",
  "translatedText": "De cette façon, nous pouvons appeler réduire() sur cette liste et utiliser la fonction XOR pour la réduire.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 573.9,
  "end": 578.7
 },
 {
  "input": "This basically eats its way through the list, taking XORs along the way.",
  "translatedText": "Cela se fraye un chemin à travers la liste, prenant des XORs en cours de route.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 579.1,
  "end": 582.68
 },
 {
  "input": "If you prefer, you can explicitly write out that XOR function without having to import it from anywhere.",
  "translatedText": "Si vous préférez, vous pouvez écrire explicitement cette fonction XOR sans avoir à l'importer de n'importe où.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 584.8,
  "end": 589.44
 },
 {
  "input": "So at the moment it looks like if we do this on our random block of 16 bits, it returns 9, which has the binary representation 1001.",
  "translatedText": "Donc pour le moment, il semble que si nous faisons cela sur notre bloc aléatoire de 16 bits, cela renvoie 9, qui a la représentation binaire 1001.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 591.94,
  "end": 601.28
 },
 {
  "input": "We won't do it here, but you could write a function where the sender uses that binary representation to set the four parity bits as needed, ultimately getting this block to a state where running this line of code on the full list of bits returns a 0.",
  "translatedText": "Nous ne le ferons pas ici, mais vous pouvez écrire une fonction dans laquelle l'expéditeur utilise cette représentation binaire pour définir les quatre bits de parité selon les besoins, amenant finalement ce bloc à un état où l'exécution de cette ligne de code sur la liste complète des bits renvoie un 0.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 601.98,
  "end": 615.46
 },
 {
  "input": "This would be considered a well-prepared block.",
  "translatedText": "Cela serait considéré comme un bloc bien préparé.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 616.08,
  "end": 618.2
 },
 {
  "input": "What's cool is that if we toggle any one of the bits in this list, simulating a random error from noise, then if you run this same line of code, it prints out that error.",
  "translatedText": "Ce qui est cool, c'est que si nous basculons l'un des bits de cette liste, simulant une erreur aléatoire due au bruit, alors si vous exécutez cette même ligne de code, cette erreur est affichée.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 619.88,
  "end": 630.22
 },
 {
  "input": "Isn't that neat?",
  "translatedText": "N'est-ce pas sympa?",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 630.96,
  "end": 631.52
 },
 {
  "input": "You could get this block from out of the blue, run this single line on it, and it'll automatically spit out the position of an error, or a 0 if there wasn't any.",
  "translatedText": "Vous pouvez obtenir ce bloc à l'improviste, exécuter cette seule ligne dessus, et il crachera automatiquement la position d'une erreur, ou un 0 s'il n'y en avait pas.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 631.82,
  "end": 641.06
 },
 {
  "input": "And there's nothing special about the size 16 here.",
  "translatedText": "Et il n'y a rien de spécial concernant la taille 16 ici.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 642.5,
  "end": 645.2
 },
 {
  "input": "The same line of code would work if you had a list of, say, 256 bits.",
  "translatedText": "La même ligne de code fonctionnerait si vous aviez une liste de, disons, 256 bits.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 645.4,
  "end": 649.86
 },
 {
  "input": "Needless to say, there is more code to write here, like doing the meta parity check to detect 2-bit errors, but the idea is that almost all of the core logic from our scheme comes down to a single XOR reduction.",
  "translatedText": "Inutile de dire qu'il y a plus de code à écrire ici, comme effectuer la vérification de méta-parité pour détecter les erreurs de 2 bits, mais l'idée est que presque toute la logique de base de notre schéma se résume à une seule réduction XOR.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 651.88,
  "end": 663.76
 },
 {
  "input": "Now, depending on your comfort with binary and XORs and software in general, you may either find this perspective a little bit confusing, or so much more elegant and simple that you're wondering why we didn't just start with it from the get-go.",
  "translatedText": "Maintenant, selon votre aisance avec les binaires, les XOR et les logiciels en général, vous pouvez soit trouver cette perspective un peu déroutante, soit tellement plus élégante et simple que vous vous demandez pourquoi nous ne l'avons pas commencé dès le début. -aller.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 666.12,
  "end": 678.42
 },
 {
  "input": "Loosely speaking, the multiple parity check perspective is easier to think about when implementing Hamming codes in hardware very directly, and the XOR perspective is easiest to think about when doing it in software, from kind of a higher level.",
  "translatedText": "En gros, la perspective du contrôle de parité multiple est plus facile à penser lors de l'implémentation très directe des codes de Hamming dans le matériel, et la perspective XOR est la plus facile à penser lorsqu'on l'effectue dans le logiciel, à partir d'un niveau supérieur.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 679.14,
  "end": 690.5
 },
 {
  "input": "The first one is easiest to actually do by hand, and I think it does a better job instilling the core intuition underlying all of this, which is that the information required to locate a single error is related to the log of the size of the block, or in other words, it grows one bit at a time as the block size doubles.",
  "translatedText": "Le premier est le plus simple à réaliser à la main, et je pense qu'il fait un meilleur travail en inculquant l'intuition fondamentale qui sous-tend tout cela, à savoir que les informations requises pour localiser une seule erreur sont liées au journal de la taille du bloc. , ou en d’autres termes, il augmente petit à petit à mesure que la taille du bloc double.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 691.36,
  "end": 710.0
 },
 {
  "input": "The relevant fact here is that that information directly corresponds to how much redundancy we need.",
  "translatedText": "Le fait pertinent ici est que ces informations correspondent directement au niveau de redondance dont nous avons besoin.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 711.02,
  "end": 716.06
 },
 {
  "input": "That's really what runs against most people's knee-jerk reaction when they first think about making a message resilient to errors, where usually copying the whole message is the first instinct that comes to mind.",
  "translatedText": "C'est vraiment ce qui va à l'encontre de la réaction instinctive de la plupart des gens lorsqu'ils pensent pour la première fois à rendre un message résistant aux erreurs, alors que copier l'intégralité du message est généralement le premier instinct qui leur vient à l'esprit.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 716.66,
  "end": 726.54
 },
 {
  "input": "And then, by the way, there is this whole other way that you sometimes see Hamming codes presented, where you multiply the message by one big matrix.",
  "translatedText": "Et puis, en passant, il y a cette toute autre façon de voir parfois les codes de Hamming présentés, où vous multipliez le message par une grande matrice.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 727.5,
  "end": 734.0
 },
 {
  "input": "It's kind of nice because it relates it to the broader family of linear codes, but I think that gives almost no intuition for where it comes from or how it scales.",
  "translatedText": "C'est plutôt sympa car cela le relie à la famille plus large des codes linéaires, mais je pense que cela ne donne presque aucune intuition sur son origine ou son évolution.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 734.67,
  "end": 743.06
 },
 {
  "input": "And speaking of scaling, you might notice that the efficiency of this scheme only gets better as we increase the block size.",
  "translatedText": "Et en parlant de mise à l'échelle, vous remarquerez peut-être que l'efficacité de ce système ne fait que s'améliorer à mesure que nous augmentons la taille des blocs.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 745.2,
  "end": 751.16
 },
 {
  "input": "For example, we saw that with 256 bits, you're using only 3% of that space for redundancy, and it just keeps getting better from there.",
  "translatedText": "Par exemple, nous avons vu qu'avec 256 bits, vous n'utilisez que 3 % de cet espace pour la redondance, et la situation ne cesse de s'améliorer à partir de là.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 755.0,
  "end": 762.66
 },
 {
  "input": "As the number of parity bits grows one by one, the block size keeps doubling.",
  "translatedText": "À mesure que le nombre de bits de parité augmente un par un, la taille du bloc continue de doubler.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 763.3,
  "end": 767.34
 },
 {
  "input": "And if you take that to an extreme, you could have a block with, say, a million bits, where you would quite literally be playing 20 questions with your parity checks, and it uses only 21 parity bits.",
  "translatedText": "Et si vous poussez cela à l'extrême, vous pourriez avoir un bloc avec, disons, un million de bits, dans lequel vous joueriez littéralement 20 questions avec vos contrôles de parité, et il n'utiliserait que 21 bits de parité.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 769.0,
  "end": 780.02
 },
 {
  "input": "And if you step back to think about looking at a million bits and locating a single error, that genuinely feels crazy.",
  "translatedText": "Et si vous prenez du recul et réfléchissez à examiner un million de bits et à localiser une seule erreur, cela semble vraiment fou.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 780.74,
  "end": 787.06
 },
 {
  "input": "The problem, of course, is that with a larger block, the probability of seeing more than one or two bit errors goes up, and Hamming codes do not handle anything beyond that.",
  "translatedText": "Le problème, bien sûr, est qu’avec un bloc plus grand, la probabilité de voir plus d’un ou deux bits d’erreur augmente, et les codes de Hamming ne gèrent rien d’autre au-delà.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 788.2,
  "end": 797.66
 },
 {
  "input": "So in practice, what you'd want is to find the right size so that the probability of too many bit flips isn't too high.",
  "translatedText": "Donc, en pratique, ce que vous voudriez, c'est trouver la bonne taille pour que la probabilité d'un trop grand nombre de retournements de bits ne soit pas trop élevée.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 798.32,
  "end": 804.3
 },
 {
  "input": "Also, in practice, errors tend to come in little bursts, which would totally ruin a single block, so one common tactic to help spread out a burst of errors across many different blocks is to interlace those blocks, like this, before they're sent out or stored.",
  "translatedText": "De plus, dans la pratique, les erreurs ont tendance à se produire par petites rafales, ce qui ruinerait totalement un seul bloc. Une tactique courante pour aider à répartir une rafale d'erreurs sur de nombreux blocs différents consiste à entrelacer ces blocs, comme ceci, avant qu'ils ne soient générés. envoyés ou stockés.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 806.6,
  "end": 820.98
 },
 {
  "input": "Then again, a lot of this is rendered completely moot by more modern codes, like the much more commonly used Reed-Solomon algorithm, which handles burst errors particularly well, and it can be tuned to be resilient to a larger number of errors per block.",
  "translatedText": "Là encore, une grande partie de cela est rendue complètement sans objet par des codes plus modernes, comme l'algorithme de Reed-Solomon, beaucoup plus couramment utilisé, qui gère particulièrement bien les erreurs en rafale, et il peut être réglé pour être résilient à un plus grand nombre d'erreurs par bloc.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 825.58,
  "end": 838.82
 },
 {
  "input": "But that's a topic for another time.",
  "translatedText": "Mais c'est un sujet pour une autre fois.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 839.36,
  "end": 841.34
 },
 {
  "input": "In his book The Art of Doing Science and Engineering, Hamming is wonderfully candid about just how meandering his discovery of this code was.",
  "translatedText": "Dans son livre The Art of Doing Science and Engineering, Hamming est merveilleusement franc sur les méandres de sa découverte de ce code.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 842.5,
  "end": 849.94
 },
 {
  "input": "He first tried all sorts of different schemes involving organizing the bits into parts of a higher dimensional lattice and strange things like this.",
  "translatedText": "Il a d'abord essayé toutes sortes de schémas différents impliquant l'organisation des bits en parties d'un réseau de dimension supérieure et des choses étranges comme celle-ci.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 850.62,
  "end": 857.78
 },
 {
  "input": "The idea that it might be possible to get parity checks to conspire in a way that spells out the position of an error only came to Hamming when he stepped back after a bunch of other analysis and asked, okay, what is the most efficient I could conceivably be about this?",
  "translatedText": "L'idée qu'il pourrait être possible d'obtenir des contrôles de parité pour conspirer d'une manière qui précise la position d'une erreur n'est venue à Hamming que lorsqu'il a pris du recul après un tas d'autres analyses et a demandé, d'accord, quelle est la méthode la plus efficace possible. peut-être qu'il s'agisse de ça?",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 858.3,
  "end": 871.52
 },
 {
  "input": "He was also candid about how important it was that parity checks were already on his mind, which would have been way less common back in the 1940s than it is today.",
  "translatedText": "Il a également souligné à quel point il était important que les contrôles de parité soient déjà présents dans son esprit, ce qui aurait été beaucoup moins courant dans les années 1940 qu'aujourd'hui.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 872.62,
  "end": 881.22
 },
 {
  "input": "There are like half a dozen times throughout this book that he references the Louis Pasteur quote, luck favors a prepared mind.",
  "translatedText": "Il y a environ une demi-douzaine de fois tout au long de ce livre où il fait référence à la citation de Louis Pasteur, la chance favorise un esprit préparé.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 881.92,
  "end": 888.22
 },
 {
  "input": "Clever ideas often look deceptively simple in hindsight, which makes them easy to underappreciate.",
  "translatedText": "Avec le recul, les idées intelligentes semblent souvent d’une simplicité trompeuse, ce qui les rend faciles à sous-estimer.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 889.32,
  "end": 894.3
 },
 {
  "input": "Right now my honest hope is that Hamming codes, or at least the possibility of such codes, feels almost obvious to you.",
  "translatedText": "À l’heure actuelle, j’espère honnêtement que les codes de Hamming, ou du moins la possibilité de tels codes, vous semblent presque évidents.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 894.96,
  "end": 901.3
 },
 {
  "input": "But you shouldn't fool yourself into thinking that they actually are obvious, because they definitely aren't.",
  "translatedText": "Mais vous ne devriez pas vous tromper en pensant qu’ils sont en réalité évidents, car ils ne le sont certainement pas.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 901.66,
  "end": 906.82
 },
 {
  "input": "Part of the reason that clever ideas look deceptively easy is that we only ever see the final result, cleaning up what was messy, never mentioning all of the wrong turns, underselling just how vast the space of explorable possibilities is at the start of a problem solving process, all of that.",
  "translatedText": "Une partie de la raison pour laquelle les idées intelligentes semblent trompeusement faciles est que nous ne voyons que le résultat final, nettoyant ce qui était en désordre, sans jamais mentionner tous les mauvais virages, sous-estimant à quel point l'espace des possibilités explorables est vaste au début d'un problème. processus de résolution, tout ça.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 907.88,
  "end": 922.86
 },
 {
  "input": "But this is true in general.",
  "translatedText": "Mais cela est vrai en général.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 923.82,
  "end": 924.9
 },
 {
  "input": "I think for some special inventions, there's a second, deeper reason that we underappreciate them.",
  "translatedText": "Je pense que pour certaines inventions spéciales, il y a une deuxième raison, plus profonde, pour laquelle nous les sous-estimons.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 924.9,
  "end": 930.04
 },
 {
  "input": "Thinking of information in terms of bits had only really coalesced into a full theory by 1948, with Claude Shannon's seminal paper on information theory.",
  "translatedText": "La conception de l'information en termes de bits n'a véritablement abouti à une théorie complète qu'en 1948, avec l'article fondateur de Claude Shannon sur la théorie de l'information.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 930.84,
  "end": 938.64
 },
 {
  "input": "This was essentially concurrent with when Hamming developed his algorithm.",
  "translatedText": "Cela correspondait essentiellement au moment où Hamming développait son algorithme.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 939.28,
  "end": 942.54
 },
 {
  "input": "This was the same foundational paper that showed, in a certain sense, that efficient error correction is always possible, no matter how high the probability of bit flips, at least in theory.",
  "translatedText": "Il s’agissait du même article fondateur qui montrait, dans un certain sens, qu’une correction d’erreur efficace est toujours possible, quelle que soit la probabilité de retournements de bits, du moins en théorie.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 943.3,
  "end": 952.9
 },
 {
  "input": "Shannon and Hamming, by the way, shared an office in Bell Labs, despite working on very different things, which hardly seems coincidental here.",
  "translatedText": "Shannon et Hamming, d'ailleurs, partageaient un bureau dans les Bell Labs, bien qu'ils travaillaient sur des choses très différentes, ce qui ne semble pas ici être une coïncidence.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 953.7,
  "end": 961.16
 },
 {
  "input": "Fast forward several decades, and these days, many of us are so immersed in thinking about bits and information that it's easy to overlook just how distinct this way of thinking was.",
  "translatedText": "Avance rapide de plusieurs décennies, et de nos jours, beaucoup d’entre nous sont tellement plongés dans la réflexion sur des éléments et des informations qu’il est facile d’oublier à quel point cette façon de penser était distincte.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 962.38,
  "end": 972.34
 },
 {
  "input": "Ironically, the ideas that most profoundly shape the ways that a future generation thinks will end up looking to that future generation simpler than they really are.",
  "translatedText": "Ironiquement, les idées qui façonnent le plus profondément la façon de penser d’une génération future finiront par considérer cette génération future plus simplement qu’elles ne le sont réellement.",
  "model": "google_nmt",
  "n_reviews": 0,
  "start": 973.1,
  "end": 982.26
 }
]