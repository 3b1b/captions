1
00:00:05,800 --> 00:00:10,735
🎵Music🎵 아마도 이 말을 들을 수 있을 것입니다.

2
00:00:10,735 --> 00:00:10,900
 

3
00:00:11,760 --> 00:00:15,645
옆집에서 공사가 진행되고 있는데 지난 한 시간, 

4
00:00:15,645 --> 00:00:19,388
어쩌면 두 시간 정도는 그들이 하고 있는 모든 

5
00:00:19,388 --> 00:00:22,842
공사 중 땅이 무너지는 부분인 것 같고 집 

6
00:00:22,842 --> 00:00:27,160
전체가 흔들리고 있습니다. 계속하면들을 수 있습니다. 

7
00:00:27,380 --> 00:00:28,560
내 생각엔 지금도 계속되고 있는 것 같아. 

8
00:00:28,560 --> 00:00:30,960
그래서 궁금하다면 바로 그 소리입니다. 

9
00:00:31,600 --> 00:00:33,839
이제 여러분이 방금 대답한 소개 질문 중 

10
00:00:33,839 --> 00:00:36,078
하나를 통해 실제로 오늘 우리가 이야기할 

11
00:00:36,078 --> 00:00:39,000
내용에 대해 생각하도록 마음을 준비하게 될 것입니다. 

12
00:00:39,760 --> 00:00:41,260
이 질문은 저를 너무 웃겨서 글을 

13
00:00:41,260 --> 00:00:42,920
쓰고 곰곰이 생각해보게 만들었습니다. 

14
00:00:43,160 --> 00:00:45,757
x가 대부분의 사람들이 이 상자에 입력할 

15
00:00:45,757 --> 00:00:48,920
숫자인지 묻는 질문입니다. 2의 x는 무엇입니까? 

16
00:00:49,320 --> 00:00:51,055
그리고 그것은 너무 혼란스럽습니다. 

17
00:00:51,055 --> 00:00:53,223
왜냐하면 많은 사람들이 1을 입력한다면 나는 

18
00:00:53,223 --> 00:00:55,566
2를 입력해야 하지만 모두가 그것에 대해 생각할 

19
00:00:55,566 --> 00:00:57,648
것이기 때문에 아마도 4를 입력해야 하지만 

20
00:00:57,648 --> 00:00:59,643
모두가 그것에 대해 생각하기 때문입니다. 

21
00:00:59,643 --> 00:01:01,812
나는 4에 2개를 해야 하고, 저것에 2개, 

22
00:01:01,812 --> 00:01:03,200
저것에 2개를 해야 합니다. 

23
00:01:03,200 --> 00:01:05,729
그리고 완벽한 논리학자들이 가득한 방이었다면 

24
00:01:05,729 --> 00:01:08,258
무한대로 터지겠지만 사람은 논리학자가 아니고 

25
00:01:08,258 --> 00:01:10,585
객관적으로 정답이 있는데, 이런 맥락에서 

26
00:01:10,585 --> 00:01:13,520
객관적으로 정답이 무엇인지 살펴볼 수 있습니다. . 

27
00:01:13,980 --> 00:01:16,827
그리고 그것은 가장 많은 사람이 2를 입력한 

28
00:01:16,827 --> 00:01:19,446
것처럼 보일 것입니다. 이는 4를 입력한 

29
00:01:19,446 --> 00:01:22,180
사람이 절대적으로 옳다는 것을 의미합니다. 

30
00:01:22,960 --> 00:01:25,592
하지만 완벽한 논리학자를 통해 생각하는 것을 

31
00:01:25,592 --> 00:01:28,225
상상하는 게임에서 2 대 2 대 2 대 2를 

32
00:01:28,225 --> 00:01:30,964
하는 게임에서 오늘 영상의 주제인 연산에 대해 

33
00:01:30,964 --> 00:01:33,807
생각하기 시작합니다. 그것은 일반적으로 학교에서 

34
00:01:33,807 --> 00:01:36,440
가르치지 않습니다. 아마도 다른 특정 것들과 

35
00:01:36,440 --> 00:01:39,600
동일한 수준의 응용 프로그램이 없기 때문일 것입니다. 

36
00:01:39,760 --> 00:01:42,605
하지만 보시다시피, 용어가 실제로 의미하는 바가 

37
00:01:42,605 --> 00:01:45,134
무엇인지, 작업이 작동하는지 여부를 실제로 

38
00:01:45,134 --> 00:01:48,085
생각하는 매우 중요한 문제 해결 기술과 아이디어를 

39
00:01:48,085 --> 00:01:50,930
절대적으로 이끌어내는 몇 가지 퍼즐이 있습니다. 

40
00:01:50,930 --> 00:01:53,776
그렇게 하는 것은 상징적으로 할 때 의미가 있는 

41
00:01:53,776 --> 00:01:56,305
것처럼 보이지만 실제로 무슨 일이 일어나고 

42
00:01:56,305 --> 00:01:58,940
있는지 생각해 보면 실제로 의미가 있습니다. 

43
00:01:59,340 --> 00:02:01,304
이 연산을 테트레이션이라고 하며, 

44
00:02:01,304 --> 00:02:04,095
여러분이 생각하는 방식은 우리 모두가 가장 먼저 

45
00:02:04,095 --> 00:02:07,197
배우는 것 중 하나로 덧셈, 두 숫자를 더하는 방법, 

46
00:02:07,197 --> 00:02:10,299
그리고 처음 보는 것처럼 곱셈에 대해 배우는 것입니다.

47
00:02:10,299 --> 00:02:11,540
 추가가 반복됩니다. 

48
00:02:11,920 --> 00:02:14,487
A 곱하기 B는 A 더하기 A 더하기 A 더하기 A, 

49
00:02:14,487 --> 00:02:15,600
B는 다른 시간입니다. 

50
00:02:16,420 --> 00:02:19,505
그리고 곱셈을 반복하면 어떻게 됩니까? 

51
00:02:19,505 --> 00:02:22,451
A 곱하기 A 곱하기 A 곱하기 A, 

52
00:02:22,451 --> 00:02:25,957
B를 여러 번 취하여 A의 B 제곱으로 쓰는 

53
00:02:25,957 --> 00:02:27,360
것이 지수입니다. 

54
00:02:27,920 --> 00:02:29,927
이제 이 과정에서 한 단계 더 나아가서 

55
00:02:29,927 --> 00:02:31,570
지수 계산을 반복하면 어떤 일이 

56
00:02:31,570 --> 00:02:33,760
발생하는지 말하면 여기에 이름이 있습니다. 

57
00:02:33,820 --> 00:02:34,800
우리는 그것을 테트라레이션이라고 부릅니다. 

58
00:02:35,260 --> 00:02:37,966
테트라(Tetra)는 4를 뜻하는 그리스어에서 

59
00:02:37,966 --> 00:02:40,673
유래했습니다. 이전 연산을 반복적으로 적용하는 

60
00:02:40,673 --> 00:02:42,860
과정의 네 번째 단계이기 때문입니다. 

61
00:02:43,620 --> 00:02:46,443
물론 곱셈과 같은 맥락에서 우리는 단순히 

62
00:02:46,443 --> 00:02:49,880
숫자를 세는 것 이상으로 아이디어를 확장했습니다. 

63
00:02:50,260 --> 00:02:52,430
따라서 이것은 B가 계산 숫자인 경우에만 

64
00:02:52,430 --> 00:02:54,695
의미가 있지만 파이 곱하기 E 또는 심지어 

65
00:02:54,695 --> 00:02:57,054
2 곱하기 1 더하기 i의 제곱근을 구할 수 

66
00:02:57,054 --> 00:02:59,885
있는 복소수 값을 취하는 것과 같은 작업을 수행합니다.

67
00:02:59,885 --> 00:02:59,980
 

68
00:03:00,440 --> 00:03:02,713
그래서 우리는 그것을 반복적인 추가 이상으로 

69
00:03:02,713 --> 00:03:05,077
확장했지만 그것이 일종의 기원이고 우리가 종종 

70
00:03:05,077 --> 00:03:07,260
그것에 대해 생각하기 시작하는 방식입니다. 

71
00:03:07,560 --> 00:03:09,310
마찬가지로, 매우 유명하게도, 

72
00:03:09,310 --> 00:03:12,194
우리가 이 시리즈에서 공정하게 이야기해 온 것 중 

73
00:03:12,194 --> 00:03:14,975
하나는 고전적인 오일러 공식 예를 사용하여 지수 

74
00:03:14,975 --> 00:03:16,520
계산을 확장하는 것입니다. 

75
00:03:16,940 --> 00:03:19,715
하지만 지금 당장은 이 4회화를 정수 횟수 

76
00:03:19,715 --> 00:03:22,260
반복한다는 관점에서 생각해 보겠습니다. 

77
00:03:23,560 --> 00:03:24,260
들리나요? 

78
00:03:24,540 --> 00:03:28,110
맹세코, 우리는 개울 중 하나에서 땅이 무너지는 날이 

79
00:03:28,110 --> 00:03:31,680
올 것이라는 생각을 너무 두려워했지만 여기 있습니다. 

80
00:03:32,560 --> 00:03:35,709
이제 용어를 조금 더 명확하게 정의하지 않으면 

81
00:03:35,709 --> 00:03:39,100
실제로 모호해집니다. 왜냐하면 지수화는 연관적이지 

82
00:03:39,100 --> 00:03:42,249
않기 때문입니다. 즉, 이러한 작업을 수행하고 

83
00:03:42,249 --> 00:03:45,520
축소하기 시작하는 순서가 중요하다는 의미입니다. 

84
00:03:46,040 --> 00:03:48,575
왜냐하면 제가 왼쪽에서 오른쪽으로 간다면, 

85
00:03:48,575 --> 00:03:51,216
이것을 2의 제곱으로 쓴다고 가정해 봅시다. 

86
00:03:51,216 --> 00:03:54,280
그런 다음 그것을 제곱하고 그 결과를 제곱하면 제가 

87
00:03:54,280 --> 00:03:56,921
생각하는 것과는 다른 숫자가 나올 것입니다. 

88
00:03:56,921 --> 00:03:58,400
위에서 아래로 가는 것. 

89
00:03:58,760 --> 00:04:01,833
내가 가장 먼저 평가하는 것이 맨 위에 

90
00:04:01,833 --> 00:04:04,766
있는 2의 2승이고 다음으로 넘어가면 

91
00:04:04,766 --> 00:04:07,560
그 이유를 생각해 볼 수 있습니다. 

92
00:04:07,700 --> 00:04:10,129
여기, 밑에서부터 접으면 그 밑 부분이 

93
00:04:10,129 --> 00:04:12,780
4가 되니까 제곱을 하고, 제곱을 할게요. 

94
00:04:13,380 --> 00:04:18,000
4의 제곱은 16이므로 제곱하면 256이 됩니다. 

95
00:04:18,980 --> 00:04:21,146
하지만 맨 아래에서 상위 항을 

96
00:04:21,146 --> 00:04:23,440
축소하여 시작하면 4가 됩니다. 

97
00:04:24,820 --> 00:04:28,295
그리고 현재 상위 항을 축소한다고 생각하면 

98
00:04:28,295 --> 00:04:32,060
2의 16이 되고 훨씬 더 큰 숫자가 됩니다. 

99
00:04:32,320 --> 00:04:35,260
그것은 65,536입니다. 

100
00:04:36,540 --> 00:04:40,066
그리고 일반적으로 위에서 아래로 가면서 반복적으로 

101
00:04:40,066 --> 00:04:43,089
지수화하는 과정은 매우 빠르게 폭발하는데, 

102
00:04:43,089 --> 00:04:46,364
일반적으로 4차화는 위에서 아래로 가는 부분을 

103
00:04:46,364 --> 00:04:47,120
말합니다. 

104
00:04:47,160 --> 00:04:48,367
그래서 우리는 위에서부터 평가를 

105
00:04:48,367 --> 00:04:49,440
시작하고 아래로 작업합니다. 

106
00:04:50,000 --> 00:04:52,915
이를 명확하게 만들고 싶다면 전력 

107
00:04:52,915 --> 00:04:55,984
타워로 그리는 대신 반복 프로세스를 

108
00:04:55,984 --> 00:04:59,360
매우 정확하게 정의하는 것이 좋습니다. 

109
00:04:59,859 --> 00:05:03,247
우리는 1에서 시작할 어떤 값을 가지고 있고, 

110
00:05:03,247 --> 00:05:06,114
연속되는 각 값은 이전 값의 거듭제곱이 

111
00:05:06,114 --> 00:05:08,460
될 것이라고 말할 수 있습니다. 

112
00:05:09,280 --> 00:05:10,980
따라서 하위 1은 2가 됩니다. 

113
00:05:11,760 --> 00:05:14,606
서브 2는 서브 1이 무엇이든 간에 2의 거듭제곱이 

114
00:05:14,606 --> 00:05:17,060
될 것입니다. 이 경우에는 2의 제곱입니다. 

115
00:05:18,160 --> 00:05:22,497
서브 3은 2의 서브 2의 거듭제곱이 될 것입니다. 

116
00:05:22,497 --> 00:05:25,040
이제 2의 2의 2가 됩니다. 

117
00:05:25,380 --> 00:05:27,446
그리고 연산 순서가 무엇인지에 대해 더 이상 

118
00:05:27,446 --> 00:05:29,347
모호함이 없습니다. 왜냐하면 연산 순서가 

119
00:05:29,347 --> 00:05:31,331
2개의 항에서 나온 것이므로 먼저 맨 위에 

120
00:05:31,331 --> 00:05:33,480
있는 것이 무엇인지 평가해야 하기 때문입니다. 

121
00:05:34,400 --> 00:05:38,176
그리고 마찬가지로, 이렇게 계속하면 임의의 값 

122
00:05:38,176 --> 00:05:41,952
n에 대한 하위 n이 이전 항의 2인 하위 n 

123
00:05:41,952 --> 00:05:45,873
빼기 1과 같습니다. 이 표현식을 펼치고 재귀적 

124
00:05:45,873 --> 00:05:48,923
정의로 되돌아가면 무엇을 의미할까요? 

125
00:05:48,923 --> 00:05:53,280
얻게 될 것은 2개의 n개의 다른 시간의 전력탑이다. 

126
00:05:54,960 --> 00:05:56,590
이렇게 작성하면 좋은 또 다른 점은 

127
00:05:56,590 --> 00:05:58,140
실험적이 될 수 있다는 것입니다. 

128
00:05:58,620 --> 00:06:00,642
그리고 여러분 모두 아시다시피 저는 사람들이 이와 

129
00:06:00,642 --> 00:06:02,593
같은 새로운 작업을 접할 때 매우 즐겁게 놀도록 

130
00:06:02,593 --> 00:06:04,760
격려하는 것을 좋아합니다. 이 시리즈의 많은 부분에서 

131
00:06:04,760 --> 00:06:06,927
우리는 이를 수행하기 위해 Python을 사용했습니다.

132
00:06:06,927 --> 00:06:07,000
 

133
00:06:07,260 --> 00:06:08,360
그럼 여기서 해보겠습니다. 

134
00:06:08,500 --> 00:06:10,163
이 반복적인 프로세스를 통해 실제로 

135
00:06:10,163 --> 00:06:11,660
어떻게 보이는지 살펴보겠습니다. 

136
00:06:12,220 --> 00:06:16,340
그래서 터미널로 가서 Python을 열고 a의 초기 

137
00:06:16,340 --> 00:06:20,603
값을 1로 설정한 다음 2의 거듭제곱을 살펴보겠습니다.

138
00:06:20,603 --> 00:06:24,297
 그 값을 a에 재할당할 테니 이 이중 별표는 

139
00:06:24,297 --> 00:06:28,134
우리가 Python에서 권한을 갖는 방식입니다. 

140
00:06:28,134 --> 00:06:32,255
그리고 많은 프로그래밍 언어에서 단일 등호는 질문도 

141
00:06:32,255 --> 00:06:36,517
아니고 둘이 같은지 묻지도 않습니다. 그것은 수술이다.

142
00:06:36,517 --> 00:06:36,660
 

143
00:06:36,920 --> 00:06:38,510
오른쪽에 있는 것을 가져와서 

144
00:06:38,510 --> 00:06:40,400
왼쪽 값에 밀어넣는다는 뜻입니다. 

145
00:06:41,060 --> 00:06:43,730
따라서 우리가 이 작업을 수행하면 a의 

146
00:06:43,730 --> 00:06:46,280
값을 이전의 값에 2로 재할당합니다. 

147
00:06:46,840 --> 00:06:49,027
프로그래밍을 해본 적이 없는 사람들에게는 이것이 

148
00:06:49,027 --> 00:06:51,053
이상할 수 있습니다. 왜냐하면 무언가를 풀고 

149
00:06:51,053 --> 00:06:53,160
있는 방정식이 있는 것처럼 보이기 때문입니다. 

150
00:06:53,160 --> 00:06:55,320
하지만 이 경우에는 왼쪽이 변경되고 

151
00:06:55,320 --> 00:06:57,480
있으며 이는 그에 대한 작업입니다. 

152
00:06:57,640 --> 00:07:01,104
따라서 다시 이 작업을 수행하면 a를 2로 

153
00:07:01,104 --> 00:07:05,002
거듭제곱하여 이전의 값으로 바꾸는 동일한 과정을 

154
00:07:05,002 --> 00:07:08,611
거친 다음 같은 줄에 인쇄하면 4로 변한다고 

155
00:07:08,611 --> 00:07:12,364
말할 수 있습니다. 여기서 예측을 해보면 2의 

156
00:07:12,364 --> 00:07:16,695
16이 될 것입니다. 방금 본 값은 65,536입니다.

157
00:07:16,695 --> 00:07:16,840
 

158
00:07:17,540 --> 00:07:20,830
한 걸음만 더 내디디면 높이 5의 송전탑, 

159
00:07:20,830 --> 00:07:24,942
즉 5개의 2가 겹겹이 쌓여 있으면 완전히 폭발합니다.

160
00:07:24,942 --> 00:07:25,080
 

161
00:07:25,780 --> 00:07:27,766
그것은 단지 이 괴물 같은 숫자일 뿐입니다. 

162
00:07:27,766 --> 00:07:29,674
우리를 위해 숫자를 찾는 작업조차 수행하는 

163
00:07:29,674 --> 00:07:31,820
것은 정말 끔찍한 Python이라고 생각합니다. 

164
00:07:31,820 --> 00:07:32,940
나는 그것에 깊은 인상을 받았습니다. 

165
00:07:33,240 --> 00:07:36,322
그리고 우리가 원한다면, 그 숫자를 문자열로 

166
00:07:36,322 --> 00:07:39,157
생각하고, 그 문자열의 길이는 얼마이며, 

167
00:07:39,157 --> 00:07:42,856
그 안에 있는 자릿수를 말해 준다고 말할 수 있습니다.

168
00:07:42,856 --> 00:07:42,980
 

169
00:07:42,980 --> 00:07:45,049
그래서 우리가 가지고 있는 숫자는 

170
00:07:45,049 --> 00:07:48,100
19,000자리 표현인데, 정말 엄청나게 큽니다. 

171
00:07:48,760 --> 00:07:51,996
그리고 이것을 한 번 더 반복하여 a를 

172
00:07:51,996 --> 00:07:55,379
19,000자리 괴물의 거듭제곱으로 2로 

173
00:07:55,379 --> 00:07:59,792
바꾸면 해당 숫자에 필요한 정보를 저장할 수 없습니다.

174
00:07:59,792 --> 00:07:59,940
 

175
00:08:00,140 --> 00:08:03,513
어떤 방식으로든 나오는 모든 숫자를 인코딩하기 위해 

176
00:08:03,513 --> 00:08:06,770
물질을 사용하고 있다면 그것이 지구의 반경과 같은 

177
00:08:06,770 --> 00:08:10,026
범위 내에 있다면 그러한 종류의 정보를 저장하려는 

178
00:08:10,026 --> 00:08:13,400
시도에서 절대적으로 블랙홀을 생성하게 될 것입니다. 

179
00:08:13,780 --> 00:08:16,562
따라서 높이가 6인 송전탑일 뿐이며 어떤 방식으로든 

180
00:08:16,562 --> 00:08:19,440
말 그대로 물리적으로 전달할 수 있는 것 이상입니다. 

181
00:08:21,260 --> 00:08:23,766
그래서 여러분은 이것이 2가 아닌 경우 다른 숫자에 

182
00:08:23,766 --> 00:08:26,100
대해 얼마나 빨리 폭발하는지 물을 수 있습니다. 

183
00:08:27,180 --> 00:08:29,414
그리고 제가 여러분께 묻고 싶은 한 가지 

184
00:08:29,414 --> 00:08:32,231
사실은 실시간 여론 조사를 통해 시작해 보겠습니다. 

185
00:08:32,231 --> 00:08:34,660
2개가 아닌 1을 다룬다면 여기서 무슨 일이 

186
00:08:34,660 --> 00:08:36,700
일어날지 예측해 보는 것입니다. 1. 

187
00:08:37,280 --> 00:08:40,416
따라서 설명과 화면 위에 있는 링크로 이동하여 

188
00:08:40,416 --> 00:08:43,552
실시간 질문에 답하면 B를 1로 두라는 질문을 

189
00:08:43,552 --> 00:08:46,688
받게 됩니다. 1이므로 1보다 조금 위에 B, 

190
00:08:46,688 --> 00:08:49,945
B, B, B라는 형태의 표현을 생각해 보세요. 

191
00:08:49,945 --> 00:08:52,599
이 전력 타워는 높이가 N입니다. 즉, 

192
00:08:52,599 --> 00:08:55,735
B의 N개의 서로 다른 복사본을 볼 수 있다는 

193
00:08:55,735 --> 00:08:56,580
의미입니다. 

194
00:08:57,200 --> 00:08:58,820
N은 얼마나 커야 합니까? 

195
00:08:59,060 --> 00:09:02,359
표현식의 값이 10자리를 초과할 때까지 

196
00:09:02,359 --> 00:09:05,360
이 작업을 몇 번 반복해야 합니까? 

197
00:09:06,260 --> 00:09:08,258
그래서 두 명과 함께 우리는 그 일이 일어나기 

198
00:09:08,258 --> 00:09:10,180
전에 크기가 5인 타워에 도착해야 했습니다. 

199
00:09:10,300 --> 00:09:13,745
5자리 숫자에서 19,000자리 숫자로 뛰어올랐습니다.

200
00:09:13,745 --> 00:09:13,860
 

201
00:09:13,860 --> 00:09:15,877
그러면 B의 값이 1이 되려면 몇 

202
00:09:15,877 --> 00:09:18,320
번이나 이 작업을 수행해야 합니까? 1? 

203
00:09:19,040 --> 00:09:20,622
그리고 우리가 차분한 건설 소리를 

204
00:09:20,622 --> 00:09:22,371
듣는 동안 속도가 느려질 수도 있다는 

205
00:09:22,371 --> 00:09:24,120
점에 대해 잠시 답변해 드리겠습니다. 

206
00:09:28,660 --> 00:09:33,359
여기서 이 프로세스를 설명하기 위해 Python으로 

207
00:09:33,359 --> 00:09:37,572
돌아가서 여기로 돌아가서 터미널로 돌아가서 A 

208
00:09:37,572 --> 00:09:41,300
값을 1로 시작했다고 가정해 보겠습니다. 

209
00:09:41,560 --> 00:09:43,618
for 루프에서 이 작업을 수행해 보겠습니다. 

210
00:09:43,618 --> 00:09:45,440
N의 경우 50과 같은 범위에 있습니다. 

211
00:09:46,380 --> 00:09:47,700
A를 다시 할당하겠습니다. 

212
00:09:48,420 --> 00:09:50,579
반복적인 지수 계산을 하는 대신 

213
00:09:50,579 --> 00:09:53,580
반복적으로 1을 곱하면 어떻게 될까요? 1? 

214
00:09:53,840 --> 00:09:57,110
그러니까 그냥 반복된 곱셈, 즉 지수가 되어야 합니다.

215
00:09:57,110 --> 00:09:57,220
 

216
00:09:57,680 --> 00:10:00,153
얼마나 빨리 증가하는지 알 수 있습니다. 

217
00:10:00,153 --> 00:10:03,271
여기서 처음 50개 값을 살펴보면 1부터 시작한다는 

218
00:10:03,271 --> 00:10:05,852
것을 알 수 있습니다. 1, 1로 갑니다. 

219
00:10:05,852 --> 00:10:08,326
21이며, 각 단계에서 실제로는 조금씩, 

220
00:10:08,326 --> 00:10:11,444
점프할 때마다 10%씩 증가하며 전형적인 기하급수적 

221
00:10:11,444 --> 00:10:12,520
성장을 얻습니다. 

222
00:10:12,800 --> 00:10:15,300
그래서 50걸음으로 최대 117걸음이 걸렸습니다. 

223
00:10:16,780 --> 00:10:18,300
그것은 기하급수적인 성장이다. 

224
00:10:18,560 --> 00:10:21,100
그렇다면 4차 성장이 무엇인지 궁금할 것입니다. 

225
00:10:21,220 --> 00:10:23,780
이것을 반복해서 지수화하면 어떻게 될까요? 

226
00:10:25,220 --> 00:10:26,573
그리고 제가 대답하기 전에, 당신이 

227
00:10:26,573 --> 00:10:27,860
어떻게 생각하는지 살펴보겠습니다. 

228
00:10:27,960 --> 00:10:30,341
이것을 반복적으로 지수화하면 여기서 

229
00:10:30,341 --> 00:10:33,080
무슨 일이 일어날 것이라고 생각하시나요? 

230
00:10:34,920 --> 00:10:35,400
좋아요. 

231
00:10:36,580 --> 00:10:39,171
따라서 정답은 실제로 그런 것 

232
00:10:39,171 --> 00:10:42,220
이상으로 자라지 않는다는 것입니다. 

233
00:10:42,980 --> 00:10:45,260
그리고 아, 흥미롭네요. 그게 세 번째 답변이군요. 

234
00:10:45,520 --> 00:10:48,237
그래서 여러분 대부분은 필요한 키가 10에서 

235
00:10:48,237 --> 00:10:50,520
100 사이일 것이라고 생각했습니다. 

236
00:10:50,860 --> 00:10:53,740
10~100번 하면 10자리가 넘습니다. 

237
00:10:54,340 --> 00:10:56,218
두 번째로 가장 일반적인 대답은 1과 10 

238
00:10:56,218 --> 00:10:57,626
사이라고 생각하는 것이었습니다. 

239
00:10:57,626 --> 00:10:59,740
이는 2가 어떻게 성장하는지와 매우 유사합니다. 

240
00:11:00,760 --> 00:11:02,428
세 번째로 가장 흔한 사람들이고, 

241
00:11:02,428 --> 00:11:04,622
세 번째로 가장 흔한 사람들 중 얼마나 많은 

242
00:11:04,622 --> 00:11:07,256
사람들이 이전에 이 과정을 본 적이 있는지 궁금합니다.

243
00:11:07,256 --> 00:11:09,715
 매우 이상하기 때문입니다. 반복적으로 그 자체를 

244
00:11:09,715 --> 00:11:11,997
곱하는 아이디어는 원하는 만큼 성장할 것이지만 

245
00:11:11,997 --> 00:11:14,368
어쨌든 훨씬 더 강력한 작업처럼 느껴지는 작업을 

246
00:11:14,368 --> 00:11:16,563
반복적으로 기하급수적으로 수행하지만 실제로는 

247
00:11:16,563 --> 00:11:17,880
제한된 상태를 유지합니다. 

248
00:11:19,020 --> 00:11:22,309
그리고 Python으로 다시 돌아가면 이것이 

249
00:11:22,309 --> 00:11:25,203
실제로 적용되는 것을 볼 수 있습니다. 

250
00:11:25,203 --> 00:11:28,624
이제 각 반복에서 수행 중인 작업은 a를 다시 

251
00:11:28,624 --> 00:11:32,440
1로 설정해야 할 것 같습니다. 1 그 자체의 힘. 

252
00:11:32,940 --> 00:11:35,529
그리고 우리가 얻는 것은 약간의 초기 

253
00:11:35,529 --> 00:11:38,364
성장이지만 빠르게 느려지고 20번의 반복 

254
00:11:38,364 --> 00:11:41,940
이내에 실제로 이 값으로 고정된 상태로 유지됩니다. 

255
00:11:42,120 --> 00:11:44,080
이 숫자는 변하지 않는 것을 볼 수 있습니다. 

256
00:11:44,560 --> 00:11:47,511
그리고 거기에서 무슨 일이 일어나고 있는지 

257
00:11:47,511 --> 00:11:50,832
생각해 보면 분명히 a가 그 값과 같을 때 1을 

258
00:11:50,832 --> 00:11:54,398
취합니다. 1의 해당 값의 거듭제곱이므로 1입니다. 

259
00:11:54,398 --> 00:11:57,104
1의 제곱은 1입니다. 1117, 아, 

260
00:11:57,104 --> 00:12:00,302
너무 많이 입력하지 마세요. 실제로는 고정되어 

261
00:12:00,302 --> 00:12:01,040
있습니다. 

262
00:12:01,460 --> 00:12:03,400
이전과 동일한 값을 얻습니다. 

263
00:12:04,040 --> 00:12:07,015
그래서 우리가 이것을 표현할 수 있는 또 

264
00:12:07,015 --> 00:12:10,378
다른 방법은 방정식 1이라고 말하는 것입니다. 

265
00:12:10,378 --> 00:12:12,577
1의 x제곱은 x와 같습니다. 

266
00:12:12,577 --> 00:12:16,200
이를 함수에 연결하면 그 자체로 결과가 나옵니다. 

267
00:12:17,500 --> 00:12:19,980
2로 할 때는 이런 현상이 발생하지 않았습니다. 

268
00:12:20,400 --> 00:12:22,892
2의 x가 x와 같다면 이에 대한 다른 답을 

269
00:12:22,892 --> 00:12:25,285
생각해 보면 정말 이상한 방정식이 됩니다. 

270
00:12:25,285 --> 00:12:27,978
하지만 0과 1 또는 그 사이의 값과 같은 값을 

271
00:12:27,978 --> 00:12:30,072
시도해 보면 다음을 알 수 있습니다. 

272
00:12:30,072 --> 00:12:31,866
실제로 여기에는 답이 없습니다. 

273
00:12:31,866 --> 00:12:34,260
반면에 이 경우에는 답을 본 것 같습니다. 

274
00:12:34,700 --> 00:12:37,418
그리고 이것이 반복 프로세스에서 의미하는 

275
00:12:37,418 --> 00:12:40,136
바는 기본이 2가 아닌 1인 경우입니다. 

276
00:12:40,136 --> 00:12:42,854
1을 밑으로 하면 이전 값이 1을 올리는 

277
00:12:42,854 --> 00:12:46,400
상황이 됩니다. 1. 그냥 고정된 상태로 유지됩니다. 

278
00:12:46,840 --> 00:12:48,794
이제 이것은 많은 흥미로운 질문을 제기하기 시작합니다.

279
00:12:48,794 --> 00:12:48,860
 

280
00:12:48,860 --> 00:12:51,300
우선, 스위치는 어디에 있나요? 

281
00:12:51,700 --> 00:12:54,892
1과 2 사이에서 유한한 상태에서 

282
00:12:54,892 --> 00:12:57,580
폭발하는 지점은 무엇입니까? 

283
00:12:57,760 --> 00:13:00,631
그리고 믿을 수 없을 정도로 빠르게 폭발해버렸습니다. 

284
00:13:00,631 --> 00:13:03,503
기억하세요. 2에서는 컴퓨터가 처리할 수 있는 수준을 

285
00:13:03,503 --> 00:13:06,280
넘어서는 것을 얻기까지 5번의 반복만 필요했습니다. 

286
00:13:07,100 --> 00:13:10,192
그리고 우리는 이것을 조금 가지고 놀 수 있지만 

287
00:13:10,192 --> 00:13:13,399
이것이 수렴할 수 있다는 사실의 또 다른 흥미로운 

288
00:13:13,399 --> 00:13:16,377
결과는 매우 기괴한 질문에 대답하기 시작할 수 

289
00:13:16,377 --> 00:13:19,584
있다는 것입니다. 여기서는 제가 알 수 없는 값이 

290
00:13:19,584 --> 00:13:21,760
있다고 가정할 수 있습니다. x, 

291
00:13:21,760 --> 00:13:24,738
그리고 나는 유한한 크기의 전력 타워가 아니라 

292
00:13:24,738 --> 00:13:26,800
무한한 크기의 전력 타워입니다. 

293
00:13:26,920 --> 00:13:29,444
나는 1의 밑수로 할 수 있는 것과 같은 

294
00:13:29,444 --> 00:13:31,860
방식으로 영원히 계속할 것입니다. 1. 

295
00:13:32,720 --> 00:13:35,840
예를 들어 4로 수렴되는 x 값을 찾을 수 있나요? 

296
00:13:36,320 --> 00:13:38,480
영상 썸네일에 나온 질문입니다. 

297
00:13:39,140 --> 00:13:42,024
방금 본 것은 1로 수렴하는 값을 찾을 수 

298
00:13:42,024 --> 00:13:44,789
있다는 것입니다. 111782는 계속해서 

299
00:13:44,789 --> 00:13:47,914
수렴할 수 있는 값이며 솔루션은 1이 됩니다. 

300
00:13:47,914 --> 00:13:51,280
1. 그런데 어떻게 반대 방향으로 갈 수 있나요? 

301
00:13:51,440 --> 00:13:53,897
4와 동일한 x 값을 찾을 수 있다는 

302
00:13:53,897 --> 00:13:56,940
아이디어를 실제로 어떻게 해결할 수 있습니까? 

303
00:13:57,980 --> 00:14:00,767
그리고 여기 여러분이 발견할 수 있는 영리한 트릭이 

304
00:14:00,767 --> 00:14:03,361
있는데, 이것은 특정 문제 해결 종류의 수학에서 

305
00:14:03,361 --> 00:14:05,476
나타나는데, 무한한 표현이 있고, 흠, 

306
00:14:05,476 --> 00:14:08,071
제가 활용할 수 있는 자기 유사성이 있다고 말할 

307
00:14:08,071 --> 00:14:08,840
수 있습니다. 

308
00:14:09,020 --> 00:14:11,920
내부에는 전체 전력 타워의 복사본이 있습니다. 

309
00:14:11,920 --> 00:14:14,880
무한하기 때문에 그 자체의 진짜 복사본입니다. 

310
00:14:14,880 --> 00:14:17,993
그렇지 않습니다. 높이는 1에서 이전 높이를 뺀 값이 

311
00:14:17,993 --> 00:14:20,900
아닙니다. 왜냐하면 높이는 무한대이기 때문입니다. 

312
00:14:22,120 --> 00:14:24,924
그리고 전체 전력 타워가 4와 같다는 

313
00:14:24,924 --> 00:14:27,862
가정 하에서 나는 그것을 4로 대체하고 

314
00:14:27,862 --> 00:14:30,400
x의 4제곱을 풀면 4가 됩니다. 

315
00:14:31,380 --> 00:14:32,320
어디 보자, 그게 뭘까? 

316
00:14:32,680 --> 00:14:35,600
제곱근을 취하면 x 제곱이 2라는 것과 같습니다. 

317
00:14:36,079 --> 00:14:40,460
그래서 흥미롭게도 x는 2의 제곱근과 같으며 

318
00:14:40,460 --> 00:14:44,840
4로 수렴해야 하는 전력 타워를 제공합니다. 

319
00:14:45,320 --> 00:14:45,900
좀 펑키해요. 

320
00:14:46,360 --> 00:14:49,792
어떤 것이든 수렴한다는 생각은 좀 이상하지만, 

321
00:14:49,792 --> 00:14:52,564
2의 제곱근이 정수처럼 깨끗한 값으로 

322
00:14:52,564 --> 00:14:54,940
변한다는 생각은 좀 놀랍습니다. 

323
00:14:55,420 --> 00:14:58,617
그리고 실제로 또 다른 질문을 드리겠습니다. 

324
00:14:58,617 --> 00:15:01,815
방금 했던 것과 동일한 전술을 적용하여 자기 

325
00:15:01,815 --> 00:15:04,884
유사성을 활용하여 이러한 상황 중 또 다른 

326
00:15:04,884 --> 00:15:08,594
상황을 해결하도록 하겠습니다. 알려지지 않은 염기, 

327
00:15:08,594 --> 00:15:11,280
미리 지정된 값과 같은지 확인합니다. 

328
00:15:12,280 --> 00:15:15,607
그래서 이번에는 질문이 우리에게 묻습니다. 

329
00:15:15,607 --> 00:15:19,351
여기까지 오는 데 잠시 시간을 주면 잠시 시간이 

330
00:15:19,351 --> 00:15:22,124
걸리겠지만 괜찮습니다. 아 좋아요. 

331
00:15:22,124 --> 00:15:26,283
질문은 방금 시연한 전술을 사용하여 우리에게 묻습니다.

332
00:15:26,283 --> 00:15:28,640
 방금 4에 대해 해봤습니다. 

333
00:15:28,640 --> 00:15:32,800
방정식 x를 x로 x로 풀고 무한대까지 2가 됩니다. 

334
00:15:33,959 --> 00:15:35,244
그래서 저는 여러분에게 그것에 대해 

335
00:15:35,244 --> 00:15:36,400
생각해 볼 시간을 드리겠습니다. 

336
00:15:57,500 --> 00:15:59,160
그라운드 스매셔가 돌아왔습니다. 

337
00:16:00,920 --> 00:16:04,097
야, 어제 우리가 그 일을 하고 있었을 때, 

338
00:16:04,097 --> 00:16:07,402
너한테 보여주고 싶은 영상이 있었으면 좋겠어, 

339
00:16:07,402 --> 00:16:10,961
어쩌면 내 전화기로 끌어내려고 할 수도 있겠지만, 

340
00:16:10,961 --> 00:16:14,139
상황이 너무 많이 흔들리서 회로 기판 더미만 

341
00:16:14,139 --> 00:16:16,300
적극적으로 흔들리고 있습니다. 

342
00:16:17,060 --> 00:16:18,980
이걸 찾을 수 있는지 한번 볼까요? 정말 재미있네요. 

343
00:16:20,180 --> 00:16:22,218
좋아, 그렇지 않을 수도 있습니다. 

344
00:16:22,218 --> 00:16:24,664
이것은 아마도 무언가를 스트리밍하는 최악의 

345
00:16:24,664 --> 00:16:27,416
방법일 것입니다. 휴대폰의 머리 위 카메라 샷을 

346
00:16:27,416 --> 00:16:30,066
찍는 것이지만 이것이 제대로 작동하는지 확인해 

347
00:16:30,066 --> 00:16:30,780
보겠습니다. 

348
00:16:31,240 --> 00:16:34,240
그래서 공사 현장을 보려고 하다가 옆으로 가보니 

349
00:16:34,240 --> 00:16:37,240
회로기판 더미가 그렇게 덜덜 떨리고 있었습니다. 

350
00:16:37,240 --> 00:16:38,878
이것이 바로 우리가 처리해야 할 

351
00:16:38,878 --> 00:16:40,880
문제이므로 재미있게 즐기시기 바랍니다. 

352
00:16:41,840 --> 00:16:45,209
이제 퀴즈를 보면 거의 모든 사람이 같은 답을 

353
00:16:45,209 --> 00:16:47,412
중심으로 모이는 것 같습니다. 

354
00:16:47,412 --> 00:16:51,300
그리고 저는 여러분이 정답에 도달했다고 가정하겠습니다.

355
00:16:51,300 --> 00:16:53,892
 정답은 실제로 2의 제곱근입니다. 

356
00:16:53,892 --> 00:16:57,262
왜냐하면 우리가 무한한 전력 타워가 있는 4를 

357
00:16:57,262 --> 00:17:01,020
풀기 위해 했던 것과 정확히 동일한 논리를 수행하고 

358
00:17:01,020 --> 00:17:04,389
그것이 2라고 가정하고 자기 유사성을 인식하기 

359
00:17:04,389 --> 00:17:08,277
때문입니다. 예, 송전탑 자체를 복사한 것과 같습니다.

360
00:17:08,277 --> 00:17:11,258
 즉, x의 제곱이 2와 같다는 뜻이고, 

361
00:17:11,258 --> 00:17:13,980
x가 2의 제곱근과 같다는 뜻입니다. 

362
00:17:15,079 --> 00:17:16,947
잠깐만요, 이것은 옳을 수 없습니다. 

363
00:17:16,947 --> 00:17:19,259
왜냐하면 이것은 밑이 루트 2일 때 무한 전력 

364
00:17:19,259 --> 00:17:21,660
타워가 2로 수렴하지만 다른 한편으로 밑이 루트 

365
00:17:21,660 --> 00:17:24,061
2일 때 무한 전력 타워가 4로 수렴한다는 것을 

366
00:17:24,061 --> 00:17:26,640
암시하는 것처럼 보이기 때문입니다. 루트 2입니다. 

367
00:17:26,819 --> 00:17:29,864
둘 다일 수는 없습니다. 여기에는 수렴되는 매우 

368
00:17:29,864 --> 00:17:33,247
결정론적인 프로세스가 있으므로 둘 중 하나여야 합니다.

369
00:17:33,247 --> 00:17:33,360
 

370
00:17:33,360 --> 00:17:35,580
어쩌면 상황의 전체 논리가 거짓일 수도 있습니다. 

371
00:17:36,200 --> 00:17:37,540
그럼, 경험적으로 접근해보자. 

372
00:17:37,840 --> 00:17:39,540
프로그래밍을 통해 실제로 어떤 

373
00:17:39,540 --> 00:17:41,340
결과가 나오는지 살펴보겠습니다. 

374
00:17:42,180 --> 00:17:45,495
다시 돌아가서 변수 a를 1로 재할당하고 작은 

375
00:17:45,495 --> 00:17:49,194
루프를 만들겠습니다. 실제로 수학을 가져오겠습니다. 

376
00:17:49,194 --> 00:17:52,000
여기에는 제곱근이 필요하기 때문입니다. 

377
00:17:52,400 --> 00:17:53,955
그래서 저는 잘 모르겠습니다. 

378
00:17:53,955 --> 00:17:56,700
한 번에 20개씩만 할 것이라고 말씀드리고 싶습니다. 

379
00:17:56,700 --> 00:17:58,925
나는 a를 취하고 이를 2의 제곱근, 

380
00:17:58,925 --> 00:18:00,833
2의 제곱의 a제곱으로 바꾸고, 

381
00:18:00,833 --> 00:18:02,952
어떻게 보이는지 인쇄해 보겠습니다. 

382
00:18:02,952 --> 00:18:05,602
세미콜론은 필요하지 않을 것 같지만 실제로는 

383
00:18:05,602 --> 00:18:06,980
중요하지 않습니다. . 

384
00:18:07,760 --> 00:18:11,821
처음 20번의 반복에서는 2에 가까워질수록 속도가 

385
00:18:11,821 --> 00:18:15,883
느려지는 것 같고, 또 20번의 반복을 하면 2에 

386
00:18:15,883 --> 00:18:19,800
도달하면서 속도가 확실히 느려지는 것 같습니다. 

387
00:18:20,280 --> 00:18:22,957
이제 정확히 2에 착지한 것처럼 보이다가 

388
00:18:22,957 --> 00:18:25,518
2로 점프하는 이상한 일이 발생합니다. 

389
00:18:25,518 --> 00:18:27,963
0004, 여기서 무슨 일이 일어나고 

390
00:18:27,963 --> 00:18:31,340
있는지 생각해 보면 어느 시점에서는 2와 같습니다. 

391
00:18:31,640 --> 00:18:34,531
그래서 우리는 a가 2와 같다고 말하고 2의 

392
00:18:34,531 --> 00:18:37,308
제곱근을 제곱합니다. 하지만 정의에 따르면 

393
00:18:37,308 --> 00:18:40,200
2의 제곱근의 2제곱은 2가 되어야 합니다. 

394
00:18:40,200 --> 00:18:42,920
그래서 그것은 단지 단순한 숫자 오류가 될 것입니다. 

395
00:18:43,760 --> 00:18:46,319
하지만 수학 제곱근 라이브러리는 제곱근을 

396
00:18:46,319 --> 00:18:49,101
구현하고 있는 것 같습니다. 부동 소수점에는 

397
00:18:49,101 --> 00:18:51,549
항상 약간의 수치 오류가 있을 것이므로 

398
00:18:51,549 --> 00:18:54,220
이를 제곱해도 정확히 2를 얻지 못합니다. 

399
00:18:54,420 --> 00:18:55,600
괜찮습니다. 문제 없습니다. 

400
00:18:55,940 --> 00:18:58,982
그러나 루트 2를 갖는 전력 타워가 있을 

401
00:18:58,982 --> 00:19:02,290
때 어떤 일이 발생하는지에 대한 질문에 대한 

402
00:19:02,290 --> 00:19:05,597
정답은 그것이 2와 같다거나 이것이 나타내는 

403
00:19:05,597 --> 00:19:08,640
일련의 숫자가 2에 접근한다는 것입니다. 

404
00:19:10,060 --> 00:19:11,560
그런데 다른 논리에는 어떤 문제가 있습니까? 

405
00:19:12,140 --> 00:19:13,655
4와 같아야 한다는 것을 암시하는 것처럼 

406
00:19:13,655 --> 00:19:15,040
보이는 논리에 어떤 문제가 있습니까? 

407
00:19:16,080 --> 00:19:16,996
그렇다면 우리는 두 가지 일을 

408
00:19:16,996 --> 00:19:17,860
해야 한다고 대답하겠습니다. 

409
00:19:18,960 --> 00:19:20,978
첫 번째는 이 일을 좀 더 시각적으로, 

410
00:19:20,978 --> 00:19:22,630
그래픽적으로 표현하는 것입니다. 

411
00:19:22,630 --> 00:19:24,832
이를 통해 우리는 이 반복적인 프로세스에서 

412
00:19:24,832 --> 00:19:27,125
무슨 일이 일어나고 있는지 이해하려고 노력할 

413
00:19:27,125 --> 00:19:27,860
수 있습니다. 

414
00:19:27,860 --> 00:19:31,204
그런 다음 거기에서 어떤 값이 수렴되고 

415
00:19:31,204 --> 00:19:33,940
어떤 값이 폭발할지 이해합니다. 

416
00:19:33,940 --> 00:19:37,322
그리고 대답함으로써 우리는 이 접근 방식 4와 관련된 

417
00:19:37,322 --> 00:19:40,480
논리에 문제가 있는 방향으로 돌아갈 수 있습니다. 

418
00:19:41,340 --> 00:19:45,720
그럼 우리의 좋은 친구 Desmos를 살펴보겠습니다. 

419
00:19:45,720 --> 00:19:49,576
여기로 가서 Chrome을 열고 아직 보지 마세요. 

420
00:19:49,576 --> 00:19:50,640
4나중입니다. 

421
00:19:51,860 --> 00:19:54,640
그리고 우리는 여기서 그래프를 살펴보겠습니다. 

422
00:19:54,640 --> 00:19:57,494
좋아, 내가 가진 것은 y = x라는 선이고, 

423
00:19:57,494 --> 00:20:00,348
x 거듭제곱에 대한 함수 b가 있고 b를 2로 

424
00:20:00,348 --> 00:20:03,641
설정했기 때문에 우리는 x에 대한 2의 그래프를 보고 

425
00:20:03,641 --> 00:20:04,300
있습니다. 

426
00:20:04,880 --> 00:20:07,326
그리고 함수를 반복적으로 적용하고 출력을 

427
00:20:07,326 --> 00:20:09,880
취한 다음 다시 입력에 연결하는 아이디어에 

428
00:20:09,880 --> 00:20:12,114
대해 생각하기 위해 일반적으로 거미줄 

429
00:20:12,114 --> 00:20:14,880
다이어그램으로 알려진 것을 그릴 수 있습니다. 

430
00:20:15,380 --> 00:20:18,817
이것이 작동하는 방식은 초기 값 1을 

431
00:20:18,817 --> 00:20:23,400
입력으로 갖고 다음 값은 f/1이 되는 것입니다. 

432
00:20:23,400 --> 00:20:26,020
함수에 1을 연결하겠습니다. 

433
00:20:26,840 --> 00:20:29,495
이것이 의미하는 바는 그래프에 도달할 때까지 

434
00:20:29,495 --> 00:20:31,301
수직으로 움직인다는 것입니다. 

435
00:20:31,301 --> 00:20:34,063
이 경우 2의 1의 곱은 2이므로 2라는 값에 

436
00:20:34,063 --> 00:20:35,020
도달하겠습니다. 

437
00:20:35,380 --> 00:20:38,143
하지만 거기에서 내가 원하는 것은 방금 얻은 출력, 

438
00:20:38,143 --> 00:20:40,240
즉 2가 함수의 입력이 되는 것입니다. 

439
00:20:40,240 --> 00:20:43,427
그러나 출력이 y축에 표시되고 입력이 

440
00:20:43,427 --> 00:20:46,312
x축에 표시되는 경우 필요한 것은 

441
00:20:46,312 --> 00:20:49,500
y 값이 x 값과 동일한 지점입니다. 

442
00:20:50,040 --> 00:20:53,402
따라서 y 값이 x 값과 같아질 때까지 수평으로 

443
00:20:53,402 --> 00:20:56,515
걷는다면 2가 x 값인 지점에 도달하게 되며 

444
00:20:56,515 --> 00:20:59,380
이제 2를 입력으로 생각할 수 있습니다. 

445
00:21:00,260 --> 00:21:03,345
그러기 위해 저는 y가 x와 같은 선에 도달할 

446
00:21:03,345 --> 00:21:06,668
때까지 걷습니다. 왜냐하면 선에 도달하면 2,2를 

447
00:21:06,668 --> 00:21:09,635
보게 되므로 그래프에 도달할 때까지 수직으로 

448
00:21:09,635 --> 00:21:13,076
이동하여 2를 입력으로 처리할 수 있기 때문입니다. 

449
00:21:13,076 --> 00:21:16,162
이것이 어떻게 작동하는지 알아보겠습니다. 즉, 

450
00:21:16,162 --> 00:21:18,892
반복 프로세스의 다음 지점은 2의 제곱, 

451
00:21:18,892 --> 00:21:22,214
즉 2의 제곱, 즉 4가 될 것이라는 의미입니다. 

452
00:21:22,214 --> 00:21:25,537
그런 다음 오른쪽으로 이동하여 출력을 입력을 통해 

453
00:21:25,537 --> 00:21:28,623
평면에서 x 값이 4인 지점을 찾은 다음 해당 

454
00:21:28,623 --> 00:21:31,709
지점에 도달하면 이 선에서 튀어나와 y는 x와 

455
00:21:31,709 --> 00:21:34,557
같고 그래프에 다시 도달할 때까지 수직으로 

456
00:21:34,557 --> 00:21:36,100
이동한다고 생각합니다. 

457
00:21:36,540 --> 00:21:40,205
그리고 이번에는 16이 되어서야 그래프에 도달하고 

458
00:21:40,205 --> 00:21:43,609
x도 16이 될 때까지 오른쪽으로 이동합니다. 

459
00:21:43,609 --> 00:21:47,275
그런 다음 거기에서 수직으로 이동하는 데 꽤 오랜 

460
00:21:47,275 --> 00:21:50,809
시간이 걸립니다. 잠시 후 65,000 부근에서 

461
00:21:50,809 --> 00:21:54,344
그래프와 다시 교차하고 오른쪽으로 이동하여 역시 

462
00:21:54,344 --> 00:21:57,093
65,000인 x 좌표에 도달합니다. 

463
00:21:57,093 --> 00:22:00,759
거기에서 Desmos는 다음 수직선을 그리는 것을 

464
00:22:00,759 --> 00:22:03,639
완전히 포기합니다. 우리가 본 것처럼, 

465
00:22:03,639 --> 00:22:07,567
높이를 나타내는 숫자가 19,000자리 숫자인 높이에 

466
00:22:07,567 --> 00:22:10,840
도달해야 하므로 거기서는 우리를 포기합니다. 

467
00:22:11,520 --> 00:22:13,710
하지만 이러한 거미줄 다이어그램의 관점에서 

468
00:22:13,710 --> 00:22:15,992
생각해 보면 이제 그 기반이 무엇인지 가지고 

469
00:22:15,992 --> 00:22:18,640
놀기 시작하면 무슨 일이 일어날지 알 수 있습니다. 

470
00:22:20,000 --> 00:22:20,820
그 베이스는 무엇인가요? 

471
00:22:20,960 --> 00:22:22,820
베이스는 땅을 부수는 활동입니다. 

472
00:22:23,920 --> 00:22:26,720
어떤 시점에서는 그래프가 실제로 서로 교차합니다. 

473
00:22:27,280 --> 00:22:30,268
그래서 특히 우리는 1을 보고 있었습니다. 

474
00:22:30,268 --> 00:22:33,879
1 이전에는 그렇습니다. 완전히 교차하지만 최대 약 

475
00:22:33,879 --> 00:22:37,614
1까지입니다. 41, 이는 2의 제곱근에 해당합니다. 

476
00:22:37,614 --> 00:22:41,349
이 프로세스에서 어떤 일이 일어나는지 살펴보면 출력을 

477
00:22:41,349 --> 00:22:45,085
보고, 출력을 입력으로 바꾸고, 새로운 출력을 보고, 

478
00:22:45,085 --> 00:22:48,446
출력을 입력으로 바꾸고 앞뒤로 바운스합니다. , 

479
00:22:48,446 --> 00:22:51,684
우리는 이 그래프가 서로 교차하는 값을 향해, 

480
00:22:51,684 --> 00:22:55,294
b의 x, b의 x제곱이 x와 같은 값을 향해 튕겨 

481
00:22:55,294 --> 00:22:56,540
나가고 있습니다. 

482
00:22:57,520 --> 00:23:00,103
그리고 특히, 그 밑이 2의 제곱근이고, 

483
00:23:00,103 --> 00:23:03,024
x = x 거듭제곱에 대한 2의 제곱근의 해를 

484
00:23:03,024 --> 00:23:06,170
구한다면, 알다시피, 이것을 어떻게 체계적으로 풀 

485
00:23:06,170 --> 00:23:09,540
수 있을지 생각하기는 쉽지 않습니다. 특별한 경우에, 

486
00:23:09,540 --> 00:23:12,685
해가 x = 2라고 말하면 여러분은 내 말을 믿을 

487
00:23:12,685 --> 00:23:13,360
것입니다. 

488
00:23:13,660 --> 00:23:15,080
그냥 연결해서 해결하시면 됩니다. 

489
00:23:15,500 --> 00:23:17,709
따라서 그래프를 보면, 만약 b라면 

490
00:23:17,709 --> 00:23:19,808
실제로 여기에서 단지 근사치보다는 

491
00:23:19,808 --> 00:23:22,460
정확히 2의 제곱근으로 만들어 보겠습니다. 

492
00:23:22,980 --> 00:23:25,584
그래서 b는 2의 제곱근, 아니 

493
00:23:25,584 --> 00:23:27,900
2의 제곱근이 될 것입니다. 

494
00:23:28,720 --> 00:23:30,481
교차점은 정확히 2에 있으므로 반복 

495
00:23:30,481 --> 00:23:32,860
프로세스가 이에 접근하는 것을 볼 수 있습니다. 

496
00:23:33,400 --> 00:23:34,360
좋아요, 그거 좀 흥미롭네요. 

497
00:23:34,360 --> 00:23:36,385
이는 또한 우리가 원하는 경우, 

498
00:23:36,385 --> 00:23:39,087
사물이 수렴되는 시점과 수렴되지 않는 시점 

499
00:23:39,087 --> 00:23:41,675
사이에 전환이 발생하는 위치를 이해하려는 

500
00:23:41,675 --> 00:23:44,940
경우 이에 대해 어떻게 생각해야 하는지 보여줍니다. 

501
00:23:46,180 --> 00:23:50,016
우리가 원하는 것은 b의 값이 무엇인지 아는 것입니다.

502
00:23:50,016 --> 00:23:53,596
 사물이 탈출할 수 있는 곳, 교차점이 없는 곳, 

503
00:23:53,596 --> 00:23:56,665
사물이 탈출할 수 없는 곳, 교차점이 있는 

504
00:23:56,665 --> 00:23:58,200
곳으로 가야 합니다. 

505
00:23:58,780 --> 00:24:01,179
그건 그렇고, 설명에 이 특정 Desmos 

506
00:24:01,179 --> 00:24:03,179
그래프에 대한 링크를 남겨두었으니, 

507
00:24:03,179 --> 00:24:05,880
거기로 내려가서 함께 플레이하고 싶다면 언제든지 

508
00:24:05,880 --> 00:24:06,580
환영입니다. 

509
00:24:07,240 --> 00:24:09,931
제가 명시해야 할 한 가지 사실은 그들이 교차한다는 

510
00:24:09,931 --> 00:24:12,622
사실인데, 이는 실제로 이 거미줄의 반복 프로세스가 

511
00:24:12,622 --> 00:24:15,407
반드시 수렴된다는 것을 보장하는 데 충분하지 않습니다.

512
00:24:15,407 --> 00:24:15,500
 

513
00:24:15,780 --> 00:24:18,872
우리 함수의 그래프(이 경우 b 대 x)가 

514
00:24:18,872 --> 00:24:22,480
1보다 작은 기울기에서 교차하는 것이 중요합니다. 

515
00:24:22,480 --> 00:24:23,608
그리고 우리는 그것이 왜 사실인지 

516
00:24:23,608 --> 00:24:24,440
생각해 볼 수 있습니다. 

517
00:24:25,300 --> 00:24:28,089
다시 생각해 보면, 제가 지수 함수나 

518
00:24:28,089 --> 00:24:31,011
그런 곡선을 다루지 않고 그냥 일반적인 

519
00:24:31,011 --> 00:24:34,200
함수를 다루고 있었다고 가정해 보겠습니다. 

520
00:24:34,940 --> 00:24:39,720
y=x 선을 보세요. 구불구불한 선을 따라 교차하지만 

521
00:24:39,720 --> 00:24:44,500
기울기가 1보다 큰 함수가 있다고 가정해 보겠습니다. 

522
00:24:45,060 --> 00:24:47,490
그런 다음 반복 프로세스를 수행하면 일부 

523
00:24:47,490 --> 00:24:49,815
출력이 생기고 y가 x와 같아질 때까지 

524
00:24:49,815 --> 00:24:52,880
수평으로 이동하여 이를 입력으로 바꾸자고 말합니다. 

525
00:24:53,280 --> 00:24:55,620
수직으로 걸어가면서 새로운 출력을 살펴보세요. 

526
00:24:56,820 --> 00:24:57,640
부수고, 부수고, 부수세요. 

527
00:24:58,440 --> 00:25:01,812
새로운 입력을 보거나, 입력에 도달할 때까지 

528
00:25:01,812 --> 00:25:05,860
수평으로 걸어가면서 해당 출력을 입력으로 전환합니다. 

529
00:25:06,660 --> 00:25:07,660
그리고 그 과정을 반복하세요. 

530
00:25:07,980 --> 00:25:09,919
1보다 큰 경사로 교차했기 때문에 이런 

531
00:25:09,919 --> 00:25:12,035
일이 일어나고 있는 것을 볼 수 있습니다. 

532
00:25:12,035 --> 00:25:14,240
우리는 실제로 교차점에서 멀어지고 있습니다. 

533
00:25:14,240 --> 00:25:16,994
그래서 단순히 안정된 점이 아닌지 확인하기 

534
00:25:16,994 --> 00:25:19,634
위해 단순히 그래프 간의 공통점이 아닌, 

535
00:25:19,634 --> 00:25:22,160
이 과정을 반복하면 안정적이게 됩니다. 

536
00:25:22,300 --> 00:25:23,700
그 기울기는 1보다 작아야 합니다. 

537
00:25:23,700 --> 00:25:24,785
그래서 저는 이런 종류의 과정을 

538
00:25:24,785 --> 00:25:25,931
어떻게 생각해야 하는지에 대한 또 

539
00:25:25,931 --> 00:25:27,440
다른 관점에 대한 전체 영상을 제공했습니다. 

540
00:25:27,960 --> 00:25:30,718
미적분학에서 가르치지 않는 것과 같은 터무니없는 

541
00:25:30,718 --> 00:25:33,374
제목을 붙인 것 같습니다. 하지만 이것에 대한 

542
00:25:33,374 --> 00:25:36,030
더 많은 예와 재미 있고 무한 반복되는 객체를 

543
00:25:36,030 --> 00:25:38,380
보고 싶다면 그곳을 방문할 수 있습니다. 

544
00:25:39,220 --> 00:25:41,641
이제 우리의 경우 기울기가 1보다 

545
00:25:41,641 --> 00:25:43,680
작은 경우이므로 작동합니다. 

546
00:25:44,640 --> 00:25:46,089
하지만 두 번째 교차점에서는 

547
00:25:46,089 --> 00:25:47,720
실제로 기울기가 1보다 큽니다. 

548
00:25:47,880 --> 00:25:51,353
따라서 첫 번째 값이 1이 아닌 반복 

549
00:25:51,353 --> 00:25:55,489
프로세스를 변경했지만 이 경우 4로 설정하면 

550
00:25:55,489 --> 00:25:58,962
보시다시피 내 반복 프로세스가 실제로 

551
00:25:58,962 --> 00:26:03,760
교차점에서 벗어나 실제로 폭발할 것입니다. 무한대. 

552
00:26:03,760 --> 00:26:05,620
그래서 항상 재미있어요. 

553
00:26:06,100 --> 00:26:08,540
다시 1로 바꾸겠습니다. 

554
00:26:08,540 --> 00:26:11,479
Desmos 정의에서 4개의 재귀 루프를 수행할 수 

555
00:26:11,479 --> 00:26:14,520
없다는 사실에 짜증이 난 작은 메모를 살펴보겠습니다. 

556
00:26:15,200 --> 00:26:17,054
그리고 우리가 해결해야 할 것이 

557
00:26:17,054 --> 00:26:18,600
무엇인지 알 수 있습니다. 

558
00:26:18,800 --> 00:26:21,796
여기서 재미있는 점 중 하나는 1입니다. 

559
00:26:21,796 --> 00:26:25,052
45는 실제로 교차하는 지점 바로 위에 있는 

560
00:26:25,052 --> 00:26:28,570
것처럼 보이며, 결국 폭발하기 전까지 오랜 시간 

561
00:26:28,570 --> 00:26:31,957
동안 어느 정도 안정적으로 유지되는 튀고 튀는 

562
00:26:31,957 --> 00:26:33,260
현상이 있습니다. 

563
00:26:33,260 --> 00:26:36,102
그리고 이것을 그래픽적으로 생각하는 것이 아니라 

564
00:26:36,102 --> 00:26:38,840
수치적으로만 가지고 놀고 있다고 상상해보세요. 

565
00:26:39,040 --> 00:26:42,575
따라서 A가 1에서 시작하는 이전과 동일한 

566
00:26:42,575 --> 00:26:45,964
프로세스를 수행했다면 반복적으로 지수화를 

567
00:26:45,964 --> 00:26:49,500
수행하여 1로 만들 것입니다. 대신 45. 

568
00:26:50,320 --> 00:26:52,600
그리고 이것에 대해 50개의 값을 부여해 봅시다. 

569
00:26:53,580 --> 00:26:55,680
그 과정은 결국 폭발합니다. 

570
00:26:55,720 --> 00:26:56,920
이 오버플로 오류가 발생합니다. 

571
00:26:57,280 --> 00:26:59,780
그러나 무슨 일이 일어나고 있는지 시각적으로 볼 

572
00:26:59,780 --> 00:27:02,280
수 없다면 프로세스는 매우 혼란스러울 것입니다. 

573
00:27:02,280 --> 00:27:05,577
1시에 시작합니다. 45에서는 성장하고 불안정한 

574
00:27:05,577 --> 00:27:08,875
상태를 유지하지만 2에서는 그렇게 많이 움직이지 

575
00:27:08,875 --> 00:27:11,440
않는 것 같습니다. 71828 지역. 

576
00:27:11,880 --> 00:27:13,502
어떤 이유에서인지 주변의 움직임은 

577
00:27:13,502 --> 00:27:15,040
끔찍할 정도로 느리게 보입니다. 

578
00:27:15,340 --> 00:27:17,267
그러나 3영역으로 조금 더 커지기 

579
00:27:17,267 --> 00:27:19,500
시작하면 한동안 거기에 머물게 됩니다. 

580
00:27:19,840 --> 00:27:21,340
4 지역에는 두 가지 값이 있습니다. 

581
00:27:21,780 --> 00:27:23,951
그다음 6개, 9개, 39개, 

582
00:27:23,951 --> 00:27:27,400
그리고 그 이후에는 200만 개까지 불어납니다. 

583
00:27:27,500 --> 00:27:28,683
그리고 거기부터는 컴퓨터가 처리할 

584
00:27:28,683 --> 00:27:29,680
수 있는 것보다 더 큽니다. 

585
00:27:29,680 --> 00:27:31,280
그래서 우리가 무슨 일이 일어나고 

586
00:27:31,280 --> 00:27:32,797
있는지 잘 이해하고 있다는 점을 

587
00:27:32,797 --> 00:27:34,820
제외하면 그것은 매우 혼란스러울 것입니다. 

588
00:27:35,000 --> 00:27:37,420
그래프는 거의 닿지만 완전히 닿지는 않습니다. 

589
00:27:38,100 --> 00:27:40,056
따라서 1 사이 어딘가에 있습니다. 

590
00:27:40,056 --> 00:27:42,600
44와 1.45가 우리가 찾고 있는 것입니다. 

591
00:27:43,280 --> 00:27:44,399
그리고 여러분은 이것을 미적분학의 

592
00:27:44,399 --> 00:27:45,460
관점에서 생각할 수도 있습니다. 

593
00:27:45,540 --> 00:27:48,830
우리가 원하는 것은 이 그래프의 접선이 

594
00:27:48,830 --> 00:27:52,120
y=x 선과 같은 때를 아는 것입니다. 

595
00:27:52,440 --> 00:27:54,719
x에 대한 그래프 b가 y와 x가 

596
00:27:54,719 --> 00:27:57,120
같은 선에 접하는 때는 언제입니까? 

597
00:27:57,840 --> 00:27:59,992
그리고 우리가 그것을 해결하기 위해 필요한 방정식을 

598
00:27:59,992 --> 00:28:02,220
설정하는 것보다는 여러분도 똑같이 하도록 하겠습니다. 

599
00:28:02,620 --> 00:28:07,200
b의 값을 구하는 이 조건을 살펴보도록 하겠습니다. 

600
00:28:08,620 --> 00:28:10,219
그럼 질문이 우리에게 더 구체적으로 

601
00:28:10,219 --> 00:28:11,580
무엇을 묻는지 읽어보겠습니다. 

602
00:28:13,300 --> 00:28:16,987
우리는 y의 그래프가 b와 x의 그래프가 y가 x와 

603
00:28:16,987 --> 00:28:20,420
같은 그래프에 접하도록 하는 b 값을 원합니다. 

604
00:28:21,000 --> 00:28:22,982
다음 중 우리가 풀어야 할 방정식 

605
00:28:22,982 --> 00:28:24,860
쌍을 나타내는 것은 무엇입니까? 

606
00:28:25,560 --> 00:28:27,440
좋습니다. 잠시 생각해 보세요. 

607
00:28:28,080 --> 00:28:30,740
다음 중 우리가 풀어야 할 방정식 쌍은 무엇입니까? 

608
00:28:30,740 --> 00:28:41,333
음악 당신이 그것에 대해 생각하고 있는 동안 

609
00:28:41,333 --> 00:28:52,350
나는 청중으로부터 몇 가지 질문을 받겠습니다. 

610
00:28:54,149 --> 00:28:54,950
우리는 가지고 있습니다. 

611
00:28:54,950 --> 00:28:56,699
. . 그래서 즉시 나는 반복적인 

612
00:28:56,699 --> 00:28:58,910
거부감이 펜테이션이라는 생각이 들었습니다. 

613
00:28:58,970 --> 00:29:00,670
아니면 그게 유용한 아이디어인가요? 

614
00:29:01,610 --> 00:29:04,224
예, 이러한 프로세스를 반복한다는 아이디어에 

615
00:29:04,224 --> 00:29:06,630
대해 이야기하는 전체 표기법이 있습니다. 

616
00:29:07,170 --> 00:29:08,930
Knuth 화살표 표기법이라고 합니다. 

617
00:29:09,230 --> 00:29:11,030
그리고 원하는 만큼 많이 가질 수 있습니다. 

618
00:29:11,590 --> 00:29:15,978
따라서 이것이 작동하는 방식은 제가 화살표 b와 

619
00:29:15,978 --> 00:29:20,530
같은 것을 쓴다면 그것은 a의 b제곱과 같습니다. 

620
00:29:20,530 --> 00:29:23,548
그런데 두 개의 화살표가 있는 

621
00:29:23,548 --> 00:29:26,390
것은 그 과정의 반복입니다. 

622
00:29:27,510 --> 00:29:28,270
알다시피, b 번. 

623
00:29:30,790 --> 00:29:33,250
그리고 죄송합니다. 화살표 두 개와 b가 있습니다. 

624
00:29:33,670 --> 00:29:35,841
화살표 세 개, 화살표 세 개, 

625
00:29:35,841 --> 00:29:38,254
그리고 ab가 있다면 내가 반복하는 

626
00:29:38,254 --> 00:29:41,030
것은 이중 화살표를 수행하는 과정입니다. 

627
00:29:41,130 --> 00:29:45,110
숫자에 대해 생각하기 시작하면 정말 놀랍도록 큽니다. 

628
00:29:45,230 --> 00:29:46,790
2, 3과 같은 짝수입니다. 

629
00:29:46,790 --> 00:29:49,215
이 과정을 여러 번 반복한다는 

630
00:29:49,215 --> 00:29:52,070
생각은 정말 말도 안되는 일입니다. 

631
00:29:52,410 --> 00:29:53,497
그리고 당신은 점점 더 많은 화살을 

632
00:29:53,497 --> 00:29:54,530
가지고 계속 나아갈 수 있습니다. 

633
00:29:54,890 --> 00:29:57,016
그리고 여러분 중에 그램 상수에 대해 배우지 

634
00:29:57,016 --> 00:29:59,313
않은 사람이 있다면 지금 바로 해당 숫자 파일로 

635
00:29:59,313 --> 00:30:01,610
가서 그램 상수가 어떻게 정의되는지 확인하세요. 

636
00:30:01,670 --> 00:30:03,492
왜냐하면 이런 종류의 화살표 작업이 

637
00:30:03,492 --> 00:30:05,770
포함되어 있고 정말 미친 일이기 때문입니다. 

638
00:30:05,770 --> 00:30:08,189
그리고 그것은 수학 생활에서 그램 상수를 처음으로 

639
00:30:08,189 --> 00:30:10,350
보게 되는 가장 놀라운 순간 중 하나입니다. 

640
00:30:10,730 --> 00:30:11,490
그래서 추천하고 싶습니다. 

641
00:30:12,710 --> 00:30:14,681
좋습니다. 다음은 1입니다. 1의 

642
00:30:14,681 --> 00:30:16,756
x승은 x와 같으므로 Wolfram 

643
00:30:16,756 --> 00:30:19,350
Alpha는 두 가지 실제 해를 산출합니다. 

644
00:30:19,590 --> 00:30:20,470
아, 좋은 질문이네요. 

645
00:30:20,930 --> 00:30:22,550
그 중 하나는 우리가 수렴하는 것입니다. 

646
00:30:22,890 --> 00:30:25,790
다른 하나는 38 정도입니다. 29. 

647
00:30:26,130 --> 00:30:26,450
엄청난. 

648
00:30:26,590 --> 00:30:27,870
두 번째 솔루션은 어떻게 되나요? 

649
00:30:28,030 --> 00:30:29,338
우리가 가지고 있는 그래프를 통해 

650
00:30:29,338 --> 00:30:30,510
정확하게 살펴볼 수 있습니다. 

651
00:30:30,730 --> 00:30:35,354
그래서 우리가 b를 취하고 그것을 1로 만든다면. 

652
00:30:35,354 --> 00:30:35,850
1. 

653
00:30:36,429 --> 00:30:36,830
좋아요. 

654
00:30:37,590 --> 00:30:39,839
1보다 큰 경사로 교차하는 곳에서 

655
00:30:39,839 --> 00:30:41,970
어떻게 되는지 얘기한 것입니다. 

656
00:30:42,170 --> 00:30:45,270
네, 반복 프로세스의 고정 지점입니다. 

657
00:30:45,350 --> 00:30:47,050
그러나 그것은 안정된 고정점이 아니다. 

658
00:30:47,550 --> 00:30:49,930
여기 위에 방금 참조한 38개의 값이 있습니다. 

659
00:30:50,550 --> 00:30:53,148
그리고 1보다 큰 기울기에서 교차하기 

660
00:30:53,148 --> 00:30:56,240
때문에 실제로 거기에 가까운 값을 프로세스에 

661
00:30:56,240 --> 00:30:59,210
시드하더라도 해당 값에서 벗어나게 됩니다. 

662
00:30:59,210 --> 00:31:01,419
따라서 프로세스를 시드하는 경우, 

663
00:31:01,419 --> 00:31:04,907
1과 같은 값에서 시작하는 경우 이것이 결국 발견하게 

664
00:31:04,907 --> 00:31:06,070
될 교차점입니다. 

665
00:31:06,410 --> 00:31:07,450
정말 좋은 질문이네요. 

666
00:31:08,410 --> 00:31:10,468
셋째, 테트라화와 같은 작업에 

667
00:31:10,468 --> 00:31:12,770
대한 실제 사용 사례가 있습니까? 

668
00:31:13,150 --> 00:31:14,916
나는 매우 과학적인 분야를 연구했지만 

669
00:31:14,916 --> 00:31:16,430
이 연산자를 본 적이 없습니다. 

670
00:31:16,530 --> 00:31:17,190
난 정말 궁금해. 

671
00:31:17,190 --> 00:31:19,590
좋아요, 그게 문제의 지점입니다. 

672
00:31:21,210 --> 00:31:23,585
그래서 마지막에 혼돈과 프랙탈이 있는 

673
00:31:23,585 --> 00:31:25,847
역할에 대해 조금 이야기하겠습니다. 

674
00:31:25,847 --> 00:31:28,675
이는 그 자체로 유용한 다른 것들과 관련되어 

675
00:31:28,675 --> 00:31:31,730
있다고 말하기 때문에 기껏해야 미약한 것입니다. 

676
00:31:32,510 --> 00:31:35,138
저는 개인적으로 야생에서 과학을 하면서 펑펑, 

677
00:31:35,138 --> 00:31:37,970
테트라레이션이 일어나는 곳을 생각할 수 없습니다. 

678
00:31:37,970 --> 00:31:40,628
나는 이 작업이 일어날 것이라고 전혀 생각하지 

679
00:31:40,628 --> 00:31:43,184
않을 것 같은 일종의 수수께끼 유형의 퍼즐과 

680
00:31:43,184 --> 00:31:46,150
같은 퍼즐을 생각할 수 있지만 실제로는 발생합니다. 

681
00:31:46,450 --> 00:31:47,561
마지막에 시간이 된다면 여러분과 

682
00:31:47,561 --> 00:31:48,550
공유해도 좋을 것 같습니다. 

683
00:31:48,850 --> 00:31:52,216
지금 이런 것을 배우는 동기는 장면 전환이 혼란스러운 

684
00:31:52,216 --> 00:31:55,470
점을 용서해 주세요. 실제로 우리 앞에 놓인 퍼즐을 

685
00:31:55,470 --> 00:31:58,612
해결하는 과정, 즉 4와 같은 반복되는 탑에 무슨 

686
00:31:58,612 --> 00:32:00,968
일이 있었는지 이해하는 것입니다. , 

687
00:32:00,968 --> 00:32:03,437
그리고 우리가 찾으려는 것이 무엇인지, 

688
00:32:03,437 --> 00:32:06,466
수렴하는 것과 수렴하지 않는 것 사이의 전환점이 

689
00:32:06,466 --> 00:32:08,150
어디에 있는지 이해합니다. 

690
00:32:08,470 --> 00:32:11,371
이는 보다 실용적인 반복 프로세스를 포함하는 

691
00:32:11,371 --> 00:32:14,390
다른 작업에도 적용되는 문제 해결 전략입니다. 

692
00:32:14,610 --> 00:32:15,842
그리고 반복적인 과정은 과학 

693
00:32:15,842 --> 00:32:17,230
전반에 걸쳐 분명히 나타납니다. 

694
00:32:17,610 --> 00:32:18,530
제 말은, 혼돈 이론이 거기에서 

695
00:32:18,530 --> 00:32:19,450
가장 큰 이론과 같다는 겁니다. 

696
00:32:20,670 --> 00:32:22,781
그래서 그 모든 것을 사람들의 질문에 대답하는 

697
00:32:22,781 --> 00:32:24,974
측면으로 하고, 우리가 진행하면서 트위터를 통해 

698
00:32:24,974 --> 00:32:27,167
더 많이 생각하고 아마도 마지막에 더 많은 것을 

699
00:32:27,167 --> 00:32:29,279
할 것입니다. 우리 문제에 대해 당신이 어떻게 

700
00:32:29,279 --> 00:32:30,010
했는지 봅시다. 

701
00:32:30,570 --> 00:32:33,984
그래서 우리는 여기서 연립방정식을 찾고 있으며 여러분 

702
00:32:33,984 --> 00:32:36,830
중 1777명이 얻은 정답을 찾고 있습니다. 

703
00:32:36,830 --> 00:32:39,903
제 생각엔 그것은 프랑스 혁명의 영역은 아니지만 

704
00:32:39,903 --> 00:32:43,091
여러분의 미국 혁명의 영역은 b의 x = x이므로 

705
00:32:43,091 --> 00:32:45,140
우리는 그것들이 교차해야 하고, 

706
00:32:45,140 --> 00:32:48,327
더욱이 우리가 원하는 것은 그들이 교차하는 곳에서 

707
00:32:48,327 --> 00:32:50,490
기울기가 같아야 한다는 것입니다. 

708
00:32:51,090 --> 00:32:53,443
그리고 x에 대한 b의 미분은 그 자체이지만 b의 

709
00:32:53,443 --> 00:32:55,041
자연 로그에 의해 스케일링됩니다. 

710
00:32:55,041 --> 00:32:57,395
그리고 우리는 그 기울기가 1이 되기를 원합니다. 

711
00:32:57,395 --> 00:32:59,833
왜냐하면 그것이 우리가 보고 있는 그래프의 기울기와 

712
00:32:59,833 --> 00:33:01,010
같아야 하기 때문입니다. 

713
00:33:01,689 --> 00:33:04,950
그리고 지수 함수의 도함수가 무엇인지 기억하지 

714
00:33:04,950 --> 00:33:08,210
못한다면, e의 x에 대한 도함수는 그 자신의 

715
00:33:08,210 --> 00:33:10,969
도함수라는 것을 기억한다면, e에 대한 

716
00:33:10,969 --> 00:33:14,229
미적분학에서 기억나는 것이 하나 있다면 그것은 

717
00:33:14,229 --> 00:33:17,490
e의 x에 대한 자체 도함수가 되어야 합니다. 

718
00:33:18,310 --> 00:33:21,679
b를 b의 자연 로그에 e로 쓸 수 있으므로 

719
00:33:21,679 --> 00:33:24,510
그 모든 것을 x에 쓸 수 있습니다. 

720
00:33:25,210 --> 00:33:26,971
그래서 이것은 e를 b 곱하기 x의 

721
00:33:26,971 --> 00:33:28,732
자연로그로 표현하는 것과 같습니다. 

722
00:33:28,732 --> 00:33:31,110
지난 강의에서 이에 대해 이야기한 것 같습니다. 

723
00:33:31,110 --> 00:33:35,060
따라서 만약 여러분이 이것의 도함수를 취하고 싶다면, 

724
00:33:35,060 --> 00:33:38,879
그것의 도함수를 취하세요. 한편으로는 이것은 이것의 

725
00:33:38,879 --> 00:33:42,698
도함수여야 합니다. 이것은 연쇄 법칙에 의해 지수에 

726
00:33:42,698 --> 00:33:46,254
상수가 있고, b 곱하기 그 자체의 자연 로그, 

727
00:33:46,254 --> 00:33:49,810
e에 대한 것입니다. ln b 곱하기 x입니다. 

728
00:33:50,490 --> 00:33:52,369
그래서 우리가 보고 있는 것은 그 자체여야 

729
00:33:52,369 --> 00:33:54,013
하지만 어떤 것에 의해 크기가 조정된 

730
00:33:54,013 --> 00:33:56,050
것이고 그 어떤 것은 b의 자연 로그였습니다. 

731
00:33:56,910 --> 00:34:01,272
이제 우리의 그래프가 y=x에 접하게 접하는 

732
00:34:01,272 --> 00:34:05,460
시점이 언제인지 이해하기 위한 퍼즐을 위해 

733
00:34:05,460 --> 00:34:10,695
실제로 이 방정식, 즉 방정식 시스템을 풀어보겠습니다.

734
00:34:10,695 --> 00:34:10,870
 

735
00:34:10,870 --> 00:34:14,457
우리는 해당 해가 발생하는 곳에서 x 값을 찾고 

736
00:34:14,457 --> 00:34:18,044
있기 때문에 x에 대한 곡선 b가 해당 지점에서 

737
00:34:18,044 --> 00:34:21,631
x와 같다는 것을 알고 있으며 b 곱하기 자체의 

738
00:34:21,631 --> 00:34:25,617
자연 로그인 기울기가 1과 같다는 것을 알고 있습니다.

739
00:34:25,617 --> 00:34:25,750
 

740
00:34:26,850 --> 00:34:30,207
이제 이 문제를 해결하기 위해 제가 할 

741
00:34:30,207 --> 00:34:34,022
수 있는 첫 번째 일은 b를 x로 단순화하여 

742
00:34:34,022 --> 00:34:37,685
여기에 적용하고 b 곱하기 x가 1이 되는 

743
00:34:37,685 --> 00:34:40,889
자연 로그를 쓸 수 있다는 점입니다. 

744
00:34:41,989 --> 00:34:44,733
그리고 그것이 나에게 주는 것은 b가 1을 x로 

745
00:34:44,733 --> 00:34:47,680
나눈 것과 같다는 것입니다. 모두 매우 훌륭합니다. 

746
00:34:47,680 --> 00:34:50,627
아니요, 아니요, 그것은 나에게 제공하지 않습니다. 

747
00:34:50,627 --> 00:34:53,270
b의 자연 로그는 x 분의 1이라는 것입니다. 

748
00:34:54,510 --> 00:34:57,561
이는 e에 x 분의 1이 b와 

749
00:34:57,561 --> 00:35:01,330
같다고 말하는 것과 같은 진술입니다. 

750
00:35:02,790 --> 00:35:04,710
좋아요, 이제 그 편견은 무엇인가요? 

751
00:35:05,030 --> 00:35:07,435
글쎄요, 그것은 우리에게 x에 관한 b의 

752
00:35:07,435 --> 00:35:09,945
표현을 제공합니다. 그래서 이 윗 부분으로 

753
00:35:09,945 --> 00:35:12,770
가서 x만 포함하는 방정식을 얻을 수 있습니다. 

754
00:35:12,930 --> 00:35:16,307
그것은 e의 x 나누기 1의 x제곱이 될 것입니다. 

755
00:35:16,307 --> 00:35:19,800
저는 단지 b를 우리가 찾은 것으로 대체할 뿐입니다. 

756
00:35:19,800 --> 00:35:22,130
그리고 그것은 x와 같아야 합니다. 

757
00:35:22,609 --> 00:35:26,603
그러나 반면에 e의 x x 거듭제곱은 

758
00:35:26,603 --> 00:35:30,596
단순히 e로 단순화되며 우리가 발견한 

759
00:35:30,596 --> 00:35:34,210
것은 x가 e와 같다는 것입니다. 

760
00:35:35,210 --> 00:35:37,492
그건 그렇고, 저는 어젯밤에 이 수업을 일종의 

761
00:35:37,492 --> 00:35:39,861
시험삼아 하고 있었습니다. 가끔은 비공개 링크인 

762
00:35:39,861 --> 00:35:42,143
트위터 스트림에 대한 링크를 게시하고 100만 

763
00:35:42,143 --> 00:35:44,338
개가 되자마자 다음과 같이 말하곤 했습니다. 

764
00:35:44,338 --> 00:35:46,707
여기로 올라오세요. 저는 트윗을 삭제하고 연습을 

765
00:35:46,707 --> 00:35:47,410
해보겠습니다. 

766
00:35:48,189 --> 00:35:50,292
그리고 제가 이 문제를 해결하고 있을 때 어떤 

767
00:35:50,292 --> 00:35:52,556
이유에서인지 이 지점에 도달할 때까지 10분 정도 

768
00:35:52,556 --> 00:35:54,820
혼란스러워했고 그게 옳을 수 없다고 생각했습니다. 

769
00:35:54,820 --> 00:35:57,246
왜냐하면 우리는 1 사이의 값을 찾고 있기 때문입니다.

770
00:35:57,246 --> 00:35:59,591
 44와 1.45이므로 x는 e가 될 수 없습니다. 

771
00:35:59,591 --> 00:36:01,370
너무 크네요. 2와 같습니다. 718. 

772
00:36:01,890 --> 00:36:03,811
그래서 나는 돌아가서 내가 무엇을 잘못했는지, 

773
00:36:03,811 --> 00:36:05,658
도대체 여기서 무엇이 잘못되었는지 생각하려고 

774
00:36:05,658 --> 00:36:06,250
노력했습니다. 

775
00:36:06,250 --> 00:36:10,261
시간이 너무 오래 걸려서 약간 당혹스러웠지만 

776
00:36:10,261 --> 00:36:14,113
결국에는 아니란 걸 깨달았습니다. 바보야. 

777
00:36:14,113 --> 00:36:18,766
우리가 1 사이의 x 값을 찾고 있는 게 아니구나. 

778
00:36:18,766 --> 00:36:22,778
44와 1.45, 그것은 우리가 여기에서 놀 

779
00:36:22,778 --> 00:36:26,630
때 지수의 밑이 되는 b의 조건이었습니다. 

780
00:36:26,630 --> 00:36:29,853
x는 그들이 교차하는 모든 곳이므로 e 주위에 있는 

781
00:36:29,853 --> 00:36:32,965
것은 괜찮습니다. 실제로 이 접선 지점이 있는 곳 

782
00:36:32,965 --> 00:36:35,521
주위에서 e라는 것이 일관되게 보입니다. 

783
00:36:35,521 --> 00:36:38,855
우연히도 이것은 선 y가 x와 같기 때문에 출력이기도 

784
00:36:38,855 --> 00:36:42,078
합니다. , 따라서 접선 지점은 분명히 e 쉼표 e 

785
00:36:42,078 --> 00:36:43,190
좌표를 갖습니다. 

786
00:36:43,890 --> 00:36:45,557
그리고 우리가 풀면 b 자체의 

787
00:36:45,557 --> 00:36:46,930
값은 무엇을 의미합니까? 

788
00:36:47,510 --> 00:36:49,738
x에 대한 정확한 표현이 있고, 

789
00:36:49,738 --> 00:36:51,966
b에 대한 x 표현이 있습니다. 

790
00:36:51,966 --> 00:36:55,432
따라서 이는 b가 e의 1승을 e로 나눈다는 것을 

791
00:36:55,432 --> 00:36:59,146
의미하는 것처럼 보입니다. 이는 매우 기괴한 답입니다.

792
00:36:59,146 --> 00:37:01,870
 1의 거듭제곱을 e로 나눈 값입니다. 

793
00:37:01,870 --> 00:37:03,759
그리고 우리는 그것이 어느 정도 의미가 있는지 

794
00:37:03,759 --> 00:37:05,358
계산기를 사용하여 확인할 수 있습니다. 

795
00:37:05,358 --> 00:37:07,029
따라서 여기로 가서 내가 &quot;안녕 

796
00:37:07,029 --> 00:37:08,483
Desmos, e의 1 나누기 e는 

797
00:37:08,483 --> 00:37:09,936
무엇입니까?&quot;라고 말하면, 

798
00:37:09,936 --> 00:37:11,390
1/3이 아니라 1/e가 아닙니다. 

799
00:37:13,990 --> 00:37:16,567
네, 확인해보니 1시 사이네요. 

800
00:37:16,567 --> 00:37:20,003
44와 1.45는 수렴에서 폭발로 전환되는 

801
00:37:20,003 --> 00:37:23,870
지점에 대해 정확히 우리가 찾고 있던 것입니다. 

802
00:37:24,810 --> 00:37:26,890
제 생각에는 e의 1/e의 해를 

803
00:37:26,890 --> 00:37:28,970
찾는 것이 매우 만족스럽습니다. 

804
00:37:29,390 --> 00:37:31,676
여러분을 위한 도전 퍼즐로서, 

805
00:37:31,676 --> 00:37:35,710
오늘 약간의 숙제를 원한다면 이것이 수렴되는 하한선을 

806
00:37:35,710 --> 00:37:37,190
찾으시기 바랍니다. 

807
00:37:37,330 --> 00:37:40,738
그래서 우리는 이것을 수렴하게 만드는 가장 높은 

808
00:37:40,738 --> 00:37:44,273
값을 찾았지만 1보다 작은 b 값으로 시작할 수도 

809
00:37:44,273 --> 00:37:47,808
있습니다. 그렇게 하면 여기서 거미줄을 제거할 수 

810
00:37:47,808 --> 00:37:51,595
있습니다. 어떤 값이 있을 것이라고 생각하면 거미줄을 

811
00:37:51,595 --> 00:37:55,256
유지해야 할 것 같습니다. 여기서는 더 이상 정확한 

812
00:37:55,256 --> 00:37:59,043
값에 영점을 맞추지 않고 대신 불안정한 지점이 됩니다.

813
00:37:59,043 --> 00:37:59,170
 

814
00:37:59,950 --> 00:38:00,863
그리고 당신을 위한 질문은 언제 

815
00:38:00,863 --> 00:38:01,930
그런 일이 일어나는가 하는 것입니다. 

816
00:38:02,230 --> 00:38:05,884
두 그래프가 교차하는 지점에 접근하다가 불안정하기 

817
00:38:05,884 --> 00:38:09,016
때문에 더 이상 접근하지 않게 되는 시점은 

818
00:38:09,016 --> 00:38:09,930
언제입니까? 

819
00:38:10,910 --> 00:38:14,419
그리고 힌트를 원한다면 기울기가 언제 1이 되는가의 

820
00:38:14,419 --> 00:38:17,807
문제가 아니라 언제 -1보다 작은지가 문제이고 또 

821
00:38:17,807 --> 00:38:21,196
다른 힌트를 원한다면 다음과 같아야 한다는 사실을 

822
00:38:21,196 --> 00:38:24,342
생각해 보세요. 내부에 두 개의 e도 포함하는 

823
00:38:24,342 --> 00:38:25,190
표현입니다. 

824
00:38:25,710 --> 00:38:28,268
그래서, 당신이 그것에 도달하고 싶다면 매우 재미있는 

825
00:38:28,268 --> 00:38:30,827
퍼즐입니다. 그리고 그것은 우리가 적정의 기초로 가질 

826
00:38:30,827 --> 00:38:33,386
수 있는 값에 대한 일종의 수렴 범위를 제공하여 전력 

827
00:38:33,386 --> 00:38:35,690
타워가 실제로 무언가로 수렴하도록 할 것입니다. 

828
00:38:35,690 --> 00:38:39,754
여기서 주목할만한 점은 e 값으로 수렴하다가 

829
00:38:39,754 --> 00:38:43,168
무한대로 올라가지만 결코 e와 무한대 

830
00:38:43,168 --> 00:38:47,070
사이의 값으로 수렴하지 않는다는 것입니다. 

831
00:38:47,150 --> 00:38:49,230
아마도 직관에 어긋날 수도 있는데, 

832
00:38:49,230 --> 00:38:51,727
왜냐하면 여러분은 그것이 어떻게든 원활하게 

833
00:38:51,727 --> 00:38:54,536
터진다고 생각하기 때문입니다. 가는 것보다 오, 

834
00:38:54,536 --> 00:38:56,824
그것은 1로 수렴하고, 2로 수렴하고, 

835
00:38:56,824 --> 00:38:59,425
e로 수렴하고, 그리고 불연속적으로 무한대로 

836
00:38:59,425 --> 00:39:00,570
점프합니다. 행동. 

837
00:39:00,870 --> 00:39:02,737
그리고 이는 그래프가 한때 접선이었다가 

838
00:39:02,737 --> 00:39:04,350
다시 분리되기 때문에 발생합니다. 

839
00:39:04,550 --> 00:39:06,050
그들은 키스를 하고 있다가 키스를 멈춥니다. 

840
00:39:06,650 --> 00:39:08,692
그리고 이것은 4가 있는 전력 타워의 경우에 무슨 

841
00:39:08,692 --> 00:39:10,590
일이 일어나고 있는지에 대한 답을 제공합니다. 

842
00:39:12,150 --> 00:39:13,932
그렇다면 논리를 다시 생각해 보면 

843
00:39:13,932 --> 00:39:16,090
우리는 그것을 어디에 가지고 있었습니까? 

844
00:39:18,509 --> 00:39:18,950
엄청난. 

845
00:39:20,090 --> 00:39:23,672
따라서 전력 타워가 있고 이것이 4인 값을 

846
00:39:23,672 --> 00:39:26,807
구한다면 이는 그러한 값이 존재한다고 

847
00:39:26,807 --> 00:39:30,390
가정하고 이 과정은 4로 수렴할 것입니다. 

848
00:39:30,670 --> 00:39:32,160
하지만 우리는 그것이 결코 e보다 큰 어떤 

849
00:39:32,160 --> 00:39:33,650
것으로 수렴되지 않는다는 것을 보았습니다. 

850
00:39:34,270 --> 00:39:36,168
특히, 대체를 수행하는 첫 번째 

851
00:39:36,168 --> 00:39:39,333
단계는 솔루션이 존재한다는 가정을 활용하는 것입니다. 

852
00:39:39,333 --> 00:39:40,810
이는 유효하지 않습니다. 

853
00:39:41,250 --> 00:39:44,322
2에 대해 효과가 있었던 이유는 이것이 2로 

854
00:39:44,322 --> 00:39:46,780
수렴되는 값이 존재하기 때문입니다. 

855
00:39:46,780 --> 00:39:50,467
따라서 초기 대체를 수행할 때 이는 유효한 작업입니다.

856
00:39:50,467 --> 00:39:50,590
 

857
00:39:51,270 --> 00:39:53,721
그리고 풀기도 전에 그래프를 보면 2로 

858
00:39:53,721 --> 00:39:56,730
수렴하는 값이 존재한다는 것을 알 수 있습니다. 

859
00:39:57,050 --> 00:40:00,158
당신이 찾을 것은, 그것이 2의 제곱근이 될 

860
00:40:00,158 --> 00:40:03,266
것이라는 것을 몰랐더라도, 당신이 찾을 것은 

861
00:40:03,266 --> 00:40:06,126
그래프 사이의 교차점이 2의 값에서 언제 

862
00:40:06,126 --> 00:40:07,370
발생하는가입니다. 

863
00:40:07,910 --> 00:40:09,569
y와 x가 같은 선 위에 있기 때문에 x 

864
00:40:09,569 --> 00:40:11,157
값도 2라고 생각합니다. 하지만 우리가 

865
00:40:11,157 --> 00:40:13,250
관심을 갖는 것은 y 값이 2여야 한다는 것입니다. 

866
00:40:13,250 --> 00:40:16,614
그리고 여러분은 경험적으로 1 사이 어딘가에 있다는 

867
00:40:16,614 --> 00:40:19,630
것을 알 수 있을 것입니다. 41과 1.42, 

868
00:40:19,630 --> 00:40:23,110
그리고 조금 더 아래로 이진 검색을 할 수 있습니다. 

869
00:40:24,330 --> 00:40:26,538
그래서 저는 그것이 반복되는 전력 타워의 완전히 

870
00:40:26,538 --> 00:40:28,747
말도 안되는 노래 과정을 살펴볼 수 있다는 점, 

871
00:40:28,747 --> 00:40:30,546
그것이 어떤 지점에서든 수렴한다는 점, 

872
00:40:30,546 --> 00:40:32,673
이는 반직관적이라는 점, 그리고 우리가 실제로 

873
00:40:32,673 --> 00:40:34,718
그것이 언제 발생하는지에 대해 매우 실질적인 

874
00:40:34,718 --> 00:40:36,927
진술을 할 수 있다는 점은 매우 즐거운 일이라고 

875
00:40:36,927 --> 00:40:39,217
생각합니다. 이런 반복적인 과정을 통해 생각하면서 

876
00:40:39,217 --> 00:40:39,790
수렴합니다. 

877
00:40:40,270 --> 00:40:41,550
사실 오늘은 여기까지입니다. 

878
00:40:41,550 --> 00:40:42,990
이번 강의는 더 짧을 것입니다. 

879
00:40:43,170 --> 00:40:46,009
이것이 전력 타워 퍼즐에 대해 내가 말하고 싶었던 

880
00:40:46,009 --> 00:40:48,950
내용의 끝이며, 여러분에게 약간의 숙제를 남깁니다. 

881
00:40:49,950 --> 00:40:53,227
그래서 여기서 마지막으로 트위터에서 몇 가지 질문을 

882
00:40:53,227 --> 00:40:56,278
더 받고 싶습니다. 수학에 대한 해시태그를 달고 

883
00:40:56,278 --> 00:40:59,555
질문하면 제게 전달될 수 있으며 테트라레이션에 관한 

884
00:40:59,555 --> 00:41:02,832
모든 것이 바로 이 과정에 대해 이야기해야 합니다. 

885
00:41:02,832 --> 00:41:03,510
에 대한. 

886
00:41:03,510 --> 00:41:05,782
좋아요, 그럼 지수의 삼각형이 

887
00:41:05,782 --> 00:41:08,590
있으면 4차의 제곱도 있다는 건가요? 

888
00:41:09,250 --> 00:41:12,610
테트라화의 역은 어떤 용도로 사용되나요? 

889
00:41:13,510 --> 00:41:15,437
글쎄요, 두 경우 모두 우리는 세 

890
00:41:15,437 --> 00:41:17,670
가지 다른 변수를 다루게 될 것입니다. 

891
00:41:17,830 --> 00:41:19,963
베이스가 무엇인지, 높이는 무엇인지, 

892
00:41:19,963 --> 00:41:22,910
그리고 출력은 무엇인지에 대한 아이디어가 있습니다. 

893
00:41:23,390 --> 00:41:24,495
따라서 두 경우 모두 우리는 

894
00:41:24,495 --> 00:41:25,670
그 중 세 개만 갖게 됩니다. 

895
00:41:26,470 --> 00:41:30,492
4를 만드는 것과 마찬가지로 4개의 4는 관련 숫자, 

896
00:41:30,492 --> 00:41:33,307
밑수, 지수, 출력이 무엇이든 간에, 

897
00:41:33,307 --> 00:41:37,330
그리고 새로운 4번째 숫자가 있다는 사실이 아닙니다. 

898
00:41:37,530 --> 00:41:40,451
이 덧셈, 곱셈, 지수화 과정은 이전 

899
00:41:40,451 --> 00:41:43,930
과정을 반복하는 일종의 네 번째 과정입니다. 

900
00:41:45,250 --> 00:41:47,458
ML의 다음 질문입니다. 전력 타워 x에서 

901
00:41:47,458 --> 00:41:49,574
x에서 x에서 x로 수렴하는 복소수 x의 

902
00:41:49,574 --> 00:41:51,690
프랙탈 집합의 일부를 보여 주시겠습니까? 

903
00:41:51,750 --> 00:41:53,470
ML님, 물어봐주셔서 정말 기뻐요. 

904
00:41:53,470 --> 00:41:56,986
네, 밑이 2가 되는 대신에 밑이 2의 제곱근, 

905
00:41:56,986 --> 00:42:00,633
즉 1이 되는 대신에 무슨 일이 일어나는지 궁금할 

906
00:42:00,633 --> 00:42:04,541
것입니다. 4 또는 우리가 방금 보고 있던 모든 값에 

907
00:42:04,541 --> 00:42:08,318
z와 같이 반복 거듭제곱하는 복소수가 있다면 어떻게 

908
00:42:08,318 --> 00:42:08,970
될까요? 

909
00:42:09,670 --> 00:42:12,847
이제 복잡한 값을 다른 복잡한 값으로 높이는 것이 

910
00:42:12,847 --> 00:42:15,911
정확히 무엇을 의미하는지에 대해 약간의 뉘앙스가 

911
00:42:15,911 --> 00:42:18,748
있습니다. 이에 대해 이야기할 것 같습니다. 

912
00:42:18,748 --> 00:42:19,770
다음 강의에서. 

913
00:42:20,290 --> 00:42:24,415
e로 다시 표현할 수 있는 실제 값과 매우 유사합니다.

914
00:42:24,415 --> 00:42:27,715
 e를 복소수로 생각하는 방법을 알고 있기 

915
00:42:27,715 --> 00:42:30,190
때문에 그렇게 할 수 있습니다. 

916
00:42:30,390 --> 00:42:33,948
그러나 지수 계산을 복소수로 확장할 수 

917
00:42:33,948 --> 00:42:37,345
있는 방법이 존재한다는 사실을 기꺼이 

918
00:42:37,345 --> 00:42:41,390
인정한다면 확실히 이를 반복할 수 있습니다. 

919
00:42:41,450 --> 00:42:42,680
그리고 이것을 반복하면, 이것이 

920
00:42:42,680 --> 00:42:44,390
수렴되는지에 대해 묻기 시작할 수 있습니다. 

921
00:42:44,390 --> 00:42:46,976
그리고 그것이 언제 수렴되는지 물어보고 

922
00:42:46,976 --> 00:42:49,446
수렴 여부에 따라 평면의 모든 픽셀을 

923
00:42:49,446 --> 00:42:52,032
색칠하는 셰이더나 가장 좋아하는 종류의 

924
00:42:52,032 --> 00:42:55,090
프로그램을 작성하면 이것이 얻을 수 있습니다. 

925
00:42:56,090 --> 00:42:59,314
따라서 지금 보고 있는 것은 축에 라벨이 지정되어 

926
00:42:59,314 --> 00:43:02,539
있지 않지만 실제 축은 -4 부근에서 화면 중앙을 

927
00:43:02,539 --> 00:43:05,879
가로지르는 것입니다. 5에서 3까지라고 생각합니다. 

928
00:43:05,879 --> 00:43:09,334
그리고 가상의 축은 -2i에서 2i까지라고 생각합니다.

929
00:43:09,334 --> 00:43:09,450
 

930
00:43:09,450 --> 00:43:12,191
따라서 이 검은색의 수평 부분은 우리가 

931
00:43:12,191 --> 00:43:15,183
방금 찾은 수렴하는 모든 값에 해당합니다. 

932
00:43:15,183 --> 00:43:17,800
여기서 상한은 e의 1 나누기 e이고 

933
00:43:17,800 --> 00:43:21,290
하한은 원할 경우 숙제로 찾을 수 있는 것입니다. 

934
00:43:22,730 --> 00:43:25,458
그러나 그 위의 다른 값은 발산하며 색상을 통해 

935
00:43:25,458 --> 00:43:28,390
해당 값이 얼마나 빨리 발산하는지 알 수 있습니다. 

936
00:43:28,530 --> 00:43:31,674
따라서 노란색은 매우 빠르게 폭발한다는 의미이고, 

937
00:43:31,674 --> 00:43:34,370
파란색은 덜 빠르게 폭발한다는 의미입니다. 

938
00:43:34,370 --> 00:43:37,280
그리고 분명히 일어나는 일은 복소수를 허용할 

939
00:43:37,280 --> 00:43:40,074
때 실수 부분이 e보다 1의 e 나누기보다 

940
00:43:40,074 --> 00:43:43,100
크다고 하더라도 허수 부분이 수렴하는 방식으로 

941
00:43:43,100 --> 00:43:45,894
공모할 수 있다는 것입니다. 그러면 완전히 

942
00:43:45,894 --> 00:43:49,154
복잡해집니다. 특정 반복 연산의 관점에서 정의되는 

943
00:43:49,154 --> 00:43:52,530
Mandelbrot 집합과 매우 유사한 패턴입니다. 

944
00:43:53,150 --> 00:43:55,755
그리고 이것이 나타내는 것은 실제로 이러한 

945
00:43:55,755 --> 00:43:58,470
전력 타워 및 적정 작업과 관련하여 예상했던 

946
00:43:58,470 --> 00:44:00,750
것보다 훨씬 더 복잡하다는 것입니다. 

947
00:44:00,750 --> 00:44:05,307
그리고 무언가를 반복적으로 적용하면 혼돈이 생길 

948
00:44:05,307 --> 00:44:09,696
수 있고, 그 혼돈은 종종 프랙탈이 나타난다는 

949
00:44:09,696 --> 00:44:13,916
사실에 그림으로 반영되며, 이미지의 복잡성이 

950
00:44:13,916 --> 00:44:18,981
출력을 예측하기 어려운 것과 유사합니다. 될 것입니다.

951
00:44:18,981 --> 00:44:19,150
 

952
00:44:19,550 --> 00:44:22,329
그리고 출력을 예측하기 어려울 수 있다는 사실을 

953
00:44:22,329 --> 00:44:25,418
설명하기 위해 여러분은 해결되지 않은 문제가 무엇인지 

954
00:44:25,418 --> 00:44:28,506
알고 싶습니다. 세계 어느 누구도 실제로 알지 못하는 

955
00:44:28,506 --> 00:44:31,492
문제는 파이로 전력 타워를 가져갈 수 있는지입니다. 

956
00:44:31,492 --> 00:44:33,963
파워 파이에서 파워 파이로, 파워 파이로, 

957
00:44:33,963 --> 00:44:34,890
그렇게 하세요. 

958
00:44:35,390 --> 00:44:38,350
어느 시점에서든 이것이 정수와 같습니까? 

959
00:44:39,490 --> 00:44:41,021
거의 확실히 그렇지 않습니다. 

960
00:44:41,021 --> 00:44:43,094
이는 비합리적인 숫자이기 때문에 가능성이 

961
00:44:43,094 --> 00:44:44,986
거의 없어 보일 것입니다. 확률적으로 

962
00:44:44,986 --> 00:44:47,690
생각한다면 확률적이지는 않지만 결정론적인 과정입니다. 

963
00:44:47,690 --> 00:44:50,492
사실, 우리는 높이가 4인 전력 타워에 대해서도 

964
00:44:50,492 --> 00:44:53,191
모릅니다. 여기에 파이가 4개만 있으면 파이를 

965
00:44:53,191 --> 00:44:55,059
전력 파이로, 파이를 저것으로, 

966
00:44:55,059 --> 00:44:58,069
파이를 저것으로 제곱하면 결국 다음과 같이 됩니다. 

967
00:44:58,069 --> 00:45:00,768
우리가 정확하게 계산할 수 있는 것보다 더 큰 

968
00:45:00,768 --> 00:45:01,910
엄청난 숫자입니다. 

969
00:45:02,210 --> 00:45:05,230
이것이 정수인지 아닌지를 증명할 방법이 없습니다. 

970
00:45:06,690 --> 00:45:08,910
그리고 만약 당신이 그것을 증명할 수 있다면, 

971
00:45:08,910 --> 00:45:11,130
당신은 수학의 최전선에 기여하게 될 것입니다. 

972
00:45:12,070 --> 00:45:14,248
이것이 바로 우리가 전력 타워에 대해 실제로 알지 

973
00:45:14,248 --> 00:45:16,350
못하는 수준인데, 제 생각에는 꽤 흥미롭습니다. 

974
00:45:18,009 --> 00:45:19,932
화살표 연산자가 나타나는 수수께끼를 

975
00:45:19,932 --> 00:45:20,990
공유할 수 있나요? 

976
00:45:21,210 --> 00:45:21,890
응, 환상적이야. 

977
00:45:22,690 --> 00:45:24,770
내가 그려드릴 수 있어요. 

978
00:45:25,450 --> 00:45:28,507
나는 이것이 IMO에서 나온 것이라고 생각합니다. 

979
00:45:28,507 --> 00:45:31,455
이것은 Po Chen-Lo가 어느 시점에서 나와 

980
00:45:31,455 --> 00:45:34,512
공유했던 것입니다. 그리고 나는 그가 그것에 대해 

981
00:45:34,512 --> 00:45:37,569
어딘가에서 내가 즉석에서 이야기할 수 있는 것보다 

982
00:45:37,569 --> 00:45:40,190
더 설명이 될 것이라고 확신합니다. 여기. 

983
00:45:40,190 --> 00:45:44,472
하지만 이것이 작동하는 방식은 6개의 서로 다른 컵이 

984
00:45:44,472 --> 00:45:48,470
있고 각 컵은 동전 한 개로 시작된다는 것입니다. 

985
00:45:50,310 --> 00:45:53,310
그리고 두 가지 다른 작업을 사용할 수 있습니다. 

986
00:45:53,910 --> 00:45:56,508
이러한 작업 중 하나는 한 컵에서 동전을 

987
00:45:56,508 --> 00:45:58,993
제거할 수 있다는 것입니다. 따라서 한 

988
00:45:58,993 --> 00:46:00,913
컵에서 동전을 제거하겠습니다. 

989
00:46:00,913 --> 00:46:04,190
그러면 오른쪽 컵에 두 개의 동전이 더 떨어집니다. 

990
00:46:04,750 --> 00:46:07,370
그래서 이것에는 특정한 방향성이 있습니다. 

991
00:46:07,830 --> 00:46:09,070
두 개가 더 오른쪽에 있는 항목으로 떨어집니다. 

992
00:46:09,070 --> 00:46:11,369
따라서 여기에서 세 개의 동전을 모두 

993
00:46:11,369 --> 00:46:13,340
제거하면 마술처럼 6개의 동전이 

994
00:46:13,340 --> 00:46:15,750
들어갈 수 있다고 상상할 수 있습니다. 

995
00:46:16,450 --> 00:46:19,690
5, 6이 마법처럼 옆에 있는 다음 컵에 떨어집니다. 

996
00:46:20,330 --> 00:46:23,009
그리고 이것이 당신이 가진 유일한 능력이라면, 

997
00:46:23,009 --> 00:46:25,792
일종의 워밍업 티저는 당신이 가질 수 있는 최대 

998
00:46:25,792 --> 00:46:28,471
코인 수가 결국 63개가 된다는 것을 이해하는 

999
00:46:28,471 --> 00:46:29,090
것입니다. 

1000
00:46:29,090 --> 00:46:32,297
동전을 꺼내서 두 배로 늘리고 동전을 옮기는 

1001
00:46:32,297 --> 00:46:35,890
과정을 계속하면 최대 63까지 얻을 수 있습니다. 

1002
00:46:36,450 --> 00:46:39,459
이제 두 번째 마법 연산을 소개하면, 

1003
00:46:39,459 --> 00:46:42,755
컵에 있는 동전 중 하나를 제거하고 다음 

1004
00:46:42,755 --> 00:46:46,050
동전에 두 개를 마법처럼 떨어뜨리는 대신 

1005
00:46:46,050 --> 00:46:49,490
바로 뒤에 있는 두 개를 바꾸는 것입니다. 

1006
00:46:49,510 --> 00:46:50,470
나는 그들의 위치를 바꾼다. 

1007
00:46:50,830 --> 00:46:52,743
그것은 당신이 가진 두 번째 힘이며, 

1008
00:46:52,743 --> 00:46:54,656
에테르에서 동전을 가져올 필요가 없기 

1009
00:46:54,656 --> 00:46:56,570
때문에 덜 마술적인 것처럼 보입니다. 

1010
00:46:57,370 --> 00:47:01,975
이 프레임이 원래 구성되어 있는 방식은 이 과정을 

1011
00:47:01,975 --> 00:47:06,415
수행한 후 얻을 수 있는 최대 금액이 2010의 

1012
00:47:06,415 --> 00:47:11,350
2010의 제곱보다 크거나 작습니까?라고 생각합니다. 

1013
00:47:12,050 --> 00:47:13,110
그것이 질문이었습니다. 

1014
00:47:14,230 --> 00:47:16,567
당신이 이 두 가지 능력을 가지고 있고 각각 

1015
00:47:16,567 --> 00:47:19,278
하나의 동전이 들어 있는 6개의 컵으로 시작할 때, 

1016
00:47:19,278 --> 00:47:21,429
당신이 충분히 영리할 경우 얻을 수 있는 

1017
00:47:21,429 --> 00:47:23,486
최대 돈의 양은 더 클까요, 아니면 그 

1018
00:47:23,486 --> 00:47:25,730
전력탑보다 클까요, 작을까요? 키가 3개? 

1019
00:47:26,610 --> 00:47:29,743
그리고 두 번째 작업이 그 수준의 숫자에 가까운 

1020
00:47:29,743 --> 00:47:33,224
곳으로 갈 수 있다는 것은 다소 터무니없는 일입니다. 

1021
00:47:33,224 --> 00:47:36,010
왜냐하면 이것은 너무 거대하기 때문입니다. 

1022
00:47:36,130 --> 00:47:37,157
물리학에서 찾을 수 있는 그 

1023
00:47:37,157 --> 00:47:38,250
어떤 것보다 훨씬 더 큽니다. 

1024
00:47:39,410 --> 00:47:42,270
통계 역학이나 그와 유사한 작업을 수행하지 않는 한. 

1025
00:47:42,930 --> 00:47:44,530
네, 훌륭한 질문입니다. 

1026
00:47:45,509 --> 00:47:48,990
그리고 사람들이 더 묻고 싶어하고 결국 

1027
00:47:48,990 --> 00:47:51,680
나에게 전달되는 것이 없다면, 

1028
00:47:51,680 --> 00:47:56,110
나는 이것으로 하루를 마감할 것이라고 생각합니다. 

1029
00:47:57,050 --> 00:47:58,210
그리고 참여해주셔서 감사합니다. 

1030
00:47:58,670 --> 00:48:00,363
내 생각에 이 봉쇄 시리즈는 궁극적으로 

1031
00:48:00,363 --> 00:48:02,442
아마도 10개의 에피소드를 갖게 될 것 같아요. 

1032
00:48:02,442 --> 00:48:04,290
이것이 제가 현재 생각하고 있는 것입니다. 

1033
00:48:04,790 --> 00:48:06,550
따라서 다음 두 개에 참여하고 싶다면 

1034
00:48:06,550 --> 00:48:08,310
이것이 마지막 두 개가 될 것입니다. 

1035
00:48:08,310 --> 00:48:09,230
오 좋은. 

1036
00:48:09,370 --> 00:48:10,390
또 다른 질문이 있습니다. 

1037
00:48:12,310 --> 00:48:15,411
X를 X와 X가 2가 되도록 풀고 X의 제곱이 

1038
00:48:15,411 --> 00:48:18,870
2가 되었을 때, 2의 음수 제곱근을 무시했습니다. 

1039
00:48:19,190 --> 00:48:19,390
엄청난. 

1040
00:48:19,570 --> 00:48:19,390
응. 

1041
00:48:19,570 --> 00:48:20,370
응. 

1042
00:48:20,370 --> 00:48:21,370
솔루션 X의 제곱은 2와 같습니다. 

1043
00:48:23,390 --> 00:48:24,770
이유를 설명할 수 있나요? 네, 정말 훌륭해요. 

1044
00:48:25,110 --> 00:48:27,276
이것을 그래픽으로 다시 생각해 보면 

1045
00:48:27,276 --> 00:48:29,550
반복 프로세스에서 무슨 일이 일어나고 

1046
00:48:29,550 --> 00:48:32,150
있는지 좀 더 구체적으로 알 수 있습니다. 

1047
00:48:32,150 --> 00:48:36,170
내가 B가 약 1.41과 같다고 말했을 때. 

1048
00:48:38,610 --> 00:48:39,170
좋아요. 

1049
00:48:39,170 --> 00:48:41,060
2의 음의 제곱근 주변에는 실제로 

1050
00:48:41,060 --> 00:48:43,250
아무 일도 일어나지 않는 것 같습니다. 

1051
00:48:43,830 --> 00:48:46,326
좋아요, 그럼 왜 그런 일이 일어나는지 이해해 봅시다.

1052
00:48:46,326 --> 00:48:46,410
 

1053
00:48:46,490 --> 00:48:49,730
그 지점에 반드시 교차로가 있을 필요도 없습니다. 

1054
00:48:49,730 --> 00:48:52,492
그래서 우리가 전력 타워 운영을 살펴볼 

1055
00:48:52,492 --> 00:48:55,130
때 2의 제곱근을 취하는 이유입니다. 

1056
00:48:55,130 --> 00:48:57,590
우리 자신을 상기시킨다면. 

1057
00:49:01,170 --> 00:49:03,790
우리는 답이 존재한다고 가정했습니다. 

1058
00:49:04,430 --> 00:49:06,282
이 모든 것은, 아니, 맨 위에 X가 있는 

1059
00:49:06,282 --> 00:49:08,290
것이 아니라, 무한대로 올라가면 2가 됩니다. 

1060
00:49:08,910 --> 00:49:10,270
우리는 그 자체의 반성을 보았습니다. 

1061
00:49:10,810 --> 00:49:12,510
X 제곱은 2와 같습니다. 

1062
00:49:13,930 --> 00:49:15,170
이것이 무엇을 의미하는지 생각해 봅시다. 

1063
00:49:15,250 --> 00:49:17,990
여기서 음의 제곱근이 있다는 것은 무엇을 의미합니까? 

1064
00:49:17,990 --> 00:49:20,555
글쎄, 내 생각엔 당신이 부정적인 

1065
00:49:20,555 --> 00:49:23,390
힘을 갖고 있다고 가정할 것 같아요. 

1066
00:49:24,010 --> 00:49:26,368
이제 생각해보니 X가 음의 제곱근 

1067
00:49:26,368 --> 00:49:28,230
2와 같다고 하면 말이죠. 

1068
00:49:29,470 --> 00:49:32,130
그러면 다음 프로세스에서 이를 올릴 수 있습니다. 

1069
00:49:32,130 --> 00:49:34,310
2의 음의 제곱근을 취하게 됩니다. 

1070
00:49:34,450 --> 00:49:36,130
당신은 그것을 음의 거듭제곱으로 올릴 것입니다. 

1071
00:49:37,030 --> 00:49:38,530
좋아요, 그럼 마이너스 거듭제곱으로 올려보겠습니다. 

1072
00:49:39,350 --> 00:49:41,694
우리는 이미 2의 1 나누기의 음의 

1073
00:49:41,694 --> 00:49:44,390
제곱근에 대해 생각하는 영역에 있습니다. 

1074
00:49:45,030 --> 00:49:47,943
아니요, 마이너스 1 나누기 2의 

1075
00:49:47,943 --> 00:49:50,550
제곱근 대 2의 제곱근입니다. 

1076
00:49:52,390 --> 00:49:54,646
왜 교차로나 그와 유사한 곳에서는 

1077
00:49:54,646 --> 00:49:56,190
나타나지 않는 걸까요? 

1078
00:49:56,730 --> 00:49:58,636
사실, 생각하면 할수록 내가 놓치고 

1079
00:49:58,636 --> 00:50:00,733
있는 무슨 일이 일어나고 있는지에 대한 

1080
00:50:00,733 --> 00:50:02,830
매우 분명한 답이 있을 수도 있습니다. 

1081
00:50:03,930 --> 00:50:06,550
내 말은, 우리가 얘기할 수 있는 것 외에는. 

1082
00:50:08,150 --> 00:50:10,344
음수는 수렴 범위에 속하지 않는다는 

1083
00:50:10,344 --> 00:50:12,210
사실을 이야기할 수 있습니다. 

1084
00:50:12,390 --> 00:50:15,385
숙제 문제를 풀면 이렇게 수렴하는 음의 

1085
00:50:15,385 --> 00:50:18,790
X가 존재한다는 가정은 거짓이 될 것입니다. 

1086
00:50:18,790 --> 00:50:21,631
왜냐하면 당신은 경계가 끝난다는 

1087
00:50:21,631 --> 00:50:24,630
것을 알게 될 것이기 때문입니다. 

1088
00:50:25,150 --> 00:50:26,630
내 생각엔 E 대 마이너스 E로 끝나는 것 같아요. 

1089
00:50:26,850 --> 00:50:28,733
따라서 실패한 것과 마찬가지로 

1090
00:50:28,733 --> 00:50:30,950
4의 경우에도 논리가 실패했습니다. 

1091
00:50:30,950 --> 00:50:33,650
음수 2의 제곱근만 대입하면 논리가 실패합니다. 

1092
00:50:33,850 --> 00:50:36,710
수치상으로 구분이 되는지 궁금합니다. 

1093
00:50:36,810 --> 00:50:40,398
따라서 파이썬에서 이것을 다시 시도한다면 

1094
00:50:40,398 --> 00:50:43,830
다시 1과 동일하게 설정해 보겠습니다. 

1095
00:50:44,170 --> 00:50:45,790
for 루프를 찾아봅시다. 

1096
00:50:45,790 --> 00:50:47,988
이제 우리는 2의 음의 제곱근을 

1097
00:50:47,988 --> 00:50:50,310
구하고 이 과정을 반복하겠습니다. 

1098
00:50:52,190 --> 00:50:53,290
응, 우리는 무엇을 얻나요? 

1099
00:50:54,410 --> 00:50:56,150
우리는 안정적인 포인트를 얻습니다. 

1100
00:50:57,990 --> 00:50:58,430
흥미로운. 

1101
00:51:00,090 --> 00:51:00,790
2의 음수 제곱근입니다. 

1102
00:51:02,050 --> 00:51:03,610
당신은 매우 안정적인 지점인 것 같습니다. 

1103
00:51:03,930 --> 00:51:06,110
당신은 전혀 2와 같은 안정적인 지점이 아닙니다. 

1104
00:51:07,970 --> 00:51:09,110
그 숫자는 무엇입니까? 

1105
00:51:09,270 --> 00:51:10,170
거기 무슨 일 이죠? 

1106
00:51:12,509 --> 00:51:13,710
그거 알아? 

1107
00:51:15,790 --> 00:51:18,770
나는 전적으로 긍정적이지는 않습니다. 

1108
00:51:18,770 --> 00:51:20,050
이제 나는 결정을 내려야 합니다. 

1109
00:51:20,090 --> 00:51:22,639
단순히 스트림으로 호출하는 것보다 

1110
00:51:22,639 --> 00:51:25,323
화면에서 정확히 무슨 일이 일어나고 

1111
00:51:25,323 --> 00:51:28,410
있는지 실시간으로 생각하려고 노력합니까? 

1112
00:51:28,410 --> 00:51:30,972
아니면 그것에 대해 생각한 다음 

1113
00:51:30,972 --> 00:51:33,250
마지막에 댓글에 고정합니까? 

1114
00:51:36,930 --> 00:51:33,250
어디 보자. 

1115
00:51:36,930 --> 00:51:37,928
우리 논리에는 정확히 무슨 일이 

1116
00:51:37,928 --> 00:51:38,650
벌어지고 있는 걸까요? 

1117
00:51:40,670 --> 00:51:43,070
우리는 2로 수렴하는 값이 있다고 가정합니다. 

1118
00:51:43,510 --> 00:51:45,650
그렇다면 이 속성을 만족하게 될 것입니다. 

1119
00:51:46,930 --> 00:51:48,923
내 말은, 당신이 말할 수 있는 것은 x가 

1120
00:51:48,923 --> 00:51:51,250
더하기 또는 빼기 2의 제곱근과 같다는 것입니다. 

1121
00:51:52,430 --> 00:51:53,430
둘 다 시도해 보세요. 

1122
00:51:53,650 --> 00:51:55,190
그 중 하나는 같고, 하나는 같지 않습니다. 

1123
00:51:55,310 --> 00:51:55,750
이야기의 끝. 

1124
00:51:56,590 --> 00:51:57,692
내 말은, 대수학적인 일을 할 때 

1125
00:51:57,692 --> 00:51:58,910
이런 일이 많이 일어난다는 것입니다. 

1126
00:51:58,910 --> 00:52:00,210
이런 조작이 있군요. 

1127
00:52:00,530 --> 00:52:02,633
여러 가지 가능성이 있지만 체크에 

1128
00:52:02,633 --> 00:52:05,290
연결하면 그 중 하나가 작동하지 않습니다. 

1129
00:52:05,530 --> 00:52:07,000
그러나 그것은 항상 매우 불만족스럽습니다. 

1130
00:52:07,000 --> 00:52:08,715
왜냐하면 당신이 원하는 것은 그것이 작동할 것처럼 

1131
00:52:08,715 --> 00:52:10,491
보였지만 작동하지 않은 이유에 대한 일종의 대답이기 

1132
00:52:10,491 --> 00:52:10,920
때문입니다. 

1133
00:52:11,590 --> 00:52:13,423
따라서 4에 해당하는 전력 타워의 경우 왜 

1134
00:52:13,423 --> 00:52:15,410
그렇지 않은지 매우 명확하게 알 수 있습니다. 

1135
00:52:15,450 --> 00:52:18,010
심지어 수렴했다는 가정도 거짓이었습니다. 

1136
00:52:22,850 --> 00:52:25,820
그리고 이 경우 우리의 가정은 음수 루트 

1137
00:52:25,820 --> 00:52:28,790
2가 있고 음수 값이 있다면 여기에 있는 

1138
00:52:28,790 --> 00:52:31,890
것은 여전히 2와 같다고 가정할 것입니다. 

1139
00:52:33,910 --> 00:52:35,050
모르겠습니다. 

1140
00:52:35,450 --> 00:52:36,870
우리는 그렇지 않다는 것을 보았습니다. 

1141
00:52:37,450 --> 00:52:38,716
이 작업을 수행할 때 두 가지를 모두 

1142
00:52:38,716 --> 00:52:39,862
시도해 보고 둘 중 하나가 그렇지 

1143
00:52:39,862 --> 00:52:41,250
않으면 그게 전부라고 말할 수 있습니다. 

1144
00:52:41,570 --> 00:52:43,730
하지만 그것은 나에게 만족스럽지 않습니다. 

1145
00:52:43,730 --> 00:52:45,150
그래서 그것에 대해 조금 생각해 보겠습니다. 

1146
00:52:45,150 --> 00:52:46,764
누구든지 더 깊은 생각을 가지고 

1147
00:52:46,764 --> 00:52:48,290
있다면 댓글로 공유해 주세요. 

1148
00:52:48,290 --> 00:52:50,660
나는 마이너스 2의 제곱근에 대해 무슨 일이 

1149
00:52:50,660 --> 00:52:53,410
일어나고 있는지와 같은 당신의 말을 듣고 싶습니다. 

1150
00:52:53,750 --> 00:52:56,456
그것은 무엇으로 수렴되며 왜 

1151
00:52:56,456 --> 00:52:59,670
이 과정과 어떤 관련이 있습니까? 

1152
00:52:59,670 --> 00:53:02,421
우리가 이미 보았듯이 이는 잘못된 추론 방식이며 

1153
00:53:02,421 --> 00:53:05,172
무한한 전력 타워 내부에 있는 것을 이미 설정한 

1154
00:53:05,172 --> 00:53:08,230
가정으로 대체하는 것이 약간 불안정한 것과 같습니다. 

1155
00:53:10,029 --> 00:53:11,350
응, 생각해 볼게. 

1156
00:53:11,510 --> 00:53:12,675
훌륭한 질문이고 여기서 마무리하기에 

1157
00:53:12,675 --> 00:53:13,550
좋은 곳이라고 생각합니다. 

1158
00:53:13,790 --> 00:53:16,453
또한, 나는 지금까지 모든 Lockdown 

1159
00:53:16,453 --> 00:53:19,006
시리즈에 대해 매우 아름다운 노트를 만든 

1160
00:53:19,006 --> 00:53:21,891
사람이기 때문에 누가 그것을 요청하는지에 대한 

1161
00:53:21,891 --> 00:53:25,110
Twitter 핸들을 눈치채지 않을 수 없었습니다. 

1162
00:53:25,630 --> 00:53:27,915
제가 동영상 설명에 던진 것은 '그래, 

1163
00:53:27,915 --> 00:53:29,848
이거구나, 내 손글씨도 저렇게 생겼으면 

1164
00:53:29,848 --> 00:53:31,870
좋겠어'라고 생각했기 때문입니다. 

1165
00:53:31,890 --> 00:53:33,456
그러니 누구든지 확인하고 싶다면 

1166
00:53:33,456 --> 00:53:35,110
그녀는 훌륭한 일을 한 것입니다. 

1167
00:53:35,110 --> 00:53:37,850
이것으로 오늘 수업을 마치겠습니다. 

1168
00:53:38,150 --> 00:53:40,179
Lockdown Math 시리즈의 마지막 두 

1169
00:53:40,179 --> 00:53:42,290
번째 시간인 금요일 같은 시간에 뵙겠습니다.  

