1
00:00:00,000 --> 00:00:06,000
🎵Music🎵

2
00:00:09,200 --> 00:00:11,200
Presumably you can hear this.

3
00:00:11,200 --> 00:00:14,200
There's some construction happening in the house next door,

4
00:00:14,200 --> 00:00:17,200
and for the last hour or maybe two hours or so,

5
00:00:17,200 --> 00:00:21,700
it seems like this is the ground-smashing portion of whatever construction they're doing,

6
00:00:21,700 --> 00:00:24,200
and just the whole house has been shaking,

7
00:00:24,200 --> 00:00:27,200
which you will be able to hear if they continue.

8
00:00:27,200 --> 00:00:28,500
I think it's still going on now.

9
00:00:28,500 --> 00:00:31,500
So if you're curious, that's what the sound is.

10
00:00:31,500 --> 00:00:34,500
Now in one of the intro questions that you were just answering,

11
00:00:34,500 --> 00:00:39,500
you are actually going to have your mind primed to think about what we're going to talk about today.

12
00:00:39,500 --> 00:00:43,000
This question just made me laugh so much to write it and try to think it through.

13
00:00:43,000 --> 00:00:47,500
It's asking if x is the number that most people are going to enter into this box,

14
00:00:47,500 --> 00:00:49,500
what is 2 to the x going to be?

15
00:00:49,500 --> 00:00:51,500
And it's just so mind-confuddling, because you think about,

16
00:00:51,500 --> 00:00:54,500
okay, if a lot of people are entering 1, I should enter 2,

17
00:00:54,500 --> 00:00:56,500
but everyone would think about that, so maybe I should enter 4,

18
00:00:56,500 --> 00:00:59,500
but everyone thinks about that, so I should do 2 to the 4,

19
00:00:59,500 --> 00:01:02,500
or maybe 2 to the that, or maybe 2 to the that.

20
00:01:02,500 --> 00:01:06,500
And if it was a room full of perfect logicians, you'd blow up to infinity,

21
00:01:06,500 --> 00:01:10,500
but people aren't logicians, and there is some objectively correct answer,

22
00:01:10,500 --> 00:01:13,500
and we can take a look at what the objectively correct answer is in this context.

23
00:01:13,500 --> 00:01:18,500
And it would appear most, okay, the largest number of people entered 2,

24
00:01:18,500 --> 00:01:22,500
which means anyone who entered 4 is absolutely correct.

25
00:01:22,500 --> 00:01:26,500
But in the game where you imagine thinking through, you know, the perfect logicians,

26
00:01:26,500 --> 00:01:29,500
and you're taking 2 to the 2 to the 2 to the 2,

27
00:01:29,500 --> 00:01:31,500
you're starting to think about the topic for today's video,

28
00:01:31,500 --> 00:01:35,500
which is an operation that's not typically taught in school,

29
00:01:35,500 --> 00:01:39,500
probably because it doesn't have the same level of applications as certain other ones.

30
00:01:39,500 --> 00:01:42,500
But as you'll see, there's a couple puzzles that we can start to do with it

31
00:01:42,500 --> 00:01:46,500
that absolutely bring out some very important problem-solving skills

32
00:01:46,500 --> 00:01:50,500
and ideas of just really thinking through what terms actually mean

33
00:01:50,500 --> 00:01:54,500
and whether or not operations that you're doing that seem to make sense

34
00:01:54,500 --> 00:01:58,500
when you do it symbolically actually make sense when you think through what's really going on.

35
00:01:58,500 --> 00:02:03,500
So this operation is called tetration, and a way you might think about it is,

36
00:02:03,500 --> 00:02:06,500
you know, we all learn about addition as one of the first things,

37
00:02:06,500 --> 00:02:11,500
the way that we can add two numbers, and multiplication, as we first see it, is repeated addition.

38
00:02:11,500 --> 00:02:15,500
A times B is A plus A plus A plus A, B different times.

39
00:02:15,500 --> 00:02:19,500
And if you say, well, what happens if we repeat multiplication,

40
00:02:19,500 --> 00:02:23,500
you know, taking A times A times A times A, B different times,

41
00:02:23,500 --> 00:02:27,500
we write it as A to the power B, and that's exponentiation.

42
00:02:27,500 --> 00:02:30,500
Now, if you were to go one step further in this process and say,

43
00:02:30,500 --> 00:02:33,500
what happens if we repeat exponentiation, this has a name.

44
00:02:33,500 --> 00:02:36,500
We call it tetration. Tetra comes from the Greek for four,

45
00:02:36,500 --> 00:02:43,500
because it's sort of the fourth stage in this process of repeatedly applying the previous operation.

46
00:02:43,500 --> 00:02:46,500
And of course, in the context of things like multiplication,

47
00:02:46,500 --> 00:02:49,500
we've extended the idea beyond just counting numbers.

48
00:02:49,500 --> 00:02:52,500
So here this only makes sense if B was a counting number,

49
00:02:52,500 --> 00:02:56,500
but we do things like taking pi times E, or even complex values,

50
00:02:56,500 --> 00:03:00,500
where you can take the square root of two times one plus i.

51
00:03:00,500 --> 00:03:05,500
So we've extended it beyond repeated addition, but that's sort of its origin,

52
00:03:05,500 --> 00:03:07,500
that's the way that we often start thinking about it.

53
00:03:07,500 --> 00:03:11,500
Similarly, very famously, one thing we've been talking a fair about in this series

54
00:03:11,500 --> 00:03:16,500
is extending exponentiation with the classic Euler's formula example.

55
00:03:16,500 --> 00:03:22,500
But for right now, we're just going to think of this tetration in terms of repeating an integer number of times.

56
00:03:22,500 --> 00:03:30,500
Do you hear it? I swear, we were so dreading the idea that the ground-smashing day would come during one of the streams,

57
00:03:30,500 --> 00:03:31,500
but here we are.

58
00:03:31,500 --> 00:03:36,500
Now, this is actually ambiguous if we don't define our terms a little bit more clearly,

59
00:03:36,500 --> 00:03:40,500
because exponentiation is not associative,

60
00:03:40,500 --> 00:03:45,500
meaning the order that we do these operations and start collapsing it matters.

61
00:03:45,500 --> 00:03:49,500
Because if I was going from left to right, let's say I was writing this as two squared,

62
00:03:49,500 --> 00:03:53,500
and then I'm going to think of squaring that, and then squaring the result,

63
00:03:53,500 --> 00:03:58,500
that will get me a different number than if I think of going from the top to the bottom.

64
00:03:58,500 --> 00:04:02,500
If the first thing I evaluate is the two to the power two at the top,

65
00:04:02,500 --> 00:04:07,500
and then I go to the next one, and we can think about why.

66
00:04:07,500 --> 00:04:12,500
Here, if I'm collapsing from the bottom, that bottom part is four, so then I square it, and I'll square that.

67
00:04:12,500 --> 00:04:18,500
Four squared is sixteen, so I square that, and I end up getting 256.

68
00:04:18,500 --> 00:04:23,500
But on the bottom, if I start by collapsing that top term, it becomes a four.

69
00:04:23,500 --> 00:04:30,500
And then if I think of collapsing the current top term, that becomes two to the sixteen,

70
00:04:30,500 --> 00:04:35,500
and that's a much bigger number. That is 65,536.

71
00:04:35,500 --> 00:04:41,500
And in general, this process of repeatedly exponentiating going from the top to the bottom

72
00:04:41,500 --> 00:04:46,500
explodes very quickly, and tetration in general refers to the top to the bottom part.

73
00:04:46,500 --> 00:04:49,500
So we start evaluating at the top, and we work down.

74
00:04:49,500 --> 00:04:54,500
If you want to make that crystal clear, I think instead of drawing it as a power tower,

75
00:04:54,500 --> 00:04:59,500
one thing that you could do is define the iterative process very exactly.

76
00:04:59,500 --> 00:05:03,500
You might say we have some value that we're going to start out at one,

77
00:05:03,500 --> 00:05:08,500
and then each successive value is going to be two to the power of the previous thing.

78
00:05:08,500 --> 00:05:11,500
So a sub one would just be two.

79
00:05:11,500 --> 00:05:17,500
a sub two is going to be two to the power of whatever a sub one was, which in this case is two squared.

80
00:05:17,500 --> 00:05:25,500
a sub three is going to be two to the power of whatever a sub two was, which now is two to the two to the two.

81
00:05:25,500 --> 00:05:28,500
And there's no more ambiguity for what the order of operation should be,

82
00:05:28,500 --> 00:05:33,500
because you see that it came from the a two term, so we should first be evaluating what's in the top.

83
00:05:33,500 --> 00:05:42,500
And similarly, if you go on like this, and a sub n for any value n is equal to two to the previous term,

84
00:05:42,500 --> 00:05:48,500
a sub n minus one, when you unfold this expression and kind of go back in our recursive definition,

85
00:05:48,500 --> 00:05:54,500
what you're going to get is a power tower of two n different times.

86
00:05:54,500 --> 00:05:58,500
Now another thing that's nice about writing it like this is we can become experimental.

87
00:05:58,500 --> 00:06:03,500
And as you all know, I love to encourage people to be very playful when you come across a new operation like this,

88
00:06:03,500 --> 00:06:06,500
and a lot in this series we've just been pulling up some Python to do that.

89
00:06:06,500 --> 00:06:11,500
So let's do that here. Let's take this iterative process and see what it actually looks like.

90
00:06:11,500 --> 00:06:19,500
So I will go over to my terminal, I will open up some Python, I will set an initial value of a to be one,

91
00:06:19,500 --> 00:06:23,500
and then what I want to do is take a look at two to the power of that,

92
00:06:23,500 --> 00:06:29,500
but I'm going to reassign that value into a, so this double asterisk, that's how we take powers in Python,

93
00:06:29,500 --> 00:06:35,500
and then in a lot of programming languages, a single equal sign, it's not a question, it's not asking if they're equal,

94
00:06:35,500 --> 00:06:40,500
it's an operation. It's saying take whatever's sitting on that right side and shove it into the left value.

95
00:06:40,500 --> 00:06:46,500
So when we do this, it reassigns the value of a to be two to whatever it was before.

96
00:06:46,500 --> 00:06:52,500
This can be bizarre to people who haven't done programming because it seems like you have an equation that you're solving for something.

97
00:06:52,500 --> 00:06:56,500
But in this case, the left hand side is getting changed, it's an operation on it.

98
00:06:56,500 --> 00:07:03,500
So if I do that again, I take that same process of turning a into two to the power of whatever it was before,

99
00:07:03,500 --> 00:07:08,500
and then I'll just print it out in the same line, so we can say it turns into four, that turns into 16,

100
00:07:08,500 --> 00:07:13,500
that is going to turn into, you can try to make a prediction here, it will turn into two to the 16,

101
00:07:13,500 --> 00:07:20,500
which we just saw was 65,536. If I take one more step, which would be a power tower of height five,

102
00:07:20,500 --> 00:07:24,500
so just five twos stacked on top of each other, it totally explodes.

103
00:07:24,500 --> 00:07:31,500
It's just this monstrous number, which I think it's awfully kind of Python to even do the work to find the number for us.

104
00:07:31,500 --> 00:07:37,500
I'm impressed with it. And if we wanted, we could say, okay, think of that number as a string,

105
00:07:37,500 --> 00:07:42,500
what's the length of that string, and it's telling us the number of digits that are in it.

106
00:07:42,500 --> 00:07:47,500
So the number we have there is a 19,000 digit expression, just monstrously huge.

107
00:07:47,500 --> 00:07:54,500
And if we were to try one more iteration of this, turning a into two to the power of that 19,000 digit monstrosity,

108
00:07:54,500 --> 00:07:59,500
you would not be able to store the information required for that number.

109
00:07:59,500 --> 00:08:04,500
Any way that you were using matter to encode all the digits of whatever would come out,

110
00:08:04,500 --> 00:08:08,500
if that was within the confines of something like the radius of the Earth,

111
00:08:08,500 --> 00:08:13,500
you would absolutely create a black hole in any attempt to store that kind of information.

112
00:08:13,500 --> 00:08:19,500
So just a power tower of height six, and it's well beyond what you can literally physically convey in any kind of way.

113
00:08:19,500 --> 00:08:26,500
So, you might ask, how quickly does this thing blow up for other numbers, if it's not two?

114
00:08:26,500 --> 00:08:31,500
And one thing that I'm going to ask you, actually just in the live poll, let's go ahead and pull it up,

115
00:08:31,500 --> 00:08:36,500
is to predict what's going to happen here if instead of two, we were dealing with 1.1.

116
00:08:36,500 --> 00:08:42,500
So if you go to the link that's in the description and up on the screen to answer the live questions along with us,

117
00:08:42,500 --> 00:08:47,500
we are asked, let B equal 1.1, so just a little above one,

118
00:08:47,500 --> 00:08:52,500
and consider an expression of the form B to the B to the B to the B, this power tower,

119
00:08:52,500 --> 00:08:56,500
and its height is N, meaning you'll see N different copies of B.

120
00:08:56,500 --> 00:09:01,500
How big does N have to be? How many times do you have to repeat this operation

121
00:09:01,500 --> 00:09:05,500
before the value of the expression has more than 10 digits?

122
00:09:05,500 --> 00:09:09,500
So with two, we had to get to a tower of size five before that happened.

123
00:09:09,500 --> 00:09:13,500
It jumped from being a five-digit number to a 19,000-digit number.

124
00:09:13,500 --> 00:09:18,500
So how many times would you have to do it for a value of B equals 1.1?

125
00:09:18,500 --> 00:09:23,500
And I'll give you a moment to answer that while we listen to the soothing tones of construction maybe slowing down.

126
00:09:28,500 --> 00:09:33,500
And just to illustrate this process here, if we hop back over to Python,

127
00:09:33,500 --> 00:09:38,500
and let me just pop on over here, get back into my terminal,

128
00:09:38,500 --> 00:09:45,500
let's say I started A at a value of one. Let's just do this in a for loop, so for N in some kind of range like 50.

129
00:09:45,500 --> 00:09:53,500
I'm going to reassign A. What if instead of doing repeated exponentiation, I was just repeatedly multiplying it by 1.1?

130
00:09:53,500 --> 00:09:57,500
So just repeated multiplication, which should be exponentiation.

131
00:09:57,500 --> 00:10:02,500
You can get a sense of how quickly that grows, and if we take a look here at the first 50 values,

132
00:10:02,500 --> 00:10:09,500
you know, it starts at 1.1, it goes to 1.21, and at each stage it's actually growing just by a little bit, by 10% with each jump,

133
00:10:09,500 --> 00:10:15,500
and you get classic exponential growth. So with 50 steps it took us up to 117.

134
00:10:15,500 --> 00:10:20,500
That's exponential growth. So you might wonder, what is tetrational growth?

135
00:10:20,500 --> 00:10:23,500
What happens if we're repeatedly exponentiating this thing?

136
00:10:23,500 --> 00:10:27,500
And before I answer that, let me see what you think.

137
00:10:27,500 --> 00:10:33,500
What do you think is going to happen here if we repeatedly exponentiate this?

138
00:10:33,500 --> 00:10:41,500
Okay. So the correct answer is that it actually never grows past anything like that.

139
00:10:41,500 --> 00:10:44,500
And, ah, interesting, that's the third placed answer.

140
00:10:44,500 --> 00:10:50,500
So most of you thought that the height that you would need would be between 10 and 100.

141
00:10:50,500 --> 00:10:53,500
Doing it between 10 and 100 times, that would blow you up past 10 digits.

142
00:10:53,500 --> 00:10:59,500
The second most common answer was thinking it was between 1 and 10, which would be very analogous to how 2 was growing.

143
00:10:59,500 --> 00:11:04,500
Third most common, and I'm wondering how many of those third most common people have seen this process before,

144
00:11:04,500 --> 00:11:10,500
because it's very weird, the idea that repeatedly multiplying it by itself, that'll grow as much as you want,

145
00:11:10,500 --> 00:11:17,500
but that somehow doing what feels like a much more powerful operation, repeatedly exponentiating, that actually stays confined.

146
00:11:18,500 --> 00:11:26,500
And we can see this bear out in practice if we hop back over to our Python, where now what I'm doing with each iteration,

147
00:11:26,500 --> 00:11:32,500
and I guess I should set a to be 1 again, I'm going to repeatedly turn it into 1 to the power of itself.

148
00:11:32,500 --> 00:11:39,500
And what we get is a little bit of initial growth, but it quickly slows down, and just within 20 iterations,

149
00:11:39,500 --> 00:11:44,500
it actually stays fixed at this value. You can see that this digit isn't changing.

150
00:11:44,500 --> 00:11:51,500
And if you think through what's going on there, evidently when a is equal to that value, and you take 1.1 to the power of that value,

151
00:11:51,500 --> 00:12:01,500
so 1.1 to the power of this thing that's 1.1117, ah, don't type it too many times, that actually stays fixed.

152
00:12:01,500 --> 00:12:03,500
You get the same value that you had before.

153
00:12:03,500 --> 00:12:12,500
So another way that we can phrase this is to say that the equation 1.1 to the power x equals x,

154
00:12:12,500 --> 00:12:16,500
something where when you plug it into the function you get itself, this has a solution.

155
00:12:16,500 --> 00:12:24,500
This didn't hold when we were doing it with 2. If we had 2 to the x equals x, if you try to think through different answers to this,

156
00:12:24,500 --> 00:12:29,500
it's a funky equation to think about, but if you just try out some values like 0 and 1 or anything in between,

157
00:12:29,500 --> 00:12:34,500
you'll find there's actually no answer here, whereas evidently we just saw an answer in this case.

158
00:12:34,500 --> 00:12:39,500
And what that means for our iterative process, if instead of 2 at the base it was 1.1 at the base,

159
00:12:39,500 --> 00:12:46,500
you'd have the situation where the previous value, you raise 1.1 to that, it just stays fixed.

160
00:12:46,500 --> 00:12:48,500
And now this starts raising a lot of interesting questions.

161
00:12:48,500 --> 00:12:57,500
First of all, where's the switch? What number between 1 and 2 is the point where it goes from staying finite to blowing up?

162
00:12:57,500 --> 00:13:04,500
And blowing up incredibly quickly at that, remember with 2 it only took us 5 iterations before we had something that was, you know,

163
00:13:04,500 --> 00:13:06,500
beyond what the computer could handle.

164
00:13:06,500 --> 00:13:15,500
And we could play around with this a little bit, but I think another interesting product of the fact that this can converge at all,

165
00:13:15,500 --> 00:13:22,500
is we can start answering what look like very bizarre questions, where I can say, imagine I have an unknown value x,

166
00:13:22,500 --> 00:13:28,500
and I do not a power tower of some finite size, but of an infinite size. I'm going to keep going forever,

167
00:13:28,500 --> 00:13:32,500
in the same way that evidently I can do with a base of 1.1.

168
00:13:32,500 --> 00:13:38,500
Can I find a value of x where this converges, for example to 4? This is the question posed in the thumbnail of the video.

169
00:13:38,500 --> 00:13:45,500
And what we just saw is that we could find a value that converges to 1.111782 on and on,

170
00:13:45,500 --> 00:13:51,500
that's evidently a value you can converge to, and the solution would be 1.1, but how do you go the other way around?

171
00:13:51,500 --> 00:13:57,500
How can we actually solve for the idea that we can find a value of x that equals 4?

172
00:13:57,500 --> 00:14:03,500
And there's a clever trick here that you might spot, and this comes up in certain problem solving kinds of math,

173
00:14:03,500 --> 00:14:08,500
where you have this infinite expression, and you say, hmm, there's some self-similarity I can leverage.

174
00:14:08,500 --> 00:14:14,500
There's a copy of the entire power tower inside itself. Because it's infinite, it's a genuine copy of itself.

175
00:14:14,500 --> 00:14:20,500
It's not, it doesn't have a height of 1 minus whatever the previous height was, because the height is infinity.

176
00:14:21,500 --> 00:14:30,500
And under the assumption that the whole power tower equals 4, I could replace that with a 4 and solve x to the 4th equals 4.

177
00:14:30,500 --> 00:14:35,500
Let's see, what would that be? If I take square roots, that's the same as saying x squared equals 2.

178
00:14:35,500 --> 00:14:44,500
So it looks like, interesting, x equals square root of 2 gives me a power tower that should converge to 4.

179
00:14:44,500 --> 00:14:54,500
Kind of funky. The idea that anything converges at all is sort of weird, but the idea that, you know, square root of 2 would go to a clean value, like an integer, that's kind of surprising.

180
00:14:54,500 --> 00:15:04,500
And let me actually ask you another question, where I'm going to have you apply the same tactic that we just did, leveraging that self-similarity to solve another one of these situations,

181
00:15:04,500 --> 00:15:11,500
where you're looking for a power tower with an unknown base, and seeing when it equals a pre-specified value.

182
00:15:11,500 --> 00:15:17,500
So this time the question is going to ask us, if we give it just a little moment to pull up here,

183
00:15:17,500 --> 00:15:27,500
well it's taking a little moment, which is fine, ah great, the question asks us, using the tactic just demonstrated, what I just did for 4,

184
00:15:27,500 --> 00:15:33,500
solve the equation x to the x to the x on and on up to infinity equals 2.

185
00:15:33,500 --> 00:15:36,500
So I'll give you a moment to think that through.

186
00:15:41,500 --> 00:15:59,500
The ground smasher is back.

187
00:15:59,500 --> 00:16:07,500
Man, yesterday when we were doing it, we, I wish I had the footage to show you, maybe I can try to pull it up on my phone or something,

188
00:16:07,500 --> 00:16:16,500
but the things were shaking so much that just a pile of circuit boards was actively shaking.

189
00:16:16,500 --> 00:16:19,500
Let me see if I can find this, it's super funny.

190
00:16:19,500 --> 00:16:30,500
Alright, this might not, this is probably the worst way to stream something, is to take an overhead camera shot of a phone, but let me see if this works decently well.

191
00:16:30,500 --> 00:16:36,500
So I was trying to get a view of the construction, we move over, and just the pile of circuit boards is just jittering like that.

192
00:16:36,500 --> 00:16:40,500
And that's what we have to deal with, so hope you enjoy.

193
00:16:40,500 --> 00:16:49,500
Now on the quiz, it looks like just about everybody is converging around the same answer, and I'm going to assume you've landed on the correct answer,

194
00:16:49,500 --> 00:16:59,500
which is in fact the square root of 2, which is kind of a funny thing, because if we go and we do exactly the same logic that we were doing for solving for 4,

195
00:16:59,500 --> 00:17:05,500
where we have this infinite power tower, and we're assuming that it equals 2, and we recognize the self-similarity,

196
00:17:05,500 --> 00:17:13,500
we're like, ah yes, the power tower, copy of it in itself, so that should mean x squared equals 2, that means x equals the square root of 2.

197
00:17:13,500 --> 00:17:23,500
Well hang on a second, this can't be right, because on the one hand this seems to be suggesting that an infinite power tower converges to 2 when the base is root 2,

198
00:17:23,500 --> 00:17:26,500
but on the other hand it converges to 4 when the base is root 2.

199
00:17:26,500 --> 00:17:33,500
It can't be both, we've got a very deterministic process up here for what it converges, so it's got to be just one of them, if any.

200
00:17:33,500 --> 00:17:35,500
Maybe the entire logic of the situation is false.

201
00:17:35,500 --> 00:17:41,500
So, let's get empirical. Let's turn to our programming to see which one of these it actually ends up being.

202
00:17:41,500 --> 00:17:51,500
So I'll hop back over, I will reassign my variable a to be 1, I'm going to make my little loop, actually let's import math because I'm going to need a square root here.

203
00:17:51,500 --> 00:17:56,500
So I'm going to say for, I don't know, we'll just do 20 at a time.

204
00:17:56,500 --> 00:18:03,500
I'm going to take a, turn it into the square root of 2, square root of 2 to the power of a, print out what it looks like,

205
00:18:03,500 --> 00:18:06,500
guess I don't need that semicolon, but it doesn't really matter.

206
00:18:06,500 --> 00:18:13,500
And it looks like for those first 20 iterations it does kind of slow down as it approaches 2, and if I do another 20 iterations,

207
00:18:14,500 --> 00:18:19,500
it's definitely slowing down as it gets to 2, definitely, alright.

208
00:18:19,500 --> 00:18:27,500
And now it does something kind of bizarre where it seems like it lands exactly on 2, but then it jumps up to 2.0004,

209
00:18:27,500 --> 00:18:31,500
which if you think through what's going on here, at some point it equals 2.

210
00:18:31,500 --> 00:18:36,500
So we're saying a equals 2, and then we're taking the square root of 2 to the power of that,

211
00:18:36,500 --> 00:18:40,500
but square root of 2 to the power of 2 by definition should be 2.

212
00:18:40,500 --> 00:18:43,500
So that's going to be just some simple numerical error.

213
00:18:43,500 --> 00:18:48,500
I guess, however, the math square root library is implementing square roots,

214
00:18:48,500 --> 00:18:51,500
you know, there's always going to be a little bit of numerical error with floating points,

215
00:18:51,500 --> 00:18:54,500
so when we square it we don't exactly get 2 back.

216
00:18:54,500 --> 00:18:55,500
That's fine, not a problem.

217
00:18:55,500 --> 00:19:03,500
But it does seem to suggest that the correct answer to our question of what happens when we have a power tower with root 2

218
00:19:03,500 --> 00:19:09,500
is that it equals 2, or that the sequence of numbers that this represents approaches 2.

219
00:19:09,500 --> 00:19:11,500
What's wrong with the other logic though?

220
00:19:11,500 --> 00:19:15,500
What's wrong with the logic that seemed to imply that it should equal 4?

221
00:19:15,500 --> 00:19:18,500
Well to answer that we should do two things.

222
00:19:18,500 --> 00:19:23,500
First is to represent this thing a little bit more visually, a little bit graphically,

223
00:19:23,500 --> 00:19:27,500
so we can try to understand what is going on with this iterative process.

224
00:19:27,500 --> 00:19:33,500
And then from there understand which values will converge and which values will blow up.

225
00:19:33,500 --> 00:19:40,500
And by answering that we can get back in the direction of what's wrong with the logic associated with having this thing approach 4.

226
00:19:40,500 --> 00:19:44,500
So for that let's take a look over at our good friend Desmos.

227
00:19:44,500 --> 00:19:50,500
Pop on over here, open up Chrome, not look at that yet, that is 4 later.

228
00:19:50,500 --> 00:19:54,500
And we will just take a look at a graph here.

229
00:19:54,500 --> 00:20:01,500
Alright so what I have is the line y equals x, I've got a function b to the power x and I've set b to be 2,

230
00:20:01,500 --> 00:20:04,500
so we're just looking at the graph of 2 to the x.

231
00:20:04,500 --> 00:20:11,500
And to think about the idea of repeatedly applying a function and kind of taking the output and then plugging it back into the input,

232
00:20:11,500 --> 00:20:15,500
we can draw what's commonly known as a cobweb diagram.

233
00:20:15,500 --> 00:20:20,500
The way this will work is I have an initial value of 1 as the input,

234
00:20:20,500 --> 00:20:26,500
and then the next value is going to be whatever f of 1 is, I'm going to plug in 1 to the function.

235
00:20:26,500 --> 00:20:32,500
And what that means is I move vertically until I hit the graph, and in this case 2 to the 1 is just 2,

236
00:20:32,500 --> 00:20:35,500
so I'm going to hit it at a y value of 2.

237
00:20:35,500 --> 00:20:40,500
But from there what I want is the output that I just got, that 2, to become an input to the function.

238
00:20:40,500 --> 00:20:44,500
But if outputs are represented on the y axis and inputs are on the x axis,

239
00:20:44,500 --> 00:20:49,500
what I need is some point where the y value is the same as the x value.

240
00:20:49,500 --> 00:20:53,500
So if I walk horizontally until the y value is the same as the x value,

241
00:20:53,500 --> 00:20:59,500
I'll get to a point where 2 is the x value, where I can now think of that 2 as being the input.

242
00:20:59,500 --> 00:21:06,500
And to do that, I walk until I hit the line y equals x, because once I hit that I'm looking at 2,2,

243
00:21:06,500 --> 00:21:11,500
so I can treat that 2 as an input by moving vertically until I hit the graph,

244
00:21:11,500 --> 00:21:15,500
and kind of see how that works, meaning the next point in our iterative process

245
00:21:15,500 --> 00:21:19,500
is going to be 2 to the power of what we just had, which is 2 squared, or 4,

246
00:21:19,500 --> 00:21:23,500
and then I move over to the right, turning my output into an input,

247
00:21:23,500 --> 00:21:28,500
looking for what point on the plane has an x value that's also equal to 4,

248
00:21:28,500 --> 00:21:32,500
then once I hit that, I kind of think of bouncing off of this line, y equals x,

249
00:21:32,500 --> 00:21:35,500
and moving vertically until I hit the graph again.

250
00:21:35,500 --> 00:21:41,500
And this time it's not until 16 that I hit the graph, and then I move to the right until x also equals 16,

251
00:21:42,500 --> 00:21:47,500
and then from there, I have to go quite a while, quite a while moving vertically,

252
00:21:47,500 --> 00:21:52,500
but it will happen quite a while, and around 65,000 it intersects the graph again,

253
00:21:52,500 --> 00:21:57,500
and then it's going to move to the right until we get to an x coordinate that's also 65,000,

254
00:21:57,500 --> 00:22:01,500
and from there, Desmos just totally gives up on trying to draw the next vertical line,

255
00:22:01,500 --> 00:22:08,500
because as we saw, what it would have to get to is a height where the number describing that height is a 19,000 digit number,

256
00:22:08,500 --> 00:22:10,500
so it just gives up on us there.

257
00:22:10,500 --> 00:22:16,500
But when we think in terms of these cobweb diagrams, now if I start playing with what is that base,

258
00:22:16,500 --> 00:22:18,500
you can see what's going to happen.

259
00:22:18,500 --> 00:22:22,500
What is that base? The base is the ground-smashing activity.

260
00:22:22,500 --> 00:22:26,500
At some point, the graphs actually cross each other.

261
00:22:26,500 --> 00:22:32,500
So in particular, we were looking at 1.1 earlier, and that, yeah, they absolutely cross,

262
00:22:32,500 --> 00:22:37,500
but even up to around 1.41, which is around the square root of 2,

263
00:22:37,500 --> 00:22:42,500
if you look at what happens with this process, we look at the output, turn the output into an input,

264
00:22:42,500 --> 00:22:45,500
look at the new output, output into an input, and bounce back and forth,

265
00:22:45,500 --> 00:22:50,500
we're bouncing towards the value where these graphs intersect each other,

266
00:22:50,500 --> 00:22:56,500
towards the value where b of x, b to the power x, excuse me, is equal to x.

267
00:22:56,500 --> 00:23:06,500
And in particular, if that base was the square root of 2, and I say find a solution of square root of 2 to the power x equals x,

268
00:23:06,500 --> 00:23:10,500
you know, it's not easy to think about how you solve this systematically, but for this particular case,

269
00:23:10,500 --> 00:23:13,500
you would believe me if I told you that the solution is x equals 2.

270
00:23:13,500 --> 00:23:15,500
You can just plug that in and solve it.

271
00:23:15,500 --> 00:23:20,500
So if we look at our graph, if b, actually let's go ahead and make it precisely the square root of 2,

272
00:23:20,500 --> 00:23:22,500
rather than just an approximation here.

273
00:23:22,500 --> 00:23:28,500
So b is going to be the square root, square root of 2, no, of 2.

274
00:23:28,500 --> 00:23:32,500
The intersection point is exactly at 2, so you see your iterative process approaching that.

275
00:23:32,500 --> 00:23:34,500
Okay, that's kind of interesting.

276
00:23:34,500 --> 00:23:39,500
This also shows us how we're going to need to think about it if we want to be,

277
00:23:39,500 --> 00:23:45,500
if we want to understand where the switch happens between when things converge and when things don't converge.

278
00:23:45,500 --> 00:23:52,500
Because what we want is knowing what value of b should I go to where things can escape,

279
00:23:52,500 --> 00:23:58,500
there is no intersection point, to where things don't escape, where there is an intersection point.

280
00:23:58,500 --> 00:24:02,500
And by the way, I've left the link to this particular Desmos graph in the description,

281
00:24:02,500 --> 00:24:06,500
so if you want to hop down there and just play along, you're more than welcome to.

282
00:24:06,500 --> 00:24:11,500
One thing I should specify, the fact that they intersect, that's actually not enough to ensure that this

283
00:24:11,500 --> 00:24:15,500
cobweb iterative process necessarily converges.

284
00:24:15,500 --> 00:24:22,500
It's important that the graph of our function, which in this case is b to the x, intersects at a slope that's less than 1.

285
00:24:22,500 --> 00:24:24,500
And we can think about why that's true.

286
00:24:24,500 --> 00:24:31,500
If I turn a new leaf, let's say I wasn't dealing with exponential functions or curves like that,

287
00:24:31,500 --> 00:24:34,500
I was just dealing with any generic function.

288
00:24:34,500 --> 00:24:42,500
So look at the line y equals x, and let's say I have some function which squiggles along and it intersects it,

289
00:24:42,500 --> 00:24:44,500
but with a slope greater than 1.

290
00:24:44,500 --> 00:24:48,500
Then when we do our iterative process, we'll have some output, and we say,

291
00:24:48,500 --> 00:24:52,500
let's turn it into an input by walking horizontally until we hit y equals x.

292
00:24:52,500 --> 00:24:55,500
Look at the new output by walking vertically.

293
00:24:55,500 --> 00:24:57,500
Smash, smash, smash.

294
00:24:57,500 --> 00:25:05,500
Look at the new input, or turn that output into an input by walking horizontally until we hit it.

295
00:25:05,500 --> 00:25:07,500
And then repeat that process.

296
00:25:07,500 --> 00:25:11,500
You can see that's what's happening because it intersected with a slope greater than 1,

297
00:25:11,500 --> 00:25:14,500
we're actually walking away from the intersection point.

298
00:25:14,500 --> 00:25:19,500
So to make sure that it's not just a stable point, it's not just a common point between the graphs,

299
00:25:19,500 --> 00:25:22,500
but it's stable when you repeat this process.

300
00:25:22,500 --> 00:25:24,500
That slope does need to be less than 1.

301
00:25:24,500 --> 00:25:27,500
So I gave a whole video about another perspective on how to think about this kind of process.

302
00:25:27,500 --> 00:25:31,500
I think I gave it an absurd title, like what they won't teach you in calculus,

303
00:25:31,500 --> 00:25:38,500
but if you want to see more examples of this and fun, infinite iterated objects, that's a place that you can turn to.

304
00:25:38,500 --> 00:25:44,500
Now, in our case, it is the case that the slope is less than 1, so that works.

305
00:25:44,500 --> 00:25:47,500
Although, on the second intersection point, that's actually a slope greater than 1.

306
00:25:47,500 --> 00:25:53,500
So if I changed the iterative process where my first value wasn't 1,

307
00:25:53,500 --> 00:25:56,500
but in this case if I made it 4,

308
00:25:56,500 --> 00:26:01,500
then my iterative process would actually run away from the intersection point, like you can see,

309
00:26:01,500 --> 00:26:03,500
and it will indeed blow up to infinity.

310
00:26:03,500 --> 00:26:05,500
So that's always fun.

311
00:26:05,500 --> 00:26:07,500
I'll change that back to a 1.

312
00:26:07,500 --> 00:26:14,500
I can take a look at my little note for being annoyed that you can't do four loops of recursion in Desmos definitions.

313
00:26:14,500 --> 00:26:18,500
And you can see what we need to solve.

314
00:26:18,500 --> 00:26:25,500
One thing that's kind of fun here is at 1.45, which seems just above a point where they actually intersect,

315
00:26:25,500 --> 00:26:33,500
you have this bouncing and bouncing that just stays somewhat stable for such a long time before it eventually blows up.

316
00:26:33,500 --> 00:26:38,500
And imagine trying to think about this not graphically, but if you were just playing around with it numerically.

317
00:26:38,500 --> 00:26:43,500
So if we had taken the same process we did before, where A starts out at 1,

318
00:26:43,500 --> 00:26:49,500
we're going to do a bunch of iterative exponentiating, but we're going to make it 1.45 instead.

319
00:26:49,500 --> 00:26:52,500
And let's give ourselves like 50 values for this one.

320
00:26:52,500 --> 00:26:56,500
The process eventually blows up. It gives us this overflow error.

321
00:26:56,500 --> 00:27:02,500
But the processes would be very confusing if you didn't have any visual for what's going on.

322
00:27:02,500 --> 00:27:11,500
It starts at 1.45, it grows, it stays kind of not stable, but it doesn't seem to be moving that much in the 2.71828 region.

323
00:27:11,500 --> 00:27:15,500
For some reason around there it just seems awfully slow moving.

324
00:27:15,500 --> 00:27:19,500
But as it starts to get a little bit bigger into the 3 region it stays there for a while.

325
00:27:19,500 --> 00:27:27,500
The 4 region there's two values. Then 6, and then 9, and then 39, and then it just blows up to 2 million after that.

326
00:27:27,500 --> 00:27:29,500
And then from there it's bigger than what the computer can handle.

327
00:27:29,500 --> 00:27:34,500
So that would be deeply confusing, except we have a nice understanding of what's going on.

328
00:27:34,500 --> 00:27:37,500
The graphs almost touch, but they don't quite.

329
00:27:37,500 --> 00:27:42,500
So somewhere between 1.44 and 1.45 is what we're looking for.

330
00:27:42,500 --> 00:27:45,500
And you might think of this now in terms of calculus.

331
00:27:45,500 --> 00:27:52,500
Where what we want is to know when the tangent of this graph is the same as the line y equals x.

332
00:27:52,500 --> 00:27:57,500
When does the graph b to the x lie tangent to the line y equals x?

333
00:27:57,500 --> 00:28:02,500
And rather than me setting up the equations that we need to solve for that, I'm going to have you do the same.

334
00:28:02,500 --> 00:28:07,500
I'm going to have you take a look at this condition of looking for a value of b.

335
00:28:07,500 --> 00:28:11,500
Well let's just read what the question asks us more specifically.

336
00:28:11,500 --> 00:28:20,500
We want a value of b such that the graph of y equals b to the x sits tangent to the graph y equals x.

337
00:28:20,500 --> 00:28:25,500
Which of the following represents the pair of equations that we need to solve?

338
00:28:25,500 --> 00:28:27,500
Okay, so take a moment to think about this.

339
00:28:27,500 --> 00:28:31,500
Which of the following is the pair of equations that we need to solve?

340
00:28:32,500 --> 00:28:48,500
Music

341
00:28:48,500 --> 00:28:52,500
While you're thinking about that, I'll go ahead and take a couple questions from the audience.

342
00:28:52,500 --> 00:28:54,500
We have...

343
00:28:54,500 --> 00:28:58,500
So immediately I wondered, repeat detetration is pentation.

344
00:28:58,500 --> 00:29:00,500
Or is that even a useful idea?

345
00:29:00,500 --> 00:29:06,500
Yeah, there's this whole notation that talks about the idea of repeating these processes.

346
00:29:06,500 --> 00:29:08,500
It's called Knuth arrow notation.

347
00:29:08,500 --> 00:29:10,500
And you can kind of have as many as you want.

348
00:29:10,500 --> 00:29:20,500
So the way this works is that if I write something like a arrow b, that's the same thing as a to the power b.

349
00:29:20,500 --> 00:29:26,500
But then a with two arrows is the repetition of that process.

350
00:29:26,500 --> 00:29:28,500
You know, b times.

351
00:29:30,500 --> 00:29:33,500
And, sorry, that's a two arrows and then a b.

352
00:29:33,500 --> 00:29:40,500
If I had three arrows, three arrows and then a b, then what I'm repeating is the process of doing a double arrow.

353
00:29:40,500 --> 00:29:44,500
Which is really mind-warpingly big as you start to think about it for numbers.

354
00:29:44,500 --> 00:29:46,500
Even numbers like two and three.

355
00:29:46,500 --> 00:29:51,500
The idea of repeating this process some number of times is just crazy.

356
00:29:51,500 --> 00:29:54,500
And you could just keep going with more and more arrows.

357
00:29:54,500 --> 00:30:01,500
And if any of you have not learned about Gram's constant, go over to that number file right now and see how Gram's constant is defined.

358
00:30:01,500 --> 00:30:05,500
Because it involves these sort of arrow operations and it's genuinely crazy.

359
00:30:05,500 --> 00:30:10,500
And it's one of the most mind-blowing moments you'll have in your mathematical life the first time you see Gram's constant.

360
00:30:10,500 --> 00:30:12,500
So I would recommend.

361
00:30:12,500 --> 00:30:19,500
Alright, so next we have for 1.1 to the power x equals x, Wolfram Alpha yields two real solutions.

362
00:30:19,500 --> 00:30:20,500
Ooh, excellent question.

363
00:30:20,500 --> 00:30:22,500
One of them is the one that we converge to.

364
00:30:22,500 --> 00:30:25,500
The other is around 38.29.

365
00:30:25,500 --> 00:30:27,500
Awesome. What's the deal with that second solution?

366
00:30:27,500 --> 00:30:30,500
We can take a look exactly in the graph that we have.

367
00:30:30,500 --> 00:30:35,500
So if we take b and we make it 1.1.

368
00:30:35,500 --> 00:30:36,500
Okay.

369
00:30:36,500 --> 00:30:41,500
It's what I was talking about how at the place where it intersects with a slope greater than one.

370
00:30:41,500 --> 00:30:45,500
Yeah, it's a fixed point for our iterative process.

371
00:30:45,500 --> 00:30:46,500
But it's not a stable fixed point.

372
00:30:46,500 --> 00:30:49,500
So up here is that 38 value that you were just referencing.

373
00:30:49,500 --> 00:30:58,500
And because it intersects at a slope that's bigger than one, even if you were to seed the process with a value that's really near there, it would run away from that value.

374
00:30:58,500 --> 00:31:05,500
So if you're seeding the process, if you're starting off at a value of a equals one, this is the intersection point that it'll end up finding.

375
00:31:05,500 --> 00:31:07,500
That's an outstanding question.

376
00:31:07,500 --> 00:31:12,500
And third, are there practical use cases for such an operation as tetration?

377
00:31:12,500 --> 00:31:15,500
I've studied very scientific branch and have never come across this operator.

378
00:31:15,500 --> 00:31:17,500
I'm very curious.

379
00:31:17,500 --> 00:31:20,500
Okay, so that is a spot on question.

380
00:31:20,500 --> 00:31:31,500
So I will talk a little bit about a role with chaos and fractals at the end, which is tenuous at best because it's saying it's related to other things which themselves are useful.

381
00:31:31,500 --> 00:31:37,500
I can't personally think of a place where you're out in the wild doing science and then boom, tetration pops up.

382
00:31:37,500 --> 00:31:45,500
I can think of a puzzle, like a sort of brain teaser type puzzle where you would not at all think this operation comes up, but it does.

383
00:31:45,500 --> 00:31:48,500
If we have time at the end, I think I might share with you.

384
00:31:48,500 --> 00:31:58,500
I would say the motivation for learning this kind of thing right now is, pardon the scene switching chaos there, is just that the process for actually solving the puzzles that are sitting in front of us,

385
00:31:58,500 --> 00:32:08,500
understanding what was up with the repeated tower equaling four, and understanding what we're about to find, where is the switching point between things converging and things not converging.

386
00:32:08,500 --> 00:32:14,500
Those are problem solving tactics that carry over into other things you might do that involve more practical iterative processes.

387
00:32:14,500 --> 00:32:19,500
And iterative processes absolutely do come up all throughout science. I mean, chaos theory is like the big one there.

388
00:32:19,500 --> 00:32:30,500
So with all of that as the answering people's question side, and I'll think more through Twitter as we go and probably do more of that at the end, let's see how you've done on our problem.

389
00:32:30,500 --> 00:32:42,500
So we're looking for a system of equations here, and the correct answer, which 1777 of you got, I think that's not quite French Revolution territory, but American Revolution territory of you,

390
00:32:42,500 --> 00:32:51,500
we got b to the x equals x, so we need them to intersect, and then moreover what we want is the slope to be the same where they do intersect.

391
00:32:51,500 --> 00:33:01,500
And the derivative of b to the x is itself, but scaled by the natural log of b, and we want that slope to equal one, because it's got to be the same as the slope of the graph we're just looking at.

392
00:33:01,500 --> 00:33:09,500
And if ever you don't remember what the derivatives of your exponential functions are, if you do remember that e to the x is its own derivative,

393
00:33:09,500 --> 00:33:18,500
which if there's any one thing you remember in calculus with respect to e to the x, it should be that e to the x is its own derivative.

394
00:33:18,500 --> 00:33:25,500
Note that we can write b as e to the natural log of b, so then all of that to the x.

395
00:33:25,500 --> 00:33:31,500
So this is the same as expressing e to the natural log of b times x, we talked about this I think last lecture.

396
00:33:31,500 --> 00:33:50,500
So then if you want to take the derivative of this, take its derivative, on the one hand it should be the derivative of this, which by the chain rule is that constant sitting in the exponent, natural log of b times itself, e to the ln b times x.

397
00:33:50,500 --> 00:33:56,500
So what we're looking at is, okay it should be itself, but scaled by something, and that something was the natural log of b.

398
00:33:56,500 --> 00:34:10,500
Now for our puzzle of understanding when is it that our graph is going to nicely lie tangent to y equals x, let's solve this equation, this system of equations actually.

399
00:34:10,500 --> 00:34:25,500
Because we're looking for the value x where that solution happens, we know that the curve b to the x equals x at that point, and we know that its slope, the natural log of b times itself, is equal to one.

400
00:34:25,500 --> 00:34:40,500
Now to solve this, the first thing I might do is note that I can simplify b to the x as being x, so I would apply that over here, and I can write the natural log of b times x is equal to one.

401
00:34:40,500 --> 00:34:53,500
And what that gives me is that b is the same as one divided by x, all very nice, no no no, it doesn't give me that, it gives me that the natural log of b is one over x.

402
00:34:53,500 --> 00:35:01,500
That is the same statement as saying e to the one over x is equal to b.

403
00:35:02,500 --> 00:35:12,500
Alright, now what is that bias? Well it gives us an expression for b entirely in terms of x, so I can go to this top part and I can get an equation that has nothing but x's in it.

404
00:35:12,500 --> 00:35:22,500
It'll be e to the one over x, all to the power x, I'm just replacing the b with what we found it to be, and that is supposed to equal x.

405
00:35:22,500 --> 00:35:34,500
But on the other hand, e to the one over x to the power x simplifies down to simply being e, and what we found is that x is equal to e.

406
00:35:34,500 --> 00:35:47,500
And by the way, so I was doing like a sort of a dry run of this lesson last night where sometimes I'll put out like a link to a stream on Twitter that's an unlisted link, and just say like as soon as a hundred of you hop on here I'm deleting the tweet and we're just going to do a dry run.

407
00:35:47,500 --> 00:36:01,500
And when I was solving this, for some reason I was just confuddled for like ten minutes where I got to this point and I'm like that can't be right, because we're looking for a value that's between 1.44 and 1.45, so x can't be e, that's way too big, that's like 2.718.

408
00:36:01,500 --> 00:36:06,500
So I went back and I was trying to think through like what have I done wrong, what on earth has gone wrong here?

409
00:36:06,500 --> 00:36:25,500
It was mildly embarrassing because it took so long, and then I ultimately realized no, you idiot, it's not that we're looking for a value of x that's between 1.44 and 1.45, that was the condition for b, for the base of our exponential when we were playing around over here.

410
00:36:25,500 --> 00:36:43,500
x is just wherever they intersect, so it's fine for that to be around e, in fact that looks consistent that around where this point of tangency is, is e, which incidentally is also the output because this is happening with the line y equals x, so the point of tangency has coordinates e comma e, evidently.

411
00:36:43,500 --> 00:37:01,500
And what does that mean for the value of b itself once we solve? Well we have an exact expression for x, we have an expression for b in terms of x, so this would seem to imply that b is e to the power of 1 divided by e, which is such a delightfully bizarre answer, e to the power of 1 divided by e.

412
00:37:01,500 --> 00:37:13,500
And we can check with our calculator that that makes some sense, so if we hop on over here and I say, hey Desmos, what is e to the 1 over e? Not 1 over 3, 1 over e.

413
00:37:13,500 --> 00:37:23,500
Yeah, checks out, it is between 1.44 and 1.45, which is exactly what we were looking for, for the point when it goes from converging to exploding.

414
00:37:24,500 --> 00:37:37,500
Very satisfying, I think, finding that solution, that it's e to the 1 over e. As a challenge puzzle for you, if you want a little bit of homework today, I want you to find a lower bound on where this converges.

415
00:37:37,500 --> 00:37:51,500
So we found the highest value that will make this converge, but we can also start playing with values of b that are less than 1, and if we do that, I'll just kind of get rid of our cobweb here, if we do that there will be some value, I guess I should keep the cobwebbing,

416
00:37:51,500 --> 00:38:01,500
where it's no longer going to zero in on some exact value, and it instead becomes an unstable point. And the question for you is, when does that happen?

417
00:38:01,500 --> 00:38:09,500
When does it go from approaching the point where the two graphs intersect to no longer approaching it, because it's unstable?

418
00:38:10,500 --> 00:38:24,500
And if you want a hint, think about the fact that the slope, in this case it's not a matter of when it's equal to 1, it's a matter of when it's less than negative 1, and if you want another hint, it should be an expression that also involves two e's inside of it.

419
00:38:24,500 --> 00:38:35,500
So, very fun puzzle if you want to get to it, and that will give you kind of a range of convergence for what values could we have as the base in our titration, such that the power tower actually converges to something.

420
00:38:35,500 --> 00:38:46,500
And one thing that's noteworthy here, is that it goes from converging to a value of e, to just blowing up to infinity, it never converges to values between e and infinity.

421
00:38:46,500 --> 00:39:00,500
Which maybe runs against intuition, because you would think that it somehow smoothly blows up, that rather than going, oh it converges to 1, it converges to 2, it converges to e, and then discontinuously jumping to infinity, but that is apparently the behavior.

422
00:39:00,500 --> 00:39:06,500
And it happens just because the graphs were once tangent, and then that's where they separate. They're kissing, and then they stop kissing.

423
00:39:06,500 --> 00:39:10,500
And this answers for us what's going on in the case of the power tower with 4.

424
00:39:10,500 --> 00:39:15,500
So if you think back to the logic, where did we have it?

425
00:39:15,500 --> 00:39:30,500
Great. So if we have our power tower, and I was saying, solve for the value where this equals 4, well this assumes that such a value even exists, that this process will ever converge to be 4.

426
00:39:30,500 --> 00:39:33,500
But we just saw that it'll never converge to be anything that's bigger than e.

427
00:39:33,500 --> 00:39:40,500
So in particular, the very first step where we make the substitution, that's leveraging the assumption that a solution even exists, that's invalid.

428
00:39:41,500 --> 00:39:50,500
And the reason that it worked for 2 is because there does exist a value where this converges to 2, so when we make that initial substitution, that's a valid thing to do.

429
00:39:50,500 --> 00:39:56,500
And before we even solved it, you could have seen that there exists a value where it converges to 2 by looking at the graphs.

430
00:39:56,500 --> 00:40:07,500
What you would look for, even if you didn't know it was going to be square root of 2, what you would look for is when does this intersection point between the graphs happen at a y value of 2?

431
00:40:07,500 --> 00:40:13,500
I guess it's also an x value of 2 because it's on the line y equals x, but what we care about is that the y value should be 2.

432
00:40:13,500 --> 00:40:23,500
And you would be able to empirically start seeing that, hmm, that's somewhere between 1.41 and 1.42, and you could binary search your way on down even a little bit further.

433
00:40:23,500 --> 00:40:34,500
So, I think that's delightful, that you can take a look at this absolutely crazy singing process of a repeated power tower, that it converges at any points at all, which is counterintuitive,

434
00:40:34,500 --> 00:40:40,500
and that we can actually make very substantive statements about when it converges, thinking through iterative processes like this.

435
00:40:40,500 --> 00:40:49,500
And that's actually it for today, this is going to be a shorter lesson. That is the end of what I wanted to say about the power tower puzzle, and leaving you with that little bit of homework.

436
00:40:49,500 --> 00:41:03,500
So for the very end here, I just want to take a couple more questions from Twitter, if you ask them with the hashtag locked down math, they might get forwarded to me, and anything about tetration and this process is exactly what we should talk about.

437
00:41:03,500 --> 00:41:12,500
Great, so, it says if there's a triangle of exponents, is there a square of tetration? What uses are there for the inverses of tetration?

438
00:41:12,500 --> 00:41:22,500
Well, I mean, in either case, we'd be dealing with three different variables. There's the idea of what's the base, what's the height, and then what's the output.

439
00:41:23,500 --> 00:41:37,500
So in either case, we'd just be having three of them. The four in tetration, like what makes it four, is not the fact that there's three relevant numbers, you know, the base, the exponent, and then whatever the output, and then some new fourth thing.

440
00:41:37,500 --> 00:41:44,500
It's that in this process of addition, multiplication, exponentiation, it's kind of the fourth of our like, repeating the process before.

441
00:41:44,500 --> 00:41:51,500
Next question from ML, will you show us part of the fractal set of complex numbers x for which the power tower x to the x to the x to the x converges?

442
00:41:51,500 --> 00:42:09,500
I'm so happy that you asked, ML. Yes, you might wonder what happens if instead of our base equaling two, or instead of our base equaling square root of two, or 1.4, or all the values we were just looking at, what if you have some complex number, like z, that you're raising to a repeated power?

443
00:42:09,500 --> 00:42:19,500
Now there's a little bit of nuance there for what exactly it means to raise complex values to other complex values, and I think I'm going to talk about that, don't hold me to it, I think I'll talk about that in the next lecture.

444
00:42:19,500 --> 00:42:29,500
It's very similar to what we see with real values where you can re-express it in terms of e, and then because we know how to think about e with complex numbers, you'll be able to do it.

445
00:42:30,500 --> 00:42:40,500
But if you are willing to grant the fact that there does exist a way that you can extend exponentiation to complex numbers, you could certainly repeat it.

446
00:42:40,500 --> 00:42:54,500
And when you repeat it, you can start asking about, does this converge? And if you ask about when it converges, and if you go and you write a shader or whatever your favorite kind of program is to color all the pixels on the plane based on whether or not it converges, this is what you get.

447
00:42:55,500 --> 00:43:09,500
So what you're looking at right now, the axes aren't labeled, but the real axis is running across the middle of the screen from around negative 4.5 up to I think 3, and then the imaginary axis that's going from I think negative 2i up to 2i.

448
00:43:09,500 --> 00:43:21,500
So this horizontal part of blackness corresponds to all the values that converge that we just found, where the upper bound was e to the 1 over e, and the lower bound is what you can find for homework if you want.

449
00:43:22,500 --> 00:43:34,500
But the other values above that diverge, and the coloring tells you how quickly they diverge. So yellow means that it explodes very quickly, blue means that it explodes less quickly, and so on.

450
00:43:34,500 --> 00:43:47,500
And so evidently what happens is as you allow for complex numbers, even if their real part is greater than e to the 1 over e, that imaginary part can conspire in just such a way that it makes it converge, and you get this totally intricate pattern,

451
00:43:47,500 --> 00:44:00,500
very analogous to the Mandelbrot set, which is also defined in terms of a certain repeated operation. And what this indicates is there's actually a lot more intricacy than you might expect associated with these power towers and this titration operation.

452
00:44:01,500 --> 00:44:18,500
And you get this a lot where repeated applications of something can yield chaos, and that chaos is often pictorially reflected in the fact that a fractal emerges, and it's kind of like the intricacy of the image is paralleled in the difficulty of predicting what the outputs are going to be.

453
00:44:19,500 --> 00:44:34,500
And just to illustrate the fact that the outputs can be difficult to predict, you want to know what an unsolved problem is, what no one in the world actually knows, is if you can ever take a power tower with pis, so pi to the power pi to the power pi to the power pi, you do that.

454
00:44:34,500 --> 00:44:47,500
At any point, is this ever equal to an integer? Almost certainly not, it would seem highly unlikely because it's an irrational number and if you're thinking of it kind of probabilistically, but it's not probabilistic, it's a deterministic process.

455
00:44:47,500 --> 00:45:01,500
In fact, we don't even know for a power tower of height 4, if there's just 4 pis here, you take pi to the power pi, pi to the power of that, pi to the power of that, it ends up being a monstrous number, bigger than we can compute exactly.

456
00:45:01,500 --> 00:45:11,500
We don't have a way to prove whether or not this is an integer. And if you can prove that, you know, you will be contributing to the forefront of math.

457
00:45:11,500 --> 00:45:16,500
That's the level of what we actually don't know about these power towers, which I think is kind of interesting.

458
00:45:17,500 --> 00:45:24,500
Can I share the brainteaser where the arrow operator shows up? Yeah, fantastic. Let me, I can draw it out for you.

459
00:45:24,500 --> 00:45:40,500
I think this came from an IMO, this is something that Po Chen-Lo was sharing with me at one point, and I'm sure he has a talk about it somewhere that will be more illustrative than what I can talk about on the fly here.

460
00:45:40,500 --> 00:45:48,500
But the way this will work is that we have 6 different cups, and each cup is going to start out with a single coin in it.

461
00:45:48,500 --> 00:46:04,500
And you have two different operations available to you. One of those operations is that you can remove the coin from one cup, so we'll remove it from one cup, but then two more coins will drop into the cup to its right.

462
00:46:04,500 --> 00:46:15,500
So there's a certain directionality to this. Two more will drop into the one to its right. So you could imagine from here we could then eliminate all three coins, and then there would be six that just magically drop in.

463
00:46:15,500 --> 00:46:29,500
Five, six, magically drop into the next cup beside it. And if that was the only ability that you had, kind of a warm-up teaser is to understand that the maximum number of coins you can have ends up being 63.

464
00:46:29,500 --> 00:46:36,500
If you just sort of keep doing this process of taking out coins, doubling it, but shifted one over, you can get up to 63.

465
00:46:36,500 --> 00:46:50,500
Now if I introduce the second magical operation, which is that I can eliminate one of the coins in a cup, and instead of magically dropping two into the next one, I swap the two that are sitting right after it. I swap their positions.

466
00:46:50,500 --> 00:46:57,500
That's the second power that you have, which seems less magical because it doesn't require bringing about coins from the ether.

467
00:46:57,500 --> 00:47:11,500
I think the way that this was originally framed is, is the maximum amount of money that you can have after doing this process bigger or smaller than 2010 to the power 2010 to the power 2010?

468
00:47:11,500 --> 00:47:26,500
That was the question. When you have these two abilities and you start with six cups that each have one coin in them, will it be bigger, the maximum amount of money that you can get if you're clever enough, be bigger or smaller than that power tower of height three?

469
00:47:26,500 --> 00:47:38,500
And it's just, again, kind of absurd that that second operation would get you anywhere near that level of number because this is, I mean, this is just so huge. It's way bigger than anything you'll find in physics.

470
00:47:38,500 --> 00:47:44,500
Unless you're doing statistical mechanics or something like that. So, yeah, excellent question.

471
00:47:45,500 --> 00:47:56,500
And with that, unless there's anything more that people want to ask and which also ends up getting forwarded to me, I think I'm going to go ahead and call it a day on this one.

472
00:47:56,500 --> 00:48:08,500
And thank you for joining. I think I will ultimately probably have ten episodes in this lockdown series is what I'm thinking at the moment. So if you want to join for the next two, those will be the last two.

473
00:48:08,500 --> 00:48:12,500
Oh, great. We have another question.

474
00:48:12,500 --> 00:48:19,500
When you solved X to the X to the X on and on equals two and got X squared equals two, you ignored the negative square root of two. Awesome. Yeah.

475
00:48:19,500 --> 00:48:24,500
Yeah. Solution X squared equals two. Can I explain why? Yeah, that's absolutely outstanding.

476
00:48:24,500 --> 00:48:32,500
Let's so if we think about this graphically again, where that helps us be a little bit more concrete when it comes to what's going on with the iterative process.

477
00:48:32,500 --> 00:48:36,500
When I said B equal to around one point four one.

478
00:48:36,500 --> 00:48:39,500
OK.

479
00:48:39,500 --> 00:48:43,500
It seems like nothing's really happening around the negative square root of two.

480
00:48:43,500 --> 00:48:49,500
OK, so let's try to understand why that's happening. There's not even necessarily a an intersection at that point.

481
00:48:49,500 --> 00:48:55,500
So the reason we were taking square roots of two when we were looking at our power tower operations.

482
00:48:55,500 --> 00:49:00,500
If we remind ourselves.

483
00:49:00,500 --> 00:49:08,500
We had the assumption that there even exists an answer. This whole thing, no, not with an X at the top, it just goes up to infinity equals two.

484
00:49:08,500 --> 00:49:13,500
We saw the reflection of itself. X squared equals two.

485
00:49:13,500 --> 00:49:17,500
Let's think about what this would mean. What do we mean to have a negative square root here?

486
00:49:17,500 --> 00:49:23,500
Well, I guess what you'd be assuming is that you you're taking negative powers.

487
00:49:23,500 --> 00:49:29,500
Now that I think about it, if we said X equal to the negative square root of two.

488
00:49:29,500 --> 00:49:33,500
Then you'd be raising it in the next process. You would take negative square root of two.

489
00:49:33,500 --> 00:49:39,500
You would raise it to a negative power. OK, so raising to a negative power.

490
00:49:39,500 --> 00:49:44,500
We're already in the realm of thinking about negative square root of two to the one over.

491
00:49:44,500 --> 00:49:51,500
No, negative one over square root of two to the square root of two.

492
00:49:51,500 --> 00:49:56,500
Why doesn't that end up popping up in the intersection or anything like that?

493
00:49:56,500 --> 00:50:03,500
Actually, the more I think about it, there might be a very obvious answer to what's going on that I'm missing.

494
00:50:03,500 --> 00:50:07,500
Other than I mean, we can talk about.

495
00:50:07,500 --> 00:50:11,500
We can talk about the fact that negative numbers don't sit in the range of convergence.

496
00:50:11,500 --> 00:50:18,500
Like if you solve the homework problem, the assumption that there exists an X that's negative that converges like this would be false.

497
00:50:18,500 --> 00:50:24,500
Because you'll find that the the bound ends up.

498
00:50:24,500 --> 00:50:30,500
I think it ends up being E to the negative E. So in the same way that it failed, our logic failed in the case of four.

499
00:50:30,500 --> 00:50:36,500
Our logic fails if we just plug in square root of negative two. I'm kind of curious if that breaks down numerically.

500
00:50:36,500 --> 00:50:43,500
So if we do try this over in our python, let's again set equal to one.

501
00:50:43,500 --> 00:50:50,500
Let's find our for loop. Now we're going to do the negative square root of two and repeat the process.

502
00:50:50,500 --> 00:50:58,500
Yeah, what do we get? We do get a stable point. Interesting.

503
00:50:58,500 --> 00:51:06,500
Negative square root of two. You look like you're a very stable point. You're not a stable point that's equal to two at all.

504
00:51:06,500 --> 00:51:10,500
What is that number? What's going on there?

505
00:51:11,500 --> 00:51:19,500
You know what? I'm not entirely positive. Now I have a decision to make.

506
00:51:19,500 --> 00:51:26,500
Do I try to think about what exactly is going on on screen live rather than just calling it into the stream?

507
00:51:26,500 --> 00:51:32,500
Or do I think about it and then pin that to a comment at the end?

508
00:51:32,500 --> 00:51:38,500
Let's see. What's going on with our logic exactly?

509
00:51:38,500 --> 00:51:45,500
We're saying assume that there equals a value that converges to two. If there does, it's going to satisfy this property.

510
00:51:45,500 --> 00:51:51,500
I mean, because I guess what you can say is it's like x equals plus or minus square root of two.

511
00:51:51,500 --> 00:51:55,500
You try them both. One of them equals, one of them doesn't. End of story.

512
00:51:55,500 --> 00:51:59,500
I mean, this happens a lot when you're doing something algebraic. You have a manipulation like this.

513
00:51:59,500 --> 00:52:04,500
You have multiple possibilities, but you just kind of plug them into check and one of them just doesn't work.

514
00:52:04,500 --> 00:52:10,500
But that's always very unsatisfying because what you want is some sort of answer to why it looked like it was going to work but didn't.

515
00:52:10,500 --> 00:52:14,500
So in the case of a power tower that equals four, you could very clearly see why it didn't.

516
00:52:14,500 --> 00:52:18,500
The assumption that it even converged was false.

517
00:52:18,500 --> 00:52:31,500
And I guess in this case our assumption would be if we had negative root two, if we have a negative value, that what's sitting up here is still equal to two.

518
00:52:31,500 --> 00:52:40,500
I don't know. We saw that it doesn't. We can say when you're doing this, you try them both and if one of them doesn't, that's all it is.

519
00:52:40,500 --> 00:52:44,500
But that just doesn't feel satisfying to me. So I'll think about that a little bit.

520
00:52:44,500 --> 00:52:53,500
If anyone has deeper thoughts, share them in the comments of course. I would love to hear what you have to say as sort of a like what's going on with the square root of negative two.

521
00:52:53,500 --> 00:52:59,500
What does it converge to and why does it have any relation to this process?

522
00:52:59,500 --> 00:53:08,500
Which as we already saw is a faulty line of reasoning and like a little bit shaky to just replace what's inside your infinite power tower with the assumptions you've already made.

523
00:53:08,500 --> 00:53:13,500
Yeah, I'll think on that. Excellent question and I think that's a great place to end it.

524
00:53:13,500 --> 00:53:24,500
Also, I couldn't help but notice the Twitter handle for who is asking that because this is someone who's created these super beautiful notes for all of the Lockdown series so far.

525
00:53:24,500 --> 00:53:31,500
Which I've been throwing in the video descriptions just because I'm like, yeah, this is, boy do I wish my handwriting looked anything like that.

526
00:53:31,500 --> 00:53:34,500
So if anyone wants to check them out, she's done a beautiful job.

527
00:53:34,500 --> 00:53:42,500
And with that I will actually call it an end to today's lesson. I'll see you at Friday at the same time for our second to last in the Lockdown Math series.

528
00:53:43,500 --> 00:53:49,500
Music

