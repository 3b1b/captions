1
00:00:05,800 --> 00:00:06,280
ðŸŽµMusicðŸŽµ

2
00:00:09,220 --> 00:00:10,900
Presumably you can hear this.

3
00:00:11,760 --> 00:00:13,940
There's some construction happening in the house next door,

4
00:00:14,100 --> 00:00:17,160
and for the last hour or maybe two hours or so,

5
00:00:17,560 --> 00:00:21,440
it seems like this is the ground-smashing portion of whatever construction they're doing,

6
00:00:21,780 --> 00:00:23,960
and just the whole house has been shaking,

7
00:00:24,280 --> 00:00:27,160
which you will be able to hear if they continue.

8
00:00:27,380 --> 00:00:28,560
I think it's still going on now.

9
00:00:28,560 --> 00:00:30,960
So if you're curious, that's what the sound is.

10
00:00:31,600 --> 00:00:34,420
Now in one of the intro questions that you were just answering,

11
00:00:35,100 --> 00:00:39,000
you are actually going to have your mind primed to think about what we're going to talk about today.

12
00:00:39,760 --> 00:00:42,920
This question just made me laugh so much to write it and try to think it through.

13
00:00:43,160 --> 00:00:47,000
It's asking if x is the number that most people are going to enter into this box,

14
00:00:47,440 --> 00:00:48,920
what is 2 to the x going to be?

15
00:00:49,320 --> 00:00:51,820
And it's just so mind-confuddling, because you think about,

16
00:00:52,020 --> 00:00:54,280
okay, if a lot of people are entering 1, I should enter 2,

17
00:00:54,280 --> 00:00:56,740
but everyone would think about that, so maybe I should enter 4,

18
00:00:56,740 --> 00:00:59,360
but everyone thinks about that, so I should do 2 to the 4,

19
00:00:59,740 --> 00:01:01,920
or maybe 2 to the that, or maybe 2 to the that.

20
00:01:02,440 --> 00:01:06,300
And, you know, if it was a room full of perfect logicians, you'd blow up to infinity,

21
00:01:06,720 --> 00:01:10,120
but people aren't logicians, and there is some objectively correct answer,

22
00:01:10,280 --> 00:01:13,520
and we can take a look at what the objectively correct answer is in this context.

23
00:01:13,980 --> 00:01:18,800
And it would appear most, okay, the largest number of people entered 2,

24
00:01:19,100 --> 00:01:22,180
which means anyone who entered 4 is absolutely correct.

25
00:01:22,960 --> 00:01:26,980
But in the game where you imagine thinking through, you know, the perfect logicians,

26
00:01:27,080 --> 00:01:29,060
and you're taking 2 to the 2 to the 2 to the 2,

27
00:01:29,340 --> 00:01:31,940
you're starting to think about the topic for today's video,

28
00:01:31,940 --> 00:01:35,460
which is an operation that's not typically taught in school,

29
00:01:36,240 --> 00:01:39,600
probably because it doesn't have the same level of applications as certain other ones,

30
00:01:39,760 --> 00:01:43,220
but as you'll see, there's a couple puzzles that we can start to do with it

31
00:01:43,220 --> 00:01:46,720
that absolutely bring out some very important problem-solving skills,

32
00:01:47,140 --> 00:01:50,440
and ideas of just really thinking through what terms actually mean,

33
00:01:50,440 --> 00:01:54,560
and whether or not operations that you're doing that seem to make sense

34
00:01:54,560 --> 00:01:58,940
when you do it symbolically actually make sense when you think through what's really going on.

35
00:01:59,340 --> 00:02:03,580
So this operation is called tetration, and a way you might think about it is,

36
00:02:04,100 --> 00:02:06,380
you know, we all learn about addition as one of the first things,

37
00:02:06,520 --> 00:02:11,540
the way that we can add two numbers, and multiplication, as we first see it, is repeated addition.

38
00:02:11,920 --> 00:02:15,600
A times B is A plus A plus A plus A, B different times.

39
00:02:16,420 --> 00:02:19,160
And if you say, well, what happens if we repeat multiplication,

40
00:02:19,160 --> 00:02:23,840
you know, taking A times A times A times A, B different times,

41
00:02:23,960 --> 00:02:27,360
we write it as A to the power B, and that's exponentiation.

42
00:02:27,920 --> 00:02:30,480
Now if you were to go one step further in this process and say,

43
00:02:30,900 --> 00:02:34,800
what happens if we repeat exponentiation, this has a name, we call it tetration.

44
00:02:35,260 --> 00:02:40,460
Tetra comes from the Greek for four, because it's sort of the fourth stage in this process

45
00:02:40,460 --> 00:02:42,860
of repeatedly applying the previous operation.

46
00:02:43,620 --> 00:02:45,840
And of course, in the context of things like multiplication,

47
00:02:47,200 --> 00:02:49,880
we've extended the idea beyond just counting numbers.

48
00:02:50,260 --> 00:02:52,440
So here this only makes sense if B was a counting number,

49
00:02:52,740 --> 00:02:57,080
but we do things like taking pi times E, or even complex values,

50
00:02:57,160 --> 00:02:59,980
where you can take the square root of two times one plus i.

51
00:03:00,440 --> 00:03:05,260
So we've extended it beyond repeated addition, but that's sort of its origin,

52
00:03:05,260 --> 00:03:07,260
that's the way that we often start thinking about it.

53
00:03:07,560 --> 00:03:11,800
Similarly, very famously, one thing we've been talking a fair about in this series

54
00:03:11,800 --> 00:03:16,520
is extending exponentiation with the classic Euler's formula example.

55
00:03:16,940 --> 00:03:18,720
But for right now, we're just going to think of this tetration

56
00:03:18,720 --> 00:03:22,260
in terms of repeating an integer number of times.

57
00:03:23,560 --> 00:03:29,000
Do you hear it? I swear, we were so dreading the idea that the ground-smashing day would come

58
00:03:29,000 --> 00:03:31,680
during one of the streams, but here we are.

59
00:03:32,560 --> 00:03:36,980
Now this is actually ambiguous if we don't define our terms a little bit more clearly,

60
00:03:36,980 --> 00:03:41,240
because exponentiation is not associative,

61
00:03:41,500 --> 00:03:45,520
meaning the order that we do these operations and start collapsing it matters.

62
00:03:46,040 --> 00:03:50,020
Because if I was going from left to right, let's say I was writing this as two squared,

63
00:03:50,400 --> 00:03:53,520
and then I'm going to think of squaring that, and then squaring the result,

64
00:03:53,980 --> 00:03:58,400
that will get me a different number than if I think of going from the top to the bottom.

65
00:03:58,760 --> 00:04:02,820
If the first thing I evaluate is the two to the power two at the top,

66
00:04:03,620 --> 00:04:07,560
and then I go to the next one, and we can think about why.

67
00:04:07,700 --> 00:04:10,480
Here if I'm collapsing from the bottom, that bottom part is four,

68
00:04:10,880 --> 00:04:12,780
so then I square it, and I'll square that.

69
00:04:13,380 --> 00:04:18,000
Four squared is sixteen, so I square that, and I end up getting 256.

70
00:04:18,980 --> 00:04:23,440
But on the bottom, if I start by collapsing that top term, it becomes a four.

71
00:04:24,820 --> 00:04:30,380
And then if I think of collapsing the current top term, that becomes two to the sixteen,

72
00:04:30,380 --> 00:04:35,260
and that's a much bigger number. That is 65,536.

73
00:04:36,540 --> 00:04:42,120
And in general, this process of repeatedly exponentiating, going from the top to the bottom,

74
00:04:42,220 --> 00:04:43,600
explodes very quickly.

75
00:04:44,380 --> 00:04:47,120
And tetration in general refers to the top to the bottom part,

76
00:04:47,160 --> 00:04:49,440
so we start evaluating at the top, and we work down.

77
00:04:50,000 --> 00:04:54,220
If you want to make that crystal clear, I think instead of drawing it as a power tower,

78
00:04:55,140 --> 00:04:59,360
one thing that you could do is define the iterative process very exactly.

79
00:04:59,860 --> 00:05:03,460
You might say we have some value that we're going to start out at one,

80
00:05:03,880 --> 00:05:08,460
and then each successive value is going to be two to the power of the previous thing.

81
00:05:09,280 --> 00:05:10,980
So a sub one would just be two.

82
00:05:11,760 --> 00:05:15,440
a sub two is going to be two to the power of whatever a sub one was,

83
00:05:15,740 --> 00:05:17,060
which in this case is two squared.

84
00:05:18,160 --> 00:05:22,620
a sub three is going to be two to the power of whatever a sub two was,

85
00:05:22,820 --> 00:05:25,040
which now is two to the two to the two.

86
00:05:25,380 --> 00:05:28,520
And there's no more ambiguity for what the order of operations should be,

87
00:05:28,520 --> 00:05:30,860
because you see that it came from the a two term,

88
00:05:30,920 --> 00:05:33,480
so we should first be evaluating what's in the top.

89
00:05:34,400 --> 00:05:36,000
And similarly, if you go on like this,

90
00:05:36,540 --> 00:05:42,500
and a sub n for any value n is equal to two to the previous term,

91
00:05:42,720 --> 00:05:43,720
a sub n minus one,

92
00:05:44,460 --> 00:05:48,500
when you unfold this expression and kind of go back in our recursive definition,

93
00:05:49,340 --> 00:05:53,280
what you're going to get is a power tower of two n different times.

94
00:05:54,960 --> 00:05:56,840
Now another thing that's nice about writing it like this

95
00:05:56,840 --> 00:05:58,140
is we can become experimental.

96
00:05:58,620 --> 00:06:01,620
And as you all know, I love to encourage people to be very playful

97
00:06:01,620 --> 00:06:03,860
when you come across a new operation like this.

98
00:06:04,340 --> 00:06:07,000
And a lot in this series, we've just been pulling up some Python to do that.

99
00:06:07,260 --> 00:06:08,360
So let's do that here.

100
00:06:08,500 --> 00:06:11,660
Let's take this iterative process and see what it actually looks like.

101
00:06:12,220 --> 00:06:15,440
So I will go over to my terminal, I will open up some Python,

102
00:06:16,420 --> 00:06:19,180
I will set an initial value of a to be one,

103
00:06:19,680 --> 00:06:23,000
and then what I want to do is take a look at two to the power of that,

104
00:06:23,360 --> 00:06:25,760
but I'm going to reassign that value into a.

105
00:06:25,760 --> 00:06:29,180
So this double asterisk, that's how we take powers in Python.

106
00:06:29,700 --> 00:06:32,880
And then in a lot of programming languages, a single equal sign,

107
00:06:33,460 --> 00:06:36,660
it's not a question, it's not asking if they're equal, it's an operation.

108
00:06:36,920 --> 00:06:38,780
It's saying take whatever's sitting on that right side

109
00:06:38,780 --> 00:06:40,400
and shove it into the left value.

110
00:06:41,060 --> 00:06:46,280
So when we do this, it reassigns the value of a to be two to whatever it was before.

111
00:06:46,840 --> 00:06:49,160
This can be bizarre to people who haven't done programming

112
00:06:49,160 --> 00:06:53,160
because it seems like you have an equation that you're solving for something.

113
00:06:53,160 --> 00:06:55,920
But in this case, the left-hand side is getting changed.

114
00:06:55,960 --> 00:06:57,480
It's an operation on it.

115
00:06:57,640 --> 00:07:00,480
So if I do that again, I take that same process

116
00:07:00,480 --> 00:07:03,740
of turning a into two to the power of whatever it was before,

117
00:07:03,800 --> 00:07:05,720
and then I'll just print it out in the same line

118
00:07:05,720 --> 00:07:08,820
so we can say it turns into four, that turns into 16,

119
00:07:09,460 --> 00:07:12,540
that is going to turn into, you can try to make a prediction here,

120
00:07:12,620 --> 00:07:16,840
it will turn into two to the 16, which we just saw was 65,536.

121
00:07:17,540 --> 00:07:21,120
If I take one more step, which would be a power tower of height five,

122
00:07:21,120 --> 00:07:25,080
so just five twos stacked on top of each other, it totally explodes.

123
00:07:25,780 --> 00:07:29,900
It's just this monstrous number, which I think it's awfully kind of Python

124
00:07:29,900 --> 00:07:31,820
to even do the work to find the number for us.

125
00:07:31,820 --> 00:07:32,940
I'm impressed with it.

126
00:07:33,240 --> 00:07:38,180
And if we wanted, we could say, okay, think of that number as a string,

127
00:07:38,280 --> 00:07:42,980
what's the length of that string, and it's telling us the number of digits that are in it.

128
00:07:42,980 --> 00:07:48,100
So the number we have there is a 19,000-digit expression, just monstrously huge.

129
00:07:48,760 --> 00:07:51,040
And if we were to try one more iteration of this,

130
00:07:51,280 --> 00:07:55,440
turning a into two to the power of that 19,000-digit monstrosity,

131
00:07:56,620 --> 00:07:59,940
you would not be able to store the information required for that number.

132
00:08:00,140 --> 00:08:04,840
Any way that you were using matter to encode all the digits of whatever would come out,

133
00:08:05,080 --> 00:08:09,320
if that was within the confines of something like the radius of the Earth,

134
00:08:09,540 --> 00:08:13,400
you would absolutely create a black hole in any attempt to store that kind of information.

135
00:08:13,780 --> 00:08:15,220
So just a power tower of height six,

136
00:08:15,220 --> 00:08:19,440
and it's well beyond what you can literally physically convey in any kind of way.

137
00:08:21,260 --> 00:08:26,100
So you might ask, how quickly does this thing blow up for other numbers, if it's not two?

138
00:08:27,180 --> 00:08:30,080
And one thing that I'm going to ask you, actually just in the live poll,

139
00:08:30,140 --> 00:08:33,400
let's go ahead and pull it up, is to predict what's going to happen here

140
00:08:33,400 --> 00:08:36,700
if instead of two we were dealing with 1.1.

141
00:08:37,280 --> 00:08:40,680
So if you go to the link that's in the description and up on the screen

142
00:08:41,180 --> 00:08:44,300
to answer the live questions along with us, we are asked,

143
00:08:44,300 --> 00:08:47,940
let B equal 1.1, so just a little above one,

144
00:08:47,940 --> 00:08:52,680
and consider an expression of the form B to the B to the B to the B, this power tower,

145
00:08:53,200 --> 00:08:56,580
and its height is n, meaning you'll see n different copies of B.

146
00:08:57,200 --> 00:09:01,620
How big does n have to be? How many times do you have to repeat this operation

147
00:09:01,620 --> 00:09:05,360
before the value of the expression has more than ten digits?

148
00:09:06,260 --> 00:09:10,180
So with two, we had to get to a tower of size five before that happened.

149
00:09:10,300 --> 00:09:13,860
It jumped from being a five-digit number to a 19,000-digit number.

150
00:09:13,860 --> 00:09:18,320
So how many times would you have to do it for a value of B equals 1.1?

151
00:09:19,040 --> 00:09:21,960
And I'll give you a moment to answer that while we listen to the soothing tones

152
00:09:21,960 --> 00:09:24,120
of construction maybe slowing down.

153
00:09:28,660 --> 00:09:33,700
And just to illustrate this process here, if we hop back over to Python,

154
00:09:34,380 --> 00:09:38,820
and let me just pop on over here, get back into my terminal,

155
00:09:39,220 --> 00:09:42,800
let's say I started A at a value of one. Let's just do this in a for loop.

156
00:09:42,800 --> 00:09:47,700
So for n in some kind of range like 50. I'm going to reassign A.

157
00:09:48,420 --> 00:09:53,580
What if instead of doing repeated exponentiation, I was just repeatedly multiplying it by 1.1?

158
00:09:53,840 --> 00:09:57,220
So just repeated multiplication, which should be exponentiation.

159
00:09:57,680 --> 00:09:59,460
You can get a sense of how quickly that grows.

160
00:09:59,920 --> 00:10:05,780
And if we take a look here at the first 50 values, you know, it starts at 1.1, it goes to 1.21,

161
00:10:06,160 --> 00:10:10,300
and at each stage it's actually growing just by a little bit, by 10% with each jump,

162
00:10:10,300 --> 00:10:15,300
and you get classic exponential growth. So with 50 steps it took us up to 117.

163
00:10:16,780 --> 00:10:21,100
That's exponential growth. So you might wonder what is tetrational growth?

164
00:10:21,220 --> 00:10:23,780
What happens if we're repeatedly exponentiating this thing?

165
00:10:25,220 --> 00:10:27,860
And before I answer that, let me see what you think.

166
00:10:27,960 --> 00:10:33,080
What do you think is going to happen here if we repeatedly exponentiate this?

167
00:10:34,920 --> 00:10:42,220
Okay. So the correct answer is that it actually never grows past anything like that.

168
00:10:42,980 --> 00:10:45,260
And, ah, interesting, that's the third placed answer.

169
00:10:45,520 --> 00:10:50,520
So most of you thought that the height that you would need would be between 10 and 100.

170
00:10:50,860 --> 00:10:53,740
Doing it between 10 and 100 times, that would blow you up past 10 digits.

171
00:10:54,340 --> 00:10:59,740
The second most common answer was thinking it was between 1 and 10, which would be very analogous to how 2 was growing.

172
00:11:00,760 --> 00:11:04,860
Third most common, and I'm wondering how many of those third most common people have seen this process before,

173
00:11:04,980 --> 00:11:10,980
because it's very weird the idea that repeatedly multiplying it by itself, that'll grow as much as you want,

174
00:11:11,260 --> 00:11:16,060
but that somehow doing what feels like a much more powerful operation, repeatedly exponentiating,

175
00:11:16,340 --> 00:11:17,880
that actually stays confined.

176
00:11:19,020 --> 00:11:23,640
And we can see this bear out in practice if we hop back over to our Python,

177
00:11:24,040 --> 00:11:29,220
where now what I'm doing with each iteration, and I guess I should set a to b, 1 again,

178
00:11:29,220 --> 00:11:32,440
I'm going to repeatedly turn it into 1 to the power of itself.

179
00:11:32,940 --> 00:11:38,020
And what we get is a little bit of initial growth, but it quickly slows down,

180
00:11:38,120 --> 00:11:41,940
and just within 20 iterations it actually stays fixed at this value.

181
00:11:42,120 --> 00:11:44,080
You can see that this digit isn't changing.

182
00:11:44,560 --> 00:11:48,460
And if you think through what's going on there, evidently when a is equal to that value,

183
00:11:48,760 --> 00:11:55,940
and you take 1.1 to the power of that value, so 1.1 to the power of this thing, that's 1.1117,

184
00:11:55,940 --> 00:12:01,040
ah, don't type it too many times, that actually stays fixed.

185
00:12:01,460 --> 00:12:03,400
You get the same value that you had before.

186
00:12:04,040 --> 00:12:12,180
So another way that we can phrase this is to say that the equation 1.1 to the power x equals x,

187
00:12:12,780 --> 00:12:16,200
something where when you plug it into the function you get itself, this has a solution.

188
00:12:17,500 --> 00:12:19,980
This didn't hold when we were doing it with 2.

189
00:12:20,400 --> 00:12:24,320
If we had 2 to the x equals x, if you try to think through different answers to this,

190
00:12:24,320 --> 00:12:29,660
it's a funky equation to think about, but if you just try out some values like 0 and 1 or anything in between,

191
00:12:29,880 --> 00:12:34,260
you'll find there's actually no answer here, whereas evidently we just saw an answer in this case.

192
00:12:34,700 --> 00:12:39,880
And what that means for our iterative process, if instead of 2 at the base it was 1.1 at the base,

193
00:12:40,220 --> 00:12:46,400
you'd have this situation where the previous value, you raise 1.1 to that, it just stays fixed.

194
00:12:46,840 --> 00:12:48,860
And now this starts raising a lot of interesting questions.

195
00:12:48,860 --> 00:12:57,580
First of all, where's the switch? What number between 1 and 2 is the point where it goes from staying finite to blowing up?

196
00:12:57,760 --> 00:13:04,460
And blowing up incredibly quickly at that. Remember with 2 it only took us 5 iterations before we had something that was, you know,

197
00:13:04,920 --> 00:13:09,080
beyond what the computer could handle. And we could play around with this a little bit,

198
00:13:09,200 --> 00:13:18,720
but I think another interesting product of the fact that this can convert at all is we can start answering what look like very bizarre questions.

199
00:13:18,720 --> 00:13:26,800
Where I can say, imagine I have an unknown value x, and I do not a power tower of some finite size, but of an infinite size.

200
00:13:26,920 --> 00:13:31,860
I'm going to keep going forever in the same way that evidently I can do with a base of 1.1.

201
00:13:32,720 --> 00:13:38,480
Can I find a value of x where this converges? For example, to 4. This is the question posed in the thumbnail of the video.

202
00:13:39,140 --> 00:13:45,640
And what we just saw is that we could find a value that converges to 1.111782, on and on.

203
00:13:45,640 --> 00:13:49,620
That's evidently a value you can converge to, and the solution would be 1.1.

204
00:13:49,800 --> 00:13:56,940
But how do you go the other way around? How can we actually solve for the idea that we can find a value of x that equals 4?

205
00:13:57,980 --> 00:14:05,820
And there's a clever trick here that you might spot. And this comes up in certain problem solving kinds of math where you have this infinite expression,

206
00:14:06,240 --> 00:14:11,920
and you say, hmm, there's some self-similarity I can leverage. There's a copy of the entire power tower inside itself.

207
00:14:11,920 --> 00:14:19,680
Because it's infinite, it's a genuine copy of itself. It doesn't have a height of 1 minus whatever the previous height was.

208
00:14:19,860 --> 00:14:30,400
Because the height is infinity. And under the assumption that the whole power tower equals 4, I could replace that with a 4 and solve x to the fourth equals 4.

209
00:14:31,380 --> 00:14:35,600
Let's see, what would that be? If I take square roots, that's the same as saying x squared equals 2.

210
00:14:36,080 --> 00:14:44,840
So it looks like, interesting, x equals square root of 2 gives me a power tower that should converge to 4.

211
00:14:45,320 --> 00:14:54,940
Kind of funky. The idea that anything converges at all is sort of weird, but the idea that, you know, square root of 2 would go to a clean value, like an integer, that's kind of surprising.

212
00:14:55,420 --> 00:15:04,520
And let me actually ask you another question where I'm going to have you apply the same tactic that we just did, leveraging that self-similarity to solve another one of these situations,

213
00:15:04,520 --> 00:15:11,280
where you're looking for a power tower with an unknown base and seeing when it equals a pre-specified value.

214
00:15:12,280 --> 00:15:17,040
So this time the question is going to ask us, if we give it just a little moment to pull up here.

215
00:15:19,020 --> 00:15:27,400
Well, it's taking a little moment, which is fine. Ah, great. The question asks us, using the tactic just demonstrated, what I just did for 4,

216
00:15:28,180 --> 00:15:32,800
solve the equation x to the x to the x on and on up to infinity equals 2.

217
00:15:33,960 --> 00:15:36,400
So I'll give you a moment to think that through.

218
00:15:57,500 --> 00:16:07,720
The ground smasher is back. Man, yesterday when we were doing it, we, uh, I wish I had the footage to show you. Maybe I can try to pull it up on my phone or something.

219
00:16:07,720 --> 00:16:18,980
But the things were shaking so much that just a pile of circuit boards was actively shaking. Let me see if I can find this. It's super funny.

220
00:16:20,180 --> 00:16:28,380
Alright, this might not, this is probably the worst way to stream something, is to take an overhead camera shot of a phone.

221
00:16:28,980 --> 00:16:37,240
But let me see if this works decently well. So I was trying to get a view of the construction. We move over and just the pile of circuit boards is just jittering like that.

222
00:16:37,240 --> 00:16:40,880
And that's what we have to deal with. So, hope you enjoy.

223
00:16:41,840 --> 00:16:46,660
Now on the quiz, it looks like just about everybody is converging around the same answer.

224
00:16:47,220 --> 00:16:52,420
And I'm going to assume you've landed on the correct answer, which is in fact the square root of 2.

225
00:16:52,960 --> 00:17:00,100
Which is kind of a funny thing, because if we go and we do exactly the same logic that we were doing for solving for 4,

226
00:17:00,100 --> 00:17:06,040
where we have this infinite power tower and we're assuming that it equals 2 and we recognize the self-similarity,

227
00:17:06,040 --> 00:17:13,980
we're like, ah yes, the power tower, copy of it in itself, so that should mean x squared equals 2, that means x equals the square root of 2.

228
00:17:15,080 --> 00:17:23,620
Well hang on a second, this can't be right. Because on the one hand this seems to be suggesting that an infinite power tower converges to 2 when the base is root 2.

229
00:17:23,800 --> 00:17:27,860
But on the other hand it converges to 4 when the base is root 2. It can't be both.

230
00:17:28,160 --> 00:17:33,360
We've got a very deterministic process up here for what it converges. So it's got to be just one of them, if any.

231
00:17:33,360 --> 00:17:41,340
Maybe the entire logic of the situation is false. So let's get empirical. Let's turn to our programming to see which one of these it actually ends up being.

232
00:17:42,180 --> 00:17:48,660
So I'll hop back over, I will reassign my variable a to be 1, I'm going to make my little loop.

233
00:17:49,140 --> 00:17:56,700
Actually let's import math because I'm going to need a square root here. So I'm going to say for, I don't know, we'll just do 20 at a time.

234
00:17:56,700 --> 00:18:04,100
I'm going to take a, turn it into the square root of 2, square root of 2 to the power of a, print out what it looks like.

235
00:18:04,140 --> 00:18:06,980
Guess I don't need that semicolon but it doesn't really matter.

236
00:18:07,760 --> 00:18:12,100
And it looks like for those first 20 iterations it does kind of slow down as it approaches 2.

237
00:18:12,300 --> 00:18:17,120
And if I do another 20 iterations it's definitely slowing down as it gets to 2.

238
00:18:19,080 --> 00:18:27,540
Definitely, alright. And now it does something kind of bizarre where it seems like it lands exactly on 2 but then it jumps up to 2.0004.

239
00:18:27,840 --> 00:18:32,920
Which if you think through what's going on here, at some point it equals 2. So we're saying a equals 2.

240
00:18:33,880 --> 00:18:40,200
And then we're taking the square root of 2 to the power of that. But square root of 2 to the power of 2 by definition should be 2.

241
00:18:40,200 --> 00:18:48,440
So that's going to be just some simple numerical error. I guess, however, the math square root library is implementing square roots.

242
00:18:49,060 --> 00:18:54,220
You know, there's always going to be a little bit of numerical error with floating points. So when we square it we don't exactly get 2 back.

243
00:18:54,420 --> 00:19:04,960
That's fine, not a problem. But it does seem to suggest that the correct answer to our question of what happens when we have a power tower with root 2 is that it equals 2.

244
00:19:04,960 --> 00:19:11,560
Or that the sequence of numbers that this represents approaches 2. What's wrong with the other logic though?

245
00:19:12,140 --> 00:19:15,040
What's wrong with the logic that seemed to imply that it should equal 4?

246
00:19:16,080 --> 00:19:27,860
Well to answer that we should do two things. First is to represent this thing a little bit more visually, a little bit graphically so we can try to understand what is going on with this iterative process.

247
00:19:27,860 --> 00:19:40,480
And then from there understand which values will converge and which values will blow up. And by answering that we can get back in the direction of what's wrong with the logic associated with having this thing approach 4.

248
00:19:41,340 --> 00:19:50,640
So for that let's take a look over at our good friend Desmos. So pop on over here, open up Chrome. Not look at that yet, that is 4 later.

249
00:19:51,860 --> 00:20:01,820
And we will just take a look at a graph here. So what I have is the line y equals x. I've got a function b to the power x and I've set b to be 2.

250
00:20:02,020 --> 00:20:11,660
So we're just looking at the graph of 2 to the x. And to think about the idea of repeatedly applying a function and kind of taking the output and then plugging it back into the input.

251
00:20:11,660 --> 00:20:24,080
We can draw what's commonly known as a cobweb diagram. The way this will work is I have an initial value of 1 as the input and then the next value is going to be whatever f of 1 is.

252
00:20:24,180 --> 00:20:32,780
I'm going to plug in 1 to the function. And what that means is I move vertically until I hit the graph and in this case 2 to the 1 is just 2.

253
00:20:32,800 --> 00:20:40,240
So I'm going to hit it at a y value of 2. But from there what I want is the output that I just got, that 2, to become an input to the function.

254
00:20:40,240 --> 00:20:49,500
But if outputs are represented on the y axis and inputs are on the x axis, what I need is some point where the y value is the same as the x value.

255
00:20:50,040 --> 00:20:57,080
So if I walk horizontally until the y value is the same as the x value, I'll get to a point where 2 is the x value.

256
00:20:57,360 --> 00:21:03,280
Where I can now think of that 2 as being the input. And to do that I walk until I hit the line y equals x.

257
00:21:03,280 --> 00:21:11,040
Because once I hit that I'm looking at 2 comma 2. So I can treat that 2 as an input by moving vertically until I hit the graph.

258
00:21:11,380 --> 00:21:20,080
You can see how that works. Meaning the next point in our iterative process is going to be 2 to the power of what we just had, which is 2 squared or 4.

259
00:21:20,760 --> 00:21:28,480
And then I move over to the right, turning my output into an input, looking for what point on the plane has an x value that's also equal to 4.

260
00:21:28,480 --> 00:21:36,100
Then once I hit that, I kind of think of bouncing off of this line, y equals x, and moving vertically until I hit the graph again.

261
00:21:36,540 --> 00:21:42,020
And this time it's not until 16 that I hit the graph. And then I move to the right until x also equals 16.

262
00:21:42,480 --> 00:21:49,580
And then from there, I have to go quite a while, quite a while moving vertically, but it will happen quite a while.

263
00:21:49,880 --> 00:21:57,320
And around 65,000 it intersects the graph again. And then it's going to move to the right until we get to an x coordinate that's also 65,000.

264
00:21:57,320 --> 00:22:01,620
And from there, Desmos just totally gives up on trying to draw the next vertical line.

265
00:22:01,720 --> 00:22:09,020
Because as we saw, what it would have to get to is a height where the number describing that height is a 19,000 digit number.

266
00:22:09,100 --> 00:22:10,840
So it just gives up on us there.

267
00:22:11,520 --> 00:22:18,640
But when we think in terms of these cobweb diagrams, now if I start playing with what is that base, you can see what's going to happen.

268
00:22:20,000 --> 00:22:22,820
What is that base? The base is the ground-smashing activity.

269
00:22:23,920 --> 00:22:26,720
At some point, the graphs actually cross each other.

270
00:22:27,280 --> 00:22:33,260
So in particular, we were looking at 1.1 earlier, and that, yeah, they absolutely cross.

271
00:22:33,460 --> 00:22:45,720
But even up to around 1.41, which is around the square root of 2, if you look at what happens with this process, we look at the output, turn the output into an input, look at the new output, output into an input, and bounce back and forth.

272
00:22:46,060 --> 00:22:50,680
We're bouncing towards the value where these graphs intersect each other.

273
00:22:51,380 --> 00:22:56,540
Towards the value where b to the power x is equal to x.

274
00:22:57,520 --> 00:23:05,900
And in particular, if that base was the square root of 2, and I say find a solution of square root of 2 to the power x equals x,

275
00:23:06,660 --> 00:23:13,360
you know, it's not easy to think about how you solve this systematically, but for this particular case, you would believe me if I told you that the solution is x equals 2.

276
00:23:13,660 --> 00:23:15,080
You can just plug that in and solve it.

277
00:23:15,500 --> 00:23:22,460
So if we look at our graph, if b, actually let's go ahead and make it precisely the square root of 2 rather than just an approximation here.

278
00:23:22,980 --> 00:23:27,900
So b is going to be the square root of 2, no, of 2.

279
00:23:28,720 --> 00:23:32,860
The intersection point is exactly at 2, so you see your iterative process approaching that.

280
00:23:33,400 --> 00:23:34,360
Okay, that's kind of interesting.

281
00:23:34,360 --> 00:23:44,940
This also shows us how we're going to need to think about it if we want to be, if we want to understand where the switch happens between when things converge and when things don't converge.

282
00:23:46,180 --> 00:23:58,200
Because what we want is knowing what value of b should I go to where things can escape, there is no intersection point, to where things don't escape, where there is an intersection point.

283
00:23:58,780 --> 00:24:06,580
And by the way, I've left the link to this particular Desmos graph in the description, so if you want to hop down there and just play along, you're more than welcome to.

284
00:24:07,240 --> 00:24:15,500
One thing I should specify, the fact that they intersect, that's actually not enough to ensure that this cobweb iterative process necessarily converges.

285
00:24:15,780 --> 00:24:22,480
It's important that the graph of our function, which in this case is b to the x, intersects at a slope that's less than 1.

286
00:24:22,480 --> 00:24:24,440
And we can think about why that's true.

287
00:24:25,300 --> 00:24:34,200
If I turn a new leaf, let's say I wasn't dealing with exponential functions or curves like that, I was just dealing with any generic function.

288
00:24:34,940 --> 00:24:44,500
So look at the line y equals x, and let's say I have some function which, you know, it squiggles along and it intersects it but with a slope greater than 1.

289
00:24:45,060 --> 00:24:52,880
Then when we do our iterative process, we'll have some output and we say let's turn it into an input by walking horizontally until we hit y equals x.

290
00:24:53,280 --> 00:24:57,640
Look at the new output by walking vertically. Smash, smash, smash.

291
00:24:58,440 --> 00:25:05,860
Look at the new input, or turn that output into an input by walking horizontally until we hit it.

292
00:25:06,660 --> 00:25:07,660
And then repeat that process.

293
00:25:07,980 --> 00:25:14,240
You can see that's what's happening because it intersected with a slope greater than 1, we're actually walking away from the intersection point.

294
00:25:14,240 --> 00:25:22,160
So to make sure that it's not just a stable point, it's not just a common point between the graphs, but it's stable when you repeat this process.

295
00:25:22,300 --> 00:25:23,900
That slope does need to be less than 1.

296
00:25:24,200 --> 00:25:27,440
I have a whole video about another perspective on how to think about this kind of process.

297
00:25:27,960 --> 00:25:38,380
I think I gave it an absurd title, like what they won't teach you in calculus, but if you want to see more examples of this and fun, infinite iterated objects, that's a place that you can turn to.

298
00:25:39,220 --> 00:25:43,680
Now, in our case, it is the case that the slope is less than 1, so that works.

299
00:25:44,640 --> 00:25:47,720
Although, on the second intersection point, that's actually a slope greater than 1.

300
00:25:47,880 --> 00:26:03,760
So if I changed the iterative process where my first value wasn't 1, but in this case if I made it 4, then my iterative process would actually run away from the intersection point, like you can see, and it will indeed blow up to infinity.

301
00:26:03,760 --> 00:26:05,620
So that's always fun.

302
00:26:06,100 --> 00:26:07,300
I'll change that back to a 1.

303
00:26:08,420 --> 00:26:18,600
You can take a look at my little note for being annoyed that you can't do four loops of recursion in Desmos definitions, and you can see what we need to solve.

304
00:26:18,800 --> 00:26:33,260
One thing that's kind of fun here is at 1.45, which seems just above a point where they actually intersect, you have this bouncing and bouncing that just stays somewhat stable for such a long time before it eventually blows up.

305
00:26:33,260 --> 00:26:38,840
And imagine trying to think about this not graphically, but if you were just playing around with it numerically.

306
00:26:39,040 --> 00:26:49,500
So if we had taken the same process we did before, where A starts out at 1, we're going to do a bunch of iterative exponentiating, but we're going to make it 1.45 instead.

307
00:26:50,320 --> 00:26:52,600
And let's give ourselves like 50 values for this one.

308
00:26:53,580 --> 00:26:56,920
The process eventually blows up. It gives us this overflow error.

309
00:26:57,280 --> 00:27:02,280
But the processes would be very confusing if you didn't have any visual for what's going on.

310
00:27:02,280 --> 00:27:11,440
It starts at 1.45, it grows, it stays kind of not stable, but it doesn't seem to be moving that much in the 2.71828 region.

311
00:27:11,880 --> 00:27:15,040
For some reason around there it just seems awfully slow moving.

312
00:27:15,340 --> 00:27:19,500
But as it starts to get a little bit bigger into the 3 region it stays there for a while.

313
00:27:19,840 --> 00:27:21,340
The 4 region there's two values.

314
00:27:21,780 --> 00:27:27,400
Then 6, and then 9, and then 39, and then it just blows up to 2 million after that.

315
00:27:27,500 --> 00:27:29,680
And then from there it's bigger than what the computer can handle.

316
00:27:29,680 --> 00:27:34,820
So that would be deeply confusing, except we have a nice understanding of what's going on.

317
00:27:35,000 --> 00:27:37,420
The graphs almost touch, but they don't quite.

318
00:27:38,100 --> 00:27:42,600
So somewhere between 1.44 and 1.45 is what we're looking for.

319
00:27:43,280 --> 00:27:52,120
And you might think of this now in terms of calculus, where what we want is to know when the tangent of this graph is the same as the line y equals x.

320
00:27:52,440 --> 00:27:57,120
When does the graph b to the x lie tangent to the line y equals x?

321
00:27:57,840 --> 00:28:02,220
And rather than me setting up the equations that we need to solve for that, I'm going to have you do the same.

322
00:28:02,620 --> 00:28:07,200
I'm going to have you take a look at this condition of looking for a value of b.

323
00:28:08,620 --> 00:28:11,580
Well let's just read what the question asks us more specifically.

324
00:28:13,300 --> 00:28:20,420
We want a value of b such that the graph of y equals b to the x sits tangent to the graph y equals x.

325
00:28:21,000 --> 00:28:24,860
Which of the following represents the pair of equations that we need to solve?

326
00:28:25,560 --> 00:28:30,910
Okay, so take a moment to think about this. Which of the following is the pair of equations that we need to solve?

327
00:28:48,790 --> 00:28:52,350
While you're thinking about that, I'll go ahead and take a couple questions from the audience.

328
00:28:54,150 --> 00:28:54,950
We have...

329
00:28:54,950 --> 00:29:00,670
So immediately I wondered, repeat-detectration is pentation. Or is that even a useful idea?

330
00:29:01,610 --> 00:29:06,630
Yeah, there's this whole notation that talks about the idea of repeating these processes.

331
00:29:07,170 --> 00:29:11,030
It's called Knuth arrow notation. And you can kind of have as many as you want.

332
00:29:11,590 --> 00:29:20,530
So the way this works is that if I write something like a arrow b, that's the same thing as a to the power b.

333
00:29:20,530 --> 00:29:28,270
But then a with two arrows is the repetition of that process. You know, b times.

334
00:29:30,790 --> 00:29:33,250
And, sorry, that's a two arrows and then a b.

335
00:29:33,670 --> 00:29:41,030
If I had three arrows, three arrows and then a b, then what I'm repeating is the process of doing a double arrow.

336
00:29:41,130 --> 00:29:46,790
Which is really mind-warpingly big as you start to think about it for numbers. Even numbers like two and three.

337
00:29:46,790 --> 00:29:52,070
The idea of repeating this process some number of times is just crazy.

338
00:29:52,410 --> 00:29:54,530
And you could just keep going with more and more arrows.

339
00:29:54,890 --> 00:30:01,610
And if any of you have not learned about Gram's constant, go over to that number file right now and see how Gram's constant is defined.

340
00:30:01,670 --> 00:30:05,770
Because it involves these sort of arrow operations and it's genuinely crazy.

341
00:30:05,770 --> 00:30:10,350
And it's one of the most mind-blowing moments you'll have in your mathematical life the first time you see Gram's constant.

342
00:30:10,730 --> 00:30:11,490
So I would recommend.

343
00:30:12,710 --> 00:30:19,350
Alright, so next we have for 1.1 to the power x equals x, Wolfram Alpha yields two real solutions.

344
00:30:19,590 --> 00:30:25,790
Ooh, excellent question. One of them is the one that we converge to. The other is around 38.29.

345
00:30:26,130 --> 00:30:30,510
Awesome. What's the deal with that second solution? We can take a look exactly in the graph that we have.

346
00:30:30,730 --> 00:30:35,850
So if we take b and we make it 1.1.

347
00:30:36,430 --> 00:30:45,270
Okay. It's what I was talking about how at the place where it intersects with a slope greater than one, yeah, it's a fixed point for our iterative process.

348
00:30:45,350 --> 00:30:49,930
But it's not a stable fixed point. So up here is that 38 value that you were just referencing.

349
00:30:50,550 --> 00:30:59,210
And because it intersects at a slope that's bigger than one, even if you were to seed the process with a value that's really near there, it would run away from that value.

350
00:30:59,210 --> 00:31:07,450
So if you're seeding the process, if you're starting off at a value of a equals one, this is the intersection point that it'll end up finding. That's an outstanding question.

351
00:31:08,410 --> 00:31:17,190
And third, are there practical use cases for such an operation as tetration? I've studied very scientific branch and have never come across this operator. I'm very curious.

352
00:31:17,190 --> 00:31:31,730
Okay, so that is a spot on question. So I will talk a little bit about a role with chaos and fractals at the end, which is tenuous at best because it's saying it's related to other things which themselves are useful.

353
00:31:32,510 --> 00:31:37,970
I can't personally think of a place where you're out in the wild doing science and then boom, tetration pops up.

354
00:31:37,970 --> 00:31:45,830
I can think of a puzzle, like a sort of brainteaser type puzzle where you would not at all think this operation comes up, but it does.

355
00:31:46,070 --> 00:31:54,150
Which, if we have time at the end, I think I might share with you. I would say the motivation for learning this kind of thing right now is, pardon the scene switching chaos there,

356
00:31:55,050 --> 00:32:04,170
is just that the process for actually solving the puzzles that are sitting in front of us, understanding what was up with the repeated tower equaling four, and understanding what we're about to find,

357
00:32:04,170 --> 00:32:14,390
and where is the switching point between things converging and things not converging. Those are problem solving tactics that carry over into other things you might do that involve more practical iterative processes.

358
00:32:14,610 --> 00:32:19,450
And iterative processes absolutely do come up all throughout science. I mean, chaos theory is like the big one there.

359
00:32:20,670 --> 00:32:30,010
So with all of that as the answering people's question side, and I'll take more through Twitter as we go and probably do more of that at the end, let's see how you've done on our problem.

360
00:32:30,570 --> 00:32:42,210
So we're looking for a system of equations here, and the correct answer, which 1777 of you got, I think that's not quite French Revolution territory, but American Revolution territory of you,

361
00:32:42,930 --> 00:32:50,490
we got b to the x equals x, so we need them to intersect, and then moreover what we want is the slope to be the same where they do intersect.

362
00:32:51,090 --> 00:33:01,010
And the derivative of b to the x is itself, but scaled by the natural log of b, and we want that slope to equal one, because it's got to be the same as the slope of the graph we're just looking at.

363
00:33:01,690 --> 00:33:17,490
And if ever you don't remember what the derivatives of your exponential functions are, if you do remember that e to the x is its own derivative, which if there's any one thing you remember in calculus with respect to e to the x, it should be that e to the x is its own derivative.

364
00:33:18,310 --> 00:33:31,110
Note that we can write b as e to the natural log of b, so then all of that to the x, so this is the same as expressing e to the natural log of b times x, we talked about this I think last lecture,

365
00:33:31,110 --> 00:33:49,810
so then if you want to take the derivative of this, take its derivative, on the one hand it should be the derivative of this, which by the chain rule is that constant sitting in the exponent, natural log of b times itself, e to the ln b times x.

366
00:33:50,490 --> 00:33:56,050
So what we're looking at is, okay it should be itself, but scaled by something, and that something was the natural log of b.

367
00:33:56,910 --> 00:34:10,870
Now for our puzzle of understanding when is it that our graph is going to nicely lie tangent to y equals x, let's solve this equation, this system of equations actually.

368
00:34:10,870 --> 00:34:25,750
Because we're looking for the value x where that solution happens, we know that the curve b to the x equals x at that point, and we know that its slope, the natural log of b times itself, is equal to one.

369
00:34:26,850 --> 00:34:40,890
Now to solve this, the first thing I might do is note that I can simplify b to the x as being x, so I would apply that over here, and I can write the natural log of b times x is equal to one.

370
00:34:41,990 --> 00:34:53,270
And what that gives me is that b is the same as one divided by x, all very nice, no no no, it doesn't give me that, it gives me that the natural log of b is one over x.

371
00:34:54,510 --> 00:35:01,330
That is the same statement as saying e to the one over x is equal to b.

372
00:35:02,790 --> 00:35:12,770
Alright, now what does that buy us? Well it gives us an expression for b entirely in terms of x, so I can go to this top part and I can get an equation that has nothing but x's in it.

373
00:35:12,930 --> 00:35:22,130
It'll be e to the one over x, all to the power x, I'm just replacing the b with what we found it to be, and that is supposed to equal x.

374
00:35:22,610 --> 00:35:34,210
But on the other hand, e to the one over x to the power x simplifies down to simply being e, and what we found is that x is equal to e.

375
00:35:35,210 --> 00:35:47,410
And by the way, so I was doing like a sort of a dry run of this lesson last night where sometimes I'll put out like a link to a stream on Twitter that's an unlisted link, and just say like as soon as a hundred of you hop on here I'm deleting the tweet and we're just going to do a dry run.

376
00:35:48,190 --> 00:36:01,370
And when I was solving this, for some reason I was just confuddled for like ten minutes where I got to this point and I'm like that can't be right, because we're looking for a value that's between 1.44 and 1.45, so x can't be e, that's way too big, that's like 2.718.

377
00:36:01,890 --> 00:36:06,250
So I went back and I was trying to think through like what have I done wrong, what on earth has gone wrong here?

378
00:36:06,250 --> 00:36:25,250
It was mildly embarrassing because it took so long, and then I ultimately realized no, you idiot, it's not that we're looking for a value of x that's between 1.44 and 1.45, that was the condition for b, for the base of our exponential when we were playing around over here.

379
00:36:26,150 --> 00:36:43,190
So x is just wherever they intersect, so it's fine for that to be around e, in fact that looks consistent that around where this point of tangency is, is e, which incidentally is also the output because this is happening with the line y equals x, so the point of tangency has coordinates e comma e, evidently.

380
00:36:43,890 --> 00:37:01,870
And what does that mean for the value of b itself once we solve? Well we have an exact expression for x, we have an expression for b in terms of x, so this would seem to imply that b is e to the power of 1 divided by e, which is such a delightfully bizarre answer, e to the power of 1 divided by e.

381
00:37:01,870 --> 00:37:13,310
And we can check with our calculator that that makes some sense, so if we hop on over here and I say, hey Desmos, what is e to the 1 over e? Not 1 over 3, 1 over e.

382
00:37:13,990 --> 00:37:23,870
Yeah, checks out, it is between 1.44 and 1.45, which is exactly what we were looking for, for the point when it goes from converging to exploding.

383
00:37:24,810 --> 00:37:37,190
Very satisfying, I think, finding that solution, that it's e to the 1 over e. As a challenge puzzle for you, if you want a little bit of homework today, I want you to find a lower bound on where this converges.

384
00:37:37,330 --> 00:37:51,890
So we found the highest value that will make this converge, but we can also start playing with values of b that are less than 1, and if we do that, I'll just kind of get rid of our cobweb here, if we do that there will be some value, I guess I should keep the cobwebbing,

385
00:37:51,890 --> 00:38:01,930
where it's no longer going to zero in on some exact value, and it instead becomes an unstable point. And the question for you is, when does that happen?

386
00:38:02,230 --> 00:38:09,930
When does it go from approaching the point where the two graphs intersect to no longer approaching it because it's unstable?

387
00:38:10,910 --> 00:38:19,150
And if you want a hint, think about the fact that the slope, in this case it's not a matter of when it's equal to 1, it's a matter of when it's less than negative 1.

388
00:38:19,770 --> 00:38:27,530
And if you want another hint, it should be an expression that also involves two e's inside of it. So, very fun puzzle if you want to get to it.

389
00:38:27,770 --> 00:38:35,690
And that will give you kind of a range of convergence for what values could we have as the base in our titration such that the power tower actually converges to something.

390
00:38:35,690 --> 00:38:43,850
And one thing that's noteworthy here is that it goes from converging to a value of e to just blowing up to infinity.

391
00:38:44,010 --> 00:38:58,590
It never converges to values between e and infinity, which maybe runs against intuition because you would think that it somehow smoothly blows up, that rather than going, oh it converges to 1, it converges to 2, it converges to e, and then discontinuously jumping to infinity.

392
00:38:59,110 --> 00:39:06,050
But that is apparently the behavior. And it happens just because the graphs were once tangent and then that's where they separate. They're kissing and then they stop kissing.

393
00:39:06,650 --> 00:39:10,590
And this answers for us what's going on in the case of the power tower with 4.

394
00:39:12,150 --> 00:39:16,090
So if you think back to the logic, where did we have it?

395
00:39:18,510 --> 00:39:18,950
Great.

396
00:39:20,090 --> 00:39:30,390
So if we have our power tower and I was saying solve for the value where this equals 4, well this assumes that such a value even exists, that this process will ever converge to be 4.

397
00:39:30,670 --> 00:39:33,650
But we just saw that it'll never converge to be anything that's bigger than e.

398
00:39:34,270 --> 00:39:40,810
So in particular the very first step where we make the substitution that's leveraging the assumption that a solution even exists, that's invalid.

399
00:39:41,250 --> 00:39:47,010
And the reason that it worked for 2 is because there does exist a value where this converges to 2.

400
00:39:47,090 --> 00:39:50,590
So when we make that initial substitution, that's a valid thing to do.

401
00:39:51,270 --> 00:39:56,730
And before we even solved it, you could have seen that there exists a value where it converges to 2 by looking at the graphs.

402
00:39:57,050 --> 00:40:07,370
What you would look for, even if you didn't know it was going to be square root of 2, what you would look for is when does this intersection point between the graphs happen at a y value of 2?

403
00:40:07,910 --> 00:40:11,230
I guess it's also an x value of 2 because it's on the line y equals x.

404
00:40:11,370 --> 00:40:13,530
But what we care about is that the y value should be 2.

405
00:40:13,770 --> 00:40:19,330
And you would be able to empirically start seeing that hmm, it's somewhere between 1.41 and 1.42.

406
00:40:19,690 --> 00:40:23,110
And you could binary search your way on down even a little bit further.

407
00:40:24,330 --> 00:40:25,870
So I think that's delightful.

408
00:40:26,210 --> 00:40:34,150
That you can take a look at this absolutely crazy singing process of a repeated power tower, that it converges at any points at all, which is counterintuitive.

409
00:40:34,150 --> 00:40:39,790
And that we can actually make very substantive statements about when it converges, thinking through iterative processes like this.

410
00:40:40,270 --> 00:40:42,990
And that's actually it for today. This is going to be a shorter lesson.

411
00:40:43,170 --> 00:40:48,950
That is the end of what I wanted to say about the power tower puzzle and leaving you with that little bit of homework.

412
00:40:49,950 --> 00:40:53,970
So for the very end here, I just want to take a couple more questions from Twitter.

413
00:40:53,970 --> 00:40:57,390
If you ask them with the hashtag locked down math, they might get forwarded to me.

414
00:40:57,690 --> 00:41:03,510
And anything about tetration and this process is exactly what we should talk about.

415
00:41:03,510 --> 00:41:08,590
Great. So, he says, if there's a triangle of exponents, is there a square of tetration?

416
00:41:09,250 --> 00:41:12,610
What uses are there for the inverses of tetration?

417
00:41:13,510 --> 00:41:17,670
Well, I mean, in either case, we'd be dealing with three different variables.

418
00:41:17,830 --> 00:41:22,910
There's the idea of what's the base, what's the height, and then what's the output.

419
00:41:23,390 --> 00:41:25,670
So in either case, we'd just be having three of them.

420
00:41:26,470 --> 00:41:32,830
The four in tetration, like what makes it four, is not the fact that there's three relevant numbers, you know,

421
00:41:32,930 --> 00:41:37,330
the base, the exponent, and then whatever the output. And then some new fourth thing.

422
00:41:37,530 --> 00:41:43,930
It's that in this process of addition, multiplication, exponentiation, it's kind of the fourth of our like repeating the process before.

423
00:41:45,250 --> 00:41:51,690
Next question from ML. Will you show us part of the fractal set of complex numbers x for which the power tower x to the x to the x to the x converges?

424
00:41:51,750 --> 00:41:53,470
I'm so happy that you asked, ML.

425
00:41:53,470 --> 00:42:00,990
Yes, you might wonder what happens if instead of our base equaling two, or instead of our base equaling square root of two,

426
00:42:01,130 --> 00:42:08,970
or 1.4, or all the values we were just looking at, what if you have some complex number like z that you're raising to a repeated power?

427
00:42:09,670 --> 00:42:14,410
Now there's a little bit of nuance there for what exactly it means to raise complex values to other complex values.

428
00:42:15,010 --> 00:42:19,770
And I think I'm going to talk about that. Don't hold me to it. I think I'll talk about that in the next lecture.

429
00:42:20,290 --> 00:42:25,130
It's very similar to what we see with real values where you can re-express it in terms of e,

430
00:42:25,470 --> 00:42:30,190
and then because we know how to think about e with complex numbers, you'll be able to do it.

431
00:42:30,390 --> 00:42:41,390
But if you are willing to grant the fact that there does exist a way that you can extend exponentiation to complex numbers, you could certainly repeat it.

432
00:42:41,450 --> 00:42:44,390
And when you repeat it, you can start asking about does this converge?

433
00:42:44,390 --> 00:42:55,090
And if you ask about when it converges, and if you go and you write a shader or whatever your favorite kind of program is to color all the pixels on the plane based on whether or not it converges, this is what you get.

434
00:42:56,090 --> 00:43:04,570
So what you're looking at right now, the axes aren't labeled, but the real axis is running across the middle of the screen from around negative 4.5 up to I think 3.

435
00:43:05,170 --> 00:43:09,450
And then the imaginary axis that's going from I think like negative 2i up to 2i.

436
00:43:09,450 --> 00:43:21,290
So this horizontal part of blackness corresponds to all the values that converge that we just found, where the upper bound was e to the 1 over e, and the lower bound is what you can find for homework if you want.

437
00:43:22,730 --> 00:43:28,390
But the other values above that diverge, and the coloring tells you how quickly they diverge.

438
00:43:28,530 --> 00:43:34,370
So yellow means that it explodes very quickly, blue means that it explodes less quickly, and so on.

439
00:43:34,370 --> 00:43:52,530
And so evidently what happens is as you allow for complex numbers, even if their real part is greater than e to the 1 over e, that imaginary part can conspire in just such a way that it makes it converge, and you get this totally intricate pattern, very analogous to the Mandelbrot set, which is also defined in terms of a certain repeated operation.

440
00:43:53,150 --> 00:44:00,750
And what this indicates is there's actually a lot more intricacy than you might expect associated with these power towers and this titration operation.

441
00:44:00,750 --> 00:44:19,150
And you get this a lot where repeated applications of something can yield chaos, and that chaos is often pictorially reflected in the fact that a fractal emerges, and it's kind of like the intricacy of the image is paralleled in the difficulty of predicting what the outputs are going to be.

442
00:44:19,550 --> 00:44:26,050
And just to illustrate the fact that the outputs can be difficult to predict, you want to know what an unsolved problem is, what no one in the world actually knows?

443
00:44:27,450 --> 00:44:34,890
Is if you can ever take a power tower with pis, so pi to the power pi to the power pi to the power pi, you do that.

444
00:44:35,390 --> 00:44:47,690
At any point, is this ever equal to an integer? Almost certainly not, it would seem highly unlikely because it's an irrational number and if you're thinking of it kind of probabilistically, but it's not probabilistic, it's a deterministic process.

445
00:44:47,690 --> 00:45:01,910
In fact, we don't even know for a power tower of height 4 if there's just 4 pis here. You take pi to the power pi, pi to the power of that, pi to the power of that, it ends up being a monstrous number, bigger than we can compute exactly.

446
00:45:02,210 --> 00:45:11,130
We don't have a way to prove whether or not this is an integer. And if you can prove that, you know, you will be contributing to the forefront of math.

447
00:45:12,070 --> 00:45:16,350
That's the level of what we actually don't know about these power towers, which I think is kind of interesting.

448
00:45:18,010 --> 00:45:24,770
Can I share the brainteaser where the arrow operator shows up? Yeah, fantastic. Let me, I can draw it out for you.

449
00:45:25,450 --> 00:45:40,190
I think this came from an IMO. This is something that Po-Shan-Lo was sharing with me at one point and I'm sure he has a talk about it somewhere that will be more illustrative than what I can talk about on the fly here.

450
00:45:40,190 --> 00:45:48,470
But the way this will work is that we have 6 different cups and each cup is going to start out with a single coin in it.

451
00:45:50,310 --> 00:46:04,190
And you have two different operations available to you. One of those operations is that you can remove the coin from one cup, so we'll remove it from one cup, but then two more coins will drop into the cup to its right.

452
00:46:04,750 --> 00:46:15,750
So there's a certain directionality to this. Two more will drop into the one to its right. So you can imagine from here we can then eliminate all three coins and then there would be six that just magically drop in.

453
00:46:16,450 --> 00:46:29,090
Five, six, magically drop into the next cup beside it. And if that was the only ability that you had, kind of a warm-up teaser is to understand that the maximum number of coins you can have ends up being 63.

454
00:46:29,090 --> 00:46:35,890
If you just sort of keep doing this process of taking out coins, doubling it, but shifted one over, you can get up to 63.

455
00:46:36,450 --> 00:46:49,490
Now if I introduce the second magical operation, which is that I can eliminate one of the coins in a cup, and instead of magically dropping two into the next one, I swap the two that are sitting right after it.

456
00:46:49,510 --> 00:46:56,570
I swap their positions. That's the second power that you have, which seems less magical because it doesn't require bringing about coins from the ether.

457
00:46:57,370 --> 00:47:11,350
I think the way that this was originally framed is, is the maximum amount of money that you can have after doing this process bigger or smaller than 2010 to the power 2010 to the power 2010?

458
00:47:12,050 --> 00:47:25,730
That was the question. When you have these two abilities and you start with six cups that each have one coin in them, will it be bigger, the maximum amount of money that you can get if you're clever enough, be bigger or smaller than that power tower of height three?

459
00:47:26,610 --> 00:47:38,250
And it's just, again, kind of absurd that that second operation would get you anywhere near that level of number because this is, I mean, this is just so huge. It's way bigger than anything you'll find in physics.

460
00:47:39,410 --> 00:47:44,530
Unless you're doing statistical mechanics or something like that. So, yeah, excellent question.

461
00:47:45,510 --> 00:47:56,110
And with that, unless there's anything more that people want to ask and which also ends up getting forwarded to me, I think I'm going to go ahead and call it a day on this one.

462
00:47:57,050 --> 00:48:08,310
And thank you for joining. I think I will ultimately probably have ten episodes in this lockdown series is what I'm thinking at the moment. So if you want to join for the next two, those will be the last two.

463
00:48:08,310 --> 00:48:10,390
Oh, great. We have another question.

464
00:48:12,310 --> 00:48:19,670
When you solved x to the x to the x on and on equals two and got x squared equals two, you ignored the negative square root of two. Awesome. Yeah.

465
00:48:20,170 --> 00:48:24,770
Yeah. A solution to x squared equals two. Can I explain why? Ah, yeah, that's absolutely outstanding.

466
00:48:25,110 --> 00:48:32,150
Let's so if we think about this graphically again, where that helps us be a little bit more concrete when it comes to what's going on with the iterative process.

467
00:48:32,150 --> 00:48:36,170
When I said B equal to around one point four one.

468
00:48:38,610 --> 00:48:43,250
OK, it seems like nothing's really happening around the negative square root of two.

469
00:48:43,830 --> 00:48:49,730
OK, so let's try to understand why that's happening. There's not even necessarily a an intersection at that point.

470
00:48:49,730 --> 00:48:57,590
So the reason we were taking square roots of two when we were looking at our power tower operations, if we remind ourselves.

471
00:49:01,170 --> 00:49:08,290
We had the assumption that there even exists an answer. This whole thing. No, not with an x at the top. It just goes up to infinity equals two.

472
00:49:08,910 --> 00:49:17,990
We saw the reflection of itself. X squared equals two. Let's think about what this would mean. What do we mean to have a negative square root here?

473
00:49:17,990 --> 00:49:25,170
Well, I guess what you'd be assuming is that you you're taking negative powers. Now that I think about it.

474
00:49:25,550 --> 00:49:32,130
If we said x equal to the negative square root of two. Then you'd be raising it in the next process.

475
00:49:32,130 --> 00:49:38,530
You would take negative square root of two. You would raise it to a negative power. OK, so raising to a negative power.

476
00:49:39,350 --> 00:49:44,390
We're already in the realm of thinking about negative square root of two to the one over.

477
00:49:45,030 --> 00:49:50,550
No, negative one over square root of two to the square root of two.

478
00:49:52,390 --> 00:49:56,190
Why doesn't that end up popping up in the intersection or anything like that?

479
00:49:56,730 --> 00:50:02,830
Actually, the more I think about it, there might be a very obvious answer to what's going on that I'm missing.

480
00:50:03,930 --> 00:50:12,210
Other than I mean, we can talk about. We can talk about the fact that negative numbers don't sit in the range of convergence.

481
00:50:12,390 --> 00:50:24,630
Like if you solve the homework problem, the assumption that there exists an x that's negative that converges like this would be false because you'll find that the the bound ends up.

482
00:50:25,150 --> 00:50:30,950
I think it ends up being e to the negative e. So in the same way that it failed, our logic failed in the case of four.

483
00:50:30,950 --> 00:50:36,710
Our logic fails if we just plug in square root of negative two. I'm kind of curious if that breaks down numerically.

484
00:50:36,810 --> 00:50:43,830
So if we do try this over in our python where let's again set equal to one.

485
00:50:44,170 --> 00:50:50,310
Let's find our for loop. We're now we're going to do the negative square root of two and repeat the process.

486
00:50:52,190 --> 00:50:56,150
Yeah, what do we get? We do get a stable point.

487
00:50:57,990 --> 00:51:06,110
Interesting. Negative square root of two. You look like you're a very stable point. You're not a stable point that's equal to two at all.

488
00:51:07,970 --> 00:51:10,170
What is that number? What's going on there?

489
00:51:12,510 --> 00:51:20,050
You know what? I'm not entirely positive. Now that now I have it now I have a decision to make it.

490
00:51:20,090 --> 00:51:26,730
Do I try to think about what exactly is going on on screen live rather than just calling it into the stream?

491
00:51:27,510 --> 00:51:33,250
Or do I do I think about it and then like pin that to a comment at the end?

492
00:51:36,930 --> 00:51:38,650
What's going on with our logic exactly?

493
00:51:40,670 --> 00:51:45,650
We're saying assume that there equals a value that converges to two. If there does it's going to satisfy this property.

494
00:51:46,930 --> 00:51:51,250
I mean because I guess what you can say is it's like x equals plus or minus square root of two.

495
00:51:52,430 --> 00:51:58,910
You try them both. One of them equals one of them doesn't. End of story. I mean this happens a lot when you're doing something algebraic.

496
00:51:58,910 --> 00:52:05,290
You have a manipulation like this. You have multiple possibilities but you just kind of plug them into check and one of them just doesn't work.

497
00:52:05,530 --> 00:52:10,920
But that's always very unsatisfying because what you want is some sort of answer to why it looked like it was going to work but didn't.

498
00:52:11,590 --> 00:52:18,010
So in the case of a power tower that equals four you could very clearly see why it didn't. The assumption that it even converged was false.

499
00:52:22,850 --> 00:52:31,890
And I guess in this case our assumption would be if we had negative root two, if we have a negative value, that what's sitting up here is still equal to two.

500
00:52:33,910 --> 00:52:41,250
I don't know. We saw that it doesn't. We can say when you're doing this you try them both and if one of them doesn't that's all it is.

501
00:52:41,570 --> 00:52:45,150
But that just doesn't feel satisfying to me so I'll think about that a little bit.

502
00:52:45,150 --> 00:52:53,410
If anyone has deeper thoughts share them in the comments of course. I would love to hear what you have to say as sort of a like what's going on with the square root of negative two.

503
00:52:53,750 --> 00:53:08,230
What does it converge to and why does it have any relation to this process which as we already saw is a faulty line of reasoning and like a little bit shaky to just replace what's inside your infinite power tower with the assumptions you've already made.

504
00:53:10,030 --> 00:53:25,110
Yeah I'll think on that. Excellent question and I think that's a great place to end it. Also I couldn't help but notice the Twitter handle for who was asking that because this is someone who's created these super beautiful notes for all of the lockdown series so far.

505
00:53:25,630 --> 00:53:35,110
Which I've been throwing in the video descriptions just because I'm like yeah this is, boy do I wish my handwriting looked anything like that. So if anyone wants to check them out she's done a beautiful job.

506
00:53:35,110 --> 00:53:42,750
And with that I will actually call it an end to today's lesson. I'll see you at Friday at the same time for our second to last in the lockdown math series.

