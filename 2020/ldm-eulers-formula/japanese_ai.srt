1
00:00:00,000 --> 00:00:05,000
ロックダウンの数学へようこそ!今日はオイラーの公式についてお話します。

2
00:00:05,000 --> 00:00:08,500
このレッスンの最終的な到達点を少しでも理解していただくために、最

3
00:00:08,500 --> 00:00:13,000
後に私たちが目指すもの、つまり特定の視覚化を示したいと思います。

4
00:00:13,000 --> 00:00:17,000
したがって、必ずしもこれをすぐに理解していただけるとは思いませんが、重

5
00:00:17,000 --> 00:00:20,000
要なのは、これが私たちが目指して歩んでいくものであるということです。

6
00:00:20,000 --> 00:00:27,000
私たちが分析しようとしているのは、複素平面で機能する方法で指数関数の概念を拡張したものです。

7
00:00:27,000 --> 00:00:33,000
そして、あなたが見ている図は、オイラーの公式の主張が何であるかを文字通りに示しています。

8
00:00:33,000 --> 00:00:37,000
なぜなら、私が皆さんに理解していただきたいのは、慣例が何であるかという特定の謎

9
00:00:37,000 --> 00:00:42,000
や問題に包まれるのではなく、実際の声明が何を言っているかということだからです。

10
00:00:42,000 --> 00:00:45,000
さて、言うまでもなく、これは一種の混乱を招くものです。

11
00:00:45,000 --> 00:00:50,000
このベクトルのスパイラルが存在します。それが完全に明確でなくても、心配する必要はありません。

12
00:00:50,000 --> 00:00:53,000
私たちがこの問題でどこに向かうのかを少しだけお伝えしたいと思います。

13
00:00:53,000 --> 00:00:57,000
しかし、その前に、一歩下がって、自分たちがどこにいたのかを思い出してみましょう。

14
00:00:57,000 --> 00:01:01,000
前回のレッスンの最後に戻り、複素数について話したときに、私たちが注目して

15
00:01:01,000 --> 00:01:07,000
いた複素数の主要なタイプの 1 つは、単位円上に存在する複素数でした。

16
00:01:07,000 --> 00:01:13,000
ここでは少し複雑な平面を描いています。点 1 と負の 1 が示された実数直線が得られました。

17
00:01:13,000 --> 00:01:17,000
虚数直線があり、i はマイナス 1 の平方根です。

18
00:01:17,000 --> 00:01:27,000
覚えていると思いますが、前回強調した重要な点の 1 つは、ある角度シータで原点から 1 単位離れた位

19
00:01:27,000 --> 00:01:32,000
置にある数値がある場合、この数値を乗算すると、その角度だけ物体を回転させる効果があるということです。

20
00:01:32,000 --> 00:01:36,000
これは、物理学、電気工学、数学全体にわたって非常に重要です。

21
00:01:36,000 --> 00:01:42,000
このような数字はどこでも見かけます。これらは波の力学を記述しており、多項式にとって非常に重要です。

22
00:01:42,000 --> 00:01:46,000
この単位円上にある数字がどれほど重要であるかを誇張することは非常に困難です。

23
00:01:46,000 --> 00:01:50,000
実数部と虚数部を使用してそれらを記述する方法の 1 つが挙げられます。

24
00:01:50,000 --> 00:01:56,000
講義 2 に基づいて、三角法を知っている場合、x 座標はその角度の余弦

25
00:01:56,000 --> 00:02:02,000
となり、虚数部である y 座標はその角度の正弦の i 倍になります。

26
00:02:02,000 --> 00:02:10,000
したがって、物理学全体、電気工学全体を通じて、シータの余弦とシータの i サインという式が見られると思うかもしれません。

27
00:02:10,000 --> 00:02:14,000
実際、よく見かけるのは、これの別の形式です。

28
00:02:14,000 --> 00:02:20,000
ほとんどの場合、これは e の i 乗×シータと表記されます。

29
00:02:20,000 --> 00:02:24,000
そして、この関係はオイラーの公式として知られています。

30
00:02:24,000 --> 00:02:30,000
さて、e は自然の特別な定数ですが、高校時代、それが正確に何であるかがまったく明確に理解できなかったのをいつも覚えています。

31
00:02:30,000 --> 00:02:36,000
それはただ受け継がれたものでした、まあ、それは2です。71828、続きます。

32
00:02:36,000 --> 00:02:42,000
そして、私たちはこれを pi の類似物として解釈しただけです。

33
00:02:42,000 --> 00:02:46,000
これは明らかに宇宙にとって重要であると考えられる無理数です。

34
00:02:46,000 --> 00:02:52,000
大統領のアンドリュー・ジャクソンは二期務めたので、それはアンドリュー・ジャクソンの数だと教えてくれた微積分の先生が一人いました。

35
00:02:52,000 --> 00:02:56,000
彼は 7 代目の大統領で、1828 年に選出されました。

36
00:02:56,000 --> 00:03:03,000
それでは、どうぞ。アンドリュー・ジャクソンがオイラーとのこの関係を評価したかどうかはわかりませんが、それは常に私が数字を思い出すのに役立ちました。

37
00:03:03,000 --> 00:03:12,000
さて、聴衆がどこにいるのか完全にわからないので、感情を測るためだけに、この特定の公式とあなたの現在の関係がどのようなものであるかを知りたいと思います。

38
00:03:12,000 --> 00:03:16,000
そこで、まずアンケートを実施します。このアンケートはほとんど私にとって役立ちます。

39
00:03:16,000 --> 00:03:28,000
それで、私たちが持っていたウォーミングアップの質問をいくつか集めてみると、明らかに、オイラーの公式の 1 つを選ぶとしたら、ほとんどの人が今日話している公式を選択するでしょう。それは素晴らしいことです。私たちが向かいたい場所を考えると、適切です。

40
00:03:29,000 --> 00:03:42,000
実際に役立つアンケートとして、次のうちどれが、公式 e の i 乗 theta に等しい theta の余弦と theta の正弦の i 倍との関係を最もよく表していますか?

41
00:03:42,000 --> 00:03:55,000
わかった？ここでの選択肢は、これまで見たことがない、まったく理解できる、見たことはあるが混乱している、まだ理解していないが慣れてきた、またはあなたはそれをよく理解しています。

42
00:03:55,000 --> 00:04:08,000
ご覧のとおり、答えは次々と出てきています。ぜひご参加ください！たくさん参加していただければ、とても楽しくなりそうです。3b1bまで行けます。コ スラッシュ ライブ。説明にもリンクがあり、このアンケートに回答できる場所に転送されます。

43
00:04:08,000 --> 00:04:20,000
答えは続々と出てきていますが、よく見かけるこの式のより有名な変形について思い出させていただきたいと思います。これは、基本的に pi を接続すると何が起こるかです。

44
00:04:20,000 --> 00:04:38,000
さて、それで、e を pi の i 倍にした場合、今度は pi を角度として考えます。これはラジアン数であり、単位円の周りの距離です。pi のコサインにサインの i 倍を加えたものを代入します。パイの。

45
00:04:38,000 --> 00:04:48,000
わかった？それについて考える方法は、単位円を見て、合計の距離が円周率になるまで歩き回ったらどうなるか、と尋ねることです。

46
00:04:48,000 --> 00:04:57,000
ご存知のとおり、半径 1 の湖で、円周率の定義によると、円周率の距離を移動するまで境界の周りを歩くと、円を半周することになります。

47
00:04:57,000 --> 00:05:07,000
したがって、x コンポーネント (コサイン) はマイナス 1 になり、y コンポーネント (サイン) は実際には 0 になるため、虚数部はなく、マイナス 1 になります。

48
00:05:07,000 --> 00:05:15,000
これで、数学の中で最も有名な方程式がわかります。e に i を掛けて pi がマイナス 1 に等しいということです。

49
00:05:15,000 --> 00:05:26,000
わかった？しかし、これは不可解で、本当に不可解です。なぜなら、定数を累乗するという考えがあり、それはそもそも e とは何なのかという少し希望的観測に満ちていますが、それを虚数乗まで上げることになるからです。

50
00:05:26,000 --> 00:05:31,000
そして、それが何を意味するのか理解できなくても、あなたは良い仲間だと言えますが、実際に理解している人は世界中でほとんどいないと思います。

51
00:05:31,000 --> 00:05:41,000
ここでアンケートに戻りますが、かなりの数の回答が得られ、かなりの広がりも得られました。私は今、誰と話しているのかを知りたいと心から思っています。

52
00:05:41,000 --> 00:05:45,000
わかった？なぜなら、すべての陣営にほぼ均等な分布があるように見えるからです。

53
00:05:45,000 --> 00:05:51,000
さて、一番多い答えは c で、まだ理解できないが慣れてきたという人です。

54
00:05:52,000 --> 00:06:03,000
これには、数学を専攻した人や工学を専攻した人、あるいはそれが頻繁に登場する技術分野に進んだ人などが含まれると思います。そのため、それに慣れる必要があります。

55
00:06:03,000 --> 00:06:17,000
これはまた、これらの講義が高校生を対象としているとしても、このチャンネルにはもともと一定のベース層が存在するという事実も明らかにしています。そのため、聴衆に座っている人は、むしろ、中に入って座っている大人のような場合もあります。クラスの後ろの方。

56
00:06:18,000 --> 00:06:24,000
d「よくわかりました」が 2 番目に多い回答であることがわかり、とてもうれしく思います。

57
00:06:24,000 --> 00:06:32,000
d と答えた人の中で、講義が終わるまでに、これについて理解したことが私がこれから教えることと同じだと言えるかどうかが気になります。

58
00:06:32,000 --> 00:06:39,000
なぜなら、たとえば、この式は実際には数値 e とは何の関係もない、と私は主張するからです。

59
00:06:39,000 --> 00:06:43,000
数値 e は、この式が計算的に何を示しているかに実際には影響を与えていないということです。

60
00:06:43,000 --> 00:06:47,000
そして、私はそれをよく理解していると主張する人々がその声明に同意するかどうか知りたいです。

61
00:06:47,000 --> 00:06:55,000
そのあとに、見たことはあるけど混乱している人がいて、最後に実際に見たことのない人のターゲット層が表示されます。

62
00:06:55,000 --> 00:07:04,000
ああ、それをターゲット層と呼ぶのが適切かどうかはわかりません。時々、あちこちで奇妙な状況で見かけると思うからですが、a または b と答えた人は間違いなく、あなたが私の仲間です。

63
00:07:04,000 --> 00:07:06,000
私がこの件について話したいのはあなたたちです、いいですか？

64
00:07:07,000 --> 00:07:14,000
でも、これを見たとしましょう。この奇妙な式 e から pi i 、または一般化 e から i に角度を掛けたものを見ることができます。

65
00:07:14,000 --> 00:07:25,000
これに対する健全な反応は、「わかった、初めてこれを見たばかりなら、なんてことだ」という健全な質問だと思います。

66
00:07:25,000 --> 00:07:32,000
機能は何ですか、またそれはどのように定義されますか?

67
00:07:32,000 --> 00:07:40,000
機能は何ですか?この場合、関数は e から x であり、特定の虚数の入力を接続しているためです。

68
00:07:40,000 --> 00:07:52,000
そして、多くの人は、これは数値 e を何回も乗算することを指し、x は単独で乗算する頻度を表すものだと考えていると思います。

69
00:07:52,000 --> 00:08:01,000
そして、そうです、それを 2 分の 1 や負の 1、あるいはあらゆる種類の実数などに拡張する概念がありますが、それは乗算を繰り返すという概念に基づいているということです。

70
00:08:01,000 --> 00:08:09,000
さて、この式が誤解を招くのは、それが関数ではないということです。それは、e から x への言及ではありません。

71
00:08:09,000 --> 00:08:15,000
そのことを非常に強調しておきます。これは、e から x を意味するものではありません。これはその慣例ではありません。

72
00:08:15,000 --> 00:08:23,000
その代わりに、数学で明らかになったのは、x に e を使用して、別の関数の省略表現にするということです。

73
00:08:24,000 --> 00:08:29,000
この関数に exp という名前を付けます。これは文学でよく見る方法です。

74
00:08:29,000 --> 00:08:45,000
そしてそれは特定の多項式として定義されます。それは、1 プラス x プラス x の 2 乗割る 2 プラス x の 3 乗割る 6 プラス x の 4 乗割る 24 です。

75
00:08:45,000 --> 00:08:54,000
そして実際には、それは多項式ではなく、無限多項式です。n を n 階乗で割ったものに x のような項を無限に追加します。

76
00:08:54,000 --> 00:09:07,000
これを表す適切な用語はシリーズです。実際にこれを計算する場合、分母は非常に急速に大きくなるため、かなり早い段階で系列を切り捨てて、これが実際に何であるかの近似値を取得できます。

77
00:09:07,000 --> 00:09:26,000
これで、プラグインできる多くの種類の x でこれが機能することがすぐにわかります。x を累乗する方法、整数の累乗方法、それ自体を掛ける方法を知っているもの、および階乗で割ってそれらを加算する方法を知っているものであれば、この経験値に適切な意味を思いつくことができます。機能という意味です。

78
00:09:26,000 --> 00:09:38,000
しかし、複素数のようなことに飛び込み、それを投入する前に、最初に数値 e と繰り返しの乗算の概念との関係を描かなければ、それを行うのは非常に満足のいくものではないと思います。

79
00:09:38,000 --> 00:09:47,000
なぜなら、表面的には、この無限多項式は、自然の特別な定数 e とそれをべき乗するという考えとは非常に異なっているように見えるからです。

80
00:09:48,000 --> 00:09:58,000
それでは、少し慣れを深めてみましょう。これには数分かかります。そして、いくつかの異なる値を接続してこの関数と仲良くなるのは、非常に健全な練習だと思います。

81
00:09:59,000 --> 00:10:10,000
最初に接続するのは番号 1 です。そうすれば 1 が得られ、x は 1 なので、1 になります。x の 2 乗は 1 のままなので、1/2 になります。

82
00:10:11,000 --> 00:10:21,000
そして6分の1。それから、1 24 です。そして一般に、1 を n 階乗で割ったものを加算します。

83
00:10:21,000 --> 00:10:31,000
数学では、項をさらに追加すると特定の値に近づき、特定の値にますます近づくという意味で、これを収束する級数と言います。

84
00:10:31,000 --> 00:10:39,000
そしてその値は最終的に約 2 になります。71828、アンドリュー・ジャクソンの番号。

85
00:10:39,000 --> 00:10:47,000
しかし、この時点では、それが何かになるだろうと考えてください。x of 1 は何かになるはずだった。これは 1 の x がたまたまそうなったものです。

86
00:10:47,000 --> 00:10:53,000
現時点では、必ずしも特別なことはありません。しかし、他の値を入力したいとします。

87
00:10:54,000 --> 00:11:06,000
それがどのようになるかを少し練習してみると、2 の x が必要な場合、1 プラス 2 プラス 2 の 2 の 2 乗と 2 の 3 乗の 6 のようになります。

88
00:11:07,000 --> 00:11:15,000
そして原則として、あなたが無人島にいて、2 の x を計算する必要があるだけであれば、長い除算に慣れていれば、これをすべて手作業で計算することができます。

89
00:11:15,000 --> 00:11:27,000
しかし、もちろん、私たちは現代世界に住んでおり、コンピューターがあり、プログラミングがあります。したがって、これを特に具体的にするために、実際にこの関数を実装して、いくつかの値を計算できるようにしましょう。

90
00:11:27,000 --> 00:11:33,000
そして、それがブラックボックスではなく、渡された単なる計算機ではなく、それが何をしているのか正確にわかるように実装します。

91
00:11:33,000 --> 00:11:42,000
そのために、少し Python を起動してみましょう。これはデスモスです。それについては少し後で説明するかもしれません。ここで、もう少しプログラム的に見てみましょう。

92
00:11:42,000 --> 00:11:48,000
Python を起動して、数学をインポートしてみましょう。それは、あなたが常に楽しいことをしている証拠だからです。

93
00:11:48,000 --> 00:11:53,000
次に、数値 x を受け取る exp 関数を定義します。

94
00:11:53,000 --> 00:12:05,000
そして、私が望むのは、1 プラス x プラス x の 2 乗のようなものを返すことです。Python では、この 2 倍、何と呼びますか、アスタリスク、この 2 つのアスタリスク記号は、累乗を行う方法です。

95
00:12:05,000 --> 00:12:10,000
そして、x の 3 乗を 6 として計算し、それを合計したいと考えます。

96
00:12:10,000 --> 00:12:21,000
もちろん、すべてを入力する代わりに、少し特殊な構文を使用して、多数の用語の合計を返したいと言うことができます。

97
00:12:21,000 --> 00:12:28,000
各項は x を何らかの累乗するように見えますが、それが渡されたものであるため、x が何であるかを知っています。

98
00:12:28,000 --> 00:12:36,000
x を階乗で割った値の累乗。n の階乗。そして、それは私たちがインポートしたこの数学パッケージに組み込まれています。

99
00:12:36,000 --> 00:12:43,000
そして、0 から始まる n の値に対してこれを行うだけです。興味があれば、0 階乗は 1 として定義されます。

100
00:12:43,000 --> 00:12:49,000
奇妙な値の階乗については後日お話しすることもできますが、ここで知っておく必要があるのはこれだけです。

101
00:12:49,000 --> 00:12:54,000
100 階乗は膨大になるため、範囲を 100 までにします。

102
00:12:54,000 --> 00:13:00,000
したがって、分母が十分に小さくなり、後の項があまり寄与しないほど十分に大きくなります。

103
00:13:01,000 --> 00:13:09,000
したがって、たとえあなたが Python を知らなくても、これが数学をコンピューターが処理できるもの

104
00:13:09,000 --> 00:13:12,000
に変換し、私たちが計算する必要がないように数値を処理するかなり明確な方法であることを願っています。

105
00:13:12,000 --> 00:13:19,000
たとえば、「x of 1」と入力すると、アンドリュー ジャクソン番号が得られます。2.71828、延々と続きます。

106
00:13:19,000 --> 00:13:25,000
x of 2 と入力すると、約 7 になるようです。389.

107
00:13:25,000 --> 00:13:35,000
だから、それをメモに書くこともあるかもしれません。ここに戻って、興味深いことに、2 の x は約 7 だったと言います。389.

108
00:13:35,000 --> 00:13:46,000
わかった。長い時間をかけてこれをちょっといじってみると、これが見つかるかどうかは明ら

109
00:13:46,000 --> 00:13:50,000
かではないと思いますが、3 の x と 4 の x といういくつかの値を入

110
00:13:50,000 --> 00:13:57,000
力しただけだとすると、1 つの重要な事実がわかります。入力に 2 つの数値

111
00:13:57,000 --> 00:14:03,000
を追加すると、この場合、3 に 4 を加えた 7 を入力すると 1096

112
00:14:03,000 --> 00:14:10,000
が得られます。実際には、x を入力した場合と同じになります。 4回×3回。

113
00:14:10,000 --> 00:14:16,000
わかった。したがって、入力の加算は出力の乗算に相当します。

114
00:14:16,000 --> 00:14:25,000
ここでは 3 と 4 は特別ではありませんでした。5 を行うこともできました。5と3。2、そしてそれは私にある程度の価値をもたらしたでしょう。

115
00:14:25,000 --> 00:14:30,000
代わりに、それらを合計した場合、同じ値が得られます。

116
00:14:30,000 --> 00:14:37,000
それは全く明らかではありませんね。したがって、この関数、この多項式に関して、もし

117
00:14:37,000 --> 00:14:40,000
それが何かを見つけたとしたら、それは真の発見になると思います。

118
00:14:40,000 --> 00:14:43,000
とても重要なことなので、書き留めておきたいと思います。

119
00:14:45,000 --> 00:14:57,000
a に b を加えた exp は、実際には a の exp に b の exp を掛けたものと同じです。

120
00:14:58,000 --> 00:15:01,000
多項式だけを見ても、これは明確ではありません。

121
00:15:01,000 --> 00:15:06,000
そうですね、これは、それを見て、ああ、もちろん、他の方法はありえなかったと言うようなものではありません。

122
00:15:06,000 --> 00:15:12,000
ただし、今日のレッスンの最後に、皆さんに宿題を出します。そうです、宿題は学習をより良くするのに役立ちます。

123
00:15:12,000 --> 00:15:17,000
そして、私たちがやろうとしていることは、この事実が真実であることを証明するために、いくつかの問題を検討することです。

124
00:15:17,000 --> 00:15:23,000
申し訳ありませんが、単純に多項式から、そしてそれにこれらの階乗項が含

125
00:15:23,000 --> 00:15:26,000
まれているという事実だけで、この非常に特殊な性質を示すのに十分です。

126
00:15:26,000 --> 00:15:29,000
さて、なぜ私はそれを非常に特別なプロパティと呼ぶのでしょうか?

127
00:15:29,000 --> 00:15:34,000
そうですね、これを明らかにするために、ある質問をしたいと思います。

128
00:15:34,000 --> 00:15:42,000
そして、これを自分自身で考えることが本当に重要です。なぜなら、私たちが、えー、ここでその意味を

129
00:15:42,000 --> 00:15:46,000
ちょっとだけ話したとしても、実際に自分で考えた場合と同じ程度には理解できないと思うからです。

130
00:15:46,000 --> 00:15:51,000
そこで、別の質問を提起し、この質問について考える時間を与えたいと思います。

131
00:15:53,000 --> 00:15:59,000
この質問が私たちに尋ねているのは、この特別な特性を持つ関数 f of x があると仮定することです。入

132
00:15:59,000 --> 00:16:07,000
力に 2 つの数値を加算する (a の f に b を加える) と、出力で乗算する (f を a 倍す

133
00:16:07,000 --> 00:16:10,000
るのと同じ結果が得られます)。 f of b、そしてこれは任意の実数 a と b に当てはまります。

134
00:16:10,000 --> 00:16:14,000
わかった？この特性を満たす関数があるとします。それがどのように定義されているかを誰が気にするでしょうか。

135
00:16:14,000 --> 00:16:17,000
この多項式を使用するか、他の手段を使用するかに関係なく。

136
00:16:17,000 --> 00:16:19,000
次の中でどれが正しいですか？

137
00:16:19,000 --> 00:16:24,000
オプションの 1 つは、5 の f が 1 の 5 乗に等しいというものです。

138
00:16:24,000 --> 00:16:29,000
もう 1 つは、1/2 の f は 1 の f の平方根に等しいということです。

139
00:16:29,000 --> 00:16:33,000
もう 1 つは、負の 1 の f は、1 を f の 1 で割った値に等しいです。

140
00:16:33,000 --> 00:16:39,000
ここで非常に重要なことですが、私はこれら 3 つのことが真になる関数 f が存在するかどうかを尋ねているのではありません。

141
00:16:39,000 --> 00:16:43,000
私は、これらのどれがその性質からのみ必然的に真でなければならないかを尋ねています。

142
00:16:43,000 --> 00:16:49,000
したがって、それを満たさない何らかの敵対関数を考案することはできないはずです。

143
00:16:49,000 --> 00:16:55,000
そして、これら 3 つの要素のどれが当てはまるかについては、さまざまな選択肢があります。

144
00:16:55,000 --> 00:16:59,000
これは本当に重要なことだと思うので、少し考える時間を与えます。

145
00:16:59,000 --> 00:17:03,000
そこで、一時停止の速度を上げて、気分を盛り上げるために音楽について考えてみます。

146
00:17:05,000 --> 00:17:08,000
そして、どうしても必要な水を飲みましょう。

147
00:17:19,000 --> 00:17:25,000
あなたがそれについてうなずいている間、私は先に進み、聴衆からの質問を受け付けます。

148
00:17:25,000 --> 00:17:32,000
サーフト氏は、高レベルの数学の初心者にとって何がより興味深いと思いますか、と尋ねているように見えます。

149
00:17:32,000 --> 00:17:38,000
e 対 i pi のような特殊な場合の定理、または e 対 i x のようなより一般的な場合。

150
00:17:38,000 --> 00:17:43,000
ああ、それはとても素晴らしい質問ですね。ちなみに、質問したい人は Twitter にアクセスして、ハッシュタグ ロックダウンの計算を使用してください。

151
00:17:43,000 --> 00:17:45,000
それらは私に転送されます。

152
00:17:45,000 --> 00:17:55,000
学習するための最良の方法は、具体的な例を用意し、その具体例が表すパターンを実際に理解してから一般化することだと思います。

153
00:17:55,000 --> 00:18:05,000
ここにある具体的なものについては、e から i pi までを見ただけでは、一般性を説明する良い具体例とは言えないと思います。

154
00:18:05,000 --> 00:18:09,000
特定の数値を数式に代入しているだけです。

155
00:18:09,000 --> 00:18:22,000
この場合、e から ix までは、ご覧のとおり、円運動とすべて関係しています。この講義と次の講義の間に、なぜその関係が存在するのかについて説明します。

156
00:18:22,000 --> 00:18:30,000
したがって、理解を助ける具体的な例を持つ形式は、i に対する e のような数字ではありません。

157
00:18:30,000 --> 00:18:38,000
それは、ある種の向心力を持つテザーボールがあり、それが周回している物理学の研究など、他の状況での円運動との関係を構築することになります。

158
00:18:38,000 --> 00:18:43,000
あるいは軌道力学のようなもの。円運動の性質を本当に理解しているものなら何でも。

159
00:18:43,000 --> 00:18:48,000
これにより、e から ix までを一般論としてもう少しよく理解できるようになります。

160
00:18:48,000 --> 00:18:56,000
とはいえ、答えはまだ出てきているので、焦ってほしくないのです。

161
00:18:56,000 --> 00:19:00,000
そこで、実際には、ここでもう少し時間をいただきたいと思います。

162
00:19:00,000 --> 00:19:14,000
覚えておいてください、答えに 2 や 3 や 1 のようなものが含まれていると言っている場合、この特殊なプロパティを持つ関数は必然的にそれに従うことを本当に確認する必要があるからです。

163
00:19:14,000 --> 00:19:15,000
わかった？

164
00:19:19,000 --> 00:19:24,000
ああ、一番上の答えが年である場合に採点できるかどうか見てみましょう。

165
00:19:24,000 --> 00:19:31,000
2017年というと、少し昔のことになります。2013年、トップの答えを失いつつあります。興味深いことに、人々の考えは変わりつつあります。まるで過去に戻ったかのようです。

166
00:19:31,000 --> 00:19:37,000
それで、何人かの人が、ああ、今は 2023 年の未来にいるようです。

167
00:19:37,000 --> 00:19:44,000
そうですね、実際に人々がそれについて考え、「ちょっと待って、ここでの選択肢 3 が必ずしも正しいということなのでしょうか?」と考えているのを私たちは目にしています。

168
00:19:44,000 --> 00:19:47,000
そして彼らはそれについて本当に批判的です。それは良い兆候です。

169
00:19:47,000 --> 00:20:02,000
ずっと考え続けたいなら、そうしてください。しかし、レッスンを続けるために、ここで物事を固定して、人々が最終的にどのように答えたかを確認することにします。

170
00:20:02,000 --> 00:20:09,000
つまり、2030 年、つまり 10 年後の未来には、これら 3 つがすべて必ず真実であると信じているようです。

171
00:20:09,000 --> 00:20:14,000
2 番目に多かった回答は B で、彼らは最初の回答が正しいとしか信じていません。

172
00:20:14,000 --> 00:20:19,000
それから、2番か3番を入れた人たち。

173
00:20:19,000 --> 00:20:26,000
そして正解は、それらはすべてそうです。そして、その理由を説明するのは非常に興味深いです。とてもわかりやすいと思います。

174
00:20:26,000 --> 00:20:28,000
それでは、先に進んでこれを実行しましょう。

175
00:20:28,000 --> 00:20:42,000
1 つ目は、皆さんの大多数が信じているようですが、この特別なプロパティを持つ関数に 5 のようなものを接続すると、1 の f を 5 番目に上げたものと同じになるということです。

176
00:20:42,000 --> 00:20:50,000
その理由は、5 を 1 プラス 1 プラス 1 プラス 1 プラス 1 と書くこともできるからです。

177
00:20:51,000 --> 00:21:02,000
そして、入力での加算が出力での乗算になるというこの性質は、1 の x を 5 回乗算して書くのと同じことを意味します。

178
00:21:04,000 --> 00:21:10,000
これにより、全体を 1 の x という観点から書き直すことができます。これを 5 回言います。

179
00:21:11,000 --> 00:21:17,000
これは、1 の x の 5 乗をとるのと同じです。

180
00:21:17,000 --> 00:21:24,000
そしてここで私が指数関数を書いているとき、自然数または整数を見るときはいつでも、それは文字通りその数を単独で乗算することを意味する可能性があります。

181
00:21:24,000 --> 00:21:29,000
それは、e から x までがこのクレイジーな多項式の略記であるという事実と同じではありません。

182
00:21:29,000 --> 00:21:32,000
そのため、指数は 2 つの異なる役割を果たしているため、少し混乱することがあります。

183
00:21:32,000 --> 00:21:38,000
そして、1 の x に特別な名前、つまり省略形を付けることもできます。略して e と呼びましょう。

184
00:21:38,000 --> 00:21:44,000
ちなみに、この数字を e と呼ぶのはそのためではありません。それはオイラーの名前がこれで始まっているからでもありません。

185
00:21:44,000 --> 00:21:52,000
それは、オイラーが特定の本で初めてこれを使用するたびに、彼は母音に偏っていて、母音 a がすでに使用されていたからです。

186
00:21:52,000 --> 00:21:54,000
つまり、e は彼の任意の文字にすぎませんでした。

187
00:21:54,000 --> 00:22:01,000
さて、単純にこの性質のおかげで、5 の exp は 1 の x に関して書かれなければならないことが分かります。

188
00:22:01,000 --> 00:22:05,000
さて、少し難しいのは、半分のプラグの接続に関する質問です。

189
00:22:06,000 --> 00:22:13,000
わかった？これを解決する鍵は、少し難しいのですが、これを単独で乗算すると何が起こるかを考えることです。

190
00:22:13,000 --> 00:22:24,000
この性質のため、半分の経験値×半分の経験値は、半分の経験値に半分の経験値を加えたものを満たす必要があります。

191
00:22:24,000 --> 00:22:31,000
これはもちろん exp の 1 です。これを短縮表現を使用して e と呼ぶことにします。

192
00:22:32,000 --> 00:22:38,000
それで、それは何を意味するのでしょうか？半分の Exp は、それを掛けると e に等しくなるような数値でなければなりません。

193
00:22:38,000 --> 00:22:41,000
それが平方根を書くときの意味です。

194
00:22:43,000 --> 00:22:50,000
最後はネガティブなインプットについての話でした。たとえば、マイナス 1 のような値を入力したとします。

195
00:22:51,000 --> 00:22:57,000
したがって、ここで重要なのは、1 を入力するときに値を乗算することについて尋ねることです。

196
00:22:58,000 --> 00:23:07,000
この規則により、入力での加算は出力での乗算に変わり、それは exp が 0 と同じでなければなりません。

197
00:23:08,000 --> 00:23:14,000
さて、経験値0とは何でしょうか？ああ、私が何を認識しているか知っていますか？ふーむ。

198
00:23:15,000 --> 00:23:18,000
実際には間違った答えを入力してしまったのかもしれないと思います。

199
00:23:18,000 --> 00:23:25,000
なぜなら、この場合、exp 0 が実際には数値 1 になるからです。

200
00:23:25,000 --> 00:23:32,000
x に 0 を代入すると、これらすべてを足し合わせると、重要な項は 1 だけになります。

201
00:23:32,000 --> 00:23:37,000
したがって、マイナス 1 の exp に 1 の exp を掛けた値は、0 の exp、つまり 1 に等しくなります。

202
00:23:37,000 --> 00:23:46,000
したがって、これはexpの場合にも当てはまります。それが必ずしも真実かどうかは、今は自分自身で実際に考えることはできません。

203
00:23:46,000 --> 00:23:53,000
私たちの質問を見ると、f についてわかっているのは、a に b を加えたものは、a の f に b を掛けたものであるということだけです。

204
00:23:53,000 --> 00:23:58,000
それが必然的に 0 の f が 1 になることを意味する場合。

205
00:23:58,000 --> 00:24:02,000
それはないと思いますが、関数を構築できると思います。

206
00:24:02,000 --> 00:24:05,000
そうですね、他の量で e を x にスケールすることができるからです。

207
00:24:05,000 --> 00:24:09,000
そうですね、実際のところ、ここで評価されたものは完全に正しいわけではありません。

208
00:24:09,000 --> 00:24:13,000
正解は 1 と 2 だけになります。私は思う。

209
00:24:13,000 --> 00:24:17,000
もし私が間違っていたら、誰かがTwitterで私を訂正してください。

210
00:24:17,000 --> 00:24:19,000
でも、とても興味深いです。

211
00:24:19,000 --> 00:24:22,000
それでは、論文に戻って見てみましょう。

212
00:24:22,000 --> 00:24:28,000
exp の場合、0 でのこの値は 1 になります。それは何を意味するのでしょうか？

213
00:24:28,000 --> 00:24:35,000
さて、1 の exp を e と呼ぶ場合、e を掛けると 1 に等しくなる数は何かを尋ねていることになります。

214
00:24:35,000 --> 00:24:37,000
そして、それは 1 を e で割ったものになります。

215
00:24:37,000 --> 00:24:43,000
ただし、一般的なケースでは、0 を入力すると 1 が得られるという追加条件が必要です。

216
00:24:44,000 --> 00:24:52,000
さて、このすべての要点、私がこのことを言っている理由は、速記法を使用することがなぜ合理的であるかを強調することです。

217
00:24:52,000 --> 00:24:59,000
実数 x に対して x の exp と言うとき、これを e の x 乗と書くのが非常に合理的である理由は次のとおりです。

218
00:24:59,000 --> 00:25:10,000
基本的にこの特別なプロパティは、数値 1 を使用して、必要に応じて加算したり、除算したり、否定したりすることで、ほぼすべての実数にアクセスできることを意味するからです。

219
00:25:11,000 --> 00:25:17,000
そして、有理数からすべての実数に拡張できる特定の連続性制限がある場合。

220
00:25:17,000 --> 00:25:22,000
しかし、これは技術的な点であり、私たちが現在行っていることについて大騒ぎする必要はありません。

221
00:25:22,000 --> 00:25:29,000
基本的に、この多項式が出力できるすべてのものを、数値 1 での出力に関して表現できます。

222
00:25:29,000 --> 00:25:37,000
したがって、この多項式が入力 1 で何であれ、それに関して累乗を開始することができます。

223
00:25:38,000 --> 00:25:45,000
それがつながりですよね？必要に応じて、数値 e を単純に定義することもできます。この多項式の数値 1 はどこにあるでしょうか?

224
00:25:45,000 --> 00:25:47,000
そして、これらすべてが続くことになります。

225
00:25:47,000 --> 00:25:51,000
しかし、私が本当に強調したいのは、それが実数の場合にのみ意味をなすことです。

226
00:25:51,000 --> 00:25:58,000
なぜなら、複素数のようなものを導入し始めると、単に 1 を足したり、引いたり割ったりして数値 i を求めることはできないからです。

227
00:25:58,000 --> 00:26:10,000
そして数学では、さらにクレイジーなことをすることがよくあります。この多項式に行列などを組み込むのです。奇妙に思えますが、行列を 2 乗したり、2 で割ったり、次のすべてを加算したりできます。それらは一緒です。

228
00:26:10,000 --> 00:26:17,000
そしてそれは実際にとても便利なことなのです。これは微分方程式と呼ばれる分野に非常に役立ち、ひいては物理学にも役立ちます。

229
00:26:18,000 --> 00:26:25,000
量子力学では、行列の成熟した兄のようなものである演算子と呼ばれるものを組み込むことがよくあります。

230
00:26:25,000 --> 00:26:31,000
そして、ある種の累乗された定数について話している場合、これらすべてはまったくナンセンスに見えます。

231
00:26:31,000 --> 00:26:34,000
しかし、理解しなければならないのは、それがこの多項式に組み込まれているということです。

232
00:26:34,000 --> 00:26:41,000
したがって、これを x まで e と書く慣例がある理由がわかりました。実数であれば意味が分かります。

233
00:26:41,000 --> 00:26:47,000
しかし、拡張を開始するとすぐに、これは実際には悪い慣習であり、多くの過度の混乱を引き起こすと思います。

234
00:26:47,000 --> 00:26:53,000
以上のことを踏まえて、最後にいくつかの複雑な値を追加して楽しんでみましょう。

235
00:26:53,000 --> 00:27:00,000
そして、その前に、ウォーミングアップのようなものとして、i の累乗に慣れているかどうかを確認したいと思います。それがここで重要になるためです。

236
00:27:00,000 --> 00:27:09,000
それでは、クイズを終了して、もう 1 つ質問しましょう。それから、皆さんがこれについて考えている間、私も聴衆からの質問を受け付けます。

237
00:27:11,000 --> 00:27:16,000
i は、i の 2 乗がマイナス 1 に等しいという条件を満たす値として定義されていることに注意してください。

238
00:27:16,000 --> 00:27:24,000
それで、それは定義されています。n のどの値について、i の n 乗は負の i に等しくなりますか?

239
00:27:24,000 --> 00:27:29,000
したがって、この質問の趣旨は、人々に i の累乗について深く考えてもらうことです。

240
00:27:29,000 --> 00:27:37,000
そして、それが完全に自明ではない質問であるため、少し精神的なエネルギーを費やす必要がある質問にしたかったのです。

241
00:27:37,000 --> 00:27:45,000
それでは、私が水を飲みながら、聴衆からの質問を受けてみましょう。

242
00:27:49,000 --> 00:27:54,000
x の f が 0 に等しいということは、負の 1 の f が 1 の f よりも 1 に等しい場合には機能しません。

243
00:27:54,000 --> 00:28:01,000
はい、x の f は 0 に等しいです。ああ、興味深いですね、はい、わかりました。

244
00:28:01,000 --> 00:28:08,000
つまり、x の f が 0 を出力したとしても、実際のところ、サムが何を言っているのかよくわかりません。

245
00:28:08,000 --> 00:28:13,000
x の f が 0 に等しいということは、負の 1 の f が 1 の f よりも 1 に等しい場合には機能しません。

246
00:28:17,000 --> 00:28:25,000
したがって、負の 1 の f が 1 の f よりも 1 であるという事実は、出力が 0 になることを意味しないと思います。

247
00:28:25,000 --> 00:28:32,000
したがって、いくつかの説明を求めることもできますが、それは質問の間違いの一般的な点に達している可能性があると思います。それは、e

248
00:28:32,000 --> 00:28:41,000
xpの概念を少し拡張しすぎていると仮定することであり、expが0であるという事実1 に等しいと、この他のプロパティが得られます。

249
00:28:41,000 --> 00:28:49,000
そして、クリスピン・シモンズは、x の f に 0 を加えたので 3 が含まれると言いました。ああ、わかりました、はい、わかりました、素晴らしい、素晴らしいです。

250
00:28:49,000 --> 00:28:55,000
そう、ライブやカメラの前でプレッシャーを受けながら、私よりももう少し深く考えてくれた人がいたのです。

251
00:28:55,000 --> 00:29:02,000
x の f に 0 を加えたものは、x の f に 0 を掛けたものと同じです。これは、x の f が 1 に等しいことを意味します。すごいよ、クリスピン、あなたは私を救ってくれた。

252
00:29:02,000 --> 00:29:06,000
あなたはこの問題で私を救ってくれました。それは素晴らしい考え方ですね。

253
00:29:06,000 --> 00:29:11,000
そうですね、関数のプロパティのようなものがあり、事実を推測する必要があるこれらの質問はすべて、非常に微妙なものになる可能性があります。

254
00:29:11,000 --> 00:29:16,000
この場合、問題は正しく採点されました。

255
00:29:17,000 --> 00:29:24,000
入力での加算が出力での乗算になるという単純な特性だけで、0 の f が 1 に等しい

256
00:29:24,000 --> 00:29:27,000
ことを暗示するのに十分であり、これにより、負の 1 の f の値がロックされます。

257
00:29:27,000 --> 00:29:33,000
ああ、とても嬉しいですね。連続性を想定していないため、実数直線全体ではなく、1 つの小さなプロパティで基本を

258
00:29:33,000 --> 00:29:37,000
ロックできますが、必要なほぼすべての値をロックできます。素晴らしい、素晴らしい質問です。

259
00:29:37,000 --> 00:29:43,000
ライブネタが大好きなんです。たとえ間違いがあっても、通常のビデオよりも少しインタラクティブに感じられます。

260
00:29:43,000 --> 00:29:47,000
それでは、クイズの結果を見てみましょう。どうやらまだ答えが出ているようだ。

261
00:29:47,000 --> 00:29:54,000
私たちは、i のどのべき乗が負の i と等しいかを理解しようとしています。

262
00:29:54,000 --> 00:30:00,000
また、オプションには、3 の倍数、または正である限り 3 の倍数、または 4 の倍

263
00:30:00,000 --> 00:30:07,000
数より 1 つ下の整数、または正であることだけに制限されているものが含まれます。

264
00:30:08,000 --> 00:30:11,000
そして、この質問を採点してみます。

265
00:30:11,000 --> 00:30:15,000
そしていつものように、私が締めるまでに自分のことが終わっていないと感じたとし

266
00:30:15,000 --> 00:30:19,000
ても、それはレッスンを先に進めるためだけであることを知っておいてください。

267
00:30:19,000 --> 00:30:23,000
立ち止まって自分自身でさらに詳しく考えたい場合、特に後でこれを視聴して

268
00:30:23,000 --> 00:30:27,000
いる場合、それは完全にこれらのレッスンの精神に沿ったものになります。

269
00:30:27,000 --> 00:30:36,000
さて、大多数、あるいはおそらく複数の方が、すべて 4 の倍数より 1 つ下の整数であると答えました。これは正しいです。

270
00:30:36,000 --> 00:30:42,000
2 番目に多かった回答は基本的に同じですが、肯定的なものに限定されていました。

271
00:30:42,000 --> 00:30:46,000
わかりました。では、i の累乗が実際にどのようなものかを考えてみましょう。この

272
00:30:46,000 --> 00:30:52,000
exp 関数に複素数値を代入するために実際に必要なのはこれだけだからです。

273
00:30:52,000 --> 00:30:57,000
そして、単位円の無限の供給を引き出した場合にこれが機能する方法は、

274
00:30:57,000 --> 00:31:03,000
複素平面での乗算には回転成分が含まれることを覚えておくことです。

275
00:31:03,000 --> 00:31:07,000
i の大きさは 1 なので、回転のみが存在します。

276
00:31:07,000 --> 00:31:11,000
したがって、i を掛けると 90 度回転する効果があります。

277
00:31:11,000 --> 00:31:17,000
i を 2 回掛け、i を 2 乗すると、最終的に 180 度回転します。

278
00:31:17,000 --> 00:31:22,000
マイナス 1 の 2 乗を持つはずであり、このジオメトリはその事実と一致しています。

279
00:31:22,000 --> 00:31:30,000
i を 3 乗するために 3 回乗算すると、最終的には真下を指すベクトルになります。

280
00:31:31,000 --> 00:31:37,000
4 回目に 90 度で乗算すると 1 に戻ります。

281
00:31:37,000 --> 00:31:41,000
したがって、i から 4 番目までは 1 となり、その後はすべて繰り返しが始まります。

282
00:31:41,000 --> 00:31:46,000
したがって、基本的に知る必要があるのは、4 のべき乗に関してその指数がどこにあるかだけです。

283
00:31:46,000 --> 00:31:51,000
4の累乗なら1です。4 の累乗を 1 上回る場合、i になります。

284
00:31:51,000 --> 00:31:58,000
さて、この質問のややこしさは、これが肯定的な力のみに当てはまるのか、否定的な力にのみ当てはまるのかというニュアンスも含むことです。

285
00:31:58,000 --> 00:32:05,000
しかし、負のべき乗が何を意味するかというと、負の 1 に i のようなものを書くと、

286
00:32:05,000 --> 00:32:09,000
それは i に対して 1 であると定義され、それを掛けると 1 になるような数です。

287
00:32:09,000 --> 00:32:13,000
そして、それは実際に私が三乗したものと同じであることがわかります。

288
00:32:13,000 --> 00:32:19,000
これは、i を掛けると 1 になる数値なので、i の 3 乗と同じです。

289
00:32:19,000 --> 00:32:23,000
マイナス 1、これは 4 の倍数の 1 未満でもあります。

290
00:32:23,000 --> 00:32:29,000
そして一般に、すべての 4 の負の倍数よりも 1 小さいものはすべて、この特性も満たします。

291
00:32:29,000 --> 00:32:33,000
少し難しい質問ですが、i と整数のべき乗によって 90 度前

292
00:32:33,000 --> 00:32:38,000
進するという考えについて深く考えていただきたかったからです。

293
00:32:38,000 --> 00:32:40,000
そして最後に、楽しい時間を過ごすことができます。

294
00:32:40,000 --> 00:32:49,000
クレイジーな exp 関数を使用して、必要に応じてそれを Python にプラグインして、そこでどのように動作するかを確認することができます。

295
00:32:49,000 --> 00:32:52,000
まずは、それを視覚化してみましょう。

296
00:32:53,000 --> 00:32:59,000
それで、私は、えー、ほら、その円はすでに暗示的に描かれていますが、私はそれがそこにあることを望まないのです。

297
00:32:59,000 --> 00:33:04,000
ある種の定数でスケールされた i を代入するこの多項式について考えていただきたい

298
00:33:04,000 --> 00:33:07,000
のですが、非常に示唆に富んだ名前に theta を付けますが、これが意味するのは

299
00:33:07,000 --> 00:33:13,000
1 プラス i 倍です。シータに i シータを 2 乗したものを繰り返します。

300
00:33:13,000 --> 00:33:18,000
ほんの一例として、シータを 1 になるまで上げてみましょう。

301
00:33:18,000 --> 00:33:22,000
そして、これが実際に計算的に何を意味するのかをかなり深く考えてみましょう。

302
00:33:22,000 --> 00:33:28,000
最初の項は 1 で、この緑色のベクトルを下に描き、1 単位を右に向けます。

303
00:33:28,000 --> 00:33:35,000
次の項は i 倍 1 になるので、i だけです。マグニチュード1で真上を向いています。

304
00:33:35,000 --> 00:33:37,000
さて、次の学期が何になるかを考えてみましょう。

305
00:33:40,000 --> 00:33:46,000
i の 2 乗、または i シータの 2 乗になりますが、シータは 1 なので、i の 2 乗、つまり 2 の 1 をマイナスしたものになります。

306
00:33:46,000 --> 00:33:51,000
そのため、この次のベクトルは左を指し、長さは半分になります。

307
00:33:52,000 --> 00:33:56,000
その後、i の 3 乗を真下に向けて 6 で割ります。

308
00:33:56,000 --> 00:34:02,000
つまり、大きさが 6 分の 1 の小さなベクトルがあり、そこからさらに小さくなります。

309
00:34:02,000 --> 00:34:07,000
次のものは右を向いていますが、マグニチュード 1 は 24 で、全体が縮小するだけです。

310
00:34:07,000 --> 00:34:12,000
そして、私たちは何かを得るのです。これが理にかなった計算であることは明らかです。

311
00:34:12,000 --> 00:34:15,000
それがどこで終わるのかをどうやって知るのかは不明です。

312
00:34:15,000 --> 00:34:19,000
それには、背後にある種の理論を持たせるために本物の数学が必要になるように感じます。

313
00:34:19,000 --> 00:34:26,000
計算能力が高くなって Python を起動すると、実際には複素数のサポートが組み込まれていることを思い出してください。

314
00:34:26,000 --> 00:34:32,000
2, 3 の複素数のようなものを書くと、実数部 2 と虚数部 3 からなる複素数が得られます。

315
00:34:32,000 --> 00:34:36,000
そして素晴らしいのは、掛け算のルールをすでに知っていることです。

316
00:34:36,000 --> 00:34:40,000
したがって、これに他のものを掛け合わせることができます。同社は自社製品の使い方を知っています。とてもかっこいい。

317
00:34:40,000 --> 00:34:48,000
さて、この指数関数の定義は、覚えておいていただけると思いますが、これまでは何かをべき乗し、それを階乗でスケールするという観点だけでした。

318
00:34:48,000 --> 00:34:59,000
そして、これらの項をすべて足し合わせます。そうですね、複素数 0, 1 のようなものをプラグインするのは理にかなっているはずです。これは、Python で i を書く方法であり、それが何が飛び出すかを確認する方法です。

319
00:34:59,000 --> 00:35:06,000
そして実際、それは数値を処理し、明らかにその本当の部分が存在するものを私たちに提供します。54.誰かわかったね？

320
00:35:06,000 --> 00:35:13,000
そして、その虚数部は誰の周りにありますか。84.私たちのビジュアルに関しては、それは間違いありません。

321
00:35:13,000 --> 00:35:18,000
実物はもう少し上にあるようです。5、それで。54、私はそう信じています。

322
00:35:18,000 --> 00:35:24,000
そして、虚数部は、何であると主張しました。84?はい、それは正しいようです。

323
00:35:24,000 --> 00:35:29,000
この時点で、オイラーの公式の主張は何なのかを実際に考えることができます。

324
00:35:29,000 --> 00:35:32,000
ここでの行動は何を物語っているのでしょうか?

325
00:35:32,000 --> 00:35:38,000
そして私の希望は、オイラーの公式が神秘的な始まりであったかもしれないということですが、悪い意味で神秘的でした。

326
00:35:38,000 --> 00:35:50,000
わかった？なぜなら、最初にこの式を見たとき、e から i シータはコサイン シータと i サイン シータを足したものに等しいので、ああ、虚数指数が単位円に乗ってくれるのだと思います。

327
00:35:50,000 --> 00:35:58,000
実際のパターンについて疑問が残るのではなく、慣例が何なのか疑問に思うだけです。不思議に思うでしょう、何ということでしょう。

328
00:35:58,000 --> 00:36:07,000
ただし、現時点でわかるのは、シータの i 倍を入力すると、これは明らかに単位円の周りを歩くのと同じであることがわかります。

329
00:36:07,000 --> 00:36:11,000
これは非常に本質的なものに感じられますが、その表現には多くの内容が含まれています。

330
00:36:11,000 --> 00:36:25,000
なぜなら、ビジュアルを見ると、シータの値を大きくすると、ベクトルの合計が収束する場所は常に半径 1 の円上に位置することがわかります。

331
00:36:25,000 --> 00:36:33,000
それは明らかではありません。この表現を見て、文字通りに何を言っているのかをよく考えてみると、それは決してパッと思い浮かぶものではありません。

332
00:36:33,000 --> 00:36:42,000
しかし、私の意見では、それははるかに美しくなります。なぜなら、あなたはもはや慣例に疑問を抱くのではなく、宇宙や実際のパターンに疑問を抱くようになるからです。

333
00:36:42,000 --> 00:36:50,000
したがって、存在する最も有名な入力を取得するために、pi を 3 付近に接続します。14、これが実際に何を言っているのか考えてみましょう。

334
00:36:51,000 --> 00:36:56,000
つまり、最初の項は 1 なので、ベクトルは 1 単位右に向いています。

335
00:36:56,000 --> 00:37:06,000
次の項は i 倍 pi です。さて、これは i の pi の長さが約 3 であるため、上向きのベクトルになります。14、それはそのようです。

336
00:37:06,000 --> 00:37:15,000
次は、i の 2 乗に pi の 2 乗を 2 乗したものになります。つまり、i の 2 乗は負であることを意味します。わかりました、左を向いています。

337
00:37:15,000 --> 00:37:23,000
そして、その大きさは円周率の2の2乗だと思います。必要に応じて、簡単な直感チェックを行って、「円周率の 2 乗とは何ですか?」と自問することもできます。

338
00:37:23,000 --> 00:37:30,000
9時くらいです。8、メートル/秒の二乗で表した地球上の重力と同じです。これはいつでも楽しいものです。

339
00:37:30,000 --> 00:37:42,000
それを2で割ると4になるようです。93.さて、それはチェックアウトですか？はい、このベクトルの長さは 5 未満であるため、4 とします。93.

340
00:37:42,000 --> 00:37:48,000
そして次のものは、i の 3 乗により下向きになり、大きさは 6 の pi の 3 乗になります。

341
00:37:48,000 --> 00:37:55,000
明らかに、これは円周率の 6 の 3 乗に相当します。そして、これまでベクトルは大きくなっていきましたが、この時点でベクトルは向きを変え始めます。

342
00:37:55,000 --> 00:38:02,000
なぜなら、基本的に毎回、新しい項ごとに、分子に追加の円周率がスローされるからです。

343
00:38:02,000 --> 00:38:08,000
しかし、分母にはさらに 4 が投入されます。6 から 24 になるのと同じように、4 を掛けます。

344
00:38:08,000 --> 00:38:18,000
そしてさらに 5 が追加され、さらに 6 が追加されます。したがって、分母は分子よりもはるかに大きくなり始めるため、ベクトルはどんどん縮小して点に収束し始めます。

345
00:38:18,000 --> 00:38:24,000
つまり、そこに含まれる i によって、これらのベクトルはすべて毎回 90 度回転し、この非常に美しいスパイラル サムが得られます。

346
00:38:24,000 --> 00:38:37,000
そして、オイラーの公式の主張は、明らかに、ベクトルが i のべき乗に従って回転し、その長さが pi の n 乗で割ったべき乗に従って変化するとき、それらはすべて

347
00:38:37,000 --> 00:38:47,000
正しい方法で共謀するという非常に魅力的な事実です。彼らはマイナス 1 の点に着陸します。それは面白い。まだまだ謎ですが、良い意味で神秘的です。

348
00:38:48,000 --> 00:38:57,000
そして、それはさらに強力な主張をしています。それは、他の角度を入れると、その角度の単位円上に置かれるということです。

349
00:38:57,000 --> 00:39:07,000
この値が増加し続けるままにしておくと、関数が周期的であるかどうかさえ明らかではないという事実を考えると、これは特に不思議です。

350
00:39:07,000 --> 00:39:20,000
右？なぜなら、シータが増加するにつれて、より多くのベクトルが関連するようになります。これは、項の分母が勝つまでにますます時間がかかるためです。それでも、ベクトルは単位円内に非常にうまく制限されたままになります。

351
00:39:20,000 --> 00:39:33,000
それは面白いと思います。そこで、ここで最後の小さな概念チェックを行うために、基本的に注意を払っているかどうか、主張が理にかなっているかどうかを確認するために、最後に 1 つ質問します。

352
00:39:33,000 --> 00:39:41,000
i の力を取り除いて、最後の質問は、夜の締めくくりの質問です。

353
00:39:44,000 --> 00:39:49,000
次の値のうち、3i の e に最も近い値はどれですか?

354
00:39:49,000 --> 00:39:57,000
さて、いつものように、これがあなたがアクセスできるリンクです。次の値のうち、3i の e に最も近い値はどれですか?

355
00:40:03,000 --> 00:40:32,000
答えているときに、このレッスンから得てほしい主なポイントは、これを読むときの読み方は、定数 e の虚数乗について考えることではないということです。

356
00:40:32,000 --> 00:40:43,000
なぜなら、累乗を繰り返しの乗算として考える場合、それは実際には意味をなさないからです。しかし、どうなるでしょうか。

357
00:40:44,000 --> 00:40:50,000
。。見てみましょう。。。最後の質問については議論があるようです。それについては後ほど説明します。

358
00:40:51,000 --> 00:40:57,000
しかし、ここで考えなければならないのは、e から x までがこの一般多項式の短縮形であるという事実です。

359
00:40:57,000 --> 00:41:08,000
そして、この一般多項式は、将来の講義で微積分などのことに非常に関連していることがわかります。なぜ x を n 階乗上の n に変換し、それらを加算するのかについて話したいと思います。

360
00:41:08,000 --> 00:41:12,000
なぜそれが役立つのでしょうか?なぜ誰も気にするのでしょうか？なぜ回転を与えるのでしょうか？

361
00:41:13,000 --> 00:41:21,000
しかし、そのように読むことができると知っているなら、これがナンセンスな質問ではないことを願っています。また、慣習を盲目的に信じろという質問でもないことを願っています。

362
00:41:21,000 --> 00:41:27,000
これは円周に従うという事実についての主張を盲目的に信じるように求めているようなものですが、これについては次の講義で取り上げます。

363
00:41:27,000 --> 00:41:30,000
そして、これを評価するのに十分な時間だと思います。

364
00:41:31,000 --> 00:41:38,000
そして正解は b で、約 3,800 人が見事に正解しました。よくやった、本当によくやった。

365
00:41:38,000 --> 00:41:42,000
そしてマイナス0くらいです。99プラス0。14i.

366
00:41:42,000 --> 00:41:46,000
つまり、あなたが頭の中でそれを計算できる機械であることは期待されていません。

367
00:41:46,000 --> 00:41:55,000
代わりに、シータの値を差し込んでいるビジュアルに戻って、3 を差し込むとどうなるかを尋ねるという考えです。

368
00:41:55,000 --> 00:42:01,000
オイラーの公式の主張は、単位円の周りを 3 単位歩くということです。

369
00:42:01,000 --> 00:42:11,000
円周率の単位で一周できることがわかっているので、3 単位で実数部がマイナス 1 にかなり近くなり、虚数部が正の値になるはずです。

370
00:42:11,000 --> 00:42:14,000
そして、あなたに与えられた選択肢のうち、そこにあるのはそれらだけでした。

371
00:42:15,000 --> 00:42:23,000
さて、ここで最後に強調したいのは、この実際の式は数字 E とは何の関係もないということです。

372
00:42:23,000 --> 00:42:26,000
2という数字と関係があります。71828 以降。

373
00:42:26,000 --> 00:42:36,000
実行されている計算に行くとしたら、実数部が 0 で虚数部が pi である複素数の exp のようなものを代入するとします。

374
00:42:37,000 --> 00:42:45,000
最初はマイナス 1 以外のものを出力しているように見えるかもしれませんが、実数部がマイナス 1 であり、数値エラーがあることを示しています。

375
00:42:45,000 --> 00:42:52,000
部分的には、私たちがそれを定義した方法が原因で、ご存知の通り、非常に多くの項しか処理しなかったことが原因であり、部分的にはコンピューターが無限の精度を実現できないためです。

376
00:42:52,000 --> 00:42:59,000
虚数部、3と言っているように見えるかも知れません。45 ですが、実際には 10 倍のマイナス 16 を意味します。

377
00:42:59,000 --> 00:43:00,000
ということです。

378
00:43:00,000 --> 00:43:09,000
なので基本的には0です。これを確認したい場合は、numpy をインポートして丸めるようなことを行うこともできます。

379
00:43:09,000 --> 00:43:16,000
それで、これを小数点以下 8 桁に四捨五入すると、基本的にはマイナス 1 であることがわかります。

380
00:43:16,000 --> 00:43:21,000
これは、pi i に対する e がマイナス 1 であることを示すために作成した関数です。

381
00:43:21,000 --> 00:43:27,000
ただし、強調したいのは、その関数のどこにも値 2 が含まれていないということです。718.

382
00:43:27,000 --> 00:43:34,000
実際、この計算の実行中にコンピューターのメモリのどこにも値 2 が現れることはありません。718.

383
00:43:34,000 --> 00:43:41,000
その値は、円周率 i がマイナス 1 に等しいという方程式 e とは関係がないと思います。

384
00:43:41,000 --> 00:43:43,000
それはちょっと面白いですよね？

385
00:43:44,000 --> 00:43:52,000
少なくとも、その関係が何であるかを書き出しましょう。なぜなら、e と pi の間に関係がないと言うつもりはなく、関係があるからです。

386
00:43:52,000 --> 00:44:04,000
しかし、非常に有名な有名人の方程式 e を pi に対して i はマイナス 1 に等しいと書くと、この e とその pi の間にある関係がかなり誇張されてしまうと思います。

387
00:44:04,000 --> 00:44:16,000
実際に何が起こっているのかというと、定義した関数 exp があり、実数値を代入するとき、先ほど説明した理由により、 exp

388
00:44:16,000 --> 00:44:26,000
を記述するのが理にかなっているということです。 x は、1 の値が何であれ、1 の exp を x に累乗したものです。

389
00:44:26,000 --> 00:44:34,000
そして、私たちはその値を 1 e の exp と呼ぶことがあります。これは関数のプロパティです。

390
00:44:34,000 --> 00:44:43,000
これに関するもう 1 つの事実は、虚数を代入すると、オイラーの公式の主張が成り立つということです。これが

391
00:44:43,000 --> 00:44:48,000
なぜ真実であるかは示していませんが、この公式が主張しているのは、基本的には周期的であるということです。

392
00:44:48,000 --> 00:44:59,000
それは円周上を歩き、周期は 2 π i です。

393
00:44:59,000 --> 00:45:03,000
基本的に、その入力を 2 pi i 増やすと、開始した場所に戻ります。

394
00:45:03,000 --> 00:45:06,000
さらに具体的に言えば、円に沿って歩くことによって行われます。

395
00:45:06,000 --> 00:45:12,000
つまり、これらの定数はそれぞれ x の関数 exp の子であるということになりますよね?

396
00:45:12,000 --> 00:45:16,000
しかし、それらの関係は、異なる次元に沿って起こります。

397
00:45:16,000 --> 00:45:19,000
それがこの公式を理解する健全な方法だと思います。

398
00:45:19,000 --> 00:45:25,000
次回の講義では、なぜこの物体がぐるぐる歩き回るのかについてお話します。

399
00:45:25,000 --> 00:45:33,000
それには必然的に微積分が少し含まれるため、ここで少し微積分を混ぜてみましょう。

400
00:45:33,000 --> 00:45:35,000
でもできる限り最小限で。

401
00:45:35,000 --> 00:45:39,000
その前に、いくつか宿題を残したいと思います。

402
00:45:39,000 --> 00:45:46,000
覚えていると思いますが、階乗を含むこの奇妙な多項式を数値 e に関連付ける中心

403
00:45:46,000 --> 00:45:50,000
的な特性は、入力での加算は出力での乗算と同じであるということだったからです。

404
00:45:50,000 --> 00:45:59,000
次回までに、これを採点するつもりはありません。これは、ご存知のとおり、自分の時間に自分の方法で行うものです。

405
00:46:00,000 --> 00:46:07,000
質問 1 つ目は、x の exp を y の exp 倍に完全に展開すると、この関数が何であるかを

406
00:46:07,000 --> 00:46:12,000
自分で書き留めたことがあるかもしれませんが、それはすべて階乗的なものであることを示してください。

407
00:46:12,000 --> 00:46:21,000
これを展開すると、各項が x の k 倍 y の m を k 階乗 m 階乗で割った形式になることを示します。

408
00:46:21,000 --> 00:46:24,000
特定の整数 k と m について。

409
00:46:24,000 --> 00:46:27,000
ゼロ階乗は 1 であると定義されていることを覚えておいてください。

410
00:46:28,000 --> 00:46:35,000
質問 2 は、x と y の exp を展開すると、つまり入力で加算すると、各項は、n 階乗倍

411
00:46:35,000 --> 00:46:45,000
n 選択 k、x の k 倍 y の n マイナス k のようなものになることを示します。

412
00:46:45,000 --> 00:46:49,000
この用語に慣れていない場合は、n を選択して、二項公式を見てください。これに関する優れたビデ

413
00:46:49,000 --> 00:46:54,000
オが YouTube にたくさんあると思います。見つけ次第、説明にリンクを残しておきます。

414
00:46:54,000 --> 00:46:56,000
しかし、それが真実であることを示してください。

415
00:46:56,000 --> 00:47:02,000
質問 3 では、この重要な特性を説明するために、先ほど見つけた 2 つの結果を比較します。

416
00:47:02,000 --> 00:47:08,000
この関数を特別な定数に関連付けるものと、それを累乗するという考え方です。

417
00:47:08,000 --> 00:47:15,000
そして、おまけの質問をする気があるなら、これは世界中の余分な功績すべてに対するもの

418
00:47:15,000 --> 00:47:20,000
です。正当化してください。x と y が複素数の場合、この結果は依然として真にな

419
00:47:20,000 --> 00:47:23,000
りますか、そして、それでもそうなりますか?行列の場合は true になりますか?

420
00:47:23,000 --> 00:47:30,000
実際、これはどのような種類の入力に対していつ当てはまるのかを理解するために実行する非常に重要な演習だと思います。

421
00:47:30,000 --> 00:47:36,000
なぜなら、先ほども言ったように、数学にどんどん深く関わっていくと、このexp関数は依

422
00:47:36,000 --> 00:47:39,000
然として非常に重要であり、どんどんワイルドに見えるものを組み込むようになるからです。

423
00:47:39,000 --> 00:47:45,000
これは便利で、本当に便利です。どのプロパティが引き継がれ、どのプロパティが引き継がれないのかを知ることが重要です。

424
00:47:45,000 --> 00:47:49,000
さて、事前に友人とこの講義について少し話していて、ロックダ

425
00:47:49,000 --> 00:47:53,000
ウン数学シリーズの精神は高校の授業に似ていると話しました。

426
00:47:53,000 --> 00:47:58,000
そして、彼は私を怪訝そうな目で見て、これは高校の話題ですか? と言いました。

427
00:47:58,000 --> 00:48:00,000
そして正直な答えは分かりません。

428
00:48:00,000 --> 00:48:07,000
私が言えることは、高校のときにiシータに対する式eに出会った場合であるということです。

429
00:48:07,000 --> 00:48:11,000
私が初めてこれを目にしたのは、複素数について学習している時だったと思います。

430
00:48:11,000 --> 00:48:18,000
複素数の極表現として教えられたのは、2 つのものを乗算すると、

431
00:48:18,000 --> 00:48:22,000
その大きさと角度が加算されるというこの考えを強調するためです。

432
00:48:22,000 --> 00:48:25,000
しかし、それはまさに天から与えられた奇妙なものでした。

433
00:48:25,000 --> 00:48:33,000
この多項式における e と x の関係を教える通常の方法は、テイラー級数と呼ばれる微積分の一部から得られます。

434
00:48:33,000 --> 00:48:37,000
そして、関数 e から x までの関数から始めます。これは常に、自分の選択するコースに

435
00:48:37,000 --> 00:48:42,000
応じて少し希望的で甘い方法で定義され、それがこの多項式に接続されていることを示します。

436
00:48:42,000 --> 00:48:45,000
しかし、逆に進めない理由はないと思います。

437
00:48:45,000 --> 00:48:52,000
そして実際、これを見たかったと思います。数学を通して、特により深い数学を通して、e から x

438
00:48:52,000 --> 00:48:55,000
への式が実際に何を意味するのかを最初から知っていればよかったと思います。

439
00:48:56,000 --> 00:49:03,000
それでは、これで適切な講演を終了し、聴衆からさらにいくつかの質問を受けて話を終わらせたいと思います。

440
00:49:03,000 --> 00:49:07,000
私たちの講義の精神である内なる活動を維持してください。

441
00:49:08,000 --> 00:49:11,000
大丈夫。素晴らしい、素晴らしい、もっと議論したい。これ大好き。

442
00:49:11,000 --> 00:49:17,000
クリスピンの証明は間違っています。x の定数関数 f はゼロに等しい。ああ、素晴らしい！素晴らしい反例。

443
00:49:17,000 --> 00:49:23,000
おそらくこのことが頭の片隅でくすぶっていたのだと思います。これは特別なことではないと思います。素晴らしい。

444
00:49:23,000 --> 00:49:28,000
つまり、常にゼロに等しい関数の場合が考えられます。

445
00:49:28,000 --> 00:49:36,000
そして、先ほど、私がよく理解できなかった質問をしていた人がいたとしても、これがあなたが言いたいことのはずだと思いますが、私はそうではありませんでした。私がそれを適切に読んでいなかっただけです。

446
00:49:36,000 --> 00:49:42,000
しかし、そうです、それはゼロの f が必ずしも 1 であるとは限らない関数になります。美しい！

447
00:49:42,000 --> 00:49:46,000
さて、私がその質問は間違っていると言ったのに、それは間違っていないと言いましたが、実際には間違っていました。

448
00:49:46,000 --> 00:49:52,000
ですから、エリック・マース、そしてカメラの前でライブをしている私よりも物事をより明確に考えることができるすべての人に感謝します。

449
00:49:53,000 --> 00:49:56,000
すると別の人も全く同じことを指摘する。

450
00:49:56,000 --> 00:50:03,000
これ大好き！これは実際のクラスとまったく同じです。私はここにいます、私は間違いを犯します、あなたはそこにいます、あなたはそれを修正しなければなりません。

451
00:50:03,000 --> 00:50:07,000
そして、それが見ている人全員にとって良いものになると思います。正当な議論が必要だ。

452
00:50:07,000 --> 00:50:17,000
exp 関数の場合に重要なのは、関数が常にゼロではなく、入力 x がゼロである場合に実際には 1 に等しいということです。

453
00:50:17,000 --> 00:50:22,000
しかし、私はこの議論が大好きで、物事を終わらせるのにここ以上に適した場所はないと思います。

454
00:50:22,000 --> 00:50:32,000
それでは、いつものように、ご参加いただきありがとうございます。これが、インターネット上で非常に人気のあるトピックについて、他のクラスで通常見られるものとは少し異なる視点を提供するのに役立つことを願っています。

455
00:50:32,000 --> 00:50:39,000
少なくとも数学に関しては。そして次回は、なぜそれが真実なのか、そしてこの円がどこから来るのかについて話すつもりです。それではよろしくお願いします。

